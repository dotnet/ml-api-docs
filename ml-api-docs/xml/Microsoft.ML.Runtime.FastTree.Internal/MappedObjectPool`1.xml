<Type Name="MappedObjectPool&lt;T&gt;" FullName="Microsoft.ML.Runtime.FastTree.Internal.MappedObjectPool&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class MappedObjectPool&lt;T&gt; where T : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MappedObjectPool`1&lt;class T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.FastTree.Internal.MappedObjectPool`1" />
  <TypeSignature Language="VB.NET" Value="Public Class MappedObjectPool(Of T)" />
  <TypeSignature Language="F#" Value="type MappedObjectPool&lt;'T (requires 'T : null)&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>
            Implements a paging mechanism on indexed objects.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MappedObjectPool (T[] pool, int maxIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T[] pool, int32 maxIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.MappedObjectPool`1.#ctor(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pool As T(), maxIndex As Integer)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.FastTree.Internal.MappedObjectPool&lt;'T (requires 'T : null)&gt; : 'T[] * int -&gt; Microsoft.ML.Runtime.FastTree.Internal.MappedObjectPool&lt;'T (requires 'T : null)&gt;" Usage="new Microsoft.ML.Runtime.FastTree.Internal.MappedObjectPool&lt;'T (requires 'T : null)&gt; (pool, maxIndex)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pool" Type="T[]" />
        <Parameter Name="maxIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pool">A pool of objects on top of which the paging mechanism is built</param>
        <param name="maxIndex">The maximal index</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ML.Runtime.FastTree.Internal.MappedObjectPool`1" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public bool Get (int index, out T obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Get(int32 index, [out] !T&amp; obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.MappedObjectPool`1.Get(System.Int32,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (index As Integer, ByRef obj As T) As Boolean" />
      <MemberSignature Language="F#" Value="member this.Get : int *  -&gt; bool" Usage="mappedObjectPool.Get (index, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="obj" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index">The requested index</param>
        <param name="obj">The retrieved object</param>
        <summary>
            If the given index maps to a cached object, that object is retrieved and the return value is true.
            If the index is not cached, an object from the pool is retrieved (possibly paging-out the least-recently used) and the return value is false.
            </summary>
        <returns>true if the index was found, false if a new object was assigned from the pool</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.MappedObjectPool`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="mappedObjectPool.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Resets the MappedObjectPool
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Steal">
      <MemberSignature Language="C#" Value="public void Steal (int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Steal(int32 fromIndex, int32 toIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.MappedObjectPool`1.Steal(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Steal (fromIndex As Integer, toIndex As Integer)" />
      <MemberSignature Language="F#" Value="member this.Steal : int * int -&gt; unit" Usage="mappedObjectPool.Steal (fromIndex, toIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fromIndex">To be added.</param>
        <param name="toIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>