<Type Name="IThreadTask" FullName="Microsoft.ML.Runtime.FastTree.Internal.IThreadTask">
  <TypeSignature Language="C#" Value="public interface IThreadTask" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IThreadTask" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.FastTree.Internal.IThreadTask" />
  <TypeSignature Language="VB.NET" Value="Public Interface IThreadTask" />
  <TypeSignature Language="F#" Value="type IThreadTask = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Interface for a decomposable task that runs on many threads
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="RunTask">
      <MemberSignature Language="C#" Value="public void RunTask ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunTask() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.IThreadTask.RunTask" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunTask ()" />
      <MemberSignature Language="F#" Value="abstract member RunTask : unit -&gt; unit" Usage="iThreadTask.RunTask " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>