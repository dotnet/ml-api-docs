<Type Name="DcgCalculator" FullName="Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator">
  <TypeSignature Language="C#" Value="public sealed class DcgCalculator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DcgCalculator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DcgCalculator" />
  <TypeSignature Language="F#" Value="type DcgCalculator = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class DcgCalculator sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class DcgCalculator sealed" />
  <TypeSignature Language="C++ WINRT" Value="class DcgCalculator sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DcgCalculator (int maxDocsPerQuery, string sortingAlgorithm, int topNDocsForIdealDcg = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 maxDocsPerQuery, string sortingAlgorithm, int32 topNDocsForIdealDcg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator.#ctor(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (maxDocsPerQuery As Integer, sortingAlgorithm As String, Optional topNDocsForIdealDcg As Integer = 0)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator : int * string * int -&gt; Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator" Usage="new Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator (maxDocsPerQuery, sortingAlgorithm, topNDocsForIdealDcg)" />
      <MemberSignature Language="C++ WINRT" Value=" DcgCalculator(int maxDocsPerQuery, std::wstring const &amp; sortingAlgorithm, int topNDocsForIdealDcg = 0);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="maxDocsPerQuery" Type="System.Int32" />
        <Parameter Name="sortingAlgorithm" Type="System.String" />
        <Parameter Name="topNDocsForIdealDcg" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxDocsPerQuery">the maximum number of documents per query</param>
        <param name="sortingAlgorithm">a string describing the sorting algorithm to use</param>
        <param name="topNDocsForIdealDcg">specifies the ideal DCG@ computation.</param>
        <summary>
            Constructs a DCG calculator
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DCG1">
      <MemberSignature Language="C#" Value="public static double DCG1 (double[] scores, short[] labels, int begin, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 DCG1(float64[] scores, int16[] labels, int32 begin, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator.DCG1(System.Double[],System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DCG1 (scores As Double(), labels As Short(), begin As Integer, end As Integer) As Double" />
      <MemberSignature Language="F#" Value="static member DCG1 : double[] * int16[] * int * int -&gt; double" Usage="Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator.DCG1 (scores, labels, begin, end)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double DCG1(cli::array &lt;double&gt; ^ scores, cli::array &lt;short&gt; ^ labels, int begin, int end);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static double DCG1(Platform::Array &lt;double&gt; ^ scores, Platform::Array &lt;short&gt; ^ labels, int begin, int end);" />
      <MemberSignature Language="C++ WINRT" Value=" static double DCG1(std::Array &lt;double&gt; const &amp; scores, std::Array &lt;short&gt; const &amp; labels, int begin, int end);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scores" Type="System.Double[]" />
        <Parameter Name="labels" Type="System.Int16[]" />
        <Parameter Name="begin" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="scores">vector of scores</param>
        <param name="labels">vector of labels</param>
        <param name="begin">index of first document in query</param>
        <param name="end">index of first document in next query</param>
        <summary>
            Calculates the natural-based pessimistic DCG@1 of scores(query)
            </summary>
        <returns>DCG@1</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DCG3">
      <MemberSignature Language="C#" Value="public static double DCG3 (double[] scores, short[] labels, int begin, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 DCG3(float64[] scores, int16[] labels, int32 begin, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator.DCG3(System.Double[],System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DCG3 (scores As Double(), labels As Short(), begin As Integer, end As Integer) As Double" />
      <MemberSignature Language="F#" Value="static member DCG3 : double[] * int16[] * int * int -&gt; double" Usage="Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator.DCG3 (scores, labels, begin, end)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double DCG3(cli::array &lt;double&gt; ^ scores, cli::array &lt;short&gt; ^ labels, int begin, int end);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static double DCG3(Platform::Array &lt;double&gt; ^ scores, Platform::Array &lt;short&gt; ^ labels, int begin, int end);" />
      <MemberSignature Language="C++ WINRT" Value=" static double DCG3(std::Array &lt;double&gt; const &amp; scores, std::Array &lt;short&gt; const &amp; labels, int begin, int end);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scores" Type="System.Double[]" />
        <Parameter Name="labels" Type="System.Int16[]" />
        <Parameter Name="begin" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="scores">vector of scores</param>
        <param name="labels">vector of labels</param>
        <param name="begin">index of first document in query</param>
        <param name="end">index of first document in next query</param>
        <summary>
            Efficient computation of natural-based pessimistic DCG@3 for a given query
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DcgFromScores">
      <MemberSignature Language="C#" Value="public double[] DcgFromScores (Microsoft.ML.Runtime.FastTree.Internal.Dataset dataset, double[] scores, double[] discount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64[] DcgFromScores(class Microsoft.ML.Runtime.FastTree.Internal.Dataset dataset, float64[] scores, float64[] discount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator.DcgFromScores(Microsoft.ML.Runtime.FastTree.Internal.Dataset,System.Double[],System.Double[])" />
      <MemberSignature Language="F#" Value="member this.DcgFromScores : Microsoft.ML.Runtime.FastTree.Internal.Dataset * double[] * double[] -&gt; double[]" Usage="dcgCalculator.DcgFromScores (dataset, scores, discount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ DcgFromScores(Microsoft::ML::Runtime::FastTree::Internal::Dataset ^ dataset, cli::array &lt;double&gt; ^ scores, cli::array &lt;double&gt; ^ discount);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::Array &lt;double&gt; ^ DcgFromScores(Microsoft::ML::Runtime::FastTree::Internal::Dataset ^ dataset, Platform::Array &lt;double&gt; ^ scores, Platform::Array &lt;double&gt; ^ discount);" />
      <MemberSignature Language="C++ WINRT" Value="std::Array &lt;double&gt; DcgFromScores(Microsoft::ML::Runtime::FastTree::Internal::Dataset const &amp; dataset, std::Array &lt;double&gt; const &amp; scores, std::Array &lt;double&gt; const &amp; discount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataset" Type="Microsoft.ML.Runtime.FastTree.Internal.Dataset" />
        <Parameter Name="scores" Type="System.Double[]" />
        <Parameter Name="discount" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="dataset">To be added.</param>
        <param name="scores">To be added.</param>
        <param name="discount">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscountMap">
      <MemberSignature Language="C#" Value="public static readonly double[] DiscountMap;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64[] DiscountMap" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator.DiscountMap" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DiscountMap As Double() " />
      <MemberSignature Language="F#" Value=" staticval mutable DiscountMap : double[]" Usage="Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator.DiscountMap" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly cli::array &lt;double&gt; ^ DiscountMap;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly std::Array &lt;double&gt; DiscountMap;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelGainMap">
      <MemberSignature Language="C#" Value="public static double[] LabelGainMap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property float64[] LabelGainMap" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator.LabelGainMap" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LabelGainMap As Double()" />
      <MemberSignature Language="F#" Value="member this.LabelGainMap : double[] with get, set" Usage="Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator.LabelGainMap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property cli::array &lt;double&gt; ^ LabelGainMap { cli::array &lt;double&gt; ^ get(); void set(cli::array &lt;double&gt; ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::Array &lt;double&gt; ^ LabelGainMap { Platform::Array &lt;double&gt; ^ get(); void set(Platform::Array &lt;double&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelMap">
      <MemberSignature Language="C#" Value="public static double[] LabelMap;" />
      <MemberSignature Language="ILAsm" Value=".field public static float64[] LabelMap" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator.LabelMap" />
      <MemberSignature Language="VB.NET" Value="Public Shared LabelMap As Double() " />
      <MemberSignature Language="F#" Value=" staticval mutable LabelMap : double[]" Usage="Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator.LabelMap" />
      <MemberSignature Language="C++ CLI" Value="public: static cli::array &lt;double&gt; ^ LabelMap;" />
      <MemberSignature Language="C++ WINRT" Value="static std::Array &lt;double&gt; LabelMap;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDcg">
      <MemberSignature Language="C#" Value="public static double[] MaxDcg (short[] labels, int[] boundaries, int trunc, int[][] labelCounts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64[] MaxDcg(int16[] labels, int32[] boundaries, int32 trunc, int32[][] labelCounts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator.MaxDcg(System.Int16[],System.Int32[],System.Int32,System.Int32[][])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxDcg (labels As Short(), boundaries As Integer(), trunc As Integer, labelCounts As Integer()()) As Double()" />
      <MemberSignature Language="F#" Value="static member MaxDcg : int16[] * int[] * int * int[][] -&gt; double[]" Usage="Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator.MaxDcg (labels, boundaries, trunc, labelCounts)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;double&gt; ^ MaxDcg(cli::array &lt;short&gt; ^ labels, cli::array &lt;int&gt; ^ boundaries, int trunc, cli::array &lt;cli::array &lt;int&gt; ^&gt; ^ labelCounts);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::Array &lt;double&gt; MaxDcg(std::Array &lt;short&gt; const &amp; labels, std::Array &lt;int&gt; const &amp; boundaries, int trunc, std::Array &lt;std::Array &lt;int&gt; const &amp;&gt; const &amp; labelCounts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="labels" Type="System.Int16[]" />
        <Parameter Name="boundaries" Type="System.Int32[]" />
        <Parameter Name="trunc" Type="System.Int32" />
        <Parameter Name="labelCounts" Type="System.Int32[][]" />
      </Parameters>
      <Docs>
        <param name="labels">vector of labels</param>
        <param name="boundaries">vector of query boundaries</param>
        <param name="trunc">truncation to use</param>
        <param name="labelCounts"></param>
        <summary>
            Calculates the natural-based max DCG at a given truncation
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDcgQuery">
      <MemberSignature Language="C#" Value="public static double MaxDcgQuery (short[] labels, int begin, int numDocuments, int trunc, int[] labelCounts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 MaxDcgQuery(int16[] labels, int32 begin, int32 numDocuments, int32 trunc, int32[] labelCounts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator.MaxDcgQuery(System.Int16[],System.Int32,System.Int32,System.Int32,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxDcgQuery (labels As Short(), begin As Integer, numDocuments As Integer, trunc As Integer, labelCounts As Integer()) As Double" />
      <MemberSignature Language="F#" Value="static member MaxDcgQuery : int16[] * int * int * int * int[] -&gt; double" Usage="Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator.MaxDcgQuery (labels, begin, numDocuments, trunc, labelCounts)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double MaxDcgQuery(cli::array &lt;short&gt; ^ labels, int begin, int numDocuments, int trunc, cli::array &lt;int&gt; ^ labelCounts);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static double MaxDcgQuery(Platform::Array &lt;short&gt; ^ labels, int begin, int numDocuments, int trunc, Platform::Array &lt;int&gt; ^ labelCounts);" />
      <MemberSignature Language="C++ WINRT" Value=" static double MaxDcgQuery(std::Array &lt;short&gt; const &amp; labels, int begin, int numDocuments, int trunc, std::Array &lt;int&gt; const &amp; labelCounts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="labels" Type="System.Int16[]" />
        <Parameter Name="begin" Type="System.Int32" />
        <Parameter Name="numDocuments" Type="System.Int32" />
        <Parameter Name="trunc" Type="System.Int32" />
        <Parameter Name="labelCounts" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="labels">vector of labels</param>
        <param name="begin">Index of the first document</param>
        <param name="numDocuments"></param>
        <param name="trunc">truncation to use</param>
        <param name="labelCounts"></param>
        <summary>
            Calculates the natural-based max DCG at a given truncation for a query
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ndcg1">
      <MemberSignature Language="C#" Value="public double Ndcg1 (Microsoft.ML.Runtime.FastTree.Internal.Dataset dataset, short[][] labelsSorted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Ndcg1(class Microsoft.ML.Runtime.FastTree.Internal.Dataset dataset, int16[][] labelsSorted) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator.Ndcg1(Microsoft.ML.Runtime.FastTree.Internal.Dataset,System.Int16[][])" />
      <MemberSignature Language="F#" Value="member this.Ndcg1 : Microsoft.ML.Runtime.FastTree.Internal.Dataset * int16[][] -&gt; double" Usage="dcgCalculator.Ndcg1 (dataset, labelsSorted)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Ndcg1(Microsoft::ML::Runtime::FastTree::Internal::Dataset ^ dataset, cli::array &lt;cli::array &lt;short&gt; ^&gt; ^ labelsSorted);" />
      <MemberSignature Language="C++ WINRT" Value="double Ndcg1(Microsoft::ML::Runtime::FastTree::Internal::Dataset const &amp; dataset, std::Array &lt;std::Array &lt;short&gt; const &amp;&gt; const &amp; labelsSorted);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataset" Type="Microsoft.ML.Runtime.FastTree.Internal.Dataset" />
        <Parameter Name="labelsSorted" Type="System.Int16[][]" />
      </Parameters>
      <Docs>
        <param name="dataset">To be added.</param>
        <param name="labelsSorted">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ndcg1">
      <MemberSignature Language="C#" Value="public double Ndcg1 (Microsoft.ML.Runtime.FastTree.Internal.Dataset dataset, short[] labels, double[] scores);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Ndcg1(class Microsoft.ML.Runtime.FastTree.Internal.Dataset dataset, int16[] labels, float64[] scores) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator.Ndcg1(Microsoft.ML.Runtime.FastTree.Internal.Dataset,System.Int16[],System.Double[])" />
      <MemberSignature Language="F#" Value="member this.Ndcg1 : Microsoft.ML.Runtime.FastTree.Internal.Dataset * int16[] * double[] -&gt; double" Usage="dcgCalculator.Ndcg1 (dataset, labels, scores)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Ndcg1(Microsoft::ML::Runtime::FastTree::Internal::Dataset ^ dataset, cli::array &lt;short&gt; ^ labels, cli::array &lt;double&gt; ^ scores);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; double Ndcg1(Microsoft::ML::Runtime::FastTree::Internal::Dataset ^ dataset, Platform::Array &lt;short&gt; ^ labels, Platform::Array &lt;double&gt; ^ scores);" />
      <MemberSignature Language="C++ WINRT" Value="double Ndcg1(Microsoft::ML::Runtime::FastTree::Internal::Dataset const &amp; dataset, std::Array &lt;short&gt; const &amp; labels, std::Array &lt;double&gt; const &amp; scores);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataset" Type="Microsoft.ML.Runtime.FastTree.Internal.Dataset" />
        <Parameter Name="labels" Type="System.Int16[]" />
        <Parameter Name="scores" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="dataset">the dataset</param>
        <param name="labels"></param>
        <param name="scores">the vector of score from previous rounds</param>
        <summary>
            Efficient computation of average NDCG@1 for the entire dataset
            Note that it is virtual and MPI provides faster implemetations for MPI
            </summary>
        <returns>average NDCG@1 for an entire dataset</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ndcg3">
      <MemberSignature Language="C#" Value="public double Ndcg3 (Microsoft.ML.Runtime.FastTree.Internal.Dataset dataset, short[][] labelsSorted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Ndcg3(class Microsoft.ML.Runtime.FastTree.Internal.Dataset dataset, int16[][] labelsSorted) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator.Ndcg3(Microsoft.ML.Runtime.FastTree.Internal.Dataset,System.Int16[][])" />
      <MemberSignature Language="F#" Value="member this.Ndcg3 : Microsoft.ML.Runtime.FastTree.Internal.Dataset * int16[][] -&gt; double" Usage="dcgCalculator.Ndcg3 (dataset, labelsSorted)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Ndcg3(Microsoft::ML::Runtime::FastTree::Internal::Dataset ^ dataset, cli::array &lt;cli::array &lt;short&gt; ^&gt; ^ labelsSorted);" />
      <MemberSignature Language="C++ WINRT" Value="double Ndcg3(Microsoft::ML::Runtime::FastTree::Internal::Dataset const &amp; dataset, std::Array &lt;std::Array &lt;short&gt; const &amp;&gt; const &amp; labelsSorted);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataset" Type="Microsoft.ML.Runtime.FastTree.Internal.Dataset" />
        <Parameter Name="labelsSorted" Type="System.Int16[][]" />
      </Parameters>
      <Docs>
        <param name="dataset">To be added.</param>
        <param name="labelsSorted">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ndcg3">
      <MemberSignature Language="C#" Value="public double Ndcg3 (Microsoft.ML.Runtime.FastTree.Internal.Dataset dataset, short[] labels, double[] scores);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Ndcg3(class Microsoft.ML.Runtime.FastTree.Internal.Dataset dataset, int16[] labels, float64[] scores) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator.Ndcg3(Microsoft.ML.Runtime.FastTree.Internal.Dataset,System.Int16[],System.Double[])" />
      <MemberSignature Language="F#" Value="member this.Ndcg3 : Microsoft.ML.Runtime.FastTree.Internal.Dataset * int16[] * double[] -&gt; double" Usage="dcgCalculator.Ndcg3 (dataset, labels, scores)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Ndcg3(Microsoft::ML::Runtime::FastTree::Internal::Dataset ^ dataset, cli::array &lt;short&gt; ^ labels, cli::array &lt;double&gt; ^ scores);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; double Ndcg3(Microsoft::ML::Runtime::FastTree::Internal::Dataset ^ dataset, Platform::Array &lt;short&gt; ^ labels, Platform::Array &lt;double&gt; ^ scores);" />
      <MemberSignature Language="C++ WINRT" Value="double Ndcg3(Microsoft::ML::Runtime::FastTree::Internal::Dataset const &amp; dataset, std::Array &lt;short&gt; const &amp; labels, std::Array &lt;double&gt; const &amp; scores);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataset" Type="Microsoft.ML.Runtime.FastTree.Internal.Dataset" />
        <Parameter Name="labels" Type="System.Int16[]" />
        <Parameter Name="scores" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="dataset">the dataset</param>
        <param name="labels"></param>
        <param name="scores">vector of scores</param>
        <summary>
            Efficient computation of average NDCG@3 for the entire dataset
            Note that it is virtual and MPI provides faster implementations for MPI
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NdcgRangeFromScores">
      <MemberSignature Language="C#" Value="public double[] NdcgRangeFromScores (Microsoft.ML.Runtime.FastTree.Internal.Dataset dataset, short[] labels, double[] scores);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64[] NdcgRangeFromScores(class Microsoft.ML.Runtime.FastTree.Internal.Dataset dataset, int16[] labels, float64[] scores) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator.NdcgRangeFromScores(Microsoft.ML.Runtime.FastTree.Internal.Dataset,System.Int16[],System.Double[])" />
      <MemberSignature Language="F#" Value="member this.NdcgRangeFromScores : Microsoft.ML.Runtime.FastTree.Internal.Dataset * int16[] * double[] -&gt; double[]" Usage="dcgCalculator.NdcgRangeFromScores (dataset, labels, scores)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ NdcgRangeFromScores(Microsoft::ML::Runtime::FastTree::Internal::Dataset ^ dataset, cli::array &lt;short&gt; ^ labels, cli::array &lt;double&gt; ^ scores);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::Array &lt;double&gt; ^ NdcgRangeFromScores(Microsoft::ML::Runtime::FastTree::Internal::Dataset ^ dataset, Platform::Array &lt;short&gt; ^ labels, Platform::Array &lt;double&gt; ^ scores);" />
      <MemberSignature Language="C++ WINRT" Value="std::Array &lt;double&gt; NdcgRangeFromScores(Microsoft::ML::Runtime::FastTree::Internal::Dataset const &amp; dataset, std::Array &lt;short&gt; const &amp; labels, std::Array &lt;double&gt; const &amp; scores);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataset" Type="Microsoft.ML.Runtime.FastTree.Internal.Dataset" />
        <Parameter Name="labels" Type="System.Int16[]" />
        <Parameter Name="scores" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="dataset">To be added.</param>
        <param name="labels">To be added.</param>
        <param name="scores">To be added.</param>
        <summary>
            calculates the average NDCG given the scores array
            For performance reason it duplicates some
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderingFromScores">
      <MemberSignature Language="C#" Value="public int[] OrderingFromScores (Microsoft.ML.Runtime.FastTree.Internal.Dataset dataset, double[] scores);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] OrderingFromScores(class Microsoft.ML.Runtime.FastTree.Internal.Dataset dataset, float64[] scores) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.DcgCalculator.OrderingFromScores(Microsoft.ML.Runtime.FastTree.Internal.Dataset,System.Double[])" />
      <MemberSignature Language="F#" Value="member this.OrderingFromScores : Microsoft.ML.Runtime.FastTree.Internal.Dataset * double[] -&gt; int[]" Usage="dcgCalculator.OrderingFromScores (dataset, scores)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ OrderingFromScores(Microsoft::ML::Runtime::FastTree::Internal::Dataset ^ dataset, cli::array &lt;double&gt; ^ scores);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::Array &lt;int&gt; ^ OrderingFromScores(Microsoft::ML::Runtime::FastTree::Internal::Dataset ^ dataset, Platform::Array &lt;double&gt; ^ scores);" />
      <MemberSignature Language="C++ WINRT" Value="std::Array &lt;int&gt; OrderingFromScores(Microsoft::ML::Runtime::FastTree::Internal::Dataset const &amp; dataset, std::Array &lt;double&gt; const &amp; scores);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataset" Type="Microsoft.ML.Runtime.FastTree.Internal.Dataset" />
        <Parameter Name="scores" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="dataset">The dataset over which to calculate the DCG.</param>
        <param name="scores">The scores for all documents within the dataset.</param>
        <summary>
            Calculates the order of documents. This returns an array with as many elements
            as there are documents, where the subarray in a query's boundary will contain
            elements from 0 up to but not including the number of documents in the query.
            The first value in this subarray will contain the index of the document in the
            subarray at top position (highest ranked), and the last value the index of the
            document with bottom position (lowest ranked).
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>