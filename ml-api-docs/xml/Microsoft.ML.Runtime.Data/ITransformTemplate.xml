<Type Name="ITransformTemplate" FullName="Microsoft.ML.Runtime.Data.ITransformTemplate">
  <TypeSignature Language="C#" Value="public interface ITransformTemplate : Microsoft.ML.Runtime.Data.IDataTransform, Microsoft.ML.Runtime.Data.IDataView" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITransformTemplate implements class Microsoft.ML.Runtime.Data.IDataTransform, class Microsoft.ML.Runtime.Data.IDataView, class Microsoft.ML.Runtime.Data.ISchematized, class Microsoft.ML.Runtime.Model.ICanSaveModel" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.ITransformTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITransformTemplate&#xA;Implements IDataTransform, IDataView" />
  <TypeSignature Language="F#" Value="type ITransformTemplate = interface&#xA;    interface IDataTransform&#xA;    interface IDataView&#xA;    interface ISchematized&#xA;    interface ICanSaveModel" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Data.IDataTransform</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Data.IDataView</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Data transforms need to be able to apply themselves to a different input IDataView.
            This interface allows them to implement custom rebinding logic.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplyToData">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.IDataTransform ApplyToData (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.IDataView newSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.Data.IDataTransform ApplyToData(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.IDataView newSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.ITransformTemplate.ApplyToData(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyToData (env As IHostEnvironment, newSource As IDataView) As IDataTransform" />
      <MemberSignature Language="F#" Value="abstract member ApplyToData : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.Data.IDataTransform" Usage="iTransformTemplate.ApplyToData (env, newSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="newSource" Type="Microsoft.ML.Runtime.Data.IDataView" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="newSource">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>