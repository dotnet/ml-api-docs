<Type Name="ProgressReporting+ProgressChannel" FullName="Microsoft.ML.Runtime.Data.ProgressReporting+ProgressChannel">
  <TypeSignature Language="C#" Value="public sealed class ProgressReporting.ProgressChannel : IDisposable, Microsoft.ML.Runtime.IProgressChannel" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit ProgressReporting/ProgressChannel extends System.Object implements class Microsoft.ML.Runtime.IProgressChannel, class Microsoft.ML.Runtime.IProgressChannelProvider, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressChannel" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProgressReporting.ProgressChannel&#xA;Implements IDisposable, IProgressChannel" />
  <TypeSignature Language="F#" Value="type ProgressReporting.ProgressChannel = class&#xA;    interface IProgressChannel&#xA;    interface IProgressChannelProvider&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ProgressReporting::ProgressChannel sealed : IDisposable, Microsoft::ML::Runtime::IProgressChannel" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.IProgressChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            The progress channel for <see cref="T:Microsoft.ML.Runtime.Data.TlcEnvironment" />.
            This is coupled with a <see cref="T:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressTracker" /> that aggregates all events and returns them on demand.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProgressChannel (Microsoft.ML.Runtime.IExceptionContext ectx, Microsoft.ML.Runtime.Data.ProgressReporting.ProgressTracker tracker, string computationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IExceptionContext ectx, class Microsoft.ML.Runtime.Data.ProgressReporting/ProgressTracker tracker, string computationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressChannel.#ctor(Microsoft.ML.Runtime.IExceptionContext,Microsoft.ML.Runtime.Data.ProgressReporting.ProgressTracker,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ectx As IExceptionContext, tracker As ProgressReporting.ProgressTracker, computationName As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.ProgressReporting.ProgressChannel : Microsoft.ML.Runtime.IExceptionContext * Microsoft.ML.Runtime.Data.ProgressReporting.ProgressTracker * string -&gt; Microsoft.ML.Runtime.Data.ProgressReporting.ProgressChannel" Usage="new Microsoft.ML.Runtime.Data.ProgressReporting.ProgressChannel (ectx, tracker, computationName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProgressChannel(Microsoft::ML::Runtime::IExceptionContext ^ ectx, Microsoft::ML::Runtime::Data::ProgressReporting::ProgressTracker ^ tracker, System::String ^ computationName);" />
      <MemberSignature Language="C++ WINRT" Value=" ProgressChannel(Microsoft::ML::Runtime::IExceptionContext const &amp; ectx, Microsoft::ML::Runtime::Data::ProgressReporting::ProgressTracker const &amp; tracker, std::wstring const &amp; computationName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ectx" Type="Microsoft.ML.Runtime.IExceptionContext" />
        <Parameter Name="tracker" Type="Microsoft.ML.Runtime.Data.ProgressReporting+ProgressTracker" />
        <Parameter Name="computationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ectx">The exception context.</param>
        <param name="tracker">The tracker to couple with.</param>
        <param name="computationName">The computation name.</param>
        <summary>
            Initialize a <see cref="T:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressChannel" /> for the process identified by <paramref name="computationName" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Checkpoint">
      <MemberSignature Language="C#" Value="public void Checkpoint (params Nullable&lt;double&gt;[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Checkpoint(valuetype System.Nullable`1&lt;float64&gt;[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressChannel.Checkpoint(System.Nullable{System.Double}[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Checkpoint (ParamArray values As Nullable(Of Double)())" />
      <MemberSignature Language="F#" Value="abstract member Checkpoint : Nullable&lt;double&gt;[] -&gt; unit&#xA;override this.Checkpoint : Nullable&lt;double&gt;[] -&gt; unit" Usage="progressChannel.Checkpoint values" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Checkpoint(... cli::array &lt;Nullable&lt;double&gt;&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.IProgressChannel.Checkpoint(System.Nullable{System.Double}[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Nullable&lt;System.Double&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressChannel.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="progressChannel.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Dispose();" />
      <MemberSignature Language="C++ WINRT" Value="void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProgress">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry GetProgress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.Data.ProgressReporting/ProgressEntry GetProgress() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressChannel.GetProgress" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProgress () As ProgressReporting.ProgressEntry" />
      <MemberSignature Language="F#" Value="member this.GetProgress : unit -&gt; Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry" Usage="progressChannel.GetProgress " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::ML::Runtime::Data::ProgressReporting::ProgressEntry ^ GetProgress();" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::ML::Runtime::Data::ProgressReporting::ProgressEntry GetProgress();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ProgressReporting+ProgressEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Pull the current progress by invoking the fill delegate, if any.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressChannel.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.ML.Runtime.Data.ProgressReporting.ProgressChannel.Name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ Name { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHeader">
      <MemberSignature Language="C#" Value="public void SetHeader (Microsoft.ML.Runtime.ProgressHeader header, Action&lt;Microsoft.ML.Runtime.IProgressEntry&gt; fillAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHeader(class Microsoft.ML.Runtime.ProgressHeader header, class System.Action`1&lt;class Microsoft.ML.Runtime.IProgressEntry&gt; fillAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressChannel.SetHeader(Microsoft.ML.Runtime.ProgressHeader,System.Action{Microsoft.ML.Runtime.IProgressEntry})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetHeader (header As ProgressHeader, fillAction As Action(Of IProgressEntry))" />
      <MemberSignature Language="F#" Value="abstract member SetHeader : Microsoft.ML.Runtime.ProgressHeader * Action&lt;Microsoft.ML.Runtime.IProgressEntry&gt; -&gt; unit&#xA;override this.SetHeader : Microsoft.ML.Runtime.ProgressHeader * Action&lt;Microsoft.ML.Runtime.IProgressEntry&gt; -&gt; unit" Usage="progressChannel.SetHeader (header, fillAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetHeader(Microsoft::ML::Runtime::ProgressHeader ^ header, Action&lt;Microsoft::ML::Runtime::IProgressEntry ^&gt; ^ fillAction);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.IProgressChannel.SetHeader(Microsoft.ML.Runtime.ProgressHeader,System.Action{Microsoft.ML.Runtime.IProgressEntry})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="header" Type="Microsoft.ML.Runtime.ProgressHeader" />
        <Parameter Name="fillAction" Type="System.Action&lt;Microsoft.ML.Runtime.IProgressEntry&gt;" />
      </Parameters>
      <Docs>
        <param name="header">To be added.</param>
        <param name="fillAction">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartProgressChannel">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.IProgressChannel StartProgressChannel (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.IProgressChannel StartProgressChannel(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressChannel.StartProgressChannel(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartProgressChannel (name As String) As IProgressChannel" />
      <MemberSignature Language="F#" Value="abstract member StartProgressChannel : string -&gt; Microsoft.ML.Runtime.IProgressChannel&#xA;override this.StartProgressChannel : string -&gt; Microsoft.ML.Runtime.IProgressChannel" Usage="progressChannel.StartProgressChannel name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::ML::Runtime::IProgressChannel ^ StartProgressChannel(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.IProgressChannelProvider.StartProgressChannel(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IProgressChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>