<Type Name="ISchema" FullName="Microsoft.ML.Runtime.Data.ISchema">
  <TypeSignature Language="C#" Value="public interface ISchema" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISchema" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.ISchema" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISchema" />
  <TypeSignature Language="F#" Value="type ISchema = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Interface for schema information.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ColumnCount">
      <MemberSignature Language="C#" Value="public int ColumnCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.ISchema.ColumnCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnCount As Integer" />
      <MemberSignature Language="F#" Value="member this.ColumnCount : int" Usage="Microsoft.ML.Runtime.Data.ISchema.ColumnCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Number of columns.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnName">
      <MemberSignature Language="C#" Value="public string GetColumnName (int col);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetColumnName(int32 col) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.ISchema.GetColumnName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnName (col As Integer) As String" />
      <MemberSignature Language="F#" Value="abstract member GetColumnName : int -&gt; string" Usage="iSchema.GetColumnName col" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="col" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="col">To be added.</param>
        <summary>
            Get the name of the given column index. Column names must be non-empty and non-null,
            but multiple columns may have the same name.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnType">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.ColumnType GetColumnType (int col);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.Data.ColumnType GetColumnType(int32 col) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.ISchema.GetColumnType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnType (col As Integer) As ColumnType" />
      <MemberSignature Language="F#" Value="abstract member GetColumnType : int -&gt; Microsoft.ML.Runtime.Data.ColumnType" Usage="iSchema.GetColumnType col" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ColumnType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="col" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="col">To be added.</param>
        <summary>
            Get the type of the given column index. This must be non-null.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadata&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public void GetMetadata&lt;TValue&gt; (string kind, int col, ref TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetMetadata&lt;TValue&gt;(string kind, int32 col, !!TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.ISchema.GetMetadata``1(System.String,System.Int32,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetMetadata(Of TValue) (kind As String, col As Integer, ByRef value As TValue)" />
      <MemberSignature Language="F#" Value="abstract member GetMetadata : string * int *  -&gt; unit" Usage="iSchema.GetMetadata (kind, col, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="col" Type="System.Int32" />
        <Parameter Name="value" Type="TValue&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">To be added.</typeparam>
        <param name="kind">To be added.</param>
        <param name="col">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Fetches the indicated metadata for the indicated column.
            This should only be called if a corresponding call to GetMetadataTypeOrNull
            returned non-null. And the TValue type should be compatible with the type
            returned by that call. Otherwise, this should throw an exception.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataTypeOrNull">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.ColumnType GetMetadataTypeOrNull (string kind, int col);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.Data.ColumnType GetMetadataTypeOrNull(string kind, int32 col) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.ISchema.GetMetadataTypeOrNull(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataTypeOrNull (kind As String, col As Integer) As ColumnType" />
      <MemberSignature Language="F#" Value="abstract member GetMetadataTypeOrNull : string * int -&gt; Microsoft.ML.Runtime.Data.ColumnType" Usage="iSchema.GetMetadataTypeOrNull (kind, col)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ColumnType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="col" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <param name="col">To be added.</param>
        <summary>
            If the given column has metadata of the indicated kind, this returns the type of the metadata.
            Otherwise, it returns null.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Microsoft.ML.Runtime.Data.ColumnType&gt;&gt; GetMetadataTypes (int col);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class Microsoft.ML.Runtime.Data.ColumnType&gt;&gt; GetMetadataTypes(int32 col) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.ISchema.GetMetadataTypes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataTypes (col As Integer) As IEnumerable(Of KeyValuePair(Of String, ColumnType))" />
      <MemberSignature Language="F#" Value="abstract member GetMetadataTypes : int -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;string, Microsoft.ML.Runtime.Data.ColumnType&gt;&gt;" Usage="iSchema.GetMetadataTypes col" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,Microsoft.ML.Runtime.Data.ColumnType&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="col" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="col">To be added.</param>
        <summary>
            Produces the metadata kinds and associated types supported by the given column.
            If there is no metadata the returned enumerable should be non-null, but empty.
            The string key values are unique, non-empty, non-null strings. The type should
            be non-null.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetColumnIndex">
      <MemberSignature Language="C#" Value="public bool TryGetColumnIndex (string name, out int col);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetColumnIndex(string name, [out] int32&amp; col) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.ISchema.TryGetColumnIndex(System.String,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetColumnIndex (name As String, ByRef col As Integer) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGetColumnIndex : string *  -&gt; bool" Usage="iSchema.TryGetColumnIndex (name, col)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="col" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="col">To be added.</param>
        <summary>
            If there is a column with the given name, set col to its index and return true.
            Otherwise, return false. The expectation is that if there are multiple columns
            with the same name, the greatest index is returned.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>