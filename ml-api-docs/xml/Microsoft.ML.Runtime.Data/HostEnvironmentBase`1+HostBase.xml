<Type Name="HostEnvironmentBase&lt;TEnv&gt;+HostBase" FullName="Microsoft.ML.Runtime.Data.HostEnvironmentBase&lt;TEnv&gt;+HostBase">
  <TypeSignature Language="C#" Value="public abstract class HostEnvironmentBase&lt;TEnv&gt;.HostBase : Microsoft.ML.Runtime.Data.HostEnvironmentBase&lt;TEnv&gt;, Microsoft.ML.Runtime.IHost where TEnv : HostEnvironmentBase&lt;TEnv&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi abstract beforefieldinit HostEnvironmentBase`1/HostBase&lt;(class Microsoft.ML.Runtime.Data.HostEnvironmentBase`1&lt;!TEnv&gt;) TEnv&gt; extends Microsoft.ML.Runtime.Data.HostEnvironmentBase`1&lt;!TEnv&gt; implements class Microsoft.ML.Runtime.IChannelProvider, class Microsoft.ML.Runtime.IExceptionContext, class Microsoft.ML.Runtime.IHost, class Microsoft.ML.Runtime.IHostEnvironment, class Microsoft.ML.Runtime.IProgressChannelProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.HostEnvironmentBase`1.HostBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HostEnvironmentBase(Of TEnv).HostBase&#xA;Inherits HostEnvironmentBase(Of TEnv)&#xA;Implements IHost" />
  <TypeSignature Language="F#" Value="type HostEnvironmentBase&lt;'Env (requires 'Env :&gt; HostEnvironmentBase&lt;'Env&gt;)&gt;.HostBase = class&#xA;    inherit HostEnvironmentBase&lt;'Env (requires 'Env :&gt; HostEnvironmentBase&lt;'Env&gt;)&gt;&#xA;    interface IHost&#xA;    interface IHostEnvironment&#xA;    interface IChannelProvider&#xA;    interface IExceptionContext&#xA;    interface IProgressChannelProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEnv">
      <Constraints>
        <BaseTypeName>Microsoft.ML.Runtime.Data.HostEnvironmentBase&lt;TEnv&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.Data.HostEnvironmentBase&lt;TEnv&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TEnv">TEnv</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.IHost</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Base class for hosts. Classes derived from  <see cref="T:Microsoft.ML.Runtime.Data.HostEnvironmentBase`1" /> may choose
            to provide their own host class that derives from this class.
            This encapsulates the random number generator and name information.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostBase (Microsoft.ML.Runtime.Data.HostEnvironmentBase&lt;TEnv&gt; source, string shortName, string parentFullName, Microsoft.ML.Runtime.IRandom rand, bool verbose, Nullable&lt;int&gt; conc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.Data.HostEnvironmentBase`1&lt;!TEnv&gt; source, string shortName, string parentFullName, class Microsoft.ML.Runtime.IRandom rand, bool verbose, valuetype System.Nullable`1&lt;int32&gt; conc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.HostEnvironmentBase`1.HostBase.#ctor(Microsoft.ML.Runtime.Data.HostEnvironmentBase{`0},System.String,System.String,Microsoft.ML.Runtime.IRandom,System.Boolean,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As HostEnvironmentBase(Of TEnv), shortName As String, parentFullName As String, rand As IRandom, verbose As Boolean, conc As Nullable(Of Integer))" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.HostEnvironmentBase&lt;'Env (requires 'Env :&gt; Microsoft.ML.Runtime.Data.HostEnvironmentBase&lt;'Env&gt;)&gt;.HostBase : Microsoft.ML.Runtime.Data.HostEnvironmentBase&lt;'Env (requires 'Env :&gt; Microsoft.ML.Runtime.Data.HostEnvironmentBase&lt;'Env&gt;)&gt; * string * string * Microsoft.ML.Runtime.IRandom * bool * Nullable&lt;int&gt; -&gt; Microsoft.ML.Runtime.Data.HostEnvironmentBase&lt;'Env (requires 'Env :&gt; Microsoft.ML.Runtime.Data.HostEnvironmentBase&lt;'Env&gt;)&gt;.HostBase" Usage="new Microsoft.ML.Runtime.Data.HostEnvironmentBase&lt;'Env (requires 'Env :&gt; Microsoft.ML.Runtime.Data.HostEnvironmentBase&lt;'Env&gt;)&gt;.HostBase (source, shortName, parentFullName, rand, verbose, conc)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.ML.Runtime.Data.HostEnvironmentBase&lt;TEnv&gt;" />
        <Parameter Name="shortName" Type="System.String" />
        <Parameter Name="parentFullName" Type="System.String" />
        <Parameter Name="rand" Type="Microsoft.ML.Runtime.IRandom" />
        <Parameter Name="verbose" Type="System.Boolean" />
        <Parameter Name="conc" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="shortName">To be added.</param>
        <param name="parentFullName">To be added.</param>
        <param name="rand">To be added.</param>
        <param name="verbose">To be added.</param>
        <param name="conc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.HostEnvironmentBase`1.HostBase.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="Microsoft.ML.Runtime.Data.HostEnvironmentBase&lt;'Env (requires 'Env :&gt; Microsoft.ML.Runtime.Data.HostEnvironmentBase&lt;'Env&gt;)&gt;.HostBase.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rand">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.IRandom Rand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.IRandom Rand" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.HostEnvironmentBase`1.HostBase.Rand" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rand As IRandom" />
      <MemberSignature Language="F#" Value="member this.Rand : Microsoft.ML.Runtime.IRandom" Usage="Microsoft.ML.Runtime.Data.HostEnvironmentBase&lt;'Env (requires 'Env :&gt; Microsoft.ML.Runtime.Data.HostEnvironmentBase&lt;'Env&gt;)&gt;.HostBase.Rand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.IHost.Rand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IRandom</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.IHost Register (string name, Nullable&lt;int&gt; seed = null, Nullable&lt;bool&gt; verbose = null, Nullable&lt;int&gt; conc = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.IHost Register(string name, valuetype System.Nullable`1&lt;int32&gt; seed, valuetype System.Nullable`1&lt;bool&gt; verbose, valuetype System.Nullable`1&lt;int32&gt; conc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.HostEnvironmentBase`1.HostBase.Register(System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Function Register (name As String, Optional seed As Nullable(Of Integer) = null, Optional verbose As Nullable(Of Boolean) = null, Optional conc As Nullable(Of Integer) = null) As IHost" />
      <MemberSignature Language="F#" Value="override this.Register : string * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; -&gt; Microsoft.ML.Runtime.IHost" Usage="hostBase.Register (name, seed, verbose, conc)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.IHostEnvironment.Register(System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IHost</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="seed" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="verbose" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="conc" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="seed">To be added.</param>
        <param name="verbose">To be added.</param>
        <param name="conc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopExecution">
      <MemberSignature Language="C#" Value="public void StopExecution ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopExecution() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.HostEnvironmentBase`1.HostBase.StopExecution" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopExecution ()" />
      <MemberSignature Language="F#" Value="abstract member StopExecution : unit -&gt; unit&#xA;override this.StopExecution : unit -&gt; unit" Usage="hostBase.StopExecution " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.IHost.StopExecution</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>