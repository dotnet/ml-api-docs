<Type Name="DvText" FullName="Microsoft.ML.Runtime.Data.DvText">
  <TypeSignature Language="C#" Value="public struct DvText : IComparable&lt;Microsoft.ML.Runtime.Data.DvText&gt;, IEquatable&lt;Microsoft.ML.Runtime.Data.DvText&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit DvText extends System.ValueType implements class System.IComparable`1&lt;valuetype Microsoft.ML.Runtime.Data.DvText&gt;, class System.IEquatable`1&lt;valuetype Microsoft.ML.Runtime.Data.DvText&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.DvText" />
  <TypeSignature Language="VB.NET" Value="Public Structure DvText&#xA;Implements IComparable(Of DvText), IEquatable(Of DvText)" />
  <TypeSignature Language="F#" Value="type DvText = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable&lt;Microsoft.ML.Runtime.Data.DvText&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.ML.Runtime.Data.DvText&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A text value. This essentially wraps a portion of a string. This can distinguish between a length zero
            span of characters and "NA", the latter having a Length of -1.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DvText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.DvText : string -&gt; Microsoft.ML.Runtime.Data.DvText" Usage="new Microsoft.ML.Runtime.Data.DvText text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>
            Constructor using the indicated string.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DvText (string text, int ichMin, int ichLim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 ichMin, int32 ichLim) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, ichMin As Integer, ichLim As Integer)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.DvText : string * int * int -&gt; Microsoft.ML.Runtime.Data.DvText" Usage="new Microsoft.ML.Runtime.Data.DvText (text, ichMin, ichLim)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="ichMin" Type="System.Int32" />
        <Parameter Name="ichLim" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="ichMin">To be added.</param>
        <param name="ichLim">To be added.</param>
        <summary>
            Constructor using the indicated range of characters in the given string.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLowerCaseToStringBuilder">
      <MemberSignature Language="C#" Value="public void AddLowerCaseToStringBuilder (System.Text.StringBuilder sb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLowerCaseToStringBuilder(class System.Text.StringBuilder sb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.AddLowerCaseToStringBuilder(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLowerCaseToStringBuilder (sb As StringBuilder)" />
      <MemberSignature Language="F#" Value="member this.AddLowerCaseToStringBuilder : System.Text.StringBuilder -&gt; unit" Usage="dvText.AddLowerCaseToStringBuilder sb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="sb">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToPool">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Internal.Utilities.NormStr AddToPool (Microsoft.ML.Runtime.Internal.Utilities.NormStr.Pool pool);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.Internal.Utilities.NormStr AddToPool(class Microsoft.ML.Runtime.Internal.Utilities.NormStr/Pool pool) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.AddToPool(Microsoft.ML.Runtime.Internal.Utilities.NormStr.Pool)" />
      <MemberSignature Language="F#" Value="member this.AddToPool : Microsoft.ML.Runtime.Internal.Utilities.NormStr.Pool -&gt; Microsoft.ML.Runtime.Internal.Utilities.NormStr" Usage="dvText.AddToPool pool" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.Utilities.NormStr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pool" Type="Microsoft.ML.Runtime.Internal.Utilities.NormStr+Pool" />
      </Parameters>
      <Docs>
        <param name="pool">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToStringBuilder">
      <MemberSignature Language="C#" Value="public void AddToStringBuilder (System.Text.StringBuilder sb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToStringBuilder(class System.Text.StringBuilder sb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.AddToStringBuilder(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToStringBuilder (sb As StringBuilder)" />
      <MemberSignature Language="F#" Value="member this.AddToStringBuilder : System.Text.StringBuilder -&gt; unit" Usage="dvText.AddToStringBuilder sb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="sb">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (Microsoft.ML.Runtime.Data.DvText other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype Microsoft.ML.Runtime.Data.DvText other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.CompareTo(Microsoft.ML.Runtime.Data.DvText)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As DvText) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : Microsoft.ML.Runtime.Data.DvText -&gt; int&#xA;override this.CompareTo : Microsoft.ML.Runtime.Data.DvText -&gt; int" Usage="dvText.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.ML.Runtime.Data.DvText" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>
            For implementation of <see cref="T:System.IComparable`1" />. Uses code point comparison.
            Generally, this is not appropriate for sorting for presentation to a user.
            Sorts NA before everything else.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.DvText Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Microsoft.ML.Runtime.Data.DvText Empty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.DvText.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As DvText" />
      <MemberSignature Language="F#" Value="member this.Empty : Microsoft.ML.Runtime.Data.DvText" Usage="Microsoft.ML.Runtime.Data.DvText.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.DvText</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets an empty (zero character) DvText.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.ML.Runtime.Data.DvText b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Microsoft.ML.Runtime.Data.DvText b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.Equals(Microsoft.ML.Runtime.Data.DvText)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (b As DvText) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.ML.Runtime.Data.DvText -&gt; bool" Usage="dvText.Equals b" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="Microsoft.ML.Runtime.Data.DvText" />
      </Parameters>
      <Docs>
        <param name="b">To be added.</param>
        <summary>
            This implements IEquatable's Equals method. Returns true if both are NA.
            For NA propagating equality comparison, use the == operator.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dvText.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EqualsStr">
      <MemberSignature Language="C#" Value="public bool EqualsStr (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EqualsStr(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.EqualsStr(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EqualsStr (s As String) As Boolean" />
      <MemberSignature Language="F#" Value="member this.EqualsStr : string -&gt; bool" Usage="dvText.EqualsStr s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>
            Compare equality with the given system string value. Returns false if "this" is NA.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindInPool">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Internal.Utilities.NormStr FindInPool (Microsoft.ML.Runtime.Internal.Utilities.NormStr.Pool pool);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.Internal.Utilities.NormStr FindInPool(class Microsoft.ML.Runtime.Internal.Utilities.NormStr/Pool pool) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.FindInPool(Microsoft.ML.Runtime.Internal.Utilities.NormStr.Pool)" />
      <MemberSignature Language="F#" Value="member this.FindInPool : Microsoft.ML.Runtime.Internal.Utilities.NormStr.Pool -&gt; Microsoft.ML.Runtime.Internal.Utilities.NormStr" Usage="dvText.FindInPool pool" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.Utilities.NormStr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pool" Type="Microsoft.ML.Runtime.Internal.Utilities.NormStr+Pool" />
      </Parameters>
      <Docs>
        <param name="pool">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dvText.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRawUnderlyingBufferInfo">
      <MemberSignature Language="C#" Value="public string GetRawUnderlyingBufferInfo (out int ichMin, out int ichLim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRawUnderlyingBufferInfo([out] int32&amp; ichMin, [out] int32&amp; ichLim) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.GetRawUnderlyingBufferInfo(System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRawUnderlyingBufferInfo (ByRef ichMin As Integer, ByRef ichLim As Integer) As String" />
      <MemberSignature Language="F#" Value="member this.GetRawUnderlyingBufferInfo :  *  -&gt; string" Usage="dvText.GetRawUnderlyingBufferInfo (ichMin, ichLim)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ichMin" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="ichLim" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ichMin">To be added.</param>
        <param name="ichLim">To be added.</param>
        <summary>
            This method retrieves the raw buffer information. The only characters that should be
            referenced in the returned string are those between the returned min and lim indices.
            If this is an NA value, the min will be zero and the lim will be -1. For either an
            empty or NA value, the returned string may be null.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChars">
      <MemberSignature Language="C#" Value="public bool HasChars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.DvText.HasChars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChars As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasChars : bool" Usage="Microsoft.ML.Runtime.Data.DvText.HasChars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether this DvText contains any characters. Equivalent to Length &gt; 0.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="public uint Hash (uint seed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int32 Hash(unsigned int32 seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.Hash(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hash (seed As UInteger) As UInteger" />
      <MemberSignature Language="F#" Value="member this.Hash : uint32 -&gt; uint32" Usage="dvText.Hash seed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seed" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="seed">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identical">
      <MemberSignature Language="C#" Value="public static bool Identical (Microsoft.ML.Runtime.Data.DvText a, Microsoft.ML.Runtime.Data.DvText b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Identical(valuetype Microsoft.ML.Runtime.Data.DvText a, valuetype Microsoft.ML.Runtime.Data.DvText b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.Identical(Microsoft.ML.Runtime.Data.DvText,Microsoft.ML.Runtime.Data.DvText)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Identical (a As DvText, b As DvText) As Boolean" />
      <MemberSignature Language="F#" Value="static member Identical : Microsoft.ML.Runtime.Data.DvText * Microsoft.ML.Runtime.Data.DvText -&gt; bool" Usage="Microsoft.ML.Runtime.Data.DvText.Identical (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Microsoft.ML.Runtime.Data.DvText" />
        <Parameter Name="b" Type="Microsoft.ML.Runtime.Data.DvText" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>
            Does not propagate NA values. Returns true if both are NA (same as a.Equals(b)).
            For NA propagating equality comparison, use the == operator.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.DvText.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="Microsoft.ML.Runtime.Data.DvText.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether this DvText is empty (distinct from NA). Equivalent to Length == 0.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNA">
      <MemberSignature Language="C#" Value="public bool IsNA { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNA" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.DvText.IsNA" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNA As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsNA : bool" Usage="Microsoft.ML.Runtime.Data.DvText.IsNA" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether this DvText represents "NA". Equivalent to Length == -1.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public char this[int ich] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.DvText.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(ich As Integer) As Char" />
      <MemberSignature Language="F#" Value="member this.Item(int) : char" Usage="Microsoft.ML.Runtime.Data.DvText.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ich" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ich">To be added.</param>
        <summary>
            Gets the indicated character in the text.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public readonly int Length;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly int32 Length" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Data.DvText.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Length As Integer " />
      <MemberSignature Language="F#" Value="val mutable Length : int" Usage="Microsoft.ML.Runtime.Data.DvText.Length" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            For the "NA" value, this is -1; otherwise, it is the number of characters in the text.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NA">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.DvText NA { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Microsoft.ML.Runtime.Data.DvText NA" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.DvText.NA" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NA As DvText" />
      <MemberSignature Language="F#" Value="member this.NA : Microsoft.ML.Runtime.Data.DvText" Usage="Microsoft.ML.Runtime.Data.DvText.NA" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.DvText</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a DvText that represents "NA", aka "Missing".
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.DvBool operator == (Microsoft.ML.Runtime.Data.DvText a, Microsoft.ML.Runtime.Data.DvText b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype Microsoft.ML.Runtime.Data.DvBool op_Equality(valuetype Microsoft.ML.Runtime.Data.DvText a, valuetype Microsoft.ML.Runtime.Data.DvText b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.op_Equality(Microsoft.ML.Runtime.Data.DvText,Microsoft.ML.Runtime.Data.DvText)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As DvText, b As DvText) As DvBool" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.ML.Runtime.Data.DvText * Microsoft.ML.Runtime.Data.DvText -&gt; Microsoft.ML.Runtime.Data.DvBool" Usage="a = b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.DvBool</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Microsoft.ML.Runtime.Data.DvText" />
        <Parameter Name="b" Type="Microsoft.ML.Runtime.Data.DvText" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>
            This compares the two text values with NA propagation semantics.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.DvBool operator != (Microsoft.ML.Runtime.Data.DvText a, Microsoft.ML.Runtime.Data.DvText b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype Microsoft.ML.Runtime.Data.DvBool op_Inequality(valuetype Microsoft.ML.Runtime.Data.DvText a, valuetype Microsoft.ML.Runtime.Data.DvText b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.op_Inequality(Microsoft.ML.Runtime.Data.DvText,Microsoft.ML.Runtime.Data.DvText)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As DvText, b As DvText) As DvBool" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.ML.Runtime.Data.DvText * Microsoft.ML.Runtime.Data.DvText -&gt; Microsoft.ML.Runtime.Data.DvBool" Usage="Microsoft.ML.Runtime.Data.DvText.op_Inequality (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.DvBool</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Microsoft.ML.Runtime.Data.DvText" />
        <Parameter Name="b" Type="Microsoft.ML.Runtime.Data.DvText" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>
            This compares the two text values with NA propagation semantics.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.Data.DvText&gt; Split (char[] separators);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.ML.Runtime.Data.DvText&gt; Split(char[] separators) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.Split(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function Split (separators As Char()) As IEnumerable(Of DvText)" />
      <MemberSignature Language="F#" Value="member this.Split : char[] -&gt; seq&lt;Microsoft.ML.Runtime.Data.DvText&gt;" Usage="dvText.Split separators" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.ML.Runtime.Data.DvText/&lt;Split&gt;d__33))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.Data.DvText&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separators" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="separators">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitOne">
      <MemberSignature Language="C#" Value="public bool SplitOne (char separator, out Microsoft.ML.Runtime.Data.DvText left, out Microsoft.ML.Runtime.Data.DvText right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SplitOne(char separator, [out] valuetype Microsoft.ML.Runtime.Data.DvText&amp; left, [out] valuetype Microsoft.ML.Runtime.Data.DvText&amp; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.SplitOne(System.Char,Microsoft.ML.Runtime.Data.DvText@,Microsoft.ML.Runtime.Data.DvText@)" />
      <MemberSignature Language="VB.NET" Value="Public Function SplitOne (separator As Char, ByRef left As DvText, ByRef right As DvText) As Boolean" />
      <MemberSignature Language="F#" Value="member this.SplitOne : char *  *  -&gt; bool" Usage="dvText.SplitOne (separator, left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" />
        <Parameter Name="left" Type="Microsoft.ML.Runtime.Data.DvText&amp;" RefType="out" />
        <Parameter Name="right" Type="Microsoft.ML.Runtime.Data.DvText&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
            Splits this instance on the left-most occurrence of separator and produces the left
            and right <see cref="T:Microsoft.ML.Runtime.Data.DvText" /> values. If this instance does not contain the separator character,
            this returns false and sets <paramref name="left" /> to this instance and <paramref name="right" />
            to the default <see cref="T:Microsoft.ML.Runtime.Data.DvText" /> value.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitOne">
      <MemberSignature Language="C#" Value="public bool SplitOne (char[] separators, out Microsoft.ML.Runtime.Data.DvText left, out Microsoft.ML.Runtime.Data.DvText right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SplitOne(char[] separators, [out] valuetype Microsoft.ML.Runtime.Data.DvText&amp; left, [out] valuetype Microsoft.ML.Runtime.Data.DvText&amp; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.SplitOne(System.Char[],Microsoft.ML.Runtime.Data.DvText@,Microsoft.ML.Runtime.Data.DvText@)" />
      <MemberSignature Language="VB.NET" Value="Public Function SplitOne (separators As Char(), ByRef left As DvText, ByRef right As DvText) As Boolean" />
      <MemberSignature Language="F#" Value="member this.SplitOne : char[] *  *  -&gt; bool" Usage="dvText.SplitOne (separators, left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separators" Type="System.Char[]" />
        <Parameter Name="left" Type="Microsoft.ML.Runtime.Data.DvText&amp;" RefType="out" />
        <Parameter Name="right" Type="Microsoft.ML.Runtime.Data.DvText&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="separators">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
            Splits this instance on the left-most occurrence of an element of separators character array and
            produces the left and right <see cref="T:Microsoft.ML.Runtime.Data.DvText" /> values. If this instance does not contain any of the
            characters in separators, thiss return false and initializes <paramref name="left" /> to this instance
            and <paramref name="right" /> to the default <see cref="T:Microsoft.ML.Runtime.Data.DvText" /> value.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitOneRight">
      <MemberSignature Language="C#" Value="public bool SplitOneRight (char separator, out Microsoft.ML.Runtime.Data.DvText left, out Microsoft.ML.Runtime.Data.DvText right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SplitOneRight(char separator, [out] valuetype Microsoft.ML.Runtime.Data.DvText&amp; left, [out] valuetype Microsoft.ML.Runtime.Data.DvText&amp; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.SplitOneRight(System.Char,Microsoft.ML.Runtime.Data.DvText@,Microsoft.ML.Runtime.Data.DvText@)" />
      <MemberSignature Language="VB.NET" Value="Public Function SplitOneRight (separator As Char, ByRef left As DvText, ByRef right As DvText) As Boolean" />
      <MemberSignature Language="F#" Value="member this.SplitOneRight : char *  *  -&gt; bool" Usage="dvText.SplitOneRight (separator, left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" />
        <Parameter Name="left" Type="Microsoft.ML.Runtime.Data.DvText&amp;" RefType="out" />
        <Parameter Name="right" Type="Microsoft.ML.Runtime.Data.DvText&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
            Splits this instance on the right-most occurrence of separator and produces the left
            and right <see cref="T:Microsoft.ML.Runtime.Data.DvText" /> values. If this instance does not contain the separator character,
            this returns false and sets <paramref name="left" /> to this instance and <paramref name="right" />
            to the default <see cref="T:Microsoft.ML.Runtime.Data.DvText" /> value.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubSpan">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.DvText SubSpan (int ich);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.ML.Runtime.Data.DvText SubSpan(int32 ich) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.SubSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubSpan (ich As Integer) As DvText" />
      <MemberSignature Language="F#" Value="member this.SubSpan : int -&gt; Microsoft.ML.Runtime.Data.DvText" Usage="dvText.SubSpan ich" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.DvText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ich" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ich">To be added.</param>
        <summary>
            Return a DvText consisting of characters from ich to the end of this DvText.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubSpan">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.DvText SubSpan (int ichMin, int ichLim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.ML.Runtime.Data.DvText SubSpan(int32 ichMin, int32 ichLim) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.SubSpan(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubSpan (ichMin As Integer, ichLim As Integer) As DvText" />
      <MemberSignature Language="F#" Value="member this.SubSpan : int * int -&gt; Microsoft.ML.Runtime.Data.DvText" Usage="dvText.SubSpan (ichMin, ichLim)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.DvText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ichMin" Type="System.Int32" />
        <Parameter Name="ichLim" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ichMin">To be added.</param>
        <param name="ichLim">To be added.</param>
        <summary>
            Return a DvText consisting of the indicated range of characters.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dvText.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Return a non-null string corresponding to the characters in this DvText.
            Note that an empty string is returned for both Empty and NA.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (int ichMin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(int32 ichMin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.ToString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ichMin As Integer) As String" />
      <MemberSignature Language="F#" Value="override this.ToString : int -&gt; string" Usage="dvText.ToString ichMin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ichMin" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ichMin">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.DvText Trim ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.ML.Runtime.Data.DvText Trim() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.Trim" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim () As DvText" />
      <MemberSignature Language="F#" Value="member this.Trim : unit -&gt; Microsoft.ML.Runtime.Data.DvText" Usage="dvText.Trim " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.DvText</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a text span with leading and trailing spaces trimmed. Note that this
            will remove only spaces, not any form of whitespace.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimEndWhiteSpace">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.DvText TrimEndWhiteSpace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.ML.Runtime.Data.DvText TrimEndWhiteSpace() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.TrimEndWhiteSpace" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimEndWhiteSpace () As DvText" />
      <MemberSignature Language="F#" Value="member this.TrimEndWhiteSpace : unit -&gt; Microsoft.ML.Runtime.Data.DvText" Usage="dvText.TrimEndWhiteSpace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.DvText</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a text span with trailing whitespace trimmed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimWhiteSpace">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.DvText TrimWhiteSpace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.ML.Runtime.Data.DvText TrimWhiteSpace() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.TrimWhiteSpace" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimWhiteSpace () As DvText" />
      <MemberSignature Language="F#" Value="member this.TrimWhiteSpace : unit -&gt; Microsoft.ML.Runtime.Data.DvText" Usage="dvText.TrimWhiteSpace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.DvText</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a text span with leading and trailing whitespace trimmed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public bool TryParse (out double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryParse([out] float64&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.TryParse(System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryParse (ByRef value As Double) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryParse :  -&gt; bool" Usage="dvText.TryParse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
            This produces zero for an empty string.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public bool TryParse (out float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryParse([out] float32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DvText.TryParse(System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryParse (ByRef value As Single) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryParse :  -&gt; bool" Usage="dvText.TryParse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
            This produces zero for an empty string.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>