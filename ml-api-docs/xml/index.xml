<Overview>
  <Assemblies>
    <Assembly Name="Microsoft.ML.Api" Version="1.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 4b 86 c4 cb 78 54 9b 34 ba b6 1a 3b 18 00 e2 3b fe b5 b3 ec 39 00 74 04 15 36 a7 e3 cb d9 7f 5f 04 cf 0f 85 71 55 a8 92 8e aa 29 eb fd 11 cf bb ad 3b a7 0e fe a7 bd a3 22 6c 6a 8d 37 0a 4c d3 03 f7 14 48 6b 6e bc 22 59 85 a6 38 47 1e 6e f5 71 cc 92 a4 61 3c 00 b8 fa 65 d6 1c ce e0 cb e5 f3 63 30 c9 a0 1f 41 83 55 9f 1b ef 24 cc 29 17 c6 d9 13 e3 a5 41 33 3a 1d 05 d9 be d2 2b 38 cb ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Api.GenerateCodeCommand), typeof(Microsoft.ML.Runtime.Api.GenerateCodeCommand/Arguments), typeof(Microsoft.ML.Runtime.Command.SignatureCommand), "Generate Sample Prediction Code", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Allows the definition of convenient user defined transforms", typeof(Microsoft.ML.Runtime.Data.ITransformTemplate), typeof(Microsoft.ML.Runtime.Api.SerializableLambdaTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("Release")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("© Microsoft Corporation.  All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("0.0.26501.8")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("0.0.26501.8 @BuiltBy: dlab-DDVSOWINAGE101 @Branch: master @SrcCode: https://github.com/dotnet/machinelearning/tree/f001262fcb37aed49478de79b867166e092cd0ae")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft® .NET Framework")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.ML.Api")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETStandard,Version=v2.0", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.ML.Core" Version="1.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 4b 86 c4 cb 78 54 9b 34 ba b6 1a 3b 18 00 e2 3b fe b5 b3 ec 39 00 74 04 15 36 a7 e3 cb d9 7f 5f 04 cf 0f 85 71 55 a8 92 8e aa 29 eb fd 11 cf bb ad 3b a7 0e fe a7 bd a3 22 6c 6a 8d 37 0a 4c d3 03 f7 14 48 6b 6e bc 22 59 85 a6 38 47 1e 6e f5 71 cc 92 a4 61 3c 00 b8 fa 65 d6 1c ce e0 cb e5 f3 63 30 c9 a0 1f 41 83 55 9f 1b ef 24 cc 29 17 c6 d9 13 e3 a5 41 33 3a 1d 05 d9 be d2 2b 38 cb ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("Release")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("© Microsoft Corporation.  All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("0.0.26501.8")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("0.0.26501.8 @BuiltBy: dlab-DDVSOWINAGE101 @Branch: master @SrcCode: https://github.com/dotnet/machinelearning/tree/f001262fcb37aed49478de79b867166e092cd0ae")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft® .NET Framework")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.ML.Core")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.InternalsVisibleTo("Microsoft.ML.TestFramework, PublicKey=002400000480000094000000060200000024000052534131000400000100010015c01ae1f50e8cc09ba9eac9147cf8fd9fce2cfe9f8dce4f7301c4132ca9fb50ce8cbf1df4dc18dd4d210e4345c744ecb3365ed327efdbc52603faa5e21daa11234c8c4a73e51f03bf192544581ebe107adee3a34928e39d04e524a9ce729d5090bfd7dad9d10c722c0def9ccc08ff0a03790e48bcd1f9b6c476063e1966a1c4")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETStandard,Version=v2.0", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.ML.CpuMath" Version="1.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 4b 86 c4 cb 78 54 9b 34 ba b6 1a 3b 18 00 e2 3b fe b5 b3 ec 39 00 74 04 15 36 a7 e3 cb d9 7f 5f 04 cf 0f 85 71 55 a8 92 8e aa 29 eb fd 11 cf bb ad 3b a7 0e fe a7 bd a3 22 6c 6a 8d 37 0a 4c d3 03 f7 14 48 6b 6e bc 22 59 85 a6 38 47 1e 6e f5 71 cc 92 a4 61 3c 00 b8 fa 65 d6 1c ce e0 cb e5 f3 63 30 c9 a0 1f 41 83 55 9f 1b ef 24 cc 29 17 c6 d9 13 e3 a5 41 33 3a 1d 05 d9 be d2 2b 38 cb ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("Release")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("© Microsoft Corporation.  All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("0.0.26501.8")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("0.0.26501.8 @BuiltBy: dlab-DDVSOWINAGE101 @Branch: master @SrcCode: https://github.com/dotnet/machinelearning/tree/f001262fcb37aed49478de79b867166e092cd0ae")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft® .NET Framework")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.ML.CpuMath")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETStandard,Version=v2.0", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.ML.Data" Version="1.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 4b 86 c4 cb 78 54 9b 34 ba b6 1a 3b 18 00 e2 3b fe b5 b3 ec 39 00 74 04 15 36 a7 e3 cb d9 7f 5f 04 cf 0f 85 71 55 a8 92 8e aa 29 eb fd 11 cf bb ad 3b a7 0e fe a7 bd a3 22 6c 6a 8d 37 0a 4c d3 03 f7 14 48 6b 6e bc 22 59 85 a6 38 47 1e 6e f5 71 cc 92 a4 61 3c 00 b8 fa 65 d6 1c ce e0 cb e5 f3 63 30 c9 a0 1f 41 83 55 9f 1b ef 24 cc 29 17 c6 d9 13 e3 a5 41 33 3a 1d 05 d9 be d2 2b 38 cb ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.EntryPoints.SelectRows))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.EntryPoints.SummarizePredictor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.Internal.Calibration.FixedPlattCalibratorTrainer/Arguments))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.Internal.Calibration.NaiveCalibratorTrainerFactory))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.Internal.Calibration.PavCalibratorTrainerFactory))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.Internal.Calibration.PlattCalibratorTrainerFactory))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.Internal.Internallearn.TolerantEarlyStoppingCriterion))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.Internal.Internallearn.GLEarlyStoppingCriterion))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.Internal.Internallearn.LPEarlyStoppingCriterion))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.Internal.Internallearn.PQEarlyStoppingCriterion))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.Internal.Internallearn.UPEarlyStoppingCriterion))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.Data.TypeConversion))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.Data.RandomNumberGenerator))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.ExpLoss/Arguments))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.LogLossFactory))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.HingeLoss/Arguments))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.PoissonLossFactory))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.SmoothedHingeLoss/Arguments))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.SquaredLossFactory))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.TweedieLoss/Arguments))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.CrossValidationCommand), typeof(Microsoft.ML.Runtime.Data.CrossValidationCommand/Arguments), typeof(Microsoft.ML.Runtime.Command.SignatureCommand), "Cross Validation", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Runs a previously trained predictor on the data.", typeof(Microsoft.ML.Runtime.Data.IDataTransform), typeof(Microsoft.ML.Runtime.Data.EvaluateTransform), typeof(Microsoft.ML.Runtime.Data.EvaluateTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Evaluate Predictor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Evaluates the metrics for a scored data file.", typeof(Microsoft.ML.Runtime.Data.EvaluateCommand), typeof(Microsoft.ML.Runtime.Data.EvaluateCommand/Arguments), typeof(Microsoft.ML.Runtime.Command.SignatureCommand), "Evaluate Predictor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Given input data, a loader, and possibly transforms, save the data to a new file as parameterized by a saver.", typeof(Microsoft.ML.Runtime.Data.SaveDataCommand), typeof(Microsoft.ML.Runtime.Data.SaveDataCommand/Arguments), typeof(Microsoft.ML.Runtime.Command.SignatureCommand), "Save Data", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Given input data, a loader, and possibly transforms, display a sample of the data file.", typeof(Microsoft.ML.Runtime.Data.ShowDataCommand), typeof(Microsoft.ML.Runtime.Data.ShowDataCommand/Arguments), typeof(Microsoft.ML.Runtime.Command.SignatureCommand), "Show Data", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Given a TLC model file with a predictor, we can output this same predictor in multiple export formats.", typeof(Microsoft.ML.Runtime.Tools.SavePredictorCommand), typeof(Microsoft.ML.Runtime.Tools.SavePredictorCommand/Arguments), typeof(Microsoft.ML.Runtime.Command.SignatureCommand), "Save Predictor As", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Scores a data file.", typeof(Microsoft.ML.Runtime.Data.ScoreCommand), typeof(Microsoft.ML.Runtime.Data.ScoreCommand/Arguments), typeof(Microsoft.ML.Runtime.Command.SignatureCommand), "Score Predictor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Given input data, a loader, and possibly transforms, display the schema.", typeof(Microsoft.ML.Runtime.Data.ShowSchemaCommand), typeof(Microsoft.ML.Runtime.Data.ShowSchemaCommand/Arguments), typeof(Microsoft.ML.Runtime.Command.SignatureCommand), "Show Schema", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Scores and evaluates a data file.", typeof(Microsoft.ML.Runtime.Data.TestCommand), typeof(Microsoft.ML.Runtime.Data.TestCommand/Arguments), typeof(Microsoft.ML.Runtime.Command.SignatureCommand), "Test Predictor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Trains a predictor.", typeof(Microsoft.ML.Runtime.Data.TrainCommand), typeof(Microsoft.ML.Runtime.Data.TrainCommand/Arguments), typeof(Microsoft.ML.Runtime.Command.SignatureCommand), "Train Predictor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Trains a predictor using the train file and then scores and evaluates the predictor using the test file.", typeof(Microsoft.ML.Runtime.Data.TrainTestCommand), typeof(Microsoft.ML.Runtime.Data.TrainTestCommand/Arguments), typeof(Microsoft.ML.Runtime.Command.SignatureCommand), "Train Test", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Loads native Binary IDV data file.", typeof(Microsoft.ML.Runtime.Data.IO.BinaryLoader), typeof(Microsoft.ML.Runtime.Data.IO.BinaryLoader/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataLoader), "Binary Loader", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Loads native Binary IDV data file.", typeof(Microsoft.ML.Runtime.Data.IO.BinaryLoader), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataLoader), "Binary Data View Loader", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.IO.BinaryLoader/InfoCommand), typeof(Microsoft.ML.Runtime.Data.IO.BinaryLoader/InfoCommand/Arguments), typeof(Microsoft.ML.Runtime.Command.SignatureCommand), "", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Writes data into a native binary IDV file.", typeof(Microsoft.ML.Runtime.Data.IO.BinarySaver), typeof(Microsoft.ML.Runtime.Data.IO.BinarySaver/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataSaver), "Binary Saver", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.IDataLoader), typeof(Microsoft.ML.Runtime.Data.CompositeDataLoader), typeof(Microsoft.ML.Runtime.Data.CompositeDataLoader/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataLoader), "Composite Data Loader", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.IDataLoader), typeof(Microsoft.ML.Runtime.Data.CompositeDataLoader), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataLoader), "Pipe DataL Loader", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Loads text data file.", typeof(Microsoft.ML.Runtime.Data.TextLoader), typeof(Microsoft.ML.Runtime.Data.TextLoader/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataLoader), "Text Loader", Mono.Cecil.CustomAttributeArgument[], DocName="loader/TextLoader.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Loads text data file.", typeof(Microsoft.ML.Runtime.Data.TextLoader), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataLoader), "Text Loader", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Writes data into a text file.", typeof(Microsoft.ML.Runtime.Data.IO.TextSaver), typeof(Microsoft.ML.Runtime.Data.IO.TextSaver/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataSaver), "Text Saver", Mono.Cecil.CustomAttributeArgument[], DocName="saver/TextSaver.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Loads a binary transposed data file.", typeof(Microsoft.ML.Runtime.Data.IO.TransposeLoader), typeof(Microsoft.ML.Runtime.Data.IO.TransposeLoader/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataLoader), "Transpose Loader", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Loads a binary transposed data file.", typeof(Microsoft.ML.Runtime.Data.IO.TransposeLoader), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataLoader), "Transpose Data View Loader", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Writes data into a transposed binary TDV file.", typeof(Microsoft.ML.Runtime.Data.IO.TransposeSaver), typeof(Microsoft.ML.Runtime.Data.IO.TransposeSaver/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataSaver), "Transpose Saver", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.RowToRowMapperTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.ChooseColumnsByIndexTransform), typeof(Microsoft.ML.Runtime.Data.ChooseColumnsByIndexTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.ChooseColumnsByIndexTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.EntryPoints.Cache), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "Cache", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.EntryPoints.SchemaManipulation), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "SchemaManipulation", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.EntryPoints.ScoreModel), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "ScoreModel", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.AnomalyDetectionEvaluator), typeof(Microsoft.ML.Runtime.Data.AnomalyDetectionEvaluator), typeof(Microsoft.ML.Runtime.Data.AnomalyDetectionEvaluator/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureEvaluator), "Anomaly Detection Evaluator", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.AnomalyDetectionMamlEvaluator), typeof(Microsoft.ML.Runtime.Data.AnomalyDetectionMamlEvaluator), typeof(Microsoft.ML.Runtime.Data.AnomalyDetectionMamlEvaluator/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureMamlEvaluator), "Anomaly Detection Evaluator", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator), typeof(Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator), typeof(Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureEvaluator), "Binary Classifier Evaluator", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.BinaryClassifierMamlEvaluator), typeof(Microsoft.ML.Runtime.Data.BinaryClassifierMamlEvaluator), typeof(Microsoft.ML.Runtime.Data.BinaryClassifierMamlEvaluator/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureMamlEvaluator), "Binary Classifier Evaluator", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.BinaryPerInstanceEvaluator), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadRowMapper), "", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.Data.Evaluate), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "Evaluators", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.ClusteringEvaluator), typeof(Microsoft.ML.Runtime.Data.ClusteringEvaluator), typeof(Microsoft.ML.Runtime.Data.ClusteringEvaluator/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureEvaluator), "Clustering Evaluator", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.ClusteringMamlEvaluator), typeof(Microsoft.ML.Runtime.Data.ClusteringMamlEvaluator), typeof(Microsoft.ML.Runtime.Data.ClusteringMamlEvaluator/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureMamlEvaluator), "Clustering Evaluator", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.ClusteringPerInstanceEvaluator), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadRowMapper), "", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.MultiClassClassifierEvaluator), typeof(Microsoft.ML.Runtime.Data.MultiClassClassifierEvaluator), typeof(Microsoft.ML.Runtime.Data.MultiClassClassifierEvaluator/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureEvaluator), "Multi-Class Classifier Evaluator", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.MultiClassMamlEvaluator), typeof(Microsoft.ML.Runtime.Data.MultiClassMamlEvaluator), typeof(Microsoft.ML.Runtime.Data.MultiClassMamlEvaluator/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureMamlEvaluator), "Multi-Class Classifier Evaluator", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.MultiClassPerInstanceEvaluator), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadRowMapper), "", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.MultiOutputRegressionEvaluator), typeof(Microsoft.ML.Runtime.Data.MultiOutputRegressionEvaluator), typeof(Microsoft.ML.Runtime.Data.MultiOutputRegressionEvaluator/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureEvaluator), "Multi Output Regression Evaluator", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.MultiOutputRegressionMamlEvaluator), typeof(Microsoft.ML.Runtime.Data.MultiOutputRegressionMamlEvaluator), typeof(Microsoft.ML.Runtime.Data.MultiOutputRegressionMamlEvaluator/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureMamlEvaluator), "Multi Output Regression Evaluator", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.MultiOutputRegressionPerInstanceEvaluator), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadRowMapper), "", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.QuantileRegressionEvaluator), typeof(Microsoft.ML.Runtime.Data.QuantileRegressionEvaluator), typeof(Microsoft.ML.Runtime.Data.QuantileRegressionEvaluator/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureEvaluator), "Quantile Regression Evaluator", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.QuantileRegressionMamlEvaluator), typeof(Microsoft.ML.Runtime.Data.QuantileRegressionMamlEvaluator), typeof(Microsoft.ML.Runtime.Data.QuantileRegressionMamlEvaluator/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureMamlEvaluator), "Quantile Regression Evaluator", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.QuantileRegressionPerInstanceEvaluator), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadRowMapper), "", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.RankerEvaluator), typeof(Microsoft.ML.Runtime.Data.RankerEvaluator), typeof(Microsoft.ML.Runtime.Data.RankerEvaluator/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureEvaluator), "Ranking Evaluator", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.RankerMamlEvaluator), typeof(Microsoft.ML.Runtime.Data.RankerMamlEvaluator), typeof(Microsoft.ML.Runtime.Data.RankerMamlEvaluator/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureMamlEvaluator), "Ranking Evaluator", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.RankerPerInstanceTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.RegressionEvaluator), typeof(Microsoft.ML.Runtime.Data.RegressionEvaluator), typeof(Microsoft.ML.Runtime.Data.RegressionEvaluator/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureEvaluator), "Regression Evaluator", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.RegressionMamlEvaluator), typeof(Microsoft.ML.Runtime.Data.RegressionMamlEvaluator), typeof(Microsoft.ML.Runtime.Data.RegressionMamlEvaluator/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureMamlEvaluator), "Regression Evaluator", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.RegressionPerInstanceEvaluator), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadRowMapper), "", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Given a data model, write out the corresponding ONNX.", typeof(Microsoft.ML.Runtime.Model.Onnx.SaveOnnxCommand), typeof(Microsoft.ML.Runtime.Model.Onnx.SaveOnnxCommand/Arguments), typeof(Microsoft.ML.Runtime.Command.SignatureCommand), "Save ONNX", Mono.Cecil.CustomAttributeArgument[], DocName="command/SaveOnnx.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Given a data model, write out the corresponding PFA.", typeof(Microsoft.ML.Runtime.Model.Pfa.SavePfaCommand), typeof(Microsoft.ML.Runtime.Model.Pfa.SavePfaCommand/Arguments), typeof(Microsoft.ML.Runtime.Command.SignatureCommand), "Save PFA", Mono.Cecil.CustomAttributeArgument[], DocName="command/SavePfa.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("This model was introduced by Platt in the paper Probabilistic Outputs for Support Vector Machines and Comparisons to Regularized Likelihood Methods", typeof(Microsoft.ML.Runtime.Internal.Calibration.PlattCalibratorTrainer), null, typeof(Microsoft.ML.Runtime.Internal.Calibration.SignatureCalibrator), "Sigmoid Calibration", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Sigmoid calibrator with configurable slope and offset.", typeof(Microsoft.ML.Runtime.Internal.Calibration.FixedPlattCalibratorTrainer), typeof(Microsoft.ML.Runtime.Internal.Calibration.FixedPlattCalibratorTrainer/Arguments), typeof(Microsoft.ML.Runtime.Internal.Calibration.SignatureCalibrator), "Fixed Sigmoid Calibration", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Piecewise linear calibrator.", typeof(Microsoft.ML.Runtime.Internal.Calibration.PavCalibratorTrainer), null, typeof(Microsoft.ML.Runtime.Internal.Calibration.SignatureCalibrator), "PAV Calibration", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Naive calibrator divides the range of the outputs into equally sized bins. In each bin, the probability of belonging to class 1 is the number of class 1 instances in the bin, divided by the total number of instances in the bin.", typeof(Microsoft.ML.Runtime.Internal.Calibration.NaiveCalibratorTrainer), null, typeof(Microsoft.ML.Runtime.Internal.Calibration.SignatureCalibrator), "Naive Calibrator", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Internal.Calibration.PlattCalibrator), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "Platt Calibration Executor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Internal.Calibration.PavCalibrator), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "PAV Calibration Executor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Internal.Calibration.NaiveCalibrator), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "Naive Calibration Executor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Internal.Calibration.CalibratedPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "Calibrated Predictor Executor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Internal.Calibration.FeatureWeightsCalibratedPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "Feature Weights Calibrated Predictor Executor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Internal.Calibration.ParameterMixingCalibratedPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "Parameter Mixing Calibrated Predictor Executor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Internal.Calibration.SchemaBindableCalibratedPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "Schema Bindable Calibrated Predictor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.Internal.Calibration.Calibrate), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "Calibrate", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.BinaryClassifierScorer), typeof(Microsoft.ML.Runtime.Data.BinaryClassifierScorer/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataScorer), "Binary Classifier Scorer", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.BinaryClassifierScorer), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Binary Classifier Scorer", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.ClusteringScorer), typeof(Microsoft.ML.Runtime.Data.ClusteringScorer/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataScorer), "Clustering Scorer", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.ClusteringScorer), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Clustering Scorer", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.GenericScorer), typeof(Microsoft.ML.Runtime.Data.GenericScorer/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataScorer), "Generic Scorer", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.GenericScorer), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Generic Scorer", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.MultiClassClassifierScorer), typeof(Microsoft.ML.Runtime.Data.MultiClassClassifierScorer/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataScorer), "Multi-Class Classifier Scorer", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.MultiClassClassifierScorer), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Multi-Class Classifier Scorer", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.ISchemaBindableMapper), typeof(Microsoft.ML.Runtime.Data.MultiClassClassifierScorer/LabelNameBindableMapper), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "Multi-Class Label-Name Mapper", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.IDataScorerTransform), typeof(Microsoft.ML.Runtime.Data.QuantileRegressionScorerTransform), typeof(Microsoft.ML.Runtime.Data.QuantileRegressionScorerTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataScorer), "Quantile Regression Scorer", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.ISchemaBindableMapper), typeof(Microsoft.ML.Runtime.Data.QuantileRegressionScorerTransform), typeof(Microsoft.ML.Runtime.Data.QuantileRegressionScorerTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureBindableMapper), "Quantile Regression Mapper", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.SchemaBindablePredictorWrapper), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "Bindable Mapper", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.SchemaBindableQuantileRegressionPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "Regression Bindable Mapper", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.SchemaBindableBinaryPredictorWrapper), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "Binary Classification Bindable Mapper", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Internal.Internallearn.TolerantEarlyStoppingCriterion), typeof(Microsoft.ML.Runtime.Internal.Internallearn.TolerantEarlyStoppingCriterion/Arguments), typeof(Microsoft.ML.Runtime.Internal.Internallearn.SignatureEarlyStoppingCriterion), "Tolerant (TR)", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Internal.Internallearn.GLEarlyStoppingCriterion), typeof(Microsoft.ML.Runtime.Internal.Internallearn.GLEarlyStoppingCriterion/Arguments), typeof(Microsoft.ML.Runtime.Internal.Internallearn.SignatureEarlyStoppingCriterion), "Loss of Generality (GL)", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Internal.Internallearn.LPEarlyStoppingCriterion), typeof(Microsoft.ML.Runtime.Internal.Internallearn.LPEarlyStoppingCriterion/Arguments), typeof(Microsoft.ML.Runtime.Internal.Internallearn.SignatureEarlyStoppingCriterion), "Low Progress (LP)", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Internal.Internallearn.PQEarlyStoppingCriterion), typeof(Microsoft.ML.Runtime.Internal.Internallearn.PQEarlyStoppingCriterion/Arguments), typeof(Microsoft.ML.Runtime.Internal.Internallearn.SignatureEarlyStoppingCriterion), "Generality to Progress Ratio (PQ)", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Internal.Internallearn.UPEarlyStoppingCriterion), typeof(Microsoft.ML.Runtime.Internal.Internallearn.UPEarlyStoppingCriterion/Arguments), typeof(Microsoft.ML.Runtime.Internal.Internallearn.SignatureEarlyStoppingCriterion), "Consecutive Loss in Generality (UP)", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.ChooseColumnsTransform), typeof(Microsoft.ML.Runtime.Data.ChooseColumnsTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Choose Columns Transform", Mono.Cecil.CustomAttributeArgument[], DocName="transform/DropKeepChooseTransforms.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.ChooseColumnsTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Choose Columns Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Concatenates two columns of the same item type.", typeof(Microsoft.ML.Runtime.Data.ConcatTransform), typeof(Microsoft.ML.Runtime.Data.ConcatTransform/TaggedArguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Concat Transform", Mono.Cecil.CustomAttributeArgument[], DocName="transform/ConcatTransform.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Concatenates two columns of the same item type.", typeof(Microsoft.ML.Runtime.Data.ConcatTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Concat Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Converts a column to a different type, using standard conversions.", typeof(Microsoft.ML.Runtime.Data.ConvertTransform), typeof(Microsoft.ML.Runtime.Data.ConvertTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Convert Transform", Mono.Cecil.CustomAttributeArgument[], DocName="transform/ConvertTransform.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Converts a column to a different type, using standard conversions.", typeof(Microsoft.ML.Runtime.Data.ConvertTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Convert Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.ConvertTransform/TypeInfoCommand), typeof(Microsoft.ML.Runtime.Data.ConvertTransform/TypeInfoCommand/Arguments), typeof(Microsoft.ML.Runtime.Command.SignatureCommand), "", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Copy a source column to a new column.", typeof(Microsoft.ML.Runtime.Data.CopyColumnsTransform), typeof(Microsoft.ML.Runtime.Data.CopyColumnsTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Copy Columns Transform", Mono.Cecil.CustomAttributeArgument[], DocName="transform/CopyColumnsTransform.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Copy a source column to a new column.", typeof(Microsoft.ML.Runtime.Data.CopyColumnsTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Copy Columns Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Removes a column or columns from the dataset.", typeof(Microsoft.ML.Runtime.Data.DropColumnsTransform), typeof(Microsoft.ML.Runtime.Data.DropColumnsTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Drop Columns Transform", Mono.Cecil.CustomAttributeArgument[], DocName="transform/DropKeepChooseTransforms.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Selects which columns from the dataset to keep.", typeof(Microsoft.ML.Runtime.Data.DropColumnsTransform), typeof(Microsoft.ML.Runtime.Data.DropColumnsTransform/KeepArguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Keep Columns Transform", Mono.Cecil.CustomAttributeArgument[], DocName="transform/DropKeepChooseTransforms.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Removes a column or columns from the dataset.", typeof(Microsoft.ML.Runtime.Data.DropColumnsTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Drop Columns Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Removes the selected slots from the column.", typeof(Microsoft.ML.Runtime.Data.DropSlotsTransform), typeof(Microsoft.ML.Runtime.Data.DropSlotsTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Drop Slots Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Removes the selected slots from the column.", typeof(Microsoft.ML.Runtime.Data.DropSlotsTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Drop Slots Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Adds a column with a generated number sequence.", typeof(Microsoft.ML.Runtime.Data.GenerateNumberTransform), typeof(Microsoft.ML.Runtime.Data.GenerateNumberTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Generate Number Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Adds a column with a generated number sequence.", typeof(Microsoft.ML.Runtime.Data.GenerateNumberTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Generate Number Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Converts column values into hashes. This transform accepts text and keys as inputs. It works on single- and vector-valued columns, and hashes each slot in a vector separately.", typeof(Microsoft.ML.Runtime.Data.HashTransform), typeof(Microsoft.ML.Runtime.Data.HashTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Hash Transform", Mono.Cecil.CustomAttributeArgument[], DocName="transform/HashTransform.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Converts column values into hashes. This transform accepts text and keys as inputs. It works on single- and vector-valued columns, and hashes each slot in a vector separately.", typeof(Microsoft.ML.Runtime.Data.HashTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Hash Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.KeyToValueTransform), typeof(Microsoft.ML.Runtime.Data.KeyToValueTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Key To Value Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.KeyToValueTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Key To Value Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Converts a key column to an indicator vector.", typeof(Microsoft.ML.Runtime.Data.KeyToVectorTransform), typeof(Microsoft.ML.Runtime.Data.KeyToVectorTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Key To Vector Transform", Mono.Cecil.CustomAttributeArgument[], DocName="transform/KeyToVectorTransform.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Converts a key column to an indicator vector.", typeof(Microsoft.ML.Runtime.Data.KeyToVectorTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Key To Vector Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Convert a label column into a standard floating point representation.", typeof(Microsoft.ML.Runtime.Data.LabelConvertTransform), typeof(Microsoft.ML.Runtime.Data.LabelConvertTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Convert a label column into a standard floating point representation.", typeof(Microsoft.ML.Runtime.Data.LabelConvertTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Label Convert Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.LabelIndicatorTransform), typeof(Microsoft.ML.Runtime.Data.LabelIndicatorTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Label Indicator Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.LabelIndicatorTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Label Indicator Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.Data.LabelIndicatorTransform), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "LabelIndicatorTransform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Filters out rows that contain missing values.", typeof(Microsoft.ML.Runtime.Data.NAFilter), typeof(Microsoft.ML.Runtime.Data.NAFilter/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "NA Filter", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Filters out rows that contain missing values.", typeof(Microsoft.ML.Runtime.Data.NAFilter), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "NA Filter", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Does nothing.", typeof(Microsoft.ML.Runtime.Data.NopTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.Data.NopTransform), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "NopTransform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Filters a dataview on a column of type Single, Double or Key (contiguous). Keeps the values that are in the specified min/max range. NaNs are always filtered out. If the input is a Key type, the min/max are considered percentages of the number of values.", typeof(Microsoft.ML.Runtime.Data.RangeFilter), typeof(Microsoft.ML.Runtime.Data.RangeFilter/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Range Filter", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Filters a dataview on a column of type Single, Double or Key (contiguous). Keeps the values that are in the specified min/max range. NaNs are always filtered out. If the input is a Key type, the min/max are considered percentages of the number of values.", typeof(Microsoft.ML.Runtime.Data.RangeFilter), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Range Filter", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Reorders rows in the dataset by pseudo-random shuffling.", typeof(Microsoft.ML.Runtime.Data.ShuffleTransform), typeof(Microsoft.ML.Runtime.Data.ShuffleTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Shuffle Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Reorders rows in the dataset by pseudo-random shuffling.", typeof(Microsoft.ML.Runtime.Data.ShuffleTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Shuffle Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Allows limiting input to a subset of rows at an optional offset.  Can be used to implement data paging.", typeof(Microsoft.ML.Runtime.Data.SkipTakeFilter), typeof(Microsoft.ML.Runtime.Data.SkipTakeFilter/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Skip and Take Filter", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Allows limiting input to a subset of rows by skipping a number of rows.", typeof(Microsoft.ML.Runtime.Data.SkipTakeFilter), typeof(Microsoft.ML.Runtime.Data.SkipTakeFilter/SkipArguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Skip Filter", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Allows limiting input to a subset of rows by taking N first rows.", typeof(Microsoft.ML.Runtime.Data.SkipTakeFilter), typeof(Microsoft.ML.Runtime.Data.SkipTakeFilter/TakeArguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Take Filter", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Allows limiting input to a subset of rows at an optional offset.  Can be used to implement data paging.", typeof(Microsoft.ML.Runtime.Data.SkipTakeFilter), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Skip and Take Filter", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Converts input values (words, numbers, etc.) to index in a dictionary.", typeof(Microsoft.ML.Runtime.Data.TermTransform), typeof(Microsoft.ML.Runtime.Data.TermTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Term Transform", Mono.Cecil.CustomAttributeArgument[], DocName="transform/TermTransform.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Converts input values (words, numbers, etc.) to index in a dictionary.", typeof(Microsoft.ML.Runtime.Data.TermTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Term Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Runs a previously trained predictor on the data.", typeof(Microsoft.ML.Runtime.Data.IDataTransform), typeof(Microsoft.ML.Runtime.Data.ScoreTransform), typeof(Microsoft.ML.Runtime.Data.ScoreTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Score Predictor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Trains a predictor, or loads it from a file, and runs it on the data.", typeof(Microsoft.ML.Runtime.Data.IDataTransform), typeof(Microsoft.ML.Runtime.Data.TrainAndScoreTransform), typeof(Microsoft.ML.Runtime.Data.TrainAndScoreTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Train and Score Predictor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("The log loss function for classification. Supported by SDCA.", typeof(Microsoft.ML.Runtime.LogLoss), null, typeof(Microsoft.ML.Runtime.SignatureClassificationLoss), "Log Loss", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("The Hinge loss function for classification. Supported by SDCA.", typeof(Microsoft.ML.Runtime.HingeLoss), typeof(Microsoft.ML.Runtime.HingeLoss/Arguments), typeof(Microsoft.ML.Runtime.SignatureClassificationLoss), "Hinge Loss", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("The smooth Hinge loss function for classification. Supported by SDCA.", typeof(Microsoft.ML.Runtime.SmoothedHingeLoss), typeof(Microsoft.ML.Runtime.SmoothedHingeLoss/Arguments), typeof(Microsoft.ML.Runtime.SignatureClassificationLoss), "Smoothed Hinge Loss", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("The exponential loss function for classification.", typeof(Microsoft.ML.Runtime.ExpLoss), typeof(Microsoft.ML.Runtime.ExpLoss/Arguments), typeof(Microsoft.ML.Runtime.SignatureClassificationLoss), "Exponential Loss", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("The squared loss function for regression.", typeof(Microsoft.ML.Runtime.SquaredLoss), null, typeof(Microsoft.ML.Runtime.SignatureRegressionLoss), "Squared Loss", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("The Poisson loss function for regression.", typeof(Microsoft.ML.Runtime.PoissonLoss), null, typeof(Microsoft.ML.Runtime.SignatureRegressionLoss), "Poisson Loss", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("The Tweedie loss function for regression.", typeof(Microsoft.ML.Runtime.TweedieLoss), typeof(Microsoft.ML.Runtime.TweedieLoss/Arguments), typeof(Microsoft.ML.Runtime.SignatureRegressionLoss), "Tweedie Loss", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("Release")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("© Microsoft Corporation.  All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("0.0.26501.8")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("0.0.26501.8 @BuiltBy: dlab-DDVSOWINAGE101 @Branch: master @SrcCode: https://github.com/dotnet/machinelearning/tree/f001262fcb37aed49478de79b867166e092cd0ae")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft® .NET Framework")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.ML.Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.InternalsVisibleTo("Microsoft.ML.TestFramework, PublicKey=002400000480000094000000060200000024000052534131000400000100010015c01ae1f50e8cc09ba9eac9147cf8fd9fce2cfe9f8dce4f7301c4132ca9fb50ce8cbf1df4dc18dd4d210e4345c744ecb3365ed327efdbc52603faa5e21daa11234c8c4a73e51f03bf192544581ebe107adee3a34928e39d04e524a9ce729d5090bfd7dad9d10c722c0def9ccc08ff0a03790e48bcd1f9b6c476063e1966a1c4")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETStandard,Version=v2.0", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.ML" Version="1.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 4b 86 c4 cb 78 54 9b 34 ba b6 1a 3b 18 00 e2 3b fe b5 b3 ec 39 00 74 04 15 36 a7 e3 cb d9 7f 5f 04 cf 0f 85 71 55 a8 92 8e aa 29 eb fd 11 cf bb ad 3b a7 0e fe a7 bd a3 22 6c 6a 8d 37 0a 4c d3 03 f7 14 48 6b 6e bc 22 59 85 a6 38 47 1e 6e f5 71 cc 92 a4 61 3c 00 b8 fa 65 d6 1c ce e0 cb e5 f3 63 30 c9 a0 1f 41 83 55 9f 1b ef 24 cc 29 17 c6 d9 13 e3 a5 41 33 3a 1d 05 d9 be d2 2b 38 cb ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.EntryPoints.CodeGen.ModuleGenerator), typeof(Microsoft.ML.Runtime.EntryPoints.CodeGen.ModuleGenerator/Arguments), typeof(Microsoft.ML.Runtime.Tools.SignatureModuleGenerator), "Module generator", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.EntryPoints.CrossValidationBinaryMacro), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "CrossValidationBinaryMacro", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.EntryPoints.CrossValidationMacro), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "CrossValidationMacro", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.EntryPoints.CVSplit), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "CVSplit", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.EntryPoints.FeatureCombiner), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "FeatureCombiner", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.EntryPoints.ImportTextData), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "ImportTextData", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.EntryPoints.JsonUtils.ExecuteGraphCommand), typeof(Microsoft.ML.Runtime.EntryPoints.JsonUtils.ExecuteGraphCommand/Arguments), typeof(Microsoft.ML.Runtime.Command.SignatureCommand), "", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.EntryPoints.ModelOperations), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "ModelOperations", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.EntryPoints.OneVersusAllMacro), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "OneVersusAllMacro", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.EntryPoints.TrainTestBinaryMacro), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "TrainTestBinaryMacro", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.EntryPoints.TrainTestMacro), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "TrainTestMacro", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.EntryPoints.TrainTestSplit), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "TrainTestSplit", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Internal.Tools.CSharpApiGenerator), typeof(Microsoft.ML.Runtime.Internal.Tools.CSharpApiGenerator/Arguments), typeof(Microsoft.ML.Runtime.Tools.SignatureModuleGenerator), "CSharp API generator", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("Release")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("© Microsoft Corporation.  All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("0.0.26501.8")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("0.0.26501.8 @BuiltBy: dlab-DDVSOWINAGE101 @Branch: master @SrcCode: https://github.com/dotnet/machinelearning/tree/f001262fcb37aed49478de79b867166e092cd0ae")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft® .NET Framework")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.ML")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETStandard,Version=v2.0", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.ML.FastTree" Version="1.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 4b 86 c4 cb 78 54 9b 34 ba b6 1a 3b 18 00 e2 3b fe b5 b3 ec 39 00 74 04 15 36 a7 e3 cb d9 7f 5f 04 cf 0f 85 71 55 a8 92 8e aa 29 eb fd 11 cf bb ad 3b a7 0e fe a7 bd a3 22 6c 6a 8d 37 0a 4c d3 03 f7 14 48 6b 6e bc 22 59 85 a6 38 47 1e 6e f5 71 cc 92 a4 61 3c 00 b8 fa 65 d6 1c ce e0 cb e5 f3 63 30 c9 a0 1f 41 83 55 9f 1b ef 24 cc 29 17 c6 d9 13 e3 a5 41 33 3a 1d 05 d9 be d2 2b 38 cb ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.FastTree.FastTreeBinaryClassificationTrainer/Arguments))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.FastTree.FastTreeRegressionTrainer/Arguments))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.FastTree.FastTreeTweedieTrainer/Arguments))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.FastTree.FastTreeRankingTrainer/Arguments))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.FastTree.SingleTrainerFactory))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Uses a logit-boost boosted tree learner to perform binary classification.", typeof(Microsoft.ML.Runtime.FastTree.FastTreeBinaryClassificationTrainer), typeof(Microsoft.ML.Runtime.FastTree.FastTreeBinaryClassificationTrainer/Arguments), Mono.Cecil.CustomAttributeArgument[], "FastTree (Boosted Trees) Classification", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.IPredictorProducing`1&lt;System.Single&gt;), typeof(Microsoft.ML.Runtime.FastTree.FastTreeBinaryPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "FastTree Binary Executor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Trains gradient boosted decision trees to the LambdaRank quasi-gradient.", typeof(Microsoft.ML.Runtime.FastTree.FastTreeRankingTrainer), typeof(Microsoft.ML.Runtime.FastTree.FastTreeRankingTrainer/Arguments), Mono.Cecil.CustomAttributeArgument[], "FastTree (Boosted Trees) Ranking", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.FastTree.FastTreeRankingPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "FastTree Ranking Executor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.FastTree.FastTree), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "FastTree", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Trains gradient boosted decision trees to fit target values using least-squares.", typeof(Microsoft.ML.Runtime.FastTree.FastTreeRegressionTrainer), typeof(Microsoft.ML.Runtime.FastTree.FastTreeRegressionTrainer/Arguments), Mono.Cecil.CustomAttributeArgument[], "FastTree (Boosted Trees) Regression", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.FastTree.FastTreeRegressionPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "FastTree Regression Executor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Trains gradient boosted decision trees to fit target values using a Tweedie loss function. This learner is a generalization of Poisson, compound Poisson, and gamma regression.", typeof(Microsoft.ML.Runtime.FastTree.FastTreeTweedieTrainer), typeof(Microsoft.ML.Runtime.FastTree.FastTreeTweedieTrainer/Arguments), Mono.Cecil.CustomAttributeArgument[], "FastTree (Boosted Trees) Tweedie Regression", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.FastTree.FastTreeTweediePredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "FastTree Tweedie Regression Executor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Trains a gradient boosted stump per feature, on all features simultaneously, to fit target values using least-squares. It mantains no interactions between features.", typeof(Microsoft.ML.Runtime.FastTree.RegressionGamTrainer), typeof(Microsoft.ML.Runtime.FastTree.RegressionGamTrainer/Arguments), Mono.Cecil.CustomAttributeArgument[], "Generalized Additive Model for Regression", Mono.Cecil.CustomAttributeArgument[], DocName="trainer/GAM.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Trains a gradient boosted stump per feature, on all features simultaneously, to fit target values using least-squares. It mantains no interactions between features.", typeof(Microsoft.ML.Runtime.FastTree.BinaryClassificationGamTrainer), typeof(Microsoft.ML.Runtime.FastTree.BinaryClassificationGamTrainer/Arguments), Mono.Cecil.CustomAttributeArgument[], "Generalized Additive Model for Binary Classification", Mono.Cecil.CustomAttributeArgument[], DocName="trainer/GAM.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.FastTree.RegressionGamPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "GAM Regression Predictor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.FastTree.BinaryClassGamPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "GAM Binary Class Predictor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.FastTree.GamPredictorBase/VisualizationCommand), typeof(Microsoft.ML.Runtime.FastTree.GamPredictorBase/VisualizationCommand/Arguments), typeof(Microsoft.ML.Runtime.Command.SignatureCommand), "GAM Vizualization Command", Mono.Cecil.CustomAttributeArgument[], DocName="command/GamViz.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.FastTree.Gam), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "GAM", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Trains a random forest to fit target values using least-squares.", typeof(Microsoft.ML.Runtime.FastTree.FastForestRegression), typeof(Microsoft.ML.Runtime.FastTree.FastForestRegression/Arguments), Mono.Cecil.CustomAttributeArgument[], "Fast Forest Regression", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.FastTree.FastForestRegressionPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "FastForest Regression Executor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Uses a random forest learner to perform binary classification.", typeof(Microsoft.ML.Runtime.FastTree.FastForestClassification), typeof(Microsoft.ML.Runtime.FastTree.FastForestClassification/Arguments), Mono.Cecil.CustomAttributeArgument[], "Fast Forest Classification", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.IPredictorProducing`1&lt;System.Single&gt;), typeof(Microsoft.ML.Runtime.FastTree.FastForestClassificationPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "FastForest Binary Executor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.FastTree.FastForest), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "FastForest", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.FastTree.SumupPerformanceCommand), typeof(Microsoft.ML.Runtime.FastTree.SumupPerformanceCommand/Arguments), typeof(Microsoft.ML.Runtime.Command.SignatureCommand), "", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.FastTree.SingleTrainer), null, typeof(Microsoft.ML.Runtime.FastTree.SignatureParallelTrainer), "single", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.ISchemaBindableMapper), typeof(Microsoft.ML.Runtime.Data.TreeEnsembleFeaturizerTransform), typeof(Microsoft.ML.Runtime.Data.TreeEnsembleFeaturizerBindableMapper/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureBindableMapper), "Tree Ensemble Featurizer Mapper", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.IDataScorerTransform), typeof(Microsoft.ML.Runtime.Data.TreeEnsembleFeaturizerTransform), typeof(Microsoft.ML.Runtime.Data.TreeEnsembleFeaturizerBindableMapper/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataScorer), "Tree Ensemble Featurizer Scorer", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.ISchemaBindableMapper), typeof(Microsoft.ML.Runtime.Data.TreeEnsembleFeaturizerTransform), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "Tree Ensemble Featurizer Mapper", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Trains a tree ensemble, or loads it from a file, then maps a numeric feature vector to three outputs: 1. A vector containing the individual tree outputs of the tree ensemble. 2. A vector indicating the leaves that the feature vector falls on in the tree ensemble. 3. A vector indicating the paths that the feature vector falls on in the tree ensemble. If a both a model file and a trainer are specified - will use the model file. If neither are specified, will train a default FastTree model. This can handle key labels by training a regression model towards their optionally permuted indices.", typeof(Microsoft.ML.Runtime.Data.IDataTransform), typeof(Microsoft.ML.Runtime.Data.TreeEnsembleFeaturizerTransform), typeof(Microsoft.ML.Runtime.Data.TreeEnsembleFeaturizerTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Tree Ensemble Featurization Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.Data.TreeFeaturize), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "TreeFeaturize", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("Release")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("© Microsoft Corporation.  All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("0.0.26501.8")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("0.0.26501.8 @BuiltBy: dlab-DDVSOWINAGE101 @Branch: master @SrcCode: https://github.com/dotnet/machinelearning/tree/f001262fcb37aed49478de79b867166e092cd0ae")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft® .NET Framework")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.ML.FastTree")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETStandard,Version=v2.0", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.ML.InternalStreams" Version="1.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 4b 86 c4 cb 78 54 9b 34 ba b6 1a 3b 18 00 e2 3b fe b5 b3 ec 39 00 74 04 15 36 a7 e3 cb d9 7f 5f 04 cf 0f 85 71 55 a8 92 8e aa 29 eb fd 11 cf bb ad 3b a7 0e fe a7 bd a3 22 6c 6a 8d 37 0a 4c d3 03 f7 14 48 6b 6e bc 22 59 85 a6 38 47 1e 6e f5 71 cc 92 a4 61 3c 00 b8 fa 65 d6 1c ce e0 cb e5 f3 63 30 c9 a0 1f 41 83 55 9f 1b ef 24 cc 29 17 c6 d9 13 e3 a5 41 33 3a 1d 05 d9 be d2 2b 38 cb ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("Release")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("© Microsoft Corporation.  All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("0.0.26501.8")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("0.0.26501.8 @BuiltBy: dlab-DDVSOWINAGE101 @Branch: master @SrcCode: https://github.com/dotnet/machinelearning/tree/f001262fcb37aed49478de79b867166e092cd0ae")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft® .NET Framework")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.ML.InternalStreams")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETStandard,Version=v2.0", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.ML.KMeansClustering" Version="1.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 4b 86 c4 cb 78 54 9b 34 ba b6 1a 3b 18 00 e2 3b fe b5 b3 ec 39 00 74 04 15 36 a7 e3 cb d9 7f 5f 04 cf 0f 85 71 55 a8 92 8e aa 29 eb fd 11 cf bb ad 3b a7 0e fe a7 bd a3 22 6c 6a 8d 37 0a 4c d3 03 f7 14 48 6b 6e bc 22 59 85 a6 38 47 1e 6e f5 71 cc 92 a4 61 3c 00 b8 fa 65 d6 1c ce e0 cb e5 f3 63 30 c9 a0 1f 41 83 55 9f 1b ef 24 cc 29 17 c6 d9 13 e3 a5 41 33 3a 1d 05 d9 be d2 2b 38 cb ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("K-means is a popular clustering algorithm. With K-means, the data is clustered into a specified number of clusters in order to minimize the within-cluster sum of squares. K-means++ improves upon K-means by using a better method for choosing the initial cluster centers.", typeof(Microsoft.ML.Runtime.KMeans.KMeansPlusPlusTrainer), typeof(Microsoft.ML.Runtime.KMeans.KMeansPlusPlusTrainer/Arguments), Mono.Cecil.CustomAttributeArgument[], "KMeans++ Clustering", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.KMeans.KMeansPlusPlusTrainer), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "KMeans", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.KMeans.KMeansPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "KMeans predictor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("Release")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("© Microsoft Corporation.  All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("0.0.26501.8")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("0.0.26501.8 @BuiltBy: dlab-DDVSOWINAGE101 @Branch: master @SrcCode: https://github.com/dotnet/machinelearning/tree/f001262fcb37aed49478de79b867166e092cd0ae")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft® .NET Framework")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.ML.KMeansClustering")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETStandard,Version=v2.0", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.ML.Maml" Version="1.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 4b 86 c4 cb 78 54 9b 34 ba b6 1a 3b 18 00 e2 3b fe b5 b3 ec 39 00 74 04 15 36 a7 e3 cb d9 7f 5f 04 cf 0f 85 71 55 a8 92 8e aa 29 eb fd 11 cf bb ad 3b a7 0e fe a7 bd a3 22 6c 6a 8d 37 0a 4c d3 03 f7 14 48 6b 6e bc 22 59 85 a6 38 47 1e 6e f5 71 cc 92 a4 61 3c 00 b8 fa 65 d6 1c ce e0 cb e5 f3 63 30 c9 a0 1f 41 83 55 9f 1b ef 24 cc 29 17 c6 d9 13 e3 a5 41 33 3a 1d 05 d9 be d2 2b 38 cb ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("A command that chains multiple other commands.", typeof(Microsoft.ML.Runtime.Tools.ChainCommand), typeof(Microsoft.ML.Runtime.Tools.ChainCommand/Arguments), typeof(Microsoft.ML.Runtime.Command.SignatureCommand), "Chain Command", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Prints command line help.", typeof(Microsoft.ML.Runtime.Tools.HelpCommand), typeof(Microsoft.ML.Runtime.Tools.HelpCommand/Arguments), typeof(Microsoft.ML.Runtime.Command.SignatureCommand), "MAML Help Command", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Tools.XmlGenerator), typeof(Microsoft.ML.Runtime.Tools.XmlGenerator/Arguments), typeof(Microsoft.ML.Runtime.Tools.SignatureModuleGenerator), "Xml generator", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Prints the TLC version.", typeof(Microsoft.ML.Runtime.Tools.VersionCommand), null, typeof(Microsoft.ML.Runtime.Command.SignatureCommand), "Version Command", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("Release")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("© Microsoft Corporation.  All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("0.0.26501.8")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("0.0.26501.8 @BuiltBy: dlab-DDVSOWINAGE101 @Branch: master @SrcCode: https://github.com/dotnet/machinelearning/tree/f001262fcb37aed49478de79b867166e092cd0ae")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft® .NET Framework")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.ML.Maml")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.InternalsVisibleTo("Microsoft.ML.TestFramework, PublicKey=002400000480000094000000060200000024000052534131000400000100010015c01ae1f50e8cc09ba9eac9147cf8fd9fce2cfe9f8dce4f7301c4132ca9fb50ce8cbf1df4dc18dd4d210e4345c744ecb3365ed327efdbc52603faa5e21daa11234c8c4a73e51f03bf192544581ebe107adee3a34928e39d04e524a9ce729d5090bfd7dad9d10c722c0def9ccc08ff0a03790e48bcd1f9b6c476063e1966a1c4")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETStandard,Version=v2.0", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.ML.PCA" Version="1.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 4b 86 c4 cb 78 54 9b 34 ba b6 1a 3b 18 00 e2 3b fe b5 b3 ec 39 00 74 04 15 36 a7 e3 cb d9 7f 5f 04 cf 0f 85 71 55 a8 92 8e aa 29 eb fd 11 cf bb ad 3b a7 0e fe a7 bd a3 22 6c 6a 8d 37 0a 4c d3 03 f7 14 48 6b 6e bc 22 59 85 a6 38 47 1e 6e f5 71 cc 92 a4 61 3c 00 b8 fa 65 d6 1c ce e0 cb e5 f3 63 30 c9 a0 1f 41 83 55 9f 1b ef 24 cc 29 17 c6 d9 13 e3 a5 41 33 3a 1d 05 d9 be d2 2b 38 cb ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("This algorithm trains an approximate PCA using Randomized SVD algorithm. This PCA can be made into Kernel PCA by using Random Fourier Features transform.", typeof(Microsoft.ML.Runtime.PCA.RandomizedPcaTrainer), typeof(Microsoft.ML.Runtime.PCA.RandomizedPcaTrainer/Arguments), Mono.Cecil.CustomAttributeArgument[], "PCA Anomaly Detector", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.PCA.PcaPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "PCA Anomaly Executor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.PCA.RandomizedPcaTrainer), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "pcaAnomaly", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("PCA is a dimensionality-reduction transform which computes the projection of a numeric vector onto a low-rank subspace.", typeof(Microsoft.ML.Runtime.Data.PcaTransform), typeof(Microsoft.ML.Runtime.Data.PcaTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Principal Component Analysis Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("PCA is a dimensionality-reduction transform which computes the projection of a numeric vector onto a low-rank subspace.", typeof(Microsoft.ML.Runtime.Data.PcaTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Principal Component Analysis Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.Data.PcaTransform), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "PcaTransform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("Release")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("© Microsoft Corporation.  All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("0.0.26501.8")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("0.0.26501.8 @BuiltBy: dlab-DDVSOWINAGE101 @Branch: master @SrcCode: https://github.com/dotnet/machinelearning/tree/f001262fcb37aed49478de79b867166e092cd0ae")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft® .NET Framework")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.ML.PCA")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETStandard,Version=v2.0", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.ML.PipelineInference" Version="1.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 4b 86 c4 cb 78 54 9b 34 ba b6 1a 3b 18 00 e2 3b fe b5 b3 ec 39 00 74 04 15 36 a7 e3 cb d9 7f 5f 04 cf 0f 85 71 55 a8 92 8e aa 29 eb fd 11 cf bb ad 3b a7 0e fe a7 bd a3 22 6c 6a 8d 37 0a 4c d3 03 f7 14 48 6b 6e bc 22 59 85 a6 38 47 1e 6e f5 71 cc 92 a4 61 3c 00 b8 fa 65 d6 1c ce e0 cb e5 f3 63 30 c9 a0 1f 41 83 55 9f 1b ef 24 cc 29 17 c6 d9 13 e3 a5 41 33 3a 1d 05 d9 be d2 2b 38 cb ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.PipelineInference.AutoInference/AutoMlMlState/Arguments))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.PipelineInference.AutoInference/ISupportAutoMlStateFactory))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.PipelineInference.DefaultsEngine/Arguments))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.PipelineInference.RocketEngine/Arguments))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.PipelineInference.UniformRandomEngine/Arguments))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.PipelineInference.ISupportIPipelineOptimizerFactory))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.PipelineInference.IterationTerminator/Arguments))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.PipelineInference.ISupportITerminatorFactory))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.EntryPoints.PipelineSweeperMacro), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "PipelineSweeperMacro", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("Release")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("© Microsoft Corporation.  All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("0.0.26501.8")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("0.0.26501.8 @BuiltBy: dlab-DDVSOWINAGE101 @Branch: master @SrcCode: https://github.com/dotnet/machinelearning/tree/f001262fcb37aed49478de79b867166e092cd0ae")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft® .NET Framework")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.ML.PipelineInference")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETStandard,Version=v2.0", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.ML.ResultProcessor" Version="1.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 4b 86 c4 cb 78 54 9b 34 ba b6 1a 3b 18 00 e2 3b fe b5 b3 ec 39 00 74 04 15 36 a7 e3 cb d9 7f 5f 04 cf 0f 85 71 55 a8 92 8e aa 29 eb fd 11 cf bb ad 3b a7 0e fe a7 bd a3 22 6c 6a 8d 37 0a 4c d3 03 f7 14 48 6b 6e bc 22 59 85 a6 38 47 1e 6e f5 71 cc 92 a4 61 3c 00 b8 fa 65 d6 1c ce e0 cb e5 f3 63 30 c9 a0 1f 41 83 55 9f 1b ef 24 cc 29 17 c6 d9 13 e3 a5 41 33 3a 1d 05 d9 be d2 2b 38 cb ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("Release")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("© Microsoft Corporation.  All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("0.0.26501.8")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("0.0.26501.8 @BuiltBy: dlab-DDVSOWINAGE101 @Branch: master @SrcCode: https://github.com/dotnet/machinelearning/tree/f001262fcb37aed49478de79b867166e092cd0ae")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft® .NET Framework")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.ML.ResultProcessor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETStandard,Version=v2.0", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.ML.StandardLearners" Version="1.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 4b 86 c4 cb 78 54 9b 34 ba b6 1a 3b 18 00 e2 3b fe b5 b3 ec 39 00 74 04 15 36 a7 e3 cb d9 7f 5f 04 cf 0f 85 71 55 a8 92 8e aa 29 eb fd 11 cf bb ad 3b a7 0e fe a7 bd a3 22 6c 6a 8d 37 0a 4c d3 03 f7 14 48 6b 6e bc 22 59 85 a6 38 47 1e 6e f5 71 cc 92 a4 61 3c 00 b8 fa 65 d6 1c ce e0 cb e5 f3 63 30 c9 a0 1f 41 83 55 9f 1b ef 24 cc 29 17 c6 d9 13 e3 a5 41 33 3a 1d 05 d9 be d2 2b 38 cb ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.Learners.OvaPredictor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Learners.LinearClassificationTrainer), typeof(Microsoft.ML.Runtime.Learners.LinearClassificationTrainer/Arguments), Mono.Cecil.CustomAttributeArgument[], "Fast Linear (SA-SDCA)", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Learners.StochasticGradientDescentClassificationTrainer), typeof(Microsoft.ML.Runtime.Learners.StochasticGradientDescentClassificationTrainer/Arguments), Mono.Cecil.CustomAttributeArgument[], "Hogwild SGD (binary)", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.Learners.Sdca), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "SDCA", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.Learners.StochasticGradientDescentClassificationTrainer), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "HogwildSGD", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.IPredictorProducing`1&lt;System.Single&gt;), typeof(Microsoft.ML.Runtime.Learners.LinearBinaryPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "Linear Binary Executor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Learners.LinearRegressionPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "Linear Regression Executor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Learners.PoissonRegressionPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "Poisson Regression Executor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Logistic Regression is a method in statistics used to predict the probability of occurrence of an event and can be used as a classification algorithm. The algorithm predicts the probability of occurrence of an event by fitting data to a logistical function.", typeof(Microsoft.ML.Runtime.Learners.LogisticRegression), typeof(Microsoft.ML.Runtime.Learners.LogisticRegression/Arguments), Mono.Cecil.CustomAttributeArgument[], "Logistic Regression", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.Learners.LogisticRegression), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "LogisticRegression", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Learners.MulticlassLogisticRegression), typeof(Microsoft.ML.Runtime.Learners.MulticlassLogisticRegression/Arguments), Mono.Cecil.CustomAttributeArgument[], "Multi-class Logistic Regression", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Learners.MulticlassLogisticRegressionPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "Multiclass LR Executor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Learners.LinearModelStatistics), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "Linear Model Statistics", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Trains a multiclass Naive Bayes predictor that supports binary feature values.", typeof(Microsoft.ML.Runtime.Learners.MultiClassNaiveBayesTrainer), typeof(Microsoft.ML.Runtime.Learners.MultiClassNaiveBayesTrainer/Arguments), Mono.Cecil.CustomAttributeArgument[], "Multiclass Naive Bayes", Mono.Cecil.CustomAttributeArgument[], DocName="trainer/NaiveBayes.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Learners.MultiClassNaiveBayesPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "Multi Class Naive Bayes predictor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.Learners.MultiClassNaiveBayesTrainer), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "MultiClassNaiveBayes", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("In this strategy, a binary classification algorithm is used to train one classifier for each class, which distinguishes that class from all other classes. Prediction is then performed by running these binary classifiers, and choosing the prediction with the highest confidence score.", typeof(Microsoft.ML.Runtime.Learners.Ova), typeof(Microsoft.ML.Runtime.Learners.Ova/Arguments), Mono.Cecil.CustomAttributeArgument[], "One-vs-All", Mono.Cecil.CustomAttributeArgument[], DocName="trainer/OvaPkpd.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Learners.OvaPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "OVA Executor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("In this strategy, a binary classification algorithm is used to train one classifier for each pair of classes. Prediction is then performed by running these binary classifiers, and computing a score for each class by counting how many of the binary classifiers predicted it. The prediction is the class with the highest score.", typeof(Microsoft.ML.Runtime.Learners.Pkpd), typeof(Microsoft.ML.Runtime.Learners.Pkpd/Arguments), Mono.Cecil.CustomAttributeArgument[], "Pairwise coupling (PKPD)", Mono.Cecil.CustomAttributeArgument[], DocName="trainer/OvaPkpd.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Learners.PkpdPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "PKPD Executor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("The ordinary least square regression fits the target function as a linear function of the numerical features that minimizes the square loss function.", typeof(Microsoft.ML.Runtime.Learners.OlsLinearRegressionTrainer), typeof(Microsoft.ML.Runtime.Learners.OlsLinearRegressionTrainer/Arguments), Mono.Cecil.CustomAttributeArgument[], "Ordinary Least Squares (Regression)", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Learners.OlsLinearRegressionPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "OLS Linear Regression Executor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.Learners.OlsLinearRegressionTrainer), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "OLSLinearRegression", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Perceptron is a binary classification algorithm that makes its predictions based on a linear function.", typeof(Microsoft.ML.Runtime.Learners.AveragedPerceptronTrainer), typeof(Microsoft.ML.Runtime.Learners.AveragedPerceptronTrainer/Arguments), Mono.Cecil.CustomAttributeArgument[], "Averaged Perceptron", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.Learners.AveragedPerceptronTrainer), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "AP", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("The idea behind support vector machines, is to map the instances into a high dimensional space in which instances of the two classes are linearly separable, i.e., there exists a hyperplane such that all the positive examples are on one side of it, and all the negative examples are on the other. After this mapping, quadratic programming is used to find the separating hyperplane that maximizes the margin, i.e., the minimal distance between it and the instances.", typeof(Microsoft.ML.Runtime.Learners.LinearSvm), typeof(Microsoft.ML.Runtime.Learners.LinearSvm/Arguments), Mono.Cecil.CustomAttributeArgument[], "SVM (Pegasos-Linear)", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.Learners.LinearSvm), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "LinearSvm", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Stochastic gradient descent is an optimization method used to train a wide range of models in machine learning. In the TLC implementation of SGD, it is for linear regression.", typeof(Microsoft.ML.Runtime.Learners.OnlineGradientDescentTrainer), typeof(Microsoft.ML.Runtime.Learners.OnlineGradientDescentTrainer/Arguments), Mono.Cecil.CustomAttributeArgument[], "Stochastic Gradient Descent (Regression)", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.Learners.OnlineGradientDescentTrainer), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "OGD", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Poisson Regression assumes the unknown function, denoted Y has a Poisson distribution.", typeof(Microsoft.ML.Runtime.Learners.PoissonRegression), typeof(Microsoft.ML.Runtime.Learners.PoissonRegression/Arguments), Mono.Cecil.CustomAttributeArgument[], "Poisson Regression", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.Learners.PoissonRegression), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "PoissonRegression", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("The SDCA linear multi-class classification trainer.", typeof(Microsoft.ML.Runtime.Learners.SdcaMultiClassTrainer), typeof(Microsoft.ML.Runtime.Learners.SdcaMultiClassTrainer/Arguments), Mono.Cecil.CustomAttributeArgument[], "Fast Linear Multi-class Classification (SA-SDCA)", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("The SDCA linear regression trainer.", typeof(Microsoft.ML.Runtime.Learners.SdcaRegressionTrainer), typeof(Microsoft.ML.Runtime.Learners.SdcaRegressionTrainer/Arguments), Mono.Cecil.CustomAttributeArgument[], "Fast Linear Regression (SA-SDCA)", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("A toy predictor that returns a random value.", typeof(Microsoft.ML.Runtime.Learners.RandomTrainer), typeof(Microsoft.ML.Runtime.Learners.RandomTrainer/Arguments), Mono.Cecil.CustomAttributeArgument[], "Random Predictor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("A toy predictor that returns a random value.", typeof(Microsoft.ML.Runtime.Learners.PriorTrainer), typeof(Microsoft.ML.Runtime.Learners.PriorTrainer/Arguments), Mono.Cecil.CustomAttributeArgument[], "Prior Predictor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Learners.RandomPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "Random predictor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Learners.PriorPredictor), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "Prior predictor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("Release")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("© Microsoft Corporation.  All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("0.0.26501.8")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("0.0.26501.8 @BuiltBy: dlab-DDVSOWINAGE101 @Branch: master @SrcCode: https://github.com/dotnet/machinelearning/tree/f001262fcb37aed49478de79b867166e092cd0ae")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft® .NET Framework")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.ML.StandardLearners")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETStandard,Version=v2.0", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.ML.Sweeper" Version="1.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 4b 86 c4 cb 78 54 9b 34 ba b6 1a 3b 18 00 e2 3b fe b5 b3 ec 39 00 74 04 15 36 a7 e3 cb d9 7f 5f 04 cf 0f 85 71 55 a8 92 8e aa 29 eb fd 11 cf bb ad 3b a7 0e fe a7 bd a3 22 6c 6a 8d 37 0a 4c d3 03 f7 14 48 6b 6e bc 22 59 85 a6 38 47 1e 6e f5 71 cc 92 a4 61 3c 00 b8 fa 65 d6 1c ce e0 cb e5 f3 63 30 c9 a0 1f 41 83 55 9f 1b ef 24 cc 29 17 c6 d9 13 e3 a5 41 33 3a 1d 05 d9 be d2 2b 38 cb ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Sweeper.Algorithms.KdoSweeper), typeof(Microsoft.ML.Runtime.Sweeper.Algorithms.KdoSweeper/Arguments), typeof(Microsoft.ML.Runtime.SignatureSweeper), "KDO Sweeper", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Sweeper.NelderMeadSweeper), typeof(Microsoft.ML.Runtime.Sweeper.NelderMeadSweeper/Arguments), typeof(Microsoft.ML.Runtime.SignatureSweeper), "Nelder Mead Sweeper", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Sweeper.UniformRandomSweeper), typeof(Microsoft.ML.Runtime.Sweeper.SweeperBase/ArgumentsBase), typeof(Microsoft.ML.Runtime.SignatureSweeper), "Uniform Random Sweeper", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Sweeper.UniformRandomSweeper), typeof(Microsoft.ML.Runtime.Sweeper.SweeperBase/ArgumentsBase), typeof(Microsoft.ML.Runtime.Sweeper.SignatureSweeperFromParameterList), "Uniform Random Sweeper", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Sweeper.SmacSweeper), typeof(Microsoft.ML.Runtime.Sweeper.SmacSweeper/Arguments), typeof(Microsoft.ML.Runtime.SignatureSweeper), "SMAC Sweeper", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Sweeper.DeterministicSweeperAsync), typeof(Microsoft.ML.Runtime.Sweeper.DeterministicSweeperAsync/Arguments), typeof(Microsoft.ML.Runtime.Sweeper.SignatureAsyncSweeper), "Asynchronous and Deterministic Sweeper", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Sweeper.LocalExeConfigRunner), typeof(Microsoft.ML.Runtime.Sweeper.LocalExeConfigRunner/Arguments), typeof(Microsoft.ML.Runtime.Sweeper.SignatureConfigRunner), "Local Sweep Config Runner", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Sweeper.LongValueGenerator), typeof(Microsoft.ML.Runtime.Sweeper.LongParamArguments), typeof(Microsoft.ML.Runtime.Sweeper.SignatureSweeperParameter), "Long parameter", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Sweeper.FloatValueGenerator), typeof(Microsoft.ML.Runtime.Sweeper.FloatParamArguments), typeof(Microsoft.ML.Runtime.Sweeper.SignatureSweeperParameter), "Float parameter", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Sweeper.DiscreteValueGenerator), typeof(Microsoft.ML.Runtime.Sweeper.DiscreteParamArguments), typeof(Microsoft.ML.Runtime.Sweeper.SignatureSweeperParameter), "Discrete parameter", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Given a command line template and sweep ranges, creates and runs a sweep.", typeof(Microsoft.ML.Runtime.Sweeper.SweepCommand), typeof(Microsoft.ML.Runtime.Sweeper.SweepCommand/Arguments), typeof(Microsoft.ML.Runtime.Command.SignatureCommand), "Sweep", Mono.Cecil.CustomAttributeArgument[], DocName="command/Sweep.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Sweeper.InternalSweepResultEvaluator), typeof(Microsoft.ML.Runtime.Sweeper.InternalSweepResultEvaluator/Arguments), typeof(Microsoft.ML.Runtime.SignatureSweepResultEvaluator), "TLC Sweep Result Evaluator", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Sweeper.SynthConfigRunner), typeof(Microsoft.ML.Runtime.Sweeper.SynthConfigRunner/Arguments), typeof(Microsoft.ML.Runtime.Sweeper.SignatureConfigRunner), "", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("Release")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("© Microsoft Corporation.  All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("0.0.26501.8")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("0.0.26501.8 @BuiltBy: dlab-DDVSOWINAGE101 @Branch: master @SrcCode: https://github.com/dotnet/machinelearning/tree/f001262fcb37aed49478de79b867166e092cd0ae")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft® .NET Framework")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.ML.Sweeper")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETStandard,Version=v2.0", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.ML.Transforms" Version="1.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 4b 86 c4 cb 78 54 9b 34 ba b6 1a 3b 18 00 e2 3b fe b5 b3 ec 39 00 74 04 15 36 a7 e3 cb d9 7f 5f 04 cf 0f 85 71 55 a8 92 8e aa 29 eb fd 11 cf bb ad 3b a7 0e fe a7 bd a3 22 6c 6a 8d 37 0a 4c d3 03 f7 14 48 6b 6e bc 22 59 85 a6 38 47 1e 6e f5 71 cc 92 a4 61 3c 00 b8 fa 65 d6 1c ce e0 cb e5 f3 63 30 c9 a0 1f 41 83 55 9f 1b ef 24 cc 29 17 c6 d9 13 e3 a5 41 33 3a 1d 05 d9 be d2 2b 38 cb ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.Data.BootstrapSample))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.Data.LpNormalization))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.Data.GroupingOperations))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.Data.HashJoin))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.Data.NAHandling))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.DataPipe.OptionalColumnTransform))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.TextAnalytics.PredefinedStopWordsRemoverFactory))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.TextAnalytics.CustomStopWordsRemoverTransform/LoaderArguments))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.Data.NgramExtractorTransform/NgramExtractorArguments))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.EntryPointModule(typeof(Microsoft.ML.Runtime.Data.NgramHashExtractorTransform/NgramHashExtractorArguments))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Approximate bootstrap sampling.", typeof(Microsoft.ML.Runtime.Data.BootstrapSampleTransform), typeof(Microsoft.ML.Runtime.Data.BootstrapSampleTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Bootstrap Sample Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Approximate bootstrap sampling.", typeof(Microsoft.ML.Runtime.Data.BootstrapSampleTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Bootstrap Sample Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Converts the categorical value into an indicator array by hashing the value and using the hash as an index in the bag. If the input column is a vector, a single indicator bag is returned for it.", typeof(Microsoft.ML.Runtime.Data.IDataTransform), typeof(Microsoft.ML.Runtime.Data.CategoricalHashTransform), typeof(Microsoft.ML.Runtime.Data.CategoricalHashTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Categorical Hash Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Converts the categorical value into an indicator array by building a dictionary of categories based on the data and using the id in the dictionary as the index in the array.", typeof(Microsoft.ML.Runtime.Data.IDataTransform), typeof(Microsoft.ML.Runtime.Data.CategoricalTransform), typeof(Microsoft.ML.Runtime.Data.CategoricalTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Categorical Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.Data.Categorical), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "Categorical", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.IDataTransform), typeof(Microsoft.ML.Runtime.Data.CompositeTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Composite Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Selects the slots for which the count of non-default values is greater than or equal to a threshold.", typeof(Microsoft.ML.Runtime.Data.IDataTransform), typeof(Microsoft.ML.Runtime.Data.CountFeatureSelectionTransform), typeof(Microsoft.ML.Runtime.Data.CountFeatureSelectionTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Count Feature Selection Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.EntryPoints.SelectFeatures), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "SelectFeatures", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.Transforms.TextAnalytics), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "TextAnalytics", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.GaussianFourierSampler), typeof(Microsoft.ML.Runtime.Data.GaussianFourierSampler/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureFourierDistributionSampler), "Gaussian Kernel", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.LaplacianFourierSampler), typeof(Microsoft.ML.Runtime.Data.LaplacianFourierSampler/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureFourierDistributionSampler), "Laplacian Kernel", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.GaussianFourierSampler), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "Gaussian Fourier Sampler Executor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.LaplacianFourierSampler), null, typeof(Microsoft.ML.Runtime.Model.SignatureLoadModel), "Laplacian Fourier Sampler Executor", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Performs a global contrast normalization on input values: Y = (s * X - M) / D, where s is a scale, M is mean and D is either L2 norm or standard deviation.", typeof(Microsoft.ML.Runtime.Data.LpNormNormalizerTransform), typeof(Microsoft.ML.Runtime.Data.LpNormNormalizerTransform/GcnArguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Global Contrast Normalization Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Performs a global contrast normalization on input values: Y = (s * X - M) / D, where s is a scale, M is mean and D is either L2 norm or standard deviation.", typeof(Microsoft.ML.Runtime.Data.LpNormNormalizerTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Global Contrast Normalization Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Normalize vectors (rows) individually by rescaling them to unit norm (L2, L1 or LInf). Performs the following operation on a vector X: Y = (X - M) / D, where M is mean and D is either L2 norm, L1 norm or LInf norm.", typeof(Microsoft.ML.Runtime.Data.LpNormNormalizerTransform), typeof(Microsoft.ML.Runtime.Data.LpNormNormalizerTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Lp-Norm Normalizer", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Groups values of a scalar column into a vector, by a contiguous group ID", typeof(Microsoft.ML.Runtime.Data.GroupTransform), typeof(Microsoft.ML.Runtime.Data.GroupTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Group Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Groups values of a scalar column into a vector, by a contiguous group ID", typeof(Microsoft.ML.Runtime.Data.GroupTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Group Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Converts column values into hashes. This transform accepts both numeric and text inputs, both single and vector-valued columns. This is a part of the Dracula transform.", typeof(Microsoft.ML.Runtime.Data.HashJoinTransform), typeof(Microsoft.ML.Runtime.Data.HashJoinTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Hash Join Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Converts column values into hashes. This transform accepts both numeric and text inputs, both single and vector-valued columns. This is a part of the Dracula transform.", typeof(Microsoft.ML.Runtime.Data.HashJoinTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Hash Join Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Converts a key column to a binary encoded vector.", typeof(Microsoft.ML.Runtime.Data.KeyToBinaryVectorTransform), typeof(Microsoft.ML.Runtime.Data.KeyToBinaryVectorTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Key To Binary Vector Transform", Mono.Cecil.CustomAttributeArgument[], DocName="transform/KeyToBinaryVectorTransform.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Converts a key column to a binary encoded vector.", typeof(Microsoft.ML.Runtime.Data.KeyToBinaryVectorTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Key To Binary Vector Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Selects the slots for which the absolute value of the corresponding weight in a linear learner is greater than a threshold.", typeof(Microsoft.ML.Runtime.Data.IDataTransform), typeof(Microsoft.ML.Runtime.Data.LearnerFeatureSelectionTransform), typeof(Microsoft.ML.Runtime.Data.LearnerFeatureSelectionTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Learner Feature Selection Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Loads specified transforms from the model file and applies them to current data.", typeof(Microsoft.ML.Runtime.Data.IDataTransform), typeof(Microsoft.ML.Runtime.Data.LoadTransform), typeof(Microsoft.ML.Runtime.Data.LoadTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Load Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.MissingValueIndicatorTransform), typeof(Microsoft.ML.Runtime.Data.MissingValueIndicatorTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.MissingValueIndicatorTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Missing Value Indicator Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Selects the top k slots across all specified columns ordered by their mutual information with the label column.", typeof(Microsoft.ML.Runtime.Data.IDataTransform), typeof(Microsoft.ML.Runtime.Data.MutualInformationFeatureSelectionTransform), typeof(Microsoft.ML.Runtime.Data.MutualInformationFeatureSelectionTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Mutual Information Feature Selection Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Removes NAs from vector columns.", typeof(Microsoft.ML.Runtime.Data.NADropTransform), typeof(Microsoft.ML.Runtime.Data.NADropTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "NA Drop Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Removes NAs from vector columns.", typeof(Microsoft.ML.Runtime.Data.NADropTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "NA Drop Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Handle missing values by replacing them with either the default value or the mean/min/max value (for non-text columns only). An indicator column can optionally be concatenated, if theinput column type is numeric.", typeof(Microsoft.ML.Runtime.Data.IDataTransform), typeof(Microsoft.ML.Runtime.Data.NAHandleTransform), typeof(Microsoft.ML.Runtime.Data.NAHandleTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "NA Handle Transform", Mono.Cecil.CustomAttributeArgument[], DocName="transform/NAHandle.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.NAIndicatorTransform), typeof(Microsoft.ML.Runtime.Data.NAIndicatorTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "NA Indicator Transform", Mono.Cecil.CustomAttributeArgument[], DocName="transform/NAHandle.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.NAIndicatorTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "NA Indicator Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.NAReplaceTransform), typeof(Microsoft.ML.Runtime.Data.NAReplaceTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "NA Replace Transform", Mono.Cecil.CustomAttributeArgument[], DocName="transform/NAHandle.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.NAReplaceTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "NA Replace Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Normalizes the data based on the observed minimum and maximum values of the data.", typeof(Microsoft.ML.Runtime.Data.NormalizeTransform), typeof(Microsoft.ML.Runtime.Data.NormalizeTransform/MinMaxArguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Min-Max Normalizer", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Normalizes the data based on the computed mean and variance of the data.", typeof(Microsoft.ML.Runtime.Data.NormalizeTransform), typeof(Microsoft.ML.Runtime.Data.NormalizeTransform/MeanVarArguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "MeanVar Normalizer", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Normalizes the data based on the computed mean and variance of the logarithm of the data.", typeof(Microsoft.ML.Runtime.Data.NormalizeTransform), typeof(Microsoft.ML.Runtime.Data.NormalizeTransform/LogMeanVarArguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "LogMeanVar Normalizer", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("The values are assigned into equidensity bins and a value is mapped to its bin_number/number_of_bins.", typeof(Microsoft.ML.Runtime.Data.NormalizeTransform), typeof(Microsoft.ML.Runtime.Data.NormalizeTransform/BinArguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Binning Normalizer", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Similar to BinNormalizer, but calculates bins based on correlation with the label column, not equi-density. The new value is bin_number / number_of_bins.", typeof(Microsoft.ML.Runtime.Data.NormalizeTransform), typeof(Microsoft.ML.Runtime.Data.NormalizeTransform/SupervisedBinArguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Supervised Binning Normalizer", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.NormalizeTransform/AffineColumnFunction), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadColumnFunction), "Affine Normalizer", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.NormalizeTransform/CdfColumnFunction), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadColumnFunction), "CDF Normalizer", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("The values are assigned into equidensity bins and a value is mapped to its bin_number/number_of_bins.", typeof(Microsoft.ML.Runtime.Data.NormalizeTransform/BinColumnFunction), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadColumnFunction), "Bin Normalizer", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.NormalizeTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Normalizer", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(System.Void), typeof(Microsoft.ML.Runtime.Data.Normalize), null, typeof(Microsoft.ML.Runtime.EntryPoints.SignatureEntryPointModule), "Normalize", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("If the source column does not exist after deserialization, create a column with the right type and default values.", typeof(Microsoft.ML.Runtime.DataPipe.OptionalColumnTransform), typeof(Microsoft.ML.Runtime.DataPipe.OptionalColumnTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Optional Column Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.DataPipe.OptionalColumnTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Optional Column Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Produces a new column with the row ID.", typeof(Microsoft.ML.Runtime.Data.ProduceIdTransform), typeof(Microsoft.ML.Runtime.Data.ProduceIdTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Produces a new column with the row ID.", typeof(Microsoft.ML.Runtime.Data.ProduceIdTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Produce ID Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("This transform maps numeric vectors to a random low-dimensional feature space. It is useful when data has non-linear features, since the transform is designed so that the inner products of the transformed data are approximately equal to those in the feature space of a user specified shift-invariant kernel.", typeof(Microsoft.ML.Runtime.Data.RffTransform), typeof(Microsoft.ML.Runtime.Data.RffTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Random Fourier Features Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("This transform maps numeric vectors to a random low-dimensional feature space. It is useful when data has non-linear features, since the transform is designed so that the inner products of the transformed data are approximately equal to those in the feature space of a user specified shift-invariant kernel.", typeof(Microsoft.ML.Runtime.Data.RffTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Random Fourier Features Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Maps text values columns to new columns using a map dataset.", typeof(Microsoft.ML.Runtime.Data.TermLookupTransform), typeof(Microsoft.ML.Runtime.Data.TermLookupTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Term Lookup Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Maps text values columns to new columns using a map dataset.", typeof(Microsoft.ML.Runtime.Data.TermLookupTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Term Lookup Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Character-oriented tokenizer where text is considered a sequence of characters.", typeof(Microsoft.ML.Runtime.TextAnalytics.CharTokenizeTransform), typeof(Microsoft.ML.Runtime.TextAnalytics.CharTokenizeTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Character Tokenizer Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.TextAnalytics.CharTokenizeTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Character Tokenizer Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.NgramHashTransform), typeof(Microsoft.ML.Runtime.Data.NgramHashTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Ngram Hash Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass(typeof(Microsoft.ML.Runtime.Data.NgramHashTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Ngram Hash Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Produces a bag of counts of ngrams (sequences of consecutive values of length 1-n) in a given vector of keys. It does so by building a dictionary of ngrams and using the id in the dictionary as the index in the bag.", typeof(Microsoft.ML.Runtime.Data.NgramTransform), typeof(Microsoft.ML.Runtime.Data.NgramTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Ngram Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Produces a bag of counts of ngrams (sequences of consecutive values of length 1-n) in a given vector of keys. It does so by building a dictionary of ngrams and using the id in the dictionary as the index in the bag.", typeof(Microsoft.ML.Runtime.Data.NgramTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Ngram Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("A transform that turns a collection of text documents into numerical feature vectors. The feature vectors are normalized counts of (word and/or character) ngrams in a given tokenized text.", typeof(Microsoft.ML.Runtime.Data.IDataTransform), typeof(Microsoft.ML.Runtime.TextAnalytics.SentimentAnalyzingTransform), typeof(Microsoft.ML.Runtime.TextAnalytics.SentimentAnalyzingTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Sentiment Analyzing Transform", Mono.Cecil.CustomAttributeArgument[], DocName="transform/SentimentAnalyzingTransform.md")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("A Stopword remover transform based on language-specific lists of stop words (most common words) from Office Named Entity Recognition project. The transform is usually applied after tokenizing text, so it compares individual tokens (case-insensitive comparison) to the stopwords.", typeof(Microsoft.ML.Runtime.TextAnalytics.StopWordsRemoverTransform), typeof(Microsoft.ML.Runtime.TextAnalytics.StopWordsRemoverTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Stopwords Remover Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("A Stopword remover transform based on language-specific lists of stop words (most common words) from Office Named Entity Recognition project. The transform is usually applied after tokenizing text, so it compares individual tokens (case-insensitive comparison) to the stopwords.", typeof(Microsoft.ML.Runtime.TextAnalytics.StopWordsRemoverTransform), null, typeof(Microsoft.ML.Runtime.TextAnalytics.SignatureStopWordsRemoverTransform), "Predefined Stopwords List Remover", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("A Stopword remover transform based on language-specific lists of stop words (most common words) from Office Named Entity Recognition project. The transform is usually applied after tokenizing text, so it compares individual tokens (case-insensitive comparison) to the stopwords.", typeof(Microsoft.ML.Runtime.TextAnalytics.StopWordsRemoverTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Stopwords Remover Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("A Stopword remover transform based on a user-defined list of stopwords. The transform is usually applied after tokenizing text, so it compares individual tokens (case-insensitive comparison) to the stopwords.", typeof(Microsoft.ML.Runtime.TextAnalytics.CustomStopWordsRemoverTransform), typeof(Microsoft.ML.Runtime.TextAnalytics.CustomStopWordsRemoverTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Custom Stopwords Remover Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("A Stopword remover transform based on a user-defined list of stopwords. The transform is usually applied after tokenizing text, so it compares individual tokens (case-insensitive comparison) to the stopwords.", typeof(Microsoft.ML.Runtime.TextAnalytics.CustomStopWordsRemoverTransform), typeof(Microsoft.ML.Runtime.TextAnalytics.CustomStopWordsRemoverTransform/LoaderArguments), typeof(Microsoft.ML.Runtime.TextAnalytics.SignatureStopWordsRemoverTransform), "Custom Stopwords Remover Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("A Stopword remover transform based on a user-defined list of stopwords. The transform is usually applied after tokenizing text, so it compares individual tokens (case-insensitive comparison) to the stopwords.", typeof(Microsoft.ML.Runtime.TextAnalytics.CustomStopWordsRemoverTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Custom Stopwords Remover Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("A text normalization transform that allows normalizing text case, removing diacritical marks, punctuation marks and/or numbers. The transform operates on text input as well as vector of tokens/text (vector of DvText).", typeof(Microsoft.ML.Runtime.TextAnalytics.TextNormalizerTransform), typeof(Microsoft.ML.Runtime.TextAnalytics.TextNormalizerTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Text Normalizer Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("A text normalization transform that allows normalizing text case, removing diacritical marks, punctuation marks and/or numbers. The transform operates on text input as well as vector of tokens/text (vector of DvText).", typeof(Microsoft.ML.Runtime.TextAnalytics.TextNormalizerTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Text Normalizer Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("A transform that turns a collection of text documents into numerical feature vectors. The feature vectors are normalized counts of (word and/or character) ngrams in a given tokenized text.", typeof(Microsoft.ML.Runtime.Data.IDataTransform), typeof(Microsoft.ML.Runtime.Data.TextTransform), typeof(Microsoft.ML.Runtime.Data.TextTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Text Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Produces a bag of counts of ngrams (sequences of consecutive words of length 1-n) in a given text. It does so by building a dictionary of ngrams and using the id in the dictionary as the index in the bag.", typeof(Microsoft.ML.Runtime.Data.IDataTransform), typeof(Microsoft.ML.Runtime.Data.WordBagTransform), typeof(Microsoft.ML.Runtime.Data.WordBagTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Word Bag Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("A transform that turns a collection of tokenized text (vector of DvText), or vectors of keys into numerical feature vectors. The feature vectors are counts of ngrams (sequences of consecutive *tokens* -words or keys- of length 1-n).", typeof(Microsoft.ML.Runtime.Data.INgramExtractorFactory), typeof(Microsoft.ML.Runtime.Data.NgramExtractorTransform), typeof(Microsoft.ML.Runtime.Data.NgramExtractorTransform/NgramExtractorArguments), typeof(Microsoft.ML.Runtime.Data.SignatureNgramExtractorFactory), "Ngram Extractor Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Produces a bag of counts of ngrams (sequences of consecutive words of length 1-n) in a given text. It does so by hashing each ngram and using the hash value as the index in the bag.", typeof(Microsoft.ML.Runtime.Data.IDataTransform), typeof(Microsoft.ML.Runtime.Data.WordHashBagTransform), typeof(Microsoft.ML.Runtime.Data.WordHashBagTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Word Hash Bag Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("A transform that turns a collection of tokenized text (vector of DvText) into numerical feature vectors using the hashing trick.", typeof(Microsoft.ML.Runtime.Data.INgramExtractorFactory), typeof(Microsoft.ML.Runtime.Data.NgramHashExtractorTransform), typeof(Microsoft.ML.Runtime.Data.NgramHashExtractorTransform/NgramHashExtractorArguments), typeof(Microsoft.ML.Runtime.Data.SignatureNgramExtractorFactory), "Ngram Hash Extractor Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("The input to this transform is text, and the output is a vector of text containing the words (tokens) in the original text. The separator is space, but can be specified as any other character (or multiple characters) if needed.", typeof(Microsoft.ML.Runtime.Data.DelimitedTokenizeTransform), typeof(Microsoft.ML.Runtime.Data.DelimitedTokenizeTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Word Tokenizer Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("The input to this transform is text, and the output is a vector of text containing the words (tokens) in the original text. The separator is space, but can be specified as any other character (or multiple characters) if needed.", typeof(Microsoft.ML.Runtime.Data.DelimitedTokenizeTransform), typeof(Microsoft.ML.Runtime.Data.DelimitedTokenizeTransform/TokenizeArguments), typeof(Microsoft.ML.Runtime.Data.SignatureTokenizeTransform), "Word Tokenizer Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("The input to this transform is text, and the output is a vector of text containing the words (tokens) in the original text. The separator is space, but can be specified as any other character (or multiple characters) if needed.", typeof(Microsoft.ML.Runtime.Data.DelimitedTokenizeTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Word Tokenizer Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Un-groups vector columns into sequences of rows, inverse of Group transform", typeof(Microsoft.ML.Runtime.Data.UngroupTransform), typeof(Microsoft.ML.Runtime.Data.UngroupTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Un-group Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Un-groups vector columns into sequences of rows, inverse of Group transform", typeof(Microsoft.ML.Runtime.Data.UngroupTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Un-group Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Apply PCA or ZCA whitening algorithm to the input.", typeof(Microsoft.ML.Runtime.Data.WhiteningTransform), typeof(Microsoft.ML.Runtime.Data.WhiteningTransform/Arguments), typeof(Microsoft.ML.Runtime.Data.SignatureDataTransform), "Whitening Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.LoadableClass("Apply PCA or ZCA whitening algorithm to the input.", typeof(Microsoft.ML.Runtime.Data.WhiteningTransform), null, typeof(Microsoft.ML.Runtime.Data.SignatureLoadDataTransform), "Whitening Transform", Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("Release")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("© Microsoft Corporation.  All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("0.0.26501.8")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("0.0.26501.8 @BuiltBy: dlab-DDVSOWINAGE101 @Branch: master @SrcCode: https://github.com/dotnet/machinelearning/tree/f001262fcb37aed49478de79b867166e092cd0ae")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft® .NET Framework")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.ML.Transforms")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETStandard,Version=v2.0", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.ML.UniversalModelFormat" Version="1.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 4b 86 c4 cb 78 54 9b 34 ba b6 1a 3b 18 00 e2 3b fe b5 b3 ec 39 00 74 04 15 36 a7 e3 cb d9 7f 5f 04 cf 0f 85 71 55 a8 92 8e aa 29 eb fd 11 cf bb ad 3b a7 0e fe a7 bd a3 22 6c 6a 8d 37 0a 4c d3 03 f7 14 48 6b 6e bc 22 59 85 a6 38 47 1e 6e f5 71 cc 92 a4 61 3c 00 b8 fa 65 d6 1c ce e0 cb e5 f3 63 30 c9 a0 1f 41 83 55 9f 1b ef 24 cc 29 17 c6 d9 13 e3 a5 41 33 3a 1d 05 d9 be d2 2b 38 cb ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("Release")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("© Microsoft Corporation.  All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("0.0.26501.8")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("0.0.26501.8 @BuiltBy: dlab-DDVSOWINAGE101 @Branch: master @SrcCode: https://github.com/dotnet/machinelearning/tree/f001262fcb37aed49478de79b867166e092cd0ae")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft® .NET Framework")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.ML.UniversalModelFormat")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETStandard,Version=v2.0", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
  </Assemblies>
  <Remarks>To be added.</Remarks>
  <Copyright>To be added.</Copyright>
  <Types>
    <Namespace Name="LotusIR">
      <Type Name="AttributeProto" Kind="Class" />
      <Type Name="FunctionDefProto" Kind="Class" />
      <Type Name="GraphProto" Kind="Class" />
      <Type Name="GraphReflection" Kind="Class" />
      <Type Name="LibraryProto" Kind="Class" />
      <Type Name="ModelProto" Kind="Class" />
      <Type Name="NodeProto" Kind="Class" />
      <Type Name="OperatorDeclProto" Kind="Class" />
      <Type Name="ParameterDeclProto" Kind="Class" />
      <Type Name="SignatureDeclProto" Kind="Class" />
      <Type Name="SparseTensorProto" Kind="Class" />
      <Type Name="TensorProto" Kind="Class" />
      <Type Name="TensorProto+Types" Kind="Class" />
      <Type Name="TensorProto+Types+DataType" Kind="Enumeration" />
      <Type Name="TensorProto+Types+Segment" Kind="Class" />
      <Type Name="TypeProto" Kind="Class" />
      <Type Name="TypeProto+Types" Kind="Class" />
      <Type Name="TypeProto+Types+HandleTypeProto" Kind="Class" />
      <Type Name="TypeProto+Types+MapTypeProto" Kind="Class" />
      <Type Name="TypeProto+Types+SeqTypeProto" Kind="Class" />
      <Type Name="TypeProto+Types+SparseTensorTypeProto" Kind="Class" />
      <Type Name="TypeProto+Types+TensorShapeProto" Kind="Class" />
      <Type Name="TypeProto+Types+TensorShapeProto+Types" Kind="Class" />
      <Type Name="TypeProto+Types+TensorShapeProto+Types+Dimension" Kind="Class" />
      <Type Name="TypeProto+Types+TensorShapeProto+Types+Dimension+ValueOneofCase" Kind="Enumeration" />
      <Type Name="TypeProto+Types+TensorTypeProto" Kind="Class" />
      <Type Name="TypeProto+Types+TupleTypeProto" Kind="Class" />
      <Type Name="TypeProto+ValueOneofCase" Kind="Enumeration" />
      <Type Name="ValueInfoProto" Kind="Class" />
      <Type Name="ValueProto" Kind="Class" />
      <Type Name="ValueProto+Types" Kind="Class" />
      <Type Name="ValueProto+Types+HandleProto" Kind="Class" />
      <Type Name="ValueProto+Types+MapProto" Kind="Class" />
      <Type Name="ValueProto+Types+SequenceProto" Kind="Class" />
      <Type Name="ValueProto+Types+TupleProto" Kind="Class" />
      <Type Name="ValueProto+ValueOneofCase" Kind="Enumeration" />
      <Type Name="Version" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="Microsoft.ML">
      <Type Name="ILearningPipelineDataStep" Kind="Interface" />
      <Type Name="ILearningPipelineItem" Kind="Interface" />
      <Type Name="ILearningPipelineLoader" Kind="Interface" />
      <Type Name="ILearningPipelinePredictorStep" Kind="Interface" />
      <Type Name="ILearningPipelineStep" Kind="Interface" />
      <Type Name="LearningPipeline" Kind="Class" />
      <Type Name="PredictionModel" Kind="Class" />
      <Type Name="PredictionModel`2" DisplayName="PredictionModel&lt;TInput,TOutput&gt;" Kind="Class" />
      <Type Name="TextLoader`1" DisplayName="TextLoader&lt;TInput&gt;" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Data">
      <Type Name="IDataViewArrayConverter" Kind="Class" />
      <Type Name="IDataViewArrayConverter+Output" Kind="Class" />
      <Type Name="PredictorModelArrayConverter" Kind="Class" />
      <Type Name="PredictorModelArrayConverter+Output" Kind="Class" />
      <Type Name="TextLoader" Kind="Class" />
      <Type Name="TextLoader+Output" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Models">
      <Type Name="AnomalyDetectionEvaluator" Kind="Class" />
      <Type Name="AnomalyDetectionEvaluator+Output" Kind="Class" />
      <Type Name="BinaryClassificationEvaluator" Kind="Class" />
      <Type Name="BinaryClassificationEvaluator+Output" Kind="Class" />
      <Type Name="BinaryCrossValidator" Kind="Class" />
      <Type Name="BinaryCrossValidator+Output" Kind="Class" />
      <Type Name="CachingOptions" Kind="Enumeration" />
      <Type Name="ClusterEvaluator" Kind="Class" />
      <Type Name="ClusterEvaluator+Output" Kind="Class" />
      <Type Name="CrossValidationBinaryMacroSubGraphInput" Kind="Class" />
      <Type Name="CrossValidationBinaryMacroSubGraphOutput" Kind="Class" />
      <Type Name="CrossValidationMacroSubGraphInput" Kind="Class" />
      <Type Name="CrossValidationMacroSubGraphOutput" Kind="Class" />
      <Type Name="CrossValidator" Kind="Class" />
      <Type Name="CrossValidator+Output" Kind="Class" />
      <Type Name="CrossValidatorDatasetSplitter" Kind="Class" />
      <Type Name="CrossValidatorDatasetSplitter+Output" Kind="Class" />
      <Type Name="DatasetTransformer" Kind="Class" />
      <Type Name="DatasetTransformer+Output" Kind="Class" />
      <Type Name="FixedPlattCalibrator" Kind="Class" />
      <Type Name="FixedPlattCalibrator+Output" Kind="Class" />
      <Type Name="MacroUtilsTrainerKinds" Kind="Enumeration" />
      <Type Name="MultiClassClassificationEvaluator" Kind="Class" />
      <Type Name="MultiClassClassificationEvaluator+Output" Kind="Class" />
      <Type Name="MultiOutputRegressorEvaluator" Kind="Class" />
      <Type Name="MultiOutputRegressorEvaluator+Output" Kind="Class" />
      <Type Name="NaiveCalibrator" Kind="Class" />
      <Type Name="NaiveCalibrator+Output" Kind="Class" />
      <Type Name="NormalizeOption" Kind="Enumeration" />
      <Type Name="OneVersusAll" Kind="Class" />
      <Type Name="OneVersusAll+Output" Kind="Class" />
      <Type Name="OneVersusAllMacroSubGraphOutput" Kind="Class" />
      <Type Name="OvaModelCombiner" Kind="Class" />
      <Type Name="OvaModelCombiner+Output" Kind="Class" />
      <Type Name="PAVCalibrator" Kind="Class" />
      <Type Name="PAVCalibrator+Output" Kind="Class" />
      <Type Name="PlattCalibrator" Kind="Class" />
      <Type Name="PlattCalibrator+Output" Kind="Class" />
      <Type Name="QuantileRegressorEvaluator" Kind="Class" />
      <Type Name="QuantileRegressorEvaluator+Output" Kind="Class" />
      <Type Name="RankerEvaluator" Kind="Class" />
      <Type Name="RankerEvaluator+Output" Kind="Class" />
      <Type Name="RegressorEvaluator" Kind="Class" />
      <Type Name="RegressorEvaluator+Output" Kind="Class" />
      <Type Name="Summarizer" Kind="Class" />
      <Type Name="Summarizer+Output" Kind="Class" />
      <Type Name="TrainTestBinaryEvaluator" Kind="Class" />
      <Type Name="TrainTestBinaryEvaluator+Output" Kind="Class" />
      <Type Name="TrainTestBinaryMacroSubGraphInput" Kind="Class" />
      <Type Name="TrainTestBinaryMacroSubGraphOutput" Kind="Class" />
      <Type Name="TrainTestEvaluator" Kind="Class" />
      <Type Name="TrainTestEvaluator+Output" Kind="Class" />
      <Type Name="TrainTestMacroSubGraphInput" Kind="Class" />
      <Type Name="TrainTestMacroSubGraphOutput" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime">
      <Type Name="CalibratorTrainer" Kind="Class" />
      <Type Name="ChannelMessage" Kind="Structure" />
      <Type Name="ChannelMessageKind" Kind="Enumeration" />
      <Type Name="ClassificationLossFunction" Kind="Class" />
      <Type Name="ComponentCatalog" Kind="Class" />
      <Type Name="ComponentCatalog+LoadableClassInfo" Kind="Class" />
      <Type Name="ComponentKind" Kind="Class" />
      <Type Name="ComponentSerializer" Kind="Class" />
      <Type Name="Contracts" Kind="Class" />
      <Type Name="CustomStopWordsRemover" Kind="Class" />
      <Type Name="EarlyStoppingCriterion" Kind="Class" />
      <Type Name="EntryPointTrainerOutput" Kind="Class" />
      <Type Name="EntryPointTransformOutput" Kind="Class" />
      <Type Name="Experiment" Kind="Class" />
      <Type Name="ExperimentSerializer" Kind="Class" />
      <Type Name="ExperimentUtils" Kind="Class" />
      <Type Name="ExpLoss" Kind="Class" />
      <Type Name="ExpLoss+Arguments" Kind="Class" />
      <Type Name="ExpLossClassificationLossFunction" Kind="Class" />
      <Type Name="FastTreeBinaryClassificationFastTreeTrainer" Kind="Class" />
      <Type Name="FastTreeRankingFastTreeTrainer" Kind="Class" />
      <Type Name="FastTreeRegressionFastTreeTrainer" Kind="Class" />
      <Type Name="FastTreeTrainer" Kind="Class" />
      <Type Name="FastTreeTweedieRegressionFastTreeTrainer" Kind="Class" />
      <Type Name="FixedPlattCalibratorCalibratorTrainer" Kind="Class" />
      <Type Name="GLEarlyStoppingCriterion" Kind="Class" />
      <Type Name="HingeLoss" Kind="Class" />
      <Type Name="HingeLoss+Arguments" Kind="Class" />
      <Type Name="HingeLossClassificationLossFunction" Kind="Class" />
      <Type Name="HingeLossSDCAClassificationLossFunction" Kind="Class" />
      <Type Name="HostExtensions" Kind="Class" />
      <Type Name="IBulkDistributionPredictor`6" DisplayName="IBulkDistributionPredictor&lt;TFeatures,TFeaturesCollection,TResult,TResultCollection,TResultDistribution,TResultDistributionCollection&gt;" Kind="Interface" />
      <Type Name="IBulkPredictor`4" DisplayName="IBulkPredictor&lt;TFeatures,TFeaturesCollection,TResult,TResultCollection&gt;" Kind="Interface" />
      <Type Name="IChannel" Kind="Interface" />
      <Type Name="IChannelProvider" Kind="Interface" />
      <Type Name="IClassificationLoss" Kind="Interface" />
      <Type Name="IDistPredictorProducing`2" DisplayName="IDistPredictorProducing&lt;TResult,TResultDistribution&gt;" Kind="Interface" />
      <Type Name="IDistributionPredictor`3" DisplayName="IDistributionPredictor&lt;TFeatures,TResult,TResultDistribution&gt;" Kind="Interface" />
      <Type Name="IExceptionContext" Kind="Interface" />
      <Type Name="IFileHandle" Kind="Interface" />
      <Type Name="IHost" Kind="Interface" />
      <Type Name="IHostEnvironment" Kind="Interface" />
      <Type Name="IIncrementalTrainer`2" DisplayName="IIncrementalTrainer&lt;TDataSet,TPredictor&gt;" Kind="Interface" />
      <Type Name="IIncrementalValidatingTrainer`2" DisplayName="IIncrementalValidatingTrainer&lt;TDataSet,TPredictor&gt;" Kind="Interface" />
      <Type Name="ILossFunction`2" DisplayName="ILossFunction&lt;TOutput,TLabel&gt;" Kind="Interface" />
      <Type Name="IMetaLinearTrainer" Kind="Interface" />
      <Type Name="IModelCombiner`2" DisplayName="IModelCombiner&lt;TModel,TPredictor&gt;" Kind="Interface" />
      <Type Name="IParameterValue" Kind="Interface" />
      <Type Name="IParameterValue`1" DisplayName="IParameterValue&lt;TValue&gt;" Kind="Interface" />
      <Type Name="IPipe`1" DisplayName="IPipe&lt;TMessage&gt;" Kind="Interface" />
      <Type Name="IPredictor" Kind="Interface" />
      <Type Name="IPredictor`2" DisplayName="IPredictor&lt;TFeatures,TResult&gt;" Kind="Interface" />
      <Type Name="IPredictorProducing`1" DisplayName="IPredictorProducing&lt;TResult&gt;" Kind="Interface" />
      <Type Name="IProgressChannel" Kind="Interface" />
      <Type Name="IProgressChannelProvider" Kind="Interface" />
      <Type Name="IProgressEntry" Kind="Interface" />
      <Type Name="IRandom" Kind="Interface" />
      <Type Name="IRegressionLoss" Kind="Interface" />
      <Type Name="IRunResult" Kind="Interface" />
      <Type Name="IRunResult`1" DisplayName="IRunResult&lt;T&gt;" Kind="Interface" />
      <Type Name="IScalarOutputLoss" Kind="Interface" />
      <Type Name="ISupportClassificationLossFactory" Kind="Interface" />
      <Type Name="ISupportRegressionLossFactory" Kind="Interface" />
      <Type Name="ISupportSdcaClassificationLoss" Kind="Interface" />
      <Type Name="ISupportSdcaClassificationLossFactory" Kind="Interface" />
      <Type Name="ISupportSdcaLoss" Kind="Interface" />
      <Type Name="ISupportSdcaRegressionLoss" Kind="Interface" />
      <Type Name="ISupportSdcaRegressionLossFactory" Kind="Interface" />
      <Type Name="ISweeper" Kind="Interface" />
      <Type Name="ISweepResultEvaluator`1" DisplayName="ISweepResultEvaluator&lt;TResults&gt;" Kind="Interface" />
      <Type Name="ITrainer" Kind="Interface" />
      <Type Name="ITrainer`1" DisplayName="ITrainer&lt;TDataSet&gt;" Kind="Interface" />
      <Type Name="ITrainer`2" DisplayName="ITrainer&lt;TDataSet,TPredictor&gt;" Kind="Interface" />
      <Type Name="ITrainerArguments" Kind="Interface" />
      <Type Name="ITrainerEx" Kind="Interface" />
      <Type Name="ITrainerHost" Kind="Interface" />
      <Type Name="IValidatingTrainer`1" DisplayName="IValidatingTrainer&lt;TDataSet&gt;" Kind="Interface" />
      <Type Name="IValueGenerator" Kind="Interface" />
      <Type Name="LoadableClassAttribute" Kind="Class" />
      <Type Name="LoadableClassAttributeBase" Kind="Class" />
      <Type Name="LogLoss" Kind="Class" />
      <Type Name="LogLossClassificationLossFunction" Kind="Class" />
      <Type Name="LogLossFactory" Kind="Class" />
      <Type Name="LogLossSDCAClassificationLossFunction" Kind="Class" />
      <Type Name="LPEarlyStoppingCriterion" Kind="Class" />
      <Type Name="MessageSensitivity" Kind="Enumeration" />
      <Type Name="NaiveCalibratorCalibratorTrainer" Kind="Class" />
      <Type Name="NgramExtractor" Kind="Class" />
      <Type Name="NGramHashNgramExtractor" Kind="Class" />
      <Type Name="NGramNgramExtractor" Kind="Class" />
      <Type Name="ParallelTraining" Kind="Class" />
      <Type Name="ParameterSet" Kind="Class" />
      <Type Name="PavCalibratorCalibratorTrainer" Kind="Class" />
      <Type Name="PlattCalibratorCalibratorTrainer" Kind="Class" />
      <Type Name="PoissonLoss" Kind="Class" />
      <Type Name="PoissonLossFactory" Kind="Class" />
      <Type Name="PoissonLossRegressionLossFunction" Kind="Class" />
      <Type Name="PQEarlyStoppingCriterion" Kind="Class" />
      <Type Name="PredefinedStopWordsRemover" Kind="Class" />
      <Type Name="PredictionKind" Kind="Enumeration" />
      <Type Name="ProgressHeader" Kind="Class" />
      <Type Name="QuantileStatistics" Kind="Class" />
      <Type Name="RandomUtils" Kind="Class" />
      <Type Name="RegressionLossFunction" Kind="Class" />
      <Type Name="RunMetric" Kind="Class" />
      <Type Name="RunResult" Kind="Class" />
      <Type Name="SDCAClassificationLossFunction" Kind="Class" />
      <Type Name="SDCARegressionLossFunction" Kind="Class" />
      <Type Name="ServerChannel" Kind="Class" />
      <Type Name="ServerChannel+Bundle" Kind="Class" />
      <Type Name="ServerChannel+IPendingBundleNotification" Kind="Interface" />
      <Type Name="ServerChannel+IServer" Kind="Interface" />
      <Type Name="ServerChannel+IServerFactory" Kind="Interface" />
      <Type Name="ServerChannelUtilities" Kind="Class" />
      <Type Name="SignatureAnomalyDetectorTrainer" Kind="Delegate" />
      <Type Name="SignatureBinaryClassifierTrainer" Kind="Delegate" />
      <Type Name="SignatureClassificationLoss" Kind="Delegate" />
      <Type Name="SignatureClusteringTrainer" Kind="Delegate" />
      <Type Name="SignatureDefault" Kind="Delegate" />
      <Type Name="SignatureMatrixRecommendingTrainer" Kind="Delegate" />
      <Type Name="SignatureMultiClassClassifierTrainer" Kind="Delegate" />
      <Type Name="SignatureMultiOutputRegressorTrainer" Kind="Delegate" />
      <Type Name="SignatureRankerTrainer" Kind="Delegate" />
      <Type Name="SignatureRegressionLoss" Kind="Delegate" />
      <Type Name="SignatureRegressorTrainer" Kind="Delegate" />
      <Type Name="SignatureSequenceTrainer" Kind="Delegate" />
      <Type Name="SignatureSuggestedSweepsParser" Kind="Delegate" />
      <Type Name="SignatureSweeper" Kind="Delegate" />
      <Type Name="SignatureSweepResultEvaluator" Kind="Delegate" />
      <Type Name="SignatureTrainer" Kind="Delegate" />
      <Type Name="SimpleFileHandle" Kind="Class" />
      <Type Name="SingleParallelTraining" Kind="Class" />
      <Type Name="SmoothedHingeLoss" Kind="Class" />
      <Type Name="SmoothedHingeLoss+Arguments" Kind="Class" />
      <Type Name="SmoothedHingeLossClassificationLossFunction" Kind="Class" />
      <Type Name="SmoothedHingeLossSDCAClassificationLossFunction" Kind="Class" />
      <Type Name="SquaredLoss" Kind="Class" />
      <Type Name="SquaredLossFactory" Kind="Class" />
      <Type Name="SquaredLossRegressionLossFunction" Kind="Class" />
      <Type Name="SquaredLossSDCARegressionLossFunction" Kind="Class" />
      <Type Name="StopWordsRemover" Kind="Class" />
      <Type Name="SysRandom" Kind="Class" />
      <Type Name="TauswortheHybrid" Kind="Class" />
      <Type Name="TauswortheHybrid+State" Kind="Structure" />
      <Type Name="TelemetryException" Kind="Class" />
      <Type Name="TelemetryMessage" Kind="Class" />
      <Type Name="TelemetryMetric" Kind="Class" />
      <Type Name="TelemetryTrace" Kind="Class" />
      <Type Name="TREarlyStoppingCriterion" Kind="Class" />
      <Type Name="TweedieLoss" Kind="Class" />
      <Type Name="TweedieLoss+Arguments" Kind="Class" />
      <Type Name="TweedieLossRegressionLossFunction" Kind="Class" />
      <Type Name="UPEarlyStoppingCriterion" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Api">
      <Type Name="BatchPredictionEngine`2" DisplayName="BatchPredictionEngine&lt;TSrc,TDst&gt;" Kind="Class" />
      <Type Name="ColumnNameAttribute" Kind="Class" />
      <Type Name="ComponentCreation" Kind="Class" />
      <Type Name="CursorChannelAttribute" Kind="Class" />
      <Type Name="CursoringUtils" Kind="Class" />
      <Type Name="GenerateCodeCommand" Kind="Class" />
      <Type Name="GenerateCodeCommand+Arguments" Kind="Class" />
      <Type Name="ICursorable`1" DisplayName="ICursorable&lt;TRow&gt;" Kind="Interface" />
      <Type Name="IRow`1" DisplayName="IRow&lt;TRow&gt;" Kind="Interface" />
      <Type Name="IRowCursor`1" DisplayName="IRowCursor&lt;TRow&gt;" Kind="Interface" />
      <Type Name="KeyTypeAttribute" Kind="Class" />
      <Type Name="LambdaTransform" Kind="Class" />
      <Type Name="LambdaTransform+LoadDelegate" Kind="Delegate" />
      <Type Name="MetadataInfo" Kind="Class" />
      <Type Name="MetadataInfo`1" DisplayName="MetadataInfo&lt;T&gt;" Kind="Class" />
      <Type Name="MetadataInfo`1+TElement" DisplayName="MetadataInfo&lt;T&gt;+TElement" Kind="Class" />
      <Type Name="NoColumnAttribute" Kind="Class" />
      <Type Name="PredictionEngine`2" DisplayName="PredictionEngine&lt;TSrc,TDst&gt;" Kind="Class" />
      <Type Name="Predictor" Kind="Class" />
      <Type Name="SchemaDefinition" Kind="Class" />
      <Type Name="SchemaDefinition+Column" Kind="Class" />
      <Type Name="SimplePredictionEngine" Kind="Class" />
      <Type Name="SimplePredictionEngine+Prediction" Kind="Class" />
      <Type Name="VectorTypeAttribute" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Command">
      <Type Name="ICommand" Kind="Interface" />
      <Type Name="SignatureCommand" Kind="Delegate" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.CommandLine">
      <Type Name="ArgumentAttribute" Kind="Class" />
      <Type Name="ArgumentAttribute+VisibilityType" Kind="Enumeration" />
      <Type Name="ArgumentType" Kind="Enumeration" />
      <Type Name="CharCursor" Kind="Class" />
      <Type Name="CmdLexer" Kind="Class" />
      <Type Name="CmdParser" Kind="Class" />
      <Type Name="CmdParser+ArgInfo" Kind="Class" />
      <Type Name="CmdParser+ArgInfo+Arg" Kind="Class" />
      <Type Name="CmdQuoter" Kind="Class" />
      <Type Name="DefaultArgumentAttribute" Kind="Class" />
      <Type Name="EnumValueDisplayAttribute" Kind="Class" />
      <Type Name="ErrorReporter" Kind="Delegate" />
      <Type Name="HideEnumValueAttribute" Kind="Class" />
      <Type Name="SettingsFlags" Kind="Enumeration" />
      <Type Name="SpecialPurpose" Kind="Class" />
      <Type Name="SubComponent" Kind="Class" />
      <Type Name="SubComponent`2" DisplayName="SubComponent&lt;TRes,TSig&gt;" Kind="Class" />
      <Type Name="SubComponentExtensions" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Data">
      <Type Name="AffineNormSerializationUtils" Kind="Class" />
      <Type Name="AnomalyDetectionEvaluator" Kind="Class" />
      <Type Name="AnomalyDetectionEvaluator+Aggregator" Kind="Class" />
      <Type Name="AnomalyDetectionEvaluator+Aggregator+CountersBase" Kind="Class" />
      <Type Name="AnomalyDetectionEvaluator+Aggregator+CountersBase+Info" Kind="Structure" />
      <Type Name="AnomalyDetectionEvaluator+Arguments" Kind="Class" />
      <Type Name="AnomalyDetectionEvaluator+OverallMetrics" Kind="Class" />
      <Type Name="AnomalyDetectionEvaluator+TopKResultsColumns" Kind="Class" />
      <Type Name="AnomalyDetectionMamlEvaluator" Kind="Class" />
      <Type Name="AnomalyDetectionMamlEvaluator+Arguments" Kind="Class" />
      <Type Name="AppendRowsDataView" Kind="Class" />
      <Type Name="ApplyTransformUtils" Kind="Class" />
      <Type Name="ArrayDataViewBuilder" Kind="Class" />
      <Type Name="BinaryClassifierEvaluator" Kind="Class" />
      <Type Name="BinaryClassifierEvaluator+Aggregator" Kind="Class" />
      <Type Name="BinaryClassifierEvaluator+Aggregator+Counters" Kind="Class" />
      <Type Name="BinaryClassifierEvaluator+Arguments" Kind="Class" />
      <Type Name="BinaryClassifierEvaluator+Metrics" Kind="Enumeration" />
      <Type Name="BinaryClassifierMamlEvaluator" Kind="Class" />
      <Type Name="BinaryClassifierMamlEvaluator+Arguments" Kind="Class" />
      <Type Name="BinaryClassifierSchema" Kind="Class" />
      <Type Name="BinaryClassifierScorer" Kind="Class" />
      <Type Name="BinaryClassifierScorer+Arguments" Kind="Class" />
      <Type Name="BinaryPerInstanceEvaluator" Kind="Class" />
      <Type Name="BindingsWrappedRowCursor" Kind="Class" />
      <Type Name="BinNormSerializationUtils" Kind="Class" />
      <Type Name="BoolType" Kind="Class" />
      <Type Name="BootstrapSample" Kind="Class" />
      <Type Name="BootstrapSampleTransform" Kind="Class" />
      <Type Name="BootstrapSampleTransform+Arguments" Kind="Class" />
      <Type Name="BufferBuilder`1" DisplayName="BufferBuilder&lt;T&gt;" Kind="Class" />
      <Type Name="CacheDataView" Kind="Class" />
      <Type Name="Categorical" Kind="Class" />
      <Type Name="CategoricalHashTransform" Kind="Class" />
      <Type Name="CategoricalHashTransform+Arguments" Kind="Class" />
      <Type Name="CategoricalHashTransform+Column" Kind="Class" />
      <Type Name="CategoricalTransform" Kind="Class" />
      <Type Name="CategoricalTransform+Arguments" Kind="Class" />
      <Type Name="CategoricalTransform+Column" Kind="Class" />
      <Type Name="CategoricalTransform+OutputKind" Kind="Enumeration" />
      <Type Name="CdfNormSerializationUtils" Kind="Class" />
      <Type Name="ChannelProviderBase" Kind="Class" />
      <Type Name="ChannelProviderBase+ExceptionContextKeys" Kind="Class" />
      <Type Name="ChooseColumnsByIndexTransform" Kind="Class" />
      <Type Name="ChooseColumnsByIndexTransform+Arguments" Kind="Class" />
      <Type Name="ChooseColumnsTransform" Kind="Class" />
      <Type Name="ChooseColumnsTransform+Arguments" Kind="Class" />
      <Type Name="ChooseColumnsTransform+Column" Kind="Class" />
      <Type Name="ChooseColumnsTransform+HiddenColumnOption" Kind="Enumeration" />
      <Type Name="ClusteringEvaluator" Kind="Class" />
      <Type Name="ClusteringEvaluator+Aggregator" Kind="Class" />
      <Type Name="ClusteringEvaluator+Aggregator+Counters" Kind="Class" />
      <Type Name="ClusteringEvaluator+Arguments" Kind="Class" />
      <Type Name="ClusteringMamlEvaluator" Kind="Class" />
      <Type Name="ClusteringMamlEvaluator+Arguments" Kind="Class" />
      <Type Name="ClusteringPerInstanceEvaluator" Kind="Class" />
      <Type Name="ClusteringScorer" Kind="Class" />
      <Type Name="ClusteringScorer+Arguments" Kind="Class" />
      <Type Name="ColumnBindingsBase" Kind="Class" />
      <Type Name="ColumnInfo" Kind="Class" />
      <Type Name="ColumnMetadataInfo" Kind="Class" />
      <Type Name="ColumnParsingUtils" Kind="Class" />
      <Type Name="ColumnType" Kind="Class" />
      <Type Name="Combiner`1" DisplayName="Combiner&lt;T&gt;" Kind="Class" />
      <Type Name="CompositeDataLoader" Kind="Class" />
      <Type Name="CompositeDataLoader+Arguments" Kind="Class" />
      <Type Name="CompositeTransform" Kind="Class" />
      <Type Name="ConcatTransform" Kind="Class" />
      <Type Name="ConcatTransform+Arguments" Kind="Class" />
      <Type Name="ConcatTransform+Column" Kind="Class" />
      <Type Name="ConcatTransform+TaggedArguments" Kind="Class" />
      <Type Name="ConcatTransform+TaggedColumn" Kind="Class" />
      <Type Name="ConvertTransform" Kind="Class" />
      <Type Name="ConvertTransform+Arguments" Kind="Class" />
      <Type Name="ConvertTransform+Column" Kind="Class" />
      <Type Name="ConvertTransform+TypeInfoCommand" Kind="Class" />
      <Type Name="ConvertTransform+TypeInfoCommand+Arguments" Kind="Class" />
      <Type Name="CopyColumnsTransform" Kind="Class" />
      <Type Name="CopyColumnsTransform+Arguments" Kind="Class" />
      <Type Name="CopyColumnsTransform+Column" Kind="Class" />
      <Type Name="CountFeatureSelectionTransform" Kind="Class" />
      <Type Name="CountFeatureSelectionTransform+Arguments" Kind="Class" />
      <Type Name="CountFeatureSelectionUtils" Kind="Class" />
      <Type Name="CrossValidationCommand" Kind="Class" />
      <Type Name="CrossValidationCommand+Arguments" Kind="Class" />
      <Type Name="CursorState" Kind="Enumeration" />
      <Type Name="DataCommand" Kind="Class" />
      <Type Name="DataCommand+ArgumentsBase" Kind="Class" />
      <Type Name="DataCommand+ImplBase`1" DisplayName="DataCommand+ImplBase&lt;TArgs&gt;" Kind="Class" />
      <Type Name="DataKind" Kind="Enumeration" />
      <Type Name="DataKindExtensions" Kind="Class" />
      <Type Name="DataSaverUtils" Kind="Class" />
      <Type Name="DataViewUtils" Kind="Class" />
      <Type Name="DateTimeType" Kind="Class" />
      <Type Name="DateTimeZoneType" Kind="Class" />
      <Type Name="DefaultColumnNames" Kind="Class" />
      <Type Name="DelimitedTokenizeTransform" Kind="Class" />
      <Type Name="DelimitedTokenizeTransform+Arguments" Kind="Class" />
      <Type Name="DelimitedTokenizeTransform+ArgumentsBase" Kind="Class" />
      <Type Name="DelimitedTokenizeTransform+Column" Kind="Class" />
      <Type Name="DelimitedTokenizeTransform+TokenizeArguments" Kind="Class" />
      <Type Name="DropColumnsTransform" Kind="Class" />
      <Type Name="DropColumnsTransform+Arguments" Kind="Class" />
      <Type Name="DropColumnsTransform+ArgumentsBase" Kind="Class" />
      <Type Name="DropColumnsTransform+KeepArguments" Kind="Class" />
      <Type Name="DropSlotsTransform" Kind="Class" />
      <Type Name="DropSlotsTransform+Arguments" Kind="Class" />
      <Type Name="DropSlotsTransform+Column" Kind="Class" />
      <Type Name="DropSlotsTransform+Range" Kind="Class" />
      <Type Name="DvBool" Kind="Structure" />
      <Type Name="DvDateTime" Kind="Structure" />
      <Type Name="DvDateTimeZone" Kind="Structure" />
      <Type Name="DvInt1" Kind="Structure" />
      <Type Name="DvInt2" Kind="Structure" />
      <Type Name="DvInt4" Kind="Structure" />
      <Type Name="DvInt8" Kind="Structure" />
      <Type Name="DvText" Kind="Structure" />
      <Type Name="DvTimeSpan" Kind="Structure" />
      <Type Name="EmptyDataView" Kind="Class" />
      <Type Name="Evaluate" Kind="Class" />
      <Type Name="EvaluateCommand" Kind="Class" />
      <Type Name="EvaluateCommand+Arguments" Kind="Class" />
      <Type Name="EvaluateTransform" Kind="Class" />
      <Type Name="EvaluateTransform+Arguments" Kind="Class" />
      <Type Name="EvaluateUtils" Kind="Class" />
      <Type Name="EvaluatorBase`1" DisplayName="EvaluatorBase&lt;TAgg&gt;" Kind="Class" />
      <Type Name="EvaluatorBase`1+AggregatorBase" DisplayName="EvaluatorBase&lt;TAgg&gt;+AggregatorBase" Kind="Class" />
      <Type Name="EvaluatorBase`1+AggregatorDictionaryBase" DisplayName="EvaluatorBase&lt;TAgg&gt;+AggregatorDictionaryBase" Kind="Class" />
      <Type Name="EvaluatorBase`1+AucAggregatorBase" DisplayName="EvaluatorBase&lt;TAgg&gt;+AucAggregatorBase" Kind="Class" />
      <Type Name="EvaluatorBase`1+AucAggregatorBase`1" DisplayName="EvaluatorBase&lt;TAgg&gt;+AucAggregatorBase&lt;T&gt;" Kind="Class" />
      <Type Name="EvaluatorBase`1+AuPrcAggregatorBase" DisplayName="EvaluatorBase&lt;TAgg&gt;+AuPrcAggregatorBase" Kind="Class" />
      <Type Name="EvaluatorBase`1+AuPrcAggregatorBase`1" DisplayName="EvaluatorBase&lt;TAgg&gt;+AuPrcAggregatorBase&lt;T&gt;" Kind="Class" />
      <Type Name="EvaluatorBase`1+UnweightedAucAggregator" DisplayName="EvaluatorBase&lt;TAgg&gt;+UnweightedAucAggregator" Kind="Class" />
      <Type Name="EvaluatorBase`1+UnweightedAuPrcAggregator" DisplayName="EvaluatorBase&lt;TAgg&gt;+UnweightedAuPrcAggregator" Kind="Class" />
      <Type Name="EvaluatorBase`1+UnweightedAuPrcAggregator+Info" DisplayName="EvaluatorBase&lt;TAgg&gt;+UnweightedAuPrcAggregator+Info" Kind="Structure" />
      <Type Name="EvaluatorBase`1+WeightedAucAggregator" DisplayName="EvaluatorBase&lt;TAgg&gt;+WeightedAucAggregator" Kind="Class" />
      <Type Name="EvaluatorBase`1+WeightedAucAggregator+AucInfo" DisplayName="EvaluatorBase&lt;TAgg&gt;+WeightedAucAggregator+AucInfo" Kind="Structure" />
      <Type Name="EvaluatorBase`1+WeightedAuPrcAggregator" DisplayName="EvaluatorBase&lt;TAgg&gt;+WeightedAuPrcAggregator" Kind="Class" />
      <Type Name="EvaluatorBase`1+WeightedAuPrcAggregator+Info" DisplayName="EvaluatorBase&lt;TAgg&gt;+WeightedAuPrcAggregator+Info" Kind="Structure" />
      <Type Name="ExtractorColumn" Kind="Class" />
      <Type Name="FileHandleSource" Kind="Class" />
      <Type Name="FilterBase" Kind="Class" />
      <Type Name="FloatAdder" Kind="Class" />
      <Type Name="GaussianFourierSampler" Kind="Class" />
      <Type Name="GaussianFourierSampler+Arguments" Kind="Class" />
      <Type Name="GenerateNumberTransform" Kind="Class" />
      <Type Name="GenerateNumberTransform+Arguments" Kind="Class" />
      <Type Name="GenerateNumberTransform+Column" Kind="Class" />
      <Type Name="GenericScorer" Kind="Class" />
      <Type Name="GenericScorer+Arguments" Kind="Class" />
      <Type Name="GroupingOperations" Kind="Class" />
      <Type Name="GroupTransform" Kind="Class" />
      <Type Name="GroupTransform+Arguments" Kind="Class" />
      <Type Name="GroupTransform+Cursor" Kind="Class" />
      <Type Name="HashJoin" Kind="Class" />
      <Type Name="HashJoinTransform" Kind="Class" />
      <Type Name="HashJoinTransform+Arguments" Kind="Class" />
      <Type Name="HashJoinTransform+Column" Kind="Class" />
      <Type Name="HashJoinTransform+ColumnInfoEx" Kind="Class" />
      <Type Name="HashTransform" Kind="Class" />
      <Type Name="HashTransform+Arguments" Kind="Class" />
      <Type Name="HashTransform+Column" Kind="Class" />
      <Type Name="HostEnvironmentBase`1" DisplayName="HostEnvironmentBase&lt;TEnv&gt;" Kind="Class" />
      <Type Name="HostEnvironmentBase`1+ChannelBase" DisplayName="HostEnvironmentBase&lt;TEnv&gt;+ChannelBase" Kind="Class" />
      <Type Name="HostEnvironmentBase`1+Dispatcher" DisplayName="HostEnvironmentBase&lt;TEnv&gt;+Dispatcher" Kind="Class" />
      <Type Name="HostEnvironmentBase`1+Dispatcher`1" DisplayName="HostEnvironmentBase&lt;TEnv&gt;+Dispatcher&lt;TMessage&gt;" Kind="Class" />
      <Type Name="HostEnvironmentBase`1+HostBase" DisplayName="HostEnvironmentBase&lt;TEnv&gt;+HostBase" Kind="Class" />
      <Type Name="HostEnvironmentBase`1+Pipe`1" DisplayName="HostEnvironmentBase&lt;TEnv&gt;+Pipe&lt;TMessage&gt;" Kind="Class" />
      <Type Name="HostEnvironmentBase`1+PipeBase`1" DisplayName="HostEnvironmentBase&lt;TEnv&gt;+PipeBase&lt;TMessage&gt;" Kind="Class" />
      <Type Name="IColumn" Kind="Interface" />
      <Type Name="IColumn`1" DisplayName="IColumn&lt;T&gt;" Kind="Interface" />
      <Type Name="IColumnAggregator`1" DisplayName="IColumnAggregator&lt;T&gt;" Kind="Interface" />
      <Type Name="IColumnFunction" Kind="Interface" />
      <Type Name="IColumnFunctionBuilder" Kind="Interface" />
      <Type Name="ICounted" Kind="Interface" />
      <Type Name="ICursor" Kind="Interface" />
      <Type Name="IDataLoader" Kind="Interface" />
      <Type Name="IDataSaver" Kind="Interface" />
      <Type Name="IDataScorerTransform" Kind="Interface" />
      <Type Name="IDataTransform" Kind="Interface" />
      <Type Name="IDataView" Kind="Interface" />
      <Type Name="IEvaluator" Kind="Interface" />
      <Type Name="IFourierDistributionSampler" Kind="Interface" />
      <Type Name="IMamlEvaluator" Kind="Interface" />
      <Type Name="IManyToOneColumn" Kind="Interface" />
      <Type Name="IMessageDispatcher" Kind="Interface" />
      <Type Name="IMessageSource" Kind="Interface" />
      <Type Name="IMultiStreamSource" Kind="Interface" />
      <Type Name="INgramExtractorFactory" Kind="Interface" />
      <Type Name="INgramExtractorFactoryFactory" Kind="Interface" />
      <Type Name="InvertHashCollector`1" DisplayName="InvertHashCollector&lt;T&gt;" Kind="Class" />
      <Type Name="InvertHashUtils" Kind="Class" />
      <Type Name="IOneToOneColumn" Kind="Interface" />
      <Type Name="IRow" Kind="Interface" />
      <Type Name="IRowCursor" Kind="Interface" />
      <Type Name="IRowCursorConsolidator" Kind="Interface" />
      <Type Name="IRowMapper" Kind="Interface" />
      <Type Name="IRowSeekable" Kind="Interface" />
      <Type Name="IRowSeeker" Kind="Interface" />
      <Type Name="IRowToRowMapper" Kind="Interface" />
      <Type Name="ISchema" Kind="Interface" />
      <Type Name="ISchemaBindableMapper" Kind="Interface" />
      <Type Name="ISchemaBoundMapper" Kind="Interface" />
      <Type Name="ISchemaBoundRowMapper" Kind="Interface" />
      <Type Name="ISchematized" Kind="Interface" />
      <Type Name="ISlotCursor" Kind="Interface" />
      <Type Name="ITokenizeTransform" Kind="Interface" />
      <Type Name="ITransformTemplate" Kind="Interface" />
      <Type Name="ITransposeDataView" Kind="Interface" />
      <Type Name="ITransposeSchema" Kind="Interface" />
      <Type Name="IValueMapper" Kind="Interface" />
      <Type Name="IValueMapperDist" Kind="Interface" />
      <Type Name="KeyRange" Kind="Class" />
      <Type Name="KeyToBinaryVectorTransform" Kind="Class" />
      <Type Name="KeyToBinaryVectorTransform+Arguments" Kind="Class" />
      <Type Name="KeyToValueTransform" Kind="Class" />
      <Type Name="KeyToValueTransform+Arguments" Kind="Class" />
      <Type Name="KeyToValueTransform+Column" Kind="Class" />
      <Type Name="KeyToVectorTransform" Kind="Class" />
      <Type Name="KeyToVectorTransform+Arguments" Kind="Class" />
      <Type Name="KeyToVectorTransform+Column" Kind="Class" />
      <Type Name="KeyToVectorTransform+ColumnBase" Kind="Class" />
      <Type Name="KeyType" Kind="Class" />
      <Type Name="LabelConvertTransform" Kind="Class" />
      <Type Name="LabelConvertTransform+Arguments" Kind="Class" />
      <Type Name="LabelConvertTransform+Column" Kind="Class" />
      <Type Name="LabelIndicatorTransform" Kind="Class" />
      <Type Name="LabelIndicatorTransform+Arguments" Kind="Class" />
      <Type Name="LabelIndicatorTransform+Column" Kind="Class" />
      <Type Name="LambdaColumnMapper" Kind="Class" />
      <Type Name="LambdaFilter" Kind="Class" />
      <Type Name="LaplacianFourierSampler" Kind="Class" />
      <Type Name="LaplacianFourierSampler+Arguments" Kind="Class" />
      <Type Name="LearnerFeatureSelectionTransform" Kind="Class" />
      <Type Name="LearnerFeatureSelectionTransform+Arguments" Kind="Class" />
      <Type Name="LinkedRootCursorBase`1" DisplayName="LinkedRootCursorBase&lt;TInput&gt;" Kind="Class" />
      <Type Name="LinkedRowFilterCursorBase" Kind="Class" />
      <Type Name="LinkedRowRootCursorBase" Kind="Class" />
      <Type Name="LoaderUtils" Kind="Class" />
      <Type Name="LoadTransform" Kind="Class" />
      <Type Name="LoadTransform+Arguments" Kind="Class" />
      <Type Name="LpNormalization" Kind="Class" />
      <Type Name="LpNormNormalizerTransform" Kind="Class" />
      <Type Name="LpNormNormalizerTransform+Arguments" Kind="Class" />
      <Type Name="LpNormNormalizerTransform+Column" Kind="Class" />
      <Type Name="LpNormNormalizerTransform+ColumnBase" Kind="Class" />
      <Type Name="LpNormNormalizerTransform+GcnArguments" Kind="Class" />
      <Type Name="LpNormNormalizerTransform+GcnColumn" Kind="Class" />
      <Type Name="LpNormNormalizerTransform+NormalizerKind" Kind="Enumeration" />
      <Type Name="MamlEvaluatorBase" Kind="Class" />
      <Type Name="MamlEvaluatorBase+ArgumentsBase" Kind="Class" />
      <Type Name="ManyToOneColumn" Kind="Class" />
      <Type Name="ManyToOneColumn`1" DisplayName="ManyToOneColumn&lt;T&gt;" Kind="Class" />
      <Type Name="ManyToOneColumnBindingsBase" Kind="Class" />
      <Type Name="ManyToOneColumnBindingsBase+ColInfo" Kind="Class" />
      <Type Name="MeanVarDblAggregator" Kind="Class" />
      <Type Name="MeanVarSngAggregator" Kind="Class" />
      <Type Name="MetadataDispatcher" Kind="Class" />
      <Type Name="MetadataDispatcher+Builder" Kind="Class" />
      <Type Name="MetadataDispatcherBase" Kind="Class" />
      <Type Name="MetadataDispatcherBase+ColInfo" Kind="Class" />
      <Type Name="MetadataDispatcherBase+GetterInfo" Kind="Class" />
      <Type Name="MetadataDispatcherBase+GetterInfo`1" DisplayName="MetadataDispatcherBase+GetterInfo&lt;TValue&gt;" Kind="Class" />
      <Type Name="MetadataDispatcherBase+GetterInfoDelegate`1" DisplayName="MetadataDispatcherBase+GetterInfoDelegate&lt;TValue&gt;" Kind="Class" />
      <Type Name="MetadataDispatcherBase+GetterInfoPrimitive`1" DisplayName="MetadataDispatcherBase+GetterInfoPrimitive&lt;TValue&gt;" Kind="Class" />
      <Type Name="MetadataInfo" Kind="Class" />
      <Type Name="MetadataInfo`1" DisplayName="MetadataInfo&lt;T&gt;" Kind="Class" />
      <Type Name="MetadataUtils" Kind="Class" />
      <Type Name="MetadataUtils+Const" Kind="Class" />
      <Type Name="MetadataUtils+Const+ScoreColumnKind" Kind="Class" />
      <Type Name="MetadataUtils+Const+ScoreValueKind" Kind="Class" />
      <Type Name="MetadataUtils+Kinds" Kind="Class" />
      <Type Name="MetadataUtils+MetadataGetter`1" DisplayName="MetadataUtils+MetadataGetter&lt;TValue&gt;" Kind="Delegate" />
      <Type Name="MetricColumn" Kind="Class" />
      <Type Name="MetricColumn+Objective" Kind="Enumeration" />
      <Type Name="MetricKinds" Kind="Class" />
      <Type Name="MetricKinds+ColumnNames" Kind="Class" />
      <Type Name="MetricWriter" Kind="Class" />
      <Type Name="MinMaxDblAggregator" Kind="Class" />
      <Type Name="MinMaxSngAggregator" Kind="Class" />
      <Type Name="MissingValueIndicatorTransform" Kind="Class" />
      <Type Name="MissingValueIndicatorTransform+Arguments" Kind="Class" />
      <Type Name="MissingValueIndicatorTransform+Column" Kind="Class" />
      <Type Name="MultiClassClassifierEvaluator" Kind="Class" />
      <Type Name="MultiClassClassifierEvaluator+Aggregator" Kind="Class" />
      <Type Name="MultiClassClassifierEvaluator+Aggregator+Counters" Kind="Class" />
      <Type Name="MultiClassClassifierEvaluator+Arguments" Kind="Class" />
      <Type Name="MultiClassClassifierEvaluator+Metrics" Kind="Enumeration" />
      <Type Name="MultiClassClassifierScorer" Kind="Class" />
      <Type Name="MultiClassClassifierScorer+Arguments" Kind="Class" />
      <Type Name="MultiClassClassifierScorer+LabelNameBindableMapper" Kind="Class" />
      <Type Name="MultiClassMamlEvaluator" Kind="Class" />
      <Type Name="MultiClassMamlEvaluator+Arguments" Kind="Class" />
      <Type Name="MultiClassPerInstanceEvaluator" Kind="Class" />
      <Type Name="MultiFileSource" Kind="Class" />
      <Type Name="MultiOutputRegressionEvaluator" Kind="Class" />
      <Type Name="MultiOutputRegressionEvaluator+Aggregator" Kind="Class" />
      <Type Name="MultiOutputRegressionEvaluator+Aggregator+Counters" Kind="Class" />
      <Type Name="MultiOutputRegressionEvaluator+Arguments" Kind="Class" />
      <Type Name="MultiOutputRegressionMamlEvaluator" Kind="Class" />
      <Type Name="MultiOutputRegressionMamlEvaluator+Arguments" Kind="Class" />
      <Type Name="MultiOutputRegressionPerInstanceEvaluator" Kind="Class" />
      <Type Name="MutualInformationFeatureSelectionTransform" Kind="Class" />
      <Type Name="MutualInformationFeatureSelectionTransform+Arguments" Kind="Class" />
      <Type Name="MutualInformationFeatureSelectionUtils" Kind="Class" />
      <Type Name="NADropTransform" Kind="Class" />
      <Type Name="NADropTransform+Arguments" Kind="Class" />
      <Type Name="NADropTransform+Column" Kind="Class" />
      <Type Name="NAFilter" Kind="Class" />
      <Type Name="NAFilter+Arguments" Kind="Class" />
      <Type Name="NAHandleTransform" Kind="Class" />
      <Type Name="NAHandleTransform+Arguments" Kind="Class" />
      <Type Name="NAHandleTransform+Column" Kind="Class" />
      <Type Name="NAHandleTransform+ReplacementKind" Kind="Enumeration" />
      <Type Name="NAHandling" Kind="Class" />
      <Type Name="NAIndicatorTransform" Kind="Class" />
      <Type Name="NAIndicatorTransform+Arguments" Kind="Class" />
      <Type Name="NAIndicatorTransform+Column" Kind="Class" />
      <Type Name="NAReplaceTransform" Kind="Class" />
      <Type Name="NAReplaceTransform+Arguments" Kind="Class" />
      <Type Name="NAReplaceTransform+Column" Kind="Class" />
      <Type Name="NAReplaceTransform+ReplacementKind" Kind="Enumeration" />
      <Type Name="NgramExtractionUtils" Kind="Class" />
      <Type Name="NgramExtractorTransform" Kind="Class" />
      <Type Name="NgramExtractorTransform+Arguments" Kind="Class" />
      <Type Name="NgramExtractorTransform+ArgumentsBase" Kind="Class" />
      <Type Name="NgramExtractorTransform+Column" Kind="Class" />
      <Type Name="NgramExtractorTransform+NgramExtractorArguments" Kind="Class" />
      <Type Name="NgramHashExtractorTransform" Kind="Class" />
      <Type Name="NgramHashExtractorTransform+Arguments" Kind="Class" />
      <Type Name="NgramHashExtractorTransform+ArgumentsBase" Kind="Class" />
      <Type Name="NgramHashExtractorTransform+Column" Kind="Class" />
      <Type Name="NgramHashExtractorTransform+ColumnBase" Kind="Class" />
      <Type Name="NgramHashExtractorTransform+NgramHashExtractorArguments" Kind="Class" />
      <Type Name="NgramHashTransform" Kind="Class" />
      <Type Name="NgramHashTransform+Arguments" Kind="Class" />
      <Type Name="NgramHashTransform+Column" Kind="Class" />
      <Type Name="NgramTransform" Kind="Class" />
      <Type Name="NgramTransform+Arguments" Kind="Class" />
      <Type Name="NgramTransform+Column" Kind="Class" />
      <Type Name="NgramTransform+WeightingCriteria" Kind="Enumeration" />
      <Type Name="NopTransform" Kind="Class" />
      <Type Name="NopTransform+NopInput" Kind="Class" />
      <Type Name="Normalize" Kind="Class" />
      <Type Name="NormalizeOption" Kind="Enumeration" />
      <Type Name="NormalizeTransform" Kind="Class" />
      <Type Name="NormalizeTransform+AffineArgumentsBase" Kind="Class" />
      <Type Name="NormalizeTransform+AffineColumn" Kind="Class" />
      <Type Name="NormalizeTransform+AffineColumnFunction" Kind="Class" />
      <Type Name="NormalizeTransform+ArgumentsBase" Kind="Class" />
      <Type Name="NormalizeTransform+BinArguments" Kind="Class" />
      <Type Name="NormalizeTransform+BinArgumentsBase" Kind="Class" />
      <Type Name="NormalizeTransform+BinColumn" Kind="Class" />
      <Type Name="NormalizeTransform+BinColumnFunction" Kind="Class" />
      <Type Name="NormalizeTransform+CdfColumnFunction" Kind="Class" />
      <Type Name="NormalizeTransform+ColumnBase" Kind="Class" />
      <Type Name="NormalizeTransform+FixZeroArgumentsBase" Kind="Class" />
      <Type Name="NormalizeTransform+FixZeroColumnBase" Kind="Class" />
      <Type Name="NormalizeTransform+LogMeanVarArguments" Kind="Class" />
      <Type Name="NormalizeTransform+LogNormalColumn" Kind="Class" />
      <Type Name="NormalizeTransform+MeanVarArguments" Kind="Class" />
      <Type Name="NormalizeTransform+MinMaxArguments" Kind="Class" />
      <Type Name="NormalizeTransform+SupervisedBinArguments" Kind="Class" />
      <Type Name="NumberType" Kind="Class" />
      <Type Name="OneToOneColumn" Kind="Class" />
      <Type Name="OneToOneColumn`1" DisplayName="OneToOneColumn&lt;T&gt;" Kind="Class" />
      <Type Name="OneToOneTransformBase" Kind="Class" />
      <Type Name="OneToOneTransformBase+ColInfo" Kind="Class" />
      <Type Name="OpaqueDataView" Kind="Class" />
      <Type Name="PcaTransform" Kind="Class" />
      <Type Name="PcaTransform+Arguments" Kind="Class" />
      <Type Name="PcaTransform+Column" Kind="Class" />
      <Type Name="PerGroupTransformBase`3" DisplayName="PerGroupTransformBase&lt;TLabel,TScore,TState&gt;" Kind="Class" />
      <Type Name="PerGroupTransformBase`3+BindingsBase" DisplayName="PerGroupTransformBase&lt;TLabel,TScore,TState&gt;+BindingsBase" Kind="Class" />
      <Type Name="PerInstanceEvaluatorBase" Kind="Class" />
      <Type Name="PredictedLabelScorerBase" Kind="Class" />
      <Type Name="PredictedLabelScorerBase+BindingsImpl" Kind="Class" />
      <Type Name="PredictedLabelScorerBase+ThresholdArgumentsBase" Kind="Class" />
      <Type Name="PrimitiveType" Kind="Class" />
      <Type Name="ProduceIdTransform" Kind="Class" />
      <Type Name="ProduceIdTransform+Arguments" Kind="Class" />
      <Type Name="ProgressReporting" Kind="Class" />
      <Type Name="ProgressReporting+ProgressChannel" Kind="Class" />
      <Type Name="ProgressReporting+ProgressEntry" Kind="Class" />
      <Type Name="ProgressReporting+ProgressEvent" Kind="Class" />
      <Type Name="ProgressReporting+ProgressEvent+EventKind" Kind="Enumeration" />
      <Type Name="ProgressReporting+ProgressTracker" Kind="Class" />
      <Type Name="QuantileRegressionEvaluator" Kind="Class" />
      <Type Name="QuantileRegressionEvaluator+Aggregator" Kind="Class" />
      <Type Name="QuantileRegressionEvaluator+Arguments" Kind="Class" />
      <Type Name="QuantileRegressionMamlEvaluator" Kind="Class" />
      <Type Name="QuantileRegressionMamlEvaluator+Arguments" Kind="Class" />
      <Type Name="QuantileRegressionPerInstanceEvaluator" Kind="Class" />
      <Type Name="QuantileRegressionScorerTransform" Kind="Class" />
      <Type Name="QuantileRegressionScorerTransform+Arguments" Kind="Class" />
      <Type Name="R4Adder" Kind="Class" />
      <Type Name="R8Adder" Kind="Class" />
      <Type Name="RandomNumberGenerator" Kind="Class" />
      <Type Name="RangeFilter" Kind="Class" />
      <Type Name="RangeFilter+Arguments" Kind="Class" />
      <Type Name="RankerEvaluator" Kind="Class" />
      <Type Name="RankerEvaluator+Aggregator" Kind="Class" />
      <Type Name="RankerEvaluator+Aggregator+Counters" Kind="Class" />
      <Type Name="RankerEvaluator+Arguments" Kind="Class" />
      <Type Name="RankerMamlEvaluator" Kind="Class" />
      <Type Name="RankerMamlEvaluator+Arguments" Kind="Class" />
      <Type Name="RankerPerInstanceTransform" Kind="Class" />
      <Type Name="RefPredicate`1" DisplayName="RefPredicate&lt;T&gt;" Kind="Delegate" />
      <Type Name="RegressionEvaluator" Kind="Class" />
      <Type Name="RegressionEvaluator+Aggregator" Kind="Class" />
      <Type Name="RegressionEvaluator+Arguments" Kind="Class" />
      <Type Name="RegressionEvaluator+Metrics" Kind="Enumeration" />
      <Type Name="RegressionEvaluatorBase`3" DisplayName="RegressionEvaluatorBase&lt;TAgg,TScore,TMetrics&gt;" Kind="Class" />
      <Type Name="RegressionEvaluatorBase`3+RegressionAggregatorBase" DisplayName="RegressionEvaluatorBase&lt;TAgg,TScore,TMetrics&gt;+RegressionAggregatorBase" Kind="Class" />
      <Type Name="RegressionEvaluatorBase`3+RegressionAggregatorBase+CountersBase" DisplayName="RegressionEvaluatorBase&lt;TAgg,TScore,TMetrics&gt;+RegressionAggregatorBase+CountersBase" Kind="Class" />
      <Type Name="RegressionLossEvaluatorBase`1" DisplayName="RegressionLossEvaluatorBase&lt;TAgg&gt;" Kind="Class" />
      <Type Name="RegressionLossEvaluatorBase`1+ArgumentsBase" DisplayName="RegressionLossEvaluatorBase&lt;TAgg&gt;+ArgumentsBase" Kind="Class" />
      <Type Name="RegressionMamlEvaluator" Kind="Class" />
      <Type Name="RegressionMamlEvaluator+Arguments" Kind="Class" />
      <Type Name="RegressionPerInstanceEvaluator" Kind="Class" />
      <Type Name="RffTransform" Kind="Class" />
      <Type Name="RffTransform+Arguments" Kind="Class" />
      <Type Name="RffTransform+Column" Kind="Class" />
      <Type Name="RoleMappedData" Kind="Class" />
      <Type Name="RoleMappedSchema" Kind="Class" />
      <Type Name="RoleMappedSchema+ColumnRole" Kind="Structure" />
      <Type Name="RootCursorBase" Kind="Class" />
      <Type Name="RowColumnUtils" Kind="Class" />
      <Type Name="RowCursorUtils" Kind="Class" />
      <Type Name="RowMapperColumnInfo" Kind="Class" />
      <Type Name="RowToRowEvaluatorBase`1" DisplayName="RowToRowEvaluatorBase&lt;TAgg&gt;" Kind="Class" />
      <Type Name="RowToRowMapperTransform" Kind="Class" />
      <Type Name="RowToRowMapperTransformBase" Kind="Class" />
      <Type Name="RowToRowScorerBase" Kind="Class" />
      <Type Name="RowToRowScorerBase+BindingsBase" Kind="Class" />
      <Type Name="RowToRowScorerBase+RowCursor" Kind="Class" />
      <Type Name="RowToRowTransformBase" Kind="Class" />
      <Type Name="SaveDataCommand" Kind="Class" />
      <Type Name="SaveDataCommand+Arguments" Kind="Class" />
      <Type Name="SchemaBindableBinaryPredictorWrapper" Kind="Class" />
      <Type Name="SchemaBindablePredictorWrapper" Kind="Class" />
      <Type Name="SchemaBindablePredictorWrapperBase" Kind="Class" />
      <Type Name="SchemaBindablePredictorWrapperBase+SingleValueRowMapper" Kind="Class" />
      <Type Name="SchemaBindableQuantileRegressionPredictor" Kind="Class" />
      <Type Name="ScoreCommand" Kind="Class" />
      <Type Name="ScoreCommand+Arguments" Kind="Class" />
      <Type Name="ScoreMapperSchema" Kind="Class" />
      <Type Name="ScoreMapperSchemaBase" Kind="Class" />
      <Type Name="ScorerArgumentsBase" Kind="Class" />
      <Type Name="ScorerBindingsBase" Kind="Class" />
      <Type Name="ScoreTransform" Kind="Class" />
      <Type Name="ScoreTransform+Arguments" Kind="Class" />
      <Type Name="ScoreUtils" Kind="Class" />
      <Type Name="SequencePredictorSchema" Kind="Class" />
      <Type Name="ShowDataCommand" Kind="Class" />
      <Type Name="ShowDataCommand+Arguments" Kind="Class" />
      <Type Name="ShowSchemaCommand" Kind="Class" />
      <Type Name="ShowSchemaCommand+Arguments" Kind="Class" />
      <Type Name="ShuffleTransform" Kind="Class" />
      <Type Name="ShuffleTransform+Arguments" Kind="Class" />
      <Type Name="SignatureBindableMapper" Kind="Delegate" />
      <Type Name="SignatureDataLoader" Kind="Delegate" />
      <Type Name="SignatureDataSaver" Kind="Delegate" />
      <Type Name="SignatureDataScorer" Kind="Delegate" />
      <Type Name="SignatureDataTransform" Kind="Delegate" />
      <Type Name="SignatureEvaluator" Kind="Delegate" />
      <Type Name="SignatureFourierDistributionSampler" Kind="Delegate" />
      <Type Name="SignatureLoadColumnFunction" Kind="Delegate" />
      <Type Name="SignatureLoadDataLoader" Kind="Delegate" />
      <Type Name="SignatureLoadDataTransform" Kind="Delegate" />
      <Type Name="SignatureLoadRowMapper" Kind="Delegate" />
      <Type Name="SignatureMamlEvaluator" Kind="Delegate" />
      <Type Name="SignatureNgramExtractorFactory" Kind="Delegate" />
      <Type Name="SignatureTokenizeTransform" Kind="Delegate" />
      <Type Name="SimpleRow" Kind="Class" />
      <Type Name="SimpleSchema" Kind="Class" />
      <Type Name="SkipTakeFilter" Kind="Class" />
      <Type Name="SkipTakeFilter+Arguments" Kind="Class" />
      <Type Name="SkipTakeFilter+SkipArguments" Kind="Class" />
      <Type Name="SkipTakeFilter+TakeArguments" Kind="Class" />
      <Type Name="SourceNameColumnBase" Kind="Class" />
      <Type Name="StructuredType" Kind="Class" />
      <Type Name="SynchronizedCursorBase`1" DisplayName="SynchronizedCursorBase&lt;TBase&gt;" Kind="Class" />
      <Type Name="TermLoaderArguments" Kind="Class" />
      <Type Name="TermLookupTransform" Kind="Class" />
      <Type Name="TermLookupTransform+Arguments" Kind="Class" />
      <Type Name="TermLookupTransform+Column" Kind="Class" />
      <Type Name="TermTransform" Kind="Class" />
      <Type Name="TermTransform+Arguments" Kind="Class" />
      <Type Name="TermTransform+ArgumentsBase" Kind="Class" />
      <Type Name="TermTransform+Column" Kind="Class" />
      <Type Name="TermTransform+ColumnBase" Kind="Class" />
      <Type Name="TermTransform+SortOrder" Kind="Enumeration" />
      <Type Name="TestCommand" Kind="Class" />
      <Type Name="TestCommand+Arguments" Kind="Class" />
      <Type Name="TextCombiner" Kind="Class" />
      <Type Name="TextLoader" Kind="Class" />
      <Type Name="TextLoader+Arguments" Kind="Class" />
      <Type Name="TextLoader+ArgumentsCore" Kind="Class" />
      <Type Name="TextLoader+Column" Kind="Class" />
      <Type Name="TextLoader+Range" Kind="Class" />
      <Type Name="TextModelHelper" Kind="Class" />
      <Type Name="TextTransform" Kind="Class" />
      <Type Name="TextTransform+Arguments" Kind="Class" />
      <Type Name="TextTransform+Column" Kind="Class" />
      <Type Name="TextTransform+Language" Kind="Enumeration" />
      <Type Name="TextTransform+TextNormKind" Kind="Enumeration" />
      <Type Name="TextType" Kind="Class" />
      <Type Name="TimeSpanType" Kind="Class" />
      <Type Name="TlcEnvironment" Kind="Class" />
      <Type Name="TrainAndScoreTransform" Kind="Class" />
      <Type Name="TrainAndScoreTransform+Arguments" Kind="Class" />
      <Type Name="TrainAndScoreTransform+ArgumentsBase" Kind="Class" />
      <Type Name="TrainAndScoreTransform+ArgumentsBase`1" DisplayName="TrainAndScoreTransform+ArgumentsBase&lt;TSigTrainer&gt;" Kind="Class" />
      <Type Name="TrainCommand" Kind="Class" />
      <Type Name="TrainCommand+Arguments" Kind="Class" />
      <Type Name="TrainTestCommand" Kind="Class" />
      <Type Name="TrainTestCommand+Arguments" Kind="Class" />
      <Type Name="TrainUtils" Kind="Class" />
      <Type Name="TransformBase" Kind="Class" />
      <Type Name="Transposer" Kind="Class" />
      <Type Name="TransposerUtils" Kind="Class" />
      <Type Name="TransposerUtils+SlotDataView" Kind="Class" />
      <Type Name="TreeEnsembleFeaturizerBindableMapper" Kind="Class" />
      <Type Name="TreeEnsembleFeaturizerBindableMapper+Arguments" Kind="Class" />
      <Type Name="TreeEnsembleFeaturizerBindableMapper+OutputColumnNames" Kind="Class" />
      <Type Name="TreeEnsembleFeaturizerTransform" Kind="Class" />
      <Type Name="TreeEnsembleFeaturizerTransform+Arguments" Kind="Class" />
      <Type Name="TreeEnsembleFeaturizerTransform+ArgumentsForEntryPoint" Kind="Class" />
      <Type Name="TreeFeaturize" Kind="Class" />
      <Type Name="TypeConversion" Kind="Class" />
      <Type Name="TypeParsingUtils" Kind="Class" />
      <Type Name="TypeUtils" Kind="Class" />
      <Type Name="U4Adder" Kind="Class" />
      <Type Name="UInt128" Kind="Structure" />
      <Type Name="UngroupTransform" Kind="Class" />
      <Type Name="UngroupTransform+Arguments" Kind="Class" />
      <Type Name="UngroupTransform+UngroupMode" Kind="Enumeration" />
      <Type Name="ValueGetter`1" DisplayName="ValueGetter&lt;TValue&gt;" Kind="Delegate" />
      <Type Name="ValueMapper`2" DisplayName="ValueMapper&lt;TSrc,TDst&gt;" Kind="Delegate" />
      <Type Name="ValueMapper`3" DisplayName="ValueMapper&lt;TVal1,TVal2,TVal3&gt;" Kind="Delegate" />
      <Type Name="VBuffer`1" DisplayName="VBuffer&lt;T&gt;" Kind="Structure" />
      <Type Name="VectorType" Kind="Class" />
      <Type Name="WhiteningKind" Kind="Enumeration" />
      <Type Name="WhiteningTransform" Kind="Class" />
      <Type Name="WhiteningTransform+Arguments" Kind="Class" />
      <Type Name="WhiteningTransform+ColInfoEx" Kind="Class" />
      <Type Name="WhiteningTransform+Column" Kind="Class" />
      <Type Name="WordBagTransform" Kind="Class" />
      <Type Name="WordBagTransform+Arguments" Kind="Class" />
      <Type Name="WordBagTransform+Column" Kind="Class" />
      <Type Name="WordBagTransform+TokenizeColumn" Kind="Class" />
      <Type Name="WordHashBagTransform" Kind="Class" />
      <Type Name="WordHashBagTransform+Arguments" Kind="Class" />
      <Type Name="WordHashBagTransform+Column" Kind="Class" />
      <Type Name="ZipDataView" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Data.Conversion">
      <Type Name="Conversions" Kind="Class" />
      <Type Name="TryParseMapper`1" DisplayName="TryParseMapper&lt;T&gt;" Kind="Delegate" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Data.IO">
      <Type Name="BinaryLoader" Kind="Class" />
      <Type Name="BinaryLoader+Arguments" Kind="Class" />
      <Type Name="BinaryLoader+InfoCommand" Kind="Class" />
      <Type Name="BinaryLoader+InfoCommand+Arguments" Kind="Class" />
      <Type Name="BinarySaver" Kind="Class" />
      <Type Name="BinarySaver+Arguments" Kind="Class" />
      <Type Name="Compression" Kind="Class" />
      <Type Name="Compression+NoneImpl" Kind="Class" />
      <Type Name="Compression+ZlibImpl" Kind="Class" />
      <Type Name="Compression+ZlibImpl+ArgumentsBase" Kind="Class" />
      <Type Name="Compression+ZlibImpl+DeflateArguments" Kind="Class" />
      <Type Name="Compression+ZlibImpl+ZlibArguments" Kind="Class" />
      <Type Name="CompressionCodecExtension" Kind="Class" />
      <Type Name="CompressionKind" Kind="Enumeration" />
      <Type Name="Header" Kind="Structure" />
      <Type Name="TextSaver" Kind="Class" />
      <Type Name="TextSaver+Arguments" Kind="Class" />
      <Type Name="TransposeLoader" Kind="Class" />
      <Type Name="TransposeLoader+Arguments" Kind="Class" />
      <Type Name="TransposeLoader+Header" Kind="Structure" />
      <Type Name="TransposeSaver" Kind="Class" />
      <Type Name="TransposeSaver+Arguments" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Data.IO.Zlib">
      <Type Name="Constants" Kind="Class" />
      <Type Name="Constants+Flush" Kind="Enumeration" />
      <Type Name="Constants+Level" Kind="Enumeration" />
      <Type Name="Constants+RetCode" Kind="Enumeration" />
      <Type Name="Constants+Strategy" Kind="Enumeration" />
      <Type Name="Constants+Type" Kind="Enumeration" />
      <Type Name="ZDeflateStream" Kind="Class" />
      <Type Name="ZInflateStream" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.DataPipe">
      <Type Name="OptionalColumnTransform" Kind="Class" />
      <Type Name="OptionalColumnTransform+Arguments" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.EntryPoints">
      <Type Name="ArrayIndexParameterBinding" Kind="Class" />
      <Type Name="ArrayIndexVariableBinding" Kind="Class" />
      <Type Name="ArrayVar`1" DisplayName="ArrayVar&lt;T&gt;" Kind="Class" />
      <Type Name="Cache" Kind="Class" />
      <Type Name="Cache+CacheInput" Kind="Class" />
      <Type Name="Cache+CacheOutput" Kind="Class" />
      <Type Name="Cache+CachingType" Kind="Enumeration" />
      <Type Name="CachingOptions" Kind="Enumeration" />
      <Type Name="CommonInputs" Kind="Class" />
      <Type Name="CommonInputs+ICalibratorInput" Kind="Interface" />
      <Type Name="CommonInputs+IEvaluatorInput" Kind="Interface" />
      <Type Name="CommonInputs+IFeaturizerInput" Kind="Interface" />
      <Type Name="CommonInputs+ITrainerInput" Kind="Interface" />
      <Type Name="CommonInputs+ITrainerInputWithGroupId" Kind="Interface" />
      <Type Name="CommonInputs+ITrainerInputWithLabel" Kind="Interface" />
      <Type Name="CommonInputs+ITrainerInputWithWeight" Kind="Interface" />
      <Type Name="CommonInputs+ITransformInput" Kind="Interface" />
      <Type Name="CommonOutputs" Kind="Class" />
      <Type Name="CommonOutputs+AnomalyDetectionOutput" Kind="Class" />
      <Type Name="CommonOutputs+BinaryClassificationOutput" Kind="Class" />
      <Type Name="CommonOutputs+CalibratorOutput" Kind="Class" />
      <Type Name="CommonOutputs+ClassificationEvaluateOutput" Kind="Class" />
      <Type Name="CommonOutputs+ClusteringOutput" Kind="Class" />
      <Type Name="CommonOutputs+CommonEvaluateOutput" Kind="Class" />
      <Type Name="CommonOutputs+EvaluateOutputBase" Kind="Class" />
      <Type Name="CommonOutputs+IAnomalyDetectionOutput" Kind="Interface" />
      <Type Name="CommonOutputs+IBinaryClassificationOutput" Kind="Interface" />
      <Type Name="CommonOutputs+ICalibratorOutput" Kind="Interface" />
      <Type Name="CommonOutputs+IClassificationEvaluatorOutput" Kind="Interface" />
      <Type Name="CommonOutputs+IClusteringOutput" Kind="Interface" />
      <Type Name="CommonOutputs+IEvaluatorOutput" Kind="Interface" />
      <Type Name="CommonOutputs+IMulticlassClassificationOutput" Kind="Interface" />
      <Type Name="CommonOutputs+IMultiRegressionOutput" Kind="Interface" />
      <Type Name="CommonOutputs+IRankingOutput" Kind="Interface" />
      <Type Name="CommonOutputs+IRegressionOutput" Kind="Interface" />
      <Type Name="CommonOutputs+ISequencePredictionOutput" Kind="Interface" />
      <Type Name="CommonOutputs+ITrainerOutput" Kind="Interface" />
      <Type Name="CommonOutputs+ITransformOutput" Kind="Interface" />
      <Type Name="CommonOutputs+MacroOutput" Kind="Class" />
      <Type Name="CommonOutputs+MacroOutput`1" DisplayName="CommonOutputs+MacroOutput&lt;TOut&gt;" Kind="Class" />
      <Type Name="CommonOutputs+MulticlassClassificationOutput" Kind="Class" />
      <Type Name="CommonOutputs+MultiRegressionOutput" Kind="Class" />
      <Type Name="CommonOutputs+RankingOutput" Kind="Class" />
      <Type Name="CommonOutputs+RegressionOutput" Kind="Class" />
      <Type Name="CommonOutputs+SequencePredictionOutput" Kind="Class" />
      <Type Name="CommonOutputs+SummaryOutput" Kind="Class" />
      <Type Name="CommonOutputs+TrainerOutput" Kind="Class" />
      <Type Name="CommonOutputs+TransformOutput" Kind="Class" />
      <Type Name="CrossValidationBinaryMacro" Kind="Class" />
      <Type Name="CrossValidationBinaryMacro+Arguments" Kind="Class" />
      <Type Name="CrossValidationBinaryMacro+ArrayIDataViewInput" Kind="Class" />
      <Type Name="CrossValidationBinaryMacro+ArrayIDataViewOutput" Kind="Class" />
      <Type Name="CrossValidationBinaryMacro+ArrayIPredictorModelInput" Kind="Class" />
      <Type Name="CrossValidationBinaryMacro+ArrayIPredictorModelOutput" Kind="Class" />
      <Type Name="CrossValidationBinaryMacro+Output" Kind="Class" />
      <Type Name="CrossValidationBinaryMacro+SubGraphInput" Kind="Class" />
      <Type Name="CrossValidationBinaryMacro+SubGraphOutput" Kind="Class" />
      <Type Name="CrossValidationMacro" Kind="Class" />
      <Type Name="CrossValidationMacro+Arguments" Kind="Class" />
      <Type Name="CrossValidationMacro+Output" Kind="Class" />
      <Type Name="CrossValidationMacro+SubGraphInput" Kind="Class" />
      <Type Name="CrossValidationMacro+SubGraphOutput" Kind="Class" />
      <Type Name="CVSplit" Kind="Class" />
      <Type Name="CVSplit+Input" Kind="Class" />
      <Type Name="CVSplit+Output" Kind="Class" />
      <Type Name="DictionaryKeyParameterBinding" Kind="Class" />
      <Type Name="DictionaryKeyVariableBinding" Kind="Class" />
      <Type Name="DictionaryVar`1" DisplayName="DictionaryVar&lt;T&gt;" Kind="Class" />
      <Type Name="EntryPointGraph" Kind="Class" />
      <Type Name="EntryPointModuleAttribute" Kind="Class" />
      <Type Name="EntryPointNode" Kind="Class" />
      <Type Name="EntryPointUtils" Kind="Class" />
      <Type Name="EntryPointVariable" Kind="Class" />
      <Type Name="EvaluateInputBase" Kind="Class" />
      <Type Name="FeatureCombiner" Kind="Class" />
      <Type Name="FeatureCombiner+ClassificationLabelInput" Kind="Class" />
      <Type Name="FeatureCombiner+FeatureCombinerInput" Kind="Class" />
      <Type Name="FeatureCombiner+LabelInputBase" Kind="Class" />
      <Type Name="FeatureCombiner+PredictedLabelInput" Kind="Class" />
      <Type Name="FeatureCombiner+RegressionLabelInput" Kind="Class" />
      <Type Name="IArgsComponent" Kind="Interface" />
      <Type Name="IComponentFactory" Kind="Interface" />
      <Type Name="IComponentFactory`1" DisplayName="IComponentFactory&lt;TComponent&gt;" Kind="Interface" />
      <Type Name="IComponentFactory`2" DisplayName="IComponentFactory&lt;TArg1,TComponent&gt;" Kind="Interface" />
      <Type Name="IComponentFactory`3" DisplayName="IComponentFactory&lt;TArg1,TArg2,TComponent&gt;" Kind="Interface" />
      <Type Name="IMlState" Kind="Interface" />
      <Type Name="ImportTextData" Kind="Class" />
      <Type Name="ImportTextData+Input" Kind="Class" />
      <Type Name="ImportTextData+Output" Kind="Class" />
      <Type Name="IPredictorModel" Kind="Interface" />
      <Type Name="ITransformModel" Kind="Interface" />
      <Type Name="LearnerEntryPointsUtils" Kind="Class" />
      <Type Name="LearnerInputBase" Kind="Class" />
      <Type Name="LearnerInputBaseWithGroupId" Kind="Class" />
      <Type Name="LearnerInputBaseWithLabel" Kind="Class" />
      <Type Name="LearnerInputBaseWithWeight" Kind="Class" />
      <Type Name="MacroUtils" Kind="Class" />
      <Type Name="MacroUtils+EvaluatorSettings" Kind="Class" />
      <Type Name="MacroUtils+TrainerKinds" Kind="Enumeration" />
      <Type Name="ModelOperations" Kind="Class" />
      <Type Name="ModelOperations+ApplyTransformModelInput" Kind="Class" />
      <Type Name="ModelOperations+ApplyTransformModelOutput" Kind="Class" />
      <Type Name="ModelOperations+CombineOvaPredictorModelsInput" Kind="Class" />
      <Type Name="ModelOperations+CombinePredictorModelsInput" Kind="Class" />
      <Type Name="ModelOperations+CombineTransformModelsInput" Kind="Class" />
      <Type Name="ModelOperations+CombineTransformModelsOutput" Kind="Class" />
      <Type Name="ModelOperations+PredictorModelInput" Kind="Class" />
      <Type Name="ModelOperations+PredictorModelOutput" Kind="Class" />
      <Type Name="ModelOperations+SimplePredictorModelInput" Kind="Class" />
      <Type Name="ModuleCatalog" Kind="Class" />
      <Type Name="ModuleCatalog+ComponentInfo" Kind="Class" />
      <Type Name="ModuleCatalog+EntryPointInfo" Kind="Class" />
      <Type Name="OneVersusAllMacro" Kind="Class" />
      <Type Name="OneVersusAllMacro+Arguments" Kind="Class" />
      <Type Name="OneVersusAllMacro+Output" Kind="Class" />
      <Type Name="OneVersusAllMacro+SubGraphOutput" Kind="Class" />
      <Type Name="Optional" Kind="Class" />
      <Type Name="Optional`1" DisplayName="Optional&lt;T&gt;" Kind="Class" />
      <Type Name="ParameterBinding" Kind="Class" />
      <Type Name="PipelineSweeperMacro" Kind="Class" />
      <Type Name="PipelineSweeperMacro+Arguments" Kind="Class" />
      <Type Name="PipelineSweeperMacro+Output" Kind="Class" />
      <Type Name="PipelineSweeperMacro+ResultInput" Kind="Class" />
      <Type Name="PredictorModel" Kind="Class" />
      <Type Name="RunContext" Kind="Class" />
      <Type Name="SchemaManipulation" Kind="Class" />
      <Type Name="ScoreModel" Kind="Class" />
      <Type Name="ScoreModel+Input" Kind="Class" />
      <Type Name="ScoreModel+ModelInput" Kind="Class" />
      <Type Name="ScoreModel+ModelOutput" Kind="Class" />
      <Type Name="ScoreModel+Output" Kind="Class" />
      <Type Name="ScoreModel+RenameBinaryPredictionScoreColumnsInput" Kind="Class" />
      <Type Name="ScoreModel+ScoreColumnSelectorInput" Kind="Class" />
      <Type Name="SelectFeatures" Kind="Class" />
      <Type Name="SelectRows" Kind="Class" />
      <Type Name="SignatureEntryPointModule" Kind="Delegate" />
      <Type Name="SimpleParameterBinding" Kind="Class" />
      <Type Name="SimpleVariableBinding" Kind="Class" />
      <Type Name="SplitUtils" Kind="Class" />
      <Type Name="SummarizePredictor" Kind="Class" />
      <Type Name="SummarizePredictor+Input" Kind="Class" />
      <Type Name="SummarizePredictor+InputBase" Kind="Class" />
      <Type Name="TlcModule" Kind="Class" />
      <Type Name="TlcModule+ComponentAttribute" Kind="Class" />
      <Type Name="TlcModule+ComponentKindAttribute" Kind="Class" />
      <Type Name="TlcModule+DataKind" Kind="Enumeration" />
      <Type Name="TlcModule+EntryPointAttribute" Kind="Class" />
      <Type Name="TlcModule+EntryPointKindAttribute" Kind="Class" />
      <Type Name="TlcModule+OptionalInputAttribute" Kind="Class" />
      <Type Name="TlcModule+OutputAttribute" Kind="Class" />
      <Type Name="TlcModule+RangeAttribute" Kind="Class" />
      <Type Name="TlcModule+SweepableDiscreteParamAttribute" Kind="Class" />
      <Type Name="TlcModule+SweepableFloatParamAttribute" Kind="Class" />
      <Type Name="TlcModule+SweepableLongParamAttribute" Kind="Class" />
      <Type Name="TlcModule+SweepableParamAttribute" Kind="Class" />
      <Type Name="TrainTestBinaryMacro" Kind="Class" />
      <Type Name="TrainTestBinaryMacro+Arguments" Kind="Class" />
      <Type Name="TrainTestBinaryMacro+Output" Kind="Class" />
      <Type Name="TrainTestBinaryMacro+SubGraphInput" Kind="Class" />
      <Type Name="TrainTestBinaryMacro+SubGraphOutput" Kind="Class" />
      <Type Name="TrainTestMacro" Kind="Class" />
      <Type Name="TrainTestMacro+Arguments" Kind="Class" />
      <Type Name="TrainTestMacro+Output" Kind="Class" />
      <Type Name="TrainTestMacro+SubGraphInput" Kind="Class" />
      <Type Name="TrainTestMacro+SubGraphOutput" Kind="Class" />
      <Type Name="TrainTestSplit" Kind="Class" />
      <Type Name="TrainTestSplit+Input" Kind="Class" />
      <Type Name="TrainTestSplit+Output" Kind="Class" />
      <Type Name="TransformInputBase" Kind="Class" />
      <Type Name="TransformModel" Kind="Class" />
      <Type Name="Var`1" DisplayName="Var&lt;T&gt;" Kind="Class" />
      <Type Name="VariableBinding" Kind="Class" />
      <Type Name="VarSerializer" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.EntryPoints.CodeGen">
      <Type Name="ModuleGenerator" Kind="Class" />
      <Type Name="ModuleGenerator+Arguments" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.EntryPoints.JsonUtils">
      <Type Name="ExecuteGraphCommand" Kind="Class" />
      <Type Name="ExecuteGraphCommand+Arguments" Kind="Class" />
      <Type Name="FieldNames" Kind="Class" />
      <Type Name="FieldNames+Deprecated" Kind="Class" />
      <Type Name="FieldNames+PipelineSweeperSupportedMetrics" Kind="Class" />
      <Type Name="FieldNames+Range" Kind="Class" />
      <Type Name="FieldNames+SweepableDiscreteParam" Kind="Class" />
      <Type Name="FieldNames+SweepableFloatParam" Kind="Class" />
      <Type Name="FieldNames+SweepableLongParam" Kind="Class" />
      <Type Name="GraphRunner" Kind="Class" />
      <Type Name="InputBuilder" Kind="Class" />
      <Type Name="JsonManifestUtils" Kind="Class" />
      <Type Name="OutputHelper" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.FastTree">
      <Type Name="BinaryClassGamPredictor" Kind="Class" />
      <Type Name="BinaryClassificationGamTrainer" Kind="Class" />
      <Type Name="BinaryClassificationGamTrainer+Arguments" Kind="Class" />
      <Type Name="BoostedTreeArgs" Kind="Class" />
      <Type Name="BoostedTreeArgs+OptimizationAlgorithmType" Kind="Enumeration" />
      <Type Name="BoostingFastTreeTrainerBase`2" DisplayName="BoostingFastTreeTrainerBase&lt;TArgs,TPredictor&gt;" Kind="Class" />
      <Type Name="Bundle" Kind="Enumeration" />
      <Type Name="FastForest" Kind="Class" />
      <Type Name="FastForestArgumentsBase" Kind="Class" />
      <Type Name="FastForestClassification" Kind="Class" />
      <Type Name="FastForestClassification+Arguments" Kind="Class" />
      <Type Name="FastForestClassificationPredictor" Kind="Class" />
      <Type Name="FastForestRegression" Kind="Class" />
      <Type Name="FastForestRegression+Arguments" Kind="Class" />
      <Type Name="FastForestRegressionPredictor" Kind="Class" />
      <Type Name="FastTree" Kind="Class" />
      <Type Name="FastTreeBinaryClassificationTrainer" Kind="Class" />
      <Type Name="FastTreeBinaryClassificationTrainer+Arguments" Kind="Class" />
      <Type Name="FastTreeBinaryPredictor" Kind="Class" />
      <Type Name="FastTreePredictionWrapper" Kind="Class" />
      <Type Name="FastTreeRankingPredictor" Kind="Class" />
      <Type Name="FastTreeRankingTrainer" Kind="Class" />
      <Type Name="FastTreeRankingTrainer+Arguments" Kind="Class" />
      <Type Name="FastTreeRankingTrainer+LambdaRankObjectiveFunction" Kind="Class" />
      <Type Name="FastTreeRegressionPredictor" Kind="Class" />
      <Type Name="FastTreeRegressionTrainer" Kind="Class" />
      <Type Name="FastTreeRegressionTrainer+Arguments" Kind="Class" />
      <Type Name="FastTreeTrainerBase`2" DisplayName="FastTreeTrainerBase&lt;TArgs,TPredictor&gt;" Kind="Class" />
      <Type Name="FastTreeTweediePredictor" Kind="Class" />
      <Type Name="FastTreeTweedieTrainer" Kind="Class" />
      <Type Name="FastTreeTweedieTrainer+Arguments" Kind="Class" />
      <Type Name="FindBestThresholdFromRawArrayFun" Kind="Delegate" />
      <Type Name="Gam" Kind="Class" />
      <Type Name="GamPredictorBase" Kind="Class" />
      <Type Name="GamPredictorBase+VisualizationCommand" Kind="Class" />
      <Type Name="GamPredictorBase+VisualizationCommand+Arguments" Kind="Class" />
      <Type Name="GamTrainerBase`2" DisplayName="GamTrainerBase&lt;TArgs,TPredictor&gt;" Kind="Class" />
      <Type Name="GamTrainerBase`2+ArgumentsBase" DisplayName="GamTrainerBase&lt;TArgs,TPredictor&gt;+ArgumentsBase" Kind="Class" />
      <Type Name="IFastTreeTrainerFactory" Kind="Interface" />
      <Type Name="IParallelTraining" Kind="Interface" />
      <Type Name="ISupportParallelTraining" Kind="Interface" />
      <Type Name="RandomForestTrainerBase`2" DisplayName="RandomForestTrainerBase&lt;TArgs,TPredictor&gt;" Kind="Class" />
      <Type Name="RandomForestTrainerBase`2+RandomForestObjectiveFunction" DisplayName="RandomForestTrainerBase&lt;TArgs,TPredictor&gt;+RandomForestObjectiveFunction" Kind="Class" />
      <Type Name="RegressionGamPredictor" Kind="Class" />
      <Type Name="RegressionGamTrainer" Kind="Class" />
      <Type Name="RegressionGamTrainer+Arguments" Kind="Class" />
      <Type Name="SignatureParallelTrainer" Kind="Delegate" />
      <Type Name="SignatureTreeEnsembleTrainer" Kind="Delegate" />
      <Type Name="SingleTrainer" Kind="Class" />
      <Type Name="SingleTrainerFactory" Kind="Class" />
      <Type Name="SumupPerformanceCommand" Kind="Class" />
      <Type Name="SumupPerformanceCommand+Arguments" Kind="Class" />
      <Type Name="TreeArgs" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.FastTree.Internal">
      <Type Name="AcceleratedGradientDescent" Kind="Class" />
      <Type Name="AgdScoreTracker" Kind="Class" />
      <Type Name="Algorithms" Kind="Class" />
      <Type Name="BaggingProvider" Kind="Class" />
      <Type Name="BestStepRegressionGradientWrapper" Kind="Class" />
      <Type Name="BinaryClassificationTest" Kind="Class" />
      <Type Name="BlockingThreadPool" Kind="Class" />
      <Type Name="BufferPoolManager" Kind="Class" />
      <Type Name="ConjugateGradientDescent" Kind="Class" />
      <Type Name="CountEvent" Kind="Enumeration" />
      <Type Name="Dataset" Kind="Class" />
      <Type Name="Dataset+DatasetSkeleton" Kind="Class" />
      <Type Name="Dataset+DatasetSkeletonQueryDocData" Kind="Structure" />
      <Type Name="Dataset+DupeIdInfo" Kind="Enumeration" />
      <Type Name="Dataset+RowForwardIndexer" Kind="Class" />
      <Type Name="Dataset+RowForwardIndexer+Row" Kind="Structure" />
      <Type Name="DatasetUtils" Kind="Class" />
      <Type Name="DcgCalculator" Kind="Class" />
      <Type Name="DcgPermutationComparer" Kind="Class" />
      <Type Name="DcgPermutationComparerFactory" Kind="Class" />
      <Type Name="DescendingDotNetPermutationComparer" Kind="Class" />
      <Type Name="DescendingReversePermutationComparer" Kind="Class" />
      <Type Name="DescendingStableIdealComparer" Kind="Class" />
      <Type Name="DescendingStablePermutationComparer" Kind="Class" />
      <Type Name="DescendingStablePessimisticPermutationComparer" Kind="Class" />
      <Type Name="DocumentPartitioning" Kind="Class" />
      <Type Name="Ensemble" Kind="Class" />
      <Type Name="FastNdcgTest" Kind="Class" />
      <Type Name="FastNdcgTestForTrainSet" Kind="Class" />
      <Type Name="Feature" Kind="Class" />
      <Type Name="Feature+FeatureType" Kind="Enumeration" />
      <Type Name="FeatureFlockBase" Kind="Class" />
      <Type Name="FeatureFlockBase+FlockForwardIndexerBase" Kind="Class" />
      <Type Name="FeatureHistogram" Kind="Class" />
      <Type Name="FeaturesToContentMap" Kind="Class" />
      <Type Name="FeatureToGainMap" Kind="Class" />
      <Type Name="GradientDescent" Kind="Class" />
      <Type Name="IEnsembleCompressor`1" DisplayName="IEnsembleCompressor&lt;TLabel&gt;" Kind="Interface" />
      <Type Name="IFastTrainingScoresUpdate" Kind="Interface" />
      <Type Name="IGradientAdjuster" Kind="Interface" />
      <Type Name="IIntArrayForwardIndexer" Kind="Interface" />
      <Type Name="IntArray" Kind="Class" />
      <Type Name="IntArrayBits" Kind="Enumeration" />
      <Type Name="IntArrayType" Kind="Enumeration" />
      <Type Name="IStepSearch" Kind="Interface" />
      <Type Name="IThreadTask" Kind="Interface" />
      <Type Name="LassoBasedEnsembleCompressor" Kind="Class" />
      <Type Name="LassoFit" Kind="Class" />
      <Type Name="LeastSquaresRegressionTreeLearner" Kind="Class" />
      <Type Name="LeastSquaresRegressionTreeLearner+LeafSplitCandidates" Kind="Class" />
      <Type Name="LeastSquaresRegressionTreeLearner+SplitInfo" Kind="Structure" />
      <Type Name="LineSearch" Kind="Class" />
      <Type Name="LinqExtensions" Kind="Class" />
      <Type Name="MappedObjectPool`1" DisplayName="MappedObjectPool&lt;T&gt;" Kind="Class" />
      <Type Name="MD5Hash" Kind="Structure" />
      <Type Name="MD5Hasher" Kind="Class" />
      <Type Name="NdcgTest" Kind="Class" />
      <Type Name="ObjectiveFunctionBase" Kind="Class" />
      <Type Name="OptimizationAlgorithm" Kind="Class" />
      <Type Name="OptimizationAlgorithm+PreScoreUpdateHandler" Kind="Delegate" />
      <Type Name="PerBinStats" Kind="Structure" />
      <Type Name="PseudorandomFunction" Kind="Class" />
      <Type Name="QuantileRegressionTree" Kind="Class" />
      <Type Name="QueryWeightsBestResressionStepGradientWrapper" Kind="Class" />
      <Type Name="QueryWeightsGradientWrapper" Kind="Class" />
      <Type Name="RandomForestLeastSquaresTreeLearner" Kind="Class" />
      <Type Name="RandomForestOptimizer" Kind="Class" />
      <Type Name="RankingBaggingProvider" Kind="Class" />
      <Type Name="RecursiveRegressionTree" Kind="Class" />
      <Type Name="RegressionTest" Kind="Class" />
      <Type Name="RegressionTree" Kind="Class" />
      <Type Name="RegressionTree+TreeType" Kind="Enumeration" />
      <Type Name="RegressionTreeNodeDocuments" Kind="Class" />
      <Type Name="ScoreTracker" Kind="Class" />
      <Type Name="ScoreTracker+ScoresUpdatedDelegate" Kind="Delegate" />
      <Type Name="StreamExtensions" Kind="Class" />
      <Type Name="SufficientStatsBase" Kind="Class" />
      <Type Name="SufficientStatsBase`1" DisplayName="SufficientStatsBase&lt;TSuffStats&gt;" Kind="Class" />
      <Type Name="SumupInputData" Kind="Class" />
      <Type Name="Test" Kind="Class" />
      <Type Name="TestHistory" Kind="Class" />
      <Type Name="TestResult" Kind="Class" />
      <Type Name="TestResult+ValueOperator" Kind="Enumeration" />
      <Type Name="TestWindowWithTolerance" Kind="Class" />
      <Type Name="Timer" Kind="Class" />
      <Type Name="Timer+TimedEvent" Kind="Class" />
      <Type Name="TimerEvent" Kind="Enumeration" />
      <Type Name="ToByteArrayExtensions" Kind="Class" />
      <Type Name="TreeLearner" Kind="Class" />
      <Type Name="TreeLearnerException" Kind="Class" />
      <Type Name="TrivialGradientWrapper" Kind="Class" />
      <Type Name="TsvFeature" Kind="Class" />
      <Type Name="VectorUtils" Kind="Class" />
      <Type Name="WinLossCalculator" Kind="Class" />
      <Type Name="WinLossSurplusTest" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Internal.Calibration">
      <Type Name="Calibrate" Kind="Class" />
      <Type Name="Calibrate+CalibrateInputBase" Kind="Class" />
      <Type Name="Calibrate+FixedPlattInput" Kind="Class" />
      <Type Name="Calibrate+NoArgumentsInput" Kind="Class" />
      <Type Name="CalibratedPredictor" Kind="Class" />
      <Type Name="CalibratedPredictorBase" Kind="Class" />
      <Type Name="CalibrationDataStore" Kind="Class" />
      <Type Name="CalibrationDataStore+DataItem" Kind="Structure" />
      <Type Name="CalibratorTrainerBase" Kind="Class" />
      <Type Name="CalibratorUtils" Kind="Class" />
      <Type Name="FeatureWeightsCalibratedPredictor" Kind="Class" />
      <Type Name="FixedPlattCalibratorTrainer" Kind="Class" />
      <Type Name="FixedPlattCalibratorTrainer+Arguments" Kind="Class" />
      <Type Name="ICalibrator" Kind="Interface" />
      <Type Name="ICalibratorTrainer" Kind="Interface" />
      <Type Name="ICalibratorTrainerFactory" Kind="Interface" />
      <Type Name="ISelfCalibratingPredictor" Kind="Interface" />
      <Type Name="NaiveCalibrator" Kind="Class" />
      <Type Name="NaiveCalibratorTrainer" Kind="Class" />
      <Type Name="NaiveCalibratorTrainerFactory" Kind="Class" />
      <Type Name="ParameterMixingCalibratedPredictor" Kind="Class" />
      <Type Name="PavCalibrator" Kind="Class" />
      <Type Name="PavCalibratorTrainer" Kind="Class" />
      <Type Name="PavCalibratorTrainerFactory" Kind="Class" />
      <Type Name="PlattCalibrator" Kind="Class" />
      <Type Name="PlattCalibratorTrainer" Kind="Class" />
      <Type Name="PlattCalibratorTrainerFactory" Kind="Class" />
      <Type Name="SchemaBindableCalibratedPredictor" Kind="Class" />
      <Type Name="SignatureCalibrator" Kind="Delegate" />
      <Type Name="ValueMapperCalibratedPredictorBase" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Internal.CpuMath">
      <Type Name="AlignedArray" Kind="Class" />
      <Type Name="AvxUtils" Kind="Class" />
      <Type Name="CpuAligenedMathUtils`1" DisplayName="CpuAligenedMathUtils&lt;TMatrix&gt;" Kind="Class" />
      <Type Name="CpuAlignedMatrixBase" Kind="Class" />
      <Type Name="CpuAlignedMatrixCol" Kind="Class" />
      <Type Name="CpuAlignedMatrixRow" Kind="Class" />
      <Type Name="CpuAlignedMatrixRowBase" Kind="Class" />
      <Type Name="CpuAlignedVector" Kind="Class" />
      <Type Name="EigenUtils" Kind="Class" />
      <Type Name="GeneralUtils" Kind="Class" />
      <Type Name="ICpuBuffer`1" DisplayName="ICpuBuffer&lt;T&gt;" Kind="Interface" />
      <Type Name="ICpuFullMatrix" Kind="Interface" />
      <Type Name="ICpuMatrix" Kind="Interface" />
      <Type Name="ICpuVector" Kind="Interface" />
      <Type Name="IntUtils" Kind="Class" />
      <Type Name="MemUtils" Kind="Class" />
      <Type Name="ProbabilityFunctions" Kind="Class" />
      <Type Name="SseUtils" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Internal.Internallearn">
      <Type Name="EarlyStoppingCriterion`1" DisplayName="EarlyStoppingCriterion&lt;TArguments&gt;" Kind="Class" />
      <Type Name="EarlyStoppingCriterion`1+ArgumentsBase" DisplayName="EarlyStoppingCriterion&lt;TArguments&gt;+ArgumentsBase" Kind="Class" />
      <Type Name="FeatureNameCollection" Kind="Class" />
      <Type Name="GLEarlyStoppingCriterion" Kind="Class" />
      <Type Name="GLEarlyStoppingCriterion+Arguments" Kind="Class" />
      <Type Name="ICanGetSummaryAsIDataView" Kind="Interface" />
      <Type Name="ICanGetSummaryAsIRow" Kind="Interface" />
      <Type Name="ICanGetSummaryInKeyValuePairs" Kind="Interface" />
      <Type Name="ICanGetTrainingLabelNames" Kind="Interface" />
      <Type Name="ICanSaveInIniFormat" Kind="Interface" />
      <Type Name="ICanSaveInSourceCode" Kind="Interface" />
      <Type Name="ICanSaveInTextFormat" Kind="Interface" />
      <Type Name="ICanSaveSummary" Kind="Interface" />
      <Type Name="IDistribution`1" DisplayName="IDistribution&lt;TResult&gt;" Kind="Interface" />
      <Type Name="IEarlyStoppingCriterion" Kind="Interface" />
      <Type Name="IEarlyStoppingCriterionFactory" Kind="Interface" />
      <Type Name="IHasLabelGains" Kind="Interface" />
      <Type Name="IHaveFeatureWeights" Kind="Interface" />
      <Type Name="IParameterMixer" Kind="Interface" />
      <Type Name="IParameterMixer`1" DisplayName="IParameterMixer&lt;TOutput&gt;" Kind="Interface" />
      <Type Name="IPredictorWithFeatureWeights`1" DisplayName="IPredictorWithFeatureWeights&lt;TResult&gt;" Kind="Interface" />
      <Type Name="IQuantileDistribution`1" DisplayName="IQuantileDistribution&lt;TResult&gt;" Kind="Interface" />
      <Type Name="IQuantileRegressionPredictor" Kind="Interface" />
      <Type Name="IQuantileValueMapper" Kind="Interface" />
      <Type Name="ISampleableDistribution`1" DisplayName="ISampleableDistribution&lt;TResult&gt;" Kind="Interface" />
      <Type Name="IWhatTheFeatureValueMapper" Kind="Interface" />
      <Type Name="LPEarlyStoppingCriterion" Kind="Class" />
      <Type Name="LPEarlyStoppingCriterion+Arguments" Kind="Class" />
      <Type Name="MovingWindowEarlyStoppingCriterion" Kind="Class" />
      <Type Name="MovingWindowEarlyStoppingCriterion+Arguments" Kind="Class" />
      <Type Name="PQEarlyStoppingCriterion" Kind="Class" />
      <Type Name="PQEarlyStoppingCriterion+Arguments" Kind="Class" />
      <Type Name="PredictionUtil" Kind="Class" />
      <Type Name="PredictorBase`1" DisplayName="PredictorBase&lt;TOutput&gt;" Kind="Class" />
      <Type Name="PredictorUtils" Kind="Class" />
      <Type Name="ReverseComparer`1" DisplayName="ReverseComparer&lt;T&gt;" Kind="Class" />
      <Type Name="SignatureEarlyStoppingCriterion" Kind="Delegate" />
      <Type Name="SignatureFeatureScorerTrainer" Kind="Delegate" />
      <Type Name="SignaturePredictorFromFile" Kind="Delegate" />
      <Type Name="SlotDropper" Kind="Class" />
      <Type Name="TGUIAttribute" Kind="Class" />
      <Type Name="TolerantEarlyStoppingCriterion" Kind="Class" />
      <Type Name="TolerantEarlyStoppingCriterion+Arguments" Kind="Class" />
      <Type Name="TypeUtils" Kind="Class" />
      <Type Name="UPEarlyStoppingCriterion" Kind="Class" />
      <Type Name="UPEarlyStoppingCriterion+Arguments" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Internal.Internallearn.ResultProcessor">
      <Type Name="ExperimentItemResult" Kind="Structure" />
      <Type Name="PredictorResult" Kind="Class" />
      <Type Name="ResultMetric" Kind="Class" />
      <Type Name="ResultProcessor" Kind="Class" />
      <Type Name="ResultProcessorArguments" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Internal.IO">
      <Type Name="CsvReader" Kind="Class" />
      <Type Name="CsvWriter" Kind="Class" />
      <Type Name="IOUtil" Kind="Class" />
      <Type Name="ITableProcessor" Kind="Interface" />
      <Type Name="ITableReader" Kind="Interface" />
      <Type Name="ITableRow" Kind="Interface" />
      <Type Name="ITableWriter" Kind="Interface" />
      <Type Name="LowFragmentationStream" Kind="Class" />
      <Type Name="NoPreambleEncoding" Kind="Class" />
      <Type Name="TableEnumerator" Kind="Class" />
      <Type Name="TsvReader" Kind="Class" />
      <Type Name="TsvWriter" Kind="Class" />
      <Type Name="UnbufferedStream" Kind="Class" />
      <Type Name="UnbufferedStream+VirtualAllocException" Kind="Class" />
      <Type Name="Var" Kind="Class" />
      <Type Name="XmlTableReader" Kind="Class" />
      <Type Name="XmlTableWriter" Kind="Class" />
      <Type Name="ZStreamIn" Kind="Class" />
      <Type Name="ZStreamOut" Kind="Class" />
      <Type Name="ZStreamReader" Kind="Class" />
      <Type Name="ZStreamWriter" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Internal.Tools">
      <Type Name="CSharpApiGenerator" Kind="Class" />
      <Type Name="CSharpApiGenerator+Arguments" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Internal.Utilities">
      <Type Name="BigArray`1" DisplayName="BigArray&lt;T&gt;" Kind="Class" />
      <Type Name="BigArray`1+Visitor" DisplayName="BigArray&lt;T&gt;+Visitor" Kind="Delegate" />
      <Type Name="BinFinderBase" Kind="Class" />
      <Type Name="CharUtils" Kind="Class" />
      <Type Name="CmdIndenter" Kind="Class" />
      <Type Name="DoubleParser" Kind="Class" />
      <Type Name="DoubleParser+Result" Kind="Enumeration" />
      <Type Name="DynamicBinFinder" Kind="Class" />
      <Type Name="ExceptionMarshaller" Kind="Class" />
      <Type Name="FixedSizeQueue`1" DisplayName="FixedSizeQueue&lt;T&gt;" Kind="Class" />
      <Type Name="FloatUtils" Kind="Class" />
      <Type Name="GreedyBinFinder" Kind="Class" />
      <Type Name="HashArray`1" DisplayName="HashArray&lt;TItem&gt;" Kind="Class" />
      <Type Name="Hashing" Kind="Class" />
      <Type Name="Heap`1" DisplayName="Heap&lt;T&gt;" Kind="Class" />
      <Type Name="HeapNode" Kind="Class" />
      <Type Name="HeapNode+Heap`1" DisplayName="HeapNode+Heap&lt;T&gt;" Kind="Class" />
      <Type Name="HybridMemoryStream" Kind="Class" />
      <Type Name="IndentingTextWriter" Kind="Class" />
      <Type Name="IndentingTextWriter+Scope" Kind="Structure" />
      <Type Name="IniFileUtils" Kind="Class" />
      <Type Name="IReservoirSampler`1" DisplayName="IReservoirSampler&lt;T&gt;" Kind="Interface" />
      <Type Name="LimitedConcurrencyLevelTaskScheduler" Kind="Class" />
      <Type Name="ListExtensions" Kind="Class" />
      <Type Name="LruCache`2" DisplayName="LruCache&lt;TKey,TValue&gt;" Kind="Class" />
      <Type Name="MadeObjectPool`1" DisplayName="MadeObjectPool&lt;T&gt;" Kind="Class" />
      <Type Name="MathUtils" Kind="Class" />
      <Type Name="MatrixTransposeOps" Kind="Class" />
      <Type Name="MinWaiter" Kind="Class" />
      <Type Name="NormStr" Kind="Class" />
      <Type Name="NormStr+Pool" Kind="Class" />
      <Type Name="ObjectPool`1" DisplayName="ObjectPool&lt;T&gt;" Kind="Class" />
      <Type Name="ObjectPoolBase`1" DisplayName="ObjectPoolBase&lt;T&gt;" Kind="Class" />
      <Type Name="OrderedWaiter" Kind="Class" />
      <Type Name="PlatformUtils" Kind="Class" />
      <Type Name="ReservoirSamplerWithoutReplacement`1" DisplayName="ReservoirSamplerWithoutReplacement&lt;T&gt;" Kind="Class" />
      <Type Name="ReservoirSamplerWithReplacement`1" DisplayName="ReservoirSamplerWithReplacement&lt;T&gt;" Kind="Class" />
      <Type Name="ResourceManagerUtils" Kind="Class" />
      <Type Name="ResourceManagerUtils+ResourceDownloadResults" Kind="Class" />
      <Type Name="SequencePool" Kind="Class" />
      <Type Name="Stats" Kind="Class" />
      <Type Name="StreamUtils" Kind="Class" />
      <Type Name="SubsetStream" Kind="Class" />
      <Type Name="SummaryStatistics" Kind="Class" />
      <Type Name="SummaryStatisticsBase" Kind="Class" />
      <Type Name="SummaryStatisticsUpToSecondOrderMoments" Kind="Class" />
      <Type Name="SupervisedBinFinder" Kind="Class" />
      <Type Name="TextReaderStream" Kind="Class" />
      <Type Name="TimerScope" Kind="Class" />
      <Type Name="Tree`2" DisplayName="Tree&lt;TKey,TValue&gt;" Kind="Class" />
      <Type Name="Utils" Kind="Class" />
      <Type Name="VBufferUtils" Kind="Class" />
      <Type Name="VBufferUtils+PairManipulator`2" DisplayName="VBufferUtils+PairManipulator&lt;TSrc,TDst&gt;" Kind="Delegate" />
      <Type Name="VBufferUtils+PairManipulatorCopy`2" DisplayName="VBufferUtils+PairManipulatorCopy&lt;TSrc,TDst&gt;" Kind="Delegate" />
      <Type Name="VBufferUtils+SlotValueManipulator`1" DisplayName="VBufferUtils+SlotValueManipulator&lt;T&gt;" Kind="Delegate" />
      <Type Name="VBufferUtils+ValuePredicate`1" DisplayName="VBufferUtils+ValuePredicate&lt;T&gt;" Kind="Delegate" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.KMeans">
      <Type Name="KMeansPlusPlusTrainer" Kind="Class" />
      <Type Name="KMeansPlusPlusTrainer+Arguments" Kind="Class" />
      <Type Name="KMeansPlusPlusTrainer+InitAlgorithm" Kind="Enumeration" />
      <Type Name="KMeansPredictor" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Learners">
      <Type Name="AveragedLinearArguments" Kind="Class" />
      <Type Name="AveragedLinearTrainer`2" DisplayName="AveragedLinearTrainer&lt;TArguments,TPredictor&gt;" Kind="Class" />
      <Type Name="AveragedPerceptronTrainer" Kind="Class" />
      <Type Name="AveragedPerceptronTrainer+Arguments" Kind="Class" />
      <Type Name="CoefficientStatistics" Kind="Structure" />
      <Type Name="LbfgsTrainerBase`2" DisplayName="LbfgsTrainerBase&lt;TOutput,TPredictor&gt;" Kind="Class" />
      <Type Name="LbfgsTrainerBase`2+ArgumentsBase" DisplayName="LbfgsTrainerBase&lt;TOutput,TPredictor&gt;+ArgumentsBase" Kind="Class" />
      <Type Name="LinearBinaryPredictor" Kind="Class" />
      <Type Name="LinearClassificationTrainer" Kind="Class" />
      <Type Name="LinearClassificationTrainer+Arguments" Kind="Class" />
      <Type Name="LinearModelStatistics" Kind="Class" />
      <Type Name="LinearPredictor" Kind="Class" />
      <Type Name="LinearRegressionPredictor" Kind="Class" />
      <Type Name="LinearSvm" Kind="Class" />
      <Type Name="LinearSvm+Arguments" Kind="Class" />
      <Type Name="LinearTrainerBase`1" DisplayName="LinearTrainerBase&lt;TPredictor&gt;" Kind="Class" />
      <Type Name="LogisticRegression" Kind="Class" />
      <Type Name="LogisticRegression+Arguments" Kind="Class" />
      <Type Name="MetaMulticlassTrainer`2" DisplayName="MetaMulticlassTrainer&lt;TPred,TArgs&gt;" Kind="Class" />
      <Type Name="MetaMulticlassTrainer`2+ArgumentsBase" DisplayName="MetaMulticlassTrainer&lt;TPred,TArgs&gt;+ArgumentsBase" Kind="Class" />
      <Type Name="MulticlassLogisticRegression" Kind="Class" />
      <Type Name="MulticlassLogisticRegression+Arguments" Kind="Class" />
      <Type Name="MulticlassLogisticRegressionPredictor" Kind="Class" />
      <Type Name="MultiClassNaiveBayesPredictor" Kind="Class" />
      <Type Name="MultiClassNaiveBayesTrainer" Kind="Class" />
      <Type Name="MultiClassNaiveBayesTrainer+Arguments" Kind="Class" />
      <Type Name="OlsLinearRegressionPredictor" Kind="Class" />
      <Type Name="OlsLinearRegressionTrainer" Kind="Class" />
      <Type Name="OlsLinearRegressionTrainer+Arguments" Kind="Class" />
      <Type Name="OnlineGradientDescentTrainer" Kind="Class" />
      <Type Name="OnlineGradientDescentTrainer+Arguments" Kind="Class" />
      <Type Name="OnlineLinearArguments" Kind="Class" />
      <Type Name="OnlineLinearTrainer`2" DisplayName="OnlineLinearTrainer&lt;TArguments,TPredictor&gt;" Kind="Class" />
      <Type Name="Ova" Kind="Class" />
      <Type Name="Ova+Arguments" Kind="Class" />
      <Type Name="OvaPredictor" Kind="Class" />
      <Type Name="Pkpd" Kind="Class" />
      <Type Name="Pkpd+Arguments" Kind="Class" />
      <Type Name="PkpdPredictor" Kind="Class" />
      <Type Name="PoissonRegression" Kind="Class" />
      <Type Name="PoissonRegression+Arguments" Kind="Class" />
      <Type Name="PoissonRegressionPredictor" Kind="Class" />
      <Type Name="PriorPredictor" Kind="Class" />
      <Type Name="PriorTrainer" Kind="Class" />
      <Type Name="PriorTrainer+Arguments" Kind="Class" />
      <Type Name="RandomPredictor" Kind="Class" />
      <Type Name="RandomTrainer" Kind="Class" />
      <Type Name="RandomTrainer+Arguments" Kind="Class" />
      <Type Name="RegressionPredictor" Kind="Class" />
      <Type Name="Sdca" Kind="Class" />
      <Type Name="SdcaMultiClassTrainer" Kind="Class" />
      <Type Name="SdcaMultiClassTrainer+Arguments" Kind="Class" />
      <Type Name="SdcaRegressionTrainer" Kind="Class" />
      <Type Name="SdcaRegressionTrainer+Arguments" Kind="Class" />
      <Type Name="SdcaTrainerBase`1" DisplayName="SdcaTrainerBase&lt;TPredictor&gt;" Kind="Class" />
      <Type Name="SdcaTrainerBase`1+ArgumentsBase" DisplayName="SdcaTrainerBase&lt;TPredictor&gt;+ArgumentsBase" Kind="Class" />
      <Type Name="SdcaTrainerBase`1+DualsTableBase" DisplayName="SdcaTrainerBase&lt;TPredictor&gt;+DualsTableBase" Kind="Class" />
      <Type Name="SdcaTrainerBase`1+IdToIdxLookup" DisplayName="SdcaTrainerBase&lt;TPredictor&gt;+IdToIdxLookup" Kind="Class" />
      <Type Name="SdcaTrainerBase`1+MetricKind" DisplayName="SdcaTrainerBase&lt;TPredictor&gt;+MetricKind" Kind="Enumeration" />
      <Type Name="SdcaTrainerBase`1+Visitor" DisplayName="SdcaTrainerBase&lt;TPredictor&gt;+Visitor" Kind="Delegate" />
      <Type Name="StochasticGradientDescentClassificationTrainer" Kind="Class" />
      <Type Name="StochasticGradientDescentClassificationTrainer+Arguments" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Model">
      <Type Name="ICanSaveInBinaryFormat" Kind="Interface" />
      <Type Name="ICanSaveModel" Kind="Interface" />
      <Type Name="ModelFileUtils" Kind="Class" />
      <Type Name="ModelHeader" Kind="Structure" />
      <Type Name="ModelLoadContext" Kind="Class" />
      <Type Name="ModelSaveContext" Kind="Class" />
      <Type Name="ModelUtils" Kind="Class" />
      <Type Name="Repository" Kind="Class" />
      <Type Name="Repository+Entry" Kind="Class" />
      <Type Name="RepositoryReader" Kind="Class" />
      <Type Name="RepositoryWriter" Kind="Class" />
      <Type Name="SignatureLoadModel" Kind="Delegate" />
      <Type Name="VersionInfo" Kind="Structure" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Model.Onnx">
      <Type Name="IBindableCanSaveOnnx" Kind="Interface" />
      <Type Name="ICanSaveOnnx" Kind="Interface" />
      <Type Name="IDistCanSaveOnnx" Kind="Interface" />
      <Type Name="ISingleCanSaveOnnx" Kind="Interface" />
      <Type Name="ITransformCanSaveOnnx" Kind="Interface" />
      <Type Name="OnnxContext" Kind="Class" />
      <Type Name="OnnxUtils" Kind="Class" />
      <Type Name="OnnxUtils+ModelArgs" Kind="Class" />
      <Type Name="OnnxUtils+NodeProtoWrapper" Kind="Class" />
      <Type Name="SaveOnnxCommand" Kind="Class" />
      <Type Name="SaveOnnxCommand+Arguments" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Model.Pfa">
      <Type Name="BoundPfaContext" Kind="Class" />
      <Type Name="IBindableCanSavePfa" Kind="Interface" />
      <Type Name="ICanSavePfa" Kind="Interface" />
      <Type Name="IDistCanSavePfa" Kind="Interface" />
      <Type Name="ISingleCanSavePfa" Kind="Interface" />
      <Type Name="ITransformCanSavePfa" Kind="Interface" />
      <Type Name="PfaContext" Kind="Class" />
      <Type Name="PfaUtils" Kind="Class" />
      <Type Name="PfaUtils+Type" Kind="Class" />
      <Type Name="SavePfaCommand" Kind="Class" />
      <Type Name="SavePfaCommand+Arguments" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Numeric">
      <Type Name="BacktrackingLineSearch" Kind="Class" />
      <Type Name="CubicInterpLineSearch" Kind="Class" />
      <Type Name="DifferentiableFunction" Kind="Delegate" />
      <Type Name="DifferentiableFunctionAggregator" Kind="Class" />
      <Type Name="DiffFunc1D" Kind="Delegate" />
      <Type Name="DTerminate" Kind="Delegate" />
      <Type Name="GDOptimizer" Kind="Class" />
      <Type Name="GoldenSectionSearch" Kind="Class" />
      <Type Name="GradientCheckingMonitor" Kind="Class" />
      <Type Name="GradientTester" Kind="Class" />
      <Type Name="IDiffLineSearch" Kind="Interface" />
      <Type Name="ILineSearch" Kind="Interface" />
      <Type Name="IndexedDifferentiableFunction" Kind="Delegate" />
      <Type Name="ITerminationCriterion" Kind="Interface" />
      <Type Name="L1Optimizer" Kind="Class" />
      <Type Name="L1Optimizer+L1OptimizerState" Kind="Class" />
      <Type Name="MeanImprovementCriterion" Kind="Class" />
      <Type Name="MeanRelativeImprovementCriterion" Kind="Class" />
      <Type Name="Optimizer" Kind="Class" />
      <Type Name="Optimizer+OptimizerException" Kind="Class" />
      <Type Name="Optimizer+OptimizerState" Kind="Class" />
      <Type Name="Optimizer+PrematureConvergenceException" Kind="Class" />
      <Type Name="RelativeNormGradient" Kind="Class" />
      <Type Name="SgdOptimizer" Kind="Class" />
      <Type Name="SgdOptimizer+DStochasticGradient" Kind="Delegate" />
      <Type Name="SgdOptimizer+RateScheduleType" Kind="Enumeration" />
      <Type Name="StaticTerminationCriterion" Kind="Class" />
      <Type Name="UpperBoundOnDistanceWithL2" Kind="Class" />
      <Type Name="VectorUtils" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.PCA">
      <Type Name="PcaPredictor" Kind="Class" />
      <Type Name="RandomizedPcaTrainer" Kind="Class" />
      <Type Name="RandomizedPcaTrainer+Arguments" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.PipelineInference">
      <Type Name="AutoInference" Kind="Class" />
      <Type Name="AutoInference+AutoMlMlState" Kind="Class" />
      <Type Name="AutoInference+AutoMlMlState+Arguments" Kind="Class" />
      <Type Name="AutoInference+AutoMlMlState+Arguments+Metrics" Kind="Enumeration" />
      <Type Name="AutoInference+ColumnInfo" Kind="Structure" />
      <Type Name="AutoInference+DependencyMap" Kind="Class" />
      <Type Name="AutoInference+EntryPointGraphDef" Kind="Class" />
      <Type Name="AutoInference+ISupportAutoMlStateFactory" Kind="Interface" />
      <Type Name="AutoInference+LevelDependencyMap" Kind="Class" />
      <Type Name="AutoInference+RunSummary" Kind="Class" />
      <Type Name="AutoInference+SupportedMetric" Kind="Class" />
      <Type Name="AutoMlUtils" Kind="Class" />
      <Type Name="ColumnGroupingInference" Kind="Class" />
      <Type Name="ColumnGroupingInference+GroupingColumn" Kind="Structure" />
      <Type Name="ColumnGroupingInference+InferenceResult" Kind="Structure" />
      <Type Name="ColumnPurpose" Kind="Enumeration" />
      <Type Name="ColumnTypeInference" Kind="Class" />
      <Type Name="ColumnTypeInference+Arguments" Kind="Class" />
      <Type Name="ColumnTypeInference+Column" Kind="Structure" />
      <Type Name="ColumnTypeInference+InferenceResult" Kind="Structure" />
      <Type Name="DataAndModel`1" DisplayName="DataAndModel&lt;TModel&gt;" Kind="Class" />
      <Type Name="DatasetFeatureInference" Kind="Class" />
      <Type Name="DatasetFeatureInference+Arguments" Kind="Class" />
      <Type Name="DatasetFeatureInference+Column" Kind="Class" />
      <Type Name="DatasetFeatureInference+ColumnFeatures" Kind="Class" />
      <Type Name="DatasetFeatureInference+ColumnSchema" Kind="Class" />
      <Type Name="DatasetFeatureInference+ColumnSchema+Ratio" Kind="Structure" />
      <Type Name="DatasetFeatureInference+ColumnStatistics" Kind="Structure" />
      <Type Name="DatasetFeatureInference+LabelFeatures" Kind="Class" />
      <Type Name="DatasetFeatureInference+LabelFeatures+LabelColumnFeature" Kind="Structure" />
      <Type Name="DatasetFeatureInference+MissingValues" Kind="Class" />
      <Type Name="DatasetFeatureInference+Stats" Kind="Class" />
      <Type Name="DefaultsEngine" Kind="Class" />
      <Type Name="DefaultsEngine+Arguments" Kind="Class" />
      <Type Name="ExperimentsGenerator" Kind="Class" />
      <Type Name="ExperimentsGenerator+Pattern" Kind="Class" />
      <Type Name="ExperimentsGenerator+Sweep" Kind="Class" />
      <Type Name="ExperimentsGenerator+TrainerSweeper" Kind="Class" />
      <Type Name="FalseSweeper" Kind="Class" />
      <Type Name="InferenceUtils" Kind="Class" />
      <Type Name="IPipelineNode`1" DisplayName="IPipelineNode&lt;TModelType&gt;" Kind="Interface" />
      <Type Name="IPipelineOptimizer" Kind="Interface" />
      <Type Name="ISupportIPipelineOptimizerFactory" Kind="Interface" />
      <Type Name="ISupportITerminatorFactory" Kind="Interface" />
      <Type Name="IterationTerminator" Kind="Class" />
      <Type Name="IterationTerminator+Arguments" Kind="Class" />
      <Type Name="ITerminator" Kind="Interface" />
      <Type Name="PipelineNodeBase" Kind="Class" />
      <Type Name="PipelineOptimizerBase" Kind="Class" />
      <Type Name="PipelinePattern" Kind="Class" />
      <Type Name="PipelinePattern+PipelineResultRow" Kind="Class" />
      <Type Name="PredictorCategory" Kind="Class" />
      <Type Name="PredictorsList" Kind="Class" />
      <Type Name="PurposeInference" Kind="Class" />
      <Type Name="PurposeInference+Arguments" Kind="Class" />
      <Type Name="PurposeInference+Column" Kind="Structure" />
      <Type Name="PurposeInference+InferenceResult" Kind="Structure" />
      <Type Name="RecipeInference" Kind="Class" />
      <Type Name="RecipeInference+AccuracyFocusedRecipe" Kind="Class" />
      <Type Name="RecipeInference+BalancedTextClassificationRecipe" Kind="Class" />
      <Type Name="RecipeInference+DefaultRecipe" Kind="Class" />
      <Type Name="RecipeInference+ExplorationComboRecipe" Kind="Class" />
      <Type Name="RecipeInference+InferenceResult" Kind="Structure" />
      <Type Name="RecipeInference+MultiClassRecipies" Kind="Class" />
      <Type Name="RecipeInference+Recipe" Kind="Class" />
      <Type Name="RecipeInference+SuggestedRecipe" Kind="Structure" />
      <Type Name="RecipeInference+SuggestedRecipe+SuggestedLearner" Kind="Structure" />
      <Type Name="RecipeInference+TreeLeafRecipe" Kind="Class" />
      <Type Name="RocketEngine" Kind="Class" />
      <Type Name="RocketEngine+Arguments" Kind="Class" />
      <Type Name="TextFileContents" Kind="Class" />
      <Type Name="TextFileContents+ColumnSplitResult" Kind="Structure" />
      <Type Name="TextFileSample" Kind="Class" />
      <Type Name="TrainerPipelineNode" Kind="Class" />
      <Type Name="TransformInference" Kind="Class" />
      <Type Name="TransformInference+Arguments" Kind="Class" />
      <Type Name="TransformInference+Column" Kind="Structure" />
      <Type Name="TransformInference+ColumnRoutingStructure" Kind="Class" />
      <Type Name="TransformInference+ColumnRoutingStructure+AnnotatedName" Kind="Structure" />
      <Type Name="TransformInference+Experts" Kind="Class" />
      <Type Name="TransformInference+Experts+AutoLabel" Kind="Class" />
      <Type Name="TransformInference+Experts+Boolean" Kind="Class" />
      <Type Name="TransformInference+Experts+Categorical" Kind="Class" />
      <Type Name="TransformInference+Experts+FeaturesColumnConcatRename" Kind="Class" />
      <Type Name="TransformInference+Experts+FeaturesColumnConcatRenameIgnoreText" Kind="Class" />
      <Type Name="TransformInference+Experts+FeaturesColumnConcatRenameNumericOnly" Kind="Class" />
      <Type Name="TransformInference+Experts+GroupIdHashRename" Kind="Class" />
      <Type Name="TransformInference+Experts+LabelAdvisory" Kind="Class" />
      <Type Name="TransformInference+Experts+NaiveBayesTransform" Kind="Class" />
      <Type Name="TransformInference+Experts+NameColumnConcatRename" Kind="Class" />
      <Type Name="TransformInference+Experts+NumericMissing" Kind="Class" />
      <Type Name="TransformInference+Experts+SdcaTransform" Kind="Class" />
      <Type Name="TransformInference+Experts+Text" Kind="Class" />
      <Type Name="TransformInference+Experts+TextBiGramTriGram" Kind="Class" />
      <Type Name="TransformInference+Experts+TextUniGramTriGram" Kind="Class" />
      <Type Name="TransformInference+InferenceResult" Kind="Structure" />
      <Type Name="TransformInference+IntermediateColumn" Kind="Class" />
      <Type Name="TransformInference+ITransformInferenceExpert" Kind="Interface" />
      <Type Name="TransformInference+SuggestedTransform" Kind="Structure" />
      <Type Name="TransformInference+TransformInferenceExpertBase" Kind="Class" />
      <Type Name="TransformPipelineNode" Kind="Class" />
      <Type Name="UniformRandomEngine" Kind="Class" />
      <Type Name="UniformRandomEngine+Arguments" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Sweeper">
      <Type Name="BaseParamArguments" Kind="Class" />
      <Type Name="DeterministicSweeperAsync" Kind="Class" />
      <Type Name="DeterministicSweeperAsync+Arguments" Kind="Class" />
      <Type Name="DiscreteParamArguments" Kind="Class" />
      <Type Name="DiscreteValueGenerator" Kind="Class" />
      <Type Name="ExeConfigRunnerBase" Kind="Class" />
      <Type Name="ExeConfigRunnerBase+ArgumentsBase" Kind="Class" />
      <Type Name="FloatParamArguments" Kind="Class" />
      <Type Name="FloatParameterValue" Kind="Class" />
      <Type Name="FloatValueGenerator" Kind="Class" />
      <Type Name="IAsyncSweeper" Kind="Interface" />
      <Type Name="IConfigRunner" Kind="Interface" />
      <Type Name="InternalSweepResultEvaluator" Kind="Class" />
      <Type Name="InternalSweepResultEvaluator+Arguments" Kind="Class" />
      <Type Name="INumericValueGenerator" Kind="Interface" />
      <Type Name="LocalExeConfigRunner" Kind="Class" />
      <Type Name="LocalExeConfigRunner+Arguments" Kind="Class" />
      <Type Name="LongParamArguments" Kind="Class" />
      <Type Name="LongParameterValue" Kind="Class" />
      <Type Name="LongValueGenerator" Kind="Class" />
      <Type Name="NelderMeadSweeper" Kind="Class" />
      <Type Name="NelderMeadSweeper+Arguments" Kind="Class" />
      <Type Name="NumericParamArguments" Kind="Class" />
      <Type Name="ParameterSetWithId" Kind="Class" />
      <Type Name="RandomGridSweeper" Kind="Class" />
      <Type Name="RandomGridSweeper+Arguments" Kind="Class" />
      <Type Name="SignatureAsyncSweeper" Kind="Delegate" />
      <Type Name="SignatureConfigRunner" Kind="Delegate" />
      <Type Name="SignatureSweeperFromParameterList" Kind="Delegate" />
      <Type Name="SignatureSweeperParameter" Kind="Delegate" />
      <Type Name="SimpleAsyncSweeper" Kind="Class" />
      <Type Name="SmacSweeper" Kind="Class" />
      <Type Name="SmacSweeper+Arguments" Kind="Class" />
      <Type Name="StringParameterValue" Kind="Class" />
      <Type Name="SuggestedSweepsParser" Kind="Class" />
      <Type Name="SweepCommand" Kind="Class" />
      <Type Name="SweepCommand+Arguments" Kind="Class" />
      <Type Name="SweeperBase" Kind="Class" />
      <Type Name="SweeperBase+ArgumentsBase" Kind="Class" />
      <Type Name="SynthConfigRunner" Kind="Class" />
      <Type Name="SynthConfigRunner+Arguments" Kind="Class" />
      <Type Name="UniformRandomSweeper" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Sweeper.Algorithms">
      <Type Name="KdoSweeper" Kind="Class" />
      <Type Name="KdoSweeper+Arguments" Kind="Class" />
      <Type Name="SweeperProbabilityUtils" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.TextAnalytics">
      <Type Name="CharTokenizeTransform" Kind="Class" />
      <Type Name="CharTokenizeTransform+Arguments" Kind="Class" />
      <Type Name="CharTokenizeTransform+Column" Kind="Class" />
      <Type Name="CustomStopWordsRemoverTransform" Kind="Class" />
      <Type Name="CustomStopWordsRemoverTransform+Arguments" Kind="Class" />
      <Type Name="CustomStopWordsRemoverTransform+ArgumentsBase" Kind="Class" />
      <Type Name="CustomStopWordsRemoverTransform+Column" Kind="Class" />
      <Type Name="CustomStopWordsRemoverTransform+LoaderArguments" Kind="Class" />
      <Type Name="IStopWordsRemoverFactory" Kind="Interface" />
      <Type Name="IStopWordsRemoverTransform" Kind="Interface" />
      <Type Name="PredefinedStopWordsRemoverFactory" Kind="Class" />
      <Type Name="SentimentAnalyzingTransform" Kind="Class" />
      <Type Name="SentimentAnalyzingTransform+Arguments" Kind="Class" />
      <Type Name="SignatureStopWordsRemoverTransform" Kind="Delegate" />
      <Type Name="StopWordsRemoverTransform" Kind="Class" />
      <Type Name="StopWordsRemoverTransform+Arguments" Kind="Class" />
      <Type Name="StopWordsRemoverTransform+Column" Kind="Class" />
      <Type Name="StopWordsRemoverTransform+Language" Kind="Enumeration" />
      <Type Name="TextNormalizerTransform" Kind="Class" />
      <Type Name="TextNormalizerTransform+Arguments" Kind="Class" />
      <Type Name="TextNormalizerTransform+CaseNormalizationMode" Kind="Enumeration" />
      <Type Name="TextNormalizerTransform+Column" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Tools">
      <Type Name="ChainCommand" Kind="Class" />
      <Type Name="ChainCommand+Arguments" Kind="Class" />
      <Type Name="HelpCommand" Kind="Class" />
      <Type Name="HelpCommand+Arguments" Kind="Class" />
      <Type Name="HelpCommand+Component" Kind="Structure" />
      <Type Name="IGenerator" Kind="Interface" />
      <Type Name="Maml" Kind="Class" />
      <Type Name="SavePredictorCommand" Kind="Class" />
      <Type Name="SavePredictorCommand+Arguments" Kind="Class" />
      <Type Name="SavePredictorUtils" Kind="Class" />
      <Type Name="SignatureModuleGenerator" Kind="Delegate" />
      <Type Name="VersionCommand" Kind="Class" />
      <Type Name="XmlGenerator" Kind="Class" />
      <Type Name="XmlGenerator+Arguments" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Training">
      <Type Name="CursOpt" Kind="Enumeration" />
      <Type Name="FeatureFloatVectorCursor" Kind="Class" />
      <Type Name="FeatureFloatVectorCursor+Factory" Kind="Class" />
      <Type Name="FloatLabelCursor" Kind="Class" />
      <Type Name="FloatLabelCursor+Factory" Kind="Class" />
      <Type Name="MultiClassLabelCursor" Kind="Class" />
      <Type Name="MultiClassLabelCursor+Factory" Kind="Class" />
      <Type Name="StandardScalarCursor" Kind="Class" />
      <Type Name="StandardScalarCursor+Factory" Kind="Class" />
      <Type Name="TrainerBase" Kind="Class" />
      <Type Name="TrainerBase`1" DisplayName="TrainerBase&lt;TPredictor&gt;" Kind="Class" />
      <Type Name="TrainerBase`2" DisplayName="TrainerBase&lt;TDataSet,TPredictor&gt;" Kind="Class" />
      <Type Name="TrainerUtils" Kind="Class" />
      <Type Name="TrainingCursorBase" Kind="Class" />
      <Type Name="TrainingCursorBase+FactoryBase`1" DisplayName="TrainingCursorBase+FactoryBase&lt;TCurs&gt;" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.Transforms">
      <Type Name="TextAnalytics" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.TreePredictor">
      <Type Name="INode" Kind="Interface" />
      <Type Name="ITree" Kind="Interface" />
      <Type Name="ITree`1" DisplayName="ITree&lt;TFeatures&gt;" Kind="Interface" />
      <Type Name="ITreeEnsemble" Kind="Interface" />
      <Type Name="NodeKeys" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Runtime.UniversalModelFormat.Onnx">
      <Type Name="AttributeProto" Kind="Class" />
      <Type Name="AttributeProto+Types" Kind="Class" />
      <Type Name="AttributeProto+Types+AttributeType" Kind="Enumeration" />
      <Type Name="GraphProto" Kind="Class" />
      <Type Name="ModelProto" Kind="Class" />
      <Type Name="NodeProto" Kind="Class" />
      <Type Name="OnnxMlReflection" Kind="Class" />
      <Type Name="OperatorSetIdProto" Kind="Class" />
      <Type Name="StringStringEntryProto" Kind="Class" />
      <Type Name="TensorProto" Kind="Class" />
      <Type Name="TensorProto+Types" Kind="Class" />
      <Type Name="TensorProto+Types+DataType" Kind="Enumeration" />
      <Type Name="TensorProto+Types+Segment" Kind="Class" />
      <Type Name="TensorShapeProto" Kind="Class" />
      <Type Name="TensorShapeProto+Types" Kind="Class" />
      <Type Name="TensorShapeProto+Types+Dimension" Kind="Class" />
      <Type Name="TensorShapeProto+Types+Dimension+ValueOneofCase" Kind="Enumeration" />
      <Type Name="TypeProto" Kind="Class" />
      <Type Name="TypeProto+Types" Kind="Class" />
      <Type Name="TypeProto+Types+Map" Kind="Class" />
      <Type Name="TypeProto+Types+Sequence" Kind="Class" />
      <Type Name="TypeProto+Types+Tensor" Kind="Class" />
      <Type Name="TypeProto+ValueOneofCase" Kind="Enumeration" />
      <Type Name="ValueInfoProto" Kind="Class" />
      <Type Name="Version" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Trainers">
      <Type Name="AveragedPerceptronBinaryClassifier" Kind="Class" />
      <Type Name="AveragedPerceptronBinaryClassifier+Output" Kind="Class" />
      <Type Name="BinaryLogisticRegressor" Kind="Class" />
      <Type Name="BinaryLogisticRegressor+Output" Kind="Class" />
      <Type Name="BoostedTreeArgsOptimizationAlgorithmType" Kind="Enumeration" />
      <Type Name="Bundle" Kind="Enumeration" />
      <Type Name="FastForestBinaryClassifier" Kind="Class" />
      <Type Name="FastForestBinaryClassifier+Output" Kind="Class" />
      <Type Name="FastForestRegressor" Kind="Class" />
      <Type Name="FastForestRegressor+Output" Kind="Class" />
      <Type Name="FastTreeBinaryClassifier" Kind="Class" />
      <Type Name="FastTreeBinaryClassifier+Output" Kind="Class" />
      <Type Name="FastTreeRanker" Kind="Class" />
      <Type Name="FastTreeRanker+Output" Kind="Class" />
      <Type Name="FastTreeRegressor" Kind="Class" />
      <Type Name="FastTreeRegressor+Output" Kind="Class" />
      <Type Name="FastTreeTweedieRegressor" Kind="Class" />
      <Type Name="FastTreeTweedieRegressor+Output" Kind="Class" />
      <Type Name="GeneralizedAdditiveModelBinaryClassifier" Kind="Class" />
      <Type Name="GeneralizedAdditiveModelBinaryClassifier+Output" Kind="Class" />
      <Type Name="GeneralizedAdditiveModelRegressor" Kind="Class" />
      <Type Name="GeneralizedAdditiveModelRegressor+Output" Kind="Class" />
      <Type Name="LinearSvmBinaryClassifier" Kind="Class" />
      <Type Name="LinearSvmBinaryClassifier+Output" Kind="Class" />
      <Type Name="LogisticRegressor" Kind="Class" />
      <Type Name="LogisticRegressor+Output" Kind="Class" />
      <Type Name="NaiveBayesClassifier" Kind="Class" />
      <Type Name="NaiveBayesClassifier+Output" Kind="Class" />
      <Type Name="OnlineGradientDescentRegressor" Kind="Class" />
      <Type Name="OnlineGradientDescentRegressor+Output" Kind="Class" />
      <Type Name="OrdinaryLeastSquaresRegressor" Kind="Class" />
      <Type Name="OrdinaryLeastSquaresRegressor+Output" Kind="Class" />
      <Type Name="PoissonRegressor" Kind="Class" />
      <Type Name="PoissonRegressor+Output" Kind="Class" />
      <Type Name="StochasticDualCoordinateAscentBinaryClassifier" Kind="Class" />
      <Type Name="StochasticDualCoordinateAscentBinaryClassifier+Output" Kind="Class" />
      <Type Name="StochasticDualCoordinateAscentClassifier" Kind="Class" />
      <Type Name="StochasticDualCoordinateAscentClassifier+Output" Kind="Class" />
      <Type Name="StochasticDualCoordinateAscentRegressor" Kind="Class" />
      <Type Name="StochasticDualCoordinateAscentRegressor+Output" Kind="Class" />
      <Type Name="StochasticGradientDescentBinaryClassifier" Kind="Class" />
      <Type Name="StochasticGradientDescentBinaryClassifier+Output" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.ML.Transforms">
      <Type Name="ApproximateBootstrapSampler" Kind="Class" />
      <Type Name="ApproximateBootstrapSampler+Output" Kind="Class" />
      <Type Name="BinaryPredictionScoreColumnsRenamer" Kind="Class" />
      <Type Name="BinaryPredictionScoreColumnsRenamer+Output" Kind="Class" />
      <Type Name="BinNormalizer" Kind="Class" />
      <Type Name="BinNormalizer+Output" Kind="Class" />
      <Type Name="CacheCachingType" Kind="Enumeration" />
      <Type Name="CategoricalHashOneHotVectorizer" Kind="Class" />
      <Type Name="CategoricalHashOneHotVectorizer+Output" Kind="Class" />
      <Type Name="CategoricalHashTransformColumn" Kind="Class" />
      <Type Name="CategoricalOneHotVectorizer" Kind="Class" />
      <Type Name="CategoricalOneHotVectorizer+Output" Kind="Class" />
      <Type Name="CategoricalTransformColumn" Kind="Class" />
      <Type Name="CategoricalTransformOutputKind" Kind="Enumeration" />
      <Type Name="CharacterTokenizer" Kind="Class" />
      <Type Name="CharacterTokenizer+Output" Kind="Class" />
      <Type Name="CharTokenizeTransformColumn" Kind="Class" />
      <Type Name="ColumnConcatenator" Kind="Class" />
      <Type Name="ColumnConcatenator+Output" Kind="Class" />
      <Type Name="ColumnCopier" Kind="Class" />
      <Type Name="ColumnCopier+Output" Kind="Class" />
      <Type Name="ColumnDropper" Kind="Class" />
      <Type Name="ColumnDropper+Output" Kind="Class" />
      <Type Name="ColumnSelector" Kind="Class" />
      <Type Name="ColumnSelector+Output" Kind="Class" />
      <Type Name="ColumnTypeConverter" Kind="Class" />
      <Type Name="ColumnTypeConverter+Output" Kind="Class" />
      <Type Name="CombinerByContiguousGroupId" Kind="Class" />
      <Type Name="CombinerByContiguousGroupId+Output" Kind="Class" />
      <Type Name="ConcatTransformColumn" Kind="Class" />
      <Type Name="ConditionalNormalizer" Kind="Class" />
      <Type Name="ConditionalNormalizer+Output" Kind="Class" />
      <Type Name="ConvertTransformColumn" Kind="Class" />
      <Type Name="CopyColumnsTransformColumn" Kind="Class" />
      <Type Name="DataCache" Kind="Class" />
      <Type Name="DataCache+Output" Kind="Class" />
      <Type Name="DataKind" Kind="Enumeration" />
      <Type Name="DatasetScorer" Kind="Class" />
      <Type Name="DatasetScorer+Output" Kind="Class" />
      <Type Name="DelimitedTokenizeTransformColumn" Kind="Class" />
      <Type Name="Dictionarizer" Kind="Class" />
      <Type Name="Dictionarizer+Output" Kind="Class" />
      <Type Name="FeatureCombiner" Kind="Class" />
      <Type Name="FeatureCombiner+Output" Kind="Class" />
      <Type Name="FeatureSelectorByCount" Kind="Class" />
      <Type Name="FeatureSelectorByCount+Output" Kind="Class" />
      <Type Name="FeatureSelectorByMutualInformation" Kind="Class" />
      <Type Name="FeatureSelectorByMutualInformation+Output" Kind="Class" />
      <Type Name="GenerateNumberTransformColumn" Kind="Class" />
      <Type Name="GlobalContrastNormalizer" Kind="Class" />
      <Type Name="GlobalContrastNormalizer+Output" Kind="Class" />
      <Type Name="HashConverter" Kind="Class" />
      <Type Name="HashConverter+Output" Kind="Class" />
      <Type Name="HashJoinTransformColumn" Kind="Class" />
      <Type Name="KeyToTextConverter" Kind="Class" />
      <Type Name="KeyToTextConverter+Output" Kind="Class" />
      <Type Name="KeyToValueTransformColumn" Kind="Class" />
      <Type Name="LabelColumnKeyBooleanConverter" Kind="Class" />
      <Type Name="LabelColumnKeyBooleanConverter+Output" Kind="Class" />
      <Type Name="LabelIndicator" Kind="Class" />
      <Type Name="LabelIndicator+Output" Kind="Class" />
      <Type Name="LabelIndicatorTransformColumn" Kind="Class" />
      <Type Name="LabelToFloatConverter" Kind="Class" />
      <Type Name="LabelToFloatConverter+Output" Kind="Class" />
      <Type Name="LogMeanVarianceNormalizer" Kind="Class" />
      <Type Name="LogMeanVarianceNormalizer+Output" Kind="Class" />
      <Type Name="LpNormalizer" Kind="Class" />
      <Type Name="LpNormalizer+Output" Kind="Class" />
      <Type Name="LpNormNormalizerTransformColumn" Kind="Class" />
      <Type Name="LpNormNormalizerTransformGcnColumn" Kind="Class" />
      <Type Name="LpNormNormalizerTransformNormalizerKind" Kind="Enumeration" />
      <Type Name="ManyHeterogeneousModelCombiner" Kind="Class" />
      <Type Name="ManyHeterogeneousModelCombiner+Output" Kind="Class" />
      <Type Name="MeanVarianceNormalizer" Kind="Class" />
      <Type Name="MeanVarianceNormalizer+Output" Kind="Class" />
      <Type Name="MinMaxNormalizer" Kind="Class" />
      <Type Name="MinMaxNormalizer+Output" Kind="Class" />
      <Type Name="MissingValueHandler" Kind="Class" />
      <Type Name="MissingValueHandler+Output" Kind="Class" />
      <Type Name="MissingValueIndicator" Kind="Class" />
      <Type Name="MissingValueIndicator+Output" Kind="Class" />
      <Type Name="MissingValuesDropper" Kind="Class" />
      <Type Name="MissingValuesDropper+Output" Kind="Class" />
      <Type Name="MissingValuesRowDropper" Kind="Class" />
      <Type Name="MissingValuesRowDropper+Output" Kind="Class" />
      <Type Name="MissingValueSubstitutor" Kind="Class" />
      <Type Name="MissingValueSubstitutor+Output" Kind="Class" />
      <Type Name="ModelCombiner" Kind="Class" />
      <Type Name="ModelCombiner+Output" Kind="Class" />
      <Type Name="NADropTransformColumn" Kind="Class" />
      <Type Name="NAHandleTransformColumn" Kind="Class" />
      <Type Name="NAHandleTransformReplacementKind" Kind="Enumeration" />
      <Type Name="NAIndicatorTransformColumn" Kind="Class" />
      <Type Name="NAReplaceTransformColumn" Kind="Class" />
      <Type Name="NAReplaceTransformReplacementKind" Kind="Enumeration" />
      <Type Name="NgramTransformColumn" Kind="Class" />
      <Type Name="NgramTransformWeightingCriteria" Kind="Enumeration" />
      <Type Name="NGramTranslator" Kind="Class" />
      <Type Name="NGramTranslator+Output" Kind="Class" />
      <Type Name="NoOperation" Kind="Class" />
      <Type Name="NoOperation+Output" Kind="Class" />
      <Type Name="NormalizeTransformAffineColumn" Kind="Class" />
      <Type Name="NormalizeTransformBinColumn" Kind="Class" />
      <Type Name="NormalizeTransformLogNormalColumn" Kind="Class" />
      <Type Name="OptionalColumnCreator" Kind="Class" />
      <Type Name="OptionalColumnCreator+Output" Kind="Class" />
      <Type Name="PredictedLabelColumnOriginalValueConverter" Kind="Class" />
      <Type Name="PredictedLabelColumnOriginalValueConverter+Output" Kind="Class" />
      <Type Name="RandomNumberGenerator" Kind="Class" />
      <Type Name="RandomNumberGenerator+Output" Kind="Class" />
      <Type Name="RowRangeFilter" Kind="Class" />
      <Type Name="RowRangeFilter+Output" Kind="Class" />
      <Type Name="RowSkipAndTakeFilter" Kind="Class" />
      <Type Name="RowSkipAndTakeFilter+Output" Kind="Class" />
      <Type Name="RowSkipFilter" Kind="Class" />
      <Type Name="RowSkipFilter+Output" Kind="Class" />
      <Type Name="RowTakeFilter" Kind="Class" />
      <Type Name="RowTakeFilter+Output" Kind="Class" />
      <Type Name="ScoreColumnSelector" Kind="Class" />
      <Type Name="ScoreColumnSelector+Output" Kind="Class" />
      <Type Name="Scorer" Kind="Class" />
      <Type Name="Scorer+Output" Kind="Class" />
      <Type Name="Segregator" Kind="Class" />
      <Type Name="Segregator+Output" Kind="Class" />
      <Type Name="SentimentAnalyzer" Kind="Class" />
      <Type Name="SentimentAnalyzer+Output" Kind="Class" />
      <Type Name="SupervisedBinNormalizer" Kind="Class" />
      <Type Name="SupervisedBinNormalizer+Output" Kind="Class" />
      <Type Name="TermLoaderArguments" Kind="Class" />
      <Type Name="TermTransformColumn" Kind="Class" />
      <Type Name="TermTransformSortOrder" Kind="Enumeration" />
      <Type Name="TextFeaturizer" Kind="Class" />
      <Type Name="TextFeaturizer+Output" Kind="Class" />
      <Type Name="TextNormalizerTransformCaseNormalizationMode" Kind="Enumeration" />
      <Type Name="TextToKeyConverter" Kind="Class" />
      <Type Name="TextToKeyConverter+Output" Kind="Class" />
      <Type Name="TextTransformColumn" Kind="Class" />
      <Type Name="TextTransformLanguage" Kind="Enumeration" />
      <Type Name="TextTransformTextNormKind" Kind="Enumeration" />
      <Type Name="TrainTestDatasetSplitter" Kind="Class" />
      <Type Name="TrainTestDatasetSplitter+Output" Kind="Class" />
      <Type Name="TreeLeafFeaturizer" Kind="Class" />
      <Type Name="TreeLeafFeaturizer+Output" Kind="Class" />
      <Type Name="TwoHeterogeneousModelCombiner" Kind="Class" />
      <Type Name="TwoHeterogeneousModelCombiner+Output" Kind="Class" />
      <Type Name="UngroupTransformUngroupMode" Kind="Enumeration" />
      <Type Name="WordTokenizer" Kind="Class" />
      <Type Name="WordTokenizer+Output" Kind="Class" />
    </Namespace>
  </Types>
  <Title>Untitled</Title>
  <ExtensionMethods>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHostEnvironment" />
      </Targets>
      <Member MemberName="CreateBatchPredictionEngine&lt;TSrc,TDst&gt;">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Api.BatchPredictionEngine&lt;TSrc,TDst&gt; CreateBatchPredictionEngine&lt;TSrc,TDst&gt; (this Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.IDataView dataPipe, bool ignoreMissingColumns = false, Microsoft.ML.Runtime.Api.SchemaDefinition inputSchemaDefinition = null, Microsoft.ML.Runtime.Api.SchemaDefinition outputSchemaDefinition = null) where TSrc : class where TDst : class, new();" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Api.BatchPredictionEngine`2&lt;!!TSrc, !!TDst&gt; CreateBatchPredictionEngine&lt;class TSrc, class .ctor TDst&gt;(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.IDataView dataPipe, bool ignoreMissingColumns, class Microsoft.ML.Runtime.Api.SchemaDefinition inputSchemaDefinition, class Microsoft.ML.Runtime.Api.SchemaDefinition outputSchemaDefinition) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateBatchPredictionEngine``2(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.IDataView,System.Boolean,Microsoft.ML.Runtime.Api.SchemaDefinition,Microsoft.ML.Runtime.Api.SchemaDefinition)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateBatchPredictionEngine(Of TSrc As Class, TDst As Class) (env As IHostEnvironment, dataPipe As IDataView, Optional ignoreMissingColumns As Boolean = false, Optional inputSchemaDefinition As SchemaDefinition = null, Optional outputSchemaDefinition As SchemaDefinition = null) As BatchPredictionEngine(Of TSrc, TDst)" />
        <MemberSignature Language="F#" Value="static member CreateBatchPredictionEngine : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.IDataView * bool * Microsoft.ML.Runtime.Api.SchemaDefinition * Microsoft.ML.Runtime.Api.SchemaDefinition -&gt; Microsoft.ML.Runtime.Api.BatchPredictionEngine&lt;'Src, 'Dst (requires 'Src : null and 'Dst : null and 'Dst : (new : unit -&gt; 'Dst))&gt; (requires 'Src : null and 'Dst : null and 'Dst : (new : unit -&gt; 'Dst))" Usage="Microsoft.ML.Runtime.Api.ComponentCreation.CreateBatchPredictionEngine (env, dataPipe, ignoreMissingColumns, inputSchemaDefinition, outputSchemaDefinition)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Api.BatchPredictionEngine&lt;TSrc,TDst&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TSrc">
            <Constraints>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
          <TypeParameter Name="TDst">
            <Constraints>
              <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
          <Parameter Name="dataPipe" Type="Microsoft.ML.Runtime.Data.IDataView" />
          <Parameter Name="ignoreMissingColumns" Type="System.Boolean" />
          <Parameter Name="inputSchemaDefinition" Type="Microsoft.ML.Runtime.Api.SchemaDefinition" />
          <Parameter Name="outputSchemaDefinition" Type="Microsoft.ML.Runtime.Api.SchemaDefinition" />
        </Parameters>
        <Docs>
          <typeparam name="TSrc">To be added.</typeparam>
          <typeparam name="TDst">To be added.</typeparam>
          <param name="env">The host environment to use.</param>
          <param name="dataPipe">The transformation pipe that may or may not include a scorer.</param>
          <param name="ignoreMissingColumns">Whether to ignore missing columns in the data view.</param>
          <param name="inputSchemaDefinition">The optional input schema. If <c>null</c>, the schema is inferred from the <typeparamref name="TSrc" /> type.</param>
          <param name="outputSchemaDefinition">The optional output schema. If <c>null</c>, the schema is inferred from the <typeparamref name="TDst" /> type.</param>
          <summary>
            Create a batch prediction engine.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.ComponentCreation" Member="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateBatchPredictionEngine``2(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.IDataView,System.Boolean,Microsoft.ML.Runtime.Api.SchemaDefinition,Microsoft.ML.Runtime.Api.SchemaDefinition)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHostEnvironment" />
      </Targets>
      <Member MemberName="CreateBatchPredictionEngine&lt;TSrc,TDst&gt;">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Api.BatchPredictionEngine&lt;TSrc,TDst&gt; CreateBatchPredictionEngine&lt;TSrc,TDst&gt; (this Microsoft.ML.Runtime.IHostEnvironment env, System.IO.Stream modelStream, bool ignoreMissingColumns = false, Microsoft.ML.Runtime.Api.SchemaDefinition inputSchemaDefinition = null, Microsoft.ML.Runtime.Api.SchemaDefinition outputSchemaDefinition = null) where TSrc : class where TDst : class, new();" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Api.BatchPredictionEngine`2&lt;!!TSrc, !!TDst&gt; CreateBatchPredictionEngine&lt;class TSrc, class .ctor TDst&gt;(class Microsoft.ML.Runtime.IHostEnvironment env, class System.IO.Stream modelStream, bool ignoreMissingColumns, class Microsoft.ML.Runtime.Api.SchemaDefinition inputSchemaDefinition, class Microsoft.ML.Runtime.Api.SchemaDefinition outputSchemaDefinition) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateBatchPredictionEngine``2(Microsoft.ML.Runtime.IHostEnvironment,System.IO.Stream,System.Boolean,Microsoft.ML.Runtime.Api.SchemaDefinition,Microsoft.ML.Runtime.Api.SchemaDefinition)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateBatchPredictionEngine(Of TSrc As Class, TDst As Class) (env As IHostEnvironment, modelStream As Stream, Optional ignoreMissingColumns As Boolean = false, Optional inputSchemaDefinition As SchemaDefinition = null, Optional outputSchemaDefinition As SchemaDefinition = null) As BatchPredictionEngine(Of TSrc, TDst)" />
        <MemberSignature Language="F#" Value="static member CreateBatchPredictionEngine : Microsoft.ML.Runtime.IHostEnvironment * System.IO.Stream * bool * Microsoft.ML.Runtime.Api.SchemaDefinition * Microsoft.ML.Runtime.Api.SchemaDefinition -&gt; Microsoft.ML.Runtime.Api.BatchPredictionEngine&lt;'Src, 'Dst (requires 'Src : null and 'Dst : null and 'Dst : (new : unit -&gt; 'Dst))&gt; (requires 'Src : null and 'Dst : null and 'Dst : (new : unit -&gt; 'Dst))" Usage="Microsoft.ML.Runtime.Api.ComponentCreation.CreateBatchPredictionEngine (env, modelStream, ignoreMissingColumns, inputSchemaDefinition, outputSchemaDefinition)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Api.BatchPredictionEngine&lt;TSrc,TDst&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TSrc">
            <Constraints>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
          <TypeParameter Name="TDst">
            <Constraints>
              <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
          <Parameter Name="modelStream" Type="System.IO.Stream" />
          <Parameter Name="ignoreMissingColumns" Type="System.Boolean" />
          <Parameter Name="inputSchemaDefinition" Type="Microsoft.ML.Runtime.Api.SchemaDefinition" />
          <Parameter Name="outputSchemaDefinition" Type="Microsoft.ML.Runtime.Api.SchemaDefinition" />
        </Parameters>
        <Docs>
          <typeparam name="TSrc">To be added.</typeparam>
          <typeparam name="TDst">To be added.</typeparam>
          <param name="env">The host environment to use.</param>
          <param name="modelStream">The stream to deserialize the pipeline (transforms and predictor) from.</param>
          <param name="ignoreMissingColumns">Whether to ignore missing columns in the data view.</param>
          <param name="inputSchemaDefinition">The optional input schema. If <c>null</c>, the schema is inferred from the <typeparamref name="TSrc" /> type.</param>
          <param name="outputSchemaDefinition">The optional output schema. If <c>null</c>, the schema is inferred from the <typeparamref name="TDst" /> type.</param>
          <summary>
            Create a batch prediction engine.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.ComponentCreation" Member="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateBatchPredictionEngine``2(Microsoft.ML.Runtime.IHostEnvironment,System.IO.Stream,System.Boolean,Microsoft.ML.Runtime.Api.SchemaDefinition,Microsoft.ML.Runtime.Api.SchemaDefinition)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHostEnvironment" />
      </Targets>
      <Member MemberName="CreateDataView&lt;TRow&gt;">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataView CreateDataView&lt;TRow&gt; (this Microsoft.ML.Runtime.IHostEnvironment env, System.Collections.Generic.IList&lt;TRow&gt; data, Microsoft.ML.Runtime.Api.SchemaDefinition schemaDefinition = null) where TRow : class;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataView CreateDataView&lt;class TRow&gt;(class Microsoft.ML.Runtime.IHostEnvironment env, class System.Collections.Generic.IList`1&lt;!!TRow&gt; data, class Microsoft.ML.Runtime.Api.SchemaDefinition schemaDefinition) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateDataView``1(Microsoft.ML.Runtime.IHostEnvironment,System.Collections.Generic.IList{``0},Microsoft.ML.Runtime.Api.SchemaDefinition)" />
        <MemberSignature Language="F#" Value="static member CreateDataView : Microsoft.ML.Runtime.IHostEnvironment * System.Collections.Generic.IList&lt;'Row (requires 'Row : null)&gt; * Microsoft.ML.Runtime.Api.SchemaDefinition -&gt; Microsoft.ML.Runtime.Data.IDataView (requires 'Row : null)" Usage="Microsoft.ML.Runtime.Api.ComponentCreation.CreateDataView (env, data, schemaDefinition)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.IDataView</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TRow">
            <Constraints>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
          <Parameter Name="data" Type="System.Collections.Generic.IList&lt;TRow&gt;" />
          <Parameter Name="schemaDefinition" Type="Microsoft.ML.Runtime.Api.SchemaDefinition" />
        </Parameters>
        <Docs>
          <typeparam name="TRow">The user-defined item type.</typeparam>
          <param name="env">The host environment to use for data view creation.</param>
          <param name="data">The data to wrap around.</param>
          <param name="schemaDefinition">The optional schema definition of the data view to create. If <c>null</c>,
            the schema definition is inferred from <typeparamref name="TRow" />.</param>
          <summary>
            Create a new <see cref="T:Microsoft.ML.Runtime.Data.IDataView" /> over an in-memory collection of the items of user-defined type.
            The user maintains ownership of the <paramref name="data" /> and the resulting data view will
            never alter the contents of the <paramref name="data" />.
            Since <see cref="T:Microsoft.ML.Runtime.Data.IDataView" /> is assumed to be immutable, the user is expected to not 
            modify the contents of <paramref name="data" /> while the data view is being actively cursored.
            
            One typical usage for in-memory data view could be: create the data view, train a predictor.
            Once the predictor is fully trained, modify the contents of the underlying collection and 
            train another predictor.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.ComponentCreation" Member="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateDataView``1(Microsoft.ML.Runtime.IHostEnvironment,System.Collections.Generic.IList{``0},Microsoft.ML.Runtime.Api.SchemaDefinition)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHostEnvironment" />
      </Targets>
      <Member MemberName="CreateDefaultScorer">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataScorerTransform CreateDefaultScorer (this Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.RoleMappedData data, Microsoft.ML.Runtime.Api.Predictor predictor, Microsoft.ML.Runtime.Data.RoleMappedSchema trainSchema = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataScorerTransform CreateDefaultScorer(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.RoleMappedData data, class Microsoft.ML.Runtime.Api.Predictor predictor, class Microsoft.ML.Runtime.Data.RoleMappedSchema trainSchema) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateDefaultScorer(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.RoleMappedData,Microsoft.ML.Runtime.Api.Predictor,Microsoft.ML.Runtime.Data.RoleMappedSchema)" />
        <MemberSignature Language="F#" Value="static member CreateDefaultScorer : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.RoleMappedData * Microsoft.ML.Runtime.Api.Predictor * Microsoft.ML.Runtime.Data.RoleMappedSchema -&gt; Microsoft.ML.Runtime.Data.IDataScorerTransform" Usage="Microsoft.ML.Runtime.Api.ComponentCreation.CreateDefaultScorer (env, data, predictor, trainSchema)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.IDataScorerTransform</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
          <Parameter Name="predictor" Type="Microsoft.ML.Runtime.Api.Predictor" />
          <Parameter Name="trainSchema" Type="Microsoft.ML.Runtime.Data.RoleMappedSchema" />
        </Parameters>
        <Docs>
          <param name="env">The host environment to use.</param>
          <param name="data">The data to score.</param>
          <param name="predictor">The predictor to score.</param>
          <param name="trainSchema">The training data schema from which the scorer can optionally extract
            additional information, e.g., label names. If this is <c>null</c>, no information will be
            extracted.</param>
          <summary>
            Creates a default data scorer appropriate to the predictor's prediction kind.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.ComponentCreation" Member="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateDefaultScorer(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.RoleMappedData,Microsoft.ML.Runtime.Api.Predictor,Microsoft.ML.Runtime.Data.RoleMappedSchema)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHostEnvironment" />
      </Targets>
      <Member MemberName="CreateEvaluator">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IEvaluator CreateEvaluator (this Microsoft.ML.Runtime.IHostEnvironment env, string settings);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IEvaluator CreateEvaluator(class Microsoft.ML.Runtime.IHostEnvironment env, string settings) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateEvaluator(Microsoft.ML.Runtime.IHostEnvironment,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateEvaluator (env As IHostEnvironment, settings As String) As IEvaluator" />
        <MemberSignature Language="F#" Value="static member CreateEvaluator : Microsoft.ML.Runtime.IHostEnvironment * string -&gt; Microsoft.ML.Runtime.Data.IEvaluator" Usage="Microsoft.ML.Runtime.Api.ComponentCreation.CreateEvaluator (env, settings)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::IEvaluator ^ CreateEvaluator(Microsoft::ML::Runtime::IHostEnvironment ^ env, System::String ^ settings);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::IEvaluator ^ CreateEvaluator(Microsoft::ML::Runtime::IHostEnvironment ^ env, Platform::String ^ settings);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.IEvaluator</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
          <Parameter Name="settings" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="env">To be added.</param>
          <param name="settings">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.ComponentCreation" Member="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateEvaluator(Microsoft.ML.Runtime.IHostEnvironment,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHostEnvironment" />
      </Targets>
      <Member MemberName="CreateExamples">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.RoleMappedData CreateExamples (this Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.IDataView data, string features, string label = null, string group = null, string weight = null, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,string&gt;&gt; custom = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.RoleMappedData CreateExamples(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.IDataView data, string features, string label, string group, string weight, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;valuetype Microsoft.ML.Runtime.Data.RoleMappedSchema/ColumnRole, string&gt;&gt; custom) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateExamples(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.IDataView,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,System.String}})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateExamples (env As IHostEnvironment, data As IDataView, features As String, Optional label As String = null, Optional group As String = null, Optional weight As String = null, Optional custom As IEnumerable(Of KeyValuePair(Of RoleMappedSchema.ColumnRole, String)) = null) As RoleMappedData" />
        <MemberSignature Language="F#" Value="static member CreateExamples : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.IDataView * string * string * string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole, string&gt;&gt; -&gt; Microsoft.ML.Runtime.Data.RoleMappedData" Usage="Microsoft.ML.Runtime.Api.ComponentCreation.CreateExamples (env, data, features, label, group, weight, custom)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.RoleMappedData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.IDataView" />
          <Parameter Name="features" Type="System.String" />
          <Parameter Name="label" Type="System.String" />
          <Parameter Name="group" Type="System.String" />
          <Parameter Name="weight" Type="System.String" />
          <Parameter Name="custom" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema+ColumnRole,System.String&gt;&gt;" />
        </Parameters>
        <Docs>
          <param name="env">The host environment to use.</param>
          <param name="data">The data to use for training or scoring.</param>
          <param name="features">The name of the features column. Can be null.</param>
          <param name="label">The name of the label column. Can be null.</param>
          <param name="group">The name of the group ID column (for ranking). Can be null.</param>
          <param name="weight">The name of the weight column. Can be null.</param>
          <param name="custom">Additional column mapping to be passed to the trainer or scorer (specific to the prediction type). Can be null or empty.</param>
          <summary>
            Generate training examples for training a predictor or instantiating a scorer.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.ComponentCreation" Member="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateExamples(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.IDataView,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,System.String}})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHostEnvironment" />
      </Targets>
      <Member MemberName="CreateLoader">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataLoader CreateLoader (this Microsoft.ML.Runtime.IHostEnvironment env, string settings, Microsoft.ML.Runtime.Data.IMultiStreamSource files);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataLoader CreateLoader(class Microsoft.ML.Runtime.IHostEnvironment env, string settings, class Microsoft.ML.Runtime.Data.IMultiStreamSource files) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateLoader(Microsoft.ML.Runtime.IHostEnvironment,System.String,Microsoft.ML.Runtime.Data.IMultiStreamSource)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateLoader (env As IHostEnvironment, settings As String, files As IMultiStreamSource) As IDataLoader" />
        <MemberSignature Language="F#" Value="static member CreateLoader : Microsoft.ML.Runtime.IHostEnvironment * string * Microsoft.ML.Runtime.Data.IMultiStreamSource -&gt; Microsoft.ML.Runtime.Data.IDataLoader" Usage="Microsoft.ML.Runtime.Api.ComponentCreation.CreateLoader (env, settings, files)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::IDataLoader ^ CreateLoader(Microsoft::ML::Runtime::IHostEnvironment ^ env, System::String ^ settings, Microsoft::ML::Runtime::Data::IMultiStreamSource ^ files);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::IDataLoader ^ CreateLoader(Microsoft::ML::Runtime::IHostEnvironment ^ env, Platform::String ^ settings, Microsoft::ML::Runtime::Data::IMultiStreamSource ^ files);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.IDataLoader</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
          <Parameter Name="settings" Type="System.String" />
          <Parameter Name="files" Type="Microsoft.ML.Runtime.Data.IMultiStreamSource" />
        </Parameters>
        <Docs>
          <param name="env">To be added.</param>
          <param name="settings">To be added.</param>
          <param name="files">To be added.</param>
          <summary>
            Creates a data loader from the 'LoadName{settings}' string.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.ComponentCreation" Member="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateLoader(Microsoft.ML.Runtime.IHostEnvironment,System.String,Microsoft.ML.Runtime.Data.IMultiStreamSource)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHostEnvironment" />
      </Targets>
      <Member MemberName="CreateLoader&lt;TArgs&gt;">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataLoader CreateLoader&lt;TArgs&gt; (this Microsoft.ML.Runtime.IHostEnvironment env, TArgs arguments, Microsoft.ML.Runtime.Data.IMultiStreamSource files) where TArgs : class, new();" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataLoader CreateLoader&lt;class .ctor TArgs&gt;(class Microsoft.ML.Runtime.IHostEnvironment env, !!TArgs arguments, class Microsoft.ML.Runtime.Data.IMultiStreamSource files) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateLoader``1(Microsoft.ML.Runtime.IHostEnvironment,``0,Microsoft.ML.Runtime.Data.IMultiStreamSource)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateLoader(Of TArgs As {Class, New}) (env As IHostEnvironment, arguments As TArgs, files As IMultiStreamSource) As IDataLoader" />
        <MemberSignature Language="F#" Value="static member CreateLoader : Microsoft.ML.Runtime.IHostEnvironment * 'Args * Microsoft.ML.Runtime.Data.IMultiStreamSource -&gt; Microsoft.ML.Runtime.Data.IDataLoader (requires 'Args : null and 'Args : (new : unit -&gt; 'Args))" Usage="Microsoft.ML.Runtime.Api.ComponentCreation.CreateLoader (env, arguments, files)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArgs&gt;&#xA; where TArgs : class, gcnew()[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::IDataLoader ^ CreateLoader(Microsoft::ML::Runtime::IHostEnvironment ^ env, TArgs arguments, Microsoft::ML::Runtime::Data::IMultiStreamSource ^ files);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename TArgs&gt;&#xA; where TArgs : class, gcnew()[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::IDataLoader ^ CreateLoader(Microsoft::ML::Runtime::IHostEnvironment ^ env, TArgs arguments, Microsoft::ML::Runtime::Data::IMultiStreamSource ^ files);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.IDataLoader</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TArgs">
            <Constraints>
              <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
          <Parameter Name="arguments" Type="TArgs" />
          <Parameter Name="files" Type="Microsoft.ML.Runtime.Data.IMultiStreamSource" />
        </Parameters>
        <Docs>
          <typeparam name="TArgs">To be added.</typeparam>
          <param name="env">To be added.</param>
          <param name="arguments">To be added.</param>
          <param name="files">To be added.</param>
          <summary>
            Creates a data loader from the arguments object.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.ComponentCreation" Member="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateLoader``1(Microsoft.ML.Runtime.IHostEnvironment,``0,Microsoft.ML.Runtime.Data.IMultiStreamSource)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHostEnvironment" />
      </Targets>
      <Member MemberName="CreatePredictionEngine&lt;TSrc,TDst&gt;">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Api.PredictionEngine&lt;TSrc,TDst&gt; CreatePredictionEngine&lt;TSrc,TDst&gt; (this Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.IDataView dataPipe, bool ignoreMissingColumns = false, Microsoft.ML.Runtime.Api.SchemaDefinition inputSchemaDefinition = null, Microsoft.ML.Runtime.Api.SchemaDefinition outputSchemaDefinition = null) where TSrc : class where TDst : class, new();" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Api.PredictionEngine`2&lt;!!TSrc, !!TDst&gt; CreatePredictionEngine&lt;class TSrc, class .ctor TDst&gt;(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.IDataView dataPipe, bool ignoreMissingColumns, class Microsoft.ML.Runtime.Api.SchemaDefinition inputSchemaDefinition, class Microsoft.ML.Runtime.Api.SchemaDefinition outputSchemaDefinition) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreatePredictionEngine``2(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.IDataView,System.Boolean,Microsoft.ML.Runtime.Api.SchemaDefinition,Microsoft.ML.Runtime.Api.SchemaDefinition)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreatePredictionEngine(Of TSrc As Class, TDst As Class) (env As IHostEnvironment, dataPipe As IDataView, Optional ignoreMissingColumns As Boolean = false, Optional inputSchemaDefinition As SchemaDefinition = null, Optional outputSchemaDefinition As SchemaDefinition = null) As PredictionEngine(Of TSrc, TDst)" />
        <MemberSignature Language="F#" Value="static member CreatePredictionEngine : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.IDataView * bool * Microsoft.ML.Runtime.Api.SchemaDefinition * Microsoft.ML.Runtime.Api.SchemaDefinition -&gt; Microsoft.ML.Runtime.Api.PredictionEngine&lt;'Src, 'Dst (requires 'Src : null and 'Dst : null and 'Dst : (new : unit -&gt; 'Dst))&gt; (requires 'Src : null and 'Dst : null and 'Dst : (new : unit -&gt; 'Dst))" Usage="Microsoft.ML.Runtime.Api.ComponentCreation.CreatePredictionEngine (env, dataPipe, ignoreMissingColumns, inputSchemaDefinition, outputSchemaDefinition)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Api.PredictionEngine&lt;TSrc,TDst&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TSrc">
            <Constraints>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
          <TypeParameter Name="TDst">
            <Constraints>
              <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
          <Parameter Name="dataPipe" Type="Microsoft.ML.Runtime.Data.IDataView" />
          <Parameter Name="ignoreMissingColumns" Type="System.Boolean" />
          <Parameter Name="inputSchemaDefinition" Type="Microsoft.ML.Runtime.Api.SchemaDefinition" />
          <Parameter Name="outputSchemaDefinition" Type="Microsoft.ML.Runtime.Api.SchemaDefinition" />
        </Parameters>
        <Docs>
          <typeparam name="TSrc">To be added.</typeparam>
          <typeparam name="TDst">To be added.</typeparam>
          <param name="env">The host environment to use.</param>
          <param name="dataPipe">The transformation pipe that may or may not include a scorer.</param>
          <param name="ignoreMissingColumns">Whether to ignore missing columns in the data view.</param>
          <param name="inputSchemaDefinition">The optional input schema. If <c>null</c>, the schema is inferred from the <typeparamref name="TSrc" /> type.</param>
          <param name="outputSchemaDefinition">The optional output schema. If <c>null</c>, the schema is inferred from the <typeparamref name="TDst" /> type.</param>
          <summary>
            Create an on-demand prediction engine.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.ComponentCreation" Member="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreatePredictionEngine``2(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.IDataView,System.Boolean,Microsoft.ML.Runtime.Api.SchemaDefinition,Microsoft.ML.Runtime.Api.SchemaDefinition)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHostEnvironment" />
      </Targets>
      <Member MemberName="CreatePredictionEngine&lt;TSrc,TDst&gt;">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Api.PredictionEngine&lt;TSrc,TDst&gt; CreatePredictionEngine&lt;TSrc,TDst&gt; (this Microsoft.ML.Runtime.IHostEnvironment env, System.IO.Stream modelStream, bool ignoreMissingColumns = false, Microsoft.ML.Runtime.Api.SchemaDefinition inputSchemaDefinition = null, Microsoft.ML.Runtime.Api.SchemaDefinition outputSchemaDefinition = null) where TSrc : class where TDst : class, new();" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Api.PredictionEngine`2&lt;!!TSrc, !!TDst&gt; CreatePredictionEngine&lt;class TSrc, class .ctor TDst&gt;(class Microsoft.ML.Runtime.IHostEnvironment env, class System.IO.Stream modelStream, bool ignoreMissingColumns, class Microsoft.ML.Runtime.Api.SchemaDefinition inputSchemaDefinition, class Microsoft.ML.Runtime.Api.SchemaDefinition outputSchemaDefinition) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreatePredictionEngine``2(Microsoft.ML.Runtime.IHostEnvironment,System.IO.Stream,System.Boolean,Microsoft.ML.Runtime.Api.SchemaDefinition,Microsoft.ML.Runtime.Api.SchemaDefinition)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreatePredictionEngine(Of TSrc As Class, TDst As Class) (env As IHostEnvironment, modelStream As Stream, Optional ignoreMissingColumns As Boolean = false, Optional inputSchemaDefinition As SchemaDefinition = null, Optional outputSchemaDefinition As SchemaDefinition = null) As PredictionEngine(Of TSrc, TDst)" />
        <MemberSignature Language="F#" Value="static member CreatePredictionEngine : Microsoft.ML.Runtime.IHostEnvironment * System.IO.Stream * bool * Microsoft.ML.Runtime.Api.SchemaDefinition * Microsoft.ML.Runtime.Api.SchemaDefinition -&gt; Microsoft.ML.Runtime.Api.PredictionEngine&lt;'Src, 'Dst (requires 'Src : null and 'Dst : null and 'Dst : (new : unit -&gt; 'Dst))&gt; (requires 'Src : null and 'Dst : null and 'Dst : (new : unit -&gt; 'Dst))" Usage="Microsoft.ML.Runtime.Api.ComponentCreation.CreatePredictionEngine (env, modelStream, ignoreMissingColumns, inputSchemaDefinition, outputSchemaDefinition)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Api.PredictionEngine&lt;TSrc,TDst&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TSrc">
            <Constraints>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
          <TypeParameter Name="TDst">
            <Constraints>
              <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
          <Parameter Name="modelStream" Type="System.IO.Stream" />
          <Parameter Name="ignoreMissingColumns" Type="System.Boolean" />
          <Parameter Name="inputSchemaDefinition" Type="Microsoft.ML.Runtime.Api.SchemaDefinition" />
          <Parameter Name="outputSchemaDefinition" Type="Microsoft.ML.Runtime.Api.SchemaDefinition" />
        </Parameters>
        <Docs>
          <typeparam name="TSrc">To be added.</typeparam>
          <typeparam name="TDst">To be added.</typeparam>
          <param name="env">The host environment to use.</param>
          <param name="modelStream">The stream to deserialize the pipeline (transforms and predictor) from.</param>
          <param name="ignoreMissingColumns">Whether to ignore missing columns in the data view.</param>
          <param name="inputSchemaDefinition">The optional input schema. If <c>null</c>, the schema is inferred from the <typeparamref name="TSrc" /> type.</param>
          <param name="outputSchemaDefinition">The optional output schema. If <c>null</c>, the schema is inferred from the <typeparamref name="TDst" /> type.</param>
          <summary>
            Create an on-demand prediction engine.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.ComponentCreation" Member="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreatePredictionEngine``2(Microsoft.ML.Runtime.IHostEnvironment,System.IO.Stream,System.Boolean,Microsoft.ML.Runtime.Api.SchemaDefinition,Microsoft.ML.Runtime.Api.SchemaDefinition)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHostEnvironment" />
      </Targets>
      <Member MemberName="CreateSaver">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataSaver CreateSaver (this Microsoft.ML.Runtime.IHostEnvironment env, string settings);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataSaver CreateSaver(class Microsoft.ML.Runtime.IHostEnvironment env, string settings) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateSaver(Microsoft.ML.Runtime.IHostEnvironment,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateSaver (env As IHostEnvironment, settings As String) As IDataSaver" />
        <MemberSignature Language="F#" Value="static member CreateSaver : Microsoft.ML.Runtime.IHostEnvironment * string -&gt; Microsoft.ML.Runtime.Data.IDataSaver" Usage="Microsoft.ML.Runtime.Api.ComponentCreation.CreateSaver (env, settings)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::IDataSaver ^ CreateSaver(Microsoft::ML::Runtime::IHostEnvironment ^ env, System::String ^ settings);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::IDataSaver ^ CreateSaver(Microsoft::ML::Runtime::IHostEnvironment ^ env, Platform::String ^ settings);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.IDataSaver</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
          <Parameter Name="settings" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="env">To be added.</param>
          <param name="settings">To be added.</param>
          <summary>
            Creates a data saver from the 'LoadName{settings}' string.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.ComponentCreation" Member="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateSaver(Microsoft.ML.Runtime.IHostEnvironment,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHostEnvironment" />
      </Targets>
      <Member MemberName="CreateSaver&lt;TArgs&gt;">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataSaver CreateSaver&lt;TArgs&gt; (this Microsoft.ML.Runtime.IHostEnvironment env, TArgs arguments) where TArgs : class, new();" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataSaver CreateSaver&lt;class .ctor TArgs&gt;(class Microsoft.ML.Runtime.IHostEnvironment env, !!TArgs arguments) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateSaver``1(Microsoft.ML.Runtime.IHostEnvironment,``0)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateSaver(Of TArgs As {Class, New}) (env As IHostEnvironment, arguments As TArgs) As IDataSaver" />
        <MemberSignature Language="F#" Value="static member CreateSaver : Microsoft.ML.Runtime.IHostEnvironment * 'Args -&gt; Microsoft.ML.Runtime.Data.IDataSaver (requires 'Args : null and 'Args : (new : unit -&gt; 'Args))" Usage="Microsoft.ML.Runtime.Api.ComponentCreation.CreateSaver (env, arguments)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArgs&gt;&#xA; where TArgs : class, gcnew()[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::IDataSaver ^ CreateSaver(Microsoft::ML::Runtime::IHostEnvironment ^ env, TArgs arguments);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename TArgs&gt;&#xA; where TArgs : class, gcnew()[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::IDataSaver ^ CreateSaver(Microsoft::ML::Runtime::IHostEnvironment ^ env, TArgs arguments);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.IDataSaver</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TArgs">
            <Constraints>
              <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
          <Parameter Name="arguments" Type="TArgs" />
        </Parameters>
        <Docs>
          <typeparam name="TArgs">To be added.</typeparam>
          <param name="env">To be added.</param>
          <param name="arguments">To be added.</param>
          <summary>
            Creates a data saver from the arguments object.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.ComponentCreation" Member="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateSaver``1(Microsoft.ML.Runtime.IHostEnvironment,``0)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHostEnvironment" />
      </Targets>
      <Member MemberName="CreateScorer">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataScorerTransform CreateScorer (this Microsoft.ML.Runtime.IHostEnvironment env, string settings, Microsoft.ML.Runtime.Data.RoleMappedData data, Microsoft.ML.Runtime.Api.Predictor predictor, Microsoft.ML.Runtime.Data.RoleMappedSchema trainSchema = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataScorerTransform CreateScorer(class Microsoft.ML.Runtime.IHostEnvironment env, string settings, class Microsoft.ML.Runtime.Data.RoleMappedData data, class Microsoft.ML.Runtime.Api.Predictor predictor, class Microsoft.ML.Runtime.Data.RoleMappedSchema trainSchema) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateScorer(Microsoft.ML.Runtime.IHostEnvironment,System.String,Microsoft.ML.Runtime.Data.RoleMappedData,Microsoft.ML.Runtime.Api.Predictor,Microsoft.ML.Runtime.Data.RoleMappedSchema)" />
        <MemberSignature Language="F#" Value="static member CreateScorer : Microsoft.ML.Runtime.IHostEnvironment * string * Microsoft.ML.Runtime.Data.RoleMappedData * Microsoft.ML.Runtime.Api.Predictor * Microsoft.ML.Runtime.Data.RoleMappedSchema -&gt; Microsoft.ML.Runtime.Data.IDataScorerTransform" Usage="Microsoft.ML.Runtime.Api.ComponentCreation.CreateScorer (env, settings, data, predictor, trainSchema)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.IDataScorerTransform</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
          <Parameter Name="settings" Type="System.String" />
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
          <Parameter Name="predictor" Type="Microsoft.ML.Runtime.Api.Predictor" />
          <Parameter Name="trainSchema" Type="Microsoft.ML.Runtime.Data.RoleMappedSchema" />
        </Parameters>
        <Docs>
          <param name="env">The host environment to use.</param>
          <param name="settings">The settings string.</param>
          <param name="data">The data to score.</param>
          <param name="predictor">The predictor to score.</param>
          <param name="trainSchema">The training data schema from which the scorer can optionally extract
            additional information, e.g., label names. If this is <c>null</c>, no information will be
            extracted.</param>
          <summary>
            Creates a data scorer from the 'LoadName{settings}' string.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.ComponentCreation" Member="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateScorer(Microsoft.ML.Runtime.IHostEnvironment,System.String,Microsoft.ML.Runtime.Data.RoleMappedData,Microsoft.ML.Runtime.Api.Predictor,Microsoft.ML.Runtime.Data.RoleMappedSchema)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHostEnvironment" />
      </Targets>
      <Member MemberName="CreateSimplePredictionEngine">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Api.SimplePredictionEngine CreateSimplePredictionEngine (this Microsoft.ML.Runtime.IHostEnvironment env, System.IO.Stream modelStream, int nFeatures);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Api.SimplePredictionEngine CreateSimplePredictionEngine(class Microsoft.ML.Runtime.IHostEnvironment env, class System.IO.Stream modelStream, int32 nFeatures) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateSimplePredictionEngine(Microsoft.ML.Runtime.IHostEnvironment,System.IO.Stream,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateSimplePredictionEngine (env As IHostEnvironment, modelStream As Stream, nFeatures As Integer) As SimplePredictionEngine" />
        <MemberSignature Language="F#" Value="static member CreateSimplePredictionEngine : Microsoft.ML.Runtime.IHostEnvironment * System.IO.Stream * int -&gt; Microsoft.ML.Runtime.Api.SimplePredictionEngine" Usage="Microsoft.ML.Runtime.Api.ComponentCreation.CreateSimplePredictionEngine (env, modelStream, nFeatures)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Api::SimplePredictionEngine ^ CreateSimplePredictionEngine(Microsoft::ML::Runtime::IHostEnvironment ^ env, System::IO::Stream ^ modelStream, int nFeatures);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Api.SimplePredictionEngine</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
          <Parameter Name="modelStream" Type="System.IO.Stream" />
          <Parameter Name="nFeatures" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="env">The host environment to use.</param>
          <param name="modelStream">The model stream to load pipeline from.</param>
          <param name="nFeatures">Number of features.</param>
          <summary>
            Create a prediction engine.
            This encapsulates the 'classic' prediction problem, where the input is denoted by the float array of features,
            and the output is a float score. For binary classification predictors that can output probability, there are output 
            fields that report the predicted label and probability.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.ComponentCreation" Member="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateSimplePredictionEngine(Microsoft.ML.Runtime.IHostEnvironment,System.IO.Stream,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHostEnvironment" />
      </Targets>
      <Member MemberName="CreateStreamingDataView&lt;TRow&gt;">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataView CreateStreamingDataView&lt;TRow&gt; (this Microsoft.ML.Runtime.IHostEnvironment env, System.Collections.Generic.IEnumerable&lt;TRow&gt; data, Microsoft.ML.Runtime.Api.SchemaDefinition schemaDefinition = null) where TRow : class;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataView CreateStreamingDataView&lt;class TRow&gt;(class Microsoft.ML.Runtime.IHostEnvironment env, class System.Collections.Generic.IEnumerable`1&lt;!!TRow&gt; data, class Microsoft.ML.Runtime.Api.SchemaDefinition schemaDefinition) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateStreamingDataView``1(Microsoft.ML.Runtime.IHostEnvironment,System.Collections.Generic.IEnumerable{``0},Microsoft.ML.Runtime.Api.SchemaDefinition)" />
        <MemberSignature Language="F#" Value="static member CreateStreamingDataView : Microsoft.ML.Runtime.IHostEnvironment * seq&lt;'Row (requires 'Row : null)&gt; * Microsoft.ML.Runtime.Api.SchemaDefinition -&gt; Microsoft.ML.Runtime.Data.IDataView (requires 'Row : null)" Usage="Microsoft.ML.Runtime.Api.ComponentCreation.CreateStreamingDataView (env, data, schemaDefinition)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.IDataView</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TRow">
            <Constraints>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
          <Parameter Name="data" Type="System.Collections.Generic.IEnumerable&lt;TRow&gt;" />
          <Parameter Name="schemaDefinition" Type="Microsoft.ML.Runtime.Api.SchemaDefinition" />
        </Parameters>
        <Docs>
          <typeparam name="TRow">The user-defined item type.</typeparam>
          <param name="env">The host environment to use for data view creation.</param>
          <param name="data">The data to wrap around.</param>
          <param name="schemaDefinition">The optional schema definition of the data view to create. If <c>null</c>,
            the schema definition is inferred from <typeparamref name="TRow" />.</param>
          <summary>
            Create a new <see cref="T:Microsoft.ML.Runtime.Data.IDataView" /> over an enumerable of the items of user-defined type.
            The user maintains ownership of the <paramref name="data" /> and the resulting data view will
            never alter the contents of the <paramref name="data" />.
            Since <see cref="T:Microsoft.ML.Runtime.Data.IDataView" /> is assumed to be immutable, the user is expected to support
            multiple enumeration of the <paramref name="data" /> that would return the same results, unless
            the user knows that the data will only be cursored once.
            
            One typical usage for streaming data view could be: create the data view that lazily loads data
            as needed, then apply pre-trained transformations to it and cursor through it for transformation 
            results. This is how <see cref="T:Microsoft.ML.Runtime.Api.BatchPredictionEngine`2" /> is implemented.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.ComponentCreation" Member="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateStreamingDataView``1(Microsoft.ML.Runtime.IHostEnvironment,System.Collections.Generic.IEnumerable{``0},Microsoft.ML.Runtime.Api.SchemaDefinition)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHostEnvironment" />
      </Targets>
      <Member MemberName="CreateTransform">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataTransform CreateTransform (this Microsoft.ML.Runtime.IHostEnvironment env, string settings, Microsoft.ML.Runtime.Data.IDataView source);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataTransform CreateTransform(class Microsoft.ML.Runtime.IHostEnvironment env, string settings, class Microsoft.ML.Runtime.Data.IDataView source) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateTransform(Microsoft.ML.Runtime.IHostEnvironment,System.String,Microsoft.ML.Runtime.Data.IDataView)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateTransform (env As IHostEnvironment, settings As String, source As IDataView) As IDataTransform" />
        <MemberSignature Language="F#" Value="static member CreateTransform : Microsoft.ML.Runtime.IHostEnvironment * string * Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.Data.IDataTransform" Usage="Microsoft.ML.Runtime.Api.ComponentCreation.CreateTransform (env, settings, source)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::IDataTransform ^ CreateTransform(Microsoft::ML::Runtime::IHostEnvironment ^ env, System::String ^ settings, Microsoft::ML::Runtime::Data::IDataView ^ source);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::IDataTransform ^ CreateTransform(Microsoft::ML::Runtime::IHostEnvironment ^ env, Platform::String ^ settings, Microsoft::ML::Runtime::Data::IDataView ^ source);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.IDataTransform</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
          <Parameter Name="settings" Type="System.String" />
          <Parameter Name="source" Type="Microsoft.ML.Runtime.Data.IDataView" />
        </Parameters>
        <Docs>
          <param name="env">To be added.</param>
          <param name="settings">To be added.</param>
          <param name="source">To be added.</param>
          <summary>
            Creates a data transform from the 'LoadName{settings}' string.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.ComponentCreation" Member="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateTransform(Microsoft.ML.Runtime.IHostEnvironment,System.String,Microsoft.ML.Runtime.Data.IDataView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHostEnvironment" />
      </Targets>
      <Member MemberName="CreateTransform&lt;TArgs&gt;">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataTransform CreateTransform&lt;TArgs&gt; (this Microsoft.ML.Runtime.IHostEnvironment env, TArgs arguments, Microsoft.ML.Runtime.Data.IDataView source) where TArgs : class, new();" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataTransform CreateTransform&lt;class .ctor TArgs&gt;(class Microsoft.ML.Runtime.IHostEnvironment env, !!TArgs arguments, class Microsoft.ML.Runtime.Data.IDataView source) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateTransform``1(Microsoft.ML.Runtime.IHostEnvironment,``0,Microsoft.ML.Runtime.Data.IDataView)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateTransform(Of TArgs As {Class, New}) (env As IHostEnvironment, arguments As TArgs, source As IDataView) As IDataTransform" />
        <MemberSignature Language="F#" Value="static member CreateTransform : Microsoft.ML.Runtime.IHostEnvironment * 'Args * Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.Data.IDataTransform (requires 'Args : null and 'Args : (new : unit -&gt; 'Args))" Usage="Microsoft.ML.Runtime.Api.ComponentCreation.CreateTransform (env, arguments, source)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArgs&gt;&#xA; where TArgs : class, gcnew()[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::IDataTransform ^ CreateTransform(Microsoft::ML::Runtime::IHostEnvironment ^ env, TArgs arguments, Microsoft::ML::Runtime::Data::IDataView ^ source);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename TArgs&gt;&#xA; where TArgs : class, gcnew()[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::IDataTransform ^ CreateTransform(Microsoft::ML::Runtime::IHostEnvironment ^ env, TArgs arguments, Microsoft::ML::Runtime::Data::IDataView ^ source);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.IDataTransform</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TArgs">
            <Constraints>
              <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
          <Parameter Name="arguments" Type="TArgs" />
          <Parameter Name="source" Type="Microsoft.ML.Runtime.Data.IDataView" />
        </Parameters>
        <Docs>
          <typeparam name="TArgs">To be added.</typeparam>
          <param name="env">To be added.</param>
          <param name="arguments">To be added.</param>
          <param name="source">To be added.</param>
          <summary>
            Creates a data transform from the arguments object.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.ComponentCreation" Member="M:Microsoft.ML.Runtime.Api.ComponentCreation.CreateTransform``1(Microsoft.ML.Runtime.IHostEnvironment,``0,Microsoft.ML.Runtime.Data.IDataView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHostEnvironment" />
      </Targets>
      <Member MemberName="LoadPredictorOrNull">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Api.Predictor LoadPredictorOrNull (this Microsoft.ML.Runtime.IHostEnvironment env, System.IO.Stream modelStream);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Api.Predictor LoadPredictorOrNull(class Microsoft.ML.Runtime.IHostEnvironment env, class System.IO.Stream modelStream) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.ComponentCreation.LoadPredictorOrNull(Microsoft.ML.Runtime.IHostEnvironment,System.IO.Stream)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LoadPredictorOrNull (env As IHostEnvironment, modelStream As Stream) As Predictor" />
        <MemberSignature Language="F#" Value="static member LoadPredictorOrNull : Microsoft.ML.Runtime.IHostEnvironment * System.IO.Stream -&gt; Microsoft.ML.Runtime.Api.Predictor" Usage="Microsoft.ML.Runtime.Api.ComponentCreation.LoadPredictorOrNull (env, modelStream)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Api::Predictor ^ LoadPredictorOrNull(Microsoft::ML::Runtime::IHostEnvironment ^ env, System::IO::Stream ^ modelStream);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Api.Predictor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
          <Parameter Name="modelStream" Type="System.IO.Stream" />
        </Parameters>
        <Docs>
          <param name="env">The host environment to use.</param>
          <param name="modelStream">The model stream.</param>
          <summary>
            Loads a predictor from the model stream. Returns null iff there's no predictor.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.ComponentCreation" Member="M:Microsoft.ML.Runtime.Api.ComponentCreation.LoadPredictorOrNull(Microsoft.ML.Runtime.IHostEnvironment,System.IO.Stream)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHostEnvironment" />
      </Targets>
      <Member MemberName="LoadTransforms">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataView LoadTransforms (this Microsoft.ML.Runtime.IHostEnvironment env, System.IO.Stream modelStream, Microsoft.ML.Runtime.Data.IDataView data);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataView LoadTransforms(class Microsoft.ML.Runtime.IHostEnvironment env, class System.IO.Stream modelStream, class Microsoft.ML.Runtime.Data.IDataView data) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.ComponentCreation.LoadTransforms(Microsoft.ML.Runtime.IHostEnvironment,System.IO.Stream,Microsoft.ML.Runtime.Data.IDataView)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LoadTransforms (env As IHostEnvironment, modelStream As Stream, data As IDataView) As IDataView" />
        <MemberSignature Language="F#" Value="static member LoadTransforms : Microsoft.ML.Runtime.IHostEnvironment * System.IO.Stream * Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.Data.IDataView" Usage="Microsoft.ML.Runtime.Api.ComponentCreation.LoadTransforms (env, modelStream, data)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::IDataView ^ LoadTransforms(Microsoft::ML::Runtime::IHostEnvironment ^ env, System::IO::Stream ^ modelStream, Microsoft::ML::Runtime::Data::IDataView ^ data);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.IDataView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
          <Parameter Name="modelStream" Type="System.IO.Stream" />
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.IDataView" />
        </Parameters>
        <Docs>
          <param name="env">The host environment to use.</param>
          <param name="modelStream">The model stream to load from.</param>
          <param name="data">The data to apply transforms to.</param>
          <summary>
            Load the transforms (but not loader) from the model steram and apply them to the specified data.
            It is acceptable to have no transforms in the model stream: in this case the original 
            <paramref name="data" /> will be returned.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.ComponentCreation" Member="M:Microsoft.ML.Runtime.Api.ComponentCreation.LoadTransforms(Microsoft.ML.Runtime.IHostEnvironment,System.IO.Stream,Microsoft.ML.Runtime.Data.IDataView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHostEnvironment" />
      </Targets>
      <Member MemberName="Zip">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataView Zip (this Microsoft.ML.Runtime.IHostEnvironment env, System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.Data.IDataView&gt; sources);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataView Zip(class Microsoft.ML.Runtime.IHostEnvironment env, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; sources) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.ComponentCreation.Zip(Microsoft.ML.Runtime.IHostEnvironment,System.Collections.Generic.IEnumerable{Microsoft.ML.Runtime.Data.IDataView})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Zip (env As IHostEnvironment, sources As IEnumerable(Of IDataView)) As IDataView" />
        <MemberSignature Language="F#" Value="static member Zip : Microsoft.ML.Runtime.IHostEnvironment * seq&lt;Microsoft.ML.Runtime.Data.IDataView&gt; -&gt; Microsoft.ML.Runtime.Data.IDataView" Usage="Microsoft.ML.Runtime.Api.ComponentCreation.Zip (env, sources)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::IDataView ^ Zip(Microsoft::ML::Runtime::IHostEnvironment ^ env, System::Collections::Generic::IEnumerable&lt;Microsoft::ML::Runtime::Data::IDataView ^&gt; ^ sources);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.IDataView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
          <Parameter Name="sources" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.Data.IDataView&gt;" />
        </Parameters>
        <Docs>
          <param name="env">The host environment to use.</param>
          <param name="sources">A non-empty collection of data views to zip together.</param>
          <summary>
            Create a new data view which is obtained by appending all columns of all the source data views.
            If the data views are of different length, the resulting data view will have the length equal to the 
            length of the shortest source.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.ComponentCreation" Member="M:Microsoft.ML.Runtime.Api.ComponentCreation.Zip(Microsoft.ML.Runtime.IHostEnvironment,System.Collections.Generic.IEnumerable{Microsoft.ML.Runtime.Data.IDataView})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.IDataView" />
      </Targets>
      <Member MemberName="AsCursorable&lt;TRow&gt;">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Api.ICursorable&lt;TRow&gt; AsCursorable&lt;TRow&gt; (this Microsoft.ML.Runtime.Data.IDataView data, Microsoft.ML.Runtime.IHostEnvironment env, bool ignoreMissingColumns = false, Microsoft.ML.Runtime.Api.SchemaDefinition schemaDefinition = null) where TRow : class, new();" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Api.ICursorable`1&lt;!!TRow&gt; AsCursorable&lt;class .ctor TRow&gt;(class Microsoft.ML.Runtime.Data.IDataView data, class Microsoft.ML.Runtime.IHostEnvironment env, bool ignoreMissingColumns, class Microsoft.ML.Runtime.Api.SchemaDefinition schemaDefinition) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.CursoringUtils.AsCursorable``1(Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.IHostEnvironment,System.Boolean,Microsoft.ML.Runtime.Api.SchemaDefinition)" />
        <MemberSignature Language="F#" Value="static member AsCursorable : Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.IHostEnvironment * bool * Microsoft.ML.Runtime.Api.SchemaDefinition -&gt; Microsoft.ML.Runtime.Api.ICursorable&lt;'Row (requires 'Row : null and 'Row : (new : unit -&gt; 'Row))&gt; (requires 'Row : null and 'Row : (new : unit -&gt; 'Row))" Usage="Microsoft.ML.Runtime.Api.CursoringUtils.AsCursorable (data, env, ignoreMissingColumns, schemaDefinition)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Api.ICursorable&lt;TRow&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TRow">
            <Constraints>
              <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.IDataView" RefType="this" />
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
          <Parameter Name="ignoreMissingColumns" Type="System.Boolean" />
          <Parameter Name="schemaDefinition" Type="Microsoft.ML.Runtime.Api.SchemaDefinition" />
        </Parameters>
        <Docs>
          <typeparam name="TRow">The user-defined row type.</typeparam>
          <param name="data">The underlying data view.</param>
          <param name="env">The environment.</param>
          <param name="ignoreMissingColumns">Whether to ignore the case when a requested column is not present in the data view.</param>
          <param name="schemaDefinition">Optional user-provided schema definition. If it is not present, the schema is inferred from the definition of T.</param>
          <summary>
            Generate a strongly-typed cursorable wrapper of the <see cref="T:Microsoft.ML.Runtime.Data.IDataView" />.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.CursoringUtils" Member="M:Microsoft.ML.Runtime.Api.CursoringUtils.AsCursorable``1(Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.IHostEnvironment,System.Boolean,Microsoft.ML.Runtime.Api.SchemaDefinition)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.IDataView" />
      </Targets>
      <Member MemberName="AsCursorable&lt;TRow&gt;">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Api.ICursorable&lt;TRow&gt; AsCursorable&lt;TRow&gt; (this Microsoft.ML.Runtime.Data.IDataView data, bool ignoreMissingColumns = false, Microsoft.ML.Runtime.Api.SchemaDefinition schemaDefinition = null) where TRow : class, new();" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Api.ICursorable`1&lt;!!TRow&gt; AsCursorable&lt;class .ctor TRow&gt;(class Microsoft.ML.Runtime.Data.IDataView data, bool ignoreMissingColumns, class Microsoft.ML.Runtime.Api.SchemaDefinition schemaDefinition) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.CursoringUtils.AsCursorable``1(Microsoft.ML.Runtime.Data.IDataView,System.Boolean,Microsoft.ML.Runtime.Api.SchemaDefinition)" />
        <MemberSignature Language="F#" Value="static member AsCursorable : Microsoft.ML.Runtime.Data.IDataView * bool * Microsoft.ML.Runtime.Api.SchemaDefinition -&gt; Microsoft.ML.Runtime.Api.ICursorable&lt;'Row (requires 'Row : null and 'Row : (new : unit -&gt; 'Row))&gt; (requires 'Row : null and 'Row : (new : unit -&gt; 'Row))" Usage="Microsoft.ML.Runtime.Api.CursoringUtils.AsCursorable (data, ignoreMissingColumns, schemaDefinition)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Api.ICursorable&lt;TRow&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TRow">
            <Constraints>
              <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.IDataView" RefType="this" />
          <Parameter Name="ignoreMissingColumns" Type="System.Boolean" />
          <Parameter Name="schemaDefinition" Type="Microsoft.ML.Runtime.Api.SchemaDefinition" />
        </Parameters>
        <Docs>
          <typeparam name="TRow">The user-defined row type.</typeparam>
          <param name="data">The underlying data view.</param>
          <param name="ignoreMissingColumns">Whether to ignore the case when a requested column is not present in the data view.</param>
          <param name="schemaDefinition">Optional user-provided schema definition. If it is not present, the schema is inferred from the definition of T.</param>
          <summary>
            Generate a strongly-typed cursorable wrapper of the <see cref="T:Microsoft.ML.Runtime.Data.IDataView" />.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.CursoringUtils" Member="M:Microsoft.ML.Runtime.Api.CursoringUtils.AsCursorable``1(Microsoft.ML.Runtime.Data.IDataView,System.Boolean,Microsoft.ML.Runtime.Api.SchemaDefinition)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.IDataView" />
      </Targets>
      <Member MemberName="AsEnumerable&lt;TRow&gt;">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TRow&gt; AsEnumerable&lt;TRow&gt; (this Microsoft.ML.Runtime.Data.IDataView data, Microsoft.ML.Runtime.IHostEnvironment env, bool reuseRowObject, bool ignoreMissingColumns = false, Microsoft.ML.Runtime.Api.SchemaDefinition schemaDefinition = null) where TRow : class, new();" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TRow&gt; AsEnumerable&lt;class .ctor TRow&gt;(class Microsoft.ML.Runtime.Data.IDataView data, class Microsoft.ML.Runtime.IHostEnvironment env, bool reuseRowObject, bool ignoreMissingColumns, class Microsoft.ML.Runtime.Api.SchemaDefinition schemaDefinition) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.CursoringUtils.AsEnumerable``1(Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.IHostEnvironment,System.Boolean,System.Boolean,Microsoft.ML.Runtime.Api.SchemaDefinition)" />
        <MemberSignature Language="F#" Value="static member AsEnumerable : Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.IHostEnvironment * bool * bool * Microsoft.ML.Runtime.Api.SchemaDefinition -&gt; seq&lt;'Row (requires 'Row : null and 'Row : (new : unit -&gt; 'Row))&gt; (requires 'Row : null and 'Row : (new : unit -&gt; 'Row))" Usage="Microsoft.ML.Runtime.Api.CursoringUtils.AsEnumerable (data, env, reuseRowObject, ignoreMissingColumns, schemaDefinition)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;TRow&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TRow">
            <Constraints>
              <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.IDataView" RefType="this" />
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
          <Parameter Name="reuseRowObject" Type="System.Boolean" />
          <Parameter Name="ignoreMissingColumns" Type="System.Boolean" />
          <Parameter Name="schemaDefinition" Type="Microsoft.ML.Runtime.Api.SchemaDefinition" />
        </Parameters>
        <Docs>
          <typeparam name="TRow">The user-defined row type.</typeparam>
          <param name="data">The underlying data view.</param>
          <param name="env">The environment.</param>
          <param name="reuseRowObject">Whether to return the same object on every row, or allocate a new one per row.</param>
          <param name="ignoreMissingColumns">Whether to ignore the case when a requested column is not present in the data view.</param>
          <param name="schemaDefinition">Optional user-provided schema definition. If it is not present, the schema is inferred from the definition of T.</param>
          <summary>
            Convert an <see cref="T:Microsoft.ML.Runtime.Data.IDataView" /> into a strongly-typed <see cref="T:System.Collections.Generic.IEnumerable`1" />.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.CursoringUtils" Member="M:Microsoft.ML.Runtime.Api.CursoringUtils.AsEnumerable``1(Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.IHostEnvironment,System.Boolean,System.Boolean,Microsoft.ML.Runtime.Api.SchemaDefinition)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.IDataView" />
      </Targets>
      <Member MemberName="AsEnumerable&lt;TRow&gt;">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TRow&gt; AsEnumerable&lt;TRow&gt; (this Microsoft.ML.Runtime.Data.IDataView data, bool reuseRowObject, bool ignoreMissingColumns = false, Microsoft.ML.Runtime.Api.SchemaDefinition schemaDefinition = null) where TRow : class, new();" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TRow&gt; AsEnumerable&lt;class .ctor TRow&gt;(class Microsoft.ML.Runtime.Data.IDataView data, bool reuseRowObject, bool ignoreMissingColumns, class Microsoft.ML.Runtime.Api.SchemaDefinition schemaDefinition) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.CursoringUtils.AsEnumerable``1(Microsoft.ML.Runtime.Data.IDataView,System.Boolean,System.Boolean,Microsoft.ML.Runtime.Api.SchemaDefinition)" />
        <MemberSignature Language="F#" Value="static member AsEnumerable : Microsoft.ML.Runtime.Data.IDataView * bool * bool * Microsoft.ML.Runtime.Api.SchemaDefinition -&gt; seq&lt;'Row (requires 'Row : null and 'Row : (new : unit -&gt; 'Row))&gt; (requires 'Row : null and 'Row : (new : unit -&gt; 'Row))" Usage="Microsoft.ML.Runtime.Api.CursoringUtils.AsEnumerable (data, reuseRowObject, ignoreMissingColumns, schemaDefinition)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;TRow&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TRow">
            <Constraints>
              <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.IDataView" RefType="this" />
          <Parameter Name="reuseRowObject" Type="System.Boolean" />
          <Parameter Name="ignoreMissingColumns" Type="System.Boolean" />
          <Parameter Name="schemaDefinition" Type="Microsoft.ML.Runtime.Api.SchemaDefinition" />
        </Parameters>
        <Docs>
          <typeparam name="TRow">The user-defined row type.</typeparam>
          <param name="data">The underlying data view.</param>
          <param name="reuseRowObject">Whether to return the same object on every row, or allocate a new one per row.</param>
          <param name="ignoreMissingColumns">Whether to ignore the case when a requested column is not present in the data view.</param>
          <param name="schemaDefinition">Optional user-provided schema definition. If it is not present, the schema is inferred from the definition of T.</param>
          <summary>
            Convert an <see cref="T:Microsoft.ML.Runtime.Data.IDataView" /> into a strongly-typed <see cref="T:System.Collections.Generic.IEnumerable`1" />.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Api.CursoringUtils" Member="M:Microsoft.ML.Runtime.Api.CursoringUtils.AsEnumerable``1(Microsoft.ML.Runtime.Data.IDataView,System.Boolean,System.Boolean,Microsoft.ML.Runtime.Api.SchemaDefinition)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.CommandLine.SubComponent" />
      </Targets>
      <Member MemberName="IsGood">
        <MemberSignature Language="C#" Value="public static bool IsGood (this Microsoft.ML.Runtime.CommandLine.SubComponent src);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsGood(class Microsoft.ML.Runtime.CommandLine.SubComponent src) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.CommandLine.SubComponentExtensions.IsGood(Microsoft.ML.Runtime.CommandLine.SubComponent)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsGood (src As SubComponent) As Boolean" />
        <MemberSignature Language="F#" Value="static member IsGood : Microsoft.ML.Runtime.CommandLine.SubComponent -&gt; bool" Usage="Microsoft.ML.Runtime.CommandLine.SubComponentExtensions.IsGood src" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsGood(Microsoft::ML::Runtime::CommandLine::SubComponent ^ src);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="src" Type="Microsoft.ML.Runtime.CommandLine.SubComponent" RefType="this" />
        </Parameters>
        <Docs>
          <param name="src">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.CommandLine.SubComponentExtensions" Member="M:Microsoft.ML.Runtime.CommandLine.SubComponentExtensions.IsGood(Microsoft.ML.Runtime.CommandLine.SubComponent)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.CommandLine.SubComponent`2" />
      </Targets>
      <Member MemberName="CreateInstance&lt;TRes,TSig&gt;">
        <MemberSignature Language="C#" Value="public static TRes CreateInstance&lt;TRes,TSig&gt; (this Microsoft.ML.Runtime.CommandLine.SubComponent&lt;TRes,TSig&gt; comp, Microsoft.ML.Runtime.IHostEnvironment env) where TRes : class;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TRes CreateInstance&lt;class TRes, TSig&gt;(class Microsoft.ML.Runtime.CommandLine.SubComponent`2&lt;!!TRes, !!TSig&gt; comp, class Microsoft.ML.Runtime.IHostEnvironment env) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.CreateInstance``2(Microsoft.ML.Runtime.CommandLine.SubComponent{``0,``1},Microsoft.ML.Runtime.IHostEnvironment)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateInstance(Of TRes As Class, TSig As Class) (comp As SubComponent(Of TRes, TSig), env As IHostEnvironment) As TRes" />
        <MemberSignature Language="F#" Value="static member CreateInstance : Microsoft.ML.Runtime.CommandLine.SubComponent&lt;'Res, 'Sig (requires 'Res : null)&gt; * Microsoft.ML.Runtime.IHostEnvironment -&gt; 'Res (requires 'Res : null)" Usage="Microsoft.ML.Runtime.ComponentCatalog.CreateInstance (comp, env)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRes, typename TSig&gt;&#xA; where TRes : class[System::Runtime::CompilerServices::Extension]&#xA; static TRes CreateInstance(Microsoft::ML::Runtime::CommandLine::SubComponent&lt;TRes, TSig&gt; ^ comp, Microsoft::ML::Runtime::IHostEnvironment ^ env);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>TRes</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TRes">
            <Constraints>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
          <TypeParameter Name="TSig" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="comp" Type="Microsoft.ML.Runtime.CommandLine.SubComponent&lt;TRes,TSig&gt;" RefType="this" />
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        </Parameters>
        <Docs>
          <typeparam name="TRes">To be added.</typeparam>
          <typeparam name="TSig">To be added.</typeparam>
          <param name="comp">To be added.</param>
          <param name="env">To be added.</param>
          <summary>
            Create an instance of the indicated component.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.ComponentCatalog" Member="M:Microsoft.ML.Runtime.ComponentCatalog.CreateInstance``2(Microsoft.ML.Runtime.CommandLine.SubComponent{``0,``1},Microsoft.ML.Runtime.IHostEnvironment)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.CommandLine.SubComponent`2" />
      </Targets>
      <Member MemberName="CreateInstance&lt;TRes,TSig&gt;">
        <MemberSignature Language="C#" Value="public static TRes CreateInstance&lt;TRes,TSig&gt; (this Microsoft.ML.Runtime.CommandLine.SubComponent&lt;TRes,TSig&gt; comp, Microsoft.ML.Runtime.IHostEnvironment env, params object[] extra) where TRes : class;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TRes CreateInstance&lt;class TRes, TSig&gt;(class Microsoft.ML.Runtime.CommandLine.SubComponent`2&lt;!!TRes, !!TSig&gt; comp, class Microsoft.ML.Runtime.IHostEnvironment env, object[] extra) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.CreateInstance``2(Microsoft.ML.Runtime.CommandLine.SubComponent{``0,``1},Microsoft.ML.Runtime.IHostEnvironment,System.Object[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateInstance(Of TRes As Class, TSig As Class) (comp As SubComponent(Of TRes, TSig), env As IHostEnvironment, ParamArray extra As Object()) As TRes" />
        <MemberSignature Language="F#" Value="static member CreateInstance : Microsoft.ML.Runtime.CommandLine.SubComponent&lt;'Res, 'Sig (requires 'Res : null)&gt; * Microsoft.ML.Runtime.IHostEnvironment * obj[] -&gt; 'Res (requires 'Res : null)" Usage="Microsoft.ML.Runtime.ComponentCatalog.CreateInstance (comp, env, extra)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRes, typename TSig&gt;&#xA; where TRes : class[System::Runtime::CompilerServices::Extension]&#xA; static TRes CreateInstance(Microsoft::ML::Runtime::CommandLine::SubComponent&lt;TRes, TSig&gt; ^ comp, Microsoft::ML::Runtime::IHostEnvironment ^ env, ... cli::array &lt;System::Object ^&gt; ^ extra);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>TRes</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TRes">
            <Constraints>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
          <TypeParameter Name="TSig" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="comp" Type="Microsoft.ML.Runtime.CommandLine.SubComponent&lt;TRes,TSig&gt;" RefType="this" />
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
          <Parameter Name="extra" Type="System.Object[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <typeparam name="TRes">To be added.</typeparam>
          <typeparam name="TSig">To be added.</typeparam>
          <param name="comp">To be added.</param>
          <param name="env">To be added.</param>
          <param name="extra">To be added.</param>
          <summary>
            Create an instance of the indicated component with the given extra parameters.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.ComponentCatalog" Member="M:Microsoft.ML.Runtime.ComponentCatalog.CreateInstance``2(Microsoft.ML.Runtime.CommandLine.SubComponent{``0,``1},Microsoft.ML.Runtime.IHostEnvironment,System.Object[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="Assert">
        <MemberSignature Language="C#" Value="public static void Assert (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Assert(Microsoft.ML.Runtime.IExceptionContext,System.Boolean)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Assert (ctx As IExceptionContext, f As Boolean)" />
        <MemberSignature Language="F#" Value="static member Assert : Microsoft.ML.Runtime.IExceptionContext * bool -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.Assert (ctx, f)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Assert(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Assert(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="f" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="f">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.Assert(Microsoft.ML.Runtime.IExceptionContext,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="Assert">
        <MemberSignature Language="C#" Value="public static void Assert (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Assert(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Assert (ctx As IExceptionContext, f As Boolean, msg As String)" />
        <MemberSignature Language="F#" Value="static member Assert : Microsoft.ML.Runtime.IExceptionContext * bool * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.Assert (ctx, f, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Assert(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f, System::String ^ msg);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Assert(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f, Platform::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="f" Type="System.Boolean" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="f">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.Assert(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="AssertNonEmpty">
        <MemberSignature Language="C#" Value="public static void AssertNonEmpty (this Microsoft.ML.Runtime.IExceptionContext ctx, string s);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertNonEmpty(class Microsoft.ML.Runtime.IExceptionContext ctx, string s) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertNonEmpty(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AssertNonEmpty (ctx As IExceptionContext, s As String)" />
        <MemberSignature Language="F#" Value="static member AssertNonEmpty : Microsoft.ML.Runtime.IExceptionContext * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.AssertNonEmpty (ctx, s)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AssertNonEmpty(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ s);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AssertNonEmpty(Microsoft::ML::Runtime::IExceptionContext ^ ctx, Platform::String ^ s);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="s" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="s">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.AssertNonEmpty(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="AssertNonEmpty">
        <MemberSignature Language="C#" Value="public static void AssertNonEmpty (this Microsoft.ML.Runtime.IExceptionContext ctx, string s, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertNonEmpty(class Microsoft.ML.Runtime.IExceptionContext ctx, string s, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertNonEmpty(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AssertNonEmpty (ctx As IExceptionContext, s As String, msg As String)" />
        <MemberSignature Language="F#" Value="static member AssertNonEmpty : Microsoft.ML.Runtime.IExceptionContext * string * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.AssertNonEmpty (ctx, s, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AssertNonEmpty(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ s, System::String ^ msg);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AssertNonEmpty(Microsoft::ML::Runtime::IExceptionContext ^ ctx, Platform::String ^ s, Platform::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="s" Type="System.String" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="s">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.AssertNonEmpty(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="AssertNonEmpty&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static void AssertNonEmpty&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, System.Collections.Generic.ICollection&lt;T&gt; args);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertNonEmpty&lt;T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, class System.Collections.Generic.ICollection`1&lt;!!T&gt; args) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertNonEmpty``1(Microsoft.ML.Runtime.IExceptionContext,System.Collections.Generic.ICollection{``0})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AssertNonEmpty(Of T) (ctx As IExceptionContext, args As ICollection(Of T))" />
        <MemberSignature Language="F#" Value="static member AssertNonEmpty : Microsoft.ML.Runtime.IExceptionContext * System.Collections.Generic.ICollection&lt;'T&gt; -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.AssertNonEmpty (ctx, args)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AssertNonEmpty(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::Collections::Generic::ICollection&lt;T&gt; ^ args);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="args" Type="System.Collections.Generic.ICollection&lt;T&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="ctx">To be added.</param>
          <param name="args">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.AssertNonEmpty``1(Microsoft.ML.Runtime.IExceptionContext,System.Collections.Generic.ICollection{``0})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="AssertNonEmpty&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static void AssertNonEmpty&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, System.Collections.Generic.ICollection&lt;T&gt; args, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertNonEmpty&lt;T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, class System.Collections.Generic.ICollection`1&lt;!!T&gt; args, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertNonEmpty``1(Microsoft.ML.Runtime.IExceptionContext,System.Collections.Generic.ICollection{``0},System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AssertNonEmpty(Of T) (ctx As IExceptionContext, args As ICollection(Of T), msg As String)" />
        <MemberSignature Language="F#" Value="static member AssertNonEmpty : Microsoft.ML.Runtime.IExceptionContext * System.Collections.Generic.ICollection&lt;'T&gt; * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.AssertNonEmpty (ctx, args, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AssertNonEmpty(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::Collections::Generic::ICollection&lt;T&gt; ^ args, System::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="args" Type="System.Collections.Generic.ICollection&lt;T&gt;" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="ctx">To be added.</param>
          <param name="args">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.AssertNonEmpty``1(Microsoft.ML.Runtime.IExceptionContext,System.Collections.Generic.ICollection{``0},System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="AssertNonWhiteSpace">
        <MemberSignature Language="C#" Value="public static void AssertNonWhiteSpace (this Microsoft.ML.Runtime.IExceptionContext ctx, string s);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertNonWhiteSpace(class Microsoft.ML.Runtime.IExceptionContext ctx, string s) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertNonWhiteSpace(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AssertNonWhiteSpace (ctx As IExceptionContext, s As String)" />
        <MemberSignature Language="F#" Value="static member AssertNonWhiteSpace : Microsoft.ML.Runtime.IExceptionContext * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.AssertNonWhiteSpace (ctx, s)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AssertNonWhiteSpace(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ s);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AssertNonWhiteSpace(Microsoft::ML::Runtime::IExceptionContext ^ ctx, Platform::String ^ s);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="s" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="s">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.AssertNonWhiteSpace(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="AssertNonWhiteSpace">
        <MemberSignature Language="C#" Value="public static void AssertNonWhiteSpace (this Microsoft.ML.Runtime.IExceptionContext ctx, string s, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertNonWhiteSpace(class Microsoft.ML.Runtime.IExceptionContext ctx, string s, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertNonWhiteSpace(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AssertNonWhiteSpace (ctx As IExceptionContext, s As String, msg As String)" />
        <MemberSignature Language="F#" Value="static member AssertNonWhiteSpace : Microsoft.ML.Runtime.IExceptionContext * string * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.AssertNonWhiteSpace (ctx, s, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AssertNonWhiteSpace(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ s, System::String ^ msg);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AssertNonWhiteSpace(Microsoft::ML::Runtime::IExceptionContext ^ ctx, Platform::String ^ s, Platform::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="s" Type="System.String" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="s">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.AssertNonWhiteSpace(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="AssertValue&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static void AssertValue&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T val) where T : class;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertValue&lt;class T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T val) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertValue``1(Microsoft.ML.Runtime.IExceptionContext,``0)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AssertValue(Of T As Class) (ctx As IExceptionContext, val As T)" />
        <MemberSignature Language="F#" Value="static member AssertValue : Microsoft.ML.Runtime.IExceptionContext * 'T -&gt; unit (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.AssertValue (ctx, val)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class[System::Runtime::CompilerServices::Extension]&#xA; static void AssertValue(Microsoft::ML::Runtime::IExceptionContext ^ ctx, T val);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class[System::Runtime::CompilerServices::Extension]&#xA; static void AssertValue(Microsoft::ML::Runtime::IExceptionContext ^ ctx, T val);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="val" Type="T" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="ctx">To be added.</param>
          <param name="val">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.AssertValue``1(Microsoft.ML.Runtime.IExceptionContext,``0)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="AssertValue&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static void AssertValue&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T val, string paramName) where T : class;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertValue&lt;class T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T val, string paramName) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertValue``1(Microsoft.ML.Runtime.IExceptionContext,``0,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AssertValue(Of T As Class) (ctx As IExceptionContext, val As T, paramName As String)" />
        <MemberSignature Language="F#" Value="static member AssertValue : Microsoft.ML.Runtime.IExceptionContext * 'T * string -&gt; unit (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.AssertValue (ctx, val, paramName)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class[System::Runtime::CompilerServices::Extension]&#xA; static void AssertValue(Microsoft::ML::Runtime::IExceptionContext ^ ctx, T val, System::String ^ paramName);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class[System::Runtime::CompilerServices::Extension]&#xA; static void AssertValue(Microsoft::ML::Runtime::IExceptionContext ^ ctx, T val, Platform::String ^ paramName);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="val" Type="T" />
          <Parameter Name="paramName" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="ctx">To be added.</param>
          <param name="val">To be added.</param>
          <param name="paramName">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.AssertValue``1(Microsoft.ML.Runtime.IExceptionContext,``0,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="AssertValue&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static void AssertValue&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T val, string name, string msg) where T : class;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertValue&lt;class T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T val, string name, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertValue``1(Microsoft.ML.Runtime.IExceptionContext,``0,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AssertValue(Of T As Class) (ctx As IExceptionContext, val As T, name As String, msg As String)" />
        <MemberSignature Language="F#" Value="static member AssertValue : Microsoft.ML.Runtime.IExceptionContext * 'T * string * string -&gt; unit (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.AssertValue (ctx, val, name, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class[System::Runtime::CompilerServices::Extension]&#xA; static void AssertValue(Microsoft::ML::Runtime::IExceptionContext ^ ctx, T val, System::String ^ name, System::String ^ msg);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class[System::Runtime::CompilerServices::Extension]&#xA; static void AssertValue(Microsoft::ML::Runtime::IExceptionContext ^ ctx, T val, Platform::String ^ name, Platform::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="val" Type="T" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="ctx">To be added.</param>
          <param name="val">To be added.</param>
          <param name="name">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.AssertValue``1(Microsoft.ML.Runtime.IExceptionContext,``0,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="AssertValueOrNull&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static void AssertValueOrNull&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T val) where T : class;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertValueOrNull&lt;class T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T val) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertValueOrNull``1(Microsoft.ML.Runtime.IExceptionContext,``0)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AssertValueOrNull(Of T As Class) (ctx As IExceptionContext, val As T)" />
        <MemberSignature Language="F#" Value="static member AssertValueOrNull : Microsoft.ML.Runtime.IExceptionContext * 'T -&gt; unit (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.AssertValueOrNull (ctx, val)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class[System::Runtime::CompilerServices::Extension]&#xA; static void AssertValueOrNull(Microsoft::ML::Runtime::IExceptionContext ^ ctx, T val);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class[System::Runtime::CompilerServices::Extension]&#xA; static void AssertValueOrNull(Microsoft::ML::Runtime::IExceptionContext ^ ctx, T val);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="val" Type="T" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="ctx">To be added.</param>
          <param name="val">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.AssertValueOrNull``1(Microsoft.ML.Runtime.IExceptionContext,``0)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="Check">
        <MemberSignature Language="C#" Value="public static void Check (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Check(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Check(Microsoft.ML.Runtime.IExceptionContext,System.Boolean)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Check (ctx As IExceptionContext, f As Boolean)" />
        <MemberSignature Language="F#" Value="static member Check : Microsoft.ML.Runtime.IExceptionContext * bool -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.Check (ctx, f)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Check(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Check(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="f" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="f">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.Check(Microsoft.ML.Runtime.IExceptionContext,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="Check">
        <MemberSignature Language="C#" Value="public static void Check (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Check(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Check(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Check (ctx As IExceptionContext, f As Boolean, msg As String)" />
        <MemberSignature Language="F#" Value="static member Check : Microsoft.ML.Runtime.IExceptionContext * bool * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.Check (ctx, f, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Check(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f, System::String ^ msg);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Check(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f, Platform::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="f" Type="System.Boolean" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="f">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.Check(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHostEnvironment" />
      </Targets>
      <Member MemberName="CheckAlive">
        <MemberSignature Language="C#" Value="public static void CheckAlive (this Microsoft.ML.Runtime.IHostEnvironment env);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckAlive(class Microsoft.ML.Runtime.IHostEnvironment env) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckAlive(Microsoft.ML.Runtime.IHostEnvironment)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckAlive (env As IHostEnvironment)" />
        <MemberSignature Language="F#" Value="static member CheckAlive : Microsoft.ML.Runtime.IHostEnvironment -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckAlive env" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckAlive(Microsoft::ML::Runtime::IHostEnvironment ^ env);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckAlive(Microsoft::ML::Runtime::IHostEnvironment ^ env);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
        </Parameters>
        <Docs>
          <param name="env">To be added.</param>
          <summary>
            Check state of the host and throw exception if host marked to stop all exection.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.CheckAlive(Microsoft.ML.Runtime.IHostEnvironment)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="CheckDecode">
        <MemberSignature Language="C#" Value="public static void CheckDecode (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckDecode(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckDecode(Microsoft.ML.Runtime.IExceptionContext,System.Boolean)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckDecode (ctx As IExceptionContext, f As Boolean)" />
        <MemberSignature Language="F#" Value="static member CheckDecode : Microsoft.ML.Runtime.IExceptionContext * bool -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckDecode (ctx, f)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckDecode(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckDecode(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="f" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="f">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.CheckDecode(Microsoft.ML.Runtime.IExceptionContext,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="CheckDecode">
        <MemberSignature Language="C#" Value="public static void CheckDecode (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckDecode(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckDecode(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckDecode (ctx As IExceptionContext, f As Boolean, msg As String)" />
        <MemberSignature Language="F#" Value="static member CheckDecode : Microsoft.ML.Runtime.IExceptionContext * bool * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckDecode (ctx, f, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckDecode(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f, System::String ^ msg);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckDecode(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f, Platform::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="f" Type="System.Boolean" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="f">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.CheckDecode(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="CheckIO">
        <MemberSignature Language="C#" Value="public static void CheckIO (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckIO(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckIO(Microsoft.ML.Runtime.IExceptionContext,System.Boolean)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckIO (ctx As IExceptionContext, f As Boolean)" />
        <MemberSignature Language="F#" Value="static member CheckIO : Microsoft.ML.Runtime.IExceptionContext * bool -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckIO (ctx, f)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckIO(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckIO(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="f" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="f">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.CheckIO(Microsoft.ML.Runtime.IExceptionContext,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="CheckIO">
        <MemberSignature Language="C#" Value="public static void CheckIO (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckIO(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckIO(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckIO (ctx As IExceptionContext, f As Boolean, msg As String)" />
        <MemberSignature Language="F#" Value="static member CheckIO : Microsoft.ML.Runtime.IExceptionContext * bool * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckIO (ctx, f, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckIO(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f, System::String ^ msg);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckIO(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f, Platform::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="f" Type="System.Boolean" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="f">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.CheckIO(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="CheckNonEmpty">
        <MemberSignature Language="C#" Value="public static string CheckNonEmpty (this Microsoft.ML.Runtime.IExceptionContext ctx, string s, string paramName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CheckNonEmpty(class Microsoft.ML.Runtime.IExceptionContext ctx, string s, string paramName) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNonEmpty (ctx As IExceptionContext, s As String, paramName As String) As String" />
        <MemberSignature Language="F#" Value="static member CheckNonEmpty : Microsoft.ML.Runtime.IExceptionContext * string * string -&gt; string" Usage="Microsoft.ML.Runtime.Contracts.CheckNonEmpty (ctx, s, paramName)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ CheckNonEmpty(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ s, System::String ^ paramName);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Platform::String ^ CheckNonEmpty(Microsoft::ML::Runtime::IExceptionContext ^ ctx, Platform::String ^ s, Platform::String ^ paramName);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="s" Type="System.String" />
          <Parameter Name="paramName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="s">To be added.</param>
          <param name="paramName">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="CheckNonEmpty">
        <MemberSignature Language="C#" Value="public static string CheckNonEmpty (this Microsoft.ML.Runtime.IExceptionContext ctx, string s, string paramName, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CheckNonEmpty(class Microsoft.ML.Runtime.IExceptionContext ctx, string s, string paramName, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNonEmpty (ctx As IExceptionContext, s As String, paramName As String, msg As String) As String" />
        <MemberSignature Language="F#" Value="static member CheckNonEmpty : Microsoft.ML.Runtime.IExceptionContext * string * string * string -&gt; string" Usage="Microsoft.ML.Runtime.Contracts.CheckNonEmpty (ctx, s, paramName, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ CheckNonEmpty(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ s, System::String ^ paramName, System::String ^ msg);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Platform::String ^ CheckNonEmpty(Microsoft::ML::Runtime::IExceptionContext ^ ctx, Platform::String ^ s, Platform::String ^ paramName, Platform::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="s" Type="System.String" />
          <Parameter Name="paramName" Type="System.String" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="s">To be added.</param>
          <param name="paramName">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="CheckNonEmpty&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static T[] CheckNonEmpty&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T[] args, string paramName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] CheckNonEmpty&lt;T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T[] args, string paramName) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty``1(Microsoft.ML.Runtime.IExceptionContext,``0[],System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNonEmpty(Of T) (ctx As IExceptionContext, args As T(), paramName As String) As T()" />
        <MemberSignature Language="F#" Value="static member CheckNonEmpty : Microsoft.ML.Runtime.IExceptionContext * 'T[] * string -&gt; 'T[]" Usage="Microsoft.ML.Runtime.Contracts.CheckNonEmpty (ctx, args, paramName)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;T&gt; ^ CheckNonEmpty(Microsoft::ML::Runtime::IExceptionContext ^ ctx, cli::array &lt;T&gt; ^ args, System::String ^ paramName);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Platform::Array &lt;T&gt; ^ CheckNonEmpty(Microsoft::ML::Runtime::IExceptionContext ^ ctx, Platform::Array &lt;T&gt; ^ args, Platform::String ^ paramName);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>T[]</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="args" Type="T[]" />
          <Parameter Name="paramName" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="ctx">To be added.</param>
          <param name="args">To be added.</param>
          <param name="paramName">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty``1(Microsoft.ML.Runtime.IExceptionContext,``0[],System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="CheckNonEmpty&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static T[] CheckNonEmpty&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T[] args, string paramName, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] CheckNonEmpty&lt;T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T[] args, string paramName, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty``1(Microsoft.ML.Runtime.IExceptionContext,``0[],System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNonEmpty(Of T) (ctx As IExceptionContext, args As T(), paramName As String, msg As String) As T()" />
        <MemberSignature Language="F#" Value="static member CheckNonEmpty : Microsoft.ML.Runtime.IExceptionContext * 'T[] * string * string -&gt; 'T[]" Usage="Microsoft.ML.Runtime.Contracts.CheckNonEmpty (ctx, args, paramName, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;T&gt; ^ CheckNonEmpty(Microsoft::ML::Runtime::IExceptionContext ^ ctx, cli::array &lt;T&gt; ^ args, System::String ^ paramName, System::String ^ msg);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Platform::Array &lt;T&gt; ^ CheckNonEmpty(Microsoft::ML::Runtime::IExceptionContext ^ ctx, Platform::Array &lt;T&gt; ^ args, Platform::String ^ paramName, Platform::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>T[]</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="args" Type="T[]" />
          <Parameter Name="paramName" Type="System.String" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="ctx">To be added.</param>
          <param name="args">To be added.</param>
          <param name="paramName">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty``1(Microsoft.ML.Runtime.IExceptionContext,``0[],System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="CheckNonEmpty&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.ICollection&lt;T&gt; CheckNonEmpty&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, System.Collections.Generic.ICollection&lt;T&gt; args, string paramName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.ICollection`1&lt;!!T&gt; CheckNonEmpty&lt;T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, class System.Collections.Generic.ICollection`1&lt;!!T&gt; args, string paramName) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty``1(Microsoft.ML.Runtime.IExceptionContext,System.Collections.Generic.ICollection{``0},System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNonEmpty(Of T) (ctx As IExceptionContext, args As ICollection(Of T), paramName As String) As ICollection(Of T)" />
        <MemberSignature Language="F#" Value="static member CheckNonEmpty : Microsoft.ML.Runtime.IExceptionContext * System.Collections.Generic.ICollection&lt;'T&gt; * string -&gt; System.Collections.Generic.ICollection&lt;'T&gt;" Usage="Microsoft.ML.Runtime.Contracts.CheckNonEmpty (ctx, args, paramName)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::ICollection&lt;T&gt; ^ CheckNonEmpty(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::Collections::Generic::ICollection&lt;T&gt; ^ args, System::String ^ paramName);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.ICollection&lt;T&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="args" Type="System.Collections.Generic.ICollection&lt;T&gt;" />
          <Parameter Name="paramName" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="ctx">To be added.</param>
          <param name="args">To be added.</param>
          <param name="paramName">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty``1(Microsoft.ML.Runtime.IExceptionContext,System.Collections.Generic.ICollection{``0},System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="CheckNonEmpty&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.ICollection&lt;T&gt; CheckNonEmpty&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, System.Collections.Generic.ICollection&lt;T&gt; args, string paramName, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.ICollection`1&lt;!!T&gt; CheckNonEmpty&lt;T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, class System.Collections.Generic.ICollection`1&lt;!!T&gt; args, string paramName, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty``1(Microsoft.ML.Runtime.IExceptionContext,System.Collections.Generic.ICollection{``0},System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNonEmpty(Of T) (ctx As IExceptionContext, args As ICollection(Of T), paramName As String, msg As String) As ICollection(Of T)" />
        <MemberSignature Language="F#" Value="static member CheckNonEmpty : Microsoft.ML.Runtime.IExceptionContext * System.Collections.Generic.ICollection&lt;'T&gt; * string * string -&gt; System.Collections.Generic.ICollection&lt;'T&gt;" Usage="Microsoft.ML.Runtime.Contracts.CheckNonEmpty (ctx, args, paramName, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::ICollection&lt;T&gt; ^ CheckNonEmpty(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::Collections::Generic::ICollection&lt;T&gt; ^ args, System::String ^ paramName, System::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.ICollection&lt;T&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="args" Type="System.Collections.Generic.ICollection&lt;T&gt;" />
          <Parameter Name="paramName" Type="System.String" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="ctx">To be added.</param>
          <param name="args">To be added.</param>
          <param name="paramName">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty``1(Microsoft.ML.Runtime.IExceptionContext,System.Collections.Generic.ICollection{``0},System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="CheckNonWhiteSpace">
        <MemberSignature Language="C#" Value="public static string CheckNonWhiteSpace (this Microsoft.ML.Runtime.IExceptionContext ctx, string s, string paramName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CheckNonWhiteSpace(class Microsoft.ML.Runtime.IExceptionContext ctx, string s, string paramName) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonWhiteSpace(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNonWhiteSpace (ctx As IExceptionContext, s As String, paramName As String) As String" />
        <MemberSignature Language="F#" Value="static member CheckNonWhiteSpace : Microsoft.ML.Runtime.IExceptionContext * string * string -&gt; string" Usage="Microsoft.ML.Runtime.Contracts.CheckNonWhiteSpace (ctx, s, paramName)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ CheckNonWhiteSpace(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ s, System::String ^ paramName);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Platform::String ^ CheckNonWhiteSpace(Microsoft::ML::Runtime::IExceptionContext ^ ctx, Platform::String ^ s, Platform::String ^ paramName);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="s" Type="System.String" />
          <Parameter Name="paramName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="s">To be added.</param>
          <param name="paramName">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.CheckNonWhiteSpace(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="CheckNonWhiteSpace">
        <MemberSignature Language="C#" Value="public static string CheckNonWhiteSpace (this Microsoft.ML.Runtime.IExceptionContext ctx, string s, string paramName, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CheckNonWhiteSpace(class Microsoft.ML.Runtime.IExceptionContext ctx, string s, string paramName, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonWhiteSpace(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNonWhiteSpace (ctx As IExceptionContext, s As String, paramName As String, msg As String) As String" />
        <MemberSignature Language="F#" Value="static member CheckNonWhiteSpace : Microsoft.ML.Runtime.IExceptionContext * string * string * string -&gt; string" Usage="Microsoft.ML.Runtime.Contracts.CheckNonWhiteSpace (ctx, s, paramName, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ CheckNonWhiteSpace(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ s, System::String ^ paramName, System::String ^ msg);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Platform::String ^ CheckNonWhiteSpace(Microsoft::ML::Runtime::IExceptionContext ^ ctx, Platform::String ^ s, Platform::String ^ paramName, Platform::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="s" Type="System.String" />
          <Parameter Name="paramName" Type="System.String" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="s">To be added.</param>
          <param name="paramName">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.CheckNonWhiteSpace(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="CheckParam">
        <MemberSignature Language="C#" Value="public static void CheckParam (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string paramName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckParam(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string paramName) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckParam(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckParam (ctx As IExceptionContext, f As Boolean, paramName As String)" />
        <MemberSignature Language="F#" Value="static member CheckParam : Microsoft.ML.Runtime.IExceptionContext * bool * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckParam (ctx, f, paramName)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckParam(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f, System::String ^ paramName);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckParam(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f, Platform::String ^ paramName);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="f" Type="System.Boolean" />
          <Parameter Name="paramName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="f">To be added.</param>
          <param name="paramName">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.CheckParam(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="CheckParam">
        <MemberSignature Language="C#" Value="public static void CheckParam (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string paramName, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckParam(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string paramName, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckParam(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckParam (ctx As IExceptionContext, f As Boolean, paramName As String, msg As String)" />
        <MemberSignature Language="F#" Value="static member CheckParam : Microsoft.ML.Runtime.IExceptionContext * bool * string * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckParam (ctx, f, paramName, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckParam(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f, System::String ^ paramName, System::String ^ msg);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckParam(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f, Platform::String ^ paramName, Platform::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="f" Type="System.Boolean" />
          <Parameter Name="paramName" Type="System.String" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="f">To be added.</param>
          <param name="paramName">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.CheckParam(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="CheckParamValue&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static void CheckParamValue&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f, T value, string paramName, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckParamValue&lt;T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f, !!T value, string paramName, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckParamValue``1(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,``0,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckParamValue(Of T) (ctx As IExceptionContext, f As Boolean, value As T, paramName As String, msg As String)" />
        <MemberSignature Language="F#" Value="static member CheckParamValue : Microsoft.ML.Runtime.IExceptionContext * bool * 'T * string * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckParamValue (ctx, f, value, paramName, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckParamValue(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f, T value, System::String ^ paramName, System::String ^ msg);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckParamValue(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f, T value, Platform::String ^ paramName, Platform::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="f" Type="System.Boolean" />
          <Parameter Name="value" Type="T" />
          <Parameter Name="paramName" Type="System.String" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="ctx">To be added.</param>
          <param name="f">To be added.</param>
          <param name="value">To be added.</param>
          <param name="paramName">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.CheckParamValue``1(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,``0,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="CheckRef&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static T CheckRef&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T val, string paramName) where T : class;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T CheckRef&lt;class T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T val, string paramName) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckRef``1(Microsoft.ML.Runtime.IExceptionContext,``0,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckRef(Of T As Class) (ctx As IExceptionContext, val As T, paramName As String) As T" />
        <MemberSignature Language="F#" Value="static member CheckRef : Microsoft.ML.Runtime.IExceptionContext * 'T * string -&gt; 'T (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.CheckRef (ctx, val, paramName)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class[System::Runtime::CompilerServices::Extension]&#xA; static T CheckRef(Microsoft::ML::Runtime::IExceptionContext ^ ctx, T val, System::String ^ paramName);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class[System::Runtime::CompilerServices::Extension]&#xA; static T CheckRef(Microsoft::ML::Runtime::IExceptionContext ^ ctx, T val, Platform::String ^ paramName);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>T</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="val" Type="T" />
          <Parameter Name="paramName" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="ctx">To be added.</param>
          <param name="val">To be added.</param>
          <param name="paramName">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.CheckRef``1(Microsoft.ML.Runtime.IExceptionContext,``0,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="CheckUserArg">
        <MemberSignature Language="C#" Value="public static void CheckUserArg (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string name);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckUserArg(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string name) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckUserArg(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckUserArg (ctx As IExceptionContext, f As Boolean, name As String)" />
        <MemberSignature Language="F#" Value="static member CheckUserArg : Microsoft.ML.Runtime.IExceptionContext * bool * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckUserArg (ctx, f, name)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckUserArg(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f, System::String ^ name);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckUserArg(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f, Platform::String ^ name);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="f" Type="System.Boolean" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="f">To be added.</param>
          <param name="name">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.CheckUserArg(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="CheckUserArg">
        <MemberSignature Language="C#" Value="public static void CheckUserArg (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string name, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckUserArg(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string name, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckUserArg(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckUserArg (ctx As IExceptionContext, f As Boolean, name As String, msg As String)" />
        <MemberSignature Language="F#" Value="static member CheckUserArg : Microsoft.ML.Runtime.IExceptionContext * bool * string * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckUserArg (ctx, f, name, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckUserArg(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f, System::String ^ name, System::String ^ msg);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckUserArg(Microsoft::ML::Runtime::IExceptionContext ^ ctx, bool f, Platform::String ^ name, Platform::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="f" Type="System.Boolean" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="f">To be added.</param>
          <param name="name">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.CheckUserArg(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="CheckValue&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static void CheckValue&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T val, string paramName) where T : class;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckValue&lt;class T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T val, string paramName) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckValue``1(Microsoft.ML.Runtime.IExceptionContext,``0,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckValue(Of T As Class) (ctx As IExceptionContext, val As T, paramName As String)" />
        <MemberSignature Language="F#" Value="static member CheckValue : Microsoft.ML.Runtime.IExceptionContext * 'T * string -&gt; unit (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.CheckValue (ctx, val, paramName)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class[System::Runtime::CompilerServices::Extension]&#xA; static void CheckValue(Microsoft::ML::Runtime::IExceptionContext ^ ctx, T val, System::String ^ paramName);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class[System::Runtime::CompilerServices::Extension]&#xA; static void CheckValue(Microsoft::ML::Runtime::IExceptionContext ^ ctx, T val, Platform::String ^ paramName);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="val" Type="T" />
          <Parameter Name="paramName" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="ctx">To be added.</param>
          <param name="val">To be added.</param>
          <param name="paramName">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.CheckValue``1(Microsoft.ML.Runtime.IExceptionContext,``0,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="CheckValue&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static T CheckValue&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T val, string paramName, string msg) where T : class;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T CheckValue&lt;class T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T val, string paramName, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckValue``1(Microsoft.ML.Runtime.IExceptionContext,``0,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckValue(Of T As Class) (ctx As IExceptionContext, val As T, paramName As String, msg As String) As T" />
        <MemberSignature Language="F#" Value="static member CheckValue : Microsoft.ML.Runtime.IExceptionContext * 'T * string * string -&gt; 'T (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.CheckValue (ctx, val, paramName, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class[System::Runtime::CompilerServices::Extension]&#xA; static T CheckValue(Microsoft::ML::Runtime::IExceptionContext ^ ctx, T val, System::String ^ paramName, System::String ^ msg);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class[System::Runtime::CompilerServices::Extension]&#xA; static T CheckValue(Microsoft::ML::Runtime::IExceptionContext ^ ctx, T val, Platform::String ^ paramName, Platform::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>T</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="val" Type="T" />
          <Parameter Name="paramName" Type="System.String" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="ctx">To be added.</param>
          <param name="val">To be added.</param>
          <param name="paramName">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.CheckValue``1(Microsoft.ML.Runtime.IExceptionContext,``0,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="CheckValueOrNull&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static void CheckValueOrNull&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T val) where T : class;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckValueOrNull&lt;class T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T val) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckValueOrNull``1(Microsoft.ML.Runtime.IExceptionContext,``0)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckValueOrNull(Of T As Class) (ctx As IExceptionContext, val As T)" />
        <MemberSignature Language="F#" Value="static member CheckValueOrNull : Microsoft.ML.Runtime.IExceptionContext * 'T -&gt; unit (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.CheckValueOrNull (ctx, val)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class[System::Runtime::CompilerServices::Extension]&#xA; static void CheckValueOrNull(Microsoft::ML::Runtime::IExceptionContext ^ ctx, T val);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class[System::Runtime::CompilerServices::Extension]&#xA; static void CheckValueOrNull(Microsoft::ML::Runtime::IExceptionContext ^ ctx, T val);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="val" Type="T" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="ctx">To be added.</param>
          <param name="val">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.CheckValueOrNull``1(Microsoft.ML.Runtime.IExceptionContext,``0)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="Except">
        <MemberSignature Language="C#" Value="public static Exception Except (this Microsoft.ML.Runtime.IExceptionContext ctx);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception Except(class Microsoft.ML.Runtime.IExceptionContext ctx) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Except(Microsoft.ML.Runtime.IExceptionContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except (ctx As IExceptionContext) As Exception" />
        <MemberSignature Language="F#" Value="static member Except : Microsoft.ML.Runtime.IExceptionContext -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.Except ctx" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ Except(Microsoft::ML::Runtime::IExceptionContext ^ ctx);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.Except(Microsoft.ML.Runtime.IExceptionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="Except">
        <MemberSignature Language="C#" Value="public static Exception Except (this Microsoft.ML.Runtime.IExceptionContext ctx, Exception inner, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception Except(class Microsoft.ML.Runtime.IExceptionContext ctx, class System.Exception inner, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Except(Microsoft.ML.Runtime.IExceptionContext,System.Exception,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except (ctx As IExceptionContext, inner As Exception, msg As String) As Exception" />
        <MemberSignature Language="F#" Value="static member Except : Microsoft.ML.Runtime.IExceptionContext * Exception * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.Except (ctx, inner, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ Except(Microsoft::ML::Runtime::IExceptionContext ^ ctx, Exception ^ inner, System::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="inner" Type="System.Exception" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="inner">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.Except(Microsoft.ML.Runtime.IExceptionContext,System.Exception,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="Except">
        <MemberSignature Language="C#" Value="public static Exception Except (this Microsoft.ML.Runtime.IExceptionContext ctx, Exception inner, string msg, params object[] args);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception Except(class Microsoft.ML.Runtime.IExceptionContext ctx, class System.Exception inner, string msg, object[] args) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Except(Microsoft.ML.Runtime.IExceptionContext,System.Exception,System.String,System.Object[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except (ctx As IExceptionContext, inner As Exception, msg As String, ParamArray args As Object()) As Exception" />
        <MemberSignature Language="F#" Value="static member Except : Microsoft.ML.Runtime.IExceptionContext * Exception * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.Except (ctx, inner, msg, args)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ Except(Microsoft::ML::Runtime::IExceptionContext ^ ctx, Exception ^ inner, System::String ^ msg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="inner" Type="System.Exception" />
          <Parameter Name="msg" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="inner">To be added.</param>
          <param name="msg">To be added.</param>
          <param name="args">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.Except(Microsoft.ML.Runtime.IExceptionContext,System.Exception,System.String,System.Object[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="Except">
        <MemberSignature Language="C#" Value="public static Exception Except (this Microsoft.ML.Runtime.IExceptionContext ctx, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception Except(class Microsoft.ML.Runtime.IExceptionContext ctx, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Except(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except (ctx As IExceptionContext, msg As String) As Exception" />
        <MemberSignature Language="F#" Value="static member Except : Microsoft.ML.Runtime.IExceptionContext * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.Except (ctx, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ Except(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.Except(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="Except">
        <MemberSignature Language="C#" Value="public static Exception Except (this Microsoft.ML.Runtime.IExceptionContext ctx, string msg, params object[] args);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception Except(class Microsoft.ML.Runtime.IExceptionContext ctx, string msg, object[] args) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Except(Microsoft.ML.Runtime.IExceptionContext,System.String,System.Object[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except (ctx As IExceptionContext, msg As String, ParamArray args As Object()) As Exception" />
        <MemberSignature Language="F#" Value="static member Except : Microsoft.ML.Runtime.IExceptionContext * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.Except (ctx, msg, args)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ Except(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ msg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="msg" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="msg">To be added.</param>
          <param name="args">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.Except(Microsoft.ML.Runtime.IExceptionContext,System.String,System.Object[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptDecode">
        <MemberSignature Language="C#" Value="public static Exception ExceptDecode (this Microsoft.ML.Runtime.IExceptionContext ctx);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptDecode(class Microsoft.ML.Runtime.IExceptionContext ctx) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptDecode(Microsoft.ML.Runtime.IExceptionContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptDecode (ctx As IExceptionContext) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptDecode : Microsoft.ML.Runtime.IExceptionContext -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptDecode ctx" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptDecode(Microsoft::ML::Runtime::IExceptionContext ^ ctx);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptDecode(Microsoft.ML.Runtime.IExceptionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptDecode">
        <MemberSignature Language="C#" Value="public static Exception ExceptDecode (this Microsoft.ML.Runtime.IExceptionContext ctx, Exception inner, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptDecode(class Microsoft.ML.Runtime.IExceptionContext ctx, class System.Exception inner, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptDecode(Microsoft.ML.Runtime.IExceptionContext,System.Exception,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptDecode (ctx As IExceptionContext, inner As Exception, msg As String) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptDecode : Microsoft.ML.Runtime.IExceptionContext * Exception * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptDecode (ctx, inner, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptDecode(Microsoft::ML::Runtime::IExceptionContext ^ ctx, Exception ^ inner, System::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="inner" Type="System.Exception" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="inner">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptDecode(Microsoft.ML.Runtime.IExceptionContext,System.Exception,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptDecode">
        <MemberSignature Language="C#" Value="public static Exception ExceptDecode (this Microsoft.ML.Runtime.IExceptionContext ctx, Exception inner, string msg, params object[] args);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptDecode(class Microsoft.ML.Runtime.IExceptionContext ctx, class System.Exception inner, string msg, object[] args) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptDecode(Microsoft.ML.Runtime.IExceptionContext,System.Exception,System.String,System.Object[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptDecode (ctx As IExceptionContext, inner As Exception, msg As String, ParamArray args As Object()) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptDecode : Microsoft.ML.Runtime.IExceptionContext * Exception * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptDecode (ctx, inner, msg, args)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptDecode(Microsoft::ML::Runtime::IExceptionContext ^ ctx, Exception ^ inner, System::String ^ msg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="inner" Type="System.Exception" />
          <Parameter Name="msg" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="inner">To be added.</param>
          <param name="msg">To be added.</param>
          <param name="args">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptDecode(Microsoft.ML.Runtime.IExceptionContext,System.Exception,System.String,System.Object[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptDecode">
        <MemberSignature Language="C#" Value="public static Exception ExceptDecode (this Microsoft.ML.Runtime.IExceptionContext ctx, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptDecode(class Microsoft.ML.Runtime.IExceptionContext ctx, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptDecode(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptDecode (ctx As IExceptionContext, msg As String) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptDecode : Microsoft.ML.Runtime.IExceptionContext * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptDecode (ctx, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptDecode(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptDecode(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptDecode">
        <MemberSignature Language="C#" Value="public static Exception ExceptDecode (this Microsoft.ML.Runtime.IExceptionContext ctx, string msg, params object[] args);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptDecode(class Microsoft.ML.Runtime.IExceptionContext ctx, string msg, object[] args) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptDecode(Microsoft.ML.Runtime.IExceptionContext,System.String,System.Object[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptDecode (ctx As IExceptionContext, msg As String, ParamArray args As Object()) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptDecode : Microsoft.ML.Runtime.IExceptionContext * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptDecode (ctx, msg, args)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptDecode(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ msg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="msg" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="msg">To be added.</param>
          <param name="args">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptDecode(Microsoft.ML.Runtime.IExceptionContext,System.String,System.Object[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptEmpty">
        <MemberSignature Language="C#" Value="public static Exception ExceptEmpty (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptEmpty(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptEmpty(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptEmpty (ctx As IExceptionContext, paramName As String) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptEmpty : Microsoft.ML.Runtime.IExceptionContext * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptEmpty (ctx, paramName)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptEmpty(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ paramName);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="paramName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="paramName">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptEmpty(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptEmpty">
        <MemberSignature Language="C#" Value="public static Exception ExceptEmpty (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptEmpty(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptEmpty(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptEmpty (ctx As IExceptionContext, paramName As String, msg As String) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptEmpty : Microsoft.ML.Runtime.IExceptionContext * string * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptEmpty (ctx, paramName, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptEmpty(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ paramName, System::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="paramName" Type="System.String" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="paramName">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptEmpty(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptEmpty">
        <MemberSignature Language="C#" Value="public static Exception ExceptEmpty (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg, params object[] args);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptEmpty(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg, object[] args) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptEmpty(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String,System.Object[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptEmpty (ctx As IExceptionContext, paramName As String, msg As String, ParamArray args As Object()) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptEmpty : Microsoft.ML.Runtime.IExceptionContext * string * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptEmpty (ctx, paramName, msg, args)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptEmpty(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ paramName, System::String ^ msg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="paramName" Type="System.String" />
          <Parameter Name="msg" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="paramName">To be added.</param>
          <param name="msg">To be added.</param>
          <param name="args">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptEmpty(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String,System.Object[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptIO">
        <MemberSignature Language="C#" Value="public static Exception ExceptIO (this Microsoft.ML.Runtime.IExceptionContext ctx);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptIO(class Microsoft.ML.Runtime.IExceptionContext ctx) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptIO(Microsoft.ML.Runtime.IExceptionContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptIO (ctx As IExceptionContext) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptIO : Microsoft.ML.Runtime.IExceptionContext -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptIO ctx" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptIO(Microsoft::ML::Runtime::IExceptionContext ^ ctx);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptIO(Microsoft.ML.Runtime.IExceptionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptIO">
        <MemberSignature Language="C#" Value="public static Exception ExceptIO (this Microsoft.ML.Runtime.IExceptionContext ctx, Exception inner, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptIO(class Microsoft.ML.Runtime.IExceptionContext ctx, class System.Exception inner, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptIO(Microsoft.ML.Runtime.IExceptionContext,System.Exception,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptIO (ctx As IExceptionContext, inner As Exception, msg As String) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptIO : Microsoft.ML.Runtime.IExceptionContext * Exception * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptIO (ctx, inner, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptIO(Microsoft::ML::Runtime::IExceptionContext ^ ctx, Exception ^ inner, System::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="inner" Type="System.Exception" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="inner">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptIO(Microsoft.ML.Runtime.IExceptionContext,System.Exception,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptIO">
        <MemberSignature Language="C#" Value="public static Exception ExceptIO (this Microsoft.ML.Runtime.IExceptionContext ctx, Exception inner, string msg, params object[] args);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptIO(class Microsoft.ML.Runtime.IExceptionContext ctx, class System.Exception inner, string msg, object[] args) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptIO(Microsoft.ML.Runtime.IExceptionContext,System.Exception,System.String,System.Object[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptIO (ctx As IExceptionContext, inner As Exception, msg As String, ParamArray args As Object()) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptIO : Microsoft.ML.Runtime.IExceptionContext * Exception * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptIO (ctx, inner, msg, args)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptIO(Microsoft::ML::Runtime::IExceptionContext ^ ctx, Exception ^ inner, System::String ^ msg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="inner" Type="System.Exception" />
          <Parameter Name="msg" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="inner">To be added.</param>
          <param name="msg">To be added.</param>
          <param name="args">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptIO(Microsoft.ML.Runtime.IExceptionContext,System.Exception,System.String,System.Object[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptIO">
        <MemberSignature Language="C#" Value="public static Exception ExceptIO (this Microsoft.ML.Runtime.IExceptionContext ctx, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptIO(class Microsoft.ML.Runtime.IExceptionContext ctx, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptIO(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptIO (ctx As IExceptionContext, msg As String) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptIO : Microsoft.ML.Runtime.IExceptionContext * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptIO (ctx, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptIO(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptIO(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptIO">
        <MemberSignature Language="C#" Value="public static Exception ExceptIO (this Microsoft.ML.Runtime.IExceptionContext ctx, string msg, params object[] args);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptIO(class Microsoft.ML.Runtime.IExceptionContext ctx, string msg, object[] args) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptIO(Microsoft.ML.Runtime.IExceptionContext,System.String,System.Object[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptIO (ctx As IExceptionContext, msg As String, ParamArray args As Object()) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptIO : Microsoft.ML.Runtime.IExceptionContext * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptIO (ctx, msg, args)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptIO(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ msg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="msg" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="msg">To be added.</param>
          <param name="args">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptIO(Microsoft.ML.Runtime.IExceptionContext,System.String,System.Object[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptNotImpl">
        <MemberSignature Language="C#" Value="public static Exception ExceptNotImpl (this Microsoft.ML.Runtime.IExceptionContext ctx);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptNotImpl(class Microsoft.ML.Runtime.IExceptionContext ctx) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptNotImpl(Microsoft.ML.Runtime.IExceptionContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptNotImpl (ctx As IExceptionContext) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptNotImpl : Microsoft.ML.Runtime.IExceptionContext -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptNotImpl ctx" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptNotImpl(Microsoft::ML::Runtime::IExceptionContext ^ ctx);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptNotImpl(Microsoft.ML.Runtime.IExceptionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptNotImpl">
        <MemberSignature Language="C#" Value="public static Exception ExceptNotImpl (this Microsoft.ML.Runtime.IExceptionContext ctx, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptNotImpl(class Microsoft.ML.Runtime.IExceptionContext ctx, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptNotImpl(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptNotImpl (ctx As IExceptionContext, msg As String) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptNotImpl : Microsoft.ML.Runtime.IExceptionContext * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptNotImpl (ctx, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptNotImpl(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptNotImpl(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptNotImpl">
        <MemberSignature Language="C#" Value="public static Exception ExceptNotImpl (this Microsoft.ML.Runtime.IExceptionContext ctx, string msg, params object[] args);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptNotImpl(class Microsoft.ML.Runtime.IExceptionContext ctx, string msg, object[] args) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptNotImpl(Microsoft.ML.Runtime.IExceptionContext,System.String,System.Object[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptNotImpl (ctx As IExceptionContext, msg As String, ParamArray args As Object()) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptNotImpl : Microsoft.ML.Runtime.IExceptionContext * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptNotImpl (ctx, msg, args)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptNotImpl(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ msg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="msg" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="msg">To be added.</param>
          <param name="args">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptNotImpl(Microsoft.ML.Runtime.IExceptionContext,System.String,System.Object[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptNotSupp">
        <MemberSignature Language="C#" Value="public static Exception ExceptNotSupp (this Microsoft.ML.Runtime.IExceptionContext ctx);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptNotSupp(class Microsoft.ML.Runtime.IExceptionContext ctx) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptNotSupp(Microsoft.ML.Runtime.IExceptionContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptNotSupp (ctx As IExceptionContext) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptNotSupp : Microsoft.ML.Runtime.IExceptionContext -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptNotSupp ctx" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptNotSupp(Microsoft::ML::Runtime::IExceptionContext ^ ctx);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptNotSupp(Microsoft.ML.Runtime.IExceptionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptNotSupp">
        <MemberSignature Language="C#" Value="public static Exception ExceptNotSupp (this Microsoft.ML.Runtime.IExceptionContext ctx, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptNotSupp(class Microsoft.ML.Runtime.IExceptionContext ctx, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptNotSupp(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptNotSupp (ctx As IExceptionContext, msg As String) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptNotSupp : Microsoft.ML.Runtime.IExceptionContext * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptNotSupp (ctx, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptNotSupp(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptNotSupp(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptNotSupp">
        <MemberSignature Language="C#" Value="public static Exception ExceptNotSupp (this Microsoft.ML.Runtime.IExceptionContext ctx, string msg, params object[] args);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptNotSupp(class Microsoft.ML.Runtime.IExceptionContext ctx, string msg, object[] args) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptNotSupp(Microsoft.ML.Runtime.IExceptionContext,System.String,System.Object[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptNotSupp (ctx As IExceptionContext, msg As String, ParamArray args As Object()) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptNotSupp : Microsoft.ML.Runtime.IExceptionContext * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptNotSupp (ctx, msg, args)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptNotSupp(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ msg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="msg" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="msg">To be added.</param>
          <param name="args">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptNotSupp(Microsoft.ML.Runtime.IExceptionContext,System.String,System.Object[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptParam">
        <MemberSignature Language="C#" Value="public static Exception ExceptParam (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptParam(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptParam(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptParam (ctx As IExceptionContext, paramName As String) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptParam : Microsoft.ML.Runtime.IExceptionContext * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptParam (ctx, paramName)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptParam(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ paramName);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="paramName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="paramName">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptParam(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptParam">
        <MemberSignature Language="C#" Value="public static Exception ExceptParam (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptParam(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptParam(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptParam (ctx As IExceptionContext, paramName As String, msg As String) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptParam : Microsoft.ML.Runtime.IExceptionContext * string * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptParam (ctx, paramName, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptParam(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ paramName, System::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="paramName" Type="System.String" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="paramName">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptParam(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptParam">
        <MemberSignature Language="C#" Value="public static Exception ExceptParam (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg, params object[] args);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptParam(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg, object[] args) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptParam(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String,System.Object[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptParam (ctx As IExceptionContext, paramName As String, msg As String, ParamArray args As Object()) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptParam : Microsoft.ML.Runtime.IExceptionContext * string * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptParam (ctx, paramName, msg, args)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptParam(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ paramName, System::String ^ msg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="paramName" Type="System.String" />
          <Parameter Name="msg" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="paramName">To be added.</param>
          <param name="msg">To be added.</param>
          <param name="args">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptParam(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String,System.Object[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptParamValue&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static Exception ExceptParamValue&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T value, string paramName, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptParamValue&lt;T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T value, string paramName, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptParamValue``1(Microsoft.ML.Runtime.IExceptionContext,``0,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptParamValue(Of T) (ctx As IExceptionContext, value As T, paramName As String, msg As String) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptParamValue : Microsoft.ML.Runtime.IExceptionContext * 'T * string * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptParamValue (ctx, value, paramName, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptParamValue(Microsoft::ML::Runtime::IExceptionContext ^ ctx, T value, System::String ^ paramName, System::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="value" Type="T" />
          <Parameter Name="paramName" Type="System.String" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="ctx">To be added.</param>
          <param name="value">To be added.</param>
          <param name="paramName">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptParamValue``1(Microsoft.ML.Runtime.IExceptionContext,``0,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptParamValue&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static Exception ExceptParamValue&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T value, string paramName, string msg, params object[] args);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptParamValue&lt;T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T value, string paramName, string msg, object[] args) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptParamValue``1(Microsoft.ML.Runtime.IExceptionContext,``0,System.String,System.String,System.Object[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptParamValue(Of T) (ctx As IExceptionContext, value As T, paramName As String, msg As String, ParamArray args As Object()) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptParamValue : Microsoft.ML.Runtime.IExceptionContext * 'T * string * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptParamValue (ctx, value, paramName, msg, args)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptParamValue(Microsoft::ML::Runtime::IExceptionContext ^ ctx, T value, System::String ^ paramName, System::String ^ msg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="value" Type="T" />
          <Parameter Name="paramName" Type="System.String" />
          <Parameter Name="msg" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="ctx">To be added.</param>
          <param name="value">To be added.</param>
          <param name="paramName">To be added.</param>
          <param name="msg">To be added.</param>
          <param name="args">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptParamValue``1(Microsoft.ML.Runtime.IExceptionContext,``0,System.String,System.String,System.Object[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptUserArg">
        <MemberSignature Language="C#" Value="public static Exception ExceptUserArg (this Microsoft.ML.Runtime.IExceptionContext ctx, string name);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptUserArg(class Microsoft.ML.Runtime.IExceptionContext ctx, string name) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptUserArg(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptUserArg (ctx As IExceptionContext, name As String) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptUserArg : Microsoft.ML.Runtime.IExceptionContext * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptUserArg (ctx, name)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptUserArg(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ name);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="name">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptUserArg(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptUserArg">
        <MemberSignature Language="C#" Value="public static Exception ExceptUserArg (this Microsoft.ML.Runtime.IExceptionContext ctx, string name, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptUserArg(class Microsoft.ML.Runtime.IExceptionContext ctx, string name, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptUserArg(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptUserArg (ctx As IExceptionContext, name As String, msg As String) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptUserArg : Microsoft.ML.Runtime.IExceptionContext * string * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptUserArg (ctx, name, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptUserArg(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ name, System::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="name">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptUserArg(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptUserArg">
        <MemberSignature Language="C#" Value="public static Exception ExceptUserArg (this Microsoft.ML.Runtime.IExceptionContext ctx, string name, string msg, params object[] args);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptUserArg(class Microsoft.ML.Runtime.IExceptionContext ctx, string name, string msg, object[] args) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptUserArg(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String,System.Object[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptUserArg (ctx As IExceptionContext, name As String, msg As String, ParamArray args As Object()) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptUserArg : Microsoft.ML.Runtime.IExceptionContext * string * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptUserArg (ctx, name, msg, args)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptUserArg(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ name, System::String ^ msg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="msg" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="name">To be added.</param>
          <param name="msg">To be added.</param>
          <param name="args">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptUserArg(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String,System.Object[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptValue">
        <MemberSignature Language="C#" Value="public static Exception ExceptValue (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptValue(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptValue(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptValue (ctx As IExceptionContext, paramName As String) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptValue : Microsoft.ML.Runtime.IExceptionContext * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptValue (ctx, paramName)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptValue(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ paramName);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="paramName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="paramName">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptValue(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptValue">
        <MemberSignature Language="C#" Value="public static Exception ExceptValue (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptValue(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptValue(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptValue (ctx As IExceptionContext, paramName As String, msg As String) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptValue : Microsoft.ML.Runtime.IExceptionContext * string * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptValue (ctx, paramName, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptValue(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ paramName, System::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="paramName" Type="System.String" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="paramName">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptValue(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptValue">
        <MemberSignature Language="C#" Value="public static Exception ExceptValue (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg, params object[] args);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptValue(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg, object[] args) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptValue(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String,System.Object[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptValue (ctx As IExceptionContext, paramName As String, msg As String, ParamArray args As Object()) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptValue : Microsoft.ML.Runtime.IExceptionContext * string * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptValue (ctx, paramName, msg, args)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptValue(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ paramName, System::String ^ msg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="paramName" Type="System.String" />
          <Parameter Name="msg" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="paramName">To be added.</param>
          <param name="msg">To be added.</param>
          <param name="args">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptValue(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String,System.Object[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptWhiteSpace">
        <MemberSignature Language="C#" Value="public static Exception ExceptWhiteSpace (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptWhiteSpace(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptWhiteSpace(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptWhiteSpace (ctx As IExceptionContext, paramName As String) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptWhiteSpace : Microsoft.ML.Runtime.IExceptionContext * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptWhiteSpace (ctx, paramName)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptWhiteSpace(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ paramName);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="paramName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="paramName">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptWhiteSpace(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptWhiteSpace">
        <MemberSignature Language="C#" Value="public static Exception ExceptWhiteSpace (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptWhiteSpace(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptWhiteSpace(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptWhiteSpace (ctx As IExceptionContext, paramName As String, msg As String) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptWhiteSpace : Microsoft.ML.Runtime.IExceptionContext * string * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptWhiteSpace (ctx, paramName, msg)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptWhiteSpace(Microsoft::ML::Runtime::IExceptionContext ^ ctx, System::String ^ paramName, System::String ^ msg);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
          <Parameter Name="paramName" Type="System.String" />
          <Parameter Name="msg" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="paramName">To be added.</param>
          <param name="msg">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.ExceptWhiteSpace(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Exception" />
      </Targets>
      <Member MemberName="IsMarked">
        <MemberSignature Language="C#" Value="public static bool IsMarked (this Exception ex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMarked(class System.Exception ex) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.IsMarked(System.Exception)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsMarked (ex As Exception) As Boolean" />
        <MemberSignature Language="F#" Value="static member IsMarked : Exception -&gt; bool" Usage="Microsoft.ML.Runtime.Contracts.IsMarked ex" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsMarked(Exception ^ ex);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ex" Type="System.Exception" RefType="this" />
        </Parameters>
        <Docs>
          <param name="ex">To be added.</param>
          <summary>
            Indicates whether the exception was "marked" the Contracts code.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.IsMarked(System.Exception)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Exception" />
      </Targets>
      <Member MemberName="MarkSensitive&lt;TException&gt;">
        <MemberSignature Language="C#" Value="public static TException MarkSensitive&lt;TException&gt; (this TException ex, Microsoft.ML.Runtime.MessageSensitivity sensitivity) where TException : Exception;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TException MarkSensitive&lt;(class System.Exception) TException&gt;(!!TException ex, valuetype Microsoft.ML.Runtime.MessageSensitivity sensitivity) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.MarkSensitive``1(``0,Microsoft.ML.Runtime.MessageSensitivity)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function MarkSensitive(Of TException As Exception) (ex As TException, sensitivity As MessageSensitivity) As TException" />
        <MemberSignature Language="F#" Value="static member MarkSensitive : 'Exception * Microsoft.ML.Runtime.MessageSensitivity -&gt; 'Exception (requires 'Exception :&gt; Exception)" Usage="Microsoft.ML.Runtime.Contracts.MarkSensitive (ex, sensitivity)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TException&gt;&#xA; where TException : Exception[System::Runtime::CompilerServices::Extension]&#xA; static TException MarkSensitive(TException ex, Microsoft::ML::Runtime::MessageSensitivity sensitivity);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename TException&gt;&#xA; where TException : Exception[System::Runtime::CompilerServices::Extension]&#xA; static TException MarkSensitive(TException ex, Microsoft::ML::Runtime::MessageSensitivity sensitivity);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>TException</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TException">
            <Constraints>
              <BaseTypeName>System.Exception</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="ex" Type="TException" RefType="this" />
          <Parameter Name="sensitivity" Type="Microsoft.ML.Runtime.MessageSensitivity" />
        </Parameters>
        <Docs>
          <typeparam name="TException">To be added.</typeparam>
          <param name="ex">To be added.</param>
          <param name="sensitivity">To be added.</param>
          <summary>
            Exceptions whose message communicates potentially sensitive information should be
            marked using this method, before they are thrown. Note that if the exception already
            had this flag set, the message will be flagged with the bitwise or of the existing
            flag, alongside the passed in sensivity.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.MarkSensitive``1(``0,Microsoft.ML.Runtime.MessageSensitivity)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="NotSensitive">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.IExceptionContext NotSensitive (this Microsoft.ML.Runtime.IExceptionContext ctx);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.IExceptionContext NotSensitive(class Microsoft.ML.Runtime.IExceptionContext ctx) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.NotSensitive(Microsoft.ML.Runtime.IExceptionContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NotSensitive (ctx As IExceptionContext) As IExceptionContext" />
        <MemberSignature Language="F#" Value="static member NotSensitive : Microsoft.ML.Runtime.IExceptionContext -&gt; Microsoft.ML.Runtime.IExceptionContext" Usage="Microsoft.ML.Runtime.Contracts.NotSensitive ctx" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::IExceptionContext ^ NotSensitive(Microsoft::ML::Runtime::IExceptionContext ^ ctx);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::IExceptionContext ^ NotSensitive(Microsoft::ML::Runtime::IExceptionContext ^ ctx);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.IExceptionContext</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <summary>
            A convenience context for marking exceptions from checks and excepts with <see cref="F:Microsoft.ML.Runtime.MessageSensitivity.None" />.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.NotSensitive(Microsoft.ML.Runtime.IExceptionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Exception" />
      </Targets>
      <Member MemberName="Process&lt;TException&gt;">
        <MemberSignature Language="C#" Value="public static TException Process&lt;TException&gt; (this TException ex, Microsoft.ML.Runtime.IExceptionContext ectx = null) where TException : Exception;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TException Process&lt;(class System.Exception) TException&gt;(!!TException ex, class Microsoft.ML.Runtime.IExceptionContext ectx) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Process``1(``0,Microsoft.ML.Runtime.IExceptionContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Process(Of TException As Exception) (ex As TException, Optional ectx As IExceptionContext = null) As TException" />
        <MemberSignature Language="F#" Value="static member Process : 'Exception * Microsoft.ML.Runtime.IExceptionContext -&gt; 'Exception (requires 'Exception :&gt; Exception)" Usage="Microsoft.ML.Runtime.Contracts.Process (ex, ectx)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>TException</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TException">
            <Constraints>
              <BaseTypeName>System.Exception</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="ex" Type="TException" RefType="this" />
          <Parameter Name="ectx" Type="Microsoft.ML.Runtime.IExceptionContext" />
        </Parameters>
        <Docs>
          <typeparam name="TException">To be added.</typeparam>
          <param name="ex">To be added.</param>
          <param name="ectx">To be added.</param>
          <summary>
            Does standard processing of an exception (typically called after construction
            but before it is thrown).
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.Process``1(``0,Microsoft.ML.Runtime.IExceptionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="SchemaSensitive">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.IExceptionContext SchemaSensitive (this Microsoft.ML.Runtime.IExceptionContext ctx);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.IExceptionContext SchemaSensitive(class Microsoft.ML.Runtime.IExceptionContext ctx) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.SchemaSensitive(Microsoft.ML.Runtime.IExceptionContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SchemaSensitive (ctx As IExceptionContext) As IExceptionContext" />
        <MemberSignature Language="F#" Value="static member SchemaSensitive : Microsoft.ML.Runtime.IExceptionContext -&gt; Microsoft.ML.Runtime.IExceptionContext" Usage="Microsoft.ML.Runtime.Contracts.SchemaSensitive ctx" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::IExceptionContext ^ SchemaSensitive(Microsoft::ML::Runtime::IExceptionContext ^ ctx);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::IExceptionContext ^ SchemaSensitive(Microsoft::ML::Runtime::IExceptionContext ^ ctx);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.IExceptionContext</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <summary>
            A convenience context for marking exceptions from checks and excepts with <see cref="F:Microsoft.ML.Runtime.MessageSensitivity.Schema" />.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.SchemaSensitive(Microsoft.ML.Runtime.IExceptionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Exception" />
      </Targets>
      <Member MemberName="Sensitivity">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.MessageSensitivity Sensitivity (this Exception ex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.ML.Runtime.MessageSensitivity Sensitivity(class System.Exception ex) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Sensitivity(System.Exception)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sensitivity (ex As Exception) As MessageSensitivity" />
        <MemberSignature Language="F#" Value="static member Sensitivity : Exception -&gt; Microsoft.ML.Runtime.MessageSensitivity" Usage="Microsoft.ML.Runtime.Contracts.Sensitivity ex" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::MessageSensitivity Sensitivity(Exception ^ ex);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.MessageSensitivity</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ex" Type="System.Exception" RefType="this" />
        </Parameters>
        <Docs>
          <param name="ex">The exception to query</param>
          <summary>
            This is a convenience method to get the sensitivity of an exception,
            as encoded with <see cref="F:Microsoft.ML.Runtime.Contracts.SensitivityKey" />. If there is no key, then
            the message is assumed to be of unknown sensitivity, i.e., it is assumed
            that it might contain literally anything.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.Sensitivity(System.Exception)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="UserSensitive">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.IExceptionContext UserSensitive (this Microsoft.ML.Runtime.IExceptionContext ctx);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.IExceptionContext UserSensitive(class Microsoft.ML.Runtime.IExceptionContext ctx) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.UserSensitive(Microsoft.ML.Runtime.IExceptionContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UserSensitive (ctx As IExceptionContext) As IExceptionContext" />
        <MemberSignature Language="F#" Value="static member UserSensitive : Microsoft.ML.Runtime.IExceptionContext -&gt; Microsoft.ML.Runtime.IExceptionContext" Usage="Microsoft.ML.Runtime.Contracts.UserSensitive ctx" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::IExceptionContext ^ UserSensitive(Microsoft::ML::Runtime::IExceptionContext ^ ctx);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::IExceptionContext ^ UserSensitive(Microsoft::ML::Runtime::IExceptionContext ^ ctx);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.IExceptionContext</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <summary>
            A convenience context for marking exceptions from checks and excepts with <see cref="F:Microsoft.ML.Runtime.MessageSensitivity.UserData" />.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Contracts" Member="M:Microsoft.ML.Runtime.Contracts.UserSensitive(Microsoft.ML.Runtime.IExceptionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.DataKind" />
      </Targets>
      <Member MemberName="GetString">
        <MemberSignature Language="C#" Value="public static string GetString (this Microsoft.ML.Runtime.Data.DataKind kind);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetString(valuetype Microsoft.ML.Runtime.Data.DataKind kind) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DataKindExtensions.GetString(Microsoft.ML.Runtime.Data.DataKind)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetString (kind As DataKind) As String" />
        <MemberSignature Language="F#" Value="static member GetString : Microsoft.ML.Runtime.Data.DataKind -&gt; string" Usage="Microsoft.ML.Runtime.Data.DataKindExtensions.GetString kind" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ GetString(Microsoft::ML::Runtime::Data::DataKind kind);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Platform::String ^ GetString(Microsoft::ML::Runtime::Data::DataKind kind);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="kind" Type="Microsoft.ML.Runtime.Data.DataKind" RefType="this" />
        </Parameters>
        <Docs>
          <param name="kind">To be added.</param>
          <summary>
            Get the canonical string for a DataKind. Note that using DataKind.ToString() is not stable
            and is also slow, so use this instead.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.DataKindExtensions" Member="M:Microsoft.ML.Runtime.Data.DataKindExtensions.GetString(Microsoft.ML.Runtime.Data.DataKind)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.DataKind" />
      </Targets>
      <Member MemberName="ToIndex">
        <MemberSignature Language="C#" Value="public static int ToIndex (this Microsoft.ML.Runtime.Data.DataKind kind);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToIndex(valuetype Microsoft.ML.Runtime.Data.DataKind kind) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DataKindExtensions.ToIndex(Microsoft.ML.Runtime.Data.DataKind)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToIndex (kind As DataKind) As Integer" />
        <MemberSignature Language="F#" Value="static member ToIndex : Microsoft.ML.Runtime.Data.DataKind -&gt; int" Usage="Microsoft.ML.Runtime.Data.DataKindExtensions.ToIndex kind" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int ToIndex(Microsoft::ML::Runtime::Data::DataKind kind);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int ToIndex(Microsoft::ML::Runtime::Data::DataKind kind);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="kind" Type="Microsoft.ML.Runtime.Data.DataKind" RefType="this" />
        </Parameters>
        <Docs>
          <param name="kind">To be added.</param>
          <summary>
            Maps a DataKind to a value suitable for indexing into an array of size KindCount.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.DataKindExtensions" Member="M:Microsoft.ML.Runtime.Data.DataKindExtensions.ToIndex(Microsoft.ML.Runtime.Data.DataKind)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.DataKind" />
      </Targets>
      <Member MemberName="ToMaxInt">
        <MemberSignature Language="C#" Value="public static ulong ToMaxInt (this Microsoft.ML.Runtime.Data.DataKind kind);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToMaxInt(valuetype Microsoft.ML.Runtime.Data.DataKind kind) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DataKindExtensions.ToMaxInt(Microsoft.ML.Runtime.Data.DataKind)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToMaxInt (kind As DataKind) As ULong" />
        <MemberSignature Language="F#" Value="static member ToMaxInt : Microsoft.ML.Runtime.Data.DataKind -&gt; uint64" Usage="Microsoft.ML.Runtime.Data.DataKindExtensions.ToMaxInt kind" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::UInt64 ToMaxInt(Microsoft::ML::Runtime::Data::DataKind kind);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static unsigned long long ToMaxInt(Microsoft::ML::Runtime::Data::DataKind kind);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.UInt64</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="kind" Type="Microsoft.ML.Runtime.Data.DataKind" RefType="this" />
        </Parameters>
        <Docs>
          <param name="kind">To be added.</param>
          <summary>
            For integer DataKinds, this returns the maximum legal value. For un-supported kinds,
            it returns zero.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.DataKindExtensions" Member="M:Microsoft.ML.Runtime.Data.DataKindExtensions.ToMaxInt(Microsoft.ML.Runtime.Data.DataKind)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.DataKind" />
      </Targets>
      <Member MemberName="ToMinInt">
        <MemberSignature Language="C#" Value="public static long ToMinInt (this Microsoft.ML.Runtime.Data.DataKind kind);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToMinInt(valuetype Microsoft.ML.Runtime.Data.DataKind kind) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DataKindExtensions.ToMinInt(Microsoft.ML.Runtime.Data.DataKind)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToMinInt (kind As DataKind) As Long" />
        <MemberSignature Language="F#" Value="static member ToMinInt : Microsoft.ML.Runtime.Data.DataKind -&gt; int64" Usage="Microsoft.ML.Runtime.Data.DataKindExtensions.ToMinInt kind" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long ToMinInt(Microsoft::ML::Runtime::Data::DataKind kind);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long long ToMinInt(Microsoft::ML::Runtime::Data::DataKind kind);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int64</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="kind" Type="Microsoft.ML.Runtime.Data.DataKind" RefType="this" />
        </Parameters>
        <Docs>
          <param name="kind">To be added.</param>
          <summary>
            For integer DataKinds, this returns the minimum legal value. For un-supported kinds,
            it returns one.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.DataKindExtensions" Member="M:Microsoft.ML.Runtime.Data.DataKindExtensions.ToMinInt(Microsoft.ML.Runtime.Data.DataKind)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.DataKind" />
      </Targets>
      <Member MemberName="ToType">
        <MemberSignature Language="C#" Value="public static Type ToType (this Microsoft.ML.Runtime.Data.DataKind kind);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type ToType(valuetype Microsoft.ML.Runtime.Data.DataKind kind) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DataKindExtensions.ToType(Microsoft.ML.Runtime.Data.DataKind)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToType (kind As DataKind) As Type" />
        <MemberSignature Language="F#" Value="static member ToType : Microsoft.ML.Runtime.Data.DataKind -&gt; Type" Usage="Microsoft.ML.Runtime.Data.DataKindExtensions.ToType kind" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Type ^ ToType(Microsoft::ML::Runtime::Data::DataKind kind);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Platform::Type ^ ToType(Microsoft::ML::Runtime::Data::DataKind kind);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Type</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="kind" Type="Microsoft.ML.Runtime.Data.DataKind" RefType="this" />
        </Parameters>
        <Docs>
          <param name="kind">To be added.</param>
          <summary>
            Maps a DataKind to the associated .Net representation type.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.DataKindExtensions" Member="M:Microsoft.ML.Runtime.Data.DataKindExtensions.ToType(Microsoft.ML.Runtime.Data.DataKind)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Type" />
      </Targets>
      <Member MemberName="TryGetDataKind">
        <MemberSignature Language="C#" Value="public static bool TryGetDataKind (this Type type, out Microsoft.ML.Runtime.Data.DataKind kind);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetDataKind(class System.Type type, [out] valuetype Microsoft.ML.Runtime.Data.DataKind&amp; kind) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DataKindExtensions.TryGetDataKind(System.Type,Microsoft.ML.Runtime.Data.DataKind@)" />
        <MemberSignature Language="F#" Value="static member TryGetDataKind : Type *  -&gt; bool" Usage="Microsoft.ML.Runtime.Data.DataKindExtensions.TryGetDataKind (type, kind)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryGetDataKind(Type ^ type, [Runtime::InteropServices::Out] Microsoft::ML::Runtime::Data::DataKind % kind);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryGetDataKind(Platform::Type ^ type, [Runtime::InteropServices::Out] Microsoft::ML::Runtime::Data::DataKind &amp;  kind);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="type" Type="System.Type" RefType="this" />
          <Parameter Name="kind" Type="Microsoft.ML.Runtime.Data.DataKind&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="type">To be added.</param>
          <param name="kind">To be added.</param>
          <summary>
            Try to map a System.Type to a corresponding DataKind value.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.DataKindExtensions" Member="M:Microsoft.ML.Runtime.Data.DataKindExtensions.TryGetDataKind(System.Type,Microsoft.ML.Runtime.Data.DataKind@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.ISchema" />
      </Targets>
      <Member MemberName="GetTempColumnName">
        <MemberSignature Language="C#" Value="public static string GetTempColumnName (this Microsoft.ML.Runtime.Data.ISchema schema, string tag = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTempColumnName(class Microsoft.ML.Runtime.Data.ISchema schema, string tag) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DataViewUtils.GetTempColumnName(Microsoft.ML.Runtime.Data.ISchema,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTempColumnName (schema As ISchema, Optional tag As String = null) As String" />
        <MemberSignature Language="F#" Value="static member GetTempColumnName : Microsoft.ML.Runtime.Data.ISchema * string -&gt; string" Usage="Microsoft.ML.Runtime.Data.DataViewUtils.GetTempColumnName (schema, tag)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.ISchema" RefType="this" />
          <Parameter Name="tag" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="schema">To be added.</param>
          <param name="tag">To be added.</param>
          <summary>
            Generate a unique temporary column name for the given schema.
            Use tag to independently create multiple temporary, unique column
            names for a single transform.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.DataViewUtils" Member="M:Microsoft.ML.Runtime.Data.DataViewUtils.GetTempColumnName(Microsoft.ML.Runtime.Data.ISchema,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.ISchema" />
      </Targets>
      <Member MemberName="GetTempColumnNames">
        <MemberSignature Language="C#" Value="public static string[] GetTempColumnNames (this Microsoft.ML.Runtime.Data.ISchema schema, int n, string tag = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetTempColumnNames(class Microsoft.ML.Runtime.Data.ISchema schema, int32 n, string tag) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DataViewUtils.GetTempColumnNames(Microsoft.ML.Runtime.Data.ISchema,System.Int32,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTempColumnNames (schema As ISchema, n As Integer, Optional tag As String = null) As String()" />
        <MemberSignature Language="F#" Value="static member GetTempColumnNames : Microsoft.ML.Runtime.Data.ISchema * int * string -&gt; string[]" Usage="Microsoft.ML.Runtime.Data.DataViewUtils.GetTempColumnNames (schema, n, tag)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.ISchema" RefType="this" />
          <Parameter Name="n" Type="System.Int32" />
          <Parameter Name="tag" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="schema">To be added.</param>
          <param name="n">To be added.</param>
          <param name="tag">To be added.</param>
          <summary>
            Generate n unique temporary column names for the given schema.
            Use tag to independently create multiple temporary, unique column
            names for a single transform.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.DataViewUtils" Member="M:Microsoft.ML.Runtime.Data.DataViewUtils.GetTempColumnNames(Microsoft.ML.Runtime.Data.ISchema,System.Int32,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.ColumnType" />
      </Targets>
      <Member MemberName="IsCachable">
        <MemberSignature Language="C#" Value="public static bool IsCachable (this Microsoft.ML.Runtime.Data.ColumnType type);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsCachable(class Microsoft.ML.Runtime.Data.ColumnType type) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.DataViewUtils.IsCachable(Microsoft.ML.Runtime.Data.ColumnType)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsCachable (type As ColumnType) As Boolean" />
        <MemberSignature Language="F#" Value="static member IsCachable : Microsoft.ML.Runtime.Data.ColumnType -&gt; bool" Usage="Microsoft.ML.Runtime.Data.DataViewUtils.IsCachable type" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsCachable(Microsoft::ML::Runtime::Data::ColumnType ^ type);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="type" Type="Microsoft.ML.Runtime.Data.ColumnType" RefType="this" />
        </Parameters>
        <Docs>
          <param name="type">To be added.</param>
          <summary>
            Determine whether the given type is cachable - either a primitive type or a vector type.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.DataViewUtils" Member="M:Microsoft.ML.Runtime.Data.DataViewUtils.IsCachable(Microsoft.ML.Runtime.Data.ColumnType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.IO.CompressionKind" />
      </Targets>
      <Member MemberName="CompressStream">
        <MemberSignature Language="C#" Value="public static System.IO.Stream CompressStream (this Microsoft.ML.Runtime.Data.IO.CompressionKind compression, System.IO.Stream stream);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream CompressStream(valuetype Microsoft.ML.Runtime.Data.IO.CompressionKind compression, class System.IO.Stream stream) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.IO.CompressionCodecExtension.CompressStream(Microsoft.ML.Runtime.Data.IO.CompressionKind,System.IO.Stream)" />
        <MemberSignature Language="F#" Value="static member CompressStream : Microsoft.ML.Runtime.Data.IO.CompressionKind * System.IO.Stream -&gt; System.IO.Stream" Usage="Microsoft.ML.Runtime.Data.IO.CompressionCodecExtension.CompressStream (compression, stream)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Stream ^ CompressStream(Microsoft::ML::Runtime::Data::IO::CompressionKind compression, System::IO::Stream ^ stream);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IO.Stream</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="compression" Type="Microsoft.ML.Runtime.Data.IO.CompressionKind" RefType="this" />
          <Parameter Name="stream" Type="System.IO.Stream" />
        </Parameters>
        <Docs>
          <param name="compression">The compression codec</param>
          <param name="stream">The stream to which compressed data will be written</param>
          <summary>
            Generate an appropriate wrapping compressing stream for the codec. This
            stream will be closable and disposable, without closing or disposing of
            the passed in stream. The scheme for compression is not in any way
            parameterizable.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.IO.CompressionCodecExtension" Member="M:Microsoft.ML.Runtime.Data.IO.CompressionCodecExtension.CompressStream(Microsoft.ML.Runtime.Data.IO.CompressionKind,System.IO.Stream)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.IO.CompressionKind" />
      </Targets>
      <Member MemberName="DecompressStream">
        <MemberSignature Language="C#" Value="public static System.IO.Stream DecompressStream (this Microsoft.ML.Runtime.Data.IO.CompressionKind compression, System.IO.Stream stream);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream DecompressStream(valuetype Microsoft.ML.Runtime.Data.IO.CompressionKind compression, class System.IO.Stream stream) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.IO.CompressionCodecExtension.DecompressStream(Microsoft.ML.Runtime.Data.IO.CompressionKind,System.IO.Stream)" />
        <MemberSignature Language="F#" Value="static member DecompressStream : Microsoft.ML.Runtime.Data.IO.CompressionKind * System.IO.Stream -&gt; System.IO.Stream" Usage="Microsoft.ML.Runtime.Data.IO.CompressionCodecExtension.DecompressStream (compression, stream)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Stream ^ DecompressStream(Microsoft::ML::Runtime::Data::IO::CompressionKind compression, System::IO::Stream ^ stream);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IO.Stream</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="compression" Type="Microsoft.ML.Runtime.Data.IO.CompressionKind" RefType="this" />
          <Parameter Name="stream" Type="System.IO.Stream" />
        </Parameters>
        <Docs>
          <param name="compression">The compression codec</param>
          <param name="stream">The stream from which compressed data will be written</param>
          <summary>
            Generate an appropriate wrapping decompressing stream for the codec.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.IO.CompressionCodecExtension" Member="M:Microsoft.ML.Runtime.Data.IO.CompressionCodecExtension.DecompressStream(Microsoft.ML.Runtime.Data.IO.CompressionKind,System.IO.Stream)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IExceptionContext" />
      </Targets>
      <Member MemberName="ExceptGetMetadata">
        <MemberSignature Language="C#" Value="public static Exception ExceptGetMetadata (this Microsoft.ML.Runtime.IExceptionContext ctx);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptGetMetadata(class Microsoft.ML.Runtime.IExceptionContext ctx) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.ExceptGetMetadata(Microsoft.ML.Runtime.IExceptionContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptGetMetadata (ctx As IExceptionContext) As Exception" />
        <MemberSignature Language="F#" Value="static member ExceptGetMetadata : Microsoft.ML.Runtime.IExceptionContext -&gt; Exception" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.ExceptGetMetadata ctx" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptGetMetadata(Microsoft::ML::Runtime::IExceptionContext ^ ctx);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Exception</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <summary>
            Returns a standard exception for responding to an invalid call to GetMetadata.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.MetadataUtils" Member="M:Microsoft.ML.Runtime.Data.MetadataUtils.ExceptGetMetadata(Microsoft.ML.Runtime.IExceptionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.ISchema" />
      </Targets>
      <Member MemberName="GetColumnSet">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;int&gt; GetColumnSet (this Microsoft.ML.Runtime.Data.ISchema schema, string metadataKind, string value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;int32&gt; GetColumnSet(class Microsoft.ML.Runtime.Data.ISchema schema, string metadataKind, string value) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.GetColumnSet(Microsoft.ML.Runtime.Data.ISchema,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Iterator Function GetColumnSet (schema As ISchema, metadataKind As String, value As String) As IEnumerable(Of Integer)" />
        <MemberSignature Language="F#" Value="static member GetColumnSet : Microsoft.ML.Runtime.Data.ISchema * string * string -&gt; seq&lt;int&gt;" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.GetColumnSet (schema, metadataKind, value)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;int&gt; ^ GetColumnSet(Microsoft::ML::Runtime::Data::ISchema ^ schema, System::String ^ metadataKind, System::String ^ value);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Int32&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.ISchema" RefType="this" />
          <Parameter Name="metadataKind" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="schema">To be added.</param>
          <param name="metadataKind">To be added.</param>
          <param name="value">To be added.</param>
          <summary>
            Returns the set of column ids which match the value of specified metadata kind.
            The metadata type should be of type text.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.MetadataUtils" Member="M:Microsoft.ML.Runtime.Data.MetadataUtils.GetColumnSet(Microsoft.ML.Runtime.Data.ISchema,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.ISchema" />
      </Targets>
      <Member MemberName="GetColumnSet">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;int&gt; GetColumnSet (this Microsoft.ML.Runtime.Data.ISchema schema, string metadataKind, uint value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;int32&gt; GetColumnSet(class Microsoft.ML.Runtime.Data.ISchema schema, string metadataKind, unsigned int32 value) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.GetColumnSet(Microsoft.ML.Runtime.Data.ISchema,System.String,System.UInt32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Iterator Function GetColumnSet (schema As ISchema, metadataKind As String, value As UInteger) As IEnumerable(Of Integer)" />
        <MemberSignature Language="F#" Value="static member GetColumnSet : Microsoft.ML.Runtime.Data.ISchema * string * uint32 -&gt; seq&lt;int&gt;" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.GetColumnSet (schema, metadataKind, value)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;int&gt; ^ GetColumnSet(Microsoft::ML::Runtime::Data::ISchema ^ schema, System::String ^ metadataKind, System::UInt32 value);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Int32&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.ISchema" RefType="this" />
          <Parameter Name="metadataKind" Type="System.String" />
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
        <Docs>
          <param name="schema">To be added.</param>
          <param name="metadataKind">To be added.</param>
          <param name="value">To be added.</param>
          <summary>
            Returns the set of column ids which match the value of specified metadata kind.
            The metadata type should be a KeyType with raw type U4.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.MetadataUtils" Member="M:Microsoft.ML.Runtime.Data.MetadataUtils.GetColumnSet(Microsoft.ML.Runtime.Data.ISchema,System.String,System.UInt32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.ISchema" />
      </Targets>
      <Member MemberName="GetMaxMetadataKind">
        <MemberSignature Language="C#" Value="public static uint GetMaxMetadataKind (this Microsoft.ML.Runtime.Data.ISchema schema, out int colMax, string metadataKind, Func&lt;Microsoft.ML.Runtime.Data.ISchema,int,bool&gt; filterFunc = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 GetMaxMetadataKind(class Microsoft.ML.Runtime.Data.ISchema schema, [out] int32&amp; colMax, string metadataKind, class System.Func`3&lt;class Microsoft.ML.Runtime.Data.ISchema, int32, bool&gt; filterFunc) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.GetMaxMetadataKind(Microsoft.ML.Runtime.Data.ISchema,System.Int32@,System.String,System.Func{Microsoft.ML.Runtime.Data.ISchema,System.Int32,System.Boolean})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMaxMetadataKind (schema As ISchema, ByRef colMax As Integer, metadataKind As String, Optional filterFunc As Func(Of ISchema, Integer, Boolean) = null) As UInteger" />
        <MemberSignature Language="F#" Value="static member GetMaxMetadataKind : Microsoft.ML.Runtime.Data.ISchema *  * string * Func&lt;Microsoft.ML.Runtime.Data.ISchema, int, bool&gt; -&gt; uint32" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.GetMaxMetadataKind (schema, colMax, metadataKind, filterFunc)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.UInt32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.ISchema" RefType="this" />
          <Parameter Name="colMax" Type="System.Int32&amp;" RefType="out" />
          <Parameter Name="metadataKind" Type="System.String" />
          <Parameter Name="filterFunc" Type="System.Func&lt;Microsoft.ML.Runtime.Data.ISchema,System.Int32,System.Boolean&gt;" />
        </Parameters>
        <Docs>
          <param name="schema">To be added.</param>
          <param name="colMax">To be added.</param>
          <param name="metadataKind">To be added.</param>
          <param name="filterFunc">To be added.</param>
          <summary>
            Returns the max value for the specified metadata kind.
            The metadata type should be a KeyType with raw type U4.
            colMax will be set to the first column that has the max value for the specified metadata.
            If no column has the specified metadata, colMax is set to -1 and the method returns zero.
            The filter function is called for each column, passing in the schema and the column index, and returns
            true if the column should be considered, false if the column should be skipped.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.MetadataUtils" Member="M:Microsoft.ML.Runtime.Data.MetadataUtils.GetMaxMetadataKind(Microsoft.ML.Runtime.Data.ISchema,System.Int32@,System.String,System.Func{Microsoft.ML.Runtime.Data.ISchema,System.Int32,System.Boolean})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.ColumnType" />
      </Targets>
      <Member MemberName="GetPair">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,Microsoft.ML.Runtime.Data.ColumnType&gt; GetPair (this Microsoft.ML.Runtime.Data.ColumnType type, string kind);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class Microsoft.ML.Runtime.Data.ColumnType&gt; GetPair(class Microsoft.ML.Runtime.Data.ColumnType type, string kind) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.GetPair(Microsoft.ML.Runtime.Data.ColumnType,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPair (type As ColumnType, kind As String) As KeyValuePair(Of String, ColumnType)" />
        <MemberSignature Language="F#" Value="static member GetPair : Microsoft.ML.Runtime.Data.ColumnType * string -&gt; System.Collections.Generic.KeyValuePair&lt;string, Microsoft.ML.Runtime.Data.ColumnType&gt;" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.GetPair (type, kind)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, Microsoft::ML::Runtime::Data::ColumnType ^&gt; GetPair(Microsoft::ML::Runtime::Data::ColumnType ^ type, System::String ^ kind);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,Microsoft.ML.Runtime.Data.ColumnType&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="type" Type="Microsoft.ML.Runtime.Data.ColumnType" RefType="this" />
          <Parameter Name="kind" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="type">To be added.</param>
          <param name="kind">To be added.</param>
          <summary>
            Given a type and metadata kind string, returns a key-value pair. This is useful when
            implementing GetMetadataTypes(col).
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.MetadataUtils" Member="M:Microsoft.ML.Runtime.Data.MetadataUtils.GetPair(Microsoft.ML.Runtime.Data.ColumnType,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.ISchema" />
      </Targets>
      <Member MemberName="HasKeyNames">
        <MemberSignature Language="C#" Value="public static bool HasKeyNames (this Microsoft.ML.Runtime.Data.ISchema schema, int col, int keyCount);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasKeyNames(class Microsoft.ML.Runtime.Data.ISchema schema, int32 col, int32 keyCount) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.HasKeyNames(Microsoft.ML.Runtime.Data.ISchema,System.Int32,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasKeyNames (schema As ISchema, col As Integer, keyCount As Integer) As Boolean" />
        <MemberSignature Language="F#" Value="static member HasKeyNames : Microsoft.ML.Runtime.Data.ISchema * int * int -&gt; bool" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.HasKeyNames (schema, col, keyCount)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool HasKeyNames(Microsoft::ML::Runtime::Data::ISchema ^ schema, int col, int keyCount);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool HasKeyNames(Microsoft::ML::Runtime::Data::ISchema ^ schema, int col, int keyCount);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.ISchema" RefType="this" />
          <Parameter Name="col" Type="System.Int32" />
          <Parameter Name="keyCount" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="schema">To be added.</param>
          <param name="col">To be added.</param>
          <param name="keyCount">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.MetadataUtils" Member="M:Microsoft.ML.Runtime.Data.MetadataUtils.HasKeyNames(Microsoft.ML.Runtime.Data.ISchema,System.Int32,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.ISchema" />
      </Targets>
      <Member MemberName="HasSlotNames">
        <MemberSignature Language="C#" Value="public static bool HasSlotNames (this Microsoft.ML.Runtime.Data.ISchema schema, int col, int vectorSize);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasSlotNames(class Microsoft.ML.Runtime.Data.ISchema schema, int32 col, int32 vectorSize) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.HasSlotNames(Microsoft.ML.Runtime.Data.ISchema,System.Int32,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasSlotNames (schema As ISchema, col As Integer, vectorSize As Integer) As Boolean" />
        <MemberSignature Language="F#" Value="static member HasSlotNames : Microsoft.ML.Runtime.Data.ISchema * int * int -&gt; bool" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.HasSlotNames (schema, col, vectorSize)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool HasSlotNames(Microsoft::ML::Runtime::Data::ISchema ^ schema, int col, int vectorSize);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool HasSlotNames(Microsoft::ML::Runtime::Data::ISchema ^ schema, int col, int vectorSize);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.ISchema" RefType="this" />
          <Parameter Name="col" Type="System.Int32" />
          <Parameter Name="vectorSize" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="schema">To be added.</param>
          <param name="col">To be added.</param>
          <param name="vectorSize">To be added.</param>
          <summary>
            Returns <c>true</c> if the specified column:
             * is a vector of length N (including 0)
             * has a SlotNames metadata
             * metadata type is VBuffer&lt;DvText&gt; of length N
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.MetadataUtils" Member="M:Microsoft.ML.Runtime.Data.MetadataUtils.HasSlotNames(Microsoft.ML.Runtime.Data.ISchema,System.Int32,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.ISchema" />
      </Targets>
      <Member MemberName="IsHidden">
        <MemberSignature Language="C#" Value="public static bool IsHidden (this Microsoft.ML.Runtime.Data.ISchema schema, int col);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHidden(class Microsoft.ML.Runtime.Data.ISchema schema, int32 col) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.IsHidden(Microsoft.ML.Runtime.Data.ISchema,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsHidden (schema As ISchema, col As Integer) As Boolean" />
        <MemberSignature Language="F#" Value="static member IsHidden : Microsoft.ML.Runtime.Data.ISchema * int -&gt; bool" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.IsHidden (schema, col)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsHidden(Microsoft::ML::Runtime::Data::ISchema ^ schema, int col);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsHidden(Microsoft::ML::Runtime::Data::ISchema ^ schema, int col);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.ISchema" RefType="this" />
          <Parameter Name="col" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="schema">To be added.</param>
          <param name="col">To be added.</param>
          <summary>
            Return whether the given column index is hidden in the given schema.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.MetadataUtils" Member="M:Microsoft.ML.Runtime.Data.MetadataUtils.IsHidden(Microsoft.ML.Runtime.Data.ISchema,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.MetadataUtils.MetadataGetter`1" />
      </Targets>
      <Member MemberName="Marshal&lt;THave,TNeed&gt;">
        <MemberSignature Language="C#" Value="public static void Marshal&lt;THave,TNeed&gt; (this Microsoft.ML.Runtime.Data.MetadataUtils.MetadataGetter&lt;THave&gt; getter, int col, ref TNeed dst);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Marshal&lt;THave, TNeed&gt;(class Microsoft.ML.Runtime.Data.MetadataUtils/MetadataGetter`1&lt;!!THave&gt; getter, int32 col, !!TNeed&amp; dst) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.Marshal``2(Microsoft.ML.Runtime.Data.MetadataUtils.MetadataGetter{``0},System.Int32,``1@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Marshal(Of THave, TNeed) (getter As MetadataUtils.MetadataGetter(Of THave), col As Integer, ByRef dst As TNeed)" />
        <MemberSignature Language="F#" Value="static member Marshal : Microsoft.ML.Runtime.Data.MetadataUtils.MetadataGetter&lt;'Have&gt; * int *  -&gt; unit" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.Marshal (getter, col, dst)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename THave, typename TNeed&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Marshal(Microsoft::ML::Runtime::Data::MetadataUtils::MetadataGetter&lt;THave&gt; ^ getter, int col, TNeed % dst);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename THave, typename TNeed&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Marshal(Microsoft::ML::Runtime::Data::MetadataUtils::MetadataGetter&lt;THave&gt; ^ getter, int col, TNeed &amp;  dst);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="THave" />
          <TypeParameter Name="TNeed" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="getter" Type="Microsoft.ML.Runtime.Data.MetadataUtils+MetadataGetter&lt;THave&gt;" RefType="this" />
          <Parameter Name="col" Type="System.Int32" />
          <Parameter Name="dst" Type="TNeed&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <typeparam name="THave">To be added.</typeparam>
          <typeparam name="TNeed">To be added.</typeparam>
          <param name="getter">To be added.</param>
          <param name="col">To be added.</param>
          <param name="dst">To be added.</param>
          <summary>
            Helper to marshal a call to GetMetadata{TValue} to a specific type.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.MetadataUtils" Member="M:Microsoft.ML.Runtime.Data.MetadataUtils.Marshal``2(Microsoft.ML.Runtime.Data.MetadataUtils.MetadataGetter{``0},System.Int32,``1@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="Prepend&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; Prepend&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; tail, params T[] head);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; Prepend&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; tail, !!T[] head) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Prepend(Of T) (tail As IEnumerable(Of T), ParamArray head As T()) As IEnumerable(Of T)" />
        <MemberSignature Language="F#" Value="static member Prepend : seq&lt;'T&gt; * 'T[] -&gt; seq&lt;'T&gt;" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.Prepend (tail, head)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ Prepend(System::Collections::Generic::IEnumerable&lt;T&gt; ^ tail, ... cli::array &lt;T&gt; ^ head);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="tail" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
          <Parameter Name="head" Type="T[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="tail">To be added.</param>
          <param name="head">To be added.</param>
          <summary>
            Prepends a params array to an enumerable. Useful when implementing GetMetadataTypes.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.MetadataUtils" Member="M:Microsoft.ML.Runtime.Data.MetadataUtils.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.ISchema" />
      </Targets>
      <Member MemberName="TryGetMetadata&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static bool TryGetMetadata&lt;T&gt; (this Microsoft.ML.Runtime.Data.ISchema schema, Microsoft.ML.Runtime.Data.PrimitiveType type, string kind, int col, ref T value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetMetadata&lt;T&gt;(class Microsoft.ML.Runtime.Data.ISchema schema, class Microsoft.ML.Runtime.Data.PrimitiveType type, string kind, int32 col, !!T&amp; value) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.TryGetMetadata``1(Microsoft.ML.Runtime.Data.ISchema,Microsoft.ML.Runtime.Data.PrimitiveType,System.String,System.Int32,``0@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryGetMetadata(Of T) (schema As ISchema, type As PrimitiveType, kind As String, col As Integer, ByRef value As T) As Boolean" />
        <MemberSignature Language="F#" Value="static member TryGetMetadata : Microsoft.ML.Runtime.Data.ISchema * Microsoft.ML.Runtime.Data.PrimitiveType * string * int *  -&gt; bool" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.TryGetMetadata (schema, type, kind, col, value)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryGetMetadata(Microsoft::ML::Runtime::Data::ISchema ^ schema, Microsoft::ML::Runtime::Data::PrimitiveType ^ type, System::String ^ kind, int col, T % value);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryGetMetadata(Microsoft::ML::Runtime::Data::ISchema ^ schema, Microsoft::ML::Runtime::Data::PrimitiveType ^ type, Platform::String ^ kind, int col, T &amp;  value);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.ISchema" RefType="this" />
          <Parameter Name="type" Type="Microsoft.ML.Runtime.Data.PrimitiveType" />
          <Parameter Name="kind" Type="System.String" />
          <Parameter Name="col" Type="System.Int32" />
          <Parameter Name="value" Type="T&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <typeparam name="T">The raw type of the metadata, should match the PrimitiveType type</typeparam>
          <param name="schema">The schema</param>
          <param name="type">The type of the metadata</param>
          <param name="kind">The metadata kind</param>
          <param name="col">The column</param>
          <param name="value">The value to return, if successful</param>
          <summary>
            Tries to get the metadata kind of the specified type for a column.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.MetadataUtils" Member="M:Microsoft.ML.Runtime.Data.MetadataUtils.TryGetMetadata``1(Microsoft.ML.Runtime.Data.ISchema,Microsoft.ML.Runtime.Data.PrimitiveType,System.String,System.Int32,``0@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.ISlotCursor" />
      </Targets>
      <Member MemberName="GetGetterWithVectorType&lt;TValue&gt;">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.ValueGetter&lt;TValue&gt; GetGetterWithVectorType&lt;TValue&gt; (this Microsoft.ML.Runtime.Data.ISlotCursor cursor, Microsoft.ML.Runtime.IExceptionContext ctx = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.ValueGetter`1&lt;!!TValue&gt; GetGetterWithVectorType&lt;TValue&gt;(class Microsoft.ML.Runtime.Data.ISlotCursor cursor, class Microsoft.ML.Runtime.IExceptionContext ctx) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TransposerUtils.GetGetterWithVectorType``1(Microsoft.ML.Runtime.Data.ISlotCursor,Microsoft.ML.Runtime.IExceptionContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGetterWithVectorType(Of TValue) (cursor As ISlotCursor, Optional ctx As IExceptionContext = null) As ValueGetter(Of TValue)" />
        <MemberSignature Language="F#" Value="static member GetGetterWithVectorType : Microsoft.ML.Runtime.Data.ISlotCursor * Microsoft.ML.Runtime.IExceptionContext -&gt; Microsoft.ML.Runtime.Data.ValueGetter&lt;'Value&gt;" Usage="Microsoft.ML.Runtime.Data.TransposerUtils.GetGetterWithVectorType (cursor, ctx)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.ValueGetter&lt;TValue&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TValue" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="cursor" Type="Microsoft.ML.Runtime.Data.ISlotCursor" RefType="this" />
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" />
        </Parameters>
        <Docs>
          <typeparam name="TValue">The type, must be a <see cref="T:Microsoft.ML.Runtime.Data.VBuffer`1" /> generic type,
            though enforcement of this has to be done only at runtime for practical reasons</typeparam>
          <param name="cursor">The cursor to get the getter for</param>
          <param name="ctx">The exception contxt</param>
          <summary>
            The <see cref="M:Microsoft.ML.Runtime.Data.ISlotCursor.GetGetter``1" /> is parameterized by a type that becomes the
            type parameter for a <see cref="T:Microsoft.ML.Runtime.Data.VBuffer`1" />, and this is generally preferable and more
            sensible but for various reasons it's often a lot simpler to have a get-getter be over
            the actual type returned by the getter, that is, parameterize this by the actual
            <see cref="T:Microsoft.ML.Runtime.Data.VBuffer`1" /> type.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.TransposerUtils" Member="M:Microsoft.ML.Runtime.Data.TransposerUtils.GetGetterWithVectorType``1(Microsoft.ML.Runtime.Data.ISlotCursor,Microsoft.ML.Runtime.IExceptionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.ITransposeDataView" />
      </Targets>
      <Member MemberName="GetSingleSlotValue&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static void GetSingleSlotValue&lt;T&gt; (this Microsoft.ML.Runtime.Data.ITransposeDataView view, int col, ref Microsoft.ML.Runtime.Data.VBuffer&lt;T&gt; dst);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetSingleSlotValue&lt;T&gt;(class Microsoft.ML.Runtime.Data.ITransposeDataView view, int32 col, valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;!!T&gt;&amp; dst) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TransposerUtils.GetSingleSlotValue``1(Microsoft.ML.Runtime.Data.ITransposeDataView,System.Int32,Microsoft.ML.Runtime.Data.VBuffer{``0}@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub GetSingleSlotValue(Of T) (view As ITransposeDataView, col As Integer, ByRef dst As VBuffer(Of T))" />
        <MemberSignature Language="F#" Value="static member GetSingleSlotValue : Microsoft.ML.Runtime.Data.ITransposeDataView * int *  -&gt; unit" Usage="Microsoft.ML.Runtime.Data.TransposerUtils.GetSingleSlotValue (view, col, dst)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void GetSingleSlotValue(Microsoft::ML::Runtime::Data::ITransposeDataView ^ view, int col, Microsoft::ML::Runtime::Data::VBuffer&lt;T&gt; % dst);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="view" Type="Microsoft.ML.Runtime.Data.ITransposeDataView" RefType="this" />
          <Parameter Name="col" Type="System.Int32" />
          <Parameter Name="dst" Type="Microsoft.ML.Runtime.Data.VBuffer&lt;T&gt;&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="view">To be added.</param>
          <param name="col">To be added.</param>
          <param name="dst">To be added.</param>
          <summary>
            This is a convenience method that extracts a single slot value's vector,
            while simultaneously verifying that there is exactly one value.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.TransposerUtils" Member="M:Microsoft.ML.Runtime.Data.TransposerUtils.GetSingleSlotValue``1(Microsoft.ML.Runtime.Data.ITransposeDataView,System.Int32,Microsoft.ML.Runtime.Data.VBuffer{``0}@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Double" />
      </Targets>
      <Member MemberName="Eq">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.DvBool Eq (this double a, double b);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.ML.Runtime.Data.DvBool Eq(float64 a, float64 b) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TypeUtils.Eq(System.Double,System.Double)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Eq (a As Double, b As Double) As DvBool" />
        <MemberSignature Language="F#" Value="static member Eq : double * double -&gt; Microsoft.ML.Runtime.Data.DvBool" Usage="Microsoft.ML.Runtime.Data.TypeUtils.Eq (a, b)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::DvBool Eq(double a, double b);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.DvBool</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Double" RefType="this" />
          <Parameter Name="b" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="b">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.TypeUtils" Member="M:Microsoft.ML.Runtime.Data.TypeUtils.Eq(System.Double,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Single" />
      </Targets>
      <Member MemberName="Eq">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.DvBool Eq (this float a, float b);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.ML.Runtime.Data.DvBool Eq(float32 a, float32 b) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TypeUtils.Eq(System.Single,System.Single)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Eq (a As Single, b As Single) As DvBool" />
        <MemberSignature Language="F#" Value="static member Eq : single * single -&gt; Microsoft.ML.Runtime.Data.DvBool" Usage="Microsoft.ML.Runtime.Data.TypeUtils.Eq (a, b)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::DvBool Eq(float a, float b);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.DvBool</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Single" RefType="this" />
          <Parameter Name="b" Type="System.Single" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="b">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.TypeUtils" Member="M:Microsoft.ML.Runtime.Data.TypeUtils.Eq(System.Single,System.Single)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Double" />
      </Targets>
      <Member MemberName="Ge">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.DvBool Ge (this double a, double b);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.ML.Runtime.Data.DvBool Ge(float64 a, float64 b) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TypeUtils.Ge(System.Double,System.Double)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Ge (a As Double, b As Double) As DvBool" />
        <MemberSignature Language="F#" Value="static member Ge : double * double -&gt; Microsoft.ML.Runtime.Data.DvBool" Usage="Microsoft.ML.Runtime.Data.TypeUtils.Ge (a, b)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::DvBool Ge(double a, double b);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.DvBool</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Double" RefType="this" />
          <Parameter Name="b" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="b">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.TypeUtils" Member="M:Microsoft.ML.Runtime.Data.TypeUtils.Ge(System.Double,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Single" />
      </Targets>
      <Member MemberName="Ge">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.DvBool Ge (this float a, float b);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.ML.Runtime.Data.DvBool Ge(float32 a, float32 b) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TypeUtils.Ge(System.Single,System.Single)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Ge (a As Single, b As Single) As DvBool" />
        <MemberSignature Language="F#" Value="static member Ge : single * single -&gt; Microsoft.ML.Runtime.Data.DvBool" Usage="Microsoft.ML.Runtime.Data.TypeUtils.Ge (a, b)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::DvBool Ge(float a, float b);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.DvBool</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Single" RefType="this" />
          <Parameter Name="b" Type="System.Single" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="b">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.TypeUtils" Member="M:Microsoft.ML.Runtime.Data.TypeUtils.Ge(System.Single,System.Single)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Double" />
      </Targets>
      <Member MemberName="Gt">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.DvBool Gt (this double a, double b);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.ML.Runtime.Data.DvBool Gt(float64 a, float64 b) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TypeUtils.Gt(System.Double,System.Double)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Gt (a As Double, b As Double) As DvBool" />
        <MemberSignature Language="F#" Value="static member Gt : double * double -&gt; Microsoft.ML.Runtime.Data.DvBool" Usage="Microsoft.ML.Runtime.Data.TypeUtils.Gt (a, b)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::DvBool Gt(double a, double b);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.DvBool</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Double" RefType="this" />
          <Parameter Name="b" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="b">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.TypeUtils" Member="M:Microsoft.ML.Runtime.Data.TypeUtils.Gt(System.Double,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Single" />
      </Targets>
      <Member MemberName="Gt">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.DvBool Gt (this float a, float b);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.ML.Runtime.Data.DvBool Gt(float32 a, float32 b) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TypeUtils.Gt(System.Single,System.Single)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Gt (a As Single, b As Single) As DvBool" />
        <MemberSignature Language="F#" Value="static member Gt : single * single -&gt; Microsoft.ML.Runtime.Data.DvBool" Usage="Microsoft.ML.Runtime.Data.TypeUtils.Gt (a, b)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::DvBool Gt(float a, float b);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.DvBool</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Single" RefType="this" />
          <Parameter Name="b" Type="System.Single" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="b">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.TypeUtils" Member="M:Microsoft.ML.Runtime.Data.TypeUtils.Gt(System.Single,System.Single)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Double" />
      </Targets>
      <Member MemberName="IsNA">
        <MemberSignature Language="C#" Value="public static bool IsNA (this double src);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNA(float64 src) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TypeUtils.IsNA(System.Double)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsNA (src As Double) As Boolean" />
        <MemberSignature Language="F#" Value="static member IsNA : double -&gt; bool" Usage="Microsoft.ML.Runtime.Data.TypeUtils.IsNA src" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsNA(double src);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsNA(double src);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="src" Type="System.Double" RefType="this" />
        </Parameters>
        <Docs>
          <param name="src">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.TypeUtils" Member="M:Microsoft.ML.Runtime.Data.TypeUtils.IsNA(System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Single" />
      </Targets>
      <Member MemberName="IsNA">
        <MemberSignature Language="C#" Value="public static bool IsNA (this float src);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNA(float32 src) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TypeUtils.IsNA(System.Single)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsNA (src As Single) As Boolean" />
        <MemberSignature Language="F#" Value="static member IsNA : single -&gt; bool" Usage="Microsoft.ML.Runtime.Data.TypeUtils.IsNA src" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsNA(float src);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsNA(float src);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="src" Type="System.Single" RefType="this" />
        </Parameters>
        <Docs>
          <param name="src">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.TypeUtils" Member="M:Microsoft.ML.Runtime.Data.TypeUtils.IsNA(System.Single)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Double" />
      </Targets>
      <Member MemberName="Le">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.DvBool Le (this double a, double b);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.ML.Runtime.Data.DvBool Le(float64 a, float64 b) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TypeUtils.Le(System.Double,System.Double)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Le (a As Double, b As Double) As DvBool" />
        <MemberSignature Language="F#" Value="static member Le : double * double -&gt; Microsoft.ML.Runtime.Data.DvBool" Usage="Microsoft.ML.Runtime.Data.TypeUtils.Le (a, b)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::DvBool Le(double a, double b);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.DvBool</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Double" RefType="this" />
          <Parameter Name="b" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="b">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.TypeUtils" Member="M:Microsoft.ML.Runtime.Data.TypeUtils.Le(System.Double,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Single" />
      </Targets>
      <Member MemberName="Le">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.DvBool Le (this float a, float b);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.ML.Runtime.Data.DvBool Le(float32 a, float32 b) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TypeUtils.Le(System.Single,System.Single)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Le (a As Single, b As Single) As DvBool" />
        <MemberSignature Language="F#" Value="static member Le : single * single -&gt; Microsoft.ML.Runtime.Data.DvBool" Usage="Microsoft.ML.Runtime.Data.TypeUtils.Le (a, b)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::DvBool Le(float a, float b);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.DvBool</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Single" RefType="this" />
          <Parameter Name="b" Type="System.Single" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="b">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.TypeUtils" Member="M:Microsoft.ML.Runtime.Data.TypeUtils.Le(System.Single,System.Single)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Double" />
      </Targets>
      <Member MemberName="Lt">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.DvBool Lt (this double a, double b);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.ML.Runtime.Data.DvBool Lt(float64 a, float64 b) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TypeUtils.Lt(System.Double,System.Double)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Lt (a As Double, b As Double) As DvBool" />
        <MemberSignature Language="F#" Value="static member Lt : double * double -&gt; Microsoft.ML.Runtime.Data.DvBool" Usage="Microsoft.ML.Runtime.Data.TypeUtils.Lt (a, b)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::DvBool Lt(double a, double b);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.DvBool</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Double" RefType="this" />
          <Parameter Name="b" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="b">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.TypeUtils" Member="M:Microsoft.ML.Runtime.Data.TypeUtils.Lt(System.Double,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Single" />
      </Targets>
      <Member MemberName="Lt">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.DvBool Lt (this float a, float b);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.ML.Runtime.Data.DvBool Lt(float32 a, float32 b) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TypeUtils.Lt(System.Single,System.Single)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Lt (a As Single, b As Single) As DvBool" />
        <MemberSignature Language="F#" Value="static member Lt : single * single -&gt; Microsoft.ML.Runtime.Data.DvBool" Usage="Microsoft.ML.Runtime.Data.TypeUtils.Lt (a, b)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::DvBool Lt(float a, float b);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.DvBool</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Single" RefType="this" />
          <Parameter Name="b" Type="System.Single" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="b">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.TypeUtils" Member="M:Microsoft.ML.Runtime.Data.TypeUtils.Lt(System.Single,System.Single)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Double" />
      </Targets>
      <Member MemberName="Ne">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.DvBool Ne (this double a, double b);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.ML.Runtime.Data.DvBool Ne(float64 a, float64 b) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TypeUtils.Ne(System.Double,System.Double)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Ne (a As Double, b As Double) As DvBool" />
        <MemberSignature Language="F#" Value="static member Ne : double * double -&gt; Microsoft.ML.Runtime.Data.DvBool" Usage="Microsoft.ML.Runtime.Data.TypeUtils.Ne (a, b)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::DvBool Ne(double a, double b);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.DvBool</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Double" RefType="this" />
          <Parameter Name="b" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="b">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.TypeUtils" Member="M:Microsoft.ML.Runtime.Data.TypeUtils.Ne(System.Double,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Single" />
      </Targets>
      <Member MemberName="Ne">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.DvBool Ne (this float a, float b);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.ML.Runtime.Data.DvBool Ne(float32 a, float32 b) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TypeUtils.Ne(System.Single,System.Single)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Ne (a As Single, b As Single) As DvBool" />
        <MemberSignature Language="F#" Value="static member Ne : single * single -&gt; Microsoft.ML.Runtime.Data.DvBool" Usage="Microsoft.ML.Runtime.Data.TypeUtils.Ne (a, b)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::DvBool Ne(float a, float b);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.DvBool</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Single" RefType="this" />
          <Parameter Name="b" Type="System.Single" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="b">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Data.TypeUtils" Member="M:Microsoft.ML.Runtime.Data.TypeUtils.Ne(System.Single,System.Single)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.EntryPoints.Optional`1" />
      </Targets>
      <Member MemberName="AsNullable&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static Nullable&lt;T&gt; AsNullable&lt;T&gt; (this Microsoft.ML.Runtime.EntryPoints.Optional&lt;T&gt; opt) where T : struct;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;!!T&gt; AsNullable&lt;struct .ctor (class System.ValueType) T&gt;(class Microsoft.ML.Runtime.EntryPoints.Optional`1&lt;!!T&gt; opt) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.EntryPoints.EntryPointUtils.AsNullable``1(Microsoft.ML.Runtime.EntryPoints.Optional{``0})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsNullable(Of T As Structure) (opt As Optional(Of T)) As Nullable(Of T)" />
        <MemberSignature Language="F#" Value="static member AsNullable : Microsoft.ML.Runtime.EntryPoints.Optional&lt;'T (requires 'T : struct)&gt; -&gt; Nullable&lt;'T (requires 'T : struct)&gt; (requires 'T : struct)" Usage="Microsoft.ML.Runtime.EntryPoints.EntryPointUtils.AsNullable opt" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;T&gt; AsNullable(Microsoft::ML::Runtime::EntryPoints::Optional&lt;T&gt; ^ opt);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Nullable&lt;T&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
              <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
              <BaseTypeName>System.ValueType</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="opt" Type="Microsoft.ML.Runtime.EntryPoints.Optional&lt;T&gt;" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="opt">To be added.</param>
          <summary>
            Converts EntryPoint Optional{T} types into nullable types, with the
            implicit value being converted to the null value.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.EntryPoints.EntryPointUtils" Member="M:Microsoft.ML.Runtime.EntryPoints.EntryPointUtils.AsNullable``1(Microsoft.ML.Runtime.EntryPoints.Optional{``0})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.EntryPoints.TlcModule.RangeAttribute" />
      </Targets>
      <Member MemberName="IsValueWithinRange">
        <MemberSignature Language="C#" Value="public static bool IsValueWithinRange (this Microsoft.ML.Runtime.EntryPoints.TlcModule.RangeAttribute range, object val);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValueWithinRange(class Microsoft.ML.Runtime.EntryPoints.TlcModule/RangeAttribute range, object val) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.EntryPoints.EntryPointUtils.IsValueWithinRange(Microsoft.ML.Runtime.EntryPoints.TlcModule.RangeAttribute,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsValueWithinRange (range As TlcModule.RangeAttribute, val As Object) As Boolean" />
        <MemberSignature Language="F#" Value="static member IsValueWithinRange : Microsoft.ML.Runtime.EntryPoints.TlcModule.RangeAttribute * obj -&gt; bool" Usage="Microsoft.ML.Runtime.EntryPoints.EntryPointUtils.IsValueWithinRange (range, val)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsValueWithinRange(Microsoft::ML::Runtime::EntryPoints::TlcModule::RangeAttribute ^ range, System::Object ^ val);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="range" Type="Microsoft.ML.Runtime.EntryPoints.TlcModule+RangeAttribute" RefType="this" />
          <Parameter Name="val" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="range">To be added.</param>
          <param name="val">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.EntryPoints.EntryPointUtils" Member="M:Microsoft.ML.Runtime.EntryPoints.EntryPointUtils.IsValueWithinRange(Microsoft.ML.Runtime.EntryPoints.TlcModule.RangeAttribute,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHostEnvironment" />
      </Targets>
      <Member MemberName="CreateExperiment">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Experiment CreateExperiment (this Microsoft.ML.Runtime.IHostEnvironment env);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Experiment CreateExperiment(class Microsoft.ML.Runtime.IHostEnvironment env) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ExperimentUtils.CreateExperiment(Microsoft.ML.Runtime.IHostEnvironment)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateExperiment (env As IHostEnvironment) As Experiment" />
        <MemberSignature Language="F#" Value="static member CreateExperiment : Microsoft.ML.Runtime.IHostEnvironment -&gt; Microsoft.ML.Runtime.Experiment" Usage="Microsoft.ML.Runtime.ExperimentUtils.CreateExperiment env" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Experiment ^ CreateExperiment(Microsoft::ML::Runtime::IHostEnvironment ^ env);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Experiment ^ CreateExperiment(Microsoft::ML::Runtime::IHostEnvironment ^ env);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Experiment</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
        </Parameters>
        <Docs>
          <param name="env">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.ExperimentUtils" Member="M:Microsoft.ML.Runtime.ExperimentUtils.CreateExperiment(Microsoft.ML.Runtime.IHostEnvironment)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Array" />
      </Targets>
      <Member MemberName="ArgMax&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static int ArgMax&lt;T&gt; (this T[] arr) where T : IComparable&lt;T&gt;;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ArgMax&lt;(class System.IComparable`1&lt;!!T&gt;) T&gt;(!!T[] arr) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMax``1(``0[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ArgMax(Of T As IComparable(Of T)) (arr As T()) As Integer" />
        <MemberSignature Language="F#" Value="static member ArgMax : 'T[] -&gt; int (requires 'T :&gt; IComparable&lt;'T&gt;)" Usage="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMax arr" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : IComparable&lt;T&gt;[System::Runtime::CompilerServices::Extension]&#xA; static int ArgMax(cli::array &lt;T&gt; ^ arr);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : IComparable&lt;T&gt;[System::Runtime::CompilerServices::Extension]&#xA; static int ArgMax(Platform::Array &lt;T&gt; ^ arr);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <InterfaceName>System.IComparable&lt;T&gt;</InterfaceName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="arr" Type="T[]" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="arr">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMax``1(``0[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Array" />
      </Targets>
      <Member MemberName="ArgMax&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static int ArgMax&lt;T&gt; (this T[] arr, int prefix) where T : IComparable&lt;T&gt;;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ArgMax&lt;(class System.IComparable`1&lt;!!T&gt;) T&gt;(!!T[] arr, int32 prefix) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMax``1(``0[],System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ArgMax(Of T As IComparable(Of T)) (arr As T(), prefix As Integer) As Integer" />
        <MemberSignature Language="F#" Value="static member ArgMax : 'T[] * int -&gt; int (requires 'T :&gt; IComparable&lt;'T&gt;)" Usage="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMax (arr, prefix)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : IComparable&lt;T&gt;[System::Runtime::CompilerServices::Extension]&#xA; static int ArgMax(cli::array &lt;T&gt; ^ arr, int prefix);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : IComparable&lt;T&gt;[System::Runtime::CompilerServices::Extension]&#xA; static int ArgMax(Platform::Array &lt;T&gt; ^ arr, int prefix);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <InterfaceName>System.IComparable&lt;T&gt;</InterfaceName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="arr" Type="T[]" RefType="this" />
          <Parameter Name="prefix" Type="System.Int32" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="arr">To be added.</param>
          <param name="prefix">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMax``1(``0[],System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="ArgMax&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static int ArgMax&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; e) where T : IComparable&lt;T&gt;;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ArgMax&lt;(class System.IComparable`1&lt;!!T&gt;) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; e) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMax``1(System.Collections.Generic.IEnumerable{``0})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ArgMax(Of T As IComparable(Of T)) (e As IEnumerable(Of T)) As Integer" />
        <MemberSignature Language="F#" Value="static member ArgMax : seq&lt;'T (requires 'T :&gt; IComparable&lt;'T&gt;)&gt; -&gt; int (requires 'T :&gt; IComparable&lt;'T&gt;)" Usage="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMax e" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : IComparable&lt;T&gt;[System::Runtime::CompilerServices::Extension]&#xA; static int ArgMax(System::Collections::Generic::IEnumerable&lt;T&gt; ^ e);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <InterfaceName>System.IComparable&lt;T&gt;</InterfaceName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="e">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMax``1(System.Collections.Generic.IEnumerable{``0})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="ArgMax&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static int ArgMax&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; e, int prefix) where T : IComparable&lt;T&gt;;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ArgMax&lt;(class System.IComparable`1&lt;!!T&gt;) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; e, int32 prefix) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMax``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ArgMax(Of T As IComparable(Of T)) (e As IEnumerable(Of T), prefix As Integer) As Integer" />
        <MemberSignature Language="F#" Value="static member ArgMax : seq&lt;'T (requires 'T :&gt; IComparable&lt;'T&gt;)&gt; * int -&gt; int (requires 'T :&gt; IComparable&lt;'T&gt;)" Usage="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMax (e, prefix)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : IComparable&lt;T&gt;[System::Runtime::CompilerServices::Extension]&#xA; static int ArgMax(System::Collections::Generic::IEnumerable&lt;T&gt; ^ e, int prefix);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <InterfaceName>System.IComparable&lt;T&gt;</InterfaceName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
          <Parameter Name="prefix" Type="System.Int32" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="e">To be added.</param>
          <param name="prefix">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMax``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="ArgMaxRand&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static int ArgMaxRand&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; e, int prefix, Random rnd, double fraction) where T : IComparable&lt;T&gt;;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ArgMaxRand&lt;(class System.IComparable`1&lt;!!T&gt;) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; e, int32 prefix, class System.Random rnd, float64 fraction) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMaxRand``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Random,System.Double)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ArgMaxRand(Of T As IComparable(Of T)) (e As IEnumerable(Of T), prefix As Integer, rnd As Random, fraction As Double) As Integer" />
        <MemberSignature Language="F#" Value="static member ArgMaxRand : seq&lt;'T (requires 'T :&gt; IComparable&lt;'T&gt;)&gt; * int * Random * double -&gt; int (requires 'T :&gt; IComparable&lt;'T&gt;)" Usage="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMaxRand (e, prefix, rnd, fraction)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : IComparable&lt;T&gt;[System::Runtime::CompilerServices::Extension]&#xA; static int ArgMaxRand(System::Collections::Generic::IEnumerable&lt;T&gt; ^ e, int prefix, Random ^ rnd, double fraction);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <InterfaceName>System.IComparable&lt;T&gt;</InterfaceName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
          <Parameter Name="prefix" Type="System.Int32" />
          <Parameter Name="rnd" Type="System.Random" />
          <Parameter Name="fraction" Type="System.Double" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="e">To be added.</param>
          <param name="prefix">To be added.</param>
          <param name="rnd">To be added.</param>
          <param name="fraction">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMaxRand``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Random,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="ArgMaxRand&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static int ArgMaxRand&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; e, Random rnd, double fraction) where T : IComparable&lt;T&gt;;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ArgMaxRand&lt;(class System.IComparable`1&lt;!!T&gt;) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; e, class System.Random rnd, float64 fraction) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMaxRand``1(System.Collections.Generic.IEnumerable{``0},System.Random,System.Double)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ArgMaxRand(Of T As IComparable(Of T)) (e As IEnumerable(Of T), rnd As Random, fraction As Double) As Integer" />
        <MemberSignature Language="F#" Value="static member ArgMaxRand : seq&lt;'T (requires 'T :&gt; IComparable&lt;'T&gt;)&gt; * Random * double -&gt; int (requires 'T :&gt; IComparable&lt;'T&gt;)" Usage="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMaxRand (e, rnd, fraction)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : IComparable&lt;T&gt;[System::Runtime::CompilerServices::Extension]&#xA; static int ArgMaxRand(System::Collections::Generic::IEnumerable&lt;T&gt; ^ e, Random ^ rnd, double fraction);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <InterfaceName>System.IComparable&lt;T&gt;</InterfaceName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
          <Parameter Name="rnd" Type="System.Random" />
          <Parameter Name="fraction" Type="System.Double" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="e">To be added.</param>
          <param name="rnd">To be added.</param>
          <param name="fraction">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMaxRand``1(System.Collections.Generic.IEnumerable{``0},System.Random,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Array" />
      </Targets>
      <Member MemberName="ArgMin&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static int ArgMin&lt;T&gt; (this T[] arr) where T : IComparable&lt;T&gt;;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ArgMin&lt;(class System.IComparable`1&lt;!!T&gt;) T&gt;(!!T[] arr) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMin``1(``0[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ArgMin(Of T As IComparable(Of T)) (arr As T()) As Integer" />
        <MemberSignature Language="F#" Value="static member ArgMin : 'T[] -&gt; int (requires 'T :&gt; IComparable&lt;'T&gt;)" Usage="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMin arr" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : IComparable&lt;T&gt;[System::Runtime::CompilerServices::Extension]&#xA; static int ArgMin(cli::array &lt;T&gt; ^ arr);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : IComparable&lt;T&gt;[System::Runtime::CompilerServices::Extension]&#xA; static int ArgMin(Platform::Array &lt;T&gt; ^ arr);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <InterfaceName>System.IComparable&lt;T&gt;</InterfaceName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="arr" Type="T[]" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="arr">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMin``1(``0[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Array" />
      </Targets>
      <Member MemberName="ArgMin&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static int ArgMin&lt;T&gt; (this T[] arr, int prefix) where T : IComparable&lt;T&gt;;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ArgMin&lt;(class System.IComparable`1&lt;!!T&gt;) T&gt;(!!T[] arr, int32 prefix) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMin``1(``0[],System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ArgMin(Of T As IComparable(Of T)) (arr As T(), prefix As Integer) As Integer" />
        <MemberSignature Language="F#" Value="static member ArgMin : 'T[] * int -&gt; int (requires 'T :&gt; IComparable&lt;'T&gt;)" Usage="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMin (arr, prefix)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : IComparable&lt;T&gt;[System::Runtime::CompilerServices::Extension]&#xA; static int ArgMin(cli::array &lt;T&gt; ^ arr, int prefix);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : IComparable&lt;T&gt;[System::Runtime::CompilerServices::Extension]&#xA; static int ArgMin(Platform::Array &lt;T&gt; ^ arr, int prefix);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <InterfaceName>System.IComparable&lt;T&gt;</InterfaceName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="arr" Type="T[]" RefType="this" />
          <Parameter Name="prefix" Type="System.Int32" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="arr">To be added.</param>
          <param name="prefix">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMin``1(``0[],System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="ArgMin&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static int ArgMin&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; e) where T : IComparable&lt;T&gt;;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ArgMin&lt;(class System.IComparable`1&lt;!!T&gt;) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; e) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMin``1(System.Collections.Generic.IEnumerable{``0})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ArgMin(Of T As IComparable(Of T)) (e As IEnumerable(Of T)) As Integer" />
        <MemberSignature Language="F#" Value="static member ArgMin : seq&lt;'T (requires 'T :&gt; IComparable&lt;'T&gt;)&gt; -&gt; int (requires 'T :&gt; IComparable&lt;'T&gt;)" Usage="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMin e" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : IComparable&lt;T&gt;[System::Runtime::CompilerServices::Extension]&#xA; static int ArgMin(System::Collections::Generic::IEnumerable&lt;T&gt; ^ e);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <InterfaceName>System.IComparable&lt;T&gt;</InterfaceName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="e">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMin``1(System.Collections.Generic.IEnumerable{``0})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="ArgMin&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static int ArgMin&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; e, int prefix) where T : IComparable&lt;T&gt;;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ArgMin&lt;(class System.IComparable`1&lt;!!T&gt;) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; e, int32 prefix) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMin``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ArgMin(Of T As IComparable(Of T)) (e As IEnumerable(Of T), prefix As Integer) As Integer" />
        <MemberSignature Language="F#" Value="static member ArgMin : seq&lt;'T (requires 'T :&gt; IComparable&lt;'T&gt;)&gt; * int -&gt; int (requires 'T :&gt; IComparable&lt;'T&gt;)" Usage="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMin (e, prefix)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : IComparable&lt;T&gt;[System::Runtime::CompilerServices::Extension]&#xA; static int ArgMin(System::Collections::Generic::IEnumerable&lt;T&gt; ^ e, int prefix);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <InterfaceName>System.IComparable&lt;T&gt;</InterfaceName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
          <Parameter Name="prefix" Type="System.Int32" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="e">To be added.</param>
          <param name="prefix">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ArgMin``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="CumulativeSum&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;int&gt; CumulativeSum&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;int&gt; s);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;int32&gt; CumulativeSum&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;int32&gt; s) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.CumulativeSum``1(System.Collections.Generic.IEnumerable{System.Int32})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Iterator Function CumulativeSum(Of T) (s As IEnumerable(Of Integer)) As IEnumerable(Of Integer)" />
        <MemberSignature Language="F#" Value="static member CumulativeSum : seq&lt;int&gt; -&gt; seq&lt;int&gt;" Usage="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.CumulativeSum s" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;int&gt; ^ CumulativeSum(System::Collections::Generic::IEnumerable&lt;int&gt; ^ s);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Int32&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="s" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="s">To be added.</param>
          <summary>
            RunningLength. Converts sequence like 1, 2, 3, 4
            to  1, 3, 6, 10
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.CumulativeSum``1(System.Collections.Generic.IEnumerable{System.Int32})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="MergeSortedList&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; MergeSortedList&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; s1, System.Collections.Generic.IEnumerable&lt;T&gt; s2) where T : IComparable&lt;T&gt;;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; MergeSortedList&lt;(class System.IComparable`1&lt;!!T&gt;) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; s1, class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; s2) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.MergeSortedList``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Iterator Function MergeSortedList(Of T As IComparable(Of T)) (s1 As IEnumerable(Of T), s2 As IEnumerable(Of T)) As IEnumerable(Of T)" />
        <MemberSignature Language="F#" Value="static member MergeSortedList : seq&lt;'T (requires 'T :&gt; IComparable&lt;'T&gt;)&gt; * seq&lt;'T (requires 'T :&gt; IComparable&lt;'T&gt;)&gt; -&gt; seq&lt;'T (requires 'T :&gt; IComparable&lt;'T&gt;)&gt; (requires 'T :&gt; IComparable&lt;'T&gt;)" Usage="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.MergeSortedList (s1, s2)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : IComparable&lt;T&gt;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ MergeSortedList(System::Collections::Generic::IEnumerable&lt;T&gt; ^ s1, System::Collections::Generic::IEnumerable&lt;T&gt; ^ s2);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <InterfaceName>System.IComparable&lt;T&gt;</InterfaceName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="s1" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
          <Parameter Name="s2" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="s1">To be added.</param>
          <param name="s2">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.MergeSortedList``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="SoftArgMax">
        <MemberSignature Language="C#" Value="public static int SoftArgMax (this System.Collections.Generic.IEnumerable&lt;double&gt; values, Random rand);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SoftArgMax(class System.Collections.Generic.IEnumerable`1&lt;float64&gt; values, class System.Random rand) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.SoftArgMax(System.Collections.Generic.IEnumerable{System.Double},System.Random)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SoftArgMax (values As IEnumerable(Of Double), rand As Random) As Integer" />
        <MemberSignature Language="F#" Value="static member SoftArgMax : seq&lt;double&gt; * Random -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.SoftArgMax (values, rand)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SoftArgMax(System::Collections::Generic::IEnumerable&lt;double&gt; ^ values, Random ^ rand);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;System.Double&gt;" RefType="this" />
          <Parameter Name="rand" Type="System.Random" />
        </Parameters>
        <Docs>
          <param name="values">To be added.</param>
          <param name="rand">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.SoftArgMax(System.Collections.Generic.IEnumerable{System.Double},System.Random)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IEnumerable`1" />
      </Targets>
      <Member MemberName="ToArray&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static T[] ToArray&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; me, int length);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] ToArray&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; me, int32 length) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ToArray``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToArray(Of T) (me As IEnumerable(Of T), length As Integer) As T()" />
        <MemberSignature Language="F#" Value="static member ToArray : seq&lt;'T&gt; * int -&gt; 'T[]" Usage="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ToArray (me, length)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;T&gt; ^ ToArray(System::Collections::Generic::IEnumerable&lt;T&gt; ^ me, int length);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>T[]</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="me" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="me">To be added.</param>
          <param name="length">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.LinqExtensions.ToArray``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.Stream" />
      </Targets>
      <Member MemberName="ReadCompressed">
        <MemberSignature Language="C#" Value="public static byte[] ReadCompressed (this System.IO.Stream stream);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] ReadCompressed(class System.IO.Stream stream) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.StreamExtensions.ReadCompressed(System.IO.Stream)" />
        <MemberSignature Language="F#" Value="static member ReadCompressed : System.IO.Stream -&gt; byte[]" Usage="Microsoft.ML.Runtime.FastTree.Internal.StreamExtensions.ReadCompressed stream" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;System::Byte&gt; ^ ReadCompressed(System::IO::Stream ^ stream);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Byte[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="stream" Type="System.IO.Stream" RefType="this" />
        </Parameters>
        <Docs>
          <param name="stream">The stream to read from</param>
          <summary>
            Reads a compressed array of byte from the stream (written by WriteCompressed)
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.StreamExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.StreamExtensions.ReadCompressed(System.IO.Stream)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.Stream" />
      </Targets>
      <Member MemberName="WriteCompressed">
        <MemberSignature Language="C#" Value="public static void WriteCompressed (this System.IO.Stream stream, byte[] array);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteCompressed(class System.IO.Stream stream, unsigned int8[] array) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.StreamExtensions.WriteCompressed(System.IO.Stream,System.Byte[])" />
        <MemberSignature Language="F#" Value="static member WriteCompressed : System.IO.Stream * byte[] -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.StreamExtensions.WriteCompressed (stream, array)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteCompressed(System::IO::Stream ^ stream, cli::array &lt;System::Byte&gt; ^ array);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="stream" Type="System.IO.Stream" RefType="this" />
          <Parameter Name="array" Type="System.Byte[]" />
        </Parameters>
        <Docs>
          <param name="stream">Stream to write to</param>
          <param name="array">Array to write</param>
          <summary>
            Writes an array of bytes to the stream with compression
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.StreamExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.StreamExtensions.WriteCompressed(System.IO.Stream,System.Byte[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.Stream" />
      </Targets>
      <Member MemberName="WriteCompressed">
        <MemberSignature Language="C#" Value="public static void WriteCompressed (this System.IO.Stream stream, byte[] array, int offset, int count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteCompressed(class System.IO.Stream stream, unsigned int8[] array, int32 offset, int32 count) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.StreamExtensions.WriteCompressed(System.IO.Stream,System.Byte[],System.Int32,System.Int32)" />
        <MemberSignature Language="F#" Value="static member WriteCompressed : System.IO.Stream * byte[] * int * int -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.StreamExtensions.WriteCompressed (stream, array, offset, count)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteCompressed(System::IO::Stream ^ stream, cli::array &lt;System::Byte&gt; ^ array, int offset, int count);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="stream" Type="System.IO.Stream" RefType="this" />
          <Parameter Name="array" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="stream">Stream to write to</param>
          <param name="array">Array to write</param>
          <param name="offset">The byte offset into the array to write</param>
          <param name="count">The number of bytes from the array to write</param>
          <summary>
            Writes an array of bytes to the stream with compression
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.StreamExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.StreamExtensions.WriteCompressed(System.IO.Stream,System.Byte[],System.Int32,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.FastTree.Internal.MD5Hash" />
      </Targets>
      <Member MemberName="SizeInBytes">
        <MemberSignature Language="C#" Value="public static int SizeInBytes (this Microsoft.ML.Runtime.FastTree.Internal.MD5Hash[] array);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeInBytes(valuetype Microsoft.ML.Runtime.FastTree.Internal.MD5Hash[] array) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(Microsoft.ML.Runtime.FastTree.Internal.MD5Hash[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SizeInBytes (array As MD5Hash()) As Integer" />
        <MemberSignature Language="F#" Value="static member SizeInBytes : Microsoft.ML.Runtime.FastTree.Internal.MD5Hash[] -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes array" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(cli::array &lt;Microsoft::ML::Runtime::FastTree::Internal::MD5Hash&gt; ^ array);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(Platform::Array &lt;Microsoft::ML::Runtime::FastTree::Internal::MD5Hash&gt; ^ array);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="array" Type="Microsoft.ML.Runtime.FastTree.Internal.MD5Hash[]" RefType="this" />
        </Parameters>
        <Docs>
          <param name="array">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(Microsoft.ML.Runtime.FastTree.Internal.MD5Hash[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="SizeInBytes">
        <MemberSignature Language="C#" Value="public static int SizeInBytes (this byte a);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeInBytes(unsigned int8 a) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Byte)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SizeInBytes (a As Byte) As Integer" />
        <MemberSignature Language="F#" Value="static member SizeInBytes : byte -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes a" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(System::Byte a);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(byte a);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Byte" RefType="this" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Byte)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="SizeInBytes">
        <MemberSignature Language="C#" Value="public static int SizeInBytes (this byte[] a);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeInBytes(unsigned int8[] a) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Byte[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SizeInBytes (a As Byte()) As Integer" />
        <MemberSignature Language="F#" Value="static member SizeInBytes : byte[] -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes a" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(cli::array &lt;System::Byte&gt; ^ a);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(Platform::Array &lt;byte&gt; ^ a);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Byte[]" RefType="this" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Byte[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Double" />
      </Targets>
      <Member MemberName="SizeInBytes">
        <MemberSignature Language="C#" Value="public static int SizeInBytes (this double a);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeInBytes(float64 a) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Double)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SizeInBytes (a As Double) As Integer" />
        <MemberSignature Language="F#" Value="static member SizeInBytes : double -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes a" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(double a);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(double a);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Double" RefType="this" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Double" />
      </Targets>
      <Member MemberName="SizeInBytes">
        <MemberSignature Language="C#" Value="public static int SizeInBytes (this double[] array);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeInBytes(float64[] array) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Double[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SizeInBytes (array As Double()) As Integer" />
        <MemberSignature Language="F#" Value="static member SizeInBytes : double[] -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes array" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(cli::array &lt;double&gt; ^ array);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(Platform::Array &lt;double&gt; ^ array);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="array" Type="System.Double[]" RefType="this" />
        </Parameters>
        <Docs>
          <param name="array">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Double[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Double" />
      </Targets>
      <Member MemberName="SizeInBytes">
        <MemberSignature Language="C#" Value="public static int SizeInBytes (this double[][] array);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeInBytes(float64[][] array) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Double[][])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SizeInBytes (array As Double()()) As Integer" />
        <MemberSignature Language="F#" Value="static member SizeInBytes : double[][] -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes array" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(cli::array &lt;cli::array &lt;double&gt; ^&gt; ^ array);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="array" Type="System.Double[][]" RefType="this" />
        </Parameters>
        <Docs>
          <param name="array">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Double[][])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Int16" />
      </Targets>
      <Member MemberName="SizeInBytes">
        <MemberSignature Language="C#" Value="public static int SizeInBytes (this short a);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeInBytes(int16 a) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Int16)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SizeInBytes (a As Short) As Integer" />
        <MemberSignature Language="F#" Value="static member SizeInBytes : int16 -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes a" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(short a);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(short a);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Int16" RefType="this" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Int16)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Int16" />
      </Targets>
      <Member MemberName="SizeInBytes">
        <MemberSignature Language="C#" Value="public static int SizeInBytes (this short[] a);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeInBytes(int16[] a) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Int16[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SizeInBytes (a As Short()) As Integer" />
        <MemberSignature Language="F#" Value="static member SizeInBytes : int16[] -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes a" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(cli::array &lt;short&gt; ^ a);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(Platform::Array &lt;short&gt; ^ a);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Int16[]" RefType="this" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Int16[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Int32" />
      </Targets>
      <Member MemberName="SizeInBytes">
        <MemberSignature Language="C#" Value="public static int SizeInBytes (this int a);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeInBytes(int32 a) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SizeInBytes (a As Integer) As Integer" />
        <MemberSignature Language="F#" Value="static member SizeInBytes : int -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes a" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(int a);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(int a);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Int32" RefType="this" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Int32" />
      </Targets>
      <Member MemberName="SizeInBytes">
        <MemberSignature Language="C#" Value="public static int SizeInBytes (this int[] array);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeInBytes(int32[] array) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Int32[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SizeInBytes (array As Integer()) As Integer" />
        <MemberSignature Language="F#" Value="static member SizeInBytes : int[] -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes array" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(cli::array &lt;int&gt; ^ array);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(Platform::Array &lt;int&gt; ^ array);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="array" Type="System.Int32[]" RefType="this" />
        </Parameters>
        <Docs>
          <param name="array">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Int32[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Int64" />
      </Targets>
      <Member MemberName="SizeInBytes">
        <MemberSignature Language="C#" Value="public static int SizeInBytes (this long a);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeInBytes(int64 a) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Int64)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SizeInBytes (a As Long) As Integer" />
        <MemberSignature Language="F#" Value="static member SizeInBytes : int64 -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes a" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(long a);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(long long a);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Int64" RefType="this" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Int64)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Int64" />
      </Targets>
      <Member MemberName="SizeInBytes">
        <MemberSignature Language="C#" Value="public static int SizeInBytes (this long[] array);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeInBytes(int64[] array) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Int64[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SizeInBytes (array As Long()) As Integer" />
        <MemberSignature Language="F#" Value="static member SizeInBytes : int64[] -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes array" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(cli::array &lt;long&gt; ^ array);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(Platform::Array &lt;long long&gt; ^ array);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="array" Type="System.Int64[]" RefType="this" />
        </Parameters>
        <Docs>
          <param name="array">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Int64[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Single" />
      </Targets>
      <Member MemberName="SizeInBytes">
        <MemberSignature Language="C#" Value="public static int SizeInBytes (this float a);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeInBytes(float32 a) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Single)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SizeInBytes (a As Single) As Integer" />
        <MemberSignature Language="F#" Value="static member SizeInBytes : single -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes a" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(float a);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(float a);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Single" RefType="this" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Single)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Single" />
      </Targets>
      <Member MemberName="SizeInBytes">
        <MemberSignature Language="C#" Value="public static int SizeInBytes (this float[] array);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeInBytes(float32[] array) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Single[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SizeInBytes (array As Single()) As Integer" />
        <MemberSignature Language="F#" Value="static member SizeInBytes : single[] -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes array" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(cli::array &lt;float&gt; ^ array);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(Platform::Array &lt;float&gt; ^ array);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="array" Type="System.Single[]" RefType="this" />
        </Parameters>
        <Docs>
          <param name="array">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.Single[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="SizeInBytes">
        <MemberSignature Language="C#" Value="public static int SizeInBytes (this string a);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeInBytes(string a) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SizeInBytes (a As String) As Integer" />
        <MemberSignature Language="F#" Value="static member SizeInBytes : string -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes a" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(System::String ^ a);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(Platform::String ^ a);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.String" RefType="this" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="SizeInBytes">
        <MemberSignature Language="C#" Value="public static long SizeInBytes (this string[] array);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SizeInBytes(string[] array) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.String[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SizeInBytes (array As String()) As Long" />
        <MemberSignature Language="F#" Value="static member SizeInBytes : string[] -&gt; int64" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes array" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long SizeInBytes(cli::array &lt;System::String ^&gt; ^ array);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long long SizeInBytes(Platform::Array &lt;Platform::String ^&gt; ^ array);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int64</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="array" Type="System.String[]" RefType="this" />
        </Parameters>
        <Docs>
          <param name="array">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.String[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.UInt16" />
      </Targets>
      <Member MemberName="SizeInBytes">
        <MemberSignature Language="C#" Value="public static int SizeInBytes (this ushort a);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeInBytes(unsigned int16 a) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.UInt16)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SizeInBytes (a As UShort) As Integer" />
        <MemberSignature Language="F#" Value="static member SizeInBytes : uint16 -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes a" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(System::UInt16 a);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(unsigned short a);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.UInt16" RefType="this" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.UInt16)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.UInt16" />
      </Targets>
      <Member MemberName="SizeInBytes">
        <MemberSignature Language="C#" Value="public static int SizeInBytes (this ushort[] a);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeInBytes(unsigned int16[] a) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.UInt16[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SizeInBytes (a As UShort()) As Integer" />
        <MemberSignature Language="F#" Value="static member SizeInBytes : uint16[] -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes a" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(cli::array &lt;System::UInt16&gt; ^ a);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(Platform::Array &lt;unsigned short&gt; ^ a);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.UInt16[]" RefType="this" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.UInt16[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.UInt32" />
      </Targets>
      <Member MemberName="SizeInBytes">
        <MemberSignature Language="C#" Value="public static int SizeInBytes (this uint a);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeInBytes(unsigned int32 a) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.UInt32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SizeInBytes (a As UInteger) As Integer" />
        <MemberSignature Language="F#" Value="static member SizeInBytes : uint32 -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes a" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(System::UInt32 a);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(unsigned int a);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.UInt32" RefType="this" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.UInt32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.UInt32" />
      </Targets>
      <Member MemberName="SizeInBytes">
        <MemberSignature Language="C#" Value="public static int SizeInBytes (this uint[] array);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeInBytes(unsigned int32[] array) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.UInt32[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SizeInBytes (array As UInteger()) As Integer" />
        <MemberSignature Language="F#" Value="static member SizeInBytes : uint32[] -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes array" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(cli::array &lt;System::UInt32&gt; ^ array);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(Platform::Array &lt;unsigned int&gt; ^ array);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="array" Type="System.UInt32[]" RefType="this" />
        </Parameters>
        <Docs>
          <param name="array">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.UInt32[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.UInt64" />
      </Targets>
      <Member MemberName="SizeInBytes">
        <MemberSignature Language="C#" Value="public static int SizeInBytes (this ulong a);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeInBytes(unsigned int64 a) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.UInt64)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SizeInBytes (a As ULong) As Integer" />
        <MemberSignature Language="F#" Value="static member SizeInBytes : uint64 -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes a" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(System::UInt64 a);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(unsigned long long a);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.UInt64" RefType="this" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.UInt64)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.UInt64" />
      </Targets>
      <Member MemberName="SizeInBytes">
        <MemberSignature Language="C#" Value="public static int SizeInBytes (this ulong[] array);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeInBytes(unsigned int64[] array) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.UInt64[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SizeInBytes (array As ULong()) As Integer" />
        <MemberSignature Language="F#" Value="static member SizeInBytes : uint64[] -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes array" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(cli::array &lt;System::UInt64&gt; ^ array);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int SizeInBytes(Platform::Array &lt;unsigned long long&gt; ^ array);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="array" Type="System.UInt64[]" RefType="this" />
        </Parameters>
        <Docs>
          <param name="array">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.SizeInBytes(System.UInt64[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToByte">
        <MemberSignature Language="C#" Value="public static byte ToByte (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByte(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToByte (buffer As Byte(), ByRef position As Integer) As Byte" />
        <MemberSignature Language="F#" Value="static member ToByte : byte[] *  -&gt; byte" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByte (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Byte ToByte(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Byte</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByte(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.FastTree.Internal.MD5Hash" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static void ToByteArray (this Microsoft.ML.Runtime.FastTree.Internal.MD5Hash[] a, byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToByteArray(valuetype Microsoft.ML.Runtime.FastTree.Internal.MD5Hash[] a, unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(Microsoft.ML.Runtime.FastTree.Internal.MD5Hash[],System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToByteArray (a As MD5Hash(), buffer As Byte(), ByRef position As Integer)" />
        <MemberSignature Language="F#" Value="static member ToByteArray : Microsoft.ML.Runtime.FastTree.Internal.MD5Hash[] * byte[] *  -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (a, buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToByteArray(cli::array &lt;Microsoft::ML::Runtime::FastTree::Internal::MD5Hash&gt; ^ a, cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="Microsoft.ML.Runtime.FastTree.Internal.MD5Hash[]" RefType="this" />
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(Microsoft.ML.Runtime.FastTree.Internal.MD5Hash[],System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static void ToByteArray (this byte a, byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToByteArray(unsigned int8 a, unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Byte,System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToByteArray (a As Byte, buffer As Byte(), ByRef position As Integer)" />
        <MemberSignature Language="F#" Value="static member ToByteArray : byte * byte[] *  -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (a, buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToByteArray(System::Byte a, cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Byte" RefType="this" />
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Byte,System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static void ToByteArray (this byte[] a, byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToByteArray(unsigned int8[] a, unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Byte[],System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToByteArray (a As Byte(), buffer As Byte(), ByRef position As Integer)" />
        <MemberSignature Language="F#" Value="static member ToByteArray : byte[] * byte[] *  -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (a, buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToByteArray(cli::array &lt;System::Byte&gt; ^ a, cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Byte[]" RefType="this" />
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Byte[],System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static byte[] ToByteArray (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] ToByteArray(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToByteArray (buffer As Byte(), ByRef position As Integer) As Byte()" />
        <MemberSignature Language="F#" Value="static member ToByteArray : byte[] *  -&gt; byte[]" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;System::Byte&gt; ^ ToByteArray(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Byte[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Double" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static void ToByteArray (this double a, byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToByteArray(float64 a, unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Double,System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToByteArray (a As Double, buffer As Byte(), ByRef position As Integer)" />
        <MemberSignature Language="F#" Value="static member ToByteArray : double * byte[] *  -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (a, buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToByteArray(double a, cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Double" RefType="this" />
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Double,System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Double" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static void ToByteArray (this double[] a, byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToByteArray(float64[] a, unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Double[],System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToByteArray (a As Double(), buffer As Byte(), ByRef position As Integer)" />
        <MemberSignature Language="F#" Value="static member ToByteArray : double[] * byte[] *  -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (a, buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToByteArray(cli::array &lt;double&gt; ^ a, cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Double[]" RefType="this" />
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Double[],System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Double" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static void ToByteArray (this double[][] a, byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToByteArray(float64[][] a, unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Double[][],System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToByteArray (a As Double()(), buffer As Byte(), ByRef position As Integer)" />
        <MemberSignature Language="F#" Value="static member ToByteArray : double[][] * byte[] *  -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (a, buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToByteArray(cli::array &lt;cli::array &lt;double&gt; ^&gt; ^ a, cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Double[][]" RefType="this" />
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Double[][],System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Int16" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static void ToByteArray (this short a, byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToByteArray(int16 a, unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Int16,System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToByteArray (a As Short, buffer As Byte(), ByRef position As Integer)" />
        <MemberSignature Language="F#" Value="static member ToByteArray : int16 * byte[] *  -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (a, buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToByteArray(short a, cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Int16" RefType="this" />
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Int16,System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Int16" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static void ToByteArray (this short[] a, byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToByteArray(int16[] a, unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Int16[],System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToByteArray (a As Short(), buffer As Byte(), ByRef position As Integer)" />
        <MemberSignature Language="F#" Value="static member ToByteArray : int16[] * byte[] *  -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (a, buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToByteArray(cli::array &lt;short&gt; ^ a, cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Int16[]" RefType="this" />
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Int16[],System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Int32" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static void ToByteArray (this int a, byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToByteArray(int32 a, unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Int32,System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToByteArray (a As Integer, buffer As Byte(), ByRef position As Integer)" />
        <MemberSignature Language="F#" Value="static member ToByteArray : int * byte[] *  -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (a, buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToByteArray(int a, cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Int32" RefType="this" />
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Int32,System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Int32" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static void ToByteArray (this int[] a, byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToByteArray(int32[] a, unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Int32[],System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToByteArray (a As Integer(), buffer As Byte(), ByRef position As Integer)" />
        <MemberSignature Language="F#" Value="static member ToByteArray : int[] * byte[] *  -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (a, buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToByteArray(cli::array &lt;int&gt; ^ a, cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Int32[]" RefType="this" />
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Int32[],System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Int64" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static void ToByteArray (this long a, byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToByteArray(int64 a, unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Int64,System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToByteArray (a As Long, buffer As Byte(), ByRef position As Integer)" />
        <MemberSignature Language="F#" Value="static member ToByteArray : int64 * byte[] *  -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (a, buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToByteArray(long a, cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Int64" RefType="this" />
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Int64,System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Int64" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static void ToByteArray (this long[] a, byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToByteArray(int64[] a, unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Int64[],System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToByteArray (a As Long(), buffer As Byte(), ByRef position As Integer)" />
        <MemberSignature Language="F#" Value="static member ToByteArray : int64[] * byte[] *  -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (a, buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToByteArray(cli::array &lt;long&gt; ^ a, cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Int64[]" RefType="this" />
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Int64[],System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Single" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static void ToByteArray (this float a, byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToByteArray(float32 a, unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Single,System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToByteArray (a As Single, buffer As Byte(), ByRef position As Integer)" />
        <MemberSignature Language="F#" Value="static member ToByteArray : single * byte[] *  -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (a, buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToByteArray(float a, cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Single" RefType="this" />
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Single,System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Single" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static void ToByteArray (this float[] a, byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToByteArray(float32[] a, unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Single[],System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToByteArray (a As Single(), buffer As Byte(), ByRef position As Integer)" />
        <MemberSignature Language="F#" Value="static member ToByteArray : single[] * byte[] *  -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (a, buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToByteArray(cli::array &lt;float&gt; ^ a, cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.Single[]" RefType="this" />
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.Single[],System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static byte[] ToByteArray (this string a);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] ToByteArray(string a) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToByteArray (a As String) As Byte()" />
        <MemberSignature Language="F#" Value="static member ToByteArray : string -&gt; byte[]" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray a" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;System::Byte&gt; ^ ToByteArray(System::String ^ a);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Platform::Array &lt;byte&gt; ^ ToByteArray(Platform::String ^ a);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Byte[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.String" RefType="this" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static void ToByteArray (this string a, byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToByteArray(string a, unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.String,System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToByteArray (a As String, buffer As Byte(), ByRef position As Integer)" />
        <MemberSignature Language="F#" Value="static member ToByteArray : string * byte[] *  -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (a, buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToByteArray(System::String ^ a, cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.String" RefType="this" />
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.String,System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static void ToByteArray (this string[] a, byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToByteArray(string[] a, unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.String[],System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToByteArray (a As String(), buffer As Byte(), ByRef position As Integer)" />
        <MemberSignature Language="F#" Value="static member ToByteArray : string[] * byte[] *  -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (a, buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToByteArray(cli::array &lt;System::String ^&gt; ^ a, cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.String[]" RefType="this" />
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.String[],System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.UInt16" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static void ToByteArray (this ushort a, byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToByteArray(unsigned int16 a, unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.UInt16,System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToByteArray (a As UShort, buffer As Byte(), ByRef position As Integer)" />
        <MemberSignature Language="F#" Value="static member ToByteArray : uint16 * byte[] *  -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (a, buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToByteArray(System::UInt16 a, cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.UInt16" RefType="this" />
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.UInt16,System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.UInt16" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static void ToByteArray (this ushort[] a, byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToByteArray(unsigned int16[] a, unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.UInt16[],System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToByteArray (a As UShort(), buffer As Byte(), ByRef position As Integer)" />
        <MemberSignature Language="F#" Value="static member ToByteArray : uint16[] * byte[] *  -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (a, buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToByteArray(cli::array &lt;System::UInt16&gt; ^ a, cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.UInt16[]" RefType="this" />
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.UInt16[],System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.UInt32" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static void ToByteArray (this uint a, byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToByteArray(unsigned int32 a, unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.UInt32,System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToByteArray (a As UInteger, buffer As Byte(), ByRef position As Integer)" />
        <MemberSignature Language="F#" Value="static member ToByteArray : uint32 * byte[] *  -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (a, buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToByteArray(System::UInt32 a, cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.UInt32" RefType="this" />
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.UInt32,System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.UInt32" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static void ToByteArray (this uint[] a, byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToByteArray(unsigned int32[] a, unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.UInt32[],System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToByteArray (a As UInteger(), buffer As Byte(), ByRef position As Integer)" />
        <MemberSignature Language="F#" Value="static member ToByteArray : uint32[] * byte[] *  -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (a, buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToByteArray(cli::array &lt;System::UInt32&gt; ^ a, cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.UInt32[]" RefType="this" />
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.UInt32[],System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.UInt64" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static void ToByteArray (this ulong a, byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToByteArray(unsigned int64 a, unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.UInt64,System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToByteArray (a As ULong, buffer As Byte(), ByRef position As Integer)" />
        <MemberSignature Language="F#" Value="static member ToByteArray : uint64 * byte[] *  -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (a, buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToByteArray(System::UInt64 a, cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.UInt64" RefType="this" />
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.UInt64,System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.UInt64" />
      </Targets>
      <Member MemberName="ToByteArray">
        <MemberSignature Language="C#" Value="public static void ToByteArray (this ulong[] a, byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToByteArray(unsigned int64[] a, unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.UInt64[],System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToByteArray (a As ULong(), buffer As Byte(), ByRef position As Integer)" />
        <MemberSignature Language="F#" Value="static member ToByteArray : uint64[] * byte[] *  -&gt; unit" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray (a, buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToByteArray(cli::array &lt;System::UInt64&gt; ^ a, cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="System.UInt64[]" RefType="this" />
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToByteArray(System.UInt64[],System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToDouble">
        <MemberSignature Language="C#" Value="public static double ToDouble (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToDouble(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDouble (buffer As Byte(), ByRef position As Integer) As Double" />
        <MemberSignature Language="F#" Value="static member ToDouble : byte[] *  -&gt; double" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToDouble (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double ToDouble(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Double</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToDouble(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToDoubleArray">
        <MemberSignature Language="C#" Value="public static double[] ToDoubleArray (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64[] ToDoubleArray(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToDoubleArray(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDoubleArray (buffer As Byte(), ByRef position As Integer) As Double()" />
        <MemberSignature Language="F#" Value="static member ToDoubleArray : byte[] *  -&gt; double[]" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToDoubleArray (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;double&gt; ^ ToDoubleArray(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Double[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToDoubleArray(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToDoubleJaggedArray">
        <MemberSignature Language="C#" Value="public static double[][] ToDoubleJaggedArray (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64[][] ToDoubleJaggedArray(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToDoubleJaggedArray(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDoubleJaggedArray (buffer As Byte(), ByRef position As Integer) As Double()()" />
        <MemberSignature Language="F#" Value="static member ToDoubleJaggedArray : byte[] *  -&gt; double[][]" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToDoubleJaggedArray (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;cli::array &lt;double&gt; ^&gt; ^ ToDoubleJaggedArray(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Double[][]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToDoubleJaggedArray(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToFloat">
        <MemberSignature Language="C#" Value="public static float ToFloat (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToFloat(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToFloat(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToFloat (buffer As Byte(), ByRef position As Integer) As Single" />
        <MemberSignature Language="F#" Value="static member ToFloat : byte[] *  -&gt; single" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToFloat (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float ToFloat(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Single</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToFloat(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToFloatArray">
        <MemberSignature Language="C#" Value="public static float[] ToFloatArray (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32[] ToFloatArray(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToFloatArray(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToFloatArray (buffer As Byte(), ByRef position As Integer) As Single()" />
        <MemberSignature Language="F#" Value="static member ToFloatArray : byte[] *  -&gt; single[]" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToFloatArray (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;float&gt; ^ ToFloatArray(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Single[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToFloatArray(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToInt">
        <MemberSignature Language="C#" Value="public static int ToInt (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToInt(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToInt (buffer As Byte(), ByRef position As Integer) As Integer" />
        <MemberSignature Language="F#" Value="static member ToInt : byte[] *  -&gt; int" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToInt (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int ToInt(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToInt(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToIntArray">
        <MemberSignature Language="C#" Value="public static int[] ToIntArray (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] ToIntArray(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToIntArray(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToIntArray (buffer As Byte(), ByRef position As Integer) As Integer()" />
        <MemberSignature Language="F#" Value="static member ToIntArray : byte[] *  -&gt; int[]" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToIntArray (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;int&gt; ^ ToIntArray(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToIntArray(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToIntArray">
        <MemberSignature Language="C#" Value="public static int[] ToIntArray (this byte[] buffer, ref int position, int length);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] ToIntArray(unsigned int8[] buffer, int32&amp; position, int32 length) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToIntArray(System.Byte[],System.Int32@,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToIntArray (buffer As Byte(), ByRef position As Integer, length As Integer) As Integer()" />
        <MemberSignature Language="F#" Value="static member ToIntArray : byte[] *  * int -&gt; int[]" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToIntArray (buffer, position, length)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;int&gt; ^ ToIntArray(cli::array &lt;System::Byte&gt; ^ buffer, int % position, int length);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <param name="length">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToIntArray(System.Byte[],System.Int32@,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToLong">
        <MemberSignature Language="C#" Value="public static long ToLong (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToLong(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToLong(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLong (buffer As Byte(), ByRef position As Integer) As Long" />
        <MemberSignature Language="F#" Value="static member ToLong : byte[] *  -&gt; int64" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToLong (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long ToLong(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int64</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToLong(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToLongArray">
        <MemberSignature Language="C#" Value="public static long[] ToLongArray (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64[] ToLongArray(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToLongArray(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLongArray (buffer As Byte(), ByRef position As Integer) As Long()" />
        <MemberSignature Language="F#" Value="static member ToLongArray : byte[] *  -&gt; int64[]" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToLongArray (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;long&gt; ^ ToLongArray(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int64[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToLongArray(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToShort">
        <MemberSignature Language="C#" Value="public static short ToShort (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToShort(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToShort(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToShort (buffer As Byte(), ByRef position As Integer) As Short" />
        <MemberSignature Language="F#" Value="static member ToShort : byte[] *  -&gt; int16" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToShort (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static short ToShort(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int16</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToShort(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToShortArray">
        <MemberSignature Language="C#" Value="public static short[] ToShortArray (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16[] ToShortArray(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToShortArray(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToShortArray (buffer As Byte(), ByRef position As Integer) As Short()" />
        <MemberSignature Language="F#" Value="static member ToShortArray : byte[] *  -&gt; int16[]" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToShortArray (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;short&gt; ^ ToShortArray(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int16[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToShortArray(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToString">
        <MemberSignature Language="C#" Value="public static string ToString (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToString(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToString (buffer As Byte(), ByRef position As Integer) As String" />
        <MemberSignature Language="F#" Value="static member ToString : byte[] *  -&gt; string" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToString (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ ToString(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToString(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToStringArray">
        <MemberSignature Language="C#" Value="public static string[] ToStringArray (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] ToStringArray(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToStringArray(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToStringArray (buffer As Byte(), ByRef position As Integer) As String()" />
        <MemberSignature Language="F#" Value="static member ToStringArray : byte[] *  -&gt; string[]" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToStringArray (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;System::String ^&gt; ^ ToStringArray(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToStringArray(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToUInt">
        <MemberSignature Language="C#" Value="public static uint ToUInt (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToUInt(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToUInt (buffer As Byte(), ByRef position As Integer) As UInteger" />
        <MemberSignature Language="F#" Value="static member ToUInt : byte[] *  -&gt; uint32" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToUInt (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::UInt32 ToUInt(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.UInt32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToUInt(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToUInt128">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.FastTree.Internal.MD5Hash ToUInt128 (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.ML.Runtime.FastTree.Internal.MD5Hash ToUInt128(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToUInt128(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToUInt128 (buffer As Byte(), ByRef position As Integer) As MD5Hash" />
        <MemberSignature Language="F#" Value="static member ToUInt128 : byte[] *  -&gt; Microsoft.ML.Runtime.FastTree.Internal.MD5Hash" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToUInt128 (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::FastTree::Internal::MD5Hash ToUInt128(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.FastTree.Internal.MD5Hash</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToUInt128(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToUInt128Array">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.FastTree.Internal.MD5Hash[] ToUInt128Array (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.ML.Runtime.FastTree.Internal.MD5Hash[] ToUInt128Array(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToUInt128Array(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToUInt128Array (buffer As Byte(), ByRef position As Integer) As MD5Hash()" />
        <MemberSignature Language="F#" Value="static member ToUInt128Array : byte[] *  -&gt; Microsoft.ML.Runtime.FastTree.Internal.MD5Hash[]" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToUInt128Array (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;Microsoft::ML::Runtime::FastTree::Internal::MD5Hash&gt; ^ ToUInt128Array(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.FastTree.Internal.MD5Hash[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToUInt128Array(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToUIntArray">
        <MemberSignature Language="C#" Value="public static uint[] ToUIntArray (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32[] ToUIntArray(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToUIntArray(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToUIntArray (buffer As Byte(), ByRef position As Integer) As UInteger()" />
        <MemberSignature Language="F#" Value="static member ToUIntArray : byte[] *  -&gt; uint32[]" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToUIntArray (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;System::UInt32&gt; ^ ToUIntArray(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.UInt32[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToUIntArray(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToULong">
        <MemberSignature Language="C#" Value="public static ulong ToULong (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToULong(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToULong(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToULong (buffer As Byte(), ByRef position As Integer) As ULong" />
        <MemberSignature Language="F#" Value="static member ToULong : byte[] *  -&gt; uint64" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToULong (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::UInt64 ToULong(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.UInt64</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToULong(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToULongArray">
        <MemberSignature Language="C#" Value="public static ulong[] ToULongArray (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64[] ToULongArray(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToULongArray(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToULongArray (buffer As Byte(), ByRef position As Integer) As ULong()" />
        <MemberSignature Language="F#" Value="static member ToULongArray : byte[] *  -&gt; uint64[]" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToULongArray (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;System::UInt64&gt; ^ ToULongArray(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.UInt64[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToULongArray(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToUShort">
        <MemberSignature Language="C#" Value="public static ushort ToUShort (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUShort(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToUShort(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToUShort (buffer As Byte(), ByRef position As Integer) As UShort" />
        <MemberSignature Language="F#" Value="static member ToUShort : byte[] *  -&gt; uint16" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToUShort (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::UInt16 ToUShort(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.UInt16</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToUShort(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Byte" />
      </Targets>
      <Member MemberName="ToUShortArray">
        <MemberSignature Language="C#" Value="public static ushort[] ToUShortArray (this byte[] buffer, ref int position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16[] ToUShortArray(unsigned int8[] buffer, int32&amp; position) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToUShortArray(System.Byte[],System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToUShortArray (buffer As Byte(), ByRef position As Integer) As UShort()" />
        <MemberSignature Language="F#" Value="static member ToUShortArray : byte[] *  -&gt; uint16[]" Usage="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToUShortArray (buffer, position)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;System::UInt16&gt; ^ ToUShortArray(cli::array &lt;System::Byte&gt; ^ buffer, int % position);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.UInt16[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" RefType="this" />
          <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="buffer">To be added.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions" Member="M:Microsoft.ML.Runtime.FastTree.Internal.ToByteArrayExtensions.ToUShortArray(System.Byte[],System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IHost" />
      </Targets>
      <Member MemberName="Apply&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static T Apply&lt;T&gt; (this Microsoft.ML.Runtime.IHost host, string channelName, Func&lt;Microsoft.ML.Runtime.IChannel,T&gt; func);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Apply&lt;T&gt;(class Microsoft.ML.Runtime.IHost host, string channelName, class System.Func`2&lt;class Microsoft.ML.Runtime.IChannel, !!T&gt; func) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.HostExtensions.Apply``1(Microsoft.ML.Runtime.IHost,System.String,System.Func{Microsoft.ML.Runtime.IChannel,``0})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Apply(Of T) (host As IHost, channelName As String, func As Func(Of IChannel, T)) As T" />
        <MemberSignature Language="F#" Value="static member Apply : Microsoft.ML.Runtime.IHost * string * Func&lt;Microsoft.ML.Runtime.IChannel, 'T&gt; -&gt; 'T" Usage="Microsoft.ML.Runtime.HostExtensions.Apply (host, channelName, func)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Apply(Microsoft::ML::Runtime::IHost ^ host, System::String ^ channelName, Func&lt;Microsoft::ML::Runtime::IChannel ^, T&gt; ^ func);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>T</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="host" Type="Microsoft.ML.Runtime.IHost" RefType="this" />
          <Parameter Name="channelName" Type="System.String" />
          <Parameter Name="func" Type="System.Func&lt;Microsoft.ML.Runtime.IChannel,T&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="host">To be added.</param>
          <param name="channelName">To be added.</param>
          <param name="func">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.HostExtensions" Member="M:Microsoft.ML.Runtime.HostExtensions.Apply``1(Microsoft.ML.Runtime.IHost,System.String,System.Func{Microsoft.ML.Runtime.IChannel,``0})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IChannel" />
      </Targets>
      <Member MemberName="Error">
        <MemberSignature Language="C#" Value="public static void Error (this Microsoft.ML.Runtime.IChannel ch, string fmt);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Error(class Microsoft.ML.Runtime.IChannel ch, string fmt) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.HostExtensions.Error(Microsoft.ML.Runtime.IChannel,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Error (ch As IChannel, fmt As String)" />
        <MemberSignature Language="F#" Value="static member Error : Microsoft.ML.Runtime.IChannel * string -&gt; unit" Usage="Microsoft.ML.Runtime.HostExtensions.Error (ch, fmt)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Error(Microsoft::ML::Runtime::IChannel ^ ch, System::String ^ fmt);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ch" Type="Microsoft.ML.Runtime.IChannel" RefType="this" />
          <Parameter Name="fmt" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ch">To be added.</param>
          <param name="fmt">To be added.</param>
          <summary>
            Convenience variant of <see cref="M:Microsoft.ML.Runtime.IChannel.Error(Microsoft.ML.Runtime.MessageSensitivity,System.String)" />
            setting <see cref="F:Microsoft.ML.Runtime.MessageSensitivity.Unknown" />.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.HostExtensions" Member="M:Microsoft.ML.Runtime.HostExtensions.Error(Microsoft.ML.Runtime.IChannel,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IChannel" />
      </Targets>
      <Member MemberName="Error">
        <MemberSignature Language="C#" Value="public static void Error (this Microsoft.ML.Runtime.IChannel ch, string fmt, params object[] args);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Error(class Microsoft.ML.Runtime.IChannel ch, string fmt, object[] args) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.HostExtensions.Error(Microsoft.ML.Runtime.IChannel,System.String,System.Object[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Error (ch As IChannel, fmt As String, ParamArray args As Object())" />
        <MemberSignature Language="F#" Value="static member Error : Microsoft.ML.Runtime.IChannel * string * obj[] -&gt; unit" Usage="Microsoft.ML.Runtime.HostExtensions.Error (ch, fmt, args)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Error(Microsoft::ML::Runtime::IChannel ^ ch, System::String ^ fmt, ... cli::array &lt;System::Object ^&gt; ^ args);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ch" Type="Microsoft.ML.Runtime.IChannel" RefType="this" />
          <Parameter Name="fmt" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="ch">To be added.</param>
          <param name="fmt">To be added.</param>
          <param name="args">To be added.</param>
          <summary>
            Convenience variant of <see cref="M:Microsoft.ML.Runtime.IChannel.Error(Microsoft.ML.Runtime.MessageSensitivity,System.String,System.Object[])" />
            setting <see cref="F:Microsoft.ML.Runtime.MessageSensitivity.Unknown" />.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.HostExtensions" Member="M:Microsoft.ML.Runtime.HostExtensions.Error(Microsoft.ML.Runtime.IChannel,System.String,System.Object[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IChannel" />
      </Targets>
      <Member MemberName="Info">
        <MemberSignature Language="C#" Value="public static void Info (this Microsoft.ML.Runtime.IChannel ch, string fmt);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Info(class Microsoft.ML.Runtime.IChannel ch, string fmt) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.HostExtensions.Info(Microsoft.ML.Runtime.IChannel,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Info (ch As IChannel, fmt As String)" />
        <MemberSignature Language="F#" Value="static member Info : Microsoft.ML.Runtime.IChannel * string -&gt; unit" Usage="Microsoft.ML.Runtime.HostExtensions.Info (ch, fmt)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Info(Microsoft::ML::Runtime::IChannel ^ ch, System::String ^ fmt);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ch" Type="Microsoft.ML.Runtime.IChannel" RefType="this" />
          <Parameter Name="fmt" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ch">To be added.</param>
          <param name="fmt">To be added.</param>
          <summary>
            Convenience variant of <see cref="M:Microsoft.ML.Runtime.IChannel.Info(Microsoft.ML.Runtime.MessageSensitivity,System.String)" />
            setting <see cref="F:Microsoft.ML.Runtime.MessageSensitivity.Unknown" />.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.HostExtensions" Member="M:Microsoft.ML.Runtime.HostExtensions.Info(Microsoft.ML.Runtime.IChannel,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IChannel" />
      </Targets>
      <Member MemberName="Info">
        <MemberSignature Language="C#" Value="public static void Info (this Microsoft.ML.Runtime.IChannel ch, string fmt, params object[] args);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Info(class Microsoft.ML.Runtime.IChannel ch, string fmt, object[] args) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.HostExtensions.Info(Microsoft.ML.Runtime.IChannel,System.String,System.Object[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Info (ch As IChannel, fmt As String, ParamArray args As Object())" />
        <MemberSignature Language="F#" Value="static member Info : Microsoft.ML.Runtime.IChannel * string * obj[] -&gt; unit" Usage="Microsoft.ML.Runtime.HostExtensions.Info (ch, fmt, args)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Info(Microsoft::ML::Runtime::IChannel ^ ch, System::String ^ fmt, ... cli::array &lt;System::Object ^&gt; ^ args);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ch" Type="Microsoft.ML.Runtime.IChannel" RefType="this" />
          <Parameter Name="fmt" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="ch">To be added.</param>
          <param name="fmt">To be added.</param>
          <param name="args">To be added.</param>
          <summary>
            Convenience variant of <see cref="M:Microsoft.ML.Runtime.IChannel.Info(Microsoft.ML.Runtime.MessageSensitivity,System.String,System.Object[])" />
            setting <see cref="F:Microsoft.ML.Runtime.MessageSensitivity.Unknown" />.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.HostExtensions" Member="M:Microsoft.ML.Runtime.HostExtensions.Info(Microsoft.ML.Runtime.IChannel,System.String,System.Object[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IChannel" />
      </Targets>
      <Member MemberName="Trace">
        <MemberSignature Language="C#" Value="public static void Trace (this Microsoft.ML.Runtime.IChannel ch, string fmt);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Trace(class Microsoft.ML.Runtime.IChannel ch, string fmt) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.HostExtensions.Trace(Microsoft.ML.Runtime.IChannel,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Trace (ch As IChannel, fmt As String)" />
        <MemberSignature Language="F#" Value="static member Trace : Microsoft.ML.Runtime.IChannel * string -&gt; unit" Usage="Microsoft.ML.Runtime.HostExtensions.Trace (ch, fmt)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Trace(Microsoft::ML::Runtime::IChannel ^ ch, System::String ^ fmt);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ch" Type="Microsoft.ML.Runtime.IChannel" RefType="this" />
          <Parameter Name="fmt" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ch">To be added.</param>
          <param name="fmt">To be added.</param>
          <summary>
            Convenience variant of <see cref="M:Microsoft.ML.Runtime.IChannel.Trace(Microsoft.ML.Runtime.MessageSensitivity,System.String)" />
            setting <see cref="F:Microsoft.ML.Runtime.MessageSensitivity.Unknown" />.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.HostExtensions" Member="M:Microsoft.ML.Runtime.HostExtensions.Trace(Microsoft.ML.Runtime.IChannel,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IChannel" />
      </Targets>
      <Member MemberName="Trace">
        <MemberSignature Language="C#" Value="public static void Trace (this Microsoft.ML.Runtime.IChannel ch, string fmt, params object[] args);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Trace(class Microsoft.ML.Runtime.IChannel ch, string fmt, object[] args) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.HostExtensions.Trace(Microsoft.ML.Runtime.IChannel,System.String,System.Object[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Trace (ch As IChannel, fmt As String, ParamArray args As Object())" />
        <MemberSignature Language="F#" Value="static member Trace : Microsoft.ML.Runtime.IChannel * string * obj[] -&gt; unit" Usage="Microsoft.ML.Runtime.HostExtensions.Trace (ch, fmt, args)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Trace(Microsoft::ML::Runtime::IChannel ^ ch, System::String ^ fmt, ... cli::array &lt;System::Object ^&gt; ^ args);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ch" Type="Microsoft.ML.Runtime.IChannel" RefType="this" />
          <Parameter Name="fmt" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="ch">To be added.</param>
          <param name="fmt">To be added.</param>
          <param name="args">To be added.</param>
          <summary>
            Convenience variant of <see cref="M:Microsoft.ML.Runtime.IChannel.Trace(Microsoft.ML.Runtime.MessageSensitivity,System.String,System.Object[])" />
            setting <see cref="F:Microsoft.ML.Runtime.MessageSensitivity.Unknown" />.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.HostExtensions" Member="M:Microsoft.ML.Runtime.HostExtensions.Trace(Microsoft.ML.Runtime.IChannel,System.String,System.Object[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IChannel" />
      </Targets>
      <Member MemberName="Warning">
        <MemberSignature Language="C#" Value="public static void Warning (this Microsoft.ML.Runtime.IChannel ch, string fmt);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Warning(class Microsoft.ML.Runtime.IChannel ch, string fmt) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.HostExtensions.Warning(Microsoft.ML.Runtime.IChannel,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Warning (ch As IChannel, fmt As String)" />
        <MemberSignature Language="F#" Value="static member Warning : Microsoft.ML.Runtime.IChannel * string -&gt; unit" Usage="Microsoft.ML.Runtime.HostExtensions.Warning (ch, fmt)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Warning(Microsoft::ML::Runtime::IChannel ^ ch, System::String ^ fmt);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ch" Type="Microsoft.ML.Runtime.IChannel" RefType="this" />
          <Parameter Name="fmt" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="ch">To be added.</param>
          <param name="fmt">To be added.</param>
          <summary>
            Convenience variant of <see cref="M:Microsoft.ML.Runtime.IChannel.Warning(Microsoft.ML.Runtime.MessageSensitivity,System.String)" />
            setting <see cref="F:Microsoft.ML.Runtime.MessageSensitivity.Unknown" />.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.HostExtensions" Member="M:Microsoft.ML.Runtime.HostExtensions.Warning(Microsoft.ML.Runtime.IChannel,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IChannel" />
      </Targets>
      <Member MemberName="Warning">
        <MemberSignature Language="C#" Value="public static void Warning (this Microsoft.ML.Runtime.IChannel ch, string fmt, params object[] args);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Warning(class Microsoft.ML.Runtime.IChannel ch, string fmt, object[] args) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.HostExtensions.Warning(Microsoft.ML.Runtime.IChannel,System.String,System.Object[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Warning (ch As IChannel, fmt As String, ParamArray args As Object())" />
        <MemberSignature Language="F#" Value="static member Warning : Microsoft.ML.Runtime.IChannel * string * obj[] -&gt; unit" Usage="Microsoft.ML.Runtime.HostExtensions.Warning (ch, fmt, args)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Warning(Microsoft::ML::Runtime::IChannel ^ ch, System::String ^ fmt, ... cli::array &lt;System::Object ^&gt; ^ args);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ch" Type="Microsoft.ML.Runtime.IChannel" RefType="this" />
          <Parameter Name="fmt" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="ch">To be added.</param>
          <param name="fmt">To be added.</param>
          <param name="args">To be added.</param>
          <summary>
            Convenience variant of <see cref="M:Microsoft.ML.Runtime.IChannel.Warning(Microsoft.ML.Runtime.MessageSensitivity,System.String,System.Object[])" />
            setting <see cref="F:Microsoft.ML.Runtime.MessageSensitivity.Unknown" />.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.HostExtensions" Member="M:Microsoft.ML.Runtime.HostExtensions.Warning(Microsoft.ML.Runtime.IChannel,System.String,System.Object[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.List`1" />
      </Targets>
      <Member MemberName="Peek&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static T Peek&lt;T&gt; (this System.Collections.Generic.List&lt;T&gt; list);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Peek&lt;T&gt;(class System.Collections.Generic.List`1&lt;!!T&gt; list) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.ListExtensions.Peek``1(System.Collections.Generic.List{``0})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Peek(Of T) (list As List(Of T)) As T" />
        <MemberSignature Language="F#" Value="static member Peek : System.Collections.Generic.List&lt;'T&gt; -&gt; 'T" Usage="Microsoft.ML.Runtime.Internal.Utilities.ListExtensions.Peek list" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Peek(System::Collections::Generic::List&lt;T&gt; ^ list);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>T</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="list" Type="System.Collections.Generic.List&lt;T&gt;" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="list">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.ListExtensions" Member="M:Microsoft.ML.Runtime.Internal.Utilities.ListExtensions.Peek``1(System.Collections.Generic.List{``0})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.List`1" />
      </Targets>
      <Member MemberName="Pop&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static T Pop&lt;T&gt; (this System.Collections.Generic.List&lt;T&gt; list);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Pop&lt;T&gt;(class System.Collections.Generic.List`1&lt;!!T&gt; list) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.ListExtensions.Pop``1(System.Collections.Generic.List{``0})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Pop(Of T) (list As List(Of T)) As T" />
        <MemberSignature Language="F#" Value="static member Pop : System.Collections.Generic.List&lt;'T&gt; -&gt; 'T" Usage="Microsoft.ML.Runtime.Internal.Utilities.ListExtensions.Pop list" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Pop(System::Collections::Generic::List&lt;T&gt; ^ list);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>T</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="list" Type="System.Collections.Generic.List&lt;T&gt;" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="list">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.ListExtensions" Member="M:Microsoft.ML.Runtime.Internal.Utilities.ListExtensions.Pop``1(System.Collections.Generic.List{``0})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.List`1" />
      </Targets>
      <Member MemberName="PopTo&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static void PopTo&lt;T&gt; (this System.Collections.Generic.List&lt;T&gt; list, int depth);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PopTo&lt;T&gt;(class System.Collections.Generic.List`1&lt;!!T&gt; list, int32 depth) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.ListExtensions.PopTo``1(System.Collections.Generic.List{``0},System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub PopTo(Of T) (list As List(Of T), depth As Integer)" />
        <MemberSignature Language="F#" Value="static member PopTo : System.Collections.Generic.List&lt;'T&gt; * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.ListExtensions.PopTo (list, depth)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void PopTo(System::Collections::Generic::List&lt;T&gt; ^ list, int depth);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="list" Type="System.Collections.Generic.List&lt;T&gt;" RefType="this" />
          <Parameter Name="depth" Type="System.Int32" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="list">To be added.</param>
          <param name="depth">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.ListExtensions" Member="M:Microsoft.ML.Runtime.Internal.Utilities.ListExtensions.PopTo``1(System.Collections.Generic.List{``0},System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.List`1" />
      </Targets>
      <Member MemberName="Push&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static void Push&lt;T&gt; (this System.Collections.Generic.List&lt;T&gt; list, T item);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Push&lt;T&gt;(class System.Collections.Generic.List`1&lt;!!T&gt; list, !!T item) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.ListExtensions.Push``1(System.Collections.Generic.List{``0},``0)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Push(Of T) (list As List(Of T), item As T)" />
        <MemberSignature Language="F#" Value="static member Push : System.Collections.Generic.List&lt;'T&gt; * 'T -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.ListExtensions.Push (list, item)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Push(System::Collections::Generic::List&lt;T&gt; ^ list, T item);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="list" Type="System.Collections.Generic.List&lt;T&gt;" RefType="this" />
          <Parameter Name="item" Type="T" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="list">To be added.</param>
          <param name="item">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.ListExtensions" Member="M:Microsoft.ML.Runtime.Internal.Utilities.ListExtensions.Push``1(System.Collections.Generic.List{``0},``0)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Double" />
      </Targets>
      <Member MemberName="ToFloat">
        <MemberSignature Language="C#" Value="public static float ToFloat (this double dbl);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToFloat(float64 dbl) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ToFloat(System.Double)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToFloat (dbl As Double) As Single" />
        <MemberSignature Language="F#" Value="static member ToFloat : double -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ToFloat dbl" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float ToFloat(double dbl);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float ToFloat(double dbl);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Single</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="dbl" Type="System.Double" RefType="this" />
        </Parameters>
        <Docs>
          <param name="dbl">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.MathUtils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ToFloat(System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Single" />
      </Targets>
      <Member MemberName="ToFloat">
        <MemberSignature Language="C#" Value="public static void ToFloat (this float dbl);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToFloat(float32 dbl) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ToFloat(System.Single)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToFloat (dbl As Single)" />
        <MemberSignature Language="F#" Value="static member ToFloat : single -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ToFloat dbl" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToFloat(float dbl);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ToFloat(float dbl);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="dbl" Type="System.Single" RefType="this" />
        </Parameters>
        <Docs>
          <param name="dbl">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.MathUtils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ToFloat(System.Single)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Array" />
      </Targets>
      <Member MemberName="AsReadOnly&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; AsReadOnly&lt;T&gt; (this T[] items);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!!T&gt; AsReadOnly&lt;T&gt;(!!T[] items) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.PlatformUtils.AsReadOnly``1(``0[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsReadOnly(Of T) (items As T()) As ReadOnlyCollection(Of T)" />
        <MemberSignature Language="F#" Value="static member AsReadOnly : 'T[] -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;'T&gt;" Usage="Microsoft.ML.Runtime.Internal.Utilities.PlatformUtils.AsReadOnly items" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ AsReadOnly(cli::array &lt;T&gt; ^ items);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="items" Type="T[]" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="items">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.PlatformUtils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.PlatformUtils.AsReadOnly``1(``0[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Type" />
      </Targets>
      <Member MemberName="GetGenericTypeArgumentsEx">
        <MemberSignature Language="C#" Value="public static Type[] GetGenericTypeArgumentsEx (this Type type);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type[] GetGenericTypeArgumentsEx(class System.Type type) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.PlatformUtils.GetGenericTypeArgumentsEx(System.Type)" />
        <MemberSignature Language="F#" Value="static member GetGenericTypeArgumentsEx : Type -&gt; Type[]" Usage="Microsoft.ML.Runtime.Internal.Utilities.PlatformUtils.GetGenericTypeArgumentsEx type" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;Type ^&gt; ^ GetGenericTypeArgumentsEx(Type ^ type);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Platform::Array &lt;Platform::Type ^&gt; ^ GetGenericTypeArgumentsEx(Platform::Type ^ type);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Type[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="type" Type="System.Type" RefType="this" />
        </Parameters>
        <Docs>
          <param name="type">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.PlatformUtils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.PlatformUtils.GetGenericTypeArgumentsEx(System.Type)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Type" />
      </Targets>
      <Member MemberName="IsGenericEx">
        <MemberSignature Language="C#" Value="public static bool IsGenericEx (this Type type, Type typeDef);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsGenericEx(class System.Type type, class System.Type typeDef) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.PlatformUtils.IsGenericEx(System.Type,System.Type)" />
        <MemberSignature Language="F#" Value="static member IsGenericEx : Type * Type -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.Utilities.PlatformUtils.IsGenericEx (type, typeDef)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsGenericEx(Type ^ type, Type ^ typeDef);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsGenericEx(Platform::Type ^ type, Platform::Type ^ typeDef);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="type" Type="System.Type" RefType="this" />
          <Parameter Name="typeDef" Type="System.Type" />
        </Parameters>
        <Docs>
          <param name="type">To be added.</param>
          <param name="typeDef">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.PlatformUtils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.PlatformUtils.IsGenericEx(System.Type,System.Type)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.Stream" />
      </Targets>
      <Member MemberName="CloseEx">
        <MemberSignature Language="C#" Value="public static void CloseEx (this System.IO.Stream stream);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CloseEx(class System.IO.Stream stream) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.CloseEx(System.IO.Stream)" />
        <MemberSignature Language="F#" Value="static member CloseEx : System.IO.Stream -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.CloseEx stream" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CloseEx(System::IO::Stream ^ stream);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="stream" Type="System.IO.Stream" RefType="this" />
        </Parameters>
        <Docs>
          <param name="stream">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.CloseEx(System.IO.Stream)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.TextWriter" />
      </Targets>
      <Member MemberName="CloseEx">
        <MemberSignature Language="C#" Value="public static void CloseEx (this System.IO.TextWriter writer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CloseEx(class System.IO.TextWriter writer) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.CloseEx(System.IO.TextWriter)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CloseEx (writer As TextWriter)" />
        <MemberSignature Language="F#" Value="static member CloseEx : System.IO.TextWriter -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.CloseEx writer" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CloseEx(System::IO::TextWriter ^ writer);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.TextWriter" RefType="this" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.CloseEx(System.IO.TextWriter)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IList`1" />
      </Targets>
      <Member MemberName="FindIndexSorted">
        <MemberSignature Language="C#" Value="public static int FindIndexSorted (this System.Collections.Generic.IList&lt;int&gt; input, int value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndexSorted(class System.Collections.Generic.IList`1&lt;int32&gt; input, int32 value) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted(System.Collections.Generic.IList{System.Int32},System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindIndexSorted (input As IList(Of Integer), value As Integer) As Integer" />
        <MemberSignature Language="F#" Value="static member FindIndexSorted : System.Collections.Generic.IList&lt;int&gt; * int -&gt; int" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted (input, value)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int FindIndexSorted(System::Collections::Generic::IList&lt;int&gt; ^ input, int value);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="input" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" RefType="this" />
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="input">To be added.</param>
          <param name="value">To be added.</param>
          <summary>
            Assumes input is sorted and finds value using BinarySearch.
            If value is not found, returns the logical index of 'value' in the sorted list i.e index of the first element greater than value.
            In case of duplicates it returns the index of the first one.
            It guarantees that items before the returned index are &lt; value, while those at and after the returned index are &gt;= value.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted(System.Collections.Generic.IList{System.Int32},System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Generic.IList`1" />
      </Targets>
      <Member MemberName="FindIndexSorted">
        <MemberSignature Language="C#" Value="public static int FindIndexSorted (this System.Collections.Generic.IList&lt;int&gt; input, int min, int lim, int value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndexSorted(class System.Collections.Generic.IList`1&lt;int32&gt; input, int32 min, int32 lim, int32 value) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted(System.Collections.Generic.IList{System.Int32},System.Int32,System.Int32,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindIndexSorted (input As IList(Of Integer), min As Integer, lim As Integer, value As Integer) As Integer" />
        <MemberSignature Language="F#" Value="static member FindIndexSorted : System.Collections.Generic.IList&lt;int&gt; * int * int * int -&gt; int" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted (input, min, lim, value)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int FindIndexSorted(System::Collections::Generic::IList&lt;int&gt; ^ input, int min, int lim, int value);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="input" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" RefType="this" />
          <Parameter Name="min" Type="System.Int32" />
          <Parameter Name="lim" Type="System.Int32" />
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="input">To be added.</param>
          <param name="min">To be added.</param>
          <param name="lim">To be added.</param>
          <param name="value">To be added.</param>
          <summary>
            Assumes input is sorted and finds value using BinarySearch.
            If value is not found, returns the logical index of 'value' in the sorted list i.e index of the first element greater than value.
            In case of duplicates it returns the index of the first one.
            It guarantees that items before the returned index are &lt; value, while those at and after the returned index are &gt;= value.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted(System.Collections.Generic.IList{System.Int32},System.Int32,System.Int32,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Double" />
      </Targets>
      <Member MemberName="FindIndexSorted">
        <MemberSignature Language="C#" Value="public static int FindIndexSorted (this double[] input, double value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndexSorted(float64[] input, float64 value) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted(System.Double[],System.Double)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindIndexSorted (input As Double(), value As Double) As Integer" />
        <MemberSignature Language="F#" Value="static member FindIndexSorted : double[] * double -&gt; int" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted (input, value)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int FindIndexSorted(cli::array &lt;double&gt; ^ input, double value);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int FindIndexSorted(Platform::Array &lt;double&gt; ^ input, double value);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="input" Type="System.Double[]" RefType="this" />
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="input">To be added.</param>
          <param name="value">To be added.</param>
          <summary>
            Assumes input is sorted and finds value using BinarySearch.
            If value is not found, returns the logical index of 'value' in the sorted list i.e index of the first element greater than value.
            In case of duplicates it returns the index of the first one.
            It guarantees that items before the returned index are &lt; value, while those at and after the returned index are &gt;= value.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted(System.Double[],System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Double" />
      </Targets>
      <Member MemberName="FindIndexSorted">
        <MemberSignature Language="C#" Value="public static int FindIndexSorted (this double[] input, int min, int lim, double value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndexSorted(float64[] input, int32 min, int32 lim, float64 value) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted(System.Double[],System.Int32,System.Int32,System.Double)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindIndexSorted (input As Double(), min As Integer, lim As Integer, value As Double) As Integer" />
        <MemberSignature Language="F#" Value="static member FindIndexSorted : double[] * int * int * double -&gt; int" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted (input, min, lim, value)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int FindIndexSorted(cli::array &lt;double&gt; ^ input, int min, int lim, double value);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int FindIndexSorted(Platform::Array &lt;double&gt; ^ input, int min, int lim, double value);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="input" Type="System.Double[]" RefType="this" />
          <Parameter Name="min" Type="System.Int32" />
          <Parameter Name="lim" Type="System.Int32" />
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="input">To be added.</param>
          <param name="min">To be added.</param>
          <param name="lim">To be added.</param>
          <param name="value">To be added.</param>
          <summary>
            Assumes input is sorted and finds value using BinarySearch.
            If value is not found, returns the logical index of 'value' in the sorted list i.e index of the first element greater than value.
            In case of duplicates it returns the index of the first one.
            It guarantees that items before the returned index are &lt; value, while those at and after the returned index are &gt;= value.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted(System.Double[],System.Int32,System.Int32,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Int32" />
      </Targets>
      <Member MemberName="FindIndexSorted">
        <MemberSignature Language="C#" Value="public static int FindIndexSorted (this int[] input, int value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndexSorted(int32[] input, int32 value) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted(System.Int32[],System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindIndexSorted (input As Integer(), value As Integer) As Integer" />
        <MemberSignature Language="F#" Value="static member FindIndexSorted : int[] * int -&gt; int" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted (input, value)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int FindIndexSorted(cli::array &lt;int&gt; ^ input, int value);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int FindIndexSorted(Platform::Array &lt;int&gt; ^ input, int value);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="input" Type="System.Int32[]" RefType="this" />
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="input">To be added.</param>
          <param name="value">To be added.</param>
          <summary>
            Assumes input is sorted and finds value using BinarySearch.
            If value is not found, returns the logical index of 'value' in the sorted list i.e index of the first element greater than value.
            In case of duplicates it returns the index of the first one.
            It guarantees that items before the returned index are &lt; value, while those at and after the returned index are &gt;= value.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted(System.Int32[],System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Int32" />
      </Targets>
      <Member MemberName="FindIndexSorted">
        <MemberSignature Language="C#" Value="public static int FindIndexSorted (this int[] input, int min, int lim, int value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndexSorted(int32[] input, int32 min, int32 lim, int32 value) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted(System.Int32[],System.Int32,System.Int32,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindIndexSorted (input As Integer(), min As Integer, lim As Integer, value As Integer) As Integer" />
        <MemberSignature Language="F#" Value="static member FindIndexSorted : int[] * int * int * int -&gt; int" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted (input, min, lim, value)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int FindIndexSorted(cli::array &lt;int&gt; ^ input, int min, int lim, int value);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int FindIndexSorted(Platform::Array &lt;int&gt; ^ input, int min, int lim, int value);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="input" Type="System.Int32[]" RefType="this" />
          <Parameter Name="min" Type="System.Int32" />
          <Parameter Name="lim" Type="System.Int32" />
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="input">To be added.</param>
          <param name="min">To be added.</param>
          <param name="lim">To be added.</param>
          <param name="value">To be added.</param>
          <summary>
            Assumes input is sorted and finds value using BinarySearch.
            If value is not found, returns the logical index of 'value' in the sorted list i.e index of the first element greater than value.
            In case of duplicates it returns the index of the first one.
            It guarantees that items before the returned index are &lt; value, while those at and after the returned index are &gt;= value.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted(System.Int32[],System.Int32,System.Int32,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Single" />
      </Targets>
      <Member MemberName="FindIndexSorted">
        <MemberSignature Language="C#" Value="public static int FindIndexSorted (this float[] input, int min, int lim, float value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndexSorted(float32[] input, int32 min, int32 lim, float32 value) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted(System.Single[],System.Int32,System.Int32,System.Single)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindIndexSorted (input As Single(), min As Integer, lim As Integer, value As Single) As Integer" />
        <MemberSignature Language="F#" Value="static member FindIndexSorted : single[] * int * int * single -&gt; int" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted (input, min, lim, value)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int FindIndexSorted(cli::array &lt;float&gt; ^ input, int min, int lim, float value);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int FindIndexSorted(Platform::Array &lt;float&gt; ^ input, int min, int lim, float value);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="input" Type="System.Single[]" RefType="this" />
          <Parameter Name="min" Type="System.Int32" />
          <Parameter Name="lim" Type="System.Int32" />
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
        <Docs>
          <param name="input">To be added.</param>
          <param name="min">To be added.</param>
          <param name="lim">To be added.</param>
          <param name="value">To be added.</param>
          <summary>
            Assumes input is sorted and finds value using BinarySearch.
            If value is not found, returns the logical index of 'value' in the sorted list i.e index of the first element greater than value.
            In case of duplicates it returns the index of the first one.
            It guarantees that items before the returned index are &lt; value, while those at and after the returned index are &gt;= value.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted(System.Single[],System.Int32,System.Int32,System.Single)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Single" />
      </Targets>
      <Member MemberName="FindIndexSorted">
        <MemberSignature Language="C#" Value="public static int FindIndexSorted (this float[] input, float value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndexSorted(float32[] input, float32 value) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted(System.Single[],System.Single)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindIndexSorted (input As Single(), value As Single) As Integer" />
        <MemberSignature Language="F#" Value="static member FindIndexSorted : single[] * single -&gt; int" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted (input, value)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int FindIndexSorted(cli::array &lt;float&gt; ^ input, float value);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int FindIndexSorted(Platform::Array &lt;float&gt; ^ input, float value);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="input" Type="System.Single[]" RefType="this" />
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
        <Docs>
          <param name="input">To be added.</param>
          <param name="value">To be added.</param>
          <summary>
            Assumes input is sorted and finds value using BinarySearch.
            If value is not found, returns the logical index of 'value' in the sorted list i.e index of the first element greater than value.
            In case of duplicates it returns the index of the first one.
            It guarantees that items before the returned index are &lt; value, while those at and after the returned index are &gt;= value.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted(System.Single[],System.Single)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Array" />
      </Targets>
      <Member MemberName="FindIndexSorted&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static int FindIndexSorted&lt;T&gt; (this T[] input, int min, int lim, Func&lt;T,bool&gt; func);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndexSorted&lt;T&gt;(!!T[] input, int32 min, int32 lim, class System.Func`2&lt;!!T, bool&gt; func) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted``1(``0[],System.Int32,System.Int32,System.Func{``0,System.Boolean})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindIndexSorted(Of T) (input As T(), min As Integer, lim As Integer, func As Func(Of T, Boolean)) As Integer" />
        <MemberSignature Language="F#" Value="static member FindIndexSorted : 'T[] * int * int * Func&lt;'T, bool&gt; -&gt; int" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted (input, min, lim, func)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int FindIndexSorted(cli::array &lt;T&gt; ^ input, int min, int lim, Func&lt;T, bool&gt; ^ func);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="input" Type="T[]" RefType="this" />
          <Parameter Name="min" Type="System.Int32" />
          <Parameter Name="lim" Type="System.Int32" />
          <Parameter Name="func" Type="System.Func&lt;T,System.Boolean&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="input">To be added.</param>
          <param name="min">To be added.</param>
          <param name="lim">To be added.</param>
          <param name="func">To be added.</param>
          <summary>
            Finds the unique index for which func(input[i]) == false whenever i &lt; index and
            func(input[i]) == true whenever i &gt;= index.
            Callers should guarantee that there is such an index. Uses binary search.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted``1(``0[],System.Int32,System.Int32,System.Func{``0,System.Boolean})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Array" />
      </Targets>
      <Member MemberName="FindIndexSorted&lt;T,TValue&gt;">
        <MemberSignature Language="C#" Value="public static int FindIndexSorted&lt;T,TValue&gt; (this T[] input, int min, int lim, Func&lt;T,TValue,bool&gt; func, TValue value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndexSorted&lt;T, TValue&gt;(!!T[] input, int32 min, int32 lim, class System.Func`3&lt;!!T, !!TValue, bool&gt; func, !!TValue value) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted``2(``0[],System.Int32,System.Int32,System.Func{``0,``1,System.Boolean},``1)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindIndexSorted(Of T, TValue) (input As T(), min As Integer, lim As Integer, func As Func(Of T, TValue, Boolean), value As TValue) As Integer" />
        <MemberSignature Language="F#" Value="static member FindIndexSorted : 'T[] * int * int * Func&lt;'T, 'Value, bool&gt; * 'Value -&gt; int" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted (input, min, lim, func, value)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int FindIndexSorted(cli::array &lt;T&gt; ^ input, int min, int lim, Func&lt;T, TValue, bool&gt; ^ func, TValue value);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
          <TypeParameter Name="TValue" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="input" Type="T[]" RefType="this" />
          <Parameter Name="min" Type="System.Int32" />
          <Parameter Name="lim" Type="System.Int32" />
          <Parameter Name="func" Type="System.Func&lt;T,TValue,System.Boolean&gt;" />
          <Parameter Name="value" Type="TValue" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <typeparam name="TValue">To be added.</typeparam>
          <param name="input">To be added.</param>
          <param name="min">To be added.</param>
          <param name="lim">To be added.</param>
          <param name="func">To be added.</param>
          <param name="value">To be added.</param>
          <summary>
            Finds the unique index for which func(input[i], value) == false whenever i &lt; index and
            func(input[i], value) == true whenever i &gt;= index.
            Callers should guarantee that there is such an index. Uses binary search.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FindIndexSorted``2(``0[],System.Int32,System.Int32,System.Func{``0,``1,System.Boolean},``1)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="FpCur">
        <MemberSignature Language="C#" Value="public static long FpCur (this System.IO.BinaryReader reader);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 FpCur(class System.IO.BinaryReader reader) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FpCur(System.IO.BinaryReader)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FpCur (reader As BinaryReader) As Long" />
        <MemberSignature Language="F#" Value="static member FpCur : System.IO.BinaryReader -&gt; int64" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.FpCur reader" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long FpCur(System::IO::BinaryReader ^ reader);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int64</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FpCur(System.IO.BinaryReader)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="FpCur">
        <MemberSignature Language="C#" Value="public static long FpCur (this System.IO.BinaryWriter writer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 FpCur(class System.IO.BinaryWriter writer) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FpCur(System.IO.BinaryWriter)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FpCur (writer As BinaryWriter) As Long" />
        <MemberSignature Language="F#" Value="static member FpCur : System.IO.BinaryWriter -&gt; int64" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.FpCur writer" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long FpCur(System::IO::BinaryWriter ^ writer);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int64</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.FpCur(System.IO.BinaryWriter)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Enum" />
      </Targets>
      <Member MemberName="GetDescription">
        <MemberSignature Language="C#" Value="public static string GetDescription (this Enum value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDescription(class System.Enum value) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.GetDescription(System.Enum)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDescription (value As Enum) As String" />
        <MemberSignature Language="F#" Value="static member GetDescription : Enum -&gt; string" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.GetDescription value" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ GetDescription(Enum ^ value);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Platform::String ^ GetDescription(Enum ^ value);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="value" Type="System.Enum" RefType="this" />
        </Parameters>
        <Docs>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.GetDescription(System.Enum)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadBitArray">
        <MemberSignature Language="C#" Value="public static System.Collections.BitArray ReadBitArray (this System.IO.BinaryReader reader);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.BitArray ReadBitArray(class System.IO.BinaryReader reader) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadBitArray(System.IO.BinaryReader)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadBitArray (reader As BinaryReader) As BitArray" />
        <MemberSignature Language="F#" Value="static member ReadBitArray : System.IO.BinaryReader -&gt; System.Collections.BitArray" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadBitArray reader" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::BitArray ^ ReadBitArray(System::IO::BinaryReader ^ reader);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.BitArray</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadBitArray(System.IO.BinaryReader)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.Stream" />
      </Targets>
      <Member MemberName="ReadBlock">
        <MemberSignature Language="C#" Value="public static void ReadBlock (this System.IO.Stream s, byte[] buff, int offset, int length);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReadBlock(class System.IO.Stream s, unsigned int8[] buff, int32 offset, int32 length) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadBlock(System.IO.Stream,System.Byte[],System.Int32,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ReadBlock (s As Stream, buff As Byte(), offset As Integer, length As Integer)" />
        <MemberSignature Language="F#" Value="static member ReadBlock : System.IO.Stream * byte[] * int * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadBlock (s, buff, offset, length)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ReadBlock(System::IO::Stream ^ s, cli::array &lt;System::Byte&gt; ^ buff, int offset, int length);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="s" Type="System.IO.Stream" RefType="this" />
          <Parameter Name="buff" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="s">The stream</param>
          <param name="buff">The buffer into which to write the data.</param>
          <param name="offset">The offset of the output array into which to write.</param>
          <param name="length">The number of bytes to read.</param>
          <summary>
            If this return it will read exactly length bytes, and unlike the
            regular read method fails if it cannot.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadBlock(System.IO.Stream,System.Byte[],System.Int32,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadBoolArray">
        <MemberSignature Language="C#" Value="public static bool[] ReadBoolArray (this System.IO.BinaryReader reader);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool[] ReadBoolArray(class System.IO.BinaryReader reader) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadBoolArray(System.IO.BinaryReader)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadBoolArray (reader As BinaryReader) As Boolean()" />
        <MemberSignature Language="F#" Value="static member ReadBoolArray : System.IO.BinaryReader -&gt; bool[]" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadBoolArray reader" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;bool&gt; ^ ReadBoolArray(System::IO::BinaryReader ^ reader);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadBoolArray(System.IO.BinaryReader)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadBoolArray">
        <MemberSignature Language="C#" Value="public static bool[] ReadBoolArray (this System.IO.BinaryReader reader, int size);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool[] ReadBoolArray(class System.IO.BinaryReader reader, int32 size) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadBoolArray(System.IO.BinaryReader,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadBoolArray (reader As BinaryReader, size As Integer) As Boolean()" />
        <MemberSignature Language="F#" Value="static member ReadBoolArray : System.IO.BinaryReader * int -&gt; bool[]" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadBoolArray (reader, size)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;bool&gt; ^ ReadBoolArray(System::IO::BinaryReader ^ reader, int size);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
          <Parameter Name="size" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <param name="size">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadBoolArray(System.IO.BinaryReader,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadBoolByte">
        <MemberSignature Language="C#" Value="public static bool ReadBoolByte (this System.IO.BinaryReader reader);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ReadBoolByte(class System.IO.BinaryReader reader) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadBoolByte(System.IO.BinaryReader)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadBoolByte (reader As BinaryReader) As Boolean" />
        <MemberSignature Language="F#" Value="static member ReadBoolByte : System.IO.BinaryReader -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadBoolByte reader" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool ReadBoolByte(System::IO::BinaryReader ^ reader);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadBoolByte(System.IO.BinaryReader)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadByteArray">
        <MemberSignature Language="C#" Value="public static byte[] ReadByteArray (this System.IO.BinaryReader reader);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] ReadByteArray(class System.IO.BinaryReader reader) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadByteArray(System.IO.BinaryReader)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadByteArray (reader As BinaryReader) As Byte()" />
        <MemberSignature Language="F#" Value="static member ReadByteArray : System.IO.BinaryReader -&gt; byte[]" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadByteArray reader" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;System::Byte&gt; ^ ReadByteArray(System::IO::BinaryReader ^ reader);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Byte[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadByteArray(System.IO.BinaryReader)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadByteArray">
        <MemberSignature Language="C#" Value="public static byte[] ReadByteArray (this System.IO.BinaryReader reader, int size);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] ReadByteArray(class System.IO.BinaryReader reader, int32 size) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadByteArray(System.IO.BinaryReader,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadByteArray (reader As BinaryReader, size As Integer) As Byte()" />
        <MemberSignature Language="F#" Value="static member ReadByteArray : System.IO.BinaryReader * int -&gt; byte[]" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadByteArray (reader, size)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;System::Byte&gt; ^ ReadByteArray(System::IO::BinaryReader ^ reader, int size);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Byte[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
          <Parameter Name="size" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <param name="size">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadByteArray(System.IO.BinaryReader,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadBytes">
        <MemberSignature Language="C#" Value="public static void ReadBytes (this System.IO.BinaryReader reader, void* destination, long destinationSizeInBytes, long bytesToRead);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReadBytes(class System.IO.BinaryReader reader, void* destination, int64 destinationSizeInBytes, int64 bytesToRead) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadBytes(System.IO.BinaryReader,System.Void*,System.Int64,System.Int64)" />
        <MemberSignature Language="F#" Value="static member ReadBytes : System.IO.BinaryReader * nativeptr&lt;unit&gt; * int64 * int64 -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadBytes (reader, destination, destinationSizeInBytes, bytesToRead)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ReadBytes(System::IO::BinaryReader ^ reader, void* destination, long destinationSizeInBytes, long bytesToRead);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
          <Parameter Name="destination" Type="System.Void*" />
          <Parameter Name="destinationSizeInBytes" Type="System.Int64" />
          <Parameter Name="bytesToRead" Type="System.Int64" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <param name="destination">To be added.</param>
          <param name="destinationSizeInBytes">To be added.</param>
          <param name="bytesToRead">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadBytes(System.IO.BinaryReader,System.Void*,System.Int64,System.Int64)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadBytes">
        <MemberSignature Language="C#" Value="public static void ReadBytes (this System.IO.BinaryReader reader, void* destination, long destinationSizeInBytes, long bytesToRead, ref byte[] work);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReadBytes(class System.IO.BinaryReader reader, void* destination, int64 destinationSizeInBytes, int64 bytesToRead, unsigned int8[]&amp; work) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadBytes(System.IO.BinaryReader,System.Void*,System.Int64,System.Int64,System.Byte[]@)" />
        <MemberSignature Language="F#" Value="static member ReadBytes : System.IO.BinaryReader * nativeptr&lt;unit&gt; * int64 * int64 *  -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadBytes (reader, destination, destinationSizeInBytes, bytesToRead, work)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ReadBytes(System::IO::BinaryReader ^ reader, void* destination, long destinationSizeInBytes, long bytesToRead, cli::array &lt;System::Byte&gt; ^ % work);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
          <Parameter Name="destination" Type="System.Void*" />
          <Parameter Name="destinationSizeInBytes" Type="System.Int64" />
          <Parameter Name="bytesToRead" Type="System.Int64" />
          <Parameter Name="work" Type="System.Byte[]&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <param name="destination">To be added.</param>
          <param name="destinationSizeInBytes">To be added.</param>
          <param name="bytesToRead">To be added.</param>
          <param name="work">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadBytes(System.IO.BinaryReader,System.Void*,System.Int64,System.Int64,System.Byte[]@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadCharArray">
        <MemberSignature Language="C#" Value="public static char[] ReadCharArray (this System.IO.BinaryReader reader);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig char[] ReadCharArray(class System.IO.BinaryReader reader) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadCharArray(System.IO.BinaryReader)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadCharArray (reader As BinaryReader) As Char()" />
        <MemberSignature Language="F#" Value="static member ReadCharArray : System.IO.BinaryReader -&gt; char[]" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadCharArray reader" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;char&gt; ^ ReadCharArray(System::IO::BinaryReader ^ reader);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Char[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadCharArray(System.IO.BinaryReader)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadCharArray">
        <MemberSignature Language="C#" Value="public static char[] ReadCharArray (this System.IO.BinaryReader reader, int size);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig char[] ReadCharArray(class System.IO.BinaryReader reader, int32 size) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadCharArray(System.IO.BinaryReader,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadCharArray (reader As BinaryReader, size As Integer) As Char()" />
        <MemberSignature Language="F#" Value="static member ReadCharArray : System.IO.BinaryReader * int -&gt; char[]" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadCharArray (reader, size)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;char&gt; ^ ReadCharArray(System::IO::BinaryReader ^ reader, int size);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Char[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
          <Parameter Name="size" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <param name="size">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadCharArray(System.IO.BinaryReader,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadDoubleArray">
        <MemberSignature Language="C#" Value="public static double[] ReadDoubleArray (this System.IO.BinaryReader reader);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64[] ReadDoubleArray(class System.IO.BinaryReader reader) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadDoubleArray(System.IO.BinaryReader)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadDoubleArray (reader As BinaryReader) As Double()" />
        <MemberSignature Language="F#" Value="static member ReadDoubleArray : System.IO.BinaryReader -&gt; double[]" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadDoubleArray reader" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;double&gt; ^ ReadDoubleArray(System::IO::BinaryReader ^ reader);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Double[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadDoubleArray(System.IO.BinaryReader)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadDoubleArray">
        <MemberSignature Language="C#" Value="public static double[] ReadDoubleArray (this System.IO.BinaryReader reader, int size);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64[] ReadDoubleArray(class System.IO.BinaryReader reader, int32 size) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadDoubleArray(System.IO.BinaryReader,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadDoubleArray (reader As BinaryReader, size As Integer) As Double()" />
        <MemberSignature Language="F#" Value="static member ReadDoubleArray : System.IO.BinaryReader * int -&gt; double[]" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadDoubleArray (reader, size)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;double&gt; ^ ReadDoubleArray(System::IO::BinaryReader ^ reader, int size);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Double[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
          <Parameter Name="size" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <param name="size">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadDoubleArray(System.IO.BinaryReader,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadFloat">
        <MemberSignature Language="C#" Value="public static float ReadFloat (this System.IO.BinaryReader reader);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ReadFloat(class System.IO.BinaryReader reader) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadFloat(System.IO.BinaryReader)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadFloat (reader As BinaryReader) As Single" />
        <MemberSignature Language="F#" Value="static member ReadFloat : System.IO.BinaryReader -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadFloat reader" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float ReadFloat(System::IO::BinaryReader ^ reader);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Single</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadFloat(System.IO.BinaryReader)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadFloatArray">
        <MemberSignature Language="C#" Value="public static float[] ReadFloatArray (this System.IO.BinaryReader reader);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32[] ReadFloatArray(class System.IO.BinaryReader reader) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadFloatArray(System.IO.BinaryReader)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadFloatArray (reader As BinaryReader) As Single()" />
        <MemberSignature Language="F#" Value="static member ReadFloatArray : System.IO.BinaryReader -&gt; single[]" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadFloatArray reader" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;float&gt; ^ ReadFloatArray(System::IO::BinaryReader ^ reader);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Single[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadFloatArray(System.IO.BinaryReader)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadFloatArray">
        <MemberSignature Language="C#" Value="public static float[] ReadFloatArray (this System.IO.BinaryReader reader, int size);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32[] ReadFloatArray(class System.IO.BinaryReader reader, int32 size) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadFloatArray(System.IO.BinaryReader,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadFloatArray (reader As BinaryReader, size As Integer) As Single()" />
        <MemberSignature Language="F#" Value="static member ReadFloatArray : System.IO.BinaryReader * int -&gt; single[]" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadFloatArray (reader, size)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;float&gt; ^ ReadFloatArray(System::IO::BinaryReader ^ reader, int size);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Single[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
          <Parameter Name="size" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <param name="size">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadFloatArray(System.IO.BinaryReader,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadFloatArray">
        <MemberSignature Language="C#" Value="public static void ReadFloatArray (this System.IO.BinaryReader reader, float[] array, int start, int count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReadFloatArray(class System.IO.BinaryReader reader, float32[] array, int32 start, int32 count) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadFloatArray(System.IO.BinaryReader,System.Single[],System.Int32,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ReadFloatArray (reader As BinaryReader, array As Single(), start As Integer, count As Integer)" />
        <MemberSignature Language="F#" Value="static member ReadFloatArray : System.IO.BinaryReader * single[] * int * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadFloatArray (reader, array, start, count)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ReadFloatArray(System::IO::BinaryReader ^ reader, cli::array &lt;float&gt; ^ array, int start, int count);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
          <Parameter Name="array" Type="System.Single[]" />
          <Parameter Name="start" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <param name="array">To be added.</param>
          <param name="start">To be added.</param>
          <param name="count">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadFloatArray(System.IO.BinaryReader,System.Single[],System.Int32,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadIntArray">
        <MemberSignature Language="C#" Value="public static int[] ReadIntArray (this System.IO.BinaryReader reader);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] ReadIntArray(class System.IO.BinaryReader reader) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadIntArray(System.IO.BinaryReader)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadIntArray (reader As BinaryReader) As Integer()" />
        <MemberSignature Language="F#" Value="static member ReadIntArray : System.IO.BinaryReader -&gt; int[]" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadIntArray reader" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;int&gt; ^ ReadIntArray(System::IO::BinaryReader ^ reader);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadIntArray(System.IO.BinaryReader)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadIntArray">
        <MemberSignature Language="C#" Value="public static int[] ReadIntArray (this System.IO.BinaryReader reader, int size);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] ReadIntArray(class System.IO.BinaryReader reader, int32 size) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadIntArray(System.IO.BinaryReader,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadIntArray (reader As BinaryReader, size As Integer) As Integer()" />
        <MemberSignature Language="F#" Value="static member ReadIntArray : System.IO.BinaryReader * int -&gt; int[]" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadIntArray (reader, size)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;int&gt; ^ ReadIntArray(System::IO::BinaryReader ^ reader, int size);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
          <Parameter Name="size" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <param name="size">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadIntArray(System.IO.BinaryReader,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadLeb128Int">
        <MemberSignature Language="C#" Value="public static ulong ReadLeb128Int (this System.IO.BinaryReader reader);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ReadLeb128Int(class System.IO.BinaryReader reader) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadLeb128Int(System.IO.BinaryReader)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadLeb128Int (reader As BinaryReader) As ULong" />
        <MemberSignature Language="F#" Value="static member ReadLeb128Int : System.IO.BinaryReader -&gt; uint64" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadLeb128Int reader" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::UInt64 ReadLeb128Int(System::IO::BinaryReader ^ reader);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.UInt64</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <summary>
            Reads a LEB128 encoded unsigned integer.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadLeb128Int(System.IO.BinaryReader)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadLongArray">
        <MemberSignature Language="C#" Value="public static long[] ReadLongArray (this System.IO.BinaryReader reader);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64[] ReadLongArray(class System.IO.BinaryReader reader) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadLongArray(System.IO.BinaryReader)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadLongArray (reader As BinaryReader) As Long()" />
        <MemberSignature Language="F#" Value="static member ReadLongArray : System.IO.BinaryReader -&gt; int64[]" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadLongArray reader" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;long&gt; ^ ReadLongArray(System::IO::BinaryReader ^ reader);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int64[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadLongArray(System.IO.BinaryReader)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadLongArray">
        <MemberSignature Language="C#" Value="public static long[] ReadLongArray (this System.IO.BinaryReader reader, int size);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64[] ReadLongArray(class System.IO.BinaryReader reader, int32 size) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadLongArray(System.IO.BinaryReader,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadLongArray (reader As BinaryReader, size As Integer) As Long()" />
        <MemberSignature Language="F#" Value="static member ReadLongArray : System.IO.BinaryReader * int -&gt; int64[]" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadLongArray (reader, size)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;long&gt; ^ ReadLongArray(System::IO::BinaryReader ^ reader, int size);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int64[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
          <Parameter Name="size" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <param name="size">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadLongArray(System.IO.BinaryReader,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadSingleArray">
        <MemberSignature Language="C#" Value="public static float[] ReadSingleArray (this System.IO.BinaryReader reader);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32[] ReadSingleArray(class System.IO.BinaryReader reader) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadSingleArray(System.IO.BinaryReader)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadSingleArray (reader As BinaryReader) As Single()" />
        <MemberSignature Language="F#" Value="static member ReadSingleArray : System.IO.BinaryReader -&gt; single[]" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadSingleArray reader" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;float&gt; ^ ReadSingleArray(System::IO::BinaryReader ^ reader);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Single[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadSingleArray(System.IO.BinaryReader)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadSingleArray">
        <MemberSignature Language="C#" Value="public static float[] ReadSingleArray (this System.IO.BinaryReader reader, int size);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32[] ReadSingleArray(class System.IO.BinaryReader reader, int32 size) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadSingleArray(System.IO.BinaryReader,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadSingleArray (reader As BinaryReader, size As Integer) As Single()" />
        <MemberSignature Language="F#" Value="static member ReadSingleArray : System.IO.BinaryReader * int -&gt; single[]" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadSingleArray (reader, size)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;float&gt; ^ ReadSingleArray(System::IO::BinaryReader ^ reader, int size);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Single[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
          <Parameter Name="size" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <param name="size">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadSingleArray(System.IO.BinaryReader,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadUIntArray">
        <MemberSignature Language="C#" Value="public static uint[] ReadUIntArray (this System.IO.BinaryReader reader);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32[] ReadUIntArray(class System.IO.BinaryReader reader) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadUIntArray(System.IO.BinaryReader)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadUIntArray (reader As BinaryReader) As UInteger()" />
        <MemberSignature Language="F#" Value="static member ReadUIntArray : System.IO.BinaryReader -&gt; uint32[]" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadUIntArray reader" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;System::UInt32&gt; ^ ReadUIntArray(System::IO::BinaryReader ^ reader);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.UInt32[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadUIntArray(System.IO.BinaryReader)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="ReadUIntArray">
        <MemberSignature Language="C#" Value="public static uint[] ReadUIntArray (this System.IO.BinaryReader reader, int size);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32[] ReadUIntArray(class System.IO.BinaryReader reader, int32 size) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadUIntArray(System.IO.BinaryReader,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadUIntArray (reader As BinaryReader, size As Integer) As UInteger()" />
        <MemberSignature Language="F#" Value="static member ReadUIntArray : System.IO.BinaryReader * int -&gt; uint32[]" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadUIntArray (reader, size)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;System::UInt32&gt; ^ ReadUIntArray(System::IO::BinaryReader ^ reader, int size);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.UInt32[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
          <Parameter Name="size" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <param name="size">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.ReadUIntArray(System.IO.BinaryReader,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryReader" />
      </Targets>
      <Member MemberName="Seek">
        <MemberSignature Language="C#" Value="public static void Seek (this System.IO.BinaryReader reader, long fp);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Seek(class System.IO.BinaryReader reader, int64 fp) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.Seek(System.IO.BinaryReader,System.Int64)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Seek (reader As BinaryReader, fp As Long)" />
        <MemberSignature Language="F#" Value="static member Seek : System.IO.BinaryReader * int64 -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.Seek (reader, fp)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Seek(System::IO::BinaryReader ^ reader, long fp);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="reader" Type="System.IO.BinaryReader" RefType="this" />
          <Parameter Name="fp" Type="System.Int64" />
        </Parameters>
        <Docs>
          <param name="reader">To be added.</param>
          <param name="fp">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.Seek(System.IO.BinaryReader,System.Int64)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="Seek">
        <MemberSignature Language="C#" Value="public static void Seek (this System.IO.BinaryWriter writer, long fp);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Seek(class System.IO.BinaryWriter writer, int64 fp) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.Seek(System.IO.BinaryWriter,System.Int64)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Seek (writer As BinaryWriter, fp As Long)" />
        <MemberSignature Language="F#" Value="static member Seek : System.IO.BinaryWriter * int64 -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.Seek (writer, fp)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Seek(System::IO::BinaryWriter ^ writer, long fp);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="fp" Type="System.Int64" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="fp">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.Seek(System.IO.BinaryWriter,System.Int64)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="StartsWithInvariantCulture">
        <MemberSignature Language="C#" Value="public static bool StartsWithInvariantCulture (this string str, string startsWith);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool StartsWithInvariantCulture(string str, string startsWith) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.StartsWithInvariantCulture(System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StartsWithInvariantCulture (str As String, startsWith As String) As Boolean" />
        <MemberSignature Language="F#" Value="static member StartsWithInvariantCulture : string * string -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.StartsWithInvariantCulture (str, startsWith)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool StartsWithInvariantCulture(System::String ^ str, System::String ^ startsWith);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool StartsWithInvariantCulture(Platform::String ^ str, Platform::String ^ startsWith);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="str" Type="System.String" RefType="this" />
          <Parameter Name="startsWith" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="str">To be added.</param>
          <param name="startsWith">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.StartsWithInvariantCulture(System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="StartsWithInvariantCultureIgnoreCase">
        <MemberSignature Language="C#" Value="public static bool StartsWithInvariantCultureIgnoreCase (this string str, string startsWith);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool StartsWithInvariantCultureIgnoreCase(string str, string startsWith) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.StartsWithInvariantCultureIgnoreCase(System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StartsWithInvariantCultureIgnoreCase (str As String, startsWith As String) As Boolean" />
        <MemberSignature Language="F#" Value="static member StartsWithInvariantCultureIgnoreCase : string * string -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.StartsWithInvariantCultureIgnoreCase (str, startsWith)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool StartsWithInvariantCultureIgnoreCase(System::String ^ str, System::String ^ startsWith);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool StartsWithInvariantCultureIgnoreCase(Platform::String ^ str, Platform::String ^ startsWith);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="str" Type="System.String" RefType="this" />
          <Parameter Name="startsWith" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="str">To be added.</param>
          <param name="startsWith">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.StartsWithInvariantCultureIgnoreCase(System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Int32" />
      </Targets>
      <Member MemberName="TryFindIndexSorted">
        <MemberSignature Language="C#" Value="public static bool TryFindIndexSorted (this int[] input, int min, int lim, int value, out int index);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFindIndexSorted(int32[] input, int32 min, int32 lim, int32 value, [out] int32&amp; index) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.TryFindIndexSorted(System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryFindIndexSorted (input As Integer(), min As Integer, lim As Integer, value As Integer, ByRef index As Integer) As Boolean" />
        <MemberSignature Language="F#" Value="static member TryFindIndexSorted : int[] * int * int * int *  -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.TryFindIndexSorted (input, min, lim, value, index)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryFindIndexSorted(cli::array &lt;int&gt; ^ input, int min, int lim, int value, [Runtime::InteropServices::Out] int % index);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="input" Type="System.Int32[]" RefType="this" />
          <Parameter Name="min" Type="System.Int32" />
          <Parameter Name="lim" Type="System.Int32" />
          <Parameter Name="value" Type="System.Int32" />
          <Parameter Name="index" Type="System.Int32&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="input">To be added.</param>
          <param name="min">To be added.</param>
          <param name="lim">To be added.</param>
          <param name="value">To be added.</param>
          <param name="index">To be added.</param>
          <summary>
            Akin to <c>FindIndexSorted</c>, except stores the found index in the output
            <c>index</c> parameter, and returns whether that index is a valid index
            pointing to a value equal to the input parameter <c>value</c>.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.TryFindIndexSorted(System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteBitArray">
        <MemberSignature Language="C#" Value="public static void WriteBitArray (this System.IO.BinaryWriter writer, System.Collections.BitArray arr);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteBitArray(class System.IO.BinaryWriter writer, class System.Collections.BitArray arr) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteBitArray(System.IO.BinaryWriter,System.Collections.BitArray)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteBitArray (writer As BinaryWriter, arr As BitArray)" />
        <MemberSignature Language="F#" Value="static member WriteBitArray : System.IO.BinaryWriter * System.Collections.BitArray -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteBitArray (writer, arr)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteBitArray(System::IO::BinaryWriter ^ writer, System::Collections::BitArray ^ arr);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="arr" Type="System.Collections.BitArray" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="arr">To be added.</param>
          <summary>
            Writes a length prefixed array of packed bits.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteBitArray(System.IO.BinaryWriter,System.Collections.BitArray)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteBoolByte">
        <MemberSignature Language="C#" Value="public static void WriteBoolByte (this System.IO.BinaryWriter writer, bool x);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteBoolByte(class System.IO.BinaryWriter writer, bool x) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteBoolByte(System.IO.BinaryWriter,System.Boolean)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteBoolByte (writer As BinaryWriter, x As Boolean)" />
        <MemberSignature Language="F#" Value="static member WriteBoolByte : System.IO.BinaryWriter * bool -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteBoolByte (writer, x)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteBoolByte(System::IO::BinaryWriter ^ writer, bool x);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="x" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="x">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteBoolByte(System.IO.BinaryWriter,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteBoolByteArray">
        <MemberSignature Language="C#" Value="public static void WriteBoolByteArray (this System.IO.BinaryWriter writer, bool[] values);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteBoolByteArray(class System.IO.BinaryWriter writer, bool[] values) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteBoolByteArray(System.IO.BinaryWriter,System.Boolean[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteBoolByteArray (writer As BinaryWriter, values As Boolean())" />
        <MemberSignature Language="F#" Value="static member WriteBoolByteArray : System.IO.BinaryWriter * bool[] -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteBoolByteArray (writer, values)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteBoolByteArray(System::IO::BinaryWriter ^ writer, cli::array &lt;bool&gt; ^ values);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.Boolean[]" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <summary>
            Writes a length prefixed array of bools as bytes with 0/1 values.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteBoolByteArray(System.IO.BinaryWriter,System.Boolean[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteBoolByteArray">
        <MemberSignature Language="C#" Value="public static void WriteBoolByteArray (this System.IO.BinaryWriter writer, bool[] values, int count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteBoolByteArray(class System.IO.BinaryWriter writer, bool[] values, int32 count) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteBoolByteArray(System.IO.BinaryWriter,System.Boolean[],System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteBoolByteArray (writer As BinaryWriter, values As Boolean(), count As Integer)" />
        <MemberSignature Language="F#" Value="static member WriteBoolByteArray : System.IO.BinaryWriter * bool[] * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteBoolByteArray (writer, values, count)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteBoolByteArray(System::IO::BinaryWriter ^ writer, cli::array &lt;bool&gt; ^ values, int count);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.Boolean[]" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <param name="count">To be added.</param>
          <summary>
            Writes a length prefixed array of bools as bytes with 0/1 values.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteBoolByteArray(System.IO.BinaryWriter,System.Boolean[],System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteBoolBytesNoCount">
        <MemberSignature Language="C#" Value="public static void WriteBoolBytesNoCount (this System.IO.BinaryWriter writer, bool[] values, int count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteBoolBytesNoCount(class System.IO.BinaryWriter writer, bool[] values, int32 count) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteBoolBytesNoCount(System.IO.BinaryWriter,System.Boolean[],System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteBoolBytesNoCount (writer As BinaryWriter, values As Boolean(), count As Integer)" />
        <MemberSignature Language="F#" Value="static member WriteBoolBytesNoCount : System.IO.BinaryWriter * bool[] * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteBoolBytesNoCount (writer, values, count)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteBoolBytesNoCount(System::IO::BinaryWriter ^ writer, cli::array &lt;bool&gt; ^ values, int count);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.Boolean[]" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <param name="count">To be added.</param>
          <summary>
            Writes an array of bools as bytes with 0/1 values, without the length prefix.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteBoolBytesNoCount(System.IO.BinaryWriter,System.Boolean[],System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteByteArray">
        <MemberSignature Language="C#" Value="public static void WriteByteArray (this System.IO.BinaryWriter writer, byte[] values);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByteArray(class System.IO.BinaryWriter writer, unsigned int8[] values) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteByteArray(System.IO.BinaryWriter,System.Byte[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteByteArray (writer As BinaryWriter, values As Byte())" />
        <MemberSignature Language="F#" Value="static member WriteByteArray : System.IO.BinaryWriter * byte[] -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteByteArray (writer, values)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteByteArray(System::IO::BinaryWriter ^ writer, cli::array &lt;System::Byte&gt; ^ values);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.Byte[]" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <summary>
            Writes a length prefixed array of bytes.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteByteArray(System.IO.BinaryWriter,System.Byte[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteByteArray">
        <MemberSignature Language="C#" Value="public static void WriteByteArray (this System.IO.BinaryWriter writer, byte[] values, int count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByteArray(class System.IO.BinaryWriter writer, unsigned int8[] values, int32 count) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteByteArray(System.IO.BinaryWriter,System.Byte[],System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteByteArray (writer As BinaryWriter, values As Byte(), count As Integer)" />
        <MemberSignature Language="F#" Value="static member WriteByteArray : System.IO.BinaryWriter * byte[] * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteByteArray (writer, values, count)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteByteArray(System::IO::BinaryWriter ^ writer, cli::array &lt;System::Byte&gt; ^ values, int count);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.Byte[]" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <param name="count">To be added.</param>
          <summary>
            Writes a length prefixed array of bytes.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteByteArray(System.IO.BinaryWriter,System.Byte[],System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteBytesNoCount">
        <MemberSignature Language="C#" Value="public static void WriteBytesNoCount (this System.IO.BinaryWriter writer, byte[] values, int count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteBytesNoCount(class System.IO.BinaryWriter writer, unsigned int8[] values, int32 count) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteBytesNoCount(System.IO.BinaryWriter,System.Byte[],System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteBytesNoCount (writer As BinaryWriter, values As Byte(), count As Integer)" />
        <MemberSignature Language="F#" Value="static member WriteBytesNoCount : System.IO.BinaryWriter * byte[] * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteBytesNoCount (writer, values, count)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteBytesNoCount(System::IO::BinaryWriter ^ writer, cli::array &lt;System::Byte&gt; ^ values, int count);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.Byte[]" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <param name="count">To be added.</param>
          <summary>
            Writes an array of bytes without the length prefix.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteBytesNoCount(System.IO.BinaryWriter,System.Byte[],System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteByteStream">
        <MemberSignature Language="C#" Value="public static long WriteByteStream (this System.IO.BinaryWriter writer, System.Collections.Generic.IEnumerable&lt;byte&gt; e);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 WriteByteStream(class System.IO.BinaryWriter writer, class System.Collections.Generic.IEnumerable`1&lt;unsigned int8&gt; e) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteByteStream(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.Byte})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WriteByteStream (writer As BinaryWriter, e As IEnumerable(Of Byte)) As Long" />
        <MemberSignature Language="F#" Value="static member WriteByteStream : System.IO.BinaryWriter * seq&lt;byte&gt; -&gt; int64" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteByteStream (writer, e)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long WriteByteStream(System::IO::BinaryWriter ^ writer, System::Collections::Generic::IEnumerable&lt;System::Byte&gt; ^ e);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int64</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;System.Byte&gt;" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="e">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteByteStream(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.Byte})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteCharArray">
        <MemberSignature Language="C#" Value="public static void WriteCharArray (this System.IO.BinaryWriter writer, char[] values);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteCharArray(class System.IO.BinaryWriter writer, char[] values) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteCharArray(System.IO.BinaryWriter,System.Char[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteCharArray (writer As BinaryWriter, values As Char())" />
        <MemberSignature Language="F#" Value="static member WriteCharArray : System.IO.BinaryWriter * char[] -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteCharArray (writer, values)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteCharArray(System::IO::BinaryWriter ^ writer, cli::array &lt;char&gt; ^ values);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.Char[]" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <summary>
            Writes a length prefixed array of chars.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteCharArray(System.IO.BinaryWriter,System.Char[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteDoubleArray">
        <MemberSignature Language="C#" Value="public static void WriteDoubleArray (this System.IO.BinaryWriter writer, double[] values);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteDoubleArray(class System.IO.BinaryWriter writer, float64[] values) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteDoubleArray(System.IO.BinaryWriter,System.Double[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteDoubleArray (writer As BinaryWriter, values As Double())" />
        <MemberSignature Language="F#" Value="static member WriteDoubleArray : System.IO.BinaryWriter * double[] -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteDoubleArray (writer, values)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteDoubleArray(System::IO::BinaryWriter ^ writer, cli::array &lt;double&gt; ^ values);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.Double[]" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <summary>
            Writes a length prefixed array of doubles.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteDoubleArray(System.IO.BinaryWriter,System.Double[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteDoubleArray">
        <MemberSignature Language="C#" Value="public static void WriteDoubleArray (this System.IO.BinaryWriter writer, double[] values, int count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteDoubleArray(class System.IO.BinaryWriter writer, float64[] values, int32 count) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteDoubleArray(System.IO.BinaryWriter,System.Double[],System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteDoubleArray (writer As BinaryWriter, values As Double(), count As Integer)" />
        <MemberSignature Language="F#" Value="static member WriteDoubleArray : System.IO.BinaryWriter * double[] * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteDoubleArray (writer, values, count)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteDoubleArray(System::IO::BinaryWriter ^ writer, cli::array &lt;double&gt; ^ values, int count);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.Double[]" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <param name="count">To be added.</param>
          <summary>
            Writes a length prefixed array of doubles.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteDoubleArray(System.IO.BinaryWriter,System.Double[],System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteDoublesNoCount">
        <MemberSignature Language="C#" Value="public static void WriteDoublesNoCount (this System.IO.BinaryWriter writer, double[] values, int count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteDoublesNoCount(class System.IO.BinaryWriter writer, float64[] values, int32 count) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteDoublesNoCount(System.IO.BinaryWriter,System.Double[],System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteDoublesNoCount (writer As BinaryWriter, values As Double(), count As Integer)" />
        <MemberSignature Language="F#" Value="static member WriteDoublesNoCount : System.IO.BinaryWriter * double[] * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteDoublesNoCount (writer, values, count)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteDoublesNoCount(System::IO::BinaryWriter ^ writer, cli::array &lt;double&gt; ^ values, int count);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.Double[]" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <param name="count">To be added.</param>
          <summary>
            Writes an array of doubles without the length prefix.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteDoublesNoCount(System.IO.BinaryWriter,System.Double[],System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteDoubleStream">
        <MemberSignature Language="C#" Value="public static long WriteDoubleStream (this System.IO.BinaryWriter writer, System.Collections.Generic.IEnumerable&lt;double&gt; e);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 WriteDoubleStream(class System.IO.BinaryWriter writer, class System.Collections.Generic.IEnumerable`1&lt;float64&gt; e) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteDoubleStream(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.Double})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WriteDoubleStream (writer As BinaryWriter, e As IEnumerable(Of Double)) As Long" />
        <MemberSignature Language="F#" Value="static member WriteDoubleStream : System.IO.BinaryWriter * seq&lt;double&gt; -&gt; int64" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteDoubleStream (writer, e)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long WriteDoubleStream(System::IO::BinaryWriter ^ writer, System::Collections::Generic::IEnumerable&lt;double&gt; ^ e);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int64</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;System.Double&gt;" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="e">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteDoubleStream(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.Double})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteFloatArray">
        <MemberSignature Language="C#" Value="public static void WriteFloatArray (this System.IO.BinaryWriter writer, System.Collections.Generic.IEnumerable&lt;float&gt; values, int count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteFloatArray(class System.IO.BinaryWriter writer, class System.Collections.Generic.IEnumerable`1&lt;float32&gt; values, int32 count) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteFloatArray(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.Single},System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteFloatArray (writer As BinaryWriter, values As IEnumerable(Of Single), count As Integer)" />
        <MemberSignature Language="F#" Value="static member WriteFloatArray : System.IO.BinaryWriter * seq&lt;single&gt; * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteFloatArray (writer, values, count)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteFloatArray(System::IO::BinaryWriter ^ writer, System::Collections::Generic::IEnumerable&lt;float&gt; ^ values, int count);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;System.Single&gt;" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <param name="count">To be added.</param>
          <summary>
            Writes a length prefixed array of Floats.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteFloatArray(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.Single},System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteFloatArray">
        <MemberSignature Language="C#" Value="public static void WriteFloatArray (this System.IO.BinaryWriter writer, float[] values);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteFloatArray(class System.IO.BinaryWriter writer, float32[] values) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteFloatArray(System.IO.BinaryWriter,System.Single[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteFloatArray (writer As BinaryWriter, values As Single())" />
        <MemberSignature Language="F#" Value="static member WriteFloatArray : System.IO.BinaryWriter * single[] -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteFloatArray (writer, values)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteFloatArray(System::IO::BinaryWriter ^ writer, cli::array &lt;float&gt; ^ values);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.Single[]" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <summary>
            Writes a length prefixed array of Floats.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteFloatArray(System.IO.BinaryWriter,System.Single[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteFloatArray">
        <MemberSignature Language="C#" Value="public static void WriteFloatArray (this System.IO.BinaryWriter writer, float[] values, int count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteFloatArray(class System.IO.BinaryWriter writer, float32[] values, int32 count) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteFloatArray(System.IO.BinaryWriter,System.Single[],System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteFloatArray (writer As BinaryWriter, values As Single(), count As Integer)" />
        <MemberSignature Language="F#" Value="static member WriteFloatArray : System.IO.BinaryWriter * single[] * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteFloatArray (writer, values, count)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteFloatArray(System::IO::BinaryWriter ^ writer, cli::array &lt;float&gt; ^ values, int count);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.Single[]" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <param name="count">To be added.</param>
          <summary>
            Writes a length prefixed array of Floats.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteFloatArray(System.IO.BinaryWriter,System.Single[],System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteFloatArray">
        <MemberSignature Language="C#" Value="public static void WriteFloatArray (this System.IO.BinaryWriter writer, float[] values, int start, int count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteFloatArray(class System.IO.BinaryWriter writer, float32[] values, int32 start, int32 count) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteFloatArray(System.IO.BinaryWriter,System.Single[],System.Int32,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteFloatArray (writer As BinaryWriter, values As Single(), start As Integer, count As Integer)" />
        <MemberSignature Language="F#" Value="static member WriteFloatArray : System.IO.BinaryWriter * single[] * int * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteFloatArray (writer, values, start, count)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteFloatArray(System::IO::BinaryWriter ^ writer, cli::array &lt;float&gt; ^ values, int start, int count);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.Single[]" />
          <Parameter Name="start" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <param name="start">To be added.</param>
          <param name="count">To be added.</param>
          <summary>
            Writes a specified number of floats starting at the specified index from an array.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteFloatArray(System.IO.BinaryWriter,System.Single[],System.Int32,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteFloatsNoCount">
        <MemberSignature Language="C#" Value="public static void WriteFloatsNoCount (this System.IO.BinaryWriter writer, float[] values, int count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteFloatsNoCount(class System.IO.BinaryWriter writer, float32[] values, int32 count) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteFloatsNoCount(System.IO.BinaryWriter,System.Single[],System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteFloatsNoCount (writer As BinaryWriter, values As Single(), count As Integer)" />
        <MemberSignature Language="F#" Value="static member WriteFloatsNoCount : System.IO.BinaryWriter * single[] * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteFloatsNoCount (writer, values, count)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteFloatsNoCount(System::IO::BinaryWriter ^ writer, cli::array &lt;float&gt; ^ values, int count);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.Single[]" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <param name="count">To be added.</param>
          <summary>
            Writes an array of Floats without the length prefix.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteFloatsNoCount(System.IO.BinaryWriter,System.Single[],System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteIntArray">
        <MemberSignature Language="C#" Value="public static void WriteIntArray (this System.IO.BinaryWriter writer, int[] values);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntArray(class System.IO.BinaryWriter writer, int32[] values) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteIntArray(System.IO.BinaryWriter,System.Int32[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteIntArray (writer As BinaryWriter, values As Integer())" />
        <MemberSignature Language="F#" Value="static member WriteIntArray : System.IO.BinaryWriter * int[] -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteIntArray (writer, values)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteIntArray(System::IO::BinaryWriter ^ writer, cli::array &lt;int&gt; ^ values);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.Int32[]" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <summary>
            Writes a length prefixed array of ints.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteIntArray(System.IO.BinaryWriter,System.Int32[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteIntArray">
        <MemberSignature Language="C#" Value="public static void WriteIntArray (this System.IO.BinaryWriter writer, int[] values, int count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntArray(class System.IO.BinaryWriter writer, int32[] values, int32 count) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteIntArray(System.IO.BinaryWriter,System.Int32[],System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteIntArray (writer As BinaryWriter, values As Integer(), count As Integer)" />
        <MemberSignature Language="F#" Value="static member WriteIntArray : System.IO.BinaryWriter * int[] * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteIntArray (writer, values, count)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteIntArray(System::IO::BinaryWriter ^ writer, cli::array &lt;int&gt; ^ values, int count);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.Int32[]" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <param name="count">To be added.</param>
          <summary>
            Writes a length prefixed array of ints.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteIntArray(System.IO.BinaryWriter,System.Int32[],System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteIntsNoCount">
        <MemberSignature Language="C#" Value="public static void WriteIntsNoCount (this System.IO.BinaryWriter writer, int[] values, int count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntsNoCount(class System.IO.BinaryWriter writer, int32[] values, int32 count) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteIntsNoCount(System.IO.BinaryWriter,System.Int32[],System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteIntsNoCount (writer As BinaryWriter, values As Integer(), count As Integer)" />
        <MemberSignature Language="F#" Value="static member WriteIntsNoCount : System.IO.BinaryWriter * int[] * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteIntsNoCount (writer, values, count)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteIntsNoCount(System::IO::BinaryWriter ^ writer, cli::array &lt;int&gt; ^ values, int count);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.Int32[]" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <param name="count">To be added.</param>
          <summary>
            Writes an array of ints without the length prefix.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteIntsNoCount(System.IO.BinaryWriter,System.Int32[],System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteIntStream">
        <MemberSignature Language="C#" Value="public static long WriteIntStream (this System.IO.BinaryWriter writer, System.Collections.Generic.IEnumerable&lt;int&gt; e);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 WriteIntStream(class System.IO.BinaryWriter writer, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; e) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteIntStream(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.Int32})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WriteIntStream (writer As BinaryWriter, e As IEnumerable(Of Integer)) As Long" />
        <MemberSignature Language="F#" Value="static member WriteIntStream : System.IO.BinaryWriter * seq&lt;int&gt; -&gt; int64" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteIntStream (writer, e)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long WriteIntStream(System::IO::BinaryWriter ^ writer, System::Collections::Generic::IEnumerable&lt;int&gt; ^ e);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int64</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="e">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteIntStream(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.Int32})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteLeb128Int">
        <MemberSignature Language="C#" Value="public static void WriteLeb128Int (this System.IO.BinaryWriter writer, ulong value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLeb128Int(class System.IO.BinaryWriter writer, unsigned int64 value) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteLeb128Int(System.IO.BinaryWriter,System.UInt64)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteLeb128Int (writer As BinaryWriter, value As ULong)" />
        <MemberSignature Language="F#" Value="static member WriteLeb128Int : System.IO.BinaryWriter * uint64 -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteLeb128Int (writer, value)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteLeb128Int(System::IO::BinaryWriter ^ writer, System::UInt64 value);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="value">To be added.</param>
          <summary>
            Writes what Microsoft calls a UTF-7 encoded number in the binary reader and
            writer string methods. For non-negative integers this is equivalent to LEB128
            (see http://en.wikipedia.org/wiki/LEB128).
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteLeb128Int(System.IO.BinaryWriter,System.UInt64)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteLongStream">
        <MemberSignature Language="C#" Value="public static long WriteLongStream (this System.IO.BinaryWriter writer, System.Collections.Generic.IEnumerable&lt;long&gt; e);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 WriteLongStream(class System.IO.BinaryWriter writer, class System.Collections.Generic.IEnumerable`1&lt;int64&gt; e) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteLongStream(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.Int64})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WriteLongStream (writer As BinaryWriter, e As IEnumerable(Of Long)) As Long" />
        <MemberSignature Language="F#" Value="static member WriteLongStream : System.IO.BinaryWriter * seq&lt;int64&gt; -&gt; int64" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteLongStream (writer, e)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long WriteLongStream(System::IO::BinaryWriter ^ writer, System::Collections::Generic::IEnumerable&lt;long&gt; ^ e);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int64</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;System.Int64&gt;" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="e">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteLongStream(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.Int64})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteSByteStream">
        <MemberSignature Language="C#" Value="public static long WriteSByteStream (this System.IO.BinaryWriter writer, System.Collections.Generic.IEnumerable&lt;sbyte&gt; e);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 WriteSByteStream(class System.IO.BinaryWriter writer, class System.Collections.Generic.IEnumerable`1&lt;int8&gt; e) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteSByteStream(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.SByte})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WriteSByteStream (writer As BinaryWriter, e As IEnumerable(Of SByte)) As Long" />
        <MemberSignature Language="F#" Value="static member WriteSByteStream : System.IO.BinaryWriter * seq&lt;sbyte&gt; -&gt; int64" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteSByteStream (writer, e)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long WriteSByteStream(System::IO::BinaryWriter ^ writer, System::Collections::Generic::IEnumerable&lt;System::SByte&gt; ^ e);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int64</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;System.SByte&gt;" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="e">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteSByteStream(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.SByte})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteShortStream">
        <MemberSignature Language="C#" Value="public static long WriteShortStream (this System.IO.BinaryWriter writer, System.Collections.Generic.IEnumerable&lt;short&gt; e);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 WriteShortStream(class System.IO.BinaryWriter writer, class System.Collections.Generic.IEnumerable`1&lt;int16&gt; e) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteShortStream(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.Int16})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WriteShortStream (writer As BinaryWriter, e As IEnumerable(Of Short)) As Long" />
        <MemberSignature Language="F#" Value="static member WriteShortStream : System.IO.BinaryWriter * seq&lt;int16&gt; -&gt; int64" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteShortStream (writer, e)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long WriteShortStream(System::IO::BinaryWriter ^ writer, System::Collections::Generic::IEnumerable&lt;short&gt; ^ e);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int64</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;System.Int16&gt;" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="e">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteShortStream(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.Int16})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteSingleArray">
        <MemberSignature Language="C#" Value="public static void WriteSingleArray (this System.IO.BinaryWriter writer, float[] values);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteSingleArray(class System.IO.BinaryWriter writer, float32[] values) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteSingleArray(System.IO.BinaryWriter,System.Single[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteSingleArray (writer As BinaryWriter, values As Single())" />
        <MemberSignature Language="F#" Value="static member WriteSingleArray : System.IO.BinaryWriter * single[] -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteSingleArray (writer, values)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteSingleArray(System::IO::BinaryWriter ^ writer, cli::array &lt;float&gt; ^ values);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.Single[]" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <summary>
            Writes a length prefixed array of singles.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteSingleArray(System.IO.BinaryWriter,System.Single[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteSingleArray">
        <MemberSignature Language="C#" Value="public static void WriteSingleArray (this System.IO.BinaryWriter writer, float[] values, int count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteSingleArray(class System.IO.BinaryWriter writer, float32[] values, int32 count) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteSingleArray(System.IO.BinaryWriter,System.Single[],System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteSingleArray (writer As BinaryWriter, values As Single(), count As Integer)" />
        <MemberSignature Language="F#" Value="static member WriteSingleArray : System.IO.BinaryWriter * single[] * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteSingleArray (writer, values, count)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteSingleArray(System::IO::BinaryWriter ^ writer, cli::array &lt;float&gt; ^ values, int count);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.Single[]" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <param name="count">To be added.</param>
          <summary>
            Writes a length prefixed array of singles.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteSingleArray(System.IO.BinaryWriter,System.Single[],System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteSinglesNoCount">
        <MemberSignature Language="C#" Value="public static void WriteSinglesNoCount (this System.IO.BinaryWriter writer, float[] values, int count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteSinglesNoCount(class System.IO.BinaryWriter writer, float32[] values, int32 count) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteSinglesNoCount(System.IO.BinaryWriter,System.Single[],System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteSinglesNoCount (writer As BinaryWriter, values As Single(), count As Integer)" />
        <MemberSignature Language="F#" Value="static member WriteSinglesNoCount : System.IO.BinaryWriter * single[] * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteSinglesNoCount (writer, values, count)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteSinglesNoCount(System::IO::BinaryWriter ^ writer, cli::array &lt;float&gt; ^ values, int count);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.Single[]" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <param name="count">To be added.</param>
          <summary>
            Writes an array of singles without the length prefix.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteSinglesNoCount(System.IO.BinaryWriter,System.Single[],System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteSingleStream">
        <MemberSignature Language="C#" Value="public static long WriteSingleStream (this System.IO.BinaryWriter writer, System.Collections.Generic.IEnumerable&lt;float&gt; e);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 WriteSingleStream(class System.IO.BinaryWriter writer, class System.Collections.Generic.IEnumerable`1&lt;float32&gt; e) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteSingleStream(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.Single})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WriteSingleStream (writer As BinaryWriter, e As IEnumerable(Of Single)) As Long" />
        <MemberSignature Language="F#" Value="static member WriteSingleStream : System.IO.BinaryWriter * seq&lt;single&gt; -&gt; int64" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteSingleStream (writer, e)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long WriteSingleStream(System::IO::BinaryWriter ^ writer, System::Collections::Generic::IEnumerable&lt;float&gt; ^ e);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int64</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;System.Single&gt;" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="e">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteSingleStream(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.Single})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteStringStream">
        <MemberSignature Language="C#" Value="public static long WriteStringStream (this System.IO.BinaryWriter writer, System.Collections.Generic.IEnumerable&lt;string&gt; e);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 WriteStringStream(class System.IO.BinaryWriter writer, class System.Collections.Generic.IEnumerable`1&lt;string&gt; e) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteStringStream(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.String})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WriteStringStream (writer As BinaryWriter, e As IEnumerable(Of String)) As Long" />
        <MemberSignature Language="F#" Value="static member WriteStringStream : System.IO.BinaryWriter * seq&lt;string&gt; -&gt; int64" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteStringStream (writer, e)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long WriteStringStream(System::IO::BinaryWriter ^ writer, System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ e);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int64</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="e">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteStringStream(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.String})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteUIntArray">
        <MemberSignature Language="C#" Value="public static void WriteUIntArray (this System.IO.BinaryWriter writer, uint[] values);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteUIntArray(class System.IO.BinaryWriter writer, unsigned int32[] values) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteUIntArray(System.IO.BinaryWriter,System.UInt32[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteUIntArray (writer As BinaryWriter, values As UInteger())" />
        <MemberSignature Language="F#" Value="static member WriteUIntArray : System.IO.BinaryWriter * uint32[] -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteUIntArray (writer, values)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteUIntArray(System::IO::BinaryWriter ^ writer, cli::array &lt;System::UInt32&gt; ^ values);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.UInt32[]" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <summary>
            Writes a length prefixed array of uints.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteUIntArray(System.IO.BinaryWriter,System.UInt32[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteUIntArray">
        <MemberSignature Language="C#" Value="public static void WriteUIntArray (this System.IO.BinaryWriter writer, uint[] values, int count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteUIntArray(class System.IO.BinaryWriter writer, unsigned int32[] values, int32 count) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteUIntArray(System.IO.BinaryWriter,System.UInt32[],System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteUIntArray (writer As BinaryWriter, values As UInteger(), count As Integer)" />
        <MemberSignature Language="F#" Value="static member WriteUIntArray : System.IO.BinaryWriter * uint32[] * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteUIntArray (writer, values, count)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteUIntArray(System::IO::BinaryWriter ^ writer, cli::array &lt;System::UInt32&gt; ^ values, int count);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.UInt32[]" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <param name="count">To be added.</param>
          <summary>
            Writes a length prefixed array of uints.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteUIntArray(System.IO.BinaryWriter,System.UInt32[],System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteUIntsNoCount">
        <MemberSignature Language="C#" Value="public static void WriteUIntsNoCount (this System.IO.BinaryWriter writer, uint[] values, int count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteUIntsNoCount(class System.IO.BinaryWriter writer, unsigned int32[] values, int32 count) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteUIntsNoCount(System.IO.BinaryWriter,System.UInt32[],System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub WriteUIntsNoCount (writer As BinaryWriter, values As UInteger(), count As Integer)" />
        <MemberSignature Language="F#" Value="static member WriteUIntsNoCount : System.IO.BinaryWriter * uint32[] * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteUIntsNoCount (writer, values, count)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void WriteUIntsNoCount(System::IO::BinaryWriter ^ writer, cli::array &lt;System::UInt32&gt; ^ values, int count);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="values" Type="System.UInt32[]" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="values">To be added.</param>
          <param name="count">To be added.</param>
          <summary>
            Writes an array of uints without the length prefix.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteUIntsNoCount(System.IO.BinaryWriter,System.UInt32[],System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteUIntStream">
        <MemberSignature Language="C#" Value="public static long WriteUIntStream (this System.IO.BinaryWriter writer, System.Collections.Generic.IEnumerable&lt;uint&gt; e);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 WriteUIntStream(class System.IO.BinaryWriter writer, class System.Collections.Generic.IEnumerable`1&lt;unsigned int32&gt; e) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteUIntStream(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.UInt32})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WriteUIntStream (writer As BinaryWriter, e As IEnumerable(Of UInteger)) As Long" />
        <MemberSignature Language="F#" Value="static member WriteUIntStream : System.IO.BinaryWriter * seq&lt;uint32&gt; -&gt; int64" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteUIntStream (writer, e)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long WriteUIntStream(System::IO::BinaryWriter ^ writer, System::Collections::Generic::IEnumerable&lt;System::UInt32&gt; ^ e);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int64</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;System.UInt32&gt;" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="e">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteUIntStream(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.UInt32})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteULongStream">
        <MemberSignature Language="C#" Value="public static long WriteULongStream (this System.IO.BinaryWriter writer, System.Collections.Generic.IEnumerable&lt;ulong&gt; e);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 WriteULongStream(class System.IO.BinaryWriter writer, class System.Collections.Generic.IEnumerable`1&lt;unsigned int64&gt; e) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteULongStream(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.UInt64})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WriteULongStream (writer As BinaryWriter, e As IEnumerable(Of ULong)) As Long" />
        <MemberSignature Language="F#" Value="static member WriteULongStream : System.IO.BinaryWriter * seq&lt;uint64&gt; -&gt; int64" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteULongStream (writer, e)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long WriteULongStream(System::IO::BinaryWriter ^ writer, System::Collections::Generic::IEnumerable&lt;System::UInt64&gt; ^ e);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int64</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;System.UInt64&gt;" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="e">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteULongStream(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.UInt64})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.IO.BinaryWriter" />
      </Targets>
      <Member MemberName="WriteUShortStream">
        <MemberSignature Language="C#" Value="public static long WriteUShortStream (this System.IO.BinaryWriter writer, System.Collections.Generic.IEnumerable&lt;ushort&gt; e);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 WriteUShortStream(class System.IO.BinaryWriter writer, class System.Collections.Generic.IEnumerable`1&lt;unsigned int16&gt; e) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteUShortStream(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.UInt16})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WriteUShortStream (writer As BinaryWriter, e As IEnumerable(Of UShort)) As Long" />
        <MemberSignature Language="F#" Value="static member WriteUShortStream : System.IO.BinaryWriter * seq&lt;uint16&gt; -&gt; int64" Usage="Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteUShortStream (writer, e)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long WriteUShortStream(System::IO::BinaryWriter ^ writer, System::Collections::Generic::IEnumerable&lt;System::UInt16&gt; ^ e);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int64</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" RefType="this" />
          <Parameter Name="e" Type="System.Collections.Generic.IEnumerable&lt;System.UInt16&gt;" />
        </Parameters>
        <Docs>
          <param name="writer">To be added.</param>
          <param name="e">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Internal.Utilities.Utils" Member="M:Microsoft.ML.Runtime.Internal.Utilities.Utils.WriteUShortStream(System.IO.BinaryWriter,System.Collections.Generic.IEnumerable{System.UInt16})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Newtonsoft.Json.Linq.JObject" />
      </Targets>
      <Member MemberName="AddReturn">
        <MemberSignature Language="C#" Value="public static Newtonsoft.Json.Linq.JObject AddReturn (this Newtonsoft.Json.Linq.JObject toEdit, string name, Newtonsoft.Json.Linq.JToken value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Newtonsoft.Json.Linq.JObject AddReturn(class Newtonsoft.Json.Linq.JObject toEdit, string name, class Newtonsoft.Json.Linq.JToken value) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.AddReturn(Newtonsoft.Json.Linq.JObject,System.String,Newtonsoft.Json.Linq.JToken)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddReturn (toEdit As JObject, name As String, value As JToken) As JObject" />
        <MemberSignature Language="F#" Value="static member AddReturn : Newtonsoft.Json.Linq.JObject * string * Newtonsoft.Json.Linq.JToken -&gt; Newtonsoft.Json.Linq.JObject" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.AddReturn (toEdit, name, value)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Newtonsoft::Json::Linq::JObject ^ AddReturn(Newtonsoft::Json::Linq::JObject ^ toEdit, System::String ^ name, Newtonsoft::Json::Linq::JToken ^ value);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="toEdit" Type="Newtonsoft.Json.Linq.JObject" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="Newtonsoft.Json.Linq.JToken" />
        </Parameters>
        <Docs>
          <param name="toEdit">To be added.</param>
          <param name="name">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Model.Pfa.PfaUtils" Member="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.AddReturn(Newtonsoft.Json.Linq.JObject,System.String,Newtonsoft.Json.Linq.JToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Model.Pfa.PfaContext" />
      </Targets>
      <Member MemberName="EnsureAdd">
        <MemberSignature Language="C#" Value="public static string EnsureAdd (this Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx, Newtonsoft.Json.Linq.JToken itemType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EnsureAdd(class Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx, class Newtonsoft.Json.Linq.JToken itemType) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureAdd(Microsoft.ML.Runtime.Model.Pfa.PfaContext,Newtonsoft.Json.Linq.JToken)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnsureAdd (ctx As PfaContext, itemType As JToken) As String" />
        <MemberSignature Language="F#" Value="static member EnsureAdd : Microsoft.ML.Runtime.Model.Pfa.PfaContext * Newtonsoft.Json.Linq.JToken -&gt; string" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureAdd (ctx, itemType)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ EnsureAdd(Microsoft::ML::Runtime::Model::Pfa::PfaContext ^ ctx, Newtonsoft::Json::Linq::JToken ^ itemType);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.Pfa.PfaContext" RefType="this" />
          <Parameter Name="itemType" Type="Newtonsoft.Json.Linq.JToken" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="itemType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Model.Pfa.PfaUtils" Member="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureAdd(Microsoft.ML.Runtime.Model.Pfa.PfaContext,Newtonsoft.Json.Linq.JToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Model.Pfa.PfaContext" />
      </Targets>
      <Member MemberName="EnsureCount">
        <MemberSignature Language="C#" Value="public static string EnsureCount (this Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx, Newtonsoft.Json.Linq.JToken itemType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EnsureCount(class Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx, class Newtonsoft.Json.Linq.JToken itemType) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureCount(Microsoft.ML.Runtime.Model.Pfa.PfaContext,Newtonsoft.Json.Linq.JToken)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnsureCount (ctx As PfaContext, itemType As JToken) As String" />
        <MemberSignature Language="F#" Value="static member EnsureCount : Microsoft.ML.Runtime.Model.Pfa.PfaContext * Newtonsoft.Json.Linq.JToken -&gt; string" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureCount (ctx, itemType)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ EnsureCount(Microsoft::ML::Runtime::Model::Pfa::PfaContext ^ ctx, Newtonsoft::Json::Linq::JToken ^ itemType);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.Pfa.PfaContext" RefType="this" />
          <Parameter Name="itemType" Type="Newtonsoft.Json.Linq.JToken" />
        </Parameters>
        <Docs>
          <param name="ctx">The context to check for the existence of this</param>
          <param name="itemType">The item type this will operate on</param>
          <summary>
            This ensures that there is a function formatted as "count_type" (e.g., "count_double"),
            that takes either a map or array and returns the number of items in that map or array.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Model.Pfa.PfaUtils" Member="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureCount(Microsoft.ML.Runtime.Model.Pfa.PfaContext,Newtonsoft.Json.Linq.JToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Model.Pfa.PfaContext" />
      </Targets>
      <Member MemberName="EnsureDiv">
        <MemberSignature Language="C#" Value="public static string EnsureDiv (this Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx, Newtonsoft.Json.Linq.JToken itemType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EnsureDiv(class Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx, class Newtonsoft.Json.Linq.JToken itemType) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureDiv(Microsoft.ML.Runtime.Model.Pfa.PfaContext,Newtonsoft.Json.Linq.JToken)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnsureDiv (ctx As PfaContext, itemType As JToken) As String" />
        <MemberSignature Language="F#" Value="static member EnsureDiv : Microsoft.ML.Runtime.Model.Pfa.PfaContext * Newtonsoft.Json.Linq.JToken -&gt; string" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureDiv (ctx, itemType)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ EnsureDiv(Microsoft::ML::Runtime::Model::Pfa::PfaContext ^ ctx, Newtonsoft::Json::Linq::JToken ^ itemType);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.Pfa.PfaContext" RefType="this" />
          <Parameter Name="itemType" Type="Newtonsoft.Json.Linq.JToken" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="itemType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Model.Pfa.PfaUtils" Member="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureDiv(Microsoft.ML.Runtime.Model.Pfa.PfaContext,Newtonsoft.Json.Linq.JToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Model.Pfa.PfaContext" />
      </Targets>
      <Member MemberName="EnsureHasChars">
        <MemberSignature Language="C#" Value="public static string EnsureHasChars (this Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EnsureHasChars(class Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureHasChars(Microsoft.ML.Runtime.Model.Pfa.PfaContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnsureHasChars (ctx As PfaContext) As String" />
        <MemberSignature Language="F#" Value="static member EnsureHasChars : Microsoft.ML.Runtime.Model.Pfa.PfaContext -&gt; string" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureHasChars ctx" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ EnsureHasChars(Microsoft::ML::Runtime::Model::Pfa::PfaContext ^ ctx);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Platform::String ^ EnsureHasChars(Microsoft::ML::Runtime::Model::Pfa::PfaContext ^ ctx);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.Pfa.PfaContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <summary>
            A string -&gt; bool function for determining whether a string has content.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Model.Pfa.PfaUtils" Member="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureHasChars(Microsoft.ML.Runtime.Model.Pfa.PfaContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Model.Pfa.PfaContext" />
      </Targets>
      <Member MemberName="EnsureMul">
        <MemberSignature Language="C#" Value="public static string EnsureMul (this Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx, Newtonsoft.Json.Linq.JToken itemType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EnsureMul(class Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx, class Newtonsoft.Json.Linq.JToken itemType) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureMul(Microsoft.ML.Runtime.Model.Pfa.PfaContext,Newtonsoft.Json.Linq.JToken)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnsureMul (ctx As PfaContext, itemType As JToken) As String" />
        <MemberSignature Language="F#" Value="static member EnsureMul : Microsoft.ML.Runtime.Model.Pfa.PfaContext * Newtonsoft.Json.Linq.JToken -&gt; string" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureMul (ctx, itemType)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ EnsureMul(Microsoft::ML::Runtime::Model::Pfa::PfaContext ^ ctx, Newtonsoft::Json::Linq::JToken ^ itemType);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.Pfa.PfaContext" RefType="this" />
          <Parameter Name="itemType" Type="Newtonsoft.Json.Linq.JToken" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="itemType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Model.Pfa.PfaUtils" Member="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureMul(Microsoft.ML.Runtime.Model.Pfa.PfaContext,Newtonsoft.Json.Linq.JToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Model.Pfa.PfaContext" />
      </Targets>
      <Member MemberName="EnsureNewArray">
        <MemberSignature Language="C#" Value="public static string EnsureNewArray (this Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EnsureNewArray(class Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureNewArray(Microsoft.ML.Runtime.Model.Pfa.PfaContext)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnsureNewArray (ctx As PfaContext) As String" />
        <MemberSignature Language="F#" Value="static member EnsureNewArray : Microsoft.ML.Runtime.Model.Pfa.PfaContext -&gt; string" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureNewArray ctx" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ EnsureNewArray(Microsoft::ML::Runtime::Model::Pfa::PfaContext ^ ctx);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Platform::String ^ EnsureNewArray(Microsoft::ML::Runtime::Model::Pfa::PfaContext ^ ctx);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.Pfa.PfaContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Model.Pfa.PfaUtils" Member="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureNewArray(Microsoft.ML.Runtime.Model.Pfa.PfaContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Model.Pfa.PfaContext" />
      </Targets>
      <Member MemberName="EnsureSub">
        <MemberSignature Language="C#" Value="public static string EnsureSub (this Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx, Newtonsoft.Json.Linq.JToken itemType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EnsureSub(class Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx, class Newtonsoft.Json.Linq.JToken itemType) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureSub(Microsoft.ML.Runtime.Model.Pfa.PfaContext,Newtonsoft.Json.Linq.JToken)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnsureSub (ctx As PfaContext, itemType As JToken) As String" />
        <MemberSignature Language="F#" Value="static member EnsureSub : Microsoft.ML.Runtime.Model.Pfa.PfaContext * Newtonsoft.Json.Linq.JToken -&gt; string" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureSub (ctx, itemType)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ EnsureSub(Microsoft::ML::Runtime::Model::Pfa::PfaContext ^ ctx, Newtonsoft::Json::Linq::JToken ^ itemType);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.Pfa.PfaContext" RefType="this" />
          <Parameter Name="itemType" Type="Newtonsoft.Json.Linq.JToken" />
        </Parameters>
        <Docs>
          <param name="ctx">To be added.</param>
          <param name="itemType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Model.Pfa.PfaUtils" Member="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureSub(Microsoft.ML.Runtime.Model.Pfa.PfaContext,Newtonsoft.Json.Linq.JToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.IDataView" />
      </Targets>
      <Member MemberName="Cache">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataView Cache (this Microsoft.ML.Runtime.Data.IDataView data);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataView Cache(class Microsoft.ML.Runtime.Data.IDataView data) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.InferenceUtils.Cache(Microsoft.ML.Runtime.Data.IDataView)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Cache (data As IDataView) As IDataView" />
        <MemberSignature Language="F#" Value="static member Cache : Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.Data.IDataView" Usage="Microsoft.ML.Runtime.PipelineInference.InferenceUtils.Cache data" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::IDataView ^ Cache(Microsoft::ML::Runtime::Data::IDataView ^ data);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::IDataView ^ Cache(Microsoft::ML::Runtime::Data::IDataView ^ data);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.IDataView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.IDataView" RefType="this" />
        </Parameters>
        <Docs>
          <param name="data">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.PipelineInference.InferenceUtils" Member="M:Microsoft.ML.Runtime.PipelineInference.InferenceUtils.Cache(Microsoft.ML.Runtime.Data.IDataView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.IDataView" />
      </Targets>
      <Member MemberName="Take">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataView Take (this Microsoft.ML.Runtime.Data.IDataView data, int count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataView Take(class Microsoft.ML.Runtime.Data.IDataView data, int32 count) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.InferenceUtils.Take(Microsoft.ML.Runtime.Data.IDataView,System.Int32)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Take (data As IDataView, count As Integer) As IDataView" />
        <MemberSignature Language="F#" Value="static member Take : Microsoft.ML.Runtime.Data.IDataView * int -&gt; Microsoft.ML.Runtime.Data.IDataView" Usage="Microsoft.ML.Runtime.PipelineInference.InferenceUtils.Take (data, count)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::IDataView ^ Take(Microsoft::ML::Runtime::Data::IDataView ^ data, int count);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::IDataView ^ Take(Microsoft::ML::Runtime::Data::IDataView ^ data, int count);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.IDataView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.IDataView" RefType="this" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="data">To be added.</param>
          <param name="count">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.PipelineInference.InferenceUtils" Member="M:Microsoft.ML.Runtime.PipelineInference.InferenceUtils.Take(Microsoft.ML.Runtime.Data.IDataView,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IRandom" />
      </Targets>
      <Member MemberName="NextFloat">
        <MemberSignature Language="C#" Value="public static float NextFloat (this Microsoft.ML.Runtime.IRandom rand);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 NextFloat(class Microsoft.ML.Runtime.IRandom rand) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.RandomUtils.NextFloat(Microsoft.ML.Runtime.IRandom)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NextFloat (rand As IRandom) As Single" />
        <MemberSignature Language="F#" Value="static member NextFloat : Microsoft.ML.Runtime.IRandom -&gt; single" Usage="Microsoft.ML.Runtime.RandomUtils.NextFloat rand" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float NextFloat(Microsoft::ML::Runtime::IRandom ^ rand);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float NextFloat(Microsoft::ML::Runtime::IRandom ^ rand);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Single</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rand" Type="Microsoft.ML.Runtime.IRandom" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rand">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.RandomUtils" Member="M:Microsoft.ML.Runtime.RandomUtils.NextFloat(Microsoft.ML.Runtime.IRandom)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Random" />
      </Targets>
      <Member MemberName="NextFloat">
        <MemberSignature Language="C#" Value="public static float NextFloat (this Random rand);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 NextFloat(class System.Random rand) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.RandomUtils.NextFloat(System.Random)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NextFloat (rand As Random) As Single" />
        <MemberSignature Language="F#" Value="static member NextFloat : Random -&gt; single" Usage="Microsoft.ML.Runtime.RandomUtils.NextFloat rand" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float NextFloat(Random ^ rand);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Single</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rand" Type="System.Random" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rand">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.RandomUtils" Member="M:Microsoft.ML.Runtime.RandomUtils.NextFloat(System.Random)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.IChannelProvider" />
      </Targets>
      <Member MemberName="StartServerChannel">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.ServerChannel StartServerChannel (this Microsoft.ML.Runtime.IChannelProvider provider, string identifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.ServerChannel StartServerChannel(class Microsoft.ML.Runtime.IChannelProvider provider, string identifier) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ServerChannelUtilities.StartServerChannel(Microsoft.ML.Runtime.IChannelProvider,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StartServerChannel (provider As IChannelProvider, identifier As String) As ServerChannel" />
        <MemberSignature Language="F#" Value="static member StartServerChannel : Microsoft.ML.Runtime.IChannelProvider * string -&gt; Microsoft.ML.Runtime.ServerChannel" Usage="Microsoft.ML.Runtime.ServerChannelUtilities.StartServerChannel (provider, identifier)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::ServerChannel ^ StartServerChannel(Microsoft::ML::Runtime::IChannelProvider ^ provider, System::String ^ identifier);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.ServerChannel</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="provider" Type="Microsoft.ML.Runtime.IChannelProvider" RefType="this" />
          <Parameter Name="identifier" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="provider">The channel provider.</param>
          <param name="identifier">This is an identifier of the "type" of bundle that is being published,
            and should form a path with forward-slash '/' delimiters.</param>
          <summary>
            Convenience method for <see cref="M:Microsoft.ML.Runtime.ServerChannel.Start(Microsoft.ML.Runtime.IChannelProvider,System.String)" /> that looks more idiomatic to typical
            channel creation methods on <see cref="T:Microsoft.ML.Runtime.IChannelProvider" />.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.ServerChannelUtilities" Member="M:Microsoft.ML.Runtime.ServerChannelUtilities.StartServerChannel(Microsoft.ML.Runtime.IChannelProvider,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.RoleMappedData" />
      </Targets>
      <Member MemberName="CheckBinaryLabel">
        <MemberSignature Language="C#" Value="public static void CheckBinaryLabel (this Microsoft.ML.Runtime.Data.RoleMappedData data);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckBinaryLabel(class Microsoft.ML.Runtime.Data.RoleMappedData data) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainerUtils.CheckBinaryLabel(Microsoft.ML.Runtime.Data.RoleMappedData)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckBinaryLabel (data As RoleMappedData)" />
        <MemberSignature Language="F#" Value="static member CheckBinaryLabel : Microsoft.ML.Runtime.Data.RoleMappedData -&gt; unit" Usage="Microsoft.ML.Runtime.Training.TrainerUtils.CheckBinaryLabel data" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckBinaryLabel(Microsoft::ML::Runtime::Data::RoleMappedData ^ data);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckBinaryLabel(Microsoft::ML::Runtime::Data::RoleMappedData ^ data);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" RefType="this" />
        </Parameters>
        <Docs>
          <param name="data">To be added.</param>
          <summary>
            Check for a standard binary classification label.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Training.TrainerUtils" Member="M:Microsoft.ML.Runtime.Training.TrainerUtils.CheckBinaryLabel(Microsoft.ML.Runtime.Data.RoleMappedData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.RoleMappedData" />
      </Targets>
      <Member MemberName="CheckFeatureFloatVector">
        <MemberSignature Language="C#" Value="public static void CheckFeatureFloatVector (this Microsoft.ML.Runtime.Data.RoleMappedData data);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckFeatureFloatVector(class Microsoft.ML.Runtime.Data.RoleMappedData data) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainerUtils.CheckFeatureFloatVector(Microsoft.ML.Runtime.Data.RoleMappedData)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckFeatureFloatVector (data As RoleMappedData)" />
        <MemberSignature Language="F#" Value="static member CheckFeatureFloatVector : Microsoft.ML.Runtime.Data.RoleMappedData -&gt; unit" Usage="Microsoft.ML.Runtime.Training.TrainerUtils.CheckFeatureFloatVector data" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckFeatureFloatVector(Microsoft::ML::Runtime::Data::RoleMappedData ^ data);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckFeatureFloatVector(Microsoft::ML::Runtime::Data::RoleMappedData ^ data);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" RefType="this" />
        </Parameters>
        <Docs>
          <param name="data">To be added.</param>
          <summary>
            Check for a standard (known-length vector of float) feature column.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Training.TrainerUtils" Member="M:Microsoft.ML.Runtime.Training.TrainerUtils.CheckFeatureFloatVector(Microsoft.ML.Runtime.Data.RoleMappedData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.RoleMappedData" />
      </Targets>
      <Member MemberName="CheckFeatureFloatVector">
        <MemberSignature Language="C#" Value="public static void CheckFeatureFloatVector (this Microsoft.ML.Runtime.Data.RoleMappedData data, out int length);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckFeatureFloatVector(class Microsoft.ML.Runtime.Data.RoleMappedData data, [out] int32&amp; length) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainerUtils.CheckFeatureFloatVector(Microsoft.ML.Runtime.Data.RoleMappedData,System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckFeatureFloatVector (data As RoleMappedData, ByRef length As Integer)" />
        <MemberSignature Language="F#" Value="static member CheckFeatureFloatVector : Microsoft.ML.Runtime.Data.RoleMappedData *  -&gt; unit" Usage="Microsoft.ML.Runtime.Training.TrainerUtils.CheckFeatureFloatVector (data, length)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckFeatureFloatVector(Microsoft::ML::Runtime::Data::RoleMappedData ^ data, [Runtime::InteropServices::Out] int % length);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" RefType="this" />
          <Parameter Name="length" Type="System.Int32&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="data">To be added.</param>
          <param name="length">To be added.</param>
          <summary>
            Check for a standard (known-length vector of float) feature column and determine its length.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Training.TrainerUtils" Member="M:Microsoft.ML.Runtime.Training.TrainerUtils.CheckFeatureFloatVector(Microsoft.ML.Runtime.Data.RoleMappedData,System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.RoleMappedData" />
      </Targets>
      <Member MemberName="CheckMultiClassLabel">
        <MemberSignature Language="C#" Value="public static void CheckMultiClassLabel (this Microsoft.ML.Runtime.Data.RoleMappedData data, out int count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckMultiClassLabel(class Microsoft.ML.Runtime.Data.RoleMappedData data, [out] int32&amp; count) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainerUtils.CheckMultiClassLabel(Microsoft.ML.Runtime.Data.RoleMappedData,System.Int32@)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckMultiClassLabel (data As RoleMappedData, ByRef count As Integer)" />
        <MemberSignature Language="F#" Value="static member CheckMultiClassLabel : Microsoft.ML.Runtime.Data.RoleMappedData *  -&gt; unit" Usage="Microsoft.ML.Runtime.Training.TrainerUtils.CheckMultiClassLabel (data, count)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckMultiClassLabel(Microsoft::ML::Runtime::Data::RoleMappedData ^ data, [Runtime::InteropServices::Out] int % count);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" RefType="this" />
          <Parameter Name="count" Type="System.Int32&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="data">To be added.</param>
          <param name="count">To be added.</param>
          <summary>
            Check for a standard multi-class label and determine its cardinality. If the column is a
            key type, it must have known cardinality. For other numeric types, this scans the data
            to determine the cardinality.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Training.TrainerUtils" Member="M:Microsoft.ML.Runtime.Training.TrainerUtils.CheckMultiClassLabel(Microsoft.ML.Runtime.Data.RoleMappedData,System.Int32@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.RoleMappedData" />
      </Targets>
      <Member MemberName="CheckMultiOutputRegressionLabel">
        <MemberSignature Language="C#" Value="public static void CheckMultiOutputRegressionLabel (this Microsoft.ML.Runtime.Data.RoleMappedData data);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckMultiOutputRegressionLabel(class Microsoft.ML.Runtime.Data.RoleMappedData data) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainerUtils.CheckMultiOutputRegressionLabel(Microsoft.ML.Runtime.Data.RoleMappedData)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckMultiOutputRegressionLabel (data As RoleMappedData)" />
        <MemberSignature Language="F#" Value="static member CheckMultiOutputRegressionLabel : Microsoft.ML.Runtime.Data.RoleMappedData -&gt; unit" Usage="Microsoft.ML.Runtime.Training.TrainerUtils.CheckMultiOutputRegressionLabel data" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckMultiOutputRegressionLabel(Microsoft::ML::Runtime::Data::RoleMappedData ^ data);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckMultiOutputRegressionLabel(Microsoft::ML::Runtime::Data::RoleMappedData ^ data);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" RefType="this" />
        </Parameters>
        <Docs>
          <param name="data">To be added.</param>
          <summary>
            Check for a standard regression label.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Training.TrainerUtils" Member="M:Microsoft.ML.Runtime.Training.TrainerUtils.CheckMultiOutputRegressionLabel(Microsoft.ML.Runtime.Data.RoleMappedData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.RoleMappedData" />
      </Targets>
      <Member MemberName="CheckOptFloatWeight">
        <MemberSignature Language="C#" Value="public static void CheckOptFloatWeight (this Microsoft.ML.Runtime.Data.RoleMappedData data);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckOptFloatWeight(class Microsoft.ML.Runtime.Data.RoleMappedData data) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainerUtils.CheckOptFloatWeight(Microsoft.ML.Runtime.Data.RoleMappedData)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckOptFloatWeight (data As RoleMappedData)" />
        <MemberSignature Language="F#" Value="static member CheckOptFloatWeight : Microsoft.ML.Runtime.Data.RoleMappedData -&gt; unit" Usage="Microsoft.ML.Runtime.Training.TrainerUtils.CheckOptFloatWeight data" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckOptFloatWeight(Microsoft::ML::Runtime::Data::RoleMappedData ^ data);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckOptFloatWeight(Microsoft::ML::Runtime::Data::RoleMappedData ^ data);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" RefType="this" />
        </Parameters>
        <Docs>
          <param name="data">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Training.TrainerUtils" Member="M:Microsoft.ML.Runtime.Training.TrainerUtils.CheckOptFloatWeight(Microsoft.ML.Runtime.Data.RoleMappedData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.RoleMappedData" />
      </Targets>
      <Member MemberName="CheckOptGroup">
        <MemberSignature Language="C#" Value="public static void CheckOptGroup (this Microsoft.ML.Runtime.Data.RoleMappedData data);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckOptGroup(class Microsoft.ML.Runtime.Data.RoleMappedData data) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainerUtils.CheckOptGroup(Microsoft.ML.Runtime.Data.RoleMappedData)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckOptGroup (data As RoleMappedData)" />
        <MemberSignature Language="F#" Value="static member CheckOptGroup : Microsoft.ML.Runtime.Data.RoleMappedData -&gt; unit" Usage="Microsoft.ML.Runtime.Training.TrainerUtils.CheckOptGroup data" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckOptGroup(Microsoft::ML::Runtime::Data::RoleMappedData ^ data);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckOptGroup(Microsoft::ML::Runtime::Data::RoleMappedData ^ data);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" RefType="this" />
        </Parameters>
        <Docs>
          <param name="data">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Training.TrainerUtils" Member="M:Microsoft.ML.Runtime.Training.TrainerUtils.CheckOptGroup(Microsoft.ML.Runtime.Data.RoleMappedData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.RoleMappedData" />
      </Targets>
      <Member MemberName="CheckRegressionLabel">
        <MemberSignature Language="C#" Value="public static void CheckRegressionLabel (this Microsoft.ML.Runtime.Data.RoleMappedData data);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckRegressionLabel(class Microsoft.ML.Runtime.Data.RoleMappedData data) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainerUtils.CheckRegressionLabel(Microsoft.ML.Runtime.Data.RoleMappedData)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckRegressionLabel (data As RoleMappedData)" />
        <MemberSignature Language="F#" Value="static member CheckRegressionLabel : Microsoft.ML.Runtime.Data.RoleMappedData -&gt; unit" Usage="Microsoft.ML.Runtime.Training.TrainerUtils.CheckRegressionLabel data" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckRegressionLabel(Microsoft::ML::Runtime::Data::RoleMappedData ^ data);" />
        <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CheckRegressionLabel(Microsoft::ML::Runtime::Data::RoleMappedData ^ data);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" RefType="this" />
        </Parameters>
        <Docs>
          <param name="data">To be added.</param>
          <summary>
            Check for a standard regression label.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Training.TrainerUtils" Member="M:Microsoft.ML.Runtime.Training.TrainerUtils.CheckRegressionLabel(Microsoft.ML.Runtime.Data.RoleMappedData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.RoleMappedData" />
      </Targets>
      <Member MemberName="CreateRowCursor">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IRowCursor CreateRowCursor (this Microsoft.ML.Runtime.Data.RoleMappedData data, Microsoft.ML.Runtime.Training.CursOpt opt, Microsoft.ML.Runtime.IRandom rand, System.Collections.Generic.IEnumerable&lt;int&gt; extraCols = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IRowCursor CreateRowCursor(class Microsoft.ML.Runtime.Data.RoleMappedData data, valuetype Microsoft.ML.Runtime.Training.CursOpt opt, class Microsoft.ML.Runtime.IRandom rand, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; extraCols) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainerUtils.CreateRowCursor(Microsoft.ML.Runtime.Data.RoleMappedData,Microsoft.ML.Runtime.Training.CursOpt,Microsoft.ML.Runtime.IRandom,System.Collections.Generic.IEnumerable{System.Int32})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateRowCursor (data As RoleMappedData, opt As CursOpt, rand As IRandom, Optional extraCols As IEnumerable(Of Integer) = null) As IRowCursor" />
        <MemberSignature Language="F#" Value="static member CreateRowCursor : Microsoft.ML.Runtime.Data.RoleMappedData * Microsoft.ML.Runtime.Training.CursOpt * Microsoft.ML.Runtime.IRandom * seq&lt;int&gt; -&gt; Microsoft.ML.Runtime.Data.IRowCursor" Usage="Microsoft.ML.Runtime.Training.TrainerUtils.CreateRowCursor (data, opt, rand, extraCols)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.IRowCursor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" RefType="this" />
          <Parameter Name="opt" Type="Microsoft.ML.Runtime.Training.CursOpt" />
          <Parameter Name="rand" Type="Microsoft.ML.Runtime.IRandom" />
          <Parameter Name="extraCols" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        </Parameters>
        <Docs>
          <param name="data">To be added.</param>
          <param name="opt">To be added.</param>
          <param name="rand">To be added.</param>
          <param name="extraCols">To be added.</param>
          <summary>
            Create a row cursor for the RoleMappedData with the indicated standard columns active.
            This does not verify that the columns exist, but merely activates the ones that do exist.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Training.TrainerUtils" Member="M:Microsoft.ML.Runtime.Training.TrainerUtils.CreateRowCursor(Microsoft.ML.Runtime.Data.RoleMappedData,Microsoft.ML.Runtime.Training.CursOpt,Microsoft.ML.Runtime.IRandom,System.Collections.Generic.IEnumerable{System.Int32})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.RoleMappedData" />
      </Targets>
      <Member MemberName="CreateRowCursorSet">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IRowCursor[] CreateRowCursorSet (this Microsoft.ML.Runtime.Data.RoleMappedData data, out Microsoft.ML.Runtime.Data.IRowCursorConsolidator consolidator, Microsoft.ML.Runtime.Training.CursOpt opt, int n, Microsoft.ML.Runtime.IRandom rand, System.Collections.Generic.IEnumerable&lt;int&gt; extraCols = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IRowCursor[] CreateRowCursorSet(class Microsoft.ML.Runtime.Data.RoleMappedData data, [out] class Microsoft.ML.Runtime.Data.IRowCursorConsolidator&amp; consolidator, valuetype Microsoft.ML.Runtime.Training.CursOpt opt, int32 n, class Microsoft.ML.Runtime.IRandom rand, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; extraCols) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainerUtils.CreateRowCursorSet(Microsoft.ML.Runtime.Data.RoleMappedData,Microsoft.ML.Runtime.Data.IRowCursorConsolidator@,Microsoft.ML.Runtime.Training.CursOpt,System.Int32,Microsoft.ML.Runtime.IRandom,System.Collections.Generic.IEnumerable{System.Int32})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateRowCursorSet (data As RoleMappedData, ByRef consolidator As IRowCursorConsolidator, opt As CursOpt, n As Integer, rand As IRandom, Optional extraCols As IEnumerable(Of Integer) = null) As IRowCursor()" />
        <MemberSignature Language="F#" Value="static member CreateRowCursorSet : Microsoft.ML.Runtime.Data.RoleMappedData *  * Microsoft.ML.Runtime.Training.CursOpt * int * Microsoft.ML.Runtime.IRandom * seq&lt;int&gt; -&gt; Microsoft.ML.Runtime.Data.IRowCursor[]" Usage="Microsoft.ML.Runtime.Training.TrainerUtils.CreateRowCursorSet (data, consolidator, opt, n, rand, extraCols)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.IRowCursor[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" RefType="this" />
          <Parameter Name="consolidator" Type="Microsoft.ML.Runtime.Data.IRowCursorConsolidator&amp;" RefType="out" />
          <Parameter Name="opt" Type="Microsoft.ML.Runtime.Training.CursOpt" />
          <Parameter Name="n" Type="System.Int32" />
          <Parameter Name="rand" Type="Microsoft.ML.Runtime.IRandom" />
          <Parameter Name="extraCols" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        </Parameters>
        <Docs>
          <param name="data">To be added.</param>
          <param name="consolidator">To be added.</param>
          <param name="opt">To be added.</param>
          <param name="n">To be added.</param>
          <param name="rand">To be added.</param>
          <param name="extraCols">To be added.</param>
          <summary>
            Create a row cursor set for the RoleMappedData with the indicated standard columns active.
            This does not verify that the columns exist, but merely activates the ones that do exist.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Training.TrainerUtils" Member="M:Microsoft.ML.Runtime.Training.TrainerUtils.CreateRowCursorSet(Microsoft.ML.Runtime.Data.RoleMappedData,Microsoft.ML.Runtime.Data.IRowCursorConsolidator@,Microsoft.ML.Runtime.Training.CursOpt,System.Int32,Microsoft.ML.Runtime.IRandom,System.Collections.Generic.IEnumerable{System.Int32})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.IRow" />
      </Targets>
      <Member MemberName="GetFeatureFloatVectorGetter">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.ValueGetter&lt;Microsoft.ML.Runtime.Data.VBuffer&lt;float&gt;&gt; GetFeatureFloatVectorGetter (this Microsoft.ML.Runtime.Data.IRow row, Microsoft.ML.Runtime.Data.RoleMappedData data);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.ValueGetter`1&lt;valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;float32&gt;&gt; GetFeatureFloatVectorGetter(class Microsoft.ML.Runtime.Data.IRow row, class Microsoft.ML.Runtime.Data.RoleMappedData data) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainerUtils.GetFeatureFloatVectorGetter(Microsoft.ML.Runtime.Data.IRow,Microsoft.ML.Runtime.Data.RoleMappedData)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFeatureFloatVectorGetter (row As IRow, data As RoleMappedData) As ValueGetter(Of VBuffer(Of Single))" />
        <MemberSignature Language="F#" Value="static member GetFeatureFloatVectorGetter : Microsoft.ML.Runtime.Data.IRow * Microsoft.ML.Runtime.Data.RoleMappedData -&gt; Microsoft.ML.Runtime.Data.ValueGetter&lt;Microsoft.ML.Runtime.Data.VBuffer&lt;single&gt;&gt;" Usage="Microsoft.ML.Runtime.Training.TrainerUtils.GetFeatureFloatVectorGetter (row, data)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::ValueGetter&lt;Microsoft::ML::Runtime::Data::VBuffer&lt;float&gt;&gt; ^ GetFeatureFloatVectorGetter(Microsoft::ML::Runtime::Data::IRow ^ row, Microsoft::ML::Runtime::Data::RoleMappedData ^ data);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.ValueGetter&lt;Microsoft.ML.Runtime.Data.VBuffer&lt;System.Single&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="row" Type="Microsoft.ML.Runtime.Data.IRow" RefType="this" />
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
        </Parameters>
        <Docs>
          <param name="row">To be added.</param>
          <param name="data">To be added.</param>
          <summary>
            Get the getter for the feature column, assuming it is a vector of Float.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Training.TrainerUtils" Member="M:Microsoft.ML.Runtime.Training.TrainerUtils.GetFeatureFloatVectorGetter(Microsoft.ML.Runtime.Data.IRow,Microsoft.ML.Runtime.Data.RoleMappedData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.IRow" />
      </Targets>
      <Member MemberName="GetFeatureFloatVectorGetter">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.ValueGetter&lt;Microsoft.ML.Runtime.Data.VBuffer&lt;float&gt;&gt; GetFeatureFloatVectorGetter (this Microsoft.ML.Runtime.Data.IRow row, Microsoft.ML.Runtime.Data.RoleMappedSchema schema);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.ValueGetter`1&lt;valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;float32&gt;&gt; GetFeatureFloatVectorGetter(class Microsoft.ML.Runtime.Data.IRow row, class Microsoft.ML.Runtime.Data.RoleMappedSchema schema) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainerUtils.GetFeatureFloatVectorGetter(Microsoft.ML.Runtime.Data.IRow,Microsoft.ML.Runtime.Data.RoleMappedSchema)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFeatureFloatVectorGetter (row As IRow, schema As RoleMappedSchema) As ValueGetter(Of VBuffer(Of Single))" />
        <MemberSignature Language="F#" Value="static member GetFeatureFloatVectorGetter : Microsoft.ML.Runtime.Data.IRow * Microsoft.ML.Runtime.Data.RoleMappedSchema -&gt; Microsoft.ML.Runtime.Data.ValueGetter&lt;Microsoft.ML.Runtime.Data.VBuffer&lt;single&gt;&gt;" Usage="Microsoft.ML.Runtime.Training.TrainerUtils.GetFeatureFloatVectorGetter (row, schema)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::ValueGetter&lt;Microsoft::ML::Runtime::Data::VBuffer&lt;float&gt;&gt; ^ GetFeatureFloatVectorGetter(Microsoft::ML::Runtime::Data::IRow ^ row, Microsoft::ML::Runtime::Data::RoleMappedSchema ^ schema);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.ValueGetter&lt;Microsoft.ML.Runtime.Data.VBuffer&lt;System.Single&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="row" Type="Microsoft.ML.Runtime.Data.IRow" RefType="this" />
          <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.RoleMappedSchema" />
        </Parameters>
        <Docs>
          <param name="row">To be added.</param>
          <param name="schema">To be added.</param>
          <summary>
            Get the getter for the feature column, assuming it is a vector of Float.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Training.TrainerUtils" Member="M:Microsoft.ML.Runtime.Training.TrainerUtils.GetFeatureFloatVectorGetter(Microsoft.ML.Runtime.Data.IRow,Microsoft.ML.Runtime.Data.RoleMappedSchema)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.IRow" />
      </Targets>
      <Member MemberName="GetLabelFloatGetter">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.ValueGetter&lt;float&gt; GetLabelFloatGetter (this Microsoft.ML.Runtime.Data.IRow row, Microsoft.ML.Runtime.Data.RoleMappedData data);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.ValueGetter`1&lt;float32&gt; GetLabelFloatGetter(class Microsoft.ML.Runtime.Data.IRow row, class Microsoft.ML.Runtime.Data.RoleMappedData data) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainerUtils.GetLabelFloatGetter(Microsoft.ML.Runtime.Data.IRow,Microsoft.ML.Runtime.Data.RoleMappedData)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLabelFloatGetter (row As IRow, data As RoleMappedData) As ValueGetter(Of Single)" />
        <MemberSignature Language="F#" Value="static member GetLabelFloatGetter : Microsoft.ML.Runtime.Data.IRow * Microsoft.ML.Runtime.Data.RoleMappedData -&gt; Microsoft.ML.Runtime.Data.ValueGetter&lt;single&gt;" Usage="Microsoft.ML.Runtime.Training.TrainerUtils.GetLabelFloatGetter (row, data)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::ValueGetter&lt;float&gt; ^ GetLabelFloatGetter(Microsoft::ML::Runtime::Data::IRow ^ row, Microsoft::ML::Runtime::Data::RoleMappedData ^ data);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.ValueGetter&lt;System.Single&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="row" Type="Microsoft.ML.Runtime.Data.IRow" RefType="this" />
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
        </Parameters>
        <Docs>
          <param name="row">To be added.</param>
          <param name="data">To be added.</param>
          <summary>
            Get a getter for the label as a Float. This assumes that the label column type
            has already been validated as appropriate for the kind of training being done.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Training.TrainerUtils" Member="M:Microsoft.ML.Runtime.Training.TrainerUtils.GetLabelFloatGetter(Microsoft.ML.Runtime.Data.IRow,Microsoft.ML.Runtime.Data.RoleMappedData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.IRow" />
      </Targets>
      <Member MemberName="GetLabelFloatGetter">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.ValueGetter&lt;float&gt; GetLabelFloatGetter (this Microsoft.ML.Runtime.Data.IRow row, Microsoft.ML.Runtime.Data.RoleMappedSchema schema);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.ValueGetter`1&lt;float32&gt; GetLabelFloatGetter(class Microsoft.ML.Runtime.Data.IRow row, class Microsoft.ML.Runtime.Data.RoleMappedSchema schema) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainerUtils.GetLabelFloatGetter(Microsoft.ML.Runtime.Data.IRow,Microsoft.ML.Runtime.Data.RoleMappedSchema)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLabelFloatGetter (row As IRow, schema As RoleMappedSchema) As ValueGetter(Of Single)" />
        <MemberSignature Language="F#" Value="static member GetLabelFloatGetter : Microsoft.ML.Runtime.Data.IRow * Microsoft.ML.Runtime.Data.RoleMappedSchema -&gt; Microsoft.ML.Runtime.Data.ValueGetter&lt;single&gt;" Usage="Microsoft.ML.Runtime.Training.TrainerUtils.GetLabelFloatGetter (row, schema)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::ValueGetter&lt;float&gt; ^ GetLabelFloatGetter(Microsoft::ML::Runtime::Data::IRow ^ row, Microsoft::ML::Runtime::Data::RoleMappedSchema ^ schema);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.ValueGetter&lt;System.Single&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="row" Type="Microsoft.ML.Runtime.Data.IRow" RefType="this" />
          <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.RoleMappedSchema" />
        </Parameters>
        <Docs>
          <param name="row">To be added.</param>
          <param name="schema">To be added.</param>
          <summary>
            Get a getter for the label as a Float. This assumes that the label column type
            has already been validated as appropriate for the kind of training being done.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Training.TrainerUtils" Member="M:Microsoft.ML.Runtime.Training.TrainerUtils.GetLabelFloatGetter(Microsoft.ML.Runtime.Data.IRow,Microsoft.ML.Runtime.Data.RoleMappedSchema)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.IRow" />
      </Targets>
      <Member MemberName="GetOptGroupGetter">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.ValueGetter&lt;ulong&gt; GetOptGroupGetter (this Microsoft.ML.Runtime.Data.IRow row, Microsoft.ML.Runtime.Data.RoleMappedData data);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.ValueGetter`1&lt;unsigned int64&gt; GetOptGroupGetter(class Microsoft.ML.Runtime.Data.IRow row, class Microsoft.ML.Runtime.Data.RoleMappedData data) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainerUtils.GetOptGroupGetter(Microsoft.ML.Runtime.Data.IRow,Microsoft.ML.Runtime.Data.RoleMappedData)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOptGroupGetter (row As IRow, data As RoleMappedData) As ValueGetter(Of ULong)" />
        <MemberSignature Language="F#" Value="static member GetOptGroupGetter : Microsoft.ML.Runtime.Data.IRow * Microsoft.ML.Runtime.Data.RoleMappedData -&gt; Microsoft.ML.Runtime.Data.ValueGetter&lt;uint64&gt;" Usage="Microsoft.ML.Runtime.Training.TrainerUtils.GetOptGroupGetter (row, data)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::ValueGetter&lt;System::UInt64&gt; ^ GetOptGroupGetter(Microsoft::ML::Runtime::Data::IRow ^ row, Microsoft::ML::Runtime::Data::RoleMappedData ^ data);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.ValueGetter&lt;System.UInt64&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="row" Type="Microsoft.ML.Runtime.Data.IRow" RefType="this" />
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
        </Parameters>
        <Docs>
          <param name="row">To be added.</param>
          <param name="data">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Training.TrainerUtils" Member="M:Microsoft.ML.Runtime.Training.TrainerUtils.GetOptGroupGetter(Microsoft.ML.Runtime.Data.IRow,Microsoft.ML.Runtime.Data.RoleMappedData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.IRow" />
      </Targets>
      <Member MemberName="GetOptGroupGetter">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.ValueGetter&lt;ulong&gt; GetOptGroupGetter (this Microsoft.ML.Runtime.Data.IRow row, Microsoft.ML.Runtime.Data.RoleMappedSchema schema);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.ValueGetter`1&lt;unsigned int64&gt; GetOptGroupGetter(class Microsoft.ML.Runtime.Data.IRow row, class Microsoft.ML.Runtime.Data.RoleMappedSchema schema) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainerUtils.GetOptGroupGetter(Microsoft.ML.Runtime.Data.IRow,Microsoft.ML.Runtime.Data.RoleMappedSchema)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOptGroupGetter (row As IRow, schema As RoleMappedSchema) As ValueGetter(Of ULong)" />
        <MemberSignature Language="F#" Value="static member GetOptGroupGetter : Microsoft.ML.Runtime.Data.IRow * Microsoft.ML.Runtime.Data.RoleMappedSchema -&gt; Microsoft.ML.Runtime.Data.ValueGetter&lt;uint64&gt;" Usage="Microsoft.ML.Runtime.Training.TrainerUtils.GetOptGroupGetter (row, schema)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::ValueGetter&lt;System::UInt64&gt; ^ GetOptGroupGetter(Microsoft::ML::Runtime::Data::IRow ^ row, Microsoft::ML::Runtime::Data::RoleMappedSchema ^ schema);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.ValueGetter&lt;System.UInt64&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="row" Type="Microsoft.ML.Runtime.Data.IRow" RefType="this" />
          <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.RoleMappedSchema" />
        </Parameters>
        <Docs>
          <param name="row">To be added.</param>
          <param name="schema">To be added.</param>
          <summary>
            Get the getter for the group column, or null if there is no group column.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Training.TrainerUtils" Member="M:Microsoft.ML.Runtime.Training.TrainerUtils.GetOptGroupGetter(Microsoft.ML.Runtime.Data.IRow,Microsoft.ML.Runtime.Data.RoleMappedSchema)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.IRow" />
      </Targets>
      <Member MemberName="GetOptWeightFloatGetter">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.ValueGetter&lt;float&gt; GetOptWeightFloatGetter (this Microsoft.ML.Runtime.Data.IRow row, Microsoft.ML.Runtime.Data.RoleMappedData data);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.ValueGetter`1&lt;float32&gt; GetOptWeightFloatGetter(class Microsoft.ML.Runtime.Data.IRow row, class Microsoft.ML.Runtime.Data.RoleMappedData data) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainerUtils.GetOptWeightFloatGetter(Microsoft.ML.Runtime.Data.IRow,Microsoft.ML.Runtime.Data.RoleMappedData)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOptWeightFloatGetter (row As IRow, data As RoleMappedData) As ValueGetter(Of Single)" />
        <MemberSignature Language="F#" Value="static member GetOptWeightFloatGetter : Microsoft.ML.Runtime.Data.IRow * Microsoft.ML.Runtime.Data.RoleMappedData -&gt; Microsoft.ML.Runtime.Data.ValueGetter&lt;single&gt;" Usage="Microsoft.ML.Runtime.Training.TrainerUtils.GetOptWeightFloatGetter (row, data)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::ValueGetter&lt;float&gt; ^ GetOptWeightFloatGetter(Microsoft::ML::Runtime::Data::IRow ^ row, Microsoft::ML::Runtime::Data::RoleMappedData ^ data);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.ValueGetter&lt;System.Single&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="row" Type="Microsoft.ML.Runtime.Data.IRow" RefType="this" />
          <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
        </Parameters>
        <Docs>
          <param name="row">To be added.</param>
          <param name="data">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Training.TrainerUtils" Member="M:Microsoft.ML.Runtime.Training.TrainerUtils.GetOptWeightFloatGetter(Microsoft.ML.Runtime.Data.IRow,Microsoft.ML.Runtime.Data.RoleMappedData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.ML.Runtime.Data.IRow" />
      </Targets>
      <Member MemberName="GetOptWeightFloatGetter">
        <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.ValueGetter&lt;float&gt; GetOptWeightFloatGetter (this Microsoft.ML.Runtime.Data.IRow row, Microsoft.ML.Runtime.Data.RoleMappedSchema schema);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.ValueGetter`1&lt;float32&gt; GetOptWeightFloatGetter(class Microsoft.ML.Runtime.Data.IRow row, class Microsoft.ML.Runtime.Data.RoleMappedSchema schema) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainerUtils.GetOptWeightFloatGetter(Microsoft.ML.Runtime.Data.IRow,Microsoft.ML.Runtime.Data.RoleMappedSchema)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOptWeightFloatGetter (row As IRow, schema As RoleMappedSchema) As ValueGetter(Of Single)" />
        <MemberSignature Language="F#" Value="static member GetOptWeightFloatGetter : Microsoft.ML.Runtime.Data.IRow * Microsoft.ML.Runtime.Data.RoleMappedSchema -&gt; Microsoft.ML.Runtime.Data.ValueGetter&lt;single&gt;" Usage="Microsoft.ML.Runtime.Training.TrainerUtils.GetOptWeightFloatGetter (row, schema)" />
        <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::ML::Runtime::Data::ValueGetter&lt;float&gt; ^ GetOptWeightFloatGetter(Microsoft::ML::Runtime::Data::IRow ^ row, Microsoft::ML::Runtime::Data::RoleMappedSchema ^ schema);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.ML.Runtime.Data.ValueGetter&lt;System.Single&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="row" Type="Microsoft.ML.Runtime.Data.IRow" RefType="this" />
          <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.RoleMappedSchema" />
        </Parameters>
        <Docs>
          <param name="row">To be added.</param>
          <param name="schema">To be added.</param>
          <summary>
            Get the getter for the weight column, or null if there is no weight column.
            </summary>
        </Docs>
        <Link Type="Microsoft.ML.Runtime.Training.TrainerUtils" Member="M:Microsoft.ML.Runtime.Training.TrainerUtils.GetOptWeightFloatGetter(Microsoft.ML.Runtime.Data.IRow,Microsoft.ML.Runtime.Data.RoleMappedSchema)" />
      </Member>
    </ExtensionMethod>
  </ExtensionMethods>
</Overview>
