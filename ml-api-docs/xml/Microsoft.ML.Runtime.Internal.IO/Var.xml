<Type Name="Var" FullName="Microsoft.ML.Runtime.Internal.IO.Var">
  <TypeSignature Language="C#" Value="public class Var : IComparable, IComparable&lt;byte&gt;, IComparable&lt;char&gt;, IComparable&lt;DateTime&gt;, IComparable&lt;decimal&gt;, IComparable&lt;double&gt;, IComparable&lt;float&gt;, IComparable&lt;Guid&gt;, IComparable&lt;int&gt;, IComparable&lt;long&gt;, IComparable&lt;Microsoft.ML.Runtime.Internal.IO.Var&gt;, IComparable&lt;sbyte&gt;, IComparable&lt;short&gt;, IComparable&lt;string&gt;, IComparable&lt;uint&gt;, IComparable&lt;ulong&gt;, IComparable&lt;ushort&gt;, IConvertible, IEquatable&lt;byte&gt;, IEquatable&lt;char&gt;, IEquatable&lt;DateTime&gt;, IEquatable&lt;decimal&gt;, IEquatable&lt;double&gt;, IEquatable&lt;float&gt;, IEquatable&lt;Guid&gt;, IEquatable&lt;int&gt;, IEquatable&lt;long&gt;, IEquatable&lt;Microsoft.ML.Runtime.Internal.IO.Var&gt;, IEquatable&lt;sbyte&gt;, IEquatable&lt;short&gt;, IEquatable&lt;string&gt;, IEquatable&lt;uint&gt;, IEquatable&lt;ulong&gt;, IEquatable&lt;ushort&gt;, System.Collections.Generic.IEnumerable&lt;char&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Var extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;char&gt;, class System.Collections.IEnumerable, class System.IComparable, class System.IComparable`1&lt;char&gt;, class System.IComparable`1&lt;class Microsoft.ML.Runtime.Internal.IO.Var&gt;, class System.IComparable`1&lt;float32&gt;, class System.IComparable`1&lt;float64&gt;, class System.IComparable`1&lt;int16&gt;, class System.IComparable`1&lt;int32&gt;, class System.IComparable`1&lt;int64&gt;, class System.IComparable`1&lt;int8&gt;, class System.IComparable`1&lt;string&gt;, class System.IComparable`1&lt;unsigned int16&gt;, class System.IComparable`1&lt;unsigned int32&gt;, class System.IComparable`1&lt;unsigned int64&gt;, class System.IComparable`1&lt;unsigned int8&gt;, class System.IComparable`1&lt;valuetype System.DateTime&gt;, class System.IComparable`1&lt;valuetype System.Decimal&gt;, class System.IComparable`1&lt;valuetype System.Guid&gt;, class System.IConvertible, class System.IEquatable`1&lt;char&gt;, class System.IEquatable`1&lt;class Microsoft.ML.Runtime.Internal.IO.Var&gt;, class System.IEquatable`1&lt;float32&gt;, class System.IEquatable`1&lt;float64&gt;, class System.IEquatable`1&lt;int16&gt;, class System.IEquatable`1&lt;int32&gt;, class System.IEquatable`1&lt;int64&gt;, class System.IEquatable`1&lt;int8&gt;, class System.IEquatable`1&lt;string&gt;, class System.IEquatable`1&lt;unsigned int16&gt;, class System.IEquatable`1&lt;unsigned int32&gt;, class System.IEquatable`1&lt;unsigned int64&gt;, class System.IEquatable`1&lt;unsigned int8&gt;, class System.IEquatable`1&lt;valuetype System.DateTime&gt;, class System.IEquatable`1&lt;valuetype System.Decimal&gt;, class System.IEquatable`1&lt;valuetype System.Guid&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Internal.IO.Var" />
  <TypeSignature Language="VB.NET" Value="Public Class Var&#xA;Implements IComparable, IComparable(Of Byte), IComparable(Of Char), IComparable(Of DateTime), IComparable(Of Decimal), IComparable(Of Double), IComparable(Of Guid), IComparable(Of Integer), IComparable(Of Long), IComparable(Of SByte), IComparable(Of Short), IComparable(Of Single), IComparable(Of String), IComparable(Of UInteger), IComparable(Of ULong), IComparable(Of UShort), IComparable(Of Var), IConvertible, IEnumerable(Of Char), IEquatable(Of Byte), IEquatable(Of Char), IEquatable(Of DateTime), IEquatable(Of Decimal), IEquatable(Of Double), IEquatable(Of Guid), IEquatable(Of Integer), IEquatable(Of Long), IEquatable(Of SByte), IEquatable(Of Short), IEquatable(Of Single), IEquatable(Of String), IEquatable(Of UInteger), IEquatable(Of ULong), IEquatable(Of UShort), IEquatable(Of Var)" />
  <TypeSignature Language="F#" Value="type Var = class&#xA;    interface IEquatable&lt;Var&gt;&#xA;    interface IEquatable&lt;string&gt;&#xA;    interface IEquatable&lt;double&gt;&#xA;    interface IEquatable&lt;single&gt;&#xA;    interface IEquatable&lt;int&gt;&#xA;    interface IEquatable&lt;uint32&gt;&#xA;    interface IEquatable&lt;int64&gt;&#xA;    interface IEquatable&lt;uint64&gt;&#xA;    interface IEquatable&lt;int16&gt;&#xA;    interface IEquatable&lt;uint16&gt;&#xA;    interface IEquatable&lt;byte&gt;&#xA;    interface IEquatable&lt;sbyte&gt;&#xA;    interface IEquatable&lt;char&gt;&#xA;    interface IEquatable&lt;decimal&gt;&#xA;    interface IEquatable&lt;Guid&gt;&#xA;    interface IEquatable&lt;DateTime&gt;&#xA;    interface IComparable&lt;Var&gt;&#xA;    interface IComparable&lt;string&gt;&#xA;    interface IComparable&lt;double&gt;&#xA;    interface IComparable&lt;single&gt;&#xA;    interface IComparable&lt;int&gt;&#xA;    interface IComparable&lt;uint32&gt;&#xA;    interface IComparable&lt;int64&gt;&#xA;    interface IComparable&lt;uint64&gt;&#xA;    interface IComparable&lt;int16&gt;&#xA;    interface IComparable&lt;uint16&gt;&#xA;    interface IComparable&lt;byte&gt;&#xA;    interface IComparable&lt;sbyte&gt;&#xA;    interface IComparable&lt;char&gt;&#xA;    interface IComparable&lt;decimal&gt;&#xA;    interface IComparable&lt;Guid&gt;&#xA;    interface IComparable&lt;DateTime&gt;&#xA;    interface seq&lt;char&gt;&#xA;    interface IEnumerable&#xA;    interface IComparable&#xA;    interface IConvertible" />
  <TypeSignature Language="C++ CLI" Value="public ref class Var : IComparable, IComparable&lt;char&gt;, IComparable&lt;DateTime&gt;, IComparable&lt;double&gt;, IComparable&lt;float&gt;, IComparable&lt;Guid&gt;, IComparable&lt;int&gt;, IComparable&lt;long&gt;, IComparable&lt;Microsoft::ML::Runtime::Internal::IO::Var ^&gt;, IComparable&lt;short&gt;, IComparable&lt;System::Byte&gt;, IComparable&lt;System::Decimal&gt;, IComparable&lt;System::SByte&gt;, IComparable&lt;System::String ^&gt;, IComparable&lt;System::UInt16&gt;, IComparable&lt;System::UInt32&gt;, IComparable&lt;System::UInt64&gt;, IConvertible, IEquatable&lt;char&gt;, IEquatable&lt;DateTime&gt;, IEquatable&lt;double&gt;, IEquatable&lt;float&gt;, IEquatable&lt;Guid&gt;, IEquatable&lt;int&gt;, IEquatable&lt;long&gt;, IEquatable&lt;Microsoft::ML::Runtime::Internal::IO::Var ^&gt;, IEquatable&lt;short&gt;, IEquatable&lt;System::Byte&gt;, IEquatable&lt;System::Decimal&gt;, IEquatable&lt;System::SByte&gt;, IEquatable&lt;System::String ^&gt;, IEquatable&lt;System::UInt16&gt;, IEquatable&lt;System::UInt32&gt;, IEquatable&lt;System::UInt64&gt;, System::Collections::Generic::IEnumerable&lt;char&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Char&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;Microsoft.ML.Runtime.Internal.IO.Var&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Byte&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Char&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.DateTime&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Decimal&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Double&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Guid&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Int16&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Int32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Int64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.SByte&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Single&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.UInt16&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.UInt32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.UInt64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.ML.Runtime.Internal.IO.Var&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Byte&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Char&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.DateTime&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Decimal&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Double&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Guid&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Int16&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Int32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Int64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.SByte&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Single&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.UInt16&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.UInt32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.UInt64&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Convenience type to represent a value that should be easily converted.
            </summary>
    <remarks>
      <para>
            Var instance are immutable.
            </para>
      <para>
            In the current form, Var is not very efficient - the value is always stored
            internally as a string, and it is a reference type.
            </para>
      <para>
            A Var will implicitly convert to and from primitive numerical types, as well as
            <see cref="T:System.Guid" />, <see cref="T:System.DateTime" />, and <see cref="T:System.String" />. It can also be compared for
            equality or order with those types. Comparisons are performed by converting the
            Var to the type of the other value (for example, comparing to 123 will cause a
            numerical comparison, while "123" will cause a string comparison).
            </para>
      <para>
            Numbers will be parsed properly if they contain commas, are in exponential notation,
            or have surrounding whitespace. Hex numbers can be specified by starting with "0x"
            or "-0x".
            </para>
      <para>
            String methods can be used directly, without casting the value.
            </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Var (string raw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string raw) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (raw As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Internal.IO.Var : string -&gt; Microsoft.ML.Runtime.Internal.IO.Var" Usage="new Microsoft.ML.Runtime.Internal.IO.Var raw" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Var(System::String ^ raw);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Var(Platform::String ^ raw);" />
      <MemberSignature Language="C++ WINRT" Value=" Var(std::wstring const &amp; raw);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="raw" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="raw">the string representation</param>
        <summary>
            Create a new Var, based on the string representation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (Microsoft.ML.Runtime.Internal.IO.Var obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(class Microsoft.ML.Runtime.Internal.IO.Var obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.CompareTo(Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Var) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : Microsoft.ML.Runtime.Internal.IO.Var -&gt; int&#xA;override this.CompareTo : Microsoft.ML.Runtime.Internal.IO.Var -&gt; int" Usage="var.CompareTo obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(Microsoft::ML::Runtime::Internal::IO::Var ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Compares this instance with a specified value.</summary>
        <returns>
            A 32-bit signed integer indicating the lexical relationship between the two comparands.
            negative if this instance is less than obj, zero if this instance is equal to obj,
            positive if this instance is greater than obj.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (byte obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(unsigned int8 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.CompareTo(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Byte) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : byte -&gt; int&#xA;override this.CompareTo : byte -&gt; int" Usage="var.CompareTo obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Byte obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int CompareTo(byte obj);" />
      <MemberSignature Language="C++ WINRT" Value="int CompareTo(byte obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Compares this instance with a specified value.</summary>
        <returns>
            A 32-bit signed integer indicating the lexical relationship between the two comparands.
            negative if this instance is less than obj, zero if this instance is equal to obj,
            positive if this instance is greater than obj.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (char obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(char obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.CompareTo(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Char) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : char -&gt; int&#xA;override this.CompareTo : char -&gt; int" Usage="var.CompareTo obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(char obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int CompareTo(char16 obj);" />
      <MemberSignature Language="C++ WINRT" Value="int CompareTo(char obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Compares this instance with a specified value.</summary>
        <returns>
            A 32-bit signed integer indicating the lexical relationship between the two comparands.
            negative if this instance is less than obj, zero if this instance is equal to obj,
            positive if this instance is greater than obj.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (DateTime obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.DateTime obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.CompareTo(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As DateTime) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : DateTime -&gt; int&#xA;override this.CompareTo : DateTime -&gt; int" Usage="var.CompareTo obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(DateTime obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Compares this instance with a specified value.</summary>
        <returns>
            A 32-bit signed integer indicating the lexical relationship between the two comparands.
            negative if this instance is less than obj, zero if this instance is equal to obj,
            positive if this instance is greater than obj.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (decimal obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Decimal obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.CompareTo(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Decimal) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : decimal -&gt; int&#xA;override this.CompareTo : decimal -&gt; int" Usage="var.CompareTo obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Decimal obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Compares this instance with a specified value.</summary>
        <returns>
            A 32-bit signed integer indicating the lexical relationship between the two comparands.
            negative if this instance is less than obj, zero if this instance is equal to obj,
            positive if this instance is greater than obj.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (double obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(float64 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.CompareTo(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Double) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : double -&gt; int&#xA;override this.CompareTo : double -&gt; int" Usage="var.CompareTo obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(double obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int CompareTo(double obj);" />
      <MemberSignature Language="C++ WINRT" Value="int CompareTo(double obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Compares this instance with a specified value.</summary>
        <returns>
            A 32-bit signed integer indicating the lexical relationship between the two comparands.
            negative if this instance is less than obj, zero if this instance is equal to obj,
            positive if this instance is greater than obj.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (Guid obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Guid obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.CompareTo(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Guid) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : Guid -&gt; int&#xA;override this.CompareTo : Guid -&gt; int" Usage="var.CompareTo obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(Guid obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Compares this instance with a specified value.</summary>
        <returns>
            A 32-bit signed integer indicating the lexical relationship between the two comparands.
            negative if this instance is less than obj, zero if this instance is equal to obj,
            positive if this instance is greater than obj.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (short obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(int16 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.CompareTo(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Short) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : int16 -&gt; int&#xA;override this.CompareTo : int16 -&gt; int" Usage="var.CompareTo obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(short obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int CompareTo(short obj);" />
      <MemberSignature Language="C++ WINRT" Value="int CompareTo(short obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Compares this instance with a specified value.</summary>
        <returns>
            A 32-bit signed integer indicating the lexical relationship between the two comparands.
            negative if this instance is less than obj, zero if this instance is equal to obj,
            positive if this instance is greater than obj.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (int obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(int32 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.CompareTo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Integer) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : int -&gt; int&#xA;override this.CompareTo : int -&gt; int" Usage="var.CompareTo obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(int obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int CompareTo(int obj);" />
      <MemberSignature Language="C++ WINRT" Value="int CompareTo(int obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Compares this instance with a specified value.</summary>
        <returns>
            A 32-bit signed integer indicating the lexical relationship between the two comparands.
            negative if this instance is less than obj, zero if this instance is equal to obj,
            positive if this instance is greater than obj.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (long obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(int64 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.CompareTo(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Long) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : int64 -&gt; int&#xA;override this.CompareTo : int64 -&gt; int" Usage="var.CompareTo obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(long obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int CompareTo(long long obj);" />
      <MemberSignature Language="C++ WINRT" Value="int CompareTo(long obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Compares this instance with a specified value.</summary>
        <returns>
            A 32-bit signed integer indicating the lexical relationship between the two comparands.
            negative if this instance is less than obj, zero if this instance is equal to obj,
            positive if this instance is greater than obj.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (sbyte obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(int8 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.CompareTo(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As SByte) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : sbyte -&gt; int&#xA;override this.CompareTo : sbyte -&gt; int" Usage="var.CompareTo obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::SByte obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int CompareTo(SByte obj);" />
      <MemberSignature Language="C++ WINRT" Value="int CompareTo(SByte obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Compares this instance with a specified value.</summary>
        <returns>
            A 32-bit signed integer indicating the lexical relationship between the two comparands.
            negative if this instance is less than obj, zero if this instance is equal to obj,
            positive if this instance is greater than obj.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (float obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(float32 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.CompareTo(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Single) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : single -&gt; int&#xA;override this.CompareTo : single -&gt; int" Usage="var.CompareTo obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(float obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int CompareTo(float obj);" />
      <MemberSignature Language="C++ WINRT" Value="int CompareTo(float obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Compares this instance with a specified value.</summary>
        <returns>
            A 32-bit signed integer indicating the lexical relationship between the two comparands.
            negative if this instance is less than obj, zero if this instance is equal to obj,
            positive if this instance is greater than obj.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (string obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(string obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.CompareTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As String) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : string -&gt; int&#xA;override this.CompareTo : string -&gt; int" Usage="var.CompareTo obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::String ^ obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int CompareTo(Platform::String ^ obj);" />
      <MemberSignature Language="C++ WINRT" Value="int CompareTo(std::wstring const &amp; obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Compares this instance with a specified value.</summary>
        <returns>
            A 32-bit signed integer indicating the lexical relationship between the two comparands.
            negative if this instance is less than obj, zero if this instance is equal to obj,
            positive if this instance is greater than obj.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (ushort obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(unsigned int16 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.CompareTo(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As UShort) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : uint16 -&gt; int&#xA;override this.CompareTo : uint16 -&gt; int" Usage="var.CompareTo obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::UInt16 obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int CompareTo(unsigned short obj);" />
      <MemberSignature Language="C++ WINRT" Value="int CompareTo(unsigned short obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Compares this instance with a specified value.</summary>
        <returns>
            A 32-bit signed integer indicating the lexical relationship between the two comparands.
            negative if this instance is less than obj, zero if this instance is equal to obj,
            positive if this instance is greater than obj.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (uint obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(unsigned int32 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.CompareTo(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As UInteger) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : uint32 -&gt; int&#xA;override this.CompareTo : uint32 -&gt; int" Usage="var.CompareTo obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::UInt32 obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int CompareTo(unsigned int obj);" />
      <MemberSignature Language="C++ WINRT" Value="int CompareTo(unsigned int obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Compares this instance with a specified value.</summary>
        <returns>
            A 32-bit signed integer indicating the lexical relationship between the two comparands.
            negative if this instance is less than obj, zero if this instance is equal to obj,
            positive if this instance is greater than obj.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (ulong obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(unsigned int64 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.CompareTo(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As ULong) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : uint64 -&gt; int&#xA;override this.CompareTo : uint64 -&gt; int" Usage="var.CompareTo obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::UInt64 obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int CompareTo(unsigned long long obj);" />
      <MemberSignature Language="C++ WINRT" Value="int CompareTo(unsigned long obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Compares this instance with a specified value.</summary>
        <returns>
            A 32-bit signed integer indicating the lexical relationship between the two comparands.
            negative if this instance is less than obj, zero if this instance is equal to obj,
            positive if this instance is greater than obj.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (params Microsoft.ML.Runtime.Internal.IO.Var[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(class Microsoft.ML.Runtime.Internal.IO.Var[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Concat(Microsoft.ML.Runtime.Internal.IO.Var[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (ParamArray values As Var()) As String" />
      <MemberSignature Language="F#" Value="static member Concat : Microsoft.ML.Runtime.Internal.IO.Var[] -&gt; string" Usage="Microsoft.ML.Runtime.Internal.IO.Var.Concat values" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(... cli::array &lt;Microsoft::ML::Runtime::Internal::IO::Var ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="Microsoft.ML.Runtime.Internal.IO.Var[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">An array of <see cref="T:Microsoft.ML.Runtime.Internal.IO.Var"></see> instances. </param>
        <summary>Concatenates the elements of a specified <see cref="T:Microsoft.ML.Runtime.Internal.IO.Var" /> array.</summary>
        <returns>The concatenated elements of values.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">values is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As String) As Boolean" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="var.Contains value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool Contains(Platform::String ^ value);" />
      <MemberSignature Language="C++ WINRT" Value="bool Contains(std::wstring const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.String"></see> object to seek. </param>
        <summary>Returns a value indicating whether the specified <see cref="T:System.String" /> object occurs within this string.</summary>
        <returns>true if the value parameter occurs within this string, or if value is the empty string (""); otherwise, false.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public static string[] Convert (Microsoft.ML.Runtime.Internal.IO.Var[] vals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Convert(class Microsoft.ML.Runtime.Internal.IO.Var[] vals) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Convert(Microsoft.ML.Runtime.Internal.IO.Var[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Convert (vals As Var()) As String()" />
      <MemberSignature Language="F#" Value="static member Convert : Microsoft.ML.Runtime.Internal.IO.Var[] -&gt; string[]" Usage="Microsoft.ML.Runtime.Internal.IO.Var.Convert vals" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ Convert(cli::array &lt;Microsoft::ML::Runtime::Internal::IO::Var ^&gt; ^ vals);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vals" Type="Microsoft.ML.Runtime.Internal.IO.Var[]" />
      </Parameters>
      <Docs>
        <param name="vals">the array to convert</param>
        <summary>
            Convert an array of values.
            </summary>
        <returns>the converted array</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Internal.IO.Var[] Convert (string[] vals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Internal.IO.Var[] Convert(string[] vals) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Convert(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Convert (vals As String()) As Var()" />
      <MemberSignature Language="F#" Value="static member Convert : string[] -&gt; Microsoft.ML.Runtime.Internal.IO.Var[]" Usage="Microsoft.ML.Runtime.Internal.IO.Var.Convert vals" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Microsoft::ML::Runtime::Internal::IO::Var ^&gt; ^ Convert(cli::array &lt;System::String ^&gt; ^ vals);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.IO.Var[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vals" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="vals">the array to convert</param>
        <summary>
            Convert an array of values.
            </summary>
        <returns>the converted array</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (int sourceIndex, char[] destination, int destinationIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(int32 sourceIndex, char[] destination, int32 destinationIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (sourceIndex As Integer, destination As Char(), destinationIndex As Integer, count As Integer)" />
      <MemberSignature Language="F#" Value="member this.CopyTo : int * char[] * int * int -&gt; unit" Usage="var.CopyTo (sourceIndex, destination, destinationIndex, count)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(int sourceIndex, cli::array &lt;char&gt; ^ destination, int destinationIndex, int count);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void CopyTo(int sourceIndex, Platform::Array &lt;char16&gt; ^ destination, int destinationIndex, int count);" />
      <MemberSignature Language="C++ WINRT" Value="void CopyTo(int sourceIndex, std::Array &lt;char&gt; const &amp; destination, int destinationIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.Char[]" />
        <Parameter Name="destinationIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceIndex">A character position in this instance. </param>
        <param name="destination">An array of Unicode characters. </param>
        <param name="destinationIndex">An array element in destination. </param>
        <param name="count">The number of characters in this instance to copy to destination. </param>
        <summary>Copies a specified number of characters from a specified position in this instance to a specified position in an array of Unicode characters.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">destination is null. </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">sourceIndex, destinationIndex, or count is negative -or- count is greater than the length of the substring from startIndex to the end of this instance -or- count is greater than the length of the subarray from destinationIndex to the end of destination</exception>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public bool EndsWith (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EndsWith(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.EndsWith(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndsWith (value As String) As Boolean" />
      <MemberSignature Language="F#" Value="member this.EndsWith : string -&gt; bool" Usage="var.EndsWith value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndsWith(System::String ^ value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool EndsWith(Platform::String ^ value);" />
      <MemberSignature Language="C++ WINRT" Value="bool EndsWith(std::wstring const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.String"></see> to compare to. </param>
        <summary>Determines whether the end of this instance matches the specified string.</summary>
        <returns>true if value matches the end of this instance; otherwise, false.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public bool EndsWith (string value, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EndsWith(string value, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.EndsWith(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndsWith (value As String, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="F#" Value="member this.EndsWith : string * StringComparison -&gt; bool" Usage="var.EndsWith (value, comparisonType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndsWith(System::String ^ value, StringComparison comparisonType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.String"></see> object to compare to. </param>
        <param name="comparisonType">One of the <see cref="T:System.StringComparison"></see> values that determines how this string and value are compared. </param>
        <summary>Determines whether the end of this string matches the specified string when compared using the specified comparison option.</summary>
        <returns>true if the value parameter matches the end of this string; otherwise, false.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">comparisonType is not a <see cref="T:System.StringComparison"></see> value.</exception>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public bool EndsWith (string value, bool ignoreCase, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EndsWith(string value, bool ignoreCase, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.EndsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndsWith (value As String, ignoreCase As Boolean, culture As CultureInfo) As Boolean" />
      <MemberSignature Language="F#" Value="member this.EndsWith : string * bool * System.Globalization.CultureInfo -&gt; bool" Usage="var.EndsWith (value, ignoreCase, culture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndsWith(System::String ^ value, bool ignoreCase, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.String"></see> object to compare to. </param>
        <param name="ignoreCase">true to ignore case when comparing this instance and value; otherwise, false.</param>
        <param name="culture">Cultural information that determines how this instance and value are compared. If culture is null, the current culture is used.</param>
        <summary>Determines whether the end of this string matches the specified string when compared using the specified culture.</summary>
        <returns>true if the value parameter matches the end of this string; otherwise, false.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.ML.Runtime.Internal.IO.Var obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Microsoft.ML.Runtime.Internal.IO.Var obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Equals(Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Var) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="var.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Microsoft::ML::Runtime::Internal::IO::Var ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Determines whether this instance and a specified value are the same.</summary>
        <returns>true if obj is the same as this instance; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (byte obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(unsigned int8 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Equals(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Byte) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : byte -&gt; bool" Usage="var.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Byte obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool Equals(byte obj);" />
      <MemberSignature Language="C++ WINRT" Value="bool Equals(byte obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Determines whether this instance and a specified value are the same.</summary>
        <returns>true if obj is the same as this instance; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (char obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(char obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Equals(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Char) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : char -&gt; bool" Usage="var.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(char obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool Equals(char16 obj);" />
      <MemberSignature Language="C++ WINRT" Value="bool Equals(char obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Determines whether this instance and a specified value are the same.</summary>
        <returns>true if obj is the same as this instance; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (DateTime obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.DateTime obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Equals(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As DateTime) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : DateTime -&gt; bool" Usage="var.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(DateTime obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Determines whether this instance and a specified value are the same.</summary>
        <returns>true if obj is the same as this instance; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (decimal obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Decimal obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Equals(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Decimal) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : decimal -&gt; bool" Usage="var.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Decimal obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Determines whether this instance and a specified value are the same.</summary>
        <returns>true if obj is the same as this instance; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (double obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(float64 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Equals(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Double) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : double -&gt; bool" Usage="var.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(double obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool Equals(double obj);" />
      <MemberSignature Language="C++ WINRT" Value="bool Equals(double obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Determines whether this instance and a specified value are the same.</summary>
        <returns>true if obj is the same as this instance; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Guid obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Guid obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Equals(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Guid) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Guid -&gt; bool" Usage="var.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Guid obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Determines whether this instance and a specified value are the same.</summary>
        <returns>true if obj is the same as this instance; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (short obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(int16 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Equals(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Short) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : int16 -&gt; bool" Usage="var.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(short obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool Equals(short obj);" />
      <MemberSignature Language="C++ WINRT" Value="bool Equals(short obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Determines whether this instance and a specified value are the same.</summary>
        <returns>true if obj is the same as this instance; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (int obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(int32 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Equals(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Integer) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : int -&gt; bool" Usage="var.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(int obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool Equals(int obj);" />
      <MemberSignature Language="C++ WINRT" Value="bool Equals(int obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Determines whether this instance and a specified value are the same.</summary>
        <returns>true if obj is the same as this instance; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (long obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(int64 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Equals(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Long) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : int64 -&gt; bool" Usage="var.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(long obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool Equals(long long obj);" />
      <MemberSignature Language="C++ WINRT" Value="bool Equals(long obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Determines whether this instance and a specified value are the same.</summary>
        <returns>true if obj is the same as this instance; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="var.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override bool Equals(Platform::Object ^ obj);" />
      <MemberSignature Language="C++ WINRT" Value=" override bool Equals(winrt::Windows::Foundation::IInspectable const &amp; obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Determines whether this instance and a specified value are the same.</summary>
        <returns>true if obj is the same as this instance; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (sbyte obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(int8 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Equals(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As SByte) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : sbyte -&gt; bool" Usage="var.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::SByte obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool Equals(SByte obj);" />
      <MemberSignature Language="C++ WINRT" Value="bool Equals(SByte obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Determines whether this instance and a specified value are the same.</summary>
        <returns>true if obj is the same as this instance; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (float obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(float32 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Equals(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Single) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : single -&gt; bool" Usage="var.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(float obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool Equals(float obj);" />
      <MemberSignature Language="C++ WINRT" Value="bool Equals(float obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Determines whether this instance and a specified value are the same.</summary>
        <returns>true if obj is the same as this instance; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (string obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(string obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Equals(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As String) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : string -&gt; bool" Usage="var.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::String ^ obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool Equals(Platform::String ^ obj);" />
      <MemberSignature Language="C++ WINRT" Value="bool Equals(std::wstring const &amp; obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Determines whether this instance and a specified value are the same.</summary>
        <returns>true if obj is the same as this instance; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ushort obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(unsigned int16 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Equals(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As UShort) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : uint16 -&gt; bool" Usage="var.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::UInt16 obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool Equals(unsigned short obj);" />
      <MemberSignature Language="C++ WINRT" Value="bool Equals(unsigned short obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Determines whether this instance and a specified value are the same.</summary>
        <returns>true if obj is the same as this instance; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (uint obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(unsigned int32 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Equals(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As UInteger) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : uint32 -&gt; bool" Usage="var.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::UInt32 obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool Equals(unsigned int obj);" />
      <MemberSignature Language="C++ WINRT" Value="bool Equals(unsigned int obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Determines whether this instance and a specified value are the same.</summary>
        <returns>true if obj is the same as this instance; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ulong obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(unsigned int64 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Equals(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As ULong) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : uint64 -&gt; bool" Usage="var.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::UInt64 obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool Equals(unsigned long long obj);" />
      <MemberSignature Language="C++ WINRT" Value="bool Equals(unsigned long obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="obj">the value to compare to</param>
        <summary>Determines whether this instance and a specified value are the same.</summary>
        <returns>true if obj is the same as this instance; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (string value, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(string value, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Equals(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As String, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : string * StringComparison -&gt; bool" Usage="var.Equals (value, comparisonType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::String ^ value, StringComparison comparisonType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.String"></see> object.</param>
        <param name="comparisonType">One of the <see cref="T:System.StringComparison"></see> values. </param>
        <summary>Determines whether this string and a specified <see cref="T:System.String" /> object have the same value. A parameter specifies the culture, case, and sort rules used in the comparison.</summary>
        <returns>true if the value of the value parameter is the same as this string; otherwise, false.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">This string is null. </exception>
        <exception cref="T:System.ArgumentException">comparisonType is not a <see cref="T:System.StringComparison"></see> value. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public CharEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CharEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As CharEnumerator" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; CharEnumerator" Usage="var.GetEnumerator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CharEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CharEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves an object that can iterate through the individual characters in this string.</summary>
        <returns>A <see cref="T:System.CharEnumerator"></see> object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="var.GetHashCode " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="C++ WINRT" Value=" override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hash code for this value.</summary>
        <returns>A 32-bit signed integer hash code.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.IndexOf(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Char) As Integer" />
      <MemberSignature Language="F#" Value="member this.IndexOf : char -&gt; int" Usage="var.IndexOf value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(char value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int IndexOf(char16 value);" />
      <MemberSignature Language="C++ WINRT" Value="int IndexOf(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">A Unicode character to seek. </param>
        <summary>Reports the index of the first occurrence of the specified Unicode character in this string.</summary>
        <returns>The index position of value if that character is found, or -1 if it is not.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.IndexOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As String) As Integer" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string -&gt; int" Usage="var.IndexOf value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int IndexOf(Platform::String ^ value);" />
      <MemberSignature Language="C++ WINRT" Value="int IndexOf(std::wstring const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.String"></see> to seek. </param>
        <summary>Reports the index of the first occurrence of the specified <see cref="T:System.String" /> in this instance.</summary>
        <returns>The index position of value if that string is found, or -1 if it is not. If value is <see cref="F:System.String.Empty"></see>, the return value is 0.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (char value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(char value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.IndexOf(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Char, startIndex As Integer) As Integer" />
      <MemberSignature Language="F#" Value="member this.IndexOf : char * int -&gt; int" Usage="var.IndexOf (value, startIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(char value, int startIndex);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int IndexOf(char16 value, int startIndex);" />
      <MemberSignature Language="C++ WINRT" Value="int IndexOf(char value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">A Unicode character to seek. </param>
        <param name="startIndex">The search starting position. </param>
        <summary>Reports the index of the first occurrence of the specified Unicode character in this string. The search starts at a specified character position.</summary>
        <returns>The index position of value if that character is found, or -1 if it is not.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">startIndex is less than zero or specifies a position beyond the end of this instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.IndexOf(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string * int -&gt; int" Usage="var.IndexOf (value, startIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ value, int startIndex);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int IndexOf(Platform::String ^ value, int startIndex);" />
      <MemberSignature Language="C++ WINRT" Value="int IndexOf(std::wstring const &amp; value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.String"></see> to seek. </param>
        <param name="startIndex">The search starting position. </param>
        <summary>Reports the index of the first occurrence of the specified <see cref="T:System.String" /> in this instance. The search starts at a specified character position.</summary>
        <returns>The index position of value if that string is found, or -1 if it is not. If value is <see cref="F:System.String.Empty"></see>, the return value is startIndex.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">startIndex is negative.-or- startIndex specifies a position not within this instance. </exception>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string value, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string value, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.IndexOf(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As String, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string * StringComparison -&gt; int" Usage="var.IndexOf (value, comparisonType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ value, StringComparison comparisonType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.String"></see> object to seek. </param>
        <param name="comparisonType">One of the <see cref="T:System.StringComparison"></see> values. </param>
        <summary>Reports the index of the first occurrence of the specified string in the current <see cref="T:System.String" /> object. A parameter specifies the type of search to use for the specified string.</summary>
        <returns>The index position of the value parameter if that string is found, or -1 if it is not. If value is <see cref="F:System.String.Empty"></see>, the return value is 0.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">comparisonType is not a valid <see cref="T:System.StringComparison"></see> value.</exception>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (char value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(char value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.IndexOf(System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Char, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="F#" Value="member this.IndexOf : char * int * int -&gt; int" Usage="var.IndexOf (value, startIndex, count)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(char value, int startIndex, int count);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int IndexOf(char16 value, int startIndex, int count);" />
      <MemberSignature Language="C++ WINRT" Value="int IndexOf(char value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">A Unicode character to seek. </param>
        <param name="startIndex">The search starting position. </param>
        <param name="count">The number of character positions to examine. </param>
        <summary>Reports the index of the first occurrence of the specified character in this instance. The search starts at a specified character position and examines a specified number of character positions.</summary>
        <returns>The index position of value if that character is found, or -1 if it is not.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">count or startIndex is negative.-or- count + startIndex specifies a position beyond the end of this instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.IndexOf(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As String, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string * int * int -&gt; int" Usage="var.IndexOf (value, startIndex, count)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int IndexOf(Platform::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="C++ WINRT" Value="int IndexOf(std::wstring const &amp; value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.String"></see> to seek. </param>
        <param name="startIndex">The search starting position. </param>
        <param name="count">The number of character positions to examine. </param>
        <summary>Reports the index of the first occurrence of the specified <see cref="T:System.String" /> in this instance. The search starts at a specified character position and examines a specified number of character positions.</summary>
        <returns>The index position of value if that string is found, or -1 if it is not. If value is <see cref="F:System.String.Empty"></see>, the return value is startIndex.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">count or startIndex is negative.-or- count plus startIndex specify a position not within this instance. </exception>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string value, int startIndex, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string value, int32 startIndex, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.IndexOf(System.String,System.Int32,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As String, startIndex As Integer, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string * int * StringComparison -&gt; int" Usage="var.IndexOf (value, startIndex, comparisonType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ value, int startIndex, StringComparison comparisonType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.String"></see> object to seek. </param>
        <param name="startIndex">The search starting position. </param>
        <param name="comparisonType">One of the <see cref="T:System.StringComparison"></see> values. </param>
        <summary>Reports the index of the first occurrence of the specified string in the current <see cref="T:System.String" /> object. Parameters specify the starting search position in the current string and the type of search to use for the specified string.</summary>
        <returns>The index position of the value parameter if that string is found, or -1 if it is not. If value is <see cref="F:System.String.Empty"></see>, the return value is 0.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">startIndex is negative, or specifies a position that is not within this instance. </exception>
        <exception cref="T:System.ArgumentException">comparisonType is not a valid <see cref="T:System.StringComparison"></see> value.</exception>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string value, int startIndex, int count, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string value, int32 startIndex, int32 count, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As String, startIndex As Integer, count As Integer, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string * int * int * StringComparison -&gt; int" Usage="var.IndexOf (value, startIndex, count, comparisonType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ value, int startIndex, int count, StringComparison comparisonType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.String"></see> object to seek. </param>
        <param name="startIndex">The search starting position. </param>
        <param name="count">The number of character positions to examine. </param>
        <param name="comparisonType">One of the <see cref="T:System.StringComparison"></see> values. </param>
        <summary>Reports the index of the first occurrence of the specified string in the current <see cref="T:System.String" /> object. Parameters specify the starting search position in the current string, the number of characters in the current string to search, and the type of search to use for the specified string.</summary>
        <returns>The index position of the value parameter if that string is found, or -1 if it is not. If value is <see cref="F:System.String.Empty"></see>, the return value is 0.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">count or startIndex is negative.-or- count plus startIndex specify a position that is not within this instance. </exception>
        <exception cref="T:System.ArgumentException">comparisonType is not a valid <see cref="T:System.StringComparison"></see> value.</exception>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public int IndexOfAny (char[] anyOf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfAny(char[] anyOf) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.IndexOfAny(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfAny (anyOf As Char()) As Integer" />
      <MemberSignature Language="F#" Value="member this.IndexOfAny : char[] -&gt; int" Usage="var.IndexOfAny anyOf" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfAny(cli::array &lt;char&gt; ^ anyOf);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int IndexOfAny(Platform::Array &lt;char16&gt; ^ anyOf);" />
      <MemberSignature Language="C++ WINRT" Value="int IndexOfAny(std::Array &lt;char&gt; const &amp; anyOf);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="anyOf">A Unicode character array containing one or more characters to seek. </param>
        <summary>Reports the index of the first occurrence in this instance of any character in a specified array of Unicode characters.</summary>
        <returns>The index position of the first occurrence in this instance where any character in anyOf was found; otherwise, -1 if no character in anyOf was found.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">anyOf is null. </exception>
        <filterpriority>2</filterpriority>
      </Docs>
    </Member>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public int IndexOfAny (char[] anyOf, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfAny(char[] anyOf, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.IndexOfAny(System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfAny (anyOf As Char(), startIndex As Integer) As Integer" />
      <MemberSignature Language="F#" Value="member this.IndexOfAny : char[] * int -&gt; int" Usage="var.IndexOfAny (anyOf, startIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfAny(cli::array &lt;char&gt; ^ anyOf, int startIndex);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int IndexOfAny(Platform::Array &lt;char16&gt; ^ anyOf, int startIndex);" />
      <MemberSignature Language="C++ WINRT" Value="int IndexOfAny(std::Array &lt;char&gt; const &amp; anyOf, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="anyOf">A Unicode character array containing one or more characters to seek. </param>
        <param name="startIndex">The search starting position. </param>
        <summary>Reports the index of the first occurrence in this instance of any character in a specified array of Unicode characters. The search starts at a specified character position.</summary>
        <returns>The index position of the first occurrence in this instance where any character in anyOf was found; otherwise, -1 if no character in anyOf was found.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">startIndex is negative.-or- startIndex is greater than the number of characters in this instance. </exception>
        <exception cref="T:System.ArgumentNullException">anyOf is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public int IndexOfAny (char[] anyOf, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfAny(char[] anyOf, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.IndexOfAny(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfAny (anyOf As Char(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="F#" Value="member this.IndexOfAny : char[] * int * int -&gt; int" Usage="var.IndexOfAny (anyOf, startIndex, count)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfAny(cli::array &lt;char&gt; ^ anyOf, int startIndex, int count);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int IndexOfAny(Platform::Array &lt;char16&gt; ^ anyOf, int startIndex, int count);" />
      <MemberSignature Language="C++ WINRT" Value="int IndexOfAny(std::Array &lt;char&gt; const &amp; anyOf, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="anyOf">A Unicode character array containing one or more characters to seek. </param>
        <param name="startIndex">The search starting position. </param>
        <param name="count">The number of character positions to examine. </param>
        <summary>Reports the index of the first occurrence in this instance of any character in a specified array of Unicode characters. The search starts at a specified character position and examines a specified number of character positions.</summary>
        <returns>The index position of the first occurrence in this instance where any character in anyOf was found; otherwise, -1 if no character in anyOf was found.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">count or startIndex is negative.-or- count + startIndex is greater than the number of characters in this instance. </exception>
        <exception cref="T:System.ArgumentNullException">anyOf is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public string Insert (int startIndex, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Insert(int32 startIndex, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Insert(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (startIndex As Integer, value As String) As String" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string -&gt; string" Usage="var.Insert (startIndex, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Insert(int startIndex, System::String ^ value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::String ^ Insert(int startIndex, Platform::String ^ value);" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring Insert(int startIndex, std::wstring const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="startIndex">The index position of the insertion. </param>
        <param name="value">The <see cref="T:System.String"></see> to insert. </param>
        <summary>Inserts a specified instance of <see cref="T:System.String" /> at a specified index position in this instance.</summary>
        <returns>A new <see cref="T:System.String"></see> equivalent to this instance but with value inserted at position startIndex.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">startIndex is negative or greater than the length of this instance. </exception>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="IsNormalized">
      <MemberSignature Language="C#" Value="public bool IsNormalized ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNormalized() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.IsNormalized" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNormalized () As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsNormalized : unit -&gt; bool" Usage="var.IsNormalized " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNormalized();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool IsNormalized();" />
      <MemberSignature Language="C++ WINRT" Value="bool IsNormalized();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether this string is in Unicode normalization form C.</summary>
        <returns>true if this string is in normalization form C; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNormalized">
      <MemberSignature Language="C#" Value="public bool IsNormalized (System.Text.NormalizationForm normalizationForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNormalized(valuetype System.Text.NormalizationForm normalizationForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.IsNormalized(System.Text.NormalizationForm)" />
      <MemberSignature Language="F#" Value="member this.IsNormalized : System.Text.NormalizationForm -&gt; bool" Usage="var.IsNormalized normalizationForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNormalized(System::Text::NormalizationForm normalizationForm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizationForm" Type="System.Text.NormalizationForm" />
      </Parameters>
      <Docs>
        <param name="normalizationForm">A Unicode normalization form. </param>
        <summary>Indicates whether this string is in the specified Unicode normalization form.</summary>
        <returns>true if this string is in the normalization form specified by the normalizationForm parameter; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public char this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Internal.IO.Var.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Char" />
      <MemberSignature Language="F#" Value="member this.Item(int) : char" Usage="Microsoft.ML.Runtime.Internal.IO.Var.Item" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char default[int] { char get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">A character position in this instance. </param>
        <summary>Gets the character at a specified character position in this instance.</summary>
        <value>A Unicode character.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">index is greater than or equal to the length of this object or less than zero. </exception>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (string separator, Microsoft.ML.Runtime.Internal.IO.Var[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(string separator, class Microsoft.ML.Runtime.Internal.IO.Var[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Join(System.String,Microsoft.ML.Runtime.Internal.IO.Var[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (separator As String, value As Var()) As String" />
      <MemberSignature Language="F#" Value="static member Join : string * Microsoft.ML.Runtime.Internal.IO.Var[] -&gt; string" Usage="Microsoft.ML.Runtime.Internal.IO.Var.Join (separator, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(System::String ^ separator, cli::array &lt;Microsoft::ML::Runtime::Internal::IO::Var ^&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String" />
        <Parameter Name="value" Type="Microsoft.ML.Runtime.Internal.IO.Var[]" />
      </Parameters>
      <Docs>
        <param name="separator">A <see cref="T:System.String"></see>. </param>
        <param name="value">An array of <see cref="T:Microsoft.ML.Runtime.Internal.IO.Var"></see>. </param>
        <summary>Concatenates a specified separator <see cref="T:System.String" /> between each element of a specified <see cref="T:Microsoft.ML.Runtime.Internal.IO.Var" /> array, yielding a single concatenated string.</summary>
        <returns>A <see cref="T:System.String"></see> consisting of the elements of value interspersed with the separator string.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (string separator, Microsoft.ML.Runtime.Internal.IO.Var[] value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(string separator, class Microsoft.ML.Runtime.Internal.IO.Var[] value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Join(System.String,Microsoft.ML.Runtime.Internal.IO.Var[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (separator As String, value As Var(), startIndex As Integer, count As Integer) As String" />
      <MemberSignature Language="F#" Value="static member Join : string * Microsoft.ML.Runtime.Internal.IO.Var[] * int * int -&gt; string" Usage="Microsoft.ML.Runtime.Internal.IO.Var.Join (separator, value, startIndex, count)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(System::String ^ separator, cli::array &lt;Microsoft::ML::Runtime::Internal::IO::Var ^&gt; ^ value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String" />
        <Parameter Name="value" Type="Microsoft.ML.Runtime.Internal.IO.Var[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="separator">A <see cref="T:System.String"></see>. </param>
        <param name="value">An array of <see cref="T:Microsoft.ML.Runtime.Internal.IO.Var"></see>. </param>
        <param name="startIndex">The first array element in value to use. </param>
        <param name="count">The number of elements of value to use. </param>
        <summary>Concatenates a specified separator <see cref="T:System.String" /> between each element of a specified <see cref="T:Microsoft.ML.Runtime.Internal.IO.Var" /> array, yielding a single concatenated string. Parameters specify the first array element and number of elements to use.</summary>
        <returns>A <see cref="T:System.String"></see> object consisting of the strings in value joined by separator. Or, <see cref="F:System.String.Empty"></see> if count is zero, value has no elements, or separator and all the elements of value are <see cref="F:System.String.Empty"></see>.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">startIndex or count is less than 0.-or- startIndex plus count is greater than the number of elements in value. </exception>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.LastIndexOf(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As Char) As Integer" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : char -&gt; int" Usage="var.LastIndexOf value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(char value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int LastIndexOf(char16 value);" />
      <MemberSignature Language="C++ WINRT" Value="int LastIndexOf(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">A Unicode character to seek. </param>
        <summary>Reports the index position of the last occurrence of a specified Unicode character within this instance.</summary>
        <returns>The index position of value if that character is found, or -1 if it is not.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.LastIndexOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As String) As Integer" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : string -&gt; int" Usage="var.LastIndexOf value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(System::String ^ value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int LastIndexOf(Platform::String ^ value);" />
      <MemberSignature Language="C++ WINRT" Value="int LastIndexOf(std::wstring const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.String"></see> to seek. </param>
        <summary>Reports the index position of the last occurrence of a specified <see cref="T:System.String" /> within this instance.</summary>
        <returns>The index position of value if that string is found, or -1 if it is not. If value is <see cref="F:System.String.Empty"></see>, the return value is the last index position in value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (char value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(char value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.LastIndexOf(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As Char, startIndex As Integer) As Integer" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : char * int -&gt; int" Usage="var.LastIndexOf (value, startIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(char value, int startIndex);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int LastIndexOf(char16 value, int startIndex);" />
      <MemberSignature Language="C++ WINRT" Value="int LastIndexOf(char value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">A Unicode character to seek. </param>
        <param name="startIndex">The starting position of a substring within this instance. </param>
        <summary>Reports the index position of the last occurrence of a specified Unicode character within this instance. The search starts at a specified character position.</summary>
        <returns>The index position of value if that character is found, or -1 if it is not.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">startIndex is less than zero or greater than the length of this instance. </exception>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (string value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(string value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.LastIndexOf(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : string * int -&gt; int" Usage="var.LastIndexOf (value, startIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(System::String ^ value, int startIndex);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int LastIndexOf(Platform::String ^ value, int startIndex);" />
      <MemberSignature Language="C++ WINRT" Value="int LastIndexOf(std::wstring const &amp; value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.String"></see> to seek. </param>
        <param name="startIndex">The search starting position. </param>
        <summary>Reports the index position of the last occurrence of a specified <see cref="T:System.String" /> within this instance. The search starts at a specified character position.</summary>
        <returns>The index position of value if that string is found, or -1 if it is not. If value is <see cref="F:System.String.Empty"></see>, the return value is startIndex.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">startIndex is less than zero or specifies a position not within this instance. </exception>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (string value, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(string value, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.LastIndexOf(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As String, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : string * StringComparison -&gt; int" Usage="var.LastIndexOf (value, comparisonType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(System::String ^ value, StringComparison comparisonType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.String"></see> object to seek. </param>
        <param name="comparisonType">One of the <see cref="T:System.StringComparison"></see> values. </param>
        <summary>Reports the index of the last occurrence of a specified string within the current <see cref="T:System.String" /> object. A parameter specifies the type of search to use for the specified string.</summary>
        <returns>The index position of the value parameter if that string is found, or -1 if it is not. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">comparisonType is not a valid <see cref="T:System.StringComparison"></see> value.</exception>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (char value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(char value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.LastIndexOf(System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As Char, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : char * int * int -&gt; int" Usage="var.LastIndexOf (value, startIndex, count)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(char value, int startIndex, int count);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int LastIndexOf(char16 value, int startIndex, int count);" />
      <MemberSignature Language="C++ WINRT" Value="int LastIndexOf(char value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">A Unicode character to seek. </param>
        <param name="startIndex">The starting position of a substring within this instance. </param>
        <param name="count">The number of character positions to examine. </param>
        <summary>Reports the index position of the last occurrence of the specified Unicode character in a substring within this instance. The search starts at a specified character position and examines a specified number of character positions.</summary>
        <returns>The index position of value if that character is found, or -1 if it is not.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">startIndex or count is less than zero or greater than the length of this instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.LastIndexOf(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As String, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : string * int * int -&gt; int" Usage="var.LastIndexOf (value, startIndex, count)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(System::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int LastIndexOf(Platform::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="C++ WINRT" Value="int LastIndexOf(std::wstring const &amp; value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.String"></see> to seek. </param>
        <param name="startIndex">The search starting position. </param>
        <param name="count">The number of character positions to examine. </param>
        <summary>Reports the index position of the last occurrence of a specified <see cref="T:System.String" /> within this instance. The search starts at a specified character position and examines a specified number of character positions.</summary>
        <returns>The index position of value if that string is found, or -1 if it is not. If value is <see cref="F:System.String.Empty"></see>, the return value is startIndex.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">count or startIndex is negative.-or- count plus startIndex specify a position not within this instance. </exception>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (string value, int startIndex, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(string value, int32 startIndex, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.LastIndexOf(System.String,System.Int32,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As String, startIndex As Integer, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : string * int * StringComparison -&gt; int" Usage="var.LastIndexOf (value, startIndex, comparisonType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(System::String ^ value, int startIndex, StringComparison comparisonType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.String"></see> object to seek. </param>
        <param name="startIndex">The search starting position. </param>
        <param name="comparisonType">One of the <see cref="T:System.StringComparison"></see> values. </param>
        <summary>Reports the index of the last occurrence of a specified string within the current <see cref="T:System.String" /> object. Parameters specify the starting search position in the current string, and type of search to use for the specified string.</summary>
        <returns>The index position of the value parameter if that string is found, or -1 if it is not. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">startIndex is less than zero or specifies a position that is not within this instance. </exception>
        <exception cref="T:System.ArgumentException">comparisonType is not a valid <see cref="T:System.StringComparison"></see> value.</exception>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (string value, int startIndex, int count, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(string value, int32 startIndex, int32 count, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As String, startIndex As Integer, count As Integer, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : string * int * int * StringComparison -&gt; int" Usage="var.LastIndexOf (value, startIndex, count, comparisonType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(System::String ^ value, int startIndex, int count, StringComparison comparisonType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.String"></see> object to seek. </param>
        <param name="startIndex">The search starting position. </param>
        <param name="count">The number of character positions to examine. </param>
        <param name="comparisonType">One of the <see cref="T:System.StringComparison"></see> values. </param>
        <summary>Reports the index position of the last occurrence of a specified <see cref="T:System.String" /> object within this instance. Parameters specify the starting search position in the current string, the number of characters in the current string to search, and the type of search to use for the specified string.</summary>
        <returns>The index position of the value parameter if that string is found, or -1 if it is not. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">count or startIndex is negative.-or- count plus startIndex specify a position that is not within this instance. </exception>
        <exception cref="T:System.ArgumentException">comparisonType is not a valid <see cref="T:System.StringComparison"></see> value.</exception>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOfAny">
      <MemberSignature Language="C#" Value="public int LastIndexOfAny (char[] anyOf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOfAny(char[] anyOf) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.LastIndexOfAny(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOfAny (anyOf As Char()) As Integer" />
      <MemberSignature Language="F#" Value="member this.LastIndexOfAny : char[] -&gt; int" Usage="var.LastIndexOfAny anyOf" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOfAny(cli::array &lt;char&gt; ^ anyOf);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int LastIndexOfAny(Platform::Array &lt;char16&gt; ^ anyOf);" />
      <MemberSignature Language="C++ WINRT" Value="int LastIndexOfAny(std::Array &lt;char&gt; const &amp; anyOf);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="anyOf">A Unicode character array containing one or more characters to seek. </param>
        <summary>Reports the index position of the last occurrence in this instance of one or more characters specified in a Unicode array.</summary>
        <returns>The index position of the last occurrence in this instance where any character in anyOf was found; otherwise, -1 if no character in anyOf was found.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">anyOf is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOfAny">
      <MemberSignature Language="C#" Value="public int LastIndexOfAny (char[] anyOf, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOfAny(char[] anyOf, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.LastIndexOfAny(System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOfAny (anyOf As Char(), startIndex As Integer) As Integer" />
      <MemberSignature Language="F#" Value="member this.LastIndexOfAny : char[] * int -&gt; int" Usage="var.LastIndexOfAny (anyOf, startIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOfAny(cli::array &lt;char&gt; ^ anyOf, int startIndex);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int LastIndexOfAny(Platform::Array &lt;char16&gt; ^ anyOf, int startIndex);" />
      <MemberSignature Language="C++ WINRT" Value="int LastIndexOfAny(std::Array &lt;char&gt; const &amp; anyOf, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="anyOf">A Unicode character array containing one or more characters to seek. </param>
        <param name="startIndex">The search starting position. </param>
        <summary>Reports the index position of the last occurrence in this instance of one or more characters specified in a Unicode array. The search starts at a specified character position.</summary>
        <returns>The index position of the last occurrence in this instance where any character in anyOf was found; otherwise, -1 if no character in anyOf was found.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">startIndex specifies a position not within this instance. </exception>
        <exception cref="T:System.ArgumentNullException">anyOf is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOfAny">
      <MemberSignature Language="C#" Value="public int LastIndexOfAny (char[] anyOf, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOfAny(char[] anyOf, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.LastIndexOfAny(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOfAny (anyOf As Char(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="F#" Value="member this.LastIndexOfAny : char[] * int * int -&gt; int" Usage="var.LastIndexOfAny (anyOf, startIndex, count)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOfAny(cli::array &lt;char&gt; ^ anyOf, int startIndex, int count);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int LastIndexOfAny(Platform::Array &lt;char16&gt; ^ anyOf, int startIndex, int count);" />
      <MemberSignature Language="C++ WINRT" Value="int LastIndexOfAny(std::Array &lt;char&gt; const &amp; anyOf, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="anyOf">A Unicode character array containing one or more characters to seek. </param>
        <param name="startIndex">The search starting position. </param>
        <param name="count">The number of character positions to examine. </param>
        <summary>Reports the index position of the last occurrence in this instance of one or more characters specified in a Unicode array. The search starts at a specified character position and examines a specified number of character positions.</summary>
        <returns>The index position of the last occurrence in this instance where any character in anyOf was found; otherwise, -1 if no character in anyOf was found.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">count or startIndex is negative.-or- count plus startIndex specify a position not within this instance. </exception>
        <exception cref="T:System.ArgumentNullException">anyOf is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Internal.IO.Var.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="Microsoft.ML.Runtime.Internal.IO.Var.Length" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int Length { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of characters in this instance.</summary>
        <value>The number of characters in this instance.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public string Normalize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Normalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Normalize" />
      <MemberSignature Language="VB.NET" Value="Public Function Normalize () As String" />
      <MemberSignature Language="F#" Value="member this.Normalize : unit -&gt; string" Usage="var.Normalize " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Normalize();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::String ^ Normalize();" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring Normalize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new string whose textual value is the same as this string, but whose binary representation is in Unicode normalization form C.</summary>
        <returns>A new, normalized string whose textual value is the same as this string, but whose binary representation is in normalization form C.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public string Normalize (System.Text.NormalizationForm normalizationForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Normalize(valuetype System.Text.NormalizationForm normalizationForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Normalize(System.Text.NormalizationForm)" />
      <MemberSignature Language="F#" Value="member this.Normalize : System.Text.NormalizationForm -&gt; string" Usage="var.Normalize normalizationForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Normalize(System::Text::NormalizationForm normalizationForm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizationForm" Type="System.Text.NormalizationForm" />
      </Parameters>
      <Docs>
        <param name="normalizationForm">A Unicode normalization form. </param>
        <summary>Returns a new string whose textual value is the same as this string, but whose binary representation is in the specified Unicode normalization form.</summary>
        <returns>A new string whose textual value is the same as this string, but whose binary representation is in the normalization form specified by the normalizationForm parameter.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Decrement">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Internal.IO.Var operator -- (Microsoft.ML.Runtime.Internal.IO.Var v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Microsoft.ML.Runtime.Internal.IO.Var op_Decrement(class Microsoft.ML.Runtime.Internal.IO.Var v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Decrement(Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Decrement (v As Var) As Var" />
      <MemberSignature Language="F#" Value="static member op_Decrement : Microsoft.ML.Runtime.Internal.IO.Var -&gt; Microsoft.ML.Runtime.Internal.IO.Var" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Decrement v" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::ML::Runtime::Internal::IO::Var ^ operator --(Microsoft::ML::Runtime::Internal::IO::Var ^ v);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.IO.Var</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v">the value to decrement</param>
        <summary>
            Decrement the value.
            </summary>
        <returns>the decremented value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.ML.Runtime.Internal.IO.Var v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Microsoft.ML.Runtime.Internal.IO.Var v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(Microsoft.ML.Runtime.Internal.IO.Var,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Var, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.ML.Runtime.Internal.IO.Var * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.ML.Runtime.Internal.IO.Var v1, byte v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int8 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(Microsoft.ML.Runtime.Internal.IO.Var,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Var, v2 As Byte) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.ML.Runtime.Internal.IO.Var * byte -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::Byte v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.ML.Runtime.Internal.IO.Var v1, DateTime v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Microsoft.ML.Runtime.Internal.IO.Var v1, valuetype System.DateTime v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(Microsoft.ML.Runtime.Internal.IO.Var,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Var, v2 As DateTime) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.ML.Runtime.Internal.IO.Var * DateTime -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, DateTime v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.ML.Runtime.Internal.IO.Var v1, decimal v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Microsoft.ML.Runtime.Internal.IO.Var v1, valuetype System.Decimal v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(Microsoft.ML.Runtime.Internal.IO.Var,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Var, v2 As Decimal) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.ML.Runtime.Internal.IO.Var * decimal -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::Decimal v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.ML.Runtime.Internal.IO.Var v1, double v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Microsoft.ML.Runtime.Internal.IO.Var v1, float64 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(Microsoft.ML.Runtime.Internal.IO.Var,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Var, v2 As Double) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.ML.Runtime.Internal.IO.Var * double -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, double v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.ML.Runtime.Internal.IO.Var v1, Guid v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Microsoft.ML.Runtime.Internal.IO.Var v1, valuetype System.Guid v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(Microsoft.ML.Runtime.Internal.IO.Var,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Var, v2 As Guid) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.ML.Runtime.Internal.IO.Var * Guid -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, Guid v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.ML.Runtime.Internal.IO.Var v1, short v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Microsoft.ML.Runtime.Internal.IO.Var v1, int16 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(Microsoft.ML.Runtime.Internal.IO.Var,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Var, v2 As Short) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.ML.Runtime.Internal.IO.Var * int16 -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, short v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.ML.Runtime.Internal.IO.Var v1, int v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Microsoft.ML.Runtime.Internal.IO.Var v1, int32 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(Microsoft.ML.Runtime.Internal.IO.Var,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Var, v2 As Integer) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.ML.Runtime.Internal.IO.Var * int -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, int v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.ML.Runtime.Internal.IO.Var v1, long v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Microsoft.ML.Runtime.Internal.IO.Var v1, int64 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(Microsoft.ML.Runtime.Internal.IO.Var,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Var, v2 As Long) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.ML.Runtime.Internal.IO.Var * int64 -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, long v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.ML.Runtime.Internal.IO.Var v1, sbyte v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Microsoft.ML.Runtime.Internal.IO.Var v1, int8 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(Microsoft.ML.Runtime.Internal.IO.Var,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Var, v2 As SByte) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.ML.Runtime.Internal.IO.Var * sbyte -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::SByte v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.ML.Runtime.Internal.IO.Var v1, float v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Microsoft.ML.Runtime.Internal.IO.Var v1, float32 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(Microsoft.ML.Runtime.Internal.IO.Var,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Var, v2 As Single) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.ML.Runtime.Internal.IO.Var * single -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, float v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.ML.Runtime.Internal.IO.Var v1, ushort v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int16 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(Microsoft.ML.Runtime.Internal.IO.Var,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Var, v2 As UShort) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.ML.Runtime.Internal.IO.Var * uint16 -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::UInt16 v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.ML.Runtime.Internal.IO.Var v1, uint v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int32 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(Microsoft.ML.Runtime.Internal.IO.Var,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Var, v2 As UInteger) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.ML.Runtime.Internal.IO.Var * uint32 -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::UInt32 v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.ML.Runtime.Internal.IO.Var v1, ulong v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int64 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(Microsoft.ML.Runtime.Internal.IO.Var,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Var, v2 As ULong) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.ML.Runtime.Internal.IO.Var * uint64 -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::UInt64 v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (byte v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(unsigned int8 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(System.Byte,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Byte, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : byte * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Byte v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Byte" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (DateTime v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.DateTime v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(System.DateTime,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As DateTime, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : DateTime * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(DateTime v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.DateTime" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (decimal v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Decimal v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(System.Decimal,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Decimal, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : decimal * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Decimal v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Decimal" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (double v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(float64 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(System.Double,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Double, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : double * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(double v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Double" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (short v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(int16 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(System.Int16,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Short, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : int16 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(short v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int16" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (int v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(int32 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(System.Int32,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Integer, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : int * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(int v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int32" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (long v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(int64 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(System.Int64,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Long, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : int64 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(long v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int64" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (sbyte v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(int8 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(System.SByte,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As SByte, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : sbyte * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::SByte v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.SByte" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (float v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(float32 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(System.Single,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Single, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : single * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(float v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Single" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (ushort v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(unsigned int16 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(System.UInt16,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As UShort, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : uint16 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::UInt16 v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.UInt16" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (uint v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(unsigned int32 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(System.UInt32,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As UInteger, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : uint32 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::UInt32 v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.UInt32" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (ulong v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(unsigned int64 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Equality(System.UInt64,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As ULong, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : uint64 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 = v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::UInt64 v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.UInt64" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are the same.</summary>
        <returns>true if v1 is the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (Microsoft.ML.Runtime.Internal.IO.Var v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(Microsoft.ML.Runtime.Internal.IO.Var,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Var, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : Microsoft.ML.Runtime.Internal.IO.Var * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (Microsoft.ML.Runtime.Internal.IO.Var v1, byte v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int8 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(Microsoft.ML.Runtime.Internal.IO.Var,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Var, v2 As Byte) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : Microsoft.ML.Runtime.Internal.IO.Var * byte -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::Byte v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (Microsoft.ML.Runtime.Internal.IO.Var v1, DateTime v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, valuetype System.DateTime v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(Microsoft.ML.Runtime.Internal.IO.Var,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Var, v2 As DateTime) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : Microsoft.ML.Runtime.Internal.IO.Var * DateTime -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, DateTime v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (Microsoft.ML.Runtime.Internal.IO.Var v1, decimal v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, valuetype System.Decimal v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(Microsoft.ML.Runtime.Internal.IO.Var,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Var, v2 As Decimal) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : Microsoft.ML.Runtime.Internal.IO.Var * decimal -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::Decimal v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (Microsoft.ML.Runtime.Internal.IO.Var v1, double v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, float64 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(Microsoft.ML.Runtime.Internal.IO.Var,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Var, v2 As Double) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : Microsoft.ML.Runtime.Internal.IO.Var * double -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, double v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (Microsoft.ML.Runtime.Internal.IO.Var v1, Guid v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, valuetype System.Guid v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(Microsoft.ML.Runtime.Internal.IO.Var,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Var, v2 As Guid) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : Microsoft.ML.Runtime.Internal.IO.Var * Guid -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, Guid v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (Microsoft.ML.Runtime.Internal.IO.Var v1, short v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, int16 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(Microsoft.ML.Runtime.Internal.IO.Var,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Var, v2 As Short) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : Microsoft.ML.Runtime.Internal.IO.Var * int16 -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, short v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (Microsoft.ML.Runtime.Internal.IO.Var v1, int v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, int32 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(Microsoft.ML.Runtime.Internal.IO.Var,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Var, v2 As Integer) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : Microsoft.ML.Runtime.Internal.IO.Var * int -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, int v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (Microsoft.ML.Runtime.Internal.IO.Var v1, long v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, int64 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(Microsoft.ML.Runtime.Internal.IO.Var,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Var, v2 As Long) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : Microsoft.ML.Runtime.Internal.IO.Var * int64 -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, long v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (Microsoft.ML.Runtime.Internal.IO.Var v1, sbyte v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, int8 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(Microsoft.ML.Runtime.Internal.IO.Var,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Var, v2 As SByte) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : Microsoft.ML.Runtime.Internal.IO.Var * sbyte -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::SByte v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (Microsoft.ML.Runtime.Internal.IO.Var v1, float v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, float32 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(Microsoft.ML.Runtime.Internal.IO.Var,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Var, v2 As Single) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : Microsoft.ML.Runtime.Internal.IO.Var * single -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, float v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (Microsoft.ML.Runtime.Internal.IO.Var v1, ushort v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int16 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(Microsoft.ML.Runtime.Internal.IO.Var,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Var, v2 As UShort) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : Microsoft.ML.Runtime.Internal.IO.Var * uint16 -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::UInt16 v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (Microsoft.ML.Runtime.Internal.IO.Var v1, uint v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int32 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(Microsoft.ML.Runtime.Internal.IO.Var,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Var, v2 As UInteger) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : Microsoft.ML.Runtime.Internal.IO.Var * uint32 -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::UInt32 v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (Microsoft.ML.Runtime.Internal.IO.Var v1, ulong v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int64 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(Microsoft.ML.Runtime.Internal.IO.Var,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Var, v2 As ULong) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : Microsoft.ML.Runtime.Internal.IO.Var * uint64 -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::UInt64 v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (byte v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(unsigned int8 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(System.Byte,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Byte, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : byte * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Byte v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Byte" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (DateTime v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.DateTime v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(System.DateTime,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As DateTime, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : DateTime * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(DateTime v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.DateTime" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (decimal v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Decimal v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(System.Decimal,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Decimal, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : decimal * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Decimal v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Decimal" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (double v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(float64 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(System.Double,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Double, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : double * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(double v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Double" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (Guid v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Guid v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(System.Guid,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Guid, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : Guid * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(Guid v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Guid" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (short v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(int16 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(System.Int16,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Short, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : int16 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(short v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int16" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (int v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(int32 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(System.Int32,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Integer, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : int * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(int v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int32" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (long v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(int64 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(System.Int64,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Long, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : int64 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(long v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int64" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (sbyte v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(int8 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(System.SByte,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As SByte, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : sbyte * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::SByte v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.SByte" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (float v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(float32 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(System.Single,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Single, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : single * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(float v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Single" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (ushort v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(unsigned int16 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(System.UInt16,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As UShort, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : uint16 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::UInt16 v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.UInt16" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (uint v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(unsigned int32 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(System.UInt32,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As UInteger, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : uint32 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::UInt32 v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.UInt32" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (ulong v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(unsigned int64 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThan(System.UInt64,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As ULong, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : uint64 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::UInt64 v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.UInt64" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Var, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, byte v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int8 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Var, v2 As Byte) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * byte -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::Byte v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, DateTime v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, valuetype System.DateTime v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Var, v2 As DateTime) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * DateTime -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, DateTime v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, decimal v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, valuetype System.Decimal v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Var, v2 As Decimal) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * decimal -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::Decimal v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, double v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, float64 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Var, v2 As Double) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * double -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, double v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, Guid v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, valuetype System.Guid v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Var, v2 As Guid) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * Guid -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, Guid v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, short v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, int16 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Var, v2 As Short) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * int16 -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, short v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, int v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, int32 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Var, v2 As Integer) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * int -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, int v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, long v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, int64 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Var, v2 As Long) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * int64 -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, long v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, sbyte v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, int8 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Var, v2 As SByte) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * sbyte -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::SByte v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, float v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, float32 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Var, v2 As Single) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * single -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, float v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, ushort v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int16 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Var, v2 As UShort) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * uint16 -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::UInt16 v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, uint v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int32 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Var, v2 As UInteger) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * uint32 -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::UInt32 v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, ulong v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int64 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Var, v2 As ULong) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * uint64 -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::UInt64 v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (byte v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(unsigned int8 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(System.Byte,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Byte, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : byte * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Byte v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Byte" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (DateTime v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.DateTime v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(System.DateTime,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As DateTime, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : DateTime * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(DateTime v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.DateTime" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (decimal v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Decimal v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(System.Decimal,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Decimal, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : decimal * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Decimal v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Decimal" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (double v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(float64 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(System.Double,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Double, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : double * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(double v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Double" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (Guid v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Guid v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(System.Guid,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Guid, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : Guid * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(Guid v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Guid" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (short v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(int16 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(System.Int16,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Short, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : int16 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(short v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int16" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (int v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(int32 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(System.Int32,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Integer, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : int * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(int v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int32" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (long v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(int64 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(System.Int64,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Long, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : int64 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(long v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int64" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (sbyte v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(int8 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(System.SByte,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As SByte, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : sbyte * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::SByte v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.SByte" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (float v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(float32 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(System.Single,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Single, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : single * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(float v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Single" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (ushort v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(unsigned int16 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(System.UInt16,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As UShort, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : uint16 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::UInt16 v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.UInt16" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (uint v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(unsigned int32 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(System.UInt32,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As UInteger, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : uint32 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::UInt32 v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.UInt32" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (ulong v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(unsigned int64 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_GreaterThanOrEqual(System.UInt64,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As ULong, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : uint64 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::UInt64 v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.UInt64" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &gt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator bool (Microsoft.ML.Runtime.Internal.IO.Var v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Implicit(class Microsoft.ML.Runtime.Internal.IO.Var v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(Microsoft.ML.Runtime.Internal.IO.Var)~System.Boolean" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (v As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit v" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator bool(Microsoft::ML::Runtime::Internal::IO::Var ^ v);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v">the value to convert</param>
        <summary>
            Convert the specified Var to a bool.
            </summary>
        <returns>the bool version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator byte (Microsoft.ML.Runtime.Internal.IO.Var v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8 op_Implicit(class Microsoft.ML.Runtime.Internal.IO.Var v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(Microsoft.ML.Runtime.Internal.IO.Var)~System.Byte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (v As Var) As Byte" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Microsoft.ML.Runtime.Internal.IO.Var -&gt; byte" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit v" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Byte(Microsoft::ML::Runtime::Internal::IO::Var ^ v);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v">the value to convert</param>
        <summary>
            Convert the specified Var to a byte.
            </summary>
        <returns>the byte version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator char (Microsoft.ML.Runtime.Internal.IO.Var v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname char op_Implicit(class Microsoft.ML.Runtime.Internal.IO.Var v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(Microsoft.ML.Runtime.Internal.IO.Var)~System.Char" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (v As Var) As Char" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Microsoft.ML.Runtime.Internal.IO.Var -&gt; char" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit v" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator char(Microsoft::ML::Runtime::Internal::IO::Var ^ v);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v">the value to convert</param>
        <summary>
            Convert the specified Var to a char.
            </summary>
        <returns>the char version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator DateTime (Microsoft.ML.Runtime.Internal.IO.Var v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTime op_Implicit(class Microsoft.ML.Runtime.Internal.IO.Var v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(Microsoft.ML.Runtime.Internal.IO.Var)~System.DateTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (v As Var) As DateTime" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Microsoft.ML.Runtime.Internal.IO.Var -&gt; DateTime" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit v" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator DateTime(Microsoft::ML::Runtime::Internal::IO::Var ^ v);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v">the value to convert</param>
        <summary>
            Convert the specified Var to a DateTime.
            </summary>
        <returns>the DateTime version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (Microsoft.ML.Runtime.Internal.IO.Var v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(class Microsoft.ML.Runtime.Internal.IO.Var v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(Microsoft.ML.Runtime.Internal.IO.Var)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (v As Var) As Decimal" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Microsoft.ML.Runtime.Internal.IO.Var -&gt; decimal" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit v" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(Microsoft::ML::Runtime::Internal::IO::Var ^ v);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v">the value to convert</param>
        <summary>
            Convert the specified Var to a decimal.
            </summary>
        <returns>the decimal version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator double (Microsoft.ML.Runtime.Internal.IO.Var v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Implicit(class Microsoft.ML.Runtime.Internal.IO.Var v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(Microsoft.ML.Runtime.Internal.IO.Var)~System.Double" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (v As Var) As Double" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Microsoft.ML.Runtime.Internal.IO.Var -&gt; double" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit v" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator double(Microsoft::ML::Runtime::Internal::IO::Var ^ v);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v">the value to convert</param>
        <summary>
            Convert the specified Var to a double.
            </summary>
        <returns>the double version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Guid (Microsoft.ML.Runtime.Internal.IO.Var v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Guid op_Implicit(class Microsoft.ML.Runtime.Internal.IO.Var v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(Microsoft.ML.Runtime.Internal.IO.Var)~System.Guid" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (v As Var) As Guid" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Microsoft.ML.Runtime.Internal.IO.Var -&gt; Guid" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit v" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Guid(Microsoft::ML::Runtime::Internal::IO::Var ^ v);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v">the value to convert</param>
        <summary>
            Convert the specified Var to a Guid.
            </summary>
        <returns>the Guid version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator short (Microsoft.ML.Runtime.Internal.IO.Var v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int16 op_Implicit(class Microsoft.ML.Runtime.Internal.IO.Var v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(Microsoft.ML.Runtime.Internal.IO.Var)~System.Int16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (v As Var) As Short" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Microsoft.ML.Runtime.Internal.IO.Var -&gt; int16" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit v" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator short(Microsoft::ML::Runtime::Internal::IO::Var ^ v);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v">the value to convert</param>
        <summary>
            Convert the specified Var to a short.
            </summary>
        <returns>the short version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator int (Microsoft.ML.Runtime.Internal.IO.Var v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Implicit(class Microsoft.ML.Runtime.Internal.IO.Var v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(Microsoft.ML.Runtime.Internal.IO.Var)~System.Int32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (v As Var) As Integer" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Microsoft.ML.Runtime.Internal.IO.Var -&gt; int" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit v" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator int(Microsoft::ML::Runtime::Internal::IO::Var ^ v);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v">the value to convert</param>
        <summary>
            Convert the specified Var to an int.
            </summary>
        <returns>the int version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator long (Microsoft.ML.Runtime.Internal.IO.Var v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Implicit(class Microsoft.ML.Runtime.Internal.IO.Var v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(Microsoft.ML.Runtime.Internal.IO.Var)~System.Int64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (v As Var) As Long" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Microsoft.ML.Runtime.Internal.IO.Var -&gt; int64" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit v" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator long(Microsoft::ML::Runtime::Internal::IO::Var ^ v);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v">the value to convert</param>
        <summary>
            Convert the specified Var to a long.
            </summary>
        <returns>the long version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator sbyte (Microsoft.ML.Runtime.Internal.IO.Var v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int8 op_Implicit(class Microsoft.ML.Runtime.Internal.IO.Var v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(Microsoft.ML.Runtime.Internal.IO.Var)~System.SByte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (v As Var) As SByte" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Microsoft.ML.Runtime.Internal.IO.Var -&gt; sbyte" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit v" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::SByte(Microsoft::ML::Runtime::Internal::IO::Var ^ v);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v">the value to convert</param>
        <summary>
            Convert the specified Var to a sbyte.
            </summary>
        <returns>the sbyte version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator float (Microsoft.ML.Runtime.Internal.IO.Var v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Implicit(class Microsoft.ML.Runtime.Internal.IO.Var v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(Microsoft.ML.Runtime.Internal.IO.Var)~System.Single" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (v As Var) As Single" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Microsoft.ML.Runtime.Internal.IO.Var -&gt; single" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit v" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator float(Microsoft::ML::Runtime::Internal::IO::Var ^ v);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v">the value to convert</param>
        <summary>
            Convert the specified Var to a float.
            </summary>
        <returns>the float version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator string (Microsoft.ML.Runtime.Internal.IO.Var v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname string op_Implicit(class Microsoft.ML.Runtime.Internal.IO.Var v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(Microsoft.ML.Runtime.Internal.IO.Var)~System.String" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (v As Var) As String" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Microsoft.ML.Runtime.Internal.IO.Var -&gt; string" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit v" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::String ^(Microsoft::ML::Runtime::Internal::IO::Var ^ v);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v">the value to convert</param>
        <summary>
            Convert the specified Var to a string.
            </summary>
        <returns>the string version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator ushort (Microsoft.ML.Runtime.Internal.IO.Var v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int16 op_Implicit(class Microsoft.ML.Runtime.Internal.IO.Var v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(Microsoft.ML.Runtime.Internal.IO.Var)~System.UInt16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (v As Var) As UShort" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Microsoft.ML.Runtime.Internal.IO.Var -&gt; uint16" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit v" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::UInt16(Microsoft::ML::Runtime::Internal::IO::Var ^ v);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v">the value to convert</param>
        <summary>
            Convert the specified Var to a ushort.
            </summary>
        <returns>the ushort version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator uint (Microsoft.ML.Runtime.Internal.IO.Var v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int32 op_Implicit(class Microsoft.ML.Runtime.Internal.IO.Var v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(Microsoft.ML.Runtime.Internal.IO.Var)~System.UInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (v As Var) As UInteger" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Microsoft.ML.Runtime.Internal.IO.Var -&gt; uint32" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit v" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::UInt32(Microsoft::ML::Runtime::Internal::IO::Var ^ v);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v">the value to convert</param>
        <summary>
            Convert the specified Var to a uint.
            </summary>
        <returns>the uint version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator ulong (Microsoft.ML.Runtime.Internal.IO.Var v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int64 op_Implicit(class Microsoft.ML.Runtime.Internal.IO.Var v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(Microsoft.ML.Runtime.Internal.IO.Var)~System.UInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (v As Var) As ULong" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Microsoft.ML.Runtime.Internal.IO.Var -&gt; uint64" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit v" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::UInt64(Microsoft::ML::Runtime::Internal::IO::Var ^ v);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v">the value to convert</param>
        <summary>
            Convert the specified Var to a ulong.
            </summary>
        <returns>the ulong version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Microsoft.ML.Runtime.Internal.IO.Var (bool b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Microsoft.ML.Runtime.Internal.IO.Var op_Implicit(bool b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(System.Boolean)~Microsoft.ML.Runtime.Internal.IO.Var" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (b As Boolean) As Var" />
      <MemberSignature Language="F#" Value="static member op_Implicit : bool -&gt; Microsoft.ML.Runtime.Internal.IO.Var" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit b" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Microsoft::ML::Runtime::Internal::IO::Var ^(bool b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.IO.Var</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="b">the value to convert</param>
        <summary>
            Convert the specified value to a Var.
            </summary>
        <returns>the Var version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Microsoft.ML.Runtime.Internal.IO.Var (byte n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Microsoft.ML.Runtime.Internal.IO.Var op_Implicit(unsigned int8 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(System.Byte)~Microsoft.ML.Runtime.Internal.IO.Var" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (n As Byte) As Var" />
      <MemberSignature Language="F#" Value="static member op_Implicit : byte -&gt; Microsoft.ML.Runtime.Internal.IO.Var" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit n" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Microsoft::ML::Runtime::Internal::IO::Var ^(System::Byte n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.IO.Var</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="n">the value to convert</param>
        <summary>
            Convert the specified value to a Var.
            </summary>
        <returns>the Var version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Microsoft.ML.Runtime.Internal.IO.Var (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Microsoft.ML.Runtime.Internal.IO.Var op_Implicit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(System.Char)~Microsoft.ML.Runtime.Internal.IO.Var" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (c As Char) As Var" />
      <MemberSignature Language="F#" Value="static member op_Implicit : char -&gt; Microsoft.ML.Runtime.Internal.IO.Var" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit c" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Microsoft::ML::Runtime::Internal::IO::Var ^(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.IO.Var</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">the value to convert</param>
        <summary>
            Convert the specified value to a Var.
            </summary>
        <returns>the Var version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Microsoft.ML.Runtime.Internal.IO.Var (DateTime d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Microsoft.ML.Runtime.Internal.IO.Var op_Implicit(valuetype System.DateTime d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(System.DateTime)~Microsoft.ML.Runtime.Internal.IO.Var" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (d As DateTime) As Var" />
      <MemberSignature Language="F#" Value="static member op_Implicit : DateTime -&gt; Microsoft.ML.Runtime.Internal.IO.Var" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit d" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Microsoft::ML::Runtime::Internal::IO::Var ^(DateTime d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.IO.Var</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="d">the value to convert</param>
        <summary>
            Convert the specified DateTime to a Var.
            </summary>
        <returns>the Var version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Microsoft.ML.Runtime.Internal.IO.Var (decimal n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Microsoft.ML.Runtime.Internal.IO.Var op_Implicit(valuetype System.Decimal n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(System.Decimal)~Microsoft.ML.Runtime.Internal.IO.Var" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (n As Decimal) As Var" />
      <MemberSignature Language="F#" Value="static member op_Implicit : decimal -&gt; Microsoft.ML.Runtime.Internal.IO.Var" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit n" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Microsoft::ML::Runtime::Internal::IO::Var ^(System::Decimal n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.IO.Var</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="n">the value to convert</param>
        <summary>
            Convert the specified value to a Var.
            </summary>
        <returns>the Var version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Microsoft.ML.Runtime.Internal.IO.Var (double n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Microsoft.ML.Runtime.Internal.IO.Var op_Implicit(float64 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(System.Double)~Microsoft.ML.Runtime.Internal.IO.Var" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (n As Double) As Var" />
      <MemberSignature Language="F#" Value="static member op_Implicit : double -&gt; Microsoft.ML.Runtime.Internal.IO.Var" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit n" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Microsoft::ML::Runtime::Internal::IO::Var ^(double n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.IO.Var</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="n">the value to convert</param>
        <summary>
            Convert the specified value to a Var.
            </summary>
        <returns>the Var version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Microsoft.ML.Runtime.Internal.IO.Var (Guid g);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Microsoft.ML.Runtime.Internal.IO.Var op_Implicit(valuetype System.Guid g) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(System.Guid)~Microsoft.ML.Runtime.Internal.IO.Var" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (g As Guid) As Var" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Guid -&gt; Microsoft.ML.Runtime.Internal.IO.Var" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit g" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Microsoft::ML::Runtime::Internal::IO::Var ^(Guid g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.IO.Var</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="g">the value to convert</param>
        <summary>
            Convert the specified Guid to a Var.
            </summary>
        <returns>the Var version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Microsoft.ML.Runtime.Internal.IO.Var (short n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Microsoft.ML.Runtime.Internal.IO.Var op_Implicit(int16 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(System.Int16)~Microsoft.ML.Runtime.Internal.IO.Var" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (n As Short) As Var" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int16 -&gt; Microsoft.ML.Runtime.Internal.IO.Var" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit n" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Microsoft::ML::Runtime::Internal::IO::Var ^(short n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.IO.Var</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="n">the value to convert</param>
        <summary>
            Convert the specified value to a Var.
            </summary>
        <returns>the Var version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Microsoft.ML.Runtime.Internal.IO.Var (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Microsoft.ML.Runtime.Internal.IO.Var op_Implicit(int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(System.Int32)~Microsoft.ML.Runtime.Internal.IO.Var" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (n As Integer) As Var" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int -&gt; Microsoft.ML.Runtime.Internal.IO.Var" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit n" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Microsoft::ML::Runtime::Internal::IO::Var ^(int n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.IO.Var</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">the value to convert</param>
        <summary>
            Convert the specified value to a Var.
            </summary>
        <returns>the Var version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Microsoft.ML.Runtime.Internal.IO.Var (long n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Microsoft.ML.Runtime.Internal.IO.Var op_Implicit(int64 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(System.Int64)~Microsoft.ML.Runtime.Internal.IO.Var" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (n As Long) As Var" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int64 -&gt; Microsoft.ML.Runtime.Internal.IO.Var" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit n" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Microsoft::ML::Runtime::Internal::IO::Var ^(long n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.IO.Var</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="n">the value to convert</param>
        <summary>
            Convert the specified value to a Var.
            </summary>
        <returns>the Var version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Microsoft.ML.Runtime.Internal.IO.Var (sbyte n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Microsoft.ML.Runtime.Internal.IO.Var op_Implicit(int8 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(System.SByte)~Microsoft.ML.Runtime.Internal.IO.Var" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (n As SByte) As Var" />
      <MemberSignature Language="F#" Value="static member op_Implicit : sbyte -&gt; Microsoft.ML.Runtime.Internal.IO.Var" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit n" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Microsoft::ML::Runtime::Internal::IO::Var ^(System::SByte n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.IO.Var</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="n">the value to convert</param>
        <summary>
            Convert the specified value to a Var.
            </summary>
        <returns>the Var version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Microsoft.ML.Runtime.Internal.IO.Var (float n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Microsoft.ML.Runtime.Internal.IO.Var op_Implicit(float32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(System.Single)~Microsoft.ML.Runtime.Internal.IO.Var" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (n As Single) As Var" />
      <MemberSignature Language="F#" Value="static member op_Implicit : single -&gt; Microsoft.ML.Runtime.Internal.IO.Var" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit n" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Microsoft::ML::Runtime::Internal::IO::Var ^(float n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.IO.Var</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="n">the value to convert</param>
        <summary>
            Convert the specified value to a Var.
            </summary>
        <returns>the Var version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Microsoft.ML.Runtime.Internal.IO.Var (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Microsoft.ML.Runtime.Internal.IO.Var op_Implicit(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(System.String)~Microsoft.ML.Runtime.Internal.IO.Var" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (s As String) As Var" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; Microsoft.ML.Runtime.Internal.IO.Var" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit s" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Microsoft::ML::Runtime::Internal::IO::Var ^(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.IO.Var</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">the value to convert</param>
        <summary>
            Convert the specified value to a Var.
            </summary>
        <returns>the Var version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Microsoft.ML.Runtime.Internal.IO.Var (ushort n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Microsoft.ML.Runtime.Internal.IO.Var op_Implicit(unsigned int16 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(System.UInt16)~Microsoft.ML.Runtime.Internal.IO.Var" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (n As UShort) As Var" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint16 -&gt; Microsoft.ML.Runtime.Internal.IO.Var" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit n" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Microsoft::ML::Runtime::Internal::IO::Var ^(System::UInt16 n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.IO.Var</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="n">the value to convert</param>
        <summary>
            Convert the specified value to a Var.
            </summary>
        <returns>the Var version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Microsoft.ML.Runtime.Internal.IO.Var (uint n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Microsoft.ML.Runtime.Internal.IO.Var op_Implicit(unsigned int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(System.UInt32)~Microsoft.ML.Runtime.Internal.IO.Var" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (n As UInteger) As Var" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint32 -&gt; Microsoft.ML.Runtime.Internal.IO.Var" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit n" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Microsoft::ML::Runtime::Internal::IO::Var ^(System::UInt32 n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.IO.Var</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="n">the value to convert</param>
        <summary>
            Convert the specified value to a Var.
            </summary>
        <returns>the Var version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Microsoft.ML.Runtime.Internal.IO.Var (ulong n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Microsoft.ML.Runtime.Internal.IO.Var op_Implicit(unsigned int64 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit(System.UInt64)~Microsoft.ML.Runtime.Internal.IO.Var" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (n As ULong) As Var" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint64 -&gt; Microsoft.ML.Runtime.Internal.IO.Var" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Implicit n" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Microsoft::ML::Runtime::Internal::IO::Var ^(System::UInt64 n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.IO.Var</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="n">the value to convert</param>
        <summary>
            Convert the specified value to a Var.
            </summary>
        <returns>the Var version of the value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Increment">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Internal.IO.Var operator ++ (Microsoft.ML.Runtime.Internal.IO.Var v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Microsoft.ML.Runtime.Internal.IO.Var op_Increment(class Microsoft.ML.Runtime.Internal.IO.Var v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Increment(Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Increment (v As Var) As Var" />
      <MemberSignature Language="F#" Value="static member op_Increment : Microsoft.ML.Runtime.Internal.IO.Var -&gt; Microsoft.ML.Runtime.Internal.IO.Var" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Increment v" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::ML::Runtime::Internal::IO::Var ^ operator ++(Microsoft::ML::Runtime::Internal::IO::Var ^ v);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.IO.Var</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v">the value to increment</param>
        <summary>
            Increment the value.
            </summary>
        <returns>the incremented value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.ML.Runtime.Internal.IO.Var v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Microsoft.ML.Runtime.Internal.IO.Var v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(Microsoft.ML.Runtime.Internal.IO.Var,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Var, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.ML.Runtime.Internal.IO.Var * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.ML.Runtime.Internal.IO.Var v1, byte v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int8 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(Microsoft.ML.Runtime.Internal.IO.Var,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Var, v2 As Byte) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.ML.Runtime.Internal.IO.Var * byte -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::Byte v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.ML.Runtime.Internal.IO.Var v1, DateTime v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Microsoft.ML.Runtime.Internal.IO.Var v1, valuetype System.DateTime v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(Microsoft.ML.Runtime.Internal.IO.Var,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Var, v2 As DateTime) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.ML.Runtime.Internal.IO.Var * DateTime -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, DateTime v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.ML.Runtime.Internal.IO.Var v1, decimal v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Microsoft.ML.Runtime.Internal.IO.Var v1, valuetype System.Decimal v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(Microsoft.ML.Runtime.Internal.IO.Var,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Var, v2 As Decimal) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.ML.Runtime.Internal.IO.Var * decimal -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::Decimal v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.ML.Runtime.Internal.IO.Var v1, double v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Microsoft.ML.Runtime.Internal.IO.Var v1, float64 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(Microsoft.ML.Runtime.Internal.IO.Var,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Var, v2 As Double) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.ML.Runtime.Internal.IO.Var * double -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, double v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.ML.Runtime.Internal.IO.Var v1, Guid v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Microsoft.ML.Runtime.Internal.IO.Var v1, valuetype System.Guid v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(Microsoft.ML.Runtime.Internal.IO.Var,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Var, v2 As Guid) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.ML.Runtime.Internal.IO.Var * Guid -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, Guid v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.ML.Runtime.Internal.IO.Var v1, short v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Microsoft.ML.Runtime.Internal.IO.Var v1, int16 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(Microsoft.ML.Runtime.Internal.IO.Var,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Var, v2 As Short) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.ML.Runtime.Internal.IO.Var * int16 -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, short v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.ML.Runtime.Internal.IO.Var v1, int v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Microsoft.ML.Runtime.Internal.IO.Var v1, int32 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(Microsoft.ML.Runtime.Internal.IO.Var,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Var, v2 As Integer) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.ML.Runtime.Internal.IO.Var * int -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, int v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.ML.Runtime.Internal.IO.Var v1, long v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Microsoft.ML.Runtime.Internal.IO.Var v1, int64 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(Microsoft.ML.Runtime.Internal.IO.Var,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Var, v2 As Long) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.ML.Runtime.Internal.IO.Var * int64 -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, long v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.ML.Runtime.Internal.IO.Var v1, sbyte v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Microsoft.ML.Runtime.Internal.IO.Var v1, int8 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(Microsoft.ML.Runtime.Internal.IO.Var,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Var, v2 As SByte) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.ML.Runtime.Internal.IO.Var * sbyte -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::SByte v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.ML.Runtime.Internal.IO.Var v1, float v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Microsoft.ML.Runtime.Internal.IO.Var v1, float32 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(Microsoft.ML.Runtime.Internal.IO.Var,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Var, v2 As Single) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.ML.Runtime.Internal.IO.Var * single -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, float v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.ML.Runtime.Internal.IO.Var v1, ushort v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int16 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(Microsoft.ML.Runtime.Internal.IO.Var,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Var, v2 As UShort) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.ML.Runtime.Internal.IO.Var * uint16 -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::UInt16 v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.ML.Runtime.Internal.IO.Var v1, uint v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int32 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(Microsoft.ML.Runtime.Internal.IO.Var,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Var, v2 As UInteger) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.ML.Runtime.Internal.IO.Var * uint32 -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::UInt32 v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.ML.Runtime.Internal.IO.Var v1, ulong v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int64 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(Microsoft.ML.Runtime.Internal.IO.Var,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Var, v2 As ULong) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.ML.Runtime.Internal.IO.Var * uint64 -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::UInt64 v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (byte v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(unsigned int8 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(System.Byte,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Byte, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : byte * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Byte v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Byte" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (DateTime v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.DateTime v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(System.DateTime,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As DateTime, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : DateTime * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(DateTime v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.DateTime" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (decimal v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Decimal v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(System.Decimal,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Decimal, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : decimal * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Decimal v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Decimal" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (double v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(float64 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(System.Double,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Double, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : double * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(double v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Double" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (short v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(int16 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(System.Int16,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Short, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : int16 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(short v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int16" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (int v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(int32 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(System.Int32,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Integer, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : int * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(int v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int32" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (long v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(int64 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(System.Int64,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Long, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : int64 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(long v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int64" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (sbyte v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(int8 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(System.SByte,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As SByte, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : sbyte * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::SByte v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.SByte" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (float v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(float32 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(System.Single,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Single, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : single * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(float v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Single" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (ushort v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(unsigned int16 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(System.UInt16,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As UShort, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : uint16 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::UInt16 v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.UInt16" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (uint v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(unsigned int32 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(System.UInt32,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As UInteger, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : uint32 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::UInt32 v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.UInt32" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (ulong v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(unsigned int64 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality(System.UInt64,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As ULong, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : uint64 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.Var.op_Inequality (v1, v2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::UInt64 v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.UInt64" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Determines whether the specified values are not the same.</summary>
        <returns>true if v1 is not the same as v2; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (Microsoft.ML.Runtime.Internal.IO.Var v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(Microsoft.ML.Runtime.Internal.IO.Var,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Var, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : Microsoft.ML.Runtime.Internal.IO.Var * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (Microsoft.ML.Runtime.Internal.IO.Var v1, byte v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int8 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(Microsoft.ML.Runtime.Internal.IO.Var,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Var, v2 As Byte) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : Microsoft.ML.Runtime.Internal.IO.Var * byte -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::Byte v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (Microsoft.ML.Runtime.Internal.IO.Var v1, DateTime v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, valuetype System.DateTime v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(Microsoft.ML.Runtime.Internal.IO.Var,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Var, v2 As DateTime) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : Microsoft.ML.Runtime.Internal.IO.Var * DateTime -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, DateTime v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (Microsoft.ML.Runtime.Internal.IO.Var v1, decimal v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, valuetype System.Decimal v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(Microsoft.ML.Runtime.Internal.IO.Var,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Var, v2 As Decimal) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : Microsoft.ML.Runtime.Internal.IO.Var * decimal -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::Decimal v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (Microsoft.ML.Runtime.Internal.IO.Var v1, double v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, float64 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(Microsoft.ML.Runtime.Internal.IO.Var,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Var, v2 As Double) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : Microsoft.ML.Runtime.Internal.IO.Var * double -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, double v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (Microsoft.ML.Runtime.Internal.IO.Var v1, Guid v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, valuetype System.Guid v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(Microsoft.ML.Runtime.Internal.IO.Var,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Var, v2 As Guid) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : Microsoft.ML.Runtime.Internal.IO.Var * Guid -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, Guid v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (Microsoft.ML.Runtime.Internal.IO.Var v1, short v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, int16 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(Microsoft.ML.Runtime.Internal.IO.Var,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Var, v2 As Short) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : Microsoft.ML.Runtime.Internal.IO.Var * int16 -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, short v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (Microsoft.ML.Runtime.Internal.IO.Var v1, int v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, int32 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(Microsoft.ML.Runtime.Internal.IO.Var,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Var, v2 As Integer) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : Microsoft.ML.Runtime.Internal.IO.Var * int -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, int v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (Microsoft.ML.Runtime.Internal.IO.Var v1, long v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, int64 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(Microsoft.ML.Runtime.Internal.IO.Var,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Var, v2 As Long) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : Microsoft.ML.Runtime.Internal.IO.Var * int64 -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, long v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (Microsoft.ML.Runtime.Internal.IO.Var v1, sbyte v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, int8 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(Microsoft.ML.Runtime.Internal.IO.Var,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Var, v2 As SByte) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : Microsoft.ML.Runtime.Internal.IO.Var * sbyte -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::SByte v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (Microsoft.ML.Runtime.Internal.IO.Var v1, float v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, float32 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(Microsoft.ML.Runtime.Internal.IO.Var,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Var, v2 As Single) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : Microsoft.ML.Runtime.Internal.IO.Var * single -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, float v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (Microsoft.ML.Runtime.Internal.IO.Var v1, ushort v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int16 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(Microsoft.ML.Runtime.Internal.IO.Var,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Var, v2 As UShort) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : Microsoft.ML.Runtime.Internal.IO.Var * uint16 -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::UInt16 v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (Microsoft.ML.Runtime.Internal.IO.Var v1, uint v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int32 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(Microsoft.ML.Runtime.Internal.IO.Var,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Var, v2 As UInteger) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : Microsoft.ML.Runtime.Internal.IO.Var * uint32 -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::UInt32 v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (Microsoft.ML.Runtime.Internal.IO.Var v1, ulong v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int64 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(Microsoft.ML.Runtime.Internal.IO.Var,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Var, v2 As ULong) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : Microsoft.ML.Runtime.Internal.IO.Var * uint64 -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::UInt64 v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (byte v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(unsigned int8 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(System.Byte,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Byte, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : byte * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Byte v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Byte" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (DateTime v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.DateTime v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(System.DateTime,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As DateTime, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : DateTime * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(DateTime v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.DateTime" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (decimal v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Decimal v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(System.Decimal,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Decimal, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : decimal * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Decimal v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Decimal" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (double v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(float64 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(System.Double,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Double, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : double * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(double v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Double" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (Guid v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Guid v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(System.Guid,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Guid, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : Guid * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(Guid v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Guid" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (short v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(int16 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(System.Int16,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Short, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : int16 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(short v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int16" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (int v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(int32 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(System.Int32,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Integer, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : int * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(int v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int32" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (long v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(int64 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(System.Int64,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Long, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : int64 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(long v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int64" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (sbyte v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(int8 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(System.SByte,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As SByte, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : sbyte * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::SByte v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.SByte" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (float v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(float32 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(System.Single,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Single, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : single * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(float v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Single" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (ushort v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(unsigned int16 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(System.UInt16,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As UShort, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : uint16 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::UInt16 v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.UInt16" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (uint v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(unsigned int32 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(System.UInt32,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As UInteger, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : uint32 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::UInt32 v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.UInt32" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (ulong v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(unsigned int64 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThan(System.UInt64,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As ULong, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : uint64 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt; v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::UInt64 v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.UInt64" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt; v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Var, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, byte v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int8 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Var, v2 As Byte) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * byte -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::Byte v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, DateTime v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, valuetype System.DateTime v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Var, v2 As DateTime) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * DateTime -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, DateTime v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, decimal v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, valuetype System.Decimal v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Var, v2 As Decimal) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * decimal -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::Decimal v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, double v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, float64 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Var, v2 As Double) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * double -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, double v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, Guid v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, valuetype System.Guid v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Var, v2 As Guid) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * Guid -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, Guid v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, short v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, int16 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Var, v2 As Short) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * int16 -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, short v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, int v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, int32 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Var, v2 As Integer) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * int -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, int v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, long v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, int64 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Var, v2 As Long) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * int64 -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, long v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, sbyte v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, int8 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Var, v2 As SByte) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * sbyte -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::SByte v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, float v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, float32 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Var, v2 As Single) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * single -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, float v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, ushort v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int16 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Var, v2 As UShort) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * uint16 -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::UInt16 v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, uint v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int32 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Var, v2 As UInteger) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * uint32 -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::UInt32 v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (Microsoft.ML.Runtime.Internal.IO.Var v1, ulong v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(class Microsoft.ML.Runtime.Internal.IO.Var v1, unsigned int64 v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(Microsoft.ML.Runtime.Internal.IO.Var,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Var, v2 As ULong) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : Microsoft.ML.Runtime.Internal.IO.Var * uint64 -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(Microsoft::ML::Runtime::Internal::IO::Var ^ v1, System::UInt64 v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
        <Parameter Name="v2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (byte v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(unsigned int8 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(System.Byte,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Byte, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : byte * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Byte v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Byte" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (DateTime v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.DateTime v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(System.DateTime,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As DateTime, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : DateTime * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(DateTime v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.DateTime" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (decimal v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Decimal v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(System.Decimal,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Decimal, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : decimal * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Decimal v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Decimal" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (double v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(float64 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(System.Double,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Double, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : double * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(double v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Double" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (Guid v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Guid v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(System.Guid,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Guid, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : Guid * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(Guid v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Guid" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (short v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(int16 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(System.Int16,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Short, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : int16 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(short v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int16" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (int v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(int32 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(System.Int32,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Integer, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : int * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(int v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int32" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (long v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(int64 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(System.Int64,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Long, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : int64 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(long v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int64" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (sbyte v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(int8 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(System.SByte,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As SByte, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : sbyte * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::SByte v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.SByte" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (float v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(float32 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(System.Single,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Single, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : single * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(float v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Single" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (ushort v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(unsigned int16 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(System.UInt16,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As UShort, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : uint16 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::UInt16 v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.UInt16" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (uint v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(unsigned int32 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(System.UInt32,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As UInteger, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : uint32 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::UInt32 v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.UInt32" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (ulong v1, Microsoft.ML.Runtime.Internal.IO.Var v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(unsigned int64 v1, class Microsoft.ML.Runtime.Internal.IO.Var v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LessThanOrEqual(System.UInt64,Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As ULong, v2 As Var) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : uint64 * Microsoft.ML.Runtime.Internal.IO.Var -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::UInt64 v1, Microsoft::ML::Runtime::Internal::IO::Var ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.UInt64" />
        <Parameter Name="v2" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v1">the first value</param>
        <param name="v2">the second value</param>
        <summary>Compares two values.</summary>
        <returns>true if v1 &lt;= v2; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LogicalNot">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Internal.IO.Var operator ! (Microsoft.ML.Runtime.Internal.IO.Var v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Microsoft.ML.Runtime.Internal.IO.Var op_LogicalNot(class Microsoft.ML.Runtime.Internal.IO.Var v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_LogicalNot(Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Not (v As Var) As Var" />
      <MemberSignature Language="F#" Value="static member ( ~~~ ) : Microsoft.ML.Runtime.Internal.IO.Var -&gt; Microsoft.ML.Runtime.Internal.IO.Var" Usage="~~~ v" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::ML::Runtime::Internal::IO::Var ^ operator !(Microsoft::ML::Runtime::Internal::IO::Var ^ v);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.IO.Var</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v">the value to negate</param>
        <summary>
            Negate the value.
            </summary>
        <returns>the negated value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Internal.IO.Var operator - (Microsoft.ML.Runtime.Internal.IO.Var v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Microsoft.ML.Runtime.Internal.IO.Var op_UnaryNegation(class Microsoft.ML.Runtime.Internal.IO.Var v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.op_UnaryNegation(Microsoft.ML.Runtime.Internal.IO.Var)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (v As Var) As Var" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : Microsoft.ML.Runtime.Internal.IO.Var -&gt; Microsoft.ML.Runtime.Internal.IO.Var" Usage="- v" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::ML::Runtime::Internal::IO::Var ^ operator -(Microsoft::ML::Runtime::Internal::IO::Var ^ v);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.IO.Var</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Microsoft.ML.Runtime.Internal.IO.Var" />
      </Parameters>
      <Docs>
        <param name="v">the value to negate</param>
        <summary>
            Negate the value.
            </summary>
        <returns>the negated value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PadLeft">
      <MemberSignature Language="C#" Value="public string PadLeft (int totalWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string PadLeft(int32 totalWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.PadLeft(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function PadLeft (totalWidth As Integer) As String" />
      <MemberSignature Language="F#" Value="member this.PadLeft : int -&gt; string" Usage="var.PadLeft totalWidth" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ PadLeft(int totalWidth);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::String ^ PadLeft(int totalWidth);" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring PadLeft(int totalWidth);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="totalWidth">The number of characters in the resulting string, equal to the number of original characters plus any additional padding characters. </param>
        <summary>Right-aligns the characters in this instance, padding with spaces on the left for a specified total length.</summary>
        <returns>A new <see cref="T:System.String"></see> that is equivalent to this instance, but right-aligned and padded on the left with as many spaces as needed to create a length of totalWidth. Or, if totalWidth is less than the length of this instance, a new <see cref="T:System.String"></see> object that is identical to this instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">totalWidth is less than zero. </exception>
      </Docs>
    </Member>
    <Member MemberName="PadLeft">
      <MemberSignature Language="C#" Value="public string PadLeft (int totalWidth, char paddingChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string PadLeft(int32 totalWidth, char paddingChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.PadLeft(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function PadLeft (totalWidth As Integer, paddingChar As Char) As String" />
      <MemberSignature Language="F#" Value="member this.PadLeft : int * char -&gt; string" Usage="var.PadLeft (totalWidth, paddingChar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ PadLeft(int totalWidth, char paddingChar);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::String ^ PadLeft(int totalWidth, char16 paddingChar);" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring PadLeft(int totalWidth, char paddingChar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalWidth" Type="System.Int32" />
        <Parameter Name="paddingChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="totalWidth">The number of characters in the resulting string, equal to the number of original characters plus any additional padding characters. </param>
        <param name="paddingChar">A Unicode padding character. </param>
        <summary>Right-aligns the characters in this instance, padding on the left with a specified Unicode character for a specified total length.</summary>
        <returns>A new <see cref="T:System.String"></see> that is equivalent to this instance, but right-aligned and padded on the left with as many paddingChar characters as needed to create a length of totalWidth. Or, if totalWidth is less than the length of this instance, a new <see cref="T:System.String"></see> that is identical to this instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">totalWidth is less than zero. </exception>
      </Docs>
    </Member>
    <Member MemberName="PadRight">
      <MemberSignature Language="C#" Value="public string PadRight (int totalWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string PadRight(int32 totalWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.PadRight(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function PadRight (totalWidth As Integer) As String" />
      <MemberSignature Language="F#" Value="member this.PadRight : int -&gt; string" Usage="var.PadRight totalWidth" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ PadRight(int totalWidth);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::String ^ PadRight(int totalWidth);" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring PadRight(int totalWidth);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="totalWidth">The number of characters in the resulting string, equal to the number of original characters plus any additional padding characters. </param>
        <summary>Left-aligns the characters in this string, padding with spaces on the right, for a specified total length.</summary>
        <returns>A new <see cref="T:System.String"></see> that is equivalent to this instance, but left-aligned and padded on the right with as many spaces as needed to create a length of totalWidth. Or, if totalWidth is less than the length of this instance, a new <see cref="T:System.String"></see> that is identical to this instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">totalWidth is less than zero. </exception>
      </Docs>
    </Member>
    <Member MemberName="PadRight">
      <MemberSignature Language="C#" Value="public string PadRight (int totalWidth, char paddingChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string PadRight(int32 totalWidth, char paddingChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.PadRight(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function PadRight (totalWidth As Integer, paddingChar As Char) As String" />
      <MemberSignature Language="F#" Value="member this.PadRight : int * char -&gt; string" Usage="var.PadRight (totalWidth, paddingChar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ PadRight(int totalWidth, char paddingChar);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::String ^ PadRight(int totalWidth, char16 paddingChar);" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring PadRight(int totalWidth, char paddingChar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalWidth" Type="System.Int32" />
        <Parameter Name="paddingChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="totalWidth">The number of characters in the resulting string, equal to the number of original characters plus any additional padding characters. </param>
        <param name="paddingChar">A Unicode padding character. </param>
        <summary>Left-aligns the characters in this string, padding on the right with a specified Unicode character, for a specified total length.</summary>
        <returns>A new <see cref="T:System.String"></see> that is equivalent to this instance, but left-aligned and padded on the right with as many paddingChar characters as needed to create a length of totalWidth. Or, if totalWidth is less than the length of this instance, a new <see cref="T:System.String"></see> that is identical to this instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">totalWidth is less than zero. </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public string Remove (int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Remove(int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Remove(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (startIndex As Integer) As String" />
      <MemberSignature Language="F#" Value="member this.Remove : int -&gt; string" Usage="var.Remove startIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Remove(int startIndex);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::String ^ Remove(int startIndex);" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring Remove(int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startIndex">The position to begin deleting characters. </param>
        <summary>Deletes all the characters from this string beginning at a specified position and continuing through the last position.</summary>
        <returns>A new <see cref="T:System.String"></see> object that is equivalent to this string less the removed characters.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">startIndex is less than zero.-or- startIndex specifies a position that is not within this string. </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public string Remove (int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Remove(int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Remove(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (startIndex As Integer, count As Integer) As String" />
      <MemberSignature Language="F#" Value="member this.Remove : int * int -&gt; string" Usage="var.Remove (startIndex, count)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Remove(int startIndex, int count);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::String ^ Remove(int startIndex, int count);" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring Remove(int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startIndex">The position to begin deleting characters. </param>
        <param name="count">The number of characters to delete. </param>
        <summary>Deletes a specified number of characters from this instance beginning at a specified position.</summary>
        <returns>A new <see cref="T:System.String"></see> that is equivalent to this instance less count number of characters.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Either startIndex or count is less than zero.-or- startIndex plus count specify a position outside this instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (char oldChar, char newChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(char oldChar, char newChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Replace(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldChar As Char, newChar As Char) As String" />
      <MemberSignature Language="F#" Value="member this.Replace : char * char -&gt; string" Usage="var.Replace (oldChar, newChar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(char oldChar, char newChar);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::String ^ Replace(char16 oldChar, char16 newChar);" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring Replace(char oldChar, char newChar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldChar" Type="System.Char" />
        <Parameter Name="newChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="oldChar">A Unicode character to be replaced. </param>
        <param name="newChar">A Unicode character to replace all occurrences of oldChar. </param>
        <summary>Replaces all occurrences of a specified Unicode character in this instance with another specified Unicode character.</summary>
        <returns>A <see cref="T:System.String"></see> equivalent to this instance but with all instances of oldChar replaced with newChar.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string oldValue, string newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string oldValue, string newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Replace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldValue As String, newValue As String) As String" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string -&gt; string" Usage="var.Replace (oldValue, newValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ oldValue, System::String ^ newValue);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::String ^ Replace(Platform::String ^ oldValue, Platform::String ^ newValue);" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring Replace(std::wstring const &amp; oldValue, std::wstring const &amp; newValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.String" />
        <Parameter Name="newValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldValue">A <see cref="T:System.String"></see> to be replaced. </param>
        <param name="newValue">A <see cref="T:System.String"></see> to replace all occurrences of oldValue. </param>
        <summary>Replaces all occurrences of a specified <see cref="T:System.String" /> in this instance, with another specified <see cref="T:System.String" />.</summary>
        <returns>A <see cref="T:System.String"></see> equivalent to this instance but with all instances of oldValue replaced with newValue.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">oldValue is null. </exception>
        <exception cref="T:System.ArgumentException">oldValue is the empty string (""). </exception>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (params char[] separator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(char[] separator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Split(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (ParamArray separator As Char()) As String()" />
      <MemberSignature Language="F#" Value="member this.Split : char[] -&gt; string[]" Usage="var.Split separator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(... cli::array &lt;char&gt; ^ separator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator">An array of Unicode characters that delimit the substrings in this instance, an empty array containing no delimiters, or null. </param>
        <summary>Returns a <see cref="T:System.String" /> array containing the substrings in this instance that are delimited by elements of a specified <see cref="T:System.Char" /> array.</summary>
        <returns>An array whose elements contain the substrings in this instance that are delimited by one or more characters in separator. For more information, see the Remarks section.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (char[] separator, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(char[] separator, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Split(System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As Char(), count As Integer) As String()" />
      <MemberSignature Language="F#" Value="member this.Split : char[] * int -&gt; string[]" Usage="var.Split (separator, count)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(cli::array &lt;char&gt; ^ separator, int count);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::Array &lt;Platform::String ^&gt; ^ Split(Platform::Array &lt;char16&gt; ^ separator, int count);" />
      <MemberSignature Language="C++ WINRT" Value="std::Array &lt;std::wstring const &amp;&gt; Split(std::Array &lt;char&gt; const &amp; separator, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char[]" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="separator">An array of Unicode characters that delimit the substrings in this instance, an empty array containing no delimiters, or null. </param>
        <param name="count">The maximum number of substrings to return. </param>
        <summary>Returns a <see cref="T:System.String" /> array containing the substrings in this instance that are delimited by elements of a specified <see cref="T:System.Char" /> array. A parameter specifies the maximum number of substrings to return.</summary>
        <returns>An array whose elements contain the substrings in this instance that are delimited by one or more characters in separator. For more information, see the Remarks section.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">count is negative. </exception>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (char[] separator, StringSplitOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(char[] separator, valuetype System.StringSplitOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Split(System.Char[],System.StringSplitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As Char(), options As StringSplitOptions) As String()" />
      <MemberSignature Language="F#" Value="member this.Split : char[] * StringSplitOptions -&gt; string[]" Usage="var.Split (separator, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(cli::array &lt;char&gt; ^ separator, StringSplitOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char[]" />
        <Parameter Name="options" Type="System.StringSplitOptions" />
      </Parameters>
      <Docs>
        <param name="separator">An array of Unicode characters that delimit the substrings in this string, an empty array containing no delimiters, or null. </param>
        <param name="options">Specify <see cref="F:System.StringSplitOptions.RemoveEmptyEntries"></see> to omit empty array elements from the array returned, or <see cref="F:System.StringSplitOptions.None"></see> to include empty array elements in the array returned. </param>
        <summary>Returns a <see cref="T:System.String" /> array containing the substrings in this string that are delimited by elements of a specified <see cref="T:System.Char" /> array. A parameter specifies whether to return empty array elements.</summary>
        <returns>An array whose elements contain the substrings in this string that are delimited by one or more characters in separator. For more information, see the Remarks section.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">options is not one of the <see cref="T:System.StringSplitOptions"></see> values.</exception>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (string[] separator, StringSplitOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(string[] separator, valuetype System.StringSplitOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Split(System.String[],System.StringSplitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As String(), options As StringSplitOptions) As String()" />
      <MemberSignature Language="F#" Value="member this.Split : string[] * StringSplitOptions -&gt; string[]" Usage="var.Split (separator, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(cli::array &lt;System::String ^&gt; ^ separator, StringSplitOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String[]" />
        <Parameter Name="options" Type="System.StringSplitOptions" />
      </Parameters>
      <Docs>
        <param name="separator">An array of strings that delimit the substrings in this string, an empty array containing no delimiters, or null. </param>
        <param name="options">Specify <see cref="F:System.StringSplitOptions.RemoveEmptyEntries"></see> to omit empty array elements from the array returned, or <see cref="F:System.StringSplitOptions.None"></see> to include empty array elements in the array returned. </param>
        <summary>Returns a <see cref="T:System.String" /> array containing the substrings in this string that are delimited by elements of a specified <see cref="T:System.String" /> array. A parameter specifies whether to return empty array elements.</summary>
        <returns>An array whose elements contain the substrings in this string that are delimited by one or more strings in separator. For more information, see the Remarks section.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">options is not one of the <see cref="T:System.StringSplitOptions"></see> values.</exception>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (char[] separator, int count, StringSplitOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(char[] separator, int32 count, valuetype System.StringSplitOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Split(System.Char[],System.Int32,System.StringSplitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As Char(), count As Integer, options As StringSplitOptions) As String()" />
      <MemberSignature Language="F#" Value="member this.Split : char[] * int * StringSplitOptions -&gt; string[]" Usage="var.Split (separator, count, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(cli::array &lt;char&gt; ^ separator, int count, StringSplitOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char[]" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.StringSplitOptions" />
      </Parameters>
      <Docs>
        <param name="separator">An array of Unicode characters that delimit the substrings in this string, an empty array containing no delimiters, or null. </param>
        <param name="count">The maximum number of substrings to return. </param>
        <param name="options">Specify <see cref="F:System.StringSplitOptions.RemoveEmptyEntries"></see> to omit empty array elements from the array returned, or <see cref="F:System.StringSplitOptions.None"></see> to include empty array elements in the array returned. </param>
        <summary>Returns a <see cref="T:System.String" /> array containing the substrings in this string that are delimited by elements of a specified <see cref="T:System.Char" /> array. Parameters specify the maximum number of substrings to return and whether to return empty array elements.</summary>
        <returns>An array whose elements contain the substrings in this stringthat are delimited by one or more characters in separator. For more information, see the Remarks section.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">options is not one of the <see cref="T:System.StringSplitOptions"></see> values.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">count is negative. </exception>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (string[] separator, int count, StringSplitOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(string[] separator, int32 count, valuetype System.StringSplitOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Split(System.String[],System.Int32,System.StringSplitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As String(), count As Integer, options As StringSplitOptions) As String()" />
      <MemberSignature Language="F#" Value="member this.Split : string[] * int * StringSplitOptions -&gt; string[]" Usage="var.Split (separator, count, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(cli::array &lt;System::String ^&gt; ^ separator, int count, StringSplitOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String[]" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.StringSplitOptions" />
      </Parameters>
      <Docs>
        <param name="separator">An array of strings that delimit the substrings in this string, an empty array containing no delimiters, or null. </param>
        <param name="count">The maximum number of substrings to return. </param>
        <param name="options">Specify <see cref="F:System.StringSplitOptions.RemoveEmptyEntries"></see> to omit empty array elements from the array returned, or <see cref="F:System.StringSplitOptions.None"></see> to include empty array elements in the array returned. </param>
        <summary>Returns a <see cref="T:System.String" /> array containing the substrings in this string that are delimited by elements of a specified <see cref="T:System.String" /> array. Parameters specify the maximum number of substrings to return and whether to return empty array elements.</summary>
        <returns>An array whose elements contain the substrings in this string that are delimited by one or more strings in separator. For more information, see the Remarks section.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">options is not one of the <see cref="T:System.StringSplitOptions"></see> values.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">count is negative. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public bool StartsWith (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool StartsWith(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.StartsWith(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartsWith (value As String) As Boolean" />
      <MemberSignature Language="F#" Value="member this.StartsWith : string -&gt; bool" Usage="var.StartsWith value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool StartsWith(System::String ^ value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool StartsWith(Platform::String ^ value);" />
      <MemberSignature Language="C++ WINRT" Value="bool StartsWith(std::wstring const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.String"></see> to compare. </param>
        <summary>Determines whether the beginning of this instance matches the specified string.</summary>
        <returns>true if value matches the beginning of this string; otherwise, false.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public bool StartsWith (string value, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool StartsWith(string value, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.StartsWith(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartsWith (value As String, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="F#" Value="member this.StartsWith : string * StringComparison -&gt; bool" Usage="var.StartsWith (value, comparisonType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool StartsWith(System::String ^ value, StringComparison comparisonType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.String"></see> object to compare to. </param>
        <param name="comparisonType">One of the <see cref="T:System.StringComparison"></see> values that determines how this string and value are compared. </param>
        <summary>Determines whether the beginning of this string matches the specified string when compared using the specified comparison option.</summary>
        <returns>true if the value parameter matches the beginning of this string; otherwise, false.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">comparisonType is not a <see cref="T:System.StringComparison"></see> value.</exception>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public bool StartsWith (string value, bool ignoreCase, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool StartsWith(string value, bool ignoreCase, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.StartsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartsWith (value As String, ignoreCase As Boolean, culture As CultureInfo) As Boolean" />
      <MemberSignature Language="F#" Value="member this.StartsWith : string * bool * System.Globalization.CultureInfo -&gt; bool" Usage="var.StartsWith (value, ignoreCase, culture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool StartsWith(System::String ^ value, bool ignoreCase, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.String"></see> object to compare. </param>
        <param name="ignoreCase">true to ignore case when comparing this string and value; otherwise, false.</param>
        <param name="culture">Cultural information that determines how this string and value are compared. If culture is null, the current culture is used.</param>
        <summary>Determines whether the beginning of this string matches the specified string when compared using the specified culture.</summary>
        <returns>true if the value parameter matches the beginning of this string; otherwise, false.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">value is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public string Substring (int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Substring(int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Substring(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Substring (startIndex As Integer) As String" />
      <MemberSignature Language="F#" Value="member this.Substring : int -&gt; string" Usage="var.Substring startIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Substring(int startIndex);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::String ^ Substring(int startIndex);" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring Substring(int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startIndex">The starting character position of a substring in this instance. </param>
        <summary>Retrieves a substring from this instance. The substring starts at a specified character position.</summary>
        <returns>A <see cref="T:System.String"></see> object equivalent to the substring that begins at startIndex in this instance, or <see cref="F:System.String.Empty"></see> if startIndex is equal to the length of this instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">startIndex is less than zero or greater than the length of this instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public string Substring (int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Substring(int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Substring(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Substring (startIndex As Integer, length As Integer) As String" />
      <MemberSignature Language="F#" Value="member this.Substring : int * int -&gt; string" Usage="var.Substring (startIndex, length)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Substring(int startIndex, int length);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::String ^ Substring(int startIndex, int length);" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring Substring(int startIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startIndex">The index of the start of the substring. </param>
        <param name="length">The number of characters in the substring. </param>
        <summary>Retrieves a substring from this instance. The substring starts at a specified character position and has a specified length.</summary>
        <returns>A <see cref="T:System.String"></see> equivalent to the substring of length length that begins at startIndex in this instance, or <see cref="F:System.String.Empty"></see> if startIndex is equal to the length of this instance and length is zero.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">startIndex plus length indicates a position not within this instance.-or- startIndex or length is less than zero. </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Char&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;char&gt; IEnumerable&lt;char&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;char&gt; System.Collections.Generic.IEnumerable&lt;System.Char&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.System#Collections#Generic#IEnumerable&lt;System#Char&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of Char) Implements IEnumerable(Of Char).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;char&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Char&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;char&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberSignature Language="C++ CX" Value=" virtual int System.IComparable.CompareTo(Platform::Object ^ obj) = IComparable::CompareTo;" />
      <MemberSignature Language="C++ WINRT" Value="int System.IComparable.CompareTo(winrt::Windows::Foundation::IInspectable const &amp; obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type conversionType, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type conversionType, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToType (conversionType As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ conversionType, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conversionType" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="conversionType">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToCharArray">
      <MemberSignature Language="C#" Value="public char[] ToCharArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance char[] ToCharArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.ToCharArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToCharArray () As Char()" />
      <MemberSignature Language="F#" Value="member this.ToCharArray : unit -&gt; char[]" Usage="var.ToCharArray " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;char&gt; ^ ToCharArray();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::Array &lt;char16&gt; ^ ToCharArray();" />
      <MemberSignature Language="C++ WINRT" Value="std::Array &lt;char&gt; ToCharArray();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Copies the characters in this instance to a Unicode character array.</summary>
        <returns>A Unicode character array whose elements are the individual characters of this instance. If this instance is an empty string, the returned array is empty and has a zero length.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToCharArray">
      <MemberSignature Language="C#" Value="public char[] ToCharArray (int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance char[] ToCharArray(int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.ToCharArray(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToCharArray (startIndex As Integer, length As Integer) As Char()" />
      <MemberSignature Language="F#" Value="member this.ToCharArray : int * int -&gt; char[]" Usage="var.ToCharArray (startIndex, length)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;char&gt; ^ ToCharArray(int startIndex, int length);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::Array &lt;char16&gt; ^ ToCharArray(int startIndex, int length);" />
      <MemberSignature Language="C++ WINRT" Value="std::Array &lt;char&gt; ToCharArray(int startIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startIndex">The starting position of a substring in this instance. </param>
        <param name="length">The length of the substring in this instance. </param>
        <summary>Copies the characters in a specified substring in this instance to a Unicode character array.</summary>
        <returns>A Unicode character array whose elements are the length number of characters in this instance starting from character position startIndex.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">startIndex or length is less than zero.-or- startIndex plus length is greater than the length of this instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public string ToLower ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToLower() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.ToLower" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLower () As String" />
      <MemberSignature Language="F#" Value="member this.ToLower : unit -&gt; string" Usage="var.ToLower " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToLower();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::String ^ ToLower();" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring ToLower();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a copy of this <see cref="T:System.String" /> converted to lowercase, using the casing rules of the current culture.</summary>
        <returns>A <see cref="T:System.String"></see> in lowercase.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public string ToLower (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToLower(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.ToLower(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLower (culture As CultureInfo) As String" />
      <MemberSignature Language="F#" Value="member this.ToLower : System.Globalization.CultureInfo -&gt; string" Usage="var.ToLower culture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToLower(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">A <see cref="T:System.Globalization.CultureInfo"></see> object that supplies culture-specific casing rules. </param>
        <summary>Returns a copy of this <see cref="T:System.String" /> converted to lowercase, using the casing rules of the specified culture.</summary>
        <returns>A <see cref="T:System.String"></see> in lowercase.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">culture is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ToLowerInvariant">
      <MemberSignature Language="C#" Value="public string ToLowerInvariant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToLowerInvariant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.ToLowerInvariant" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLowerInvariant () As String" />
      <MemberSignature Language="F#" Value="member this.ToLowerInvariant : unit -&gt; string" Usage="var.ToLowerInvariant " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToLowerInvariant();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::String ^ ToLowerInvariant();" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring ToLowerInvariant();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a copy of this <see cref="T:System.String" /> object converted to lowercase using the casing rules of the invariant culture.</summary>
        <returns>A <see cref="T:System.String"></see> object in lowercase.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="var.ToString " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override Platform::String ^ ToString();" />
      <MemberSignature Language="C++ WINRT" Value=" override std::wstring ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Return the string representation of this value.
            </summary>
        <returns>the string representation of this value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public string ToUpper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToUpper() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.ToUpper" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUpper () As String" />
      <MemberSignature Language="F#" Value="member this.ToUpper : unit -&gt; string" Usage="var.ToUpper " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToUpper();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::String ^ ToUpper();" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring ToUpper();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a copy of this <see cref="T:System.String" /> converted to uppercase, using the casing rules of the current culture.</summary>
        <returns>A <see cref="T:System.String"></see> in uppercase.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public string ToUpper (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToUpper(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.ToUpper(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUpper (culture As CultureInfo) As String" />
      <MemberSignature Language="F#" Value="member this.ToUpper : System.Globalization.CultureInfo -&gt; string" Usage="var.ToUpper culture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToUpper(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">A <see cref="T:System.Globalization.CultureInfo"></see> object that supplies culture-specific casing rules. </param>
        <summary>Returns a copy of this <see cref="T:System.String" /> converted to uppercase, using the casing rules of the specified culture.</summary>
        <returns>A <see cref="T:System.String"></see> in uppercase.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">culture is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUpperInvariant">
      <MemberSignature Language="C#" Value="public string ToUpperInvariant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToUpperInvariant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.ToUpperInvariant" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUpperInvariant () As String" />
      <MemberSignature Language="F#" Value="member this.ToUpperInvariant : unit -&gt; string" Usage="var.ToUpperInvariant " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToUpperInvariant();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::String ^ ToUpperInvariant();" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring ToUpperInvariant();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a copy of this <see cref="T:System.String" /> object converted to uppercase using the casing rules of the invariant culture.</summary>
        <returns>A <see cref="T:System.String"></see> object in uppercase.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public string Trim ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Trim() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Trim" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim () As String" />
      <MemberSignature Language="F#" Value="member this.Trim : unit -&gt; string" Usage="var.Trim " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Trim();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::String ^ Trim();" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring Trim();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all occurrences of white space characters from the beginning and end of this instance.</summary>
        <returns>A new <see cref="T:System.String"></see> equivalent to this instance after white space characters are removed from the beginning and end.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public string Trim (params char[] trimChars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Trim(char[] trimChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.Trim(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim (ParamArray trimChars As Char()) As String" />
      <MemberSignature Language="F#" Value="member this.Trim : char[] -&gt; string" Usage="var.Trim trimChars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Trim(... cli::array &lt;char&gt; ^ trimChars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trimChars" Type="System.Char[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="trimChars">An array of Unicode characters to be removed or null. </param>
        <summary>Removes all occurrences of a set of characters specified in an array from the beginning and end of this instance.</summary>
        <returns>The <see cref="T:System.String"></see> that remains after all occurrences of the characters in trimChars are removed from the beginning and end of this instance. If trimChars is null, white space characters are removed instead.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimEnd">
      <MemberSignature Language="C#" Value="public string TrimEnd (params char[] trimChars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string TrimEnd(char[] trimChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.TrimEnd(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimEnd (ParamArray trimChars As Char()) As String" />
      <MemberSignature Language="F#" Value="member this.TrimEnd : char[] -&gt; string" Usage="var.TrimEnd trimChars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ TrimEnd(... cli::array &lt;char&gt; ^ trimChars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trimChars" Type="System.Char[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="trimChars">An array of Unicode characters to be removed or null. </param>
        <summary>Removes all occurrences of a set of characters specified in an array from the end of this instance.</summary>
        <returns>The <see cref="T:System.String"></see> that remains after all occurrences of the characters in trimChars are removed from the end. If trimChars is null, white space characters are removed instead.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimStart">
      <MemberSignature Language="C#" Value="public string TrimStart (params char[] trimChars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string TrimStart(char[] trimChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.Var.TrimStart(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimStart (ParamArray trimChars As Char()) As String" />
      <MemberSignature Language="F#" Value="member this.TrimStart : char[] -&gt; string" Usage="var.TrimStart trimChars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ TrimStart(... cli::array &lt;char&gt; ^ trimChars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trimChars" Type="System.Char[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="trimChars">An array of Unicode characters to be removed or null. </param>
        <summary>Removes all occurrences of a set of characters specified in an array from the beginning of this instance.</summary>
        <returns>The <see cref="T:System.String"></see> that remains after all occurrences of characters in trimChars are removed from the beginning. If trimChars is null, white space characters are removed instead.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>