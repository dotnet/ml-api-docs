<Type Name="SelectRows" FullName="Microsoft.ML.Runtime.EntryPoints.SelectRows">
  <TypeSignature Language="C#" Value="public static class SelectRows" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SelectRows extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.EntryPoints.SelectRows" />
  <TypeSignature Language="VB.NET" Value="Public Class SelectRows" />
  <TypeSignature Language="F#" Value="type SelectRows = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class SelectRows abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class SelectRows abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class SelectRows abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FilterByRange">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput FilterByRange (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.RangeFilter.Arguments input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.EntryPoints.CommonOutputs/TransformOutput FilterByRange(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.RangeFilter/Arguments input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.EntryPoints.SelectRows.FilterByRange(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.RangeFilter.Arguments)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FilterByRange (env As IHostEnvironment, input As RangeFilter.Arguments) As CommonOutputs.TransformOutput" />
      <MemberSignature Language="F#" Value="static member FilterByRange : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.RangeFilter.Arguments -&gt; Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput" Usage="Microsoft.ML.Runtime.EntryPoints.SelectRows.FilterByRange (env, input)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::ML::Runtime::EntryPoints::CommonOutputs::TransformOutput ^ FilterByRange(Microsoft::ML::Runtime::IHostEnvironment ^ env, Microsoft::ML::Runtime::Data::RangeFilter::Arguments ^ input);" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::ML::Runtime::EntryPoints::CommonOutputs::TransformOutput FilterByRange(Microsoft::ML::Runtime::IHostEnvironment const &amp; env, Microsoft::ML::Runtime::Data::RangeFilter::Arguments const &amp; input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/EntryPoint(Desc="Filters a dataview on a column of type Single, Double or Key (contiguous). Keeps the values that are in the specified min/max range. NaNs are always filtered out. If the input is a Key type, the min/max are considered percentages of the number of values.", Name="Transforms.RowRangeFilter", ShortName="RangeFilter", UserName="Range Filter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.RangeFilter+Arguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipAndTakeFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput SkipAndTakeFilter (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.SkipTakeFilter.Arguments input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.EntryPoints.CommonOutputs/TransformOutput SkipAndTakeFilter(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.SkipTakeFilter/Arguments input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.EntryPoints.SelectRows.SkipAndTakeFilter(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.SkipTakeFilter.Arguments)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SkipAndTakeFilter (env As IHostEnvironment, input As SkipTakeFilter.Arguments) As CommonOutputs.TransformOutput" />
      <MemberSignature Language="F#" Value="static member SkipAndTakeFilter : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.SkipTakeFilter.Arguments -&gt; Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput" Usage="Microsoft.ML.Runtime.EntryPoints.SelectRows.SkipAndTakeFilter (env, input)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::ML::Runtime::EntryPoints::CommonOutputs::TransformOutput ^ SkipAndTakeFilter(Microsoft::ML::Runtime::IHostEnvironment ^ env, Microsoft::ML::Runtime::Data::SkipTakeFilter::Arguments ^ input);" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::ML::Runtime::EntryPoints::CommonOutputs::TransformOutput SkipAndTakeFilter(Microsoft::ML::Runtime::IHostEnvironment const &amp; env, Microsoft::ML::Runtime::Data::SkipTakeFilter::Arguments const &amp; input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/EntryPoint(Desc="Allows limiting input to a subset of rows at an optional offset.  Can be used to implement data paging.", Name="Transforms.RowSkipAndTakeFilter", ShortName="SkipTake", UserName="Skip and Take Filter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.SkipTakeFilter+Arguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput SkipFilter (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.SkipTakeFilter.SkipArguments input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.EntryPoints.CommonOutputs/TransformOutput SkipFilter(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.SkipTakeFilter/SkipArguments input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.EntryPoints.SelectRows.SkipFilter(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.SkipTakeFilter.SkipArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SkipFilter (env As IHostEnvironment, input As SkipTakeFilter.SkipArguments) As CommonOutputs.TransformOutput" />
      <MemberSignature Language="F#" Value="static member SkipFilter : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.SkipTakeFilter.SkipArguments -&gt; Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput" Usage="Microsoft.ML.Runtime.EntryPoints.SelectRows.SkipFilter (env, input)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::ML::Runtime::EntryPoints::CommonOutputs::TransformOutput ^ SkipFilter(Microsoft::ML::Runtime::IHostEnvironment ^ env, Microsoft::ML::Runtime::Data::SkipTakeFilter::SkipArguments ^ input);" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::ML::Runtime::EntryPoints::CommonOutputs::TransformOutput SkipFilter(Microsoft::ML::Runtime::IHostEnvironment const &amp; env, Microsoft::ML::Runtime::Data::SkipTakeFilter::SkipArguments const &amp; input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/EntryPoint(Desc="Allows limiting input to a subset of rows by skipping a number of rows.", Name="Transforms.RowSkipFilter", ShortName="Skip", UserName="Skip Filter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.SkipTakeFilter+SkipArguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TakeFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput TakeFilter (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.SkipTakeFilter.TakeArguments input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.EntryPoints.CommonOutputs/TransformOutput TakeFilter(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.SkipTakeFilter/TakeArguments input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.EntryPoints.SelectRows.TakeFilter(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.SkipTakeFilter.TakeArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TakeFilter (env As IHostEnvironment, input As SkipTakeFilter.TakeArguments) As CommonOutputs.TransformOutput" />
      <MemberSignature Language="F#" Value="static member TakeFilter : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.SkipTakeFilter.TakeArguments -&gt; Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput" Usage="Microsoft.ML.Runtime.EntryPoints.SelectRows.TakeFilter (env, input)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::ML::Runtime::EntryPoints::CommonOutputs::TransformOutput ^ TakeFilter(Microsoft::ML::Runtime::IHostEnvironment ^ env, Microsoft::ML::Runtime::Data::SkipTakeFilter::TakeArguments ^ input);" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::ML::Runtime::EntryPoints::CommonOutputs::TransformOutput TakeFilter(Microsoft::ML::Runtime::IHostEnvironment const &amp; env, Microsoft::ML::Runtime::Data::SkipTakeFilter::TakeArguments const &amp; input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/EntryPoint(Desc="Allows limiting input to a subset of rows by taking N first rows.", Name="Transforms.RowTakeFilter", ShortName="Take", UserName="Take Filter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.SkipTakeFilter+TakeArguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>