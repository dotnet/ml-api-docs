<Type Name="ICpuBuffer&lt;T&gt;" FullName="Microsoft.ML.Runtime.Internal.CpuMath.ICpuBuffer&lt;T&gt;">
  <TypeSignature Language="C#" Value="public interface ICpuBuffer&lt;T&gt; : IDisposable, System.Collections.Generic.IEnumerable&lt;T&gt; where T : struct" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICpuBuffer`1&lt;struct .ctor (class System.ValueType) T&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Internal.CpuMath.ICpuBuffer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICpuBuffer(Of T)&#xA;Implements IDisposable, IEnumerable(Of T)" />
  <TypeSignature Language="F#" Value="type ICpuBuffer&lt;'T (requires 'T : struct)&gt; = interface&#xA;    interface seq&lt;'T (requires 'T : struct)&gt;&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public void CopyFrom (T[] src, ref int ivSrc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(!T[] src, int32&amp; ivSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.CpuMath.ICpuBuffer`1.CopyFrom(`0[],System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyFrom (src As T(), ByRef ivSrc As Integer)" />
      <MemberSignature Language="F#" Value="abstract member CopyFrom : 'T[] *  -&gt; unit" Usage="iCpuBuffer.CopyFrom (src, ivSrc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="T[]" />
        <Parameter Name="ivSrc" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <param name="ivSrc">To be added.</param>
        <summary>
            Copy values from the given src array into this buffer, starting at the given index in src,
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] dst, ref int ivDst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] dst, int32&amp; ivDst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.CpuMath.ICpuBuffer`1.CopyTo(`0[],System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dst As T(), ByRef ivDst As Integer)" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] *  -&gt; unit" Usage="iCpuBuffer.CopyTo (dst, ivDst)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="T[]" />
        <Parameter Name="ivDst" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="dst">To be added.</param>
        <param name="ivDst">To be added.</param>
        <summary>
            Copy the values into dst, starting at slot ivDst and advancing ivDst.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public void Randomize (Func&lt;T&gt; rand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Randomize(class System.Func`1&lt;!T&gt; rand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.CpuMath.ICpuBuffer`1.Randomize(System.Func{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize (rand As Func(Of T))" />
      <MemberSignature Language="F#" Value="abstract member Randomize : Func&lt;'T (requires 'T : struct)&gt; -&gt; unit" Usage="iCpuBuffer.Randomize rand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rand" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="rand">To be added.</param>
        <summary>
            Assign random values using the given random function.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueCount">
      <MemberSignature Language="C#" Value="public int ValueCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ValueCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Internal.CpuMath.ICpuBuffer`1.ValueCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueCount As Integer" />
      <MemberSignature Language="F#" Value="member this.ValueCount : int" Usage="Microsoft.ML.Runtime.Internal.CpuMath.ICpuBuffer&lt;'T (requires 'T : struct)&gt;.ValueCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public void Zero ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Zero() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.CpuMath.ICpuBuffer`1.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Sub Zero ()" />
      <MemberSignature Language="F#" Value="abstract member Zero : unit -&gt; unit" Usage="iCpuBuffer.Zero " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Set all values to zero.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>