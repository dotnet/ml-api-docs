<Type Name="IParallelTraining" FullName="Microsoft.ML.Runtime.FastTree.IParallelTraining">
  <TypeSignature Language="C#" Value="public interface IParallelTraining" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IParallelTraining" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.FastTree.IParallelTraining" />
  <TypeSignature Language="VB.NET" Value="Public Interface IParallelTraining" />
  <TypeSignature Language="F#" Value="type IParallelTraining = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Interface used for parallel training.
            Mainly contains three parts:
            1. interactive with IO: <see href="GetLocalBinConstructionFeatures" />, <see href="SyncGlobalBoundary" />.
               Data will be partitioned by rows in Data parallel and Voting Parallel.
               To speed up the find bin process, it let different workers to find bins for different features.
               Then perform global sync up.
               In Feature parallel, every machines holds all data, so this is unneeded.
            2. interactive with TreeLearner: <see href="InitIteration" />, <see href="CacheHistogram" />, <see href="IsNeedFindLocalBestSplit" />, 
                   <see href="IsSkipNonSplittableHistogram" />, <see href="FindGlobalBestSplit" />, <see href="GetGlobalDataCountInLeaf" />, <see href="PerformGlobalSplit" />.
               A full process is:
                   Use <see href="InitIteration" /> to alter local active features.
                   Use <see href="GetGlobalDataCountInLeaf" /> to check smaller leaf and larger leaf.
                   Use <see href="CacheHistogram" />, <see href="IsNeedFindLocalBestSplit" /> and <see href="IsSkipNonSplittableHistogram" /> to interactive with Feature histograms.
                   Use <see href="FindGlobalBestSplit" /> to sync up global best split
                   Use <see href="PerformGlobalSplit" /> to record global num_data in leaves.
            3. interactive with Application : <see href="GlobalMean" />.
               Output of leaves is calculated by newton step ( - sum(first_order_gradients) / sum(second_order_gradients)).
               If data is partitioned by row, it needs to a sync up for these sum result.
               So It needs to call this to get the real output of leaves.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CacheHistogram">
      <MemberSignature Language="C#" Value="public void CacheHistogram (bool isSmallerLeaf, int featureIdx, int subfeature, Microsoft.ML.Runtime.FastTree.Internal.SufficientStatsBase sufficientStatsBase, bool hasWeights);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CacheHistogram(bool isSmallerLeaf, int32 featureIdx, int32 subfeature, class Microsoft.ML.Runtime.FastTree.Internal.SufficientStatsBase sufficientStatsBase, bool hasWeights) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.IParallelTraining.CacheHistogram(System.Boolean,System.Int32,System.Int32,Microsoft.ML.Runtime.FastTree.Internal.SufficientStatsBase,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member CacheHistogram : bool * int * int * Microsoft.ML.Runtime.FastTree.Internal.SufficientStatsBase * bool -&gt; unit" Usage="iParallelTraining.CacheHistogram (isSmallerLeaf, featureIdx, subfeature, sufficientStatsBase, hasWeights)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isSmallerLeaf" Type="System.Boolean" />
        <Parameter Name="featureIdx" Type="System.Int32" />
        <Parameter Name="subfeature" Type="System.Int32" />
        <Parameter Name="sufficientStatsBase" Type="Microsoft.ML.Runtime.FastTree.Internal.SufficientStatsBase" />
        <Parameter Name="hasWeights" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isSmallerLeaf">To be added.</param>
        <param name="featureIdx">To be added.</param>
        <param name="subfeature">To be added.</param>
        <param name="sufficientStatsBase">To be added.</param>
        <param name="hasWeights">To be added.</param>
        <summary>
            Cache Histogram, it will be used for global aggregate.
            Only used in Data parallel and Voting Parallel
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalizeEnvironment">
      <MemberSignature Language="C#" Value="public void FinalizeEnvironment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalizeEnvironment() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.IParallelTraining.FinalizeEnvironment" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalizeEnvironment ()" />
      <MemberSignature Language="F#" Value="abstract member FinalizeEnvironment : unit -&gt; unit" Usage="iParallelTraining.FinalizeEnvironment " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Finalize the network.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalizeIteration">
      <MemberSignature Language="C#" Value="public void FinalizeIteration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalizeIteration() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.IParallelTraining.FinalizeIteration" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalizeIteration ()" />
      <MemberSignature Language="F#" Value="abstract member FinalizeIteration : unit -&gt; unit" Usage="iParallelTraining.FinalizeIteration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Finalize after trained one tree.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalizeTreeLearner">
      <MemberSignature Language="C#" Value="public void FinalizeTreeLearner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalizeTreeLearner() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.IParallelTraining.FinalizeTreeLearner" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalizeTreeLearner ()" />
      <MemberSignature Language="F#" Value="abstract member FinalizeTreeLearner : unit -&gt; unit" Usage="iParallelTraining.FinalizeTreeLearner " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Finalize while tree learner is freed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindGlobalBestSplit">
      <MemberSignature Language="C#" Value="public void FindGlobalBestSplit (Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.LeafSplitCandidates smallerChildSplitCandidates, Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.LeafSplitCandidates largerChildSplitCandidates, Microsoft.ML.Runtime.FastTree.FindBestThresholdFromRawArrayFun findFunction, Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.SplitInfo[] bestSplits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FindGlobalBestSplit(class Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner/LeafSplitCandidates smallerChildSplitCandidates, class Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner/LeafSplitCandidates largerChildSplitCandidates, class Microsoft.ML.Runtime.FastTree.FindBestThresholdFromRawArrayFun findFunction, valuetype Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner/SplitInfo[] bestSplits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.IParallelTraining.FindGlobalBestSplit(Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.LeafSplitCandidates,Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.LeafSplitCandidates,Microsoft.ML.Runtime.FastTree.FindBestThresholdFromRawArrayFun,Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.SplitInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub FindGlobalBestSplit (smallerChildSplitCandidates As LeastSquaresRegressionTreeLearner.LeafSplitCandidates, largerChildSplitCandidates As LeastSquaresRegressionTreeLearner.LeafSplitCandidates, findFunction As FindBestThresholdFromRawArrayFun, bestSplits As LeastSquaresRegressionTreeLearner.SplitInfo())" />
      <MemberSignature Language="F#" Value="abstract member FindGlobalBestSplit : Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.LeafSplitCandidates * Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.LeafSplitCandidates * Microsoft.ML.Runtime.FastTree.FindBestThresholdFromRawArrayFun * Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.SplitInfo[] -&gt; unit" Usage="iParallelTraining.FindGlobalBestSplit (smallerChildSplitCandidates, largerChildSplitCandidates, findFunction, bestSplits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="smallerChildSplitCandidates" Type="Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner+LeafSplitCandidates" />
        <Parameter Name="largerChildSplitCandidates" Type="Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner+LeafSplitCandidates" />
        <Parameter Name="findFunction" Type="Microsoft.ML.Runtime.FastTree.FindBestThresholdFromRawArrayFun" />
        <Parameter Name="bestSplits" Type="Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner+SplitInfo[]" />
      </Parameters>
      <Docs>
        <param name="smallerChildSplitCandidates">To be added.</param>
        <param name="largerChildSplitCandidates">To be added.</param>
        <param name="findFunction">To be added.</param>
        <param name="bestSplits">To be added.</param>
        <summary>
            Find best split among machines.
            will save result in bestSplits.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalDataCountInLeaf">
      <MemberSignature Language="C#" Value="public void GetGlobalDataCountInLeaf (int leafIdx, ref int cnt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetGlobalDataCountInLeaf(int32 leafIdx, int32&amp; cnt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.IParallelTraining.GetGlobalDataCountInLeaf(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetGlobalDataCountInLeaf (leafIdx As Integer, ByRef cnt As Integer)" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalDataCountInLeaf : int *  -&gt; unit" Usage="iParallelTraining.GetGlobalDataCountInLeaf (leafIdx, cnt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leafIdx" Type="System.Int32" />
        <Parameter Name="cnt" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="leafIdx">To be added.</param>
        <param name="cnt">To be added.</param>
        <summary>
            Get global num_data on specific leaf.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalBinConstructionFeatures">
      <MemberSignature Language="C#" Value="public bool[] GetLocalBinConstructionFeatures (int numFeatures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool[] GetLocalBinConstructionFeatures(int32 numFeatures) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.IParallelTraining.GetLocalBinConstructionFeatures(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLocalBinConstructionFeatures (numFeatures As Integer) As Boolean()" />
      <MemberSignature Language="F#" Value="abstract member GetLocalBinConstructionFeatures : int -&gt; bool[]" Usage="iParallelTraining.GetLocalBinConstructionFeatures numFeatures" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numFeatures" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numFeatures">To be added.</param>
        <summary>
            Get indices of features that should be find bin in local.
            After construct local boundary, should call <see href="SyncGlobalBoundary" /> 
            to get boundaries for all features.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalMean">
      <MemberSignature Language="C#" Value="public double[] GlobalMean (Microsoft.ML.Runtime.FastTree.Internal.Dataset dataset, Microsoft.ML.Runtime.FastTree.Internal.RegressionTree tree, Microsoft.ML.Runtime.FastTree.Internal.DocumentPartitioning partitioning, double[] weights, bool filterZeroLambdas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64[] GlobalMean(class Microsoft.ML.Runtime.FastTree.Internal.Dataset dataset, class Microsoft.ML.Runtime.FastTree.Internal.RegressionTree tree, class Microsoft.ML.Runtime.FastTree.Internal.DocumentPartitioning partitioning, float64[] weights, bool filterZeroLambdas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.IParallelTraining.GlobalMean(Microsoft.ML.Runtime.FastTree.Internal.Dataset,Microsoft.ML.Runtime.FastTree.Internal.RegressionTree,Microsoft.ML.Runtime.FastTree.Internal.DocumentPartitioning,System.Double[],System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member GlobalMean : Microsoft.ML.Runtime.FastTree.Internal.Dataset * Microsoft.ML.Runtime.FastTree.Internal.RegressionTree * Microsoft.ML.Runtime.FastTree.Internal.DocumentPartitioning * double[] * bool -&gt; double[]" Usage="iParallelTraining.GlobalMean (dataset, tree, partitioning, weights, filterZeroLambdas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataset" Type="Microsoft.ML.Runtime.FastTree.Internal.Dataset" />
        <Parameter Name="tree" Type="Microsoft.ML.Runtime.FastTree.Internal.RegressionTree" />
        <Parameter Name="partitioning" Type="Microsoft.ML.Runtime.FastTree.Internal.DocumentPartitioning" />
        <Parameter Name="weights" Type="System.Double[]" />
        <Parameter Name="filterZeroLambdas" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataset">To be added.</param>
        <param name="tree">To be added.</param>
        <param name="partitioning">To be added.</param>
        <param name="weights">To be added.</param>
        <param name="filterZeroLambdas">To be added.</param>
        <summary>
            Get Global mean on different machines for data partitioning in tree.
            Used for calculating leaf output value.
            will return a array this is the mean output of all leaves.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitEnvironment">
      <MemberSignature Language="C#" Value="public void InitEnvironment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitEnvironment() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.IParallelTraining.InitEnvironment" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitEnvironment ()" />
      <MemberSignature Language="F#" Value="abstract member InitEnvironment : unit -&gt; unit" Usage="iParallelTraining.InitEnvironment " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Initialize the network connection.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitIteration">
      <MemberSignature Language="C#" Value="public void InitIteration (ref bool[] activeFeatures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitIteration(bool[]&amp; activeFeatures) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.IParallelTraining.InitIteration(System.Boolean[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitIteration (ByRef activeFeatures As Boolean())" />
      <MemberSignature Language="F#" Value="abstract member InitIteration :  -&gt; unit" Usage="iParallelTraining.InitIteration activeFeatures" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activeFeatures" Type="System.Boolean[]&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="activeFeatures">To be added.</param>
        <summary>
            Initialize every time before training a tree.
            will alter activeFeatures in Feature parallel. 
            Because it only need to find threshold for part of features in feature parallel.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitTreeLearner">
      <MemberSignature Language="C#" Value="public void InitTreeLearner (Microsoft.ML.Runtime.FastTree.Internal.Dataset trainData, int maxNumLeaves, int maxCatSplitPoints, ref int minDocInLeaf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitTreeLearner(class Microsoft.ML.Runtime.FastTree.Internal.Dataset trainData, int32 maxNumLeaves, int32 maxCatSplitPoints, int32&amp; minDocInLeaf) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.IParallelTraining.InitTreeLearner(Microsoft.ML.Runtime.FastTree.Internal.Dataset,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitTreeLearner (trainData As Dataset, maxNumLeaves As Integer, maxCatSplitPoints As Integer, ByRef minDocInLeaf As Integer)" />
      <MemberSignature Language="F#" Value="abstract member InitTreeLearner : Microsoft.ML.Runtime.FastTree.Internal.Dataset * int * int *  -&gt; unit" Usage="iParallelTraining.InitTreeLearner (trainData, maxNumLeaves, maxCatSplitPoints, minDocInLeaf)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainData" Type="Microsoft.ML.Runtime.FastTree.Internal.Dataset" />
        <Parameter Name="maxNumLeaves" Type="System.Int32" />
        <Parameter Name="maxCatSplitPoints" Type="System.Int32" />
        <Parameter Name="minDocInLeaf" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="trainData">To be added.</param>
        <param name="maxNumLeaves">To be added.</param>
        <param name="maxCatSplitPoints">To be added.</param>
        <param name="minDocInLeaf">To be added.</param>
        <summary>
            Initialize once while construct tree learner.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNeedFindLocalBestSplit">
      <MemberSignature Language="C#" Value="public bool IsNeedFindLocalBestSplit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsNeedFindLocalBestSplit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.IParallelTraining.IsNeedFindLocalBestSplit" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNeedFindLocalBestSplit () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsNeedFindLocalBestSplit : unit -&gt; bool" Usage="iParallelTraining.IsNeedFindLocalBestSplit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Only return False in Data parallel.
            Data parallel find best threshold after merged global histograms.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSkipNonSplittableHistogram">
      <MemberSignature Language="C#" Value="public bool IsSkipNonSplittableHistogram ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSkipNonSplittableHistogram() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.IParallelTraining.IsSkipNonSplittableHistogram" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSkipNonSplittableHistogram () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsSkipNonSplittableHistogram : unit -&gt; bool" Usage="iParallelTraining.IsSkipNonSplittableHistogram " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            True if need to skip non-splittable histogram. 
            Only will return False in Voting parallel. 
            That is because local doesn't have global histograms in Voting parallel,
            So the information about NonSplittable is not correct, and we cannot skip it. 
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformGlobalSplit">
      <MemberSignature Language="C#" Value="public void PerformGlobalSplit (int leaf, int lteChild, int gtChild, Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.SplitInfo splitInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformGlobalSplit(int32 leaf, int32 lteChild, int32 gtChild, valuetype Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner/SplitInfo splitInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.IParallelTraining.PerformGlobalSplit(System.Int32,System.Int32,System.Int32,Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.SplitInfo)" />
      <MemberSignature Language="F#" Value="abstract member PerformGlobalSplit : int * int * int * Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.SplitInfo -&gt; unit" Usage="iParallelTraining.PerformGlobalSplit (leaf, lteChild, gtChild, splitInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leaf" Type="System.Int32" />
        <Parameter Name="lteChild" Type="System.Int32" />
        <Parameter Name="gtChild" Type="System.Int32" />
        <Parameter Name="splitInfo" Type="Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner+SplitInfo" />
      </Parameters>
      <Docs>
        <param name="leaf">To be added.</param>
        <param name="lteChild">To be added.</param>
        <param name="gtChild">To be added.</param>
        <param name="splitInfo">To be added.</param>
        <summary>
            Used to record the global num_data on leaves.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncGlobalBoundary">
      <MemberSignature Language="C#" Value="public void SyncGlobalBoundary (int numFeatures, int maxBin, double[][] binUpperBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SyncGlobalBoundary(int32 numFeatures, int32 maxBin, float64[][] binUpperBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.IParallelTraining.SyncGlobalBoundary(System.Int32,System.Int32,System.Double[][])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SyncGlobalBoundary (numFeatures As Integer, maxBin As Integer, binUpperBounds As Double()())" />
      <MemberSignature Language="F#" Value="abstract member SyncGlobalBoundary : int * int * double[][] -&gt; unit" Usage="iParallelTraining.SyncGlobalBoundary (numFeatures, maxBin, binUpperBounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numFeatures" Type="System.Int32" />
        <Parameter Name="maxBin" Type="System.Int32" />
        <Parameter Name="binUpperBounds" Type="System.Double[][]" />
      </Parameters>
      <Docs>
        <param name="numFeatures">To be added.</param>
        <param name="maxBin">To be added.</param>
        <param name="binUpperBounds">To be added.</param>
        <summary>
            Sync Global feature bucket.
            used in Data parallel and Voting parallel.
            Data are partitioned by row. To speed up the Global find bin process, 
            we can let different workers construct Bin Boundary for different features, 
            then perform a global sync up.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>