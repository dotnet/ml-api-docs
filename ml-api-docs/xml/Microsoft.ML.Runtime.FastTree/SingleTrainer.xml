<Type Name="SingleTrainer" FullName="Microsoft.ML.Runtime.FastTree.SingleTrainer">
  <TypeSignature Language="C#" Value="public sealed class SingleTrainer : Microsoft.ML.Runtime.FastTree.IParallelTraining" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SingleTrainer extends System.Object implements class Microsoft.ML.Runtime.FastTree.IParallelTraining" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.FastTree.SingleTrainer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SingleTrainer&#xA;Implements IParallelTraining" />
  <TypeSignature Language="F#" Value="type SingleTrainer = class&#xA;    interface IParallelTraining" />
  <TypeSignature Language="C++ CLI" Value="public ref class SingleTrainer sealed : Microsoft::ML::Runtime::FastTree::IParallelTraining" />
  <TypeSignature Language="C++ CX" Value="public ref class SingleTrainer sealed : Microsoft::ML::Runtime::FastTree::IParallelTraining" />
  <TypeSignature Language="C++ WINRT" Value="class SingleTrainer sealed : Microsoft::ML::Runtime::FastTree::IParallelTraining" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.FastTree.IParallelTraining</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SingleTrainer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.SingleTrainer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SingleTrainer();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; SingleTrainer();" />
      <MemberSignature Language="C++ WINRT" Value=" SingleTrainer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheHistogram">
      <MemberSignature Language="C#" Value="public void CacheHistogram (bool isSmallerLeaf, int featureIdx, int subfeature, Microsoft.ML.Runtime.FastTree.Internal.SufficientStatsBase sufficientStatsBase, bool hasWeights);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CacheHistogram(bool isSmallerLeaf, int32 featureIdx, int32 subfeature, class Microsoft.ML.Runtime.FastTree.Internal.SufficientStatsBase sufficientStatsBase, bool hasWeights) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.SingleTrainer.CacheHistogram(System.Boolean,System.Int32,System.Int32,Microsoft.ML.Runtime.FastTree.Internal.SufficientStatsBase,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member CacheHistogram : bool * int * int * Microsoft.ML.Runtime.FastTree.Internal.SufficientStatsBase * bool -&gt; unit&#xA;override this.CacheHistogram : bool * int * int * Microsoft.ML.Runtime.FastTree.Internal.SufficientStatsBase * bool -&gt; unit" Usage="singleTrainer.CacheHistogram (isSmallerLeaf, featureIdx, subfeature, sufficientStatsBase, hasWeights)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CacheHistogram(bool isSmallerLeaf, int featureIdx, int subfeature, Microsoft::ML::Runtime::FastTree::Internal::SufficientStatsBase ^ sufficientStatsBase, bool hasWeights);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void CacheHistogram(bool isSmallerLeaf, int featureIdx, int subfeature, Microsoft::ML::Runtime::FastTree::Internal::SufficientStatsBase ^ sufficientStatsBase, bool hasWeights);" />
      <MemberSignature Language="C++ WINRT" Value="void CacheHistogram(bool isSmallerLeaf, int featureIdx, int subfeature, Microsoft::ML::Runtime::FastTree::Internal::SufficientStatsBase const &amp; sufficientStatsBase, bool hasWeights);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.FastTree.IParallelTraining.CacheHistogram(System.Boolean,System.Int32,System.Int32,Microsoft.ML.Runtime.FastTree.Internal.SufficientStatsBase,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isSmallerLeaf" Type="System.Boolean" />
        <Parameter Name="featureIdx" Type="System.Int32" />
        <Parameter Name="subfeature" Type="System.Int32" />
        <Parameter Name="sufficientStatsBase" Type="Microsoft.ML.Runtime.FastTree.Internal.SufficientStatsBase" />
        <Parameter Name="hasWeights" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isSmallerLeaf">To be added.</param>
        <param name="featureIdx">To be added.</param>
        <param name="subfeature">To be added.</param>
        <param name="sufficientStatsBase">To be added.</param>
        <param name="hasWeights">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalizeEnvironment">
      <MemberSignature Language="C#" Value="public void FinalizeEnvironment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalizeEnvironment() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.SingleTrainer.FinalizeEnvironment" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalizeEnvironment ()" />
      <MemberSignature Language="F#" Value="abstract member FinalizeEnvironment : unit -&gt; unit&#xA;override this.FinalizeEnvironment : unit -&gt; unit" Usage="singleTrainer.FinalizeEnvironment " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FinalizeEnvironment();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void FinalizeEnvironment();" />
      <MemberSignature Language="C++ WINRT" Value="void FinalizeEnvironment();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.FastTree.IParallelTraining.FinalizeEnvironment</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalizeIteration">
      <MemberSignature Language="C#" Value="public void FinalizeIteration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalizeIteration() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.SingleTrainer.FinalizeIteration" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalizeIteration ()" />
      <MemberSignature Language="F#" Value="abstract member FinalizeIteration : unit -&gt; unit&#xA;override this.FinalizeIteration : unit -&gt; unit" Usage="singleTrainer.FinalizeIteration " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FinalizeIteration();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void FinalizeIteration();" />
      <MemberSignature Language="C++ WINRT" Value="void FinalizeIteration();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.FastTree.IParallelTraining.FinalizeIteration</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalizeTreeLearner">
      <MemberSignature Language="C#" Value="public void FinalizeTreeLearner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalizeTreeLearner() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.SingleTrainer.FinalizeTreeLearner" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalizeTreeLearner ()" />
      <MemberSignature Language="F#" Value="abstract member FinalizeTreeLearner : unit -&gt; unit&#xA;override this.FinalizeTreeLearner : unit -&gt; unit" Usage="singleTrainer.FinalizeTreeLearner " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FinalizeTreeLearner();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void FinalizeTreeLearner();" />
      <MemberSignature Language="C++ WINRT" Value="void FinalizeTreeLearner();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.FastTree.IParallelTraining.FinalizeTreeLearner</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindGlobalBestSplit">
      <MemberSignature Language="C#" Value="public void FindGlobalBestSplit (Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.LeafSplitCandidates smallerChildSplitCandidates, Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.LeafSplitCandidates largerChildSplitCandidates, Microsoft.ML.Runtime.FastTree.FindBestThresholdFromRawArrayFun findFunction, Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.SplitInfo[] bestSplits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FindGlobalBestSplit(class Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner/LeafSplitCandidates smallerChildSplitCandidates, class Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner/LeafSplitCandidates largerChildSplitCandidates, class Microsoft.ML.Runtime.FastTree.FindBestThresholdFromRawArrayFun findFunction, valuetype Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner/SplitInfo[] bestSplits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.SingleTrainer.FindGlobalBestSplit(Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.LeafSplitCandidates,Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.LeafSplitCandidates,Microsoft.ML.Runtime.FastTree.FindBestThresholdFromRawArrayFun,Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.SplitInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub FindGlobalBestSplit (smallerChildSplitCandidates As LeastSquaresRegressionTreeLearner.LeafSplitCandidates, largerChildSplitCandidates As LeastSquaresRegressionTreeLearner.LeafSplitCandidates, findFunction As FindBestThresholdFromRawArrayFun, bestSplits As LeastSquaresRegressionTreeLearner.SplitInfo())" />
      <MemberSignature Language="F#" Value="abstract member FindGlobalBestSplit : Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.LeafSplitCandidates * Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.LeafSplitCandidates * Microsoft.ML.Runtime.FastTree.FindBestThresholdFromRawArrayFun * Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.SplitInfo[] -&gt; unit&#xA;override this.FindGlobalBestSplit : Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.LeafSplitCandidates * Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.LeafSplitCandidates * Microsoft.ML.Runtime.FastTree.FindBestThresholdFromRawArrayFun * Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.SplitInfo[] -&gt; unit" Usage="singleTrainer.FindGlobalBestSplit (smallerChildSplitCandidates, largerChildSplitCandidates, findFunction, bestSplits)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FindGlobalBestSplit(Microsoft::ML::Runtime::FastTree::Internal::LeastSquaresRegressionTreeLearner::LeafSplitCandidates ^ smallerChildSplitCandidates, Microsoft::ML::Runtime::FastTree::Internal::LeastSquaresRegressionTreeLearner::LeafSplitCandidates ^ largerChildSplitCandidates, Microsoft::ML::Runtime::FastTree::FindBestThresholdFromRawArrayFun ^ findFunction, cli::array &lt;Microsoft::ML::Runtime::FastTree::Internal::LeastSquaresRegressionTreeLearner::SplitInfo&gt; ^ bestSplits);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.FastTree.IParallelTraining.FindGlobalBestSplit(Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.LeafSplitCandidates,Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.LeafSplitCandidates,Microsoft.ML.Runtime.FastTree.FindBestThresholdFromRawArrayFun,Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.SplitInfo[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="smallerChildSplitCandidates" Type="Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner+LeafSplitCandidates" />
        <Parameter Name="largerChildSplitCandidates" Type="Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner+LeafSplitCandidates" />
        <Parameter Name="findFunction" Type="Microsoft.ML.Runtime.FastTree.FindBestThresholdFromRawArrayFun" />
        <Parameter Name="bestSplits" Type="Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner+SplitInfo[]" />
      </Parameters>
      <Docs>
        <param name="smallerChildSplitCandidates">To be added.</param>
        <param name="largerChildSplitCandidates">To be added.</param>
        <param name="findFunction">To be added.</param>
        <param name="bestSplits">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalDataCountInLeaf">
      <MemberSignature Language="C#" Value="public void GetGlobalDataCountInLeaf (int leafIdx, ref int cnt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetGlobalDataCountInLeaf(int32 leafIdx, int32&amp; cnt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.SingleTrainer.GetGlobalDataCountInLeaf(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetGlobalDataCountInLeaf (leafIdx As Integer, ByRef cnt As Integer)" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalDataCountInLeaf : int *  -&gt; unit&#xA;override this.GetGlobalDataCountInLeaf : int *  -&gt; unit" Usage="singleTrainer.GetGlobalDataCountInLeaf (leafIdx, cnt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetGlobalDataCountInLeaf(int leafIdx, int % cnt);" />
      <MemberSignature Language="C++ WINRT" Value="void GetGlobalDataCountInLeaf(int leafIdx, int &amp; cnt);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.FastTree.IParallelTraining.GetGlobalDataCountInLeaf(System.Int32,System.Int32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leafIdx" Type="System.Int32" />
        <Parameter Name="cnt" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="leafIdx">To be added.</param>
        <param name="cnt">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalBinConstructionFeatures">
      <MemberSignature Language="C#" Value="public bool[] GetLocalBinConstructionFeatures (int numFeatures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool[] GetLocalBinConstructionFeatures(int32 numFeatures) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.SingleTrainer.GetLocalBinConstructionFeatures(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLocalBinConstructionFeatures (numFeatures As Integer) As Boolean()" />
      <MemberSignature Language="F#" Value="abstract member GetLocalBinConstructionFeatures : int -&gt; bool[]&#xA;override this.GetLocalBinConstructionFeatures : int -&gt; bool[]" Usage="singleTrainer.GetLocalBinConstructionFeatures numFeatures" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;bool&gt; ^ GetLocalBinConstructionFeatures(int numFeatures);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::Array &lt;bool&gt; ^ GetLocalBinConstructionFeatures(int numFeatures);" />
      <MemberSignature Language="C++ WINRT" Value="std::Array &lt;bool&gt; GetLocalBinConstructionFeatures(int numFeatures);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.FastTree.IParallelTraining.GetLocalBinConstructionFeatures(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numFeatures" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numFeatures">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalMean">
      <MemberSignature Language="C#" Value="public double[] GlobalMean (Microsoft.ML.Runtime.FastTree.Internal.Dataset dataset, Microsoft.ML.Runtime.FastTree.Internal.RegressionTree tree, Microsoft.ML.Runtime.FastTree.Internal.DocumentPartitioning partitioning, double[] weights, bool filterZeroLambdas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64[] GlobalMean(class Microsoft.ML.Runtime.FastTree.Internal.Dataset dataset, class Microsoft.ML.Runtime.FastTree.Internal.RegressionTree tree, class Microsoft.ML.Runtime.FastTree.Internal.DocumentPartitioning partitioning, float64[] weights, bool filterZeroLambdas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.SingleTrainer.GlobalMean(Microsoft.ML.Runtime.FastTree.Internal.Dataset,Microsoft.ML.Runtime.FastTree.Internal.RegressionTree,Microsoft.ML.Runtime.FastTree.Internal.DocumentPartitioning,System.Double[],System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member GlobalMean : Microsoft.ML.Runtime.FastTree.Internal.Dataset * Microsoft.ML.Runtime.FastTree.Internal.RegressionTree * Microsoft.ML.Runtime.FastTree.Internal.DocumentPartitioning * double[] * bool -&gt; double[]&#xA;override this.GlobalMean : Microsoft.ML.Runtime.FastTree.Internal.Dataset * Microsoft.ML.Runtime.FastTree.Internal.RegressionTree * Microsoft.ML.Runtime.FastTree.Internal.DocumentPartitioning * double[] * bool -&gt; double[]" Usage="singleTrainer.GlobalMean (dataset, tree, partitioning, weights, filterZeroLambdas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;double&gt; ^ GlobalMean(Microsoft::ML::Runtime::FastTree::Internal::Dataset ^ dataset, Microsoft::ML::Runtime::FastTree::Internal::RegressionTree ^ tree, Microsoft::ML::Runtime::FastTree::Internal::DocumentPartitioning ^ partitioning, cli::array &lt;double&gt; ^ weights, bool filterZeroLambdas);" />
      <MemberSignature Language="C++ WINRT" Value="std::Array &lt;double&gt; GlobalMean(Microsoft::ML::Runtime::FastTree::Internal::Dataset const &amp; dataset, Microsoft::ML::Runtime::FastTree::Internal::RegressionTree const &amp; tree, Microsoft::ML::Runtime::FastTree::Internal::DocumentPartitioning const &amp; partitioning, std::Array &lt;double&gt; const &amp; weights, bool filterZeroLambdas);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.FastTree.IParallelTraining.GlobalMean(Microsoft.ML.Runtime.FastTree.Internal.Dataset,Microsoft.ML.Runtime.FastTree.Internal.RegressionTree,Microsoft.ML.Runtime.FastTree.Internal.DocumentPartitioning,System.Double[],System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataset" Type="Microsoft.ML.Runtime.FastTree.Internal.Dataset" />
        <Parameter Name="tree" Type="Microsoft.ML.Runtime.FastTree.Internal.RegressionTree" />
        <Parameter Name="partitioning" Type="Microsoft.ML.Runtime.FastTree.Internal.DocumentPartitioning" />
        <Parameter Name="weights" Type="System.Double[]" />
        <Parameter Name="filterZeroLambdas" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataset">To be added.</param>
        <param name="tree">To be added.</param>
        <param name="partitioning">To be added.</param>
        <param name="weights">To be added.</param>
        <param name="filterZeroLambdas">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitEnvironment">
      <MemberSignature Language="C#" Value="public void InitEnvironment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitEnvironment() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.SingleTrainer.InitEnvironment" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitEnvironment ()" />
      <MemberSignature Language="F#" Value="abstract member InitEnvironment : unit -&gt; unit&#xA;override this.InitEnvironment : unit -&gt; unit" Usage="singleTrainer.InitEnvironment " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitEnvironment();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void InitEnvironment();" />
      <MemberSignature Language="C++ WINRT" Value="void InitEnvironment();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.FastTree.IParallelTraining.InitEnvironment</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitIteration">
      <MemberSignature Language="C#" Value="public void InitIteration (ref bool[] activeFeatures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitIteration(bool[]&amp; activeFeatures) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.SingleTrainer.InitIteration(System.Boolean[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitIteration (ByRef activeFeatures As Boolean())" />
      <MemberSignature Language="F#" Value="abstract member InitIteration :  -&gt; unit&#xA;override this.InitIteration :  -&gt; unit" Usage="singleTrainer.InitIteration activeFeatures" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitIteration(cli::array &lt;bool&gt; ^ % activeFeatures);" />
      <MemberSignature Language="C++ WINRT" Value="void InitIteration(std::Array &lt;bool&gt; const &amp; &amp; activeFeatures);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.FastTree.IParallelTraining.InitIteration(System.Boolean[]@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activeFeatures" Type="System.Boolean[]&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="activeFeatures">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitTreeLearner">
      <MemberSignature Language="C#" Value="public void InitTreeLearner (Microsoft.ML.Runtime.FastTree.Internal.Dataset trainData, int maxNumLeaves, int maxCatSplitPoints, ref int minDocInLeaf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitTreeLearner(class Microsoft.ML.Runtime.FastTree.Internal.Dataset trainData, int32 maxNumLeaves, int32 maxCatSplitPoints, int32&amp; minDocInLeaf) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.SingleTrainer.InitTreeLearner(Microsoft.ML.Runtime.FastTree.Internal.Dataset,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitTreeLearner (trainData As Dataset, maxNumLeaves As Integer, maxCatSplitPoints As Integer, ByRef minDocInLeaf As Integer)" />
      <MemberSignature Language="F#" Value="abstract member InitTreeLearner : Microsoft.ML.Runtime.FastTree.Internal.Dataset * int * int *  -&gt; unit&#xA;override this.InitTreeLearner : Microsoft.ML.Runtime.FastTree.Internal.Dataset * int * int *  -&gt; unit" Usage="singleTrainer.InitTreeLearner (trainData, maxNumLeaves, maxCatSplitPoints, minDocInLeaf)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitTreeLearner(Microsoft::ML::Runtime::FastTree::Internal::Dataset ^ trainData, int maxNumLeaves, int maxCatSplitPoints, int % minDocInLeaf);" />
      <MemberSignature Language="C++ WINRT" Value="void InitTreeLearner(Microsoft::ML::Runtime::FastTree::Internal::Dataset const &amp; trainData, int maxNumLeaves, int maxCatSplitPoints, int &amp; minDocInLeaf);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.FastTree.IParallelTraining.InitTreeLearner(Microsoft.ML.Runtime.FastTree.Internal.Dataset,System.Int32,System.Int32,System.Int32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainData" Type="Microsoft.ML.Runtime.FastTree.Internal.Dataset" />
        <Parameter Name="maxNumLeaves" Type="System.Int32" />
        <Parameter Name="maxCatSplitPoints" Type="System.Int32" />
        <Parameter Name="minDocInLeaf" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="trainData">To be added.</param>
        <param name="maxNumLeaves">To be added.</param>
        <param name="maxCatSplitPoints">To be added.</param>
        <param name="minDocInLeaf">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNeedFindLocalBestSplit">
      <MemberSignature Language="C#" Value="public bool IsNeedFindLocalBestSplit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsNeedFindLocalBestSplit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.SingleTrainer.IsNeedFindLocalBestSplit" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNeedFindLocalBestSplit () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsNeedFindLocalBestSplit : unit -&gt; bool&#xA;override this.IsNeedFindLocalBestSplit : unit -&gt; bool" Usage="singleTrainer.IsNeedFindLocalBestSplit " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsNeedFindLocalBestSplit();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool IsNeedFindLocalBestSplit();" />
      <MemberSignature Language="C++ WINRT" Value="bool IsNeedFindLocalBestSplit();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.FastTree.IParallelTraining.IsNeedFindLocalBestSplit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSkipNonSplittableHistogram">
      <MemberSignature Language="C#" Value="public bool IsSkipNonSplittableHistogram ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSkipNonSplittableHistogram() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.SingleTrainer.IsSkipNonSplittableHistogram" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSkipNonSplittableHistogram () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsSkipNonSplittableHistogram : unit -&gt; bool&#xA;override this.IsSkipNonSplittableHistogram : unit -&gt; bool" Usage="singleTrainer.IsSkipNonSplittableHistogram " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSkipNonSplittableHistogram();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool IsSkipNonSplittableHistogram();" />
      <MemberSignature Language="C++ WINRT" Value="bool IsSkipNonSplittableHistogram();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.FastTree.IParallelTraining.IsSkipNonSplittableHistogram</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformGlobalSplit">
      <MemberSignature Language="C#" Value="public void PerformGlobalSplit (int leaf, int lteChild, int gtChild, Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.SplitInfo splitInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformGlobalSplit(int32 leaf, int32 lteChild, int32 gtChild, valuetype Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner/SplitInfo splitInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.SingleTrainer.PerformGlobalSplit(System.Int32,System.Int32,System.Int32,Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.SplitInfo)" />
      <MemberSignature Language="F#" Value="abstract member PerformGlobalSplit : int * int * int * Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.SplitInfo -&gt; unit&#xA;override this.PerformGlobalSplit : int * int * int * Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.SplitInfo -&gt; unit" Usage="singleTrainer.PerformGlobalSplit (leaf, lteChild, gtChild, splitInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PerformGlobalSplit(int leaf, int lteChild, int gtChild, Microsoft::ML::Runtime::FastTree::Internal::LeastSquaresRegressionTreeLearner::SplitInfo splitInfo);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.FastTree.IParallelTraining.PerformGlobalSplit(System.Int32,System.Int32,System.Int32,Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner.SplitInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leaf" Type="System.Int32" />
        <Parameter Name="lteChild" Type="System.Int32" />
        <Parameter Name="gtChild" Type="System.Int32" />
        <Parameter Name="splitInfo" Type="Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner+SplitInfo" />
      </Parameters>
      <Docs>
        <param name="leaf">To be added.</param>
        <param name="lteChild">To be added.</param>
        <param name="gtChild">To be added.</param>
        <param name="splitInfo">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncGlobalBoundary">
      <MemberSignature Language="C#" Value="public void SyncGlobalBoundary (int numFeatures, int maxBin, double[][] binUpperBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SyncGlobalBoundary(int32 numFeatures, int32 maxBin, float64[][] binUpperBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.FastTree.SingleTrainer.SyncGlobalBoundary(System.Int32,System.Int32,System.Double[][])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SyncGlobalBoundary (numFeatures As Integer, maxBin As Integer, binUpperBounds As Double()())" />
      <MemberSignature Language="F#" Value="abstract member SyncGlobalBoundary : int * int * double[][] -&gt; unit&#xA;override this.SyncGlobalBoundary : int * int * double[][] -&gt; unit" Usage="singleTrainer.SyncGlobalBoundary (numFeatures, maxBin, binUpperBounds)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SyncGlobalBoundary(int numFeatures, int maxBin, cli::array &lt;cli::array &lt;double&gt; ^&gt; ^ binUpperBounds);" />
      <MemberSignature Language="C++ WINRT" Value="void SyncGlobalBoundary(int numFeatures, int maxBin, std::Array &lt;std::Array &lt;double&gt; const &amp;&gt; const &amp; binUpperBounds);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.FastTree.IParallelTraining.SyncGlobalBoundary(System.Int32,System.Int32,System.Double[][])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numFeatures" Type="System.Int32" />
        <Parameter Name="maxBin" Type="System.Int32" />
        <Parameter Name="binUpperBounds" Type="System.Double[][]" />
      </Parameters>
      <Docs>
        <param name="numFeatures">To be added.</param>
        <param name="maxBin">To be added.</param>
        <param name="binUpperBounds">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>