<Type Name="NGramHashNgramExtractor" FullName="Microsoft.ML.Runtime.NGramHashNgramExtractor">
  <TypeSignature Language="C#" Value="public sealed class NGramHashNgramExtractor : Microsoft.ML.Runtime.NgramExtractor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NGramHashNgramExtractor extends Microsoft.ML.Runtime.NgramExtractor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.NGramHashNgramExtractor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NGramHashNgramExtractor&#xA;Inherits NgramExtractor" />
  <TypeSignature Language="F#" Value="type NGramHashNgramExtractor = class&#xA;    inherit NgramExtractor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.NgramExtractor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extracts NGrams from text and convert them to vector using hashing trick.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NGramHashNgramExtractor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.NGramHashNgramExtractor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllLengths">
      <MemberSignature Language="C#" Value="public bool AllLengths { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllLengths" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.NGramHashNgramExtractor.AllLengths" />
      <MemberSignature Language="VB.NET" Value="Public Property AllLengths As Boolean" />
      <MemberSignature Language="F#" Value="member this.AllLengths : bool with get, set" Usage="Microsoft.ML.Runtime.NGramHashNgramExtractor.AllLengths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether to include all ngram lengths up to ngramLength or only ngramLength
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashBits">
      <MemberSignature Language="C#" Value="public int HashBits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HashBits" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.NGramHashNgramExtractor.HashBits" />
      <MemberSignature Language="VB.NET" Value="Public Property HashBits As Integer" />
      <MemberSignature Language="F#" Value="member this.HashBits : int with get, set" Usage="Microsoft.ML.Runtime.NGramHashNgramExtractor.HashBits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Number of bits to hash into. Must be between 1 and 30, inclusive.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvertHash">
      <MemberSignature Language="C#" Value="public int InvertHash { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InvertHash" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.NGramHashNgramExtractor.InvertHash" />
      <MemberSignature Language="VB.NET" Value="Public Property InvertHash As Integer" />
      <MemberSignature Language="F#" Value="member this.InvertHash : int with get, set" Usage="Microsoft.ML.Runtime.NGramHashNgramExtractor.InvertHash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Limit the number of keys used to generate the slot name to this many. 0 means no invert hashing, -1 means no limit.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NgramLength">
      <MemberSignature Language="C#" Value="public int NgramLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NgramLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.NGramHashNgramExtractor.NgramLength" />
      <MemberSignature Language="VB.NET" Value="Public Property NgramLength As Integer" />
      <MemberSignature Language="F#" Value="member this.NgramLength : int with get, set" Usage="Microsoft.ML.Runtime.NGramHashNgramExtractor.NgramLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ngram length
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordered">
      <MemberSignature Language="C#" Value="public bool Ordered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Ordered" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.NGramHashNgramExtractor.Ordered" />
      <MemberSignature Language="VB.NET" Value="Public Property Ordered As Boolean" />
      <MemberSignature Language="F#" Value="member this.Ordered : bool with get, set" Usage="Microsoft.ML.Runtime.NGramHashNgramExtractor.Ordered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether the position of each source column should be included in the hash (when there are multiple source columns).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Seed">
      <MemberSignature Language="C#" Value="public uint Seed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 Seed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.NGramHashNgramExtractor.Seed" />
      <MemberSignature Language="VB.NET" Value="Public Property Seed As UInteger" />
      <MemberSignature Language="F#" Value="member this.Seed : uint32 with get, set" Usage="Microsoft.ML.Runtime.NGramHashNgramExtractor.Seed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Hashing seed
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipLength">
      <MemberSignature Language="C#" Value="public int SkipLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SkipLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.NGramHashNgramExtractor.SkipLength" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLength As Integer" />
      <MemberSignature Language="F#" Value="member this.SkipLength : int with get, set" Usage="Microsoft.ML.Runtime.NGramHashNgramExtractor.SkipLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Maximum number of tokens to skip when constructing an ngram
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>