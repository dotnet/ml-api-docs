<Type Name="IChannelProvider" FullName="Microsoft.ML.Runtime.IChannelProvider">
  <TypeSignature Language="C#" Value="public interface IChannelProvider : Microsoft.ML.Runtime.IExceptionContext" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelProvider implements class Microsoft.ML.Runtime.IExceptionContext" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.IChannelProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannelProvider&#xA;Implements IExceptionContext" />
  <TypeSignature Language="F#" Value="type IChannelProvider = interface&#xA;    interface IExceptionContext" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.IExceptionContext</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A channel provider can create new channels and generic information pipes.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.IChannel Start (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.IChannel Start(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.IChannelProvider.Start(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Start (name As String) As IChannel" />
      <MemberSignature Language="F#" Value="abstract member Start : string -&gt; Microsoft.ML.Runtime.IChannel" Usage="iChannelProvider.Start name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>
            Start a standard message channel.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartPipe&lt;TMessage&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.IPipe&lt;TMessage&gt; StartPipe&lt;TMessage&gt; (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.IPipe`1&lt;!!TMessage&gt; StartPipe&lt;TMessage&gt;(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.IChannelProvider.StartPipe``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartPipe(Of TMessage) (name As String) As IPipe(Of TMessage)" />
      <MemberSignature Language="F#" Value="abstract member StartPipe : string -&gt; Microsoft.ML.Runtime.IPipe&lt;'Message&gt;" Usage="iChannelProvider.StartPipe name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IPipe&lt;TMessage&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TMessage" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TMessage">To be added.</typeparam>
        <param name="name">To be added.</param>
        <summary>
            Start a generic information pipe.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>