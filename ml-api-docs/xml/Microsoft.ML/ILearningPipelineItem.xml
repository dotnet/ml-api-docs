<Type Name="ILearningPipelineItem" FullName="Microsoft.ML.ILearningPipelineItem">
  <TypeSignature Language="C#" Value="public interface ILearningPipelineItem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILearningPipelineItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.ILearningPipelineItem" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILearningPipelineItem" />
  <TypeSignature Language="F#" Value="type ILearningPipelineItem = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class ILearningPipelineItem" />
  <TypeSignature Language="C++ CX" Value="public interface class ILearningPipelineItem" />
  <TypeSignature Language="C++ WINRT" Value="__interface ILearningPipelineItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplyStep">
      <MemberSignature Language="C#" Value="public Microsoft.ML.ILearningPipelineStep ApplyStep (Microsoft.ML.ILearningPipelineStep previousStep, Microsoft.ML.Runtime.Experiment experiment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.ILearningPipelineStep ApplyStep(class Microsoft.ML.ILearningPipelineStep previousStep, class Microsoft.ML.Runtime.Experiment experiment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.ILearningPipelineItem.ApplyStep(Microsoft.ML.ILearningPipelineStep,Microsoft.ML.Runtime.Experiment)" />
      <MemberSignature Language="F#" Value="abstract member ApplyStep : Microsoft.ML.ILearningPipelineStep * Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.ILearningPipelineStep" Usage="iLearningPipelineItem.ApplyStep (previousStep, experiment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::ML::ILearningPipelineStep ^ ApplyStep(Microsoft::ML::ILearningPipelineStep ^ previousStep, Microsoft::ML::Runtime::Experiment ^ experiment);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::ML::ILearningPipelineStep ^ ApplyStep(Microsoft::ML::ILearningPipelineStep ^ previousStep, Microsoft::ML::Runtime::Experiment ^ experiment);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::ML::ILearningPipelineStep ApplyStep(Microsoft::ML::ILearningPipelineStep const &amp; previousStep, Microsoft::ML::Runtime::Experiment const &amp; experiment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.ILearningPipelineStep</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previousStep" Type="Microsoft.ML.ILearningPipelineStep" />
        <Parameter Name="experiment" Type="Microsoft.ML.Runtime.Experiment" />
      </Parameters>
      <Docs>
        <param name="previousStep">To be added.</param>
        <param name="experiment">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>