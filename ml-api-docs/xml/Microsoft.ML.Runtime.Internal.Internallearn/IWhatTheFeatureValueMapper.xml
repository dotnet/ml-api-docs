<Type Name="IWhatTheFeatureValueMapper" FullName="Microsoft.ML.Runtime.Internal.Internallearn.IWhatTheFeatureValueMapper">
  <TypeSignature Language="C#" Value="public interface IWhatTheFeatureValueMapper : Microsoft.ML.Runtime.IPredictor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWhatTheFeatureValueMapper implements class Microsoft.ML.Runtime.IPredictor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Internal.Internallearn.IWhatTheFeatureValueMapper" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWhatTheFeatureValueMapper&#xA;Implements IPredictor" />
  <TypeSignature Language="F#" Value="type IWhatTheFeatureValueMapper = interface&#xA;    interface IPredictor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.IPredictor</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Interface for mapping input values to corresponding feature contributions.
            This interface is commonly implemented by predictors.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetWhatTheFeatureMapper&lt;TSrc,TDst&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.ValueMapper&lt;TSrc,Microsoft.ML.Runtime.Data.VBuffer&lt;float&gt;&gt; GetWhatTheFeatureMapper&lt;TSrc,TDst&gt; (int top, int bottom, bool normalize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.Data.ValueMapper`2&lt;!!TSrc, valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;float32&gt;&gt; GetWhatTheFeatureMapper&lt;TSrc, TDst&gt;(int32 top, int32 bottom, bool normalize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Internallearn.IWhatTheFeatureValueMapper.GetWhatTheFeatureMapper``2(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWhatTheFeatureMapper(Of TSrc, TDst) (top As Integer, bottom As Integer, normalize As Boolean) As ValueMapper(Of TSrc, VBuffer(Of Single))" />
      <MemberSignature Language="F#" Value="abstract member GetWhatTheFeatureMapper : int * int * bool -&gt; Microsoft.ML.Runtime.Data.ValueMapper&lt;'Src, Microsoft.ML.Runtime.Data.VBuffer&lt;single&gt;&gt;" Usage="iWhatTheFeatureValueMapper.GetWhatTheFeatureMapper (top, bottom, normalize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ValueMapper&lt;TSrc,Microsoft.ML.Runtime.Data.VBuffer&lt;System.Single&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSrc" />
        <TypeParameter Name="TDst" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
        <Parameter Name="normalize" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TSrc">To be added.</typeparam>
        <typeparam name="TDst">To be added.</typeparam>
        <param name="top">To be added.</param>
        <param name="bottom">To be added.</param>
        <param name="normalize">To be added.</param>
        <summary>
            Get a delegate for mapping Contributions to Features.
            Result will contain vector with topN positive contributions(if available) and
            bottomN negative contributions (if available).
            For example linear predictor will have both negative and positive contributions.
            For trees we will not have negative contributions, so bottom param will be ignored.
            If normalization is requested that resulting values will be normalized to [-1, 1].
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>