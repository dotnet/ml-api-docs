<Type Name="PredictorBase&lt;TOutput&gt;" FullName="Microsoft.ML.Runtime.Internal.Internallearn.PredictorBase&lt;TOutput&gt;">
  <TypeSignature Language="C#" Value="public abstract class PredictorBase&lt;TOutput&gt; : Microsoft.ML.Runtime.IPredictorProducing&lt;TOutput&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PredictorBase`1&lt;TOutput&gt; extends System.Object implements class Microsoft.ML.Runtime.IPredictor, class Microsoft.ML.Runtime.IPredictorProducing`1&lt;!TOutput&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Internal.Internallearn.PredictorBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PredictorBase(Of TOutput)&#xA;Implements IPredictorProducing(Of TOutput)" />
  <TypeSignature Language="F#" Value="type PredictorBase&lt;'Output&gt; = class&#xA;    interface IPredictorProducing&lt;'Output&gt;&#xA;    interface IPredictor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TOutput" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.IPredictorProducing&lt;TOutput&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TOutput">To be added.</typeparam>
    <summary>
            A base class for predictors producing <typeparamref name="TOutput" />.
            Note: This provides essentially no value going forward. New predictors should just
            derive from the interfaces they need.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PredictorBase (Microsoft.ML.Runtime.IHostEnvironment env, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Internallearn.PredictorBase`1.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (env As IHostEnvironment, name As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Internal.Internallearn.PredictorBase&lt;'Output&gt; : Microsoft.ML.Runtime.IHostEnvironment * string -&gt; Microsoft.ML.Runtime.Internal.Internallearn.PredictorBase&lt;'Output&gt;" Usage="new Microsoft.ML.Runtime.Internal.Internallearn.PredictorBase&lt;'Output&gt; (env, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PredictorBase (Microsoft.ML.Runtime.IHostEnvironment env, string name, Microsoft.ML.Runtime.Model.ModelLoadContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, string name, class Microsoft.ML.Runtime.Model.ModelLoadContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Internallearn.PredictorBase`1.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,Microsoft.ML.Runtime.Model.ModelLoadContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (env As IHostEnvironment, name As String, ctx As ModelLoadContext)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Internal.Internallearn.PredictorBase&lt;'Output&gt; : Microsoft.ML.Runtime.IHostEnvironment * string * Microsoft.ML.Runtime.Model.ModelLoadContext -&gt; Microsoft.ML.Runtime.Internal.Internallearn.PredictorBase&lt;'Output&gt;" Usage="new Microsoft.ML.Runtime.Internal.Internallearn.PredictorBase&lt;'Output&gt; (env, name, ctx)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.ModelLoadContext" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="name">To be added.</param>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="protected readonly Microsoft.ML.Runtime.IHost Host;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class Microsoft.ML.Runtime.IHost Host" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Internal.Internallearn.PredictorBase`1.Host" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Host As IHost " />
      <MemberSignature Language="F#" Value="val mutable Host : Microsoft.ML.Runtime.IHost" Usage="Microsoft.ML.Runtime.Internal.Internallearn.PredictorBase&lt;'Output&gt;.Host" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizerWarningFormat">
      <MemberSignature Language="C#" Value="public const string NormalizerWarningFormat;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string NormalizerWarningFormat" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Internal.Internallearn.PredictorBase`1.NormalizerWarningFormat" />
      <MemberSignature Language="VB.NET" Value="Public Const NormalizerWarningFormat As String " />
      <MemberSignature Language="F#" Value="val mutable NormalizerWarningFormat : string" Usage="Microsoft.ML.Runtime.Internal.Internallearn.PredictorBase&lt;'Output&gt;.NormalizerWarningFormat" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictionKind">
      <MemberSignature Language="C#" Value="public abstract Microsoft.ML.Runtime.PredictionKind PredictionKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Runtime.PredictionKind PredictionKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Internal.Internallearn.PredictorBase`1.PredictionKind" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PredictionKind As PredictionKind" />
      <MemberSignature Language="F#" Value="member this.PredictionKind : Microsoft.ML.Runtime.PredictionKind" Usage="Microsoft.ML.Runtime.Internal.Internallearn.PredictorBase&lt;'Output&gt;.PredictionKind" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.IPredictor.PredictionKind</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PredictionKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (Microsoft.ML.Runtime.Model.ModelSaveContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class Microsoft.ML.Runtime.Model.ModelSaveContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Internallearn.PredictorBase`1.Save(Microsoft.ML.Runtime.Model.ModelSaveContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (ctx As ModelSaveContext)" />
      <MemberSignature Language="F#" Value="abstract member Save : Microsoft.ML.Runtime.Model.ModelSaveContext -&gt; unit&#xA;override this.Save : Microsoft.ML.Runtime.Model.ModelSaveContext -&gt; unit" Usage="predictorBase.Save ctx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.ModelSaveContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCore">
      <MemberSignature Language="C#" Value="protected virtual void SaveCore (Microsoft.ML.Runtime.Model.ModelSaveContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SaveCore(class Microsoft.ML.Runtime.Model.ModelSaveContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Internallearn.PredictorBase`1.SaveCore(Microsoft.ML.Runtime.Model.ModelSaveContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SaveCore (ctx As ModelSaveContext)" />
      <MemberSignature Language="F#" Value="abstract member SaveCore : Microsoft.ML.Runtime.Model.ModelSaveContext -&gt; unit&#xA;override this.SaveCore : Microsoft.ML.Runtime.Model.ModelSaveContext -&gt; unit" Usage="predictorBase.SaveCore ctx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.ModelSaveContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WarnOnOldNormalizer">
      <MemberSignature Language="C#" Value="public static bool WarnOnOldNormalizer (Microsoft.ML.Runtime.Model.ModelLoadContext ctx, Type typePredictor, Microsoft.ML.Runtime.IChannelProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WarnOnOldNormalizer(class Microsoft.ML.Runtime.Model.ModelLoadContext ctx, class System.Type typePredictor, class Microsoft.ML.Runtime.IChannelProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Internallearn.PredictorBase`1.WarnOnOldNormalizer(Microsoft.ML.Runtime.Model.ModelLoadContext,System.Type,Microsoft.ML.Runtime.IChannelProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WarnOnOldNormalizer (ctx As ModelLoadContext, typePredictor As Type, provider As IChannelProvider) As Boolean" />
      <MemberSignature Language="F#" Value="static member WarnOnOldNormalizer : Microsoft.ML.Runtime.Model.ModelLoadContext * Type * Microsoft.ML.Runtime.IChannelProvider -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.Internallearn.PredictorBase&lt;'Output&gt;.WarnOnOldNormalizer (ctx, typePredictor, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.ModelLoadContext" />
        <Parameter Name="typePredictor" Type="System.Type" />
        <Parameter Name="provider" Type="Microsoft.ML.Runtime.IChannelProvider" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="typePredictor">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>
            This emits a warning if there is Normalizer sub-model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>