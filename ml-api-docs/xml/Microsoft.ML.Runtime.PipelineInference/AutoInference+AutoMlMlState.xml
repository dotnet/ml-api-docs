<Type Name="AutoInference+AutoMlMlState" FullName="Microsoft.ML.Runtime.PipelineInference.AutoInference+AutoMlMlState">
  <TypeSignature Language="C#" Value="public sealed class AutoInference.AutoMlMlState : Microsoft.ML.Runtime.EntryPoints.IMlState" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit AutoInference/AutoMlMlState extends System.Object implements class Microsoft.ML.Runtime.EntryPoints.IMlState" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AutoInference.AutoMlMlState&#xA;Implements IMlState" />
  <TypeSignature Language="F#" Value="type AutoInference.AutoMlMlState = class&#xA;    interface IMlState" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.EntryPoints.IMlState</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Class that holds state for an autoML search-in-progress. Should be able to resume search, given this object.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AutoMlMlState (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.Arguments args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.PipelineInference.AutoInference/AutoMlMlState/Arguments args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.Arguments)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, args As AutoInference.AutoMlMlState.Arguments)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.Arguments -&gt; Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState" Usage="new Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState (env, args)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="args" Type="Microsoft.ML.Runtime.PipelineInference.AutoInference+AutoMlMlState+Arguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AutoMlMlState (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.PipelineInference.AutoInference.SupportedMetric metric, Microsoft.ML.Runtime.PipelineInference.IPipelineOptimizer autoMlEngine, Microsoft.ML.Runtime.PipelineInference.ITerminator terminator, Microsoft.ML.Runtime.EntryPoints.MacroUtils.TrainerKinds trainerKind, Microsoft.ML.Runtime.Data.IDataView trainData = null, Microsoft.ML.Runtime.Data.IDataView testData = null, string[] requestedLearners = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.PipelineInference.AutoInference/SupportedMetric metric, class Microsoft.ML.Runtime.PipelineInference.IPipelineOptimizer autoMlEngine, class Microsoft.ML.Runtime.PipelineInference.ITerminator terminator, valuetype Microsoft.ML.Runtime.EntryPoints.MacroUtils/TrainerKinds trainerKind, class Microsoft.ML.Runtime.Data.IDataView trainData, class Microsoft.ML.Runtime.Data.IDataView testData, string[] requestedLearners) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.PipelineInference.AutoInference.SupportedMetric,Microsoft.ML.Runtime.PipelineInference.IPipelineOptimizer,Microsoft.ML.Runtime.PipelineInference.ITerminator,Microsoft.ML.Runtime.EntryPoints.MacroUtils.TrainerKinds,Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.Data.IDataView,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, metric As AutoInference.SupportedMetric, autoMlEngine As IPipelineOptimizer, terminator As ITerminator, trainerKind As MacroUtils.TrainerKinds, Optional trainData As IDataView = null, Optional testData As IDataView = null, Optional requestedLearners As String() = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.PipelineInference.AutoInference.SupportedMetric * Microsoft.ML.Runtime.PipelineInference.IPipelineOptimizer * Microsoft.ML.Runtime.PipelineInference.ITerminator * Microsoft.ML.Runtime.EntryPoints.MacroUtils.TrainerKinds * Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.Data.IDataView * string[] -&gt; Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState" Usage="new Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState (env, metric, autoMlEngine, terminator, trainerKind, trainData, testData, requestedLearners)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="metric" Type="Microsoft.ML.Runtime.PipelineInference.AutoInference+SupportedMetric" />
        <Parameter Name="autoMlEngine" Type="Microsoft.ML.Runtime.PipelineInference.IPipelineOptimizer" />
        <Parameter Name="terminator" Type="Microsoft.ML.Runtime.PipelineInference.ITerminator" />
        <Parameter Name="trainerKind" Type="Microsoft.ML.Runtime.EntryPoints.MacroUtils+TrainerKinds" />
        <Parameter Name="trainData" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="testData" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="requestedLearners" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="metric">To be added.</param>
        <param name="autoMlEngine">To be added.</param>
        <param name="terminator">To be added.</param>
        <param name="trainerKind">To be added.</param>
        <param name="trainData">To be added.</param>
        <param name="testData">To be added.</param>
        <param name="requestedLearners">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEvaluated">
      <MemberSignature Language="C#" Value="public void AddEvaluated (Microsoft.ML.Runtime.PipelineInference.PipelinePattern pipeline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEvaluated(class Microsoft.ML.Runtime.PipelineInference.PipelinePattern pipeline) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.AddEvaluated(Microsoft.ML.Runtime.PipelineInference.PipelinePattern)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEvaluated (pipeline As PipelinePattern)" />
      <MemberSignature Language="F#" Value="member this.AddEvaluated : Microsoft.ML.Runtime.PipelineInference.PipelinePattern -&gt; unit" Usage="autoMlMlState.AddEvaluated pipeline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipeline" Type="Microsoft.ML.Runtime.PipelineInference.PipelinePattern" />
      </Parameters>
      <Docs>
        <param name="pipeline">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEvaluated">
      <MemberSignature Language="C#" Value="public void AddEvaluated (Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] pipelines);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEvaluated(class Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] pipelines) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.AddEvaluated(Microsoft.ML.Runtime.PipelineInference.PipelinePattern[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEvaluated (pipelines As PipelinePattern())" />
      <MemberSignature Language="F#" Value="member this.AddEvaluated : Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] -&gt; unit" Usage="autoMlMlState.AddEvaluated pipelines" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipelines" Type="Microsoft.ML.Runtime.PipelineInference.PipelinePattern[]" />
      </Parameters>
      <Docs>
        <param name="pipelines">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoMlEngine">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.PipelineInference.IPipelineOptimizer AutoMlEngine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.PipelineInference.IPipelineOptimizer AutoMlEngine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.AutoMlEngine" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoMlEngine As IPipelineOptimizer" />
      <MemberSignature Language="F#" Value="member this.AutoMlEngine : Microsoft.ML.Runtime.PipelineInference.IPipelineOptimizer with get, set" Usage="Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.AutoMlEngine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.IPipelineOptimizer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchCandidates">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] BatchCandidates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] BatchCandidates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.BatchCandidates" />
      <MemberSignature Language="VB.NET" Value="Public Property BatchCandidates As PipelinePattern()" />
      <MemberSignature Language="F#" Value="member this.BatchCandidates : Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] with get, set" Usage="Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.BatchCandidates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.PipelinePattern[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearEvaluatedPipelines">
      <MemberSignature Language="C#" Value="public void ClearEvaluatedPipelines ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearEvaluatedPipelines() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.ClearEvaluatedPipelines" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearEvaluatedPipelines ()" />
      <MemberSignature Language="F#" Value="member this.ClearEvaluatedPipelines : unit -&gt; unit" Usage="autoMlMlState.ClearEvaluatedPipelines " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllEvaluatedPipelines">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] GetAllEvaluatedPipelines ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] GetAllEvaluatedPipelines() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.GetAllEvaluatedPipelines" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllEvaluatedPipelines () As PipelinePattern()" />
      <MemberSignature Language="F#" Value="member this.GetAllEvaluatedPipelines : unit -&gt; Microsoft.ML.Runtime.PipelineInference.PipelinePattern[]" Usage="autoMlMlState.GetAllEvaluatedPipelines " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.PipelinePattern[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBestPipeline">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.PipelineInference.PipelinePattern GetBestPipeline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.PipelineInference.PipelinePattern GetBestPipeline() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.GetBestPipeline" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBestPipeline () As PipelinePattern" />
      <MemberSignature Language="F#" Value="member this.GetBestPipeline : unit -&gt; Microsoft.ML.Runtime.PipelineInference.PipelinePattern" Usage="autoMlMlState.GetBestPipeline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.PipelinePattern</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextCandidates">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] GetNextCandidates (int numberOfCandidates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] GetNextCandidates(int32 numberOfCandidates) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.GetNextCandidates(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextCandidates (numberOfCandidates As Integer) As PipelinePattern()" />
      <MemberSignature Language="F#" Value="member this.GetNextCandidates : int -&gt; Microsoft.ML.Runtime.PipelineInference.PipelinePattern[]" Usage="autoMlMlState.GetNextCandidates numberOfCandidates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.PipelinePattern[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberOfCandidates" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numberOfCandidates">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSearchSpace">
      <MemberSignature Language="C#" Value="public Tuple&lt;Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform[],Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[]&gt; GetSearchSpace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Tuple`2&lt;valuetype Microsoft.ML.Runtime.PipelineInference.TransformInference/SuggestedTransform[], valuetype Microsoft.ML.Runtime.PipelineInference.RecipeInference/SuggestedRecipe/SuggestedLearner[]&gt; GetSearchSpace() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.GetSearchSpace" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSearchSpace () As Tuple(Of TransformInference.SuggestedTransform(), RecipeInference.SuggestedRecipe.SuggestedLearner())" />
      <MemberSignature Language="F#" Value="member this.GetSearchSpace : unit -&gt; Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform[] * Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[]" Usage="autoMlMlState.GetSearchSpace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;Microsoft.ML.Runtime.PipelineInference.TransformInference+SuggestedTransform[],Microsoft.ML.Runtime.PipelineInference.RecipeInference+SuggestedRecipe+SuggestedLearner[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InferPipelines">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.PipelineInference.PipelinePattern InferPipelines (int numTransformLevels, int batchSize, int numOfTrainingRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.PipelineInference.PipelinePattern InferPipelines(int32 numTransformLevels, int32 batchSize, int32 numOfTrainingRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.InferPipelines(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferPipelines (numTransformLevels As Integer, batchSize As Integer, numOfTrainingRows As Integer) As PipelinePattern" />
      <MemberSignature Language="F#" Value="member this.InferPipelines : int * int * int -&gt; Microsoft.ML.Runtime.PipelineInference.PipelinePattern" Usage="autoMlMlState.InferPipelines (numTransformLevels, batchSize, numOfTrainingRows)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.PipelinePattern</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numTransformLevels" Type="System.Int32" />
        <Parameter Name="batchSize" Type="System.Int32" />
        <Parameter Name="numOfTrainingRows" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numTransformLevels">To be added.</param>
        <param name="batchSize">To be added.</param>
        <param name="numOfTrainingRows">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InferSearchSpace">
      <MemberSignature Language="C#" Value="public void InferSearchSpace (int numTransformLevels);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InferSearchSpace(int32 numTransformLevels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.InferSearchSpace(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InferSearchSpace (numTransformLevels As Integer)" />
      <MemberSignature Language="F#" Value="member this.InferSearchSpace : int -&gt; unit" Usage="autoMlMlState.InferSearchSpace numTransformLevels" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numTransformLevels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numTransformLevels">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSearchSpaceDefined">
      <MemberSignature Language="C#" Value="public bool IsSearchSpaceDefined ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSearchSpaceDefined() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.IsSearchSpaceDefined" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSearchSpaceDefined () As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsSearchSpaceDefined : unit -&gt; bool" Usage="autoMlMlState.IsSearchSpaceDefined " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepSelectedLearners">
      <MemberSignature Language="C#" Value="public void KeepSelectedLearners (System.Collections.Generic.IEnumerable&lt;string&gt; learnersToKeep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void KeepSelectedLearners(class System.Collections.Generic.IEnumerable`1&lt;string&gt; learnersToKeep) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.KeepSelectedLearners(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub KeepSelectedLearners (learnersToKeep As IEnumerable(Of String))" />
      <MemberSignature Language="F#" Value="member this.KeepSelectedLearners : seq&lt;string&gt; -&gt; unit" Usage="autoMlMlState.KeepSelectedLearners learnersToKeep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="learnersToKeep" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="learnersToKeep">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metric">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.PipelineInference.AutoInference.SupportedMetric Metric { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.PipelineInference.AutoInference/SupportedMetric Metric" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.Metric" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Metric As AutoInference.SupportedMetric" />
      <MemberSignature Language="F#" Value="member this.Metric : Microsoft.ML.Runtime.PipelineInference.AutoInference.SupportedMetric" Usage="Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.Metric" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.AutoInference+SupportedMetric</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTrainTestData">
      <MemberSignature Language="C#" Value="public void SetTrainTestData (Microsoft.ML.Runtime.Data.IDataView trainData, Microsoft.ML.Runtime.Data.IDataView testData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTrainTestData(class Microsoft.ML.Runtime.Data.IDataView trainData, class Microsoft.ML.Runtime.Data.IDataView testData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.SetTrainTestData(Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTrainTestData (trainData As IDataView, testData As IDataView)" />
      <MemberSignature Language="F#" Value="member this.SetTrainTestData : Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.Data.IDataView -&gt; unit" Usage="autoMlMlState.SetTrainTestData (trainData, testData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainData" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="testData" Type="Microsoft.ML.Runtime.Data.IDataView" />
      </Parameters>
      <Docs>
        <param name="trainData">To be added.</param>
        <param name="testData">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainerKind">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.MacroUtils.TrainerKinds TrainerKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Runtime.EntryPoints.MacroUtils/TrainerKinds TrainerKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.TrainerKind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrainerKind As MacroUtils.TrainerKinds" />
      <MemberSignature Language="F#" Value="member this.TrainerKind : Microsoft.ML.Runtime.EntryPoints.MacroUtils.TrainerKinds" Usage="Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.TrainerKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.MacroUtils+TrainerKinds</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSearchSpace">
      <MemberSignature Language="C#" Value="public void UpdateSearchSpace (Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[] learners, Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform[] transforms);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateSearchSpace(valuetype Microsoft.ML.Runtime.PipelineInference.RecipeInference/SuggestedRecipe/SuggestedLearner[] learners, valuetype Microsoft.ML.Runtime.PipelineInference.TransformInference/SuggestedTransform[] transforms) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.UpdateSearchSpace(Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[],Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateSearchSpace (learners As RecipeInference.SuggestedRecipe.SuggestedLearner(), transforms As TransformInference.SuggestedTransform())" />
      <MemberSignature Language="F#" Value="member this.UpdateSearchSpace : Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[] * Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform[] -&gt; unit" Usage="autoMlMlState.UpdateSearchSpace (learners, transforms)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="learners" Type="Microsoft.ML.Runtime.PipelineInference.RecipeInference+SuggestedRecipe+SuggestedLearner[]" />
        <Parameter Name="transforms" Type="Microsoft.ML.Runtime.PipelineInference.TransformInference+SuggestedTransform[]" />
      </Parameters>
      <Docs>
        <param name="learners">To be added.</param>
        <param name="transforms">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTerminator">
      <MemberSignature Language="C#" Value="public void UpdateTerminator (Microsoft.ML.Runtime.PipelineInference.ITerminator terminator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateTerminator(class Microsoft.ML.Runtime.PipelineInference.ITerminator terminator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.UpdateTerminator(Microsoft.ML.Runtime.PipelineInference.ITerminator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateTerminator (terminator As ITerminator)" />
      <MemberSignature Language="F#" Value="member this.UpdateTerminator : Microsoft.ML.Runtime.PipelineInference.ITerminator -&gt; unit" Usage="autoMlMlState.UpdateTerminator terminator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="terminator" Type="Microsoft.ML.Runtime.PipelineInference.ITerminator" />
      </Parameters>
      <Docs>
        <param name="terminator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>