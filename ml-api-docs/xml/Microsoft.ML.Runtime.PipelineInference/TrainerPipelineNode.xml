<Type Name="TrainerPipelineNode" FullName="Microsoft.ML.Runtime.PipelineInference.TrainerPipelineNode">
  <TypeSignature Language="C#" Value="public sealed class TrainerPipelineNode : Microsoft.ML.Runtime.PipelineInference.PipelineNodeBase, Microsoft.ML.Runtime.PipelineInference.IPipelineNode&lt;Microsoft.ML.Runtime.EntryPoints.IPredictorModel&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TrainerPipelineNode extends Microsoft.ML.Runtime.PipelineInference.PipelineNodeBase implements class Microsoft.ML.Runtime.PipelineInference.IPipelineNode`1&lt;class Microsoft.ML.Runtime.EntryPoints.IPredictorModel&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.PipelineInference.TrainerPipelineNode" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TrainerPipelineNode&#xA;Inherits PipelineNodeBase&#xA;Implements IPipelineNode(Of IPredictorModel)" />
  <TypeSignature Language="F#" Value="type TrainerPipelineNode = class&#xA;    inherit PipelineNodeBase&#xA;    interface IPipelineNode&lt;IPredictorModel&gt;" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrainerPipelineNode sealed : Microsoft::ML::Runtime::PipelineInference::PipelineNodeBase, Microsoft::ML::Runtime::PipelineInference::IPipelineNode&lt;Microsoft::ML::Runtime::EntryPoints::IPredictorModel ^&gt;" />
  <TypeSignature Language="C++ CX" Value="public ref class TrainerPipelineNode sealed : Microsoft::ML::Runtime::PipelineInference::PipelineNodeBase, Microsoft::ML::Runtime::PipelineInference::IPipelineNode&lt;Microsoft::ML::Runtime::EntryPoints::IPredictorModel ^&gt;" />
  <TypeSignature Language="C++ WINRT" Value="class TrainerPipelineNode sealed : Microsoft::ML::Runtime::PipelineInference::PipelineNodeBase, Microsoft::ML::Runtime::PipelineInference::IPipelineNode&lt;Microsoft::ML::Runtime::EntryPoints::IPredictorModel&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.PipelineInference.PipelineNodeBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.PipelineInference.IPipelineNode&lt;Microsoft.ML.Runtime.EntryPoints.IPredictorModel&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TrainerPipelineNode (Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITrainerInput entryPointObj, System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.EntryPoints.TlcModule.SweepableParamAttribute&gt; sweepParams = null, Microsoft.ML.Runtime.ParameterSet hyperParameterSet = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITrainerInput entryPointObj, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableParamAttribute&gt; sweepParams, class Microsoft.ML.Runtime.ParameterSet hyperParameterSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.TrainerPipelineNode.#ctor(Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITrainerInput,System.Collections.Generic.IEnumerable{Microsoft.ML.Runtime.EntryPoints.TlcModule.SweepableParamAttribute},Microsoft.ML.Runtime.ParameterSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryPointObj As CommonInputs.ITrainerInput, Optional sweepParams As IEnumerable(Of TlcModule.SweepableParamAttribute) = null, Optional hyperParameterSet As ParameterSet = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.PipelineInference.TrainerPipelineNode : Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITrainerInput * seq&lt;Microsoft.ML.Runtime.EntryPoints.TlcModule.SweepableParamAttribute&gt; * Microsoft.ML.Runtime.ParameterSet -&gt; Microsoft.ML.Runtime.PipelineInference.TrainerPipelineNode" Usage="new Microsoft.ML.Runtime.PipelineInference.TrainerPipelineNode (entryPointObj, sweepParams, hyperParameterSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryPointObj" Type="Microsoft.ML.Runtime.EntryPoints.CommonInputs+ITrainerInput" />
        <Parameter Name="sweepParams" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.EntryPoints.TlcModule+SweepableParamAttribute&gt;" />
        <Parameter Name="hyperParameterSet" Type="Microsoft.ML.Runtime.ParameterSet" />
      </Parameters>
      <Docs>
        <param name="entryPointObj">To be added.</param>
        <param name="sweepParams">To be added.</param>
        <param name="hyperParameterSet">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.PipelineInference.DataAndModel&lt;Microsoft.ML.Runtime.EntryPoints.IPredictorModel&gt; Add (Microsoft.ML.Runtime.Experiment experiment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.PipelineInference.DataAndModel`1&lt;class Microsoft.ML.Runtime.EntryPoints.IPredictorModel&gt; Add(class Microsoft.ML.Runtime.Experiment experiment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.TrainerPipelineNode.Add(Microsoft.ML.Runtime.Experiment)" />
      <MemberSignature Language="F#" Value="abstract member Add : Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.Runtime.PipelineInference.DataAndModel&lt;Microsoft.ML.Runtime.EntryPoints.IPredictorModel&gt;&#xA;override this.Add : Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.Runtime.PipelineInference.DataAndModel&lt;Microsoft.ML.Runtime.EntryPoints.IPredictorModel&gt;" Usage="trainerPipelineNode.Add experiment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::ML::Runtime::PipelineInference::DataAndModel&lt;Microsoft::ML::Runtime::EntryPoints::IPredictorModel ^&gt; ^ Add(Microsoft::ML::Runtime::Experiment ^ experiment);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::ML::Runtime::PipelineInference::DataAndModel&lt;Microsoft::ML::Runtime::EntryPoints::IPredictorModel&gt; Add(Microsoft::ML::Runtime::Experiment const &amp; experiment);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.PipelineInference.IPipelineNode`1.Add(Microsoft.ML.Runtime.Experiment)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.DataAndModel&lt;Microsoft.ML.Runtime.EntryPoints.IPredictorModel&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="experiment" Type="Microsoft.ML.Runtime.Experiment" />
      </Parameters>
      <Docs>
        <param name="experiment">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckEntryPointStateMatchesParamValues">
      <MemberSignature Language="C#" Value="public bool CheckEntryPointStateMatchesParamValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckEntryPointStateMatchesParamValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.TrainerPipelineNode.CheckEntryPointStateMatchesParamValues" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckEntryPointStateMatchesParamValues () As Boolean" />
      <MemberSignature Language="F#" Value="member this.CheckEntryPointStateMatchesParamValues : unit -&gt; bool" Usage="trainerPipelineNode.CheckEntryPointStateMatchesParamValues " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckEntryPointStateMatchesParamValues();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool CheckEntryPointStateMatchesParamValues();" />
      <MemberSignature Language="C++ WINRT" Value="bool CheckEntryPointStateMatchesParamValues();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.PipelineInference.TrainerPipelineNode Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.PipelineInference.TrainerPipelineNode Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.TrainerPipelineNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As TrainerPipelineNode" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; Microsoft.ML.Runtime.PipelineInference.TrainerPipelineNode" Usage="trainerPipelineNode.Clone " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::ML::Runtime::PipelineInference::TrainerPipelineNode ^ Clone();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::ML::Runtime::PipelineInference::TrainerPipelineNode ^ Clone();" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::ML::Runtime::PipelineInference::TrainerPipelineNode Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.TrainerPipelineNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEpName">
      <MemberSignature Language="C#" Value="public string GetEpName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetEpName() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.TrainerPipelineNode.GetEpName" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEpName () As String" />
      <MemberSignature Language="F#" Value="override this.GetEpName : unit -&gt; string" Usage="trainerPipelineNode.GetEpName " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetEpName();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::String ^ GetEpName();" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring GetEpName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueByName&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetPropertyValueByName&lt;T&gt; (string name, T defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetPropertyValueByName&lt;T&gt;(string name, !!T defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.TrainerPipelineNode.GetPropertyValueByName``1(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValueByName(Of T) (name As String, defaultValue As T) As T" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValueByName : string * 'T -&gt; 'T&#xA;override this.GetPropertyValueByName : string * 'T -&gt; 'T" Usage="trainerPipelineNode.GetPropertyValueByName (name, defaultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; virtual T GetPropertyValueByName(System::String ^ name, T defaultValue);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetPropertyValueByName(Platform::String ^ name, T defaultValue);" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename T&gt;&#xA; T GetPropertyValueByName(std::wstring const &amp; name, T defaultValue);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.PipelineInference.IPipelineNode`1.GetPropertyValueByName``1(System.String,``0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="name">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInputData">
      <MemberSignature Language="C#" Value="public void SetInputData (Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInputData(class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.TrainerPipelineNode.SetInputData(Microsoft.ML.Runtime.EntryPoints.Var{Microsoft.ML.Runtime.Data.IDataView})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetInputData (data As Var(Of IDataView))" />
      <MemberSignature Language="F#" Value="abstract member SetInputData : Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; -&gt; unit&#xA;override this.SetInputData : Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; -&gt; unit" Usage="trainerPipelineNode.SetInputData data" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetInputData(Microsoft::ML::Runtime::EntryPoints::Var&lt;Microsoft::ML::Runtime::Data::IDataView ^&gt; ^ data);" />
      <MemberSignature Language="C++ WINRT" Value="void SetInputData(Microsoft::ML::Runtime::EntryPoints::Var&lt;Microsoft::ML::Runtime::Data::IDataView&gt; const &amp; data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.PipelineInference.IPipelineNode`1.SetInputData(Microsoft.ML.Runtime.EntryPoints.Var{Microsoft.ML.Runtime.Data.IDataView})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInputData">
      <MemberSignature Language="C#" Value="public void SetInputData (Microsoft.ML.Runtime.Data.IDataView data, Microsoft.ML.Runtime.Experiment experiment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInputData(class Microsoft.ML.Runtime.Data.IDataView data, class Microsoft.ML.Runtime.Experiment experiment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.TrainerPipelineNode.SetInputData(Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.Experiment)" />
      <MemberSignature Language="F#" Value="abstract member SetInputData : Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.Experiment -&gt; unit&#xA;override this.SetInputData : Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.Experiment -&gt; unit" Usage="trainerPipelineNode.SetInputData (data, experiment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetInputData(Microsoft::ML::Runtime::Data::IDataView ^ data, Microsoft::ML::Runtime::Experiment ^ experiment);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void SetInputData(Microsoft::ML::Runtime::Data::IDataView ^ data, Microsoft::ML::Runtime::Experiment ^ experiment);" />
      <MemberSignature Language="C++ WINRT" Value="void SetInputData(Microsoft::ML::Runtime::Data::IDataView const &amp; data, Microsoft::ML::Runtime::Experiment const &amp; experiment);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.PipelineInference.IPipelineNode`1.SetInputData(Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.Experiment)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="experiment" Type="Microsoft.ML.Runtime.Experiment" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="experiment">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SweepParams">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.TlcModule.SweepableParamAttribute[] SweepParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableParamAttribute[] SweepParams" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.PipelineInference.TrainerPipelineNode.SweepParams" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SweepParams As TlcModule.SweepableParamAttribute()" />
      <MemberSignature Language="F#" Value="member this.SweepParams : Microsoft.ML.Runtime.EntryPoints.TlcModule.SweepableParamAttribute[]" Usage="Microsoft.ML.Runtime.PipelineInference.TrainerPipelineNode.SweepParams" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::ML::Runtime::EntryPoints::TlcModule::SweepableParamAttribute ^&gt; ^ SweepParams { cli::array &lt;Microsoft::ML::Runtime::EntryPoints::TlcModule::SweepableParamAttribute ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.TlcModule+SweepableParamAttribute[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.TrainerPipelineNode.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="trainerPipelineNode.ToString " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override Platform::String ^ ToString();" />
      <MemberSignature Language="C++ WINRT" Value=" override std::wstring ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateProperties">
      <MemberSignature Language="C#" Value="public bool UpdateProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UpdateProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.TrainerPipelineNode.UpdateProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateProperties () As Boolean" />
      <MemberSignature Language="F#" Value="member this.UpdateProperties : unit -&gt; bool" Usage="trainerPipelineNode.UpdateProperties " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UpdateProperties();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool UpdateProperties();" />
      <MemberSignature Language="C++ WINRT" Value="bool UpdateProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>