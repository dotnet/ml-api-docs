<Type Name="TransformInference+SuggestedTransform" FullName="Microsoft.ML.Runtime.PipelineInference.TransformInference+SuggestedTransform">
  <TypeSignature Language="C#" Value="public struct TransformInference.SuggestedTransform : IEquatable&lt;Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit TransformInference/SuggestedTransform extends System.ValueType implements class System.IEquatable`1&lt;valuetype Microsoft.ML.Runtime.PipelineInference.TransformInference/SuggestedTransform&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform" />
  <TypeSignature Language="VB.NET" Value="Public Structure TransformInference.SuggestedTransform&#xA;Implements IEquatable(Of TransformInference.SuggestedTransform)" />
  <TypeSignature Language="F#" Value="type TransformInference.SuggestedTransform = struct" />
  <TypeSignature Language="C++ CLI" Value="public: value class TransformInference::SuggestedTransform : IEquatable&lt;Microsoft::ML::Runtime::PipelineInference::TransformInference::SuggestedTransform&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.ML.Runtime.PipelineInference.TransformInference+SuggestedTransform&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SuggestedTransform (string description, Microsoft.ML.Runtime.CommandLine.SubComponent&lt;Microsoft.ML.Runtime.Data.IDataTransform,Microsoft.ML.Runtime.Data.SignatureDataTransform&gt; transform, Type expertType, Microsoft.ML.Runtime.PipelineInference.TransformPipelineNode pipelineNode = null, int atomicGroupId = -1, Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure routingStructure = null, bool alwaysInclude = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string description, class Microsoft.ML.Runtime.CommandLine.SubComponent`2&lt;class Microsoft.ML.Runtime.Data.IDataTransform, class Microsoft.ML.Runtime.Data.SignatureDataTransform&gt; transform, class System.Type expertType, class Microsoft.ML.Runtime.PipelineInference.TransformPipelineNode pipelineNode, int32 atomicGroupId, class Microsoft.ML.Runtime.PipelineInference.TransformInference/ColumnRoutingStructure routingStructure, bool alwaysInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform.#ctor(System.String,Microsoft.ML.Runtime.CommandLine.SubComponent{Microsoft.ML.Runtime.Data.IDataTransform,Microsoft.ML.Runtime.Data.SignatureDataTransform},System.Type,Microsoft.ML.Runtime.PipelineInference.TransformPipelineNode,System.Int32,Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (description As String, transform As SubComponent(Of IDataTransform, SignatureDataTransform), expertType As Type, Optional pipelineNode As TransformPipelineNode = null, Optional atomicGroupId As Integer = -1, Optional routingStructure As TransformInference.ColumnRoutingStructure = null, Optional alwaysInclude As Boolean = false)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform : string * Microsoft.ML.Runtime.CommandLine.SubComponent&lt;Microsoft.ML.Runtime.Data.IDataTransform, Microsoft.ML.Runtime.Data.SignatureDataTransform&gt; * Type * Microsoft.ML.Runtime.PipelineInference.TransformPipelineNode * int * Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure * bool -&gt; Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform" Usage="new Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform (description, transform, expertType, pipelineNode, atomicGroupId, routingStructure, alwaysInclude)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="transform" Type="Microsoft.ML.Runtime.CommandLine.SubComponent&lt;Microsoft.ML.Runtime.Data.IDataTransform,Microsoft.ML.Runtime.Data.SignatureDataTransform&gt;" />
        <Parameter Name="expertType" Type="System.Type" />
        <Parameter Name="pipelineNode" Type="Microsoft.ML.Runtime.PipelineInference.TransformPipelineNode" />
        <Parameter Name="atomicGroupId" Type="System.Int32" />
        <Parameter Name="routingStructure" Type="Microsoft.ML.Runtime.PipelineInference.TransformInference+ColumnRoutingStructure" />
        <Parameter Name="alwaysInclude" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="description">To be added.</param>
        <param name="transform">To be added.</param>
        <param name="expertType">To be added.</param>
        <param name="pipelineNode">To be added.</param>
        <param name="atomicGroupId">To be added.</param>
        <param name="routingStructure">To be added.</param>
        <param name="alwaysInclude">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlwaysInclude">
      <MemberSignature Language="C#" Value="public bool AlwaysInclude { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlwaysInclude" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform.AlwaysInclude" />
      <MemberSignature Language="VB.NET" Value="Public Property AlwaysInclude As Boolean" />
      <MemberSignature Language="F#" Value="member this.AlwaysInclude : bool with get, set" Usage="Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform.AlwaysInclude" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlwaysInclude { bool get(); void set(bool value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool AlwaysInclude { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AtomicGroupId">
      <MemberSignature Language="C#" Value="public int AtomicGroupId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AtomicGroupId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform.AtomicGroupId" />
      <MemberSignature Language="VB.NET" Value="Public Property AtomicGroupId As Integer" />
      <MemberSignature Language="F#" Value="member this.AtomicGroupId : int with get, set" Usage="Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform.AtomicGroupId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AtomicGroupId { int get(); void set(int value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int AtomicGroupId { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.ML.Runtime.PipelineInference.TransformInference/SuggestedTransform Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As TransformInference.SuggestedTransform" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform" Usage="suggestedTransform.Clone " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::ML::Runtime::PipelineInference::TransformInference::SuggestedTransform Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.TransformInference+SuggestedTransform</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public readonly string Description;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly string Description" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Description As String " />
      <MemberSignature Language="F#" Value="val mutable Description : string" Usage="Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform.Description" />
      <MemberSignature Language="C++ CLI" Value="public: initonly System::String ^ Description;" />
      <MemberSignature Language="C++ CX" Value="public: initonly Platform::String ^ Description;" />
      <MemberSignature Language="C++ WINRT" Value="initonly std::wstring Description;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Microsoft.ML.Runtime.PipelineInference.TransformInference/SuggestedTransform transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform.Equals(Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (transform As TransformInference.SuggestedTransform) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform -&gt; bool" Usage="suggestedTransform.Equals transform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Microsoft::ML::Runtime::PipelineInference::TransformInference::SuggestedTransform transform);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="Microsoft.ML.Runtime.PipelineInference.TransformInference+SuggestedTransform" />
      </Parameters>
      <Docs>
        <param name="transform">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpertType">
      <MemberSignature Language="C#" Value="public readonly Type ExpertType;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly class System.Type ExpertType" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform.ExpertType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly ExpertType As Type " />
      <MemberSignature Language="F#" Value="val mutable ExpertType : Type" Usage="Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform.ExpertType" />
      <MemberSignature Language="C++ CLI" Value="public: initonly Type ^ ExpertType;" />
      <MemberSignature Language="C++ CX" Value="public: initonly Platform::Type ^ ExpertType;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PipelineNode">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.PipelineInference.TransformPipelineNode PipelineNode;" />
      <MemberSignature Language="ILAsm" Value=".field public class Microsoft.ML.Runtime.PipelineInference.TransformPipelineNode PipelineNode" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform.PipelineNode" />
      <MemberSignature Language="VB.NET" Value="Public PipelineNode As TransformPipelineNode " />
      <MemberSignature Language="F#" Value="val mutable PipelineNode : Microsoft.ML.Runtime.PipelineInference.TransformPipelineNode" Usage="Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform.PipelineNode" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::ML::Runtime::PipelineInference::TransformPipelineNode ^ PipelineNode;" />
      <MemberSignature Language="C++ CX" Value="public: Microsoft::ML::Runtime::PipelineInference::TransformPipelineNode ^ PipelineNode;" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::ML::Runtime::PipelineInference::TransformPipelineNode PipelineNode;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.TransformPipelineNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoutingStructure">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure RoutingStructure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.PipelineInference.TransformInference/ColumnRoutingStructure RoutingStructure" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform.RoutingStructure" />
      <MemberSignature Language="VB.NET" Value="Public Property RoutingStructure As TransformInference.ColumnRoutingStructure" />
      <MemberSignature Language="F#" Value="member this.RoutingStructure : Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure with get, set" Usage="Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform.RoutingStructure" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ML::Runtime::PipelineInference::TransformInference::ColumnRoutingStructure ^ RoutingStructure { Microsoft::ML::Runtime::PipelineInference::TransformInference::ColumnRoutingStructure ^ get(); void set(Microsoft::ML::Runtime::PipelineInference::TransformInference::ColumnRoutingStructure ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.TransformInference+ColumnRoutingStructure</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="suggestedTransform.ToString " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override Platform::String ^ ToString();" />
      <MemberSignature Language="C++ WINRT" Value=" override std::wstring ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public readonly Microsoft.ML.Runtime.CommandLine.SubComponent&lt;Microsoft.ML.Runtime.Data.IDataTransform,Microsoft.ML.Runtime.Data.SignatureDataTransform&gt; Transform;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly class Microsoft.ML.Runtime.CommandLine.SubComponent`2&lt;class Microsoft.ML.Runtime.Data.IDataTransform, class Microsoft.ML.Runtime.Data.SignatureDataTransform&gt; Transform" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform.Transform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Transform As SubComponent(Of IDataTransform, SignatureDataTransform) " />
      <MemberSignature Language="F#" Value="val mutable Transform : Microsoft.ML.Runtime.CommandLine.SubComponent&lt;Microsoft.ML.Runtime.Data.IDataTransform, Microsoft.ML.Runtime.Data.SignatureDataTransform&gt;" Usage="Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform.Transform" />
      <MemberSignature Language="C++ CLI" Value="public: initonly Microsoft::ML::Runtime::CommandLine::SubComponent&lt;Microsoft::ML::Runtime::Data::IDataTransform ^, Microsoft::ML::Runtime::Data::SignatureDataTransform ^&gt; ^ Transform;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.CommandLine.SubComponent&lt;Microsoft.ML.Runtime.Data.IDataTransform,Microsoft.ML.Runtime.Data.SignatureDataTransform&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>