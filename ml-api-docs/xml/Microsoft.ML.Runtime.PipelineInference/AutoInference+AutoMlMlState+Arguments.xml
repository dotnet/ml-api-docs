<Type Name="AutoInference+AutoMlMlState+Arguments" FullName="Microsoft.ML.Runtime.PipelineInference.AutoInference+AutoMlMlState+Arguments">
  <TypeSignature Language="C#" Value="public sealed class AutoInference.AutoMlMlState.Arguments : Microsoft.ML.Runtime.EntryPoints.IComponentFactory&lt;Microsoft.ML.Runtime.EntryPoints.IMlState&gt;, Microsoft.ML.Runtime.PipelineInference.AutoInference.ISupportAutoMlStateFactory" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit AutoInference/AutoMlMlState/Arguments extends System.Object implements class Microsoft.ML.Runtime.EntryPoints.IComponentFactory, class Microsoft.ML.Runtime.EntryPoints.IComponentFactory`1&lt;class Microsoft.ML.Runtime.EntryPoints.IMlState&gt;, class Microsoft.ML.Runtime.PipelineInference.AutoInference/ISupportAutoMlStateFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.Arguments" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AutoInference.AutoMlMlState.Arguments&#xA;Implements AutoInference.ISupportAutoMlStateFactory, IComponentFactory(Of IMlState)" />
  <TypeSignature Language="F#" Value="type AutoInference.AutoMlMlState.Arguments = class&#xA;    interface AutoInference.ISupportAutoMlStateFactory&#xA;    interface IComponentFactory&lt;IMlState&gt;&#xA;    interface IComponentFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.EntryPoints.IComponentFactory&lt;Microsoft.ML.Runtime.EntryPoints.IMlState&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.PipelineInference.AutoInference+ISupportAutoMlStateFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/Component(Alias="automlst", Desc="State of an AutoML search and search space.", FriendlyName="AutoML State", Name="AutoMlState")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Arguments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.Arguments.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.IMlState CreateComponent (Microsoft.ML.Runtime.IHostEnvironment env);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.EntryPoints.IMlState CreateComponent(class Microsoft.ML.Runtime.IHostEnvironment env) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.Arguments.CreateComponent(Microsoft.ML.Runtime.IHostEnvironment)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateComponent (env As IHostEnvironment) As IMlState" />
      <MemberSignature Language="F#" Value="abstract member CreateComponent : Microsoft.ML.Runtime.IHostEnvironment -&gt; Microsoft.ML.Runtime.EntryPoints.IMlState&#xA;override this.CreateComponent : Microsoft.ML.Runtime.IHostEnvironment -&gt; Microsoft.ML.Runtime.EntryPoints.IMlState" Usage="arguments.CreateComponent env" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.EntryPoints.IComponentFactory`1.CreateComponent(Microsoft.ML.Runtime.IHostEnvironment)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.IMlState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Engine">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.PipelineInference.ISupportIPipelineOptimizerFactory Engine;" />
      <MemberSignature Language="ILAsm" Value=".field public class Microsoft.ML.Runtime.PipelineInference.ISupportIPipelineOptimizerFactory Engine" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.Arguments.Engine" />
      <MemberSignature Language="VB.NET" Value="Public Engine As ISupportIPipelineOptimizerFactory " />
      <MemberSignature Language="F#" Value="val mutable Engine : Microsoft.ML.Runtime.PipelineInference.ISupportIPipelineOptimizerFactory" Usage="Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.Arguments.Engine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.CommandLine.Argument(Microsoft.ML.Runtime.CommandLine.ArgumentType.Required, HelpText="AutoML engine (pipeline optimizer) that generates next candidates.", ShortName="engine")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.ISupportIPipelineOptimizerFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metric">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.Arguments.Metrics Metric;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype Microsoft.ML.Runtime.PipelineInference.AutoInference/AutoMlMlState/Arguments/Metrics Metric" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.Arguments.Metric" />
      <MemberSignature Language="VB.NET" Value="Public Metric As AutoInference.AutoMlMlState.Arguments.Metrics " />
      <MemberSignature Language="F#" Value="val mutable Metric : Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.Arguments.Metrics" Usage="Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.Arguments.Metric" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.CommandLine.Argument(Microsoft.ML.Runtime.CommandLine.ArgumentType.Required, HelpText="Supported metric for evaluator.", ShortName="metric")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.AutoInference+AutoMlMlState+Arguments+Metrics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestedLearners">
      <MemberSignature Language="C#" Value="public string[] RequestedLearners;" />
      <MemberSignature Language="ILAsm" Value=".field public string[] RequestedLearners" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.Arguments.RequestedLearners" />
      <MemberSignature Language="VB.NET" Value="Public RequestedLearners As String() " />
      <MemberSignature Language="F#" Value="val mutable RequestedLearners : string[]" Usage="Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.Arguments.RequestedLearners" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.CommandLine.Argument(Microsoft.ML.Runtime.CommandLine.ArgumentType.AtMostOnce, HelpText="Learner set to sweep over (if available).", ShortName="learners")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminatorArgs">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.PipelineInference.ISupportITerminatorFactory TerminatorArgs;" />
      <MemberSignature Language="ILAsm" Value=".field public class Microsoft.ML.Runtime.PipelineInference.ISupportITerminatorFactory TerminatorArgs" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.Arguments.TerminatorArgs" />
      <MemberSignature Language="VB.NET" Value="Public TerminatorArgs As ISupportITerminatorFactory " />
      <MemberSignature Language="F#" Value="val mutable TerminatorArgs : Microsoft.ML.Runtime.PipelineInference.ISupportITerminatorFactory" Usage="Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.Arguments.TerminatorArgs" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.CommandLine.Argument(Microsoft.ML.Runtime.CommandLine.ArgumentType.Required, HelpText="Arguments for creating terminator, which determines when to stop search.", ShortName="term")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.ISupportITerminatorFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainerKind">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.MacroUtils.TrainerKinds TrainerKind;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype Microsoft.ML.Runtime.EntryPoints.MacroUtils/TrainerKinds TrainerKind" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.Arguments.TrainerKind" />
      <MemberSignature Language="VB.NET" Value="Public TrainerKind As MacroUtils.TrainerKinds " />
      <MemberSignature Language="F#" Value="val mutable TrainerKind : Microsoft.ML.Runtime.EntryPoints.MacroUtils.TrainerKinds" Usage="Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.Arguments.TrainerKind" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.CommandLine.Argument(Microsoft.ML.Runtime.CommandLine.ArgumentType.Required, HelpText="Kind of trainer for task, such as binary classification trainer, multiclass trainer, etc.", ShortName="tk")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.MacroUtils+TrainerKinds</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>