<Type Name="PipelineOptimizerBase" FullName="Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase">
  <TypeSignature Language="C#" Value="public abstract class PipelineOptimizerBase : Microsoft.ML.Runtime.PipelineInference.IPipelineOptimizer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PipelineOptimizerBase extends System.Object implements class Microsoft.ML.Runtime.PipelineInference.IPipelineOptimizer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PipelineOptimizerBase&#xA;Implements IPipelineOptimizer" />
  <TypeSignature Language="F#" Value="type PipelineOptimizerBase = class&#xA;    interface IPipelineOptimizer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.PipelineInference.IPipelineOptimizer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PipelineOptimizerBase (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.IHost host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.IHost host) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.IHost)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (env As IHostEnvironment, host As IHost)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.IHost -&gt; Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase" Usage="new Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase (env, host)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="host" Type="Microsoft.ML.Runtime.IHost" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="host">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailableLearners">
      <MemberSignature Language="C#" Value="protected Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[] AvailableLearners;" />
      <MemberSignature Language="ILAsm" Value=".field family valuetype Microsoft.ML.Runtime.PipelineInference.RecipeInference/SuggestedRecipe/SuggestedLearner[] AvailableLearners" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.AvailableLearners" />
      <MemberSignature Language="VB.NET" Value="Protected AvailableLearners As RecipeInference.SuggestedRecipe.SuggestedLearner() " />
      <MemberSignature Language="F#" Value="val mutable AvailableLearners : Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[]" Usage="Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.AvailableLearners" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.RecipeInference+SuggestedRecipe+SuggestedLearner[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailableTransforms">
      <MemberSignature Language="C#" Value="protected Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform[] AvailableTransforms;" />
      <MemberSignature Language="ILAsm" Value=".field family valuetype Microsoft.ML.Runtime.PipelineInference.TransformInference/SuggestedTransform[] AvailableTransforms" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.AvailableTransforms" />
      <MemberSignature Language="VB.NET" Value="Protected AvailableTransforms As TransformInference.SuggestedTransform() " />
      <MemberSignature Language="F#" Value="val mutable AvailableTransforms : Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform[]" Usage="Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.AvailableTransforms" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.TransformInference+SuggestedTransform[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependencyMapping">
      <MemberSignature Language="C#" Value="protected Microsoft.ML.Runtime.PipelineInference.AutoInference.DependencyMap DependencyMapping;" />
      <MemberSignature Language="ILAsm" Value=".field family class Microsoft.ML.Runtime.PipelineInference.AutoInference/DependencyMap DependencyMapping" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.DependencyMapping" />
      <MemberSignature Language="VB.NET" Value="Protected DependencyMapping As AutoInference.DependencyMap " />
      <MemberSignature Language="F#" Value="val mutable DependencyMapping : Microsoft.ML.Runtime.PipelineInference.AutoInference.DependencyMap" Usage="Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.DependencyMapping" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.AutoInference+DependencyMap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Env">
      <MemberSignature Language="C#" Value="protected readonly Microsoft.ML.Runtime.IHostEnvironment Env;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class Microsoft.ML.Runtime.IHostEnvironment Env" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.Env" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Env As IHostEnvironment " />
      <MemberSignature Language="F#" Value="val mutable Env : Microsoft.ML.Runtime.IHostEnvironment" Usage="Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.Env" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IHostEnvironment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullyTransformedData">
      <MemberSignature Language="C#" Value="protected Microsoft.ML.Runtime.Data.IDataView FullyTransformedData;" />
      <MemberSignature Language="ILAsm" Value=".field family class Microsoft.ML.Runtime.Data.IDataView FullyTransformedData" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.FullyTransformedData" />
      <MemberSignature Language="VB.NET" Value="Protected FullyTransformedData As IDataView " />
      <MemberSignature Language="F#" Value="val mutable FullyTransformedData : Microsoft.ML.Runtime.Data.IDataView" Usage="Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.FullyTransformedData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashKey">
      <MemberSignature Language="C#" Value="protected string GetHashKey (long transformsBitMask, Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner learner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetHashKey(int64 transformsBitMask, valuetype Microsoft.ML.Runtime.PipelineInference.RecipeInference/SuggestedRecipe/SuggestedLearner learner) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.GetHashKey(System.Int64,Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetHashKey (transformsBitMask As Long, learner As RecipeInference.SuggestedRecipe.SuggestedLearner) As String" />
      <MemberSignature Language="F#" Value="member this.GetHashKey : int64 * Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner -&gt; string" Usage="pipelineOptimizerBase.GetHashKey (transformsBitMask, learner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformsBitMask" Type="System.Int64" />
        <Parameter Name="learner" Type="Microsoft.ML.Runtime.PipelineInference.RecipeInference+SuggestedRecipe+SuggestedLearner" />
      </Parameters>
      <Docs>
        <param name="transformsBitMask">To be added.</param>
        <param name="learner">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextCandidates">
      <MemberSignature Language="C#" Value="public abstract Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] GetNextCandidates (System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern&gt; history, int numberOfCandidates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] GetNextCandidates(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.ML.Runtime.PipelineInference.PipelinePattern&gt; history, int32 numberOfCandidates) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.GetNextCandidates(System.Collections.Generic.IEnumerable{Microsoft.ML.Runtime.PipelineInference.PipelinePattern},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextCandidates (history As IEnumerable(Of PipelinePattern), numberOfCandidates As Integer) As PipelinePattern()" />
      <MemberSignature Language="F#" Value="abstract member GetNextCandidates : seq&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern&gt; * int -&gt; Microsoft.ML.Runtime.PipelineInference.PipelinePattern[]" Usage="pipelineOptimizerBase.GetNextCandidates (history, numberOfCandidates)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.PipelineInference.IPipelineOptimizer.GetNextCandidates(System.Collections.Generic.IEnumerable{Microsoft.ML.Runtime.PipelineInference.PipelinePattern},System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.PipelinePattern[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="history" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern&gt;" />
        <Parameter Name="numberOfCandidates" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="history">To be added.</param>
        <param name="numberOfCandidates">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="protected readonly Microsoft.ML.Runtime.IHost Host;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class Microsoft.ML.Runtime.IHost Host" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.Host" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Host As IHost " />
      <MemberSignature Language="F#" Value="val mutable Host : Microsoft.ML.Runtime.IHost" Usage="Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.Host" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMaximizingMetric">
      <MemberSignature Language="C#" Value="protected bool IsMaximizingMetric;" />
      <MemberSignature Language="ILAsm" Value=".field family bool IsMaximizingMetric" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.IsMaximizingMetric" />
      <MemberSignature Language="VB.NET" Value="Protected IsMaximizingMetric As Boolean " />
      <MemberSignature Language="F#" Value="val mutable IsMaximizingMetric : bool" Usage="Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.IsMaximizingMetric" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LearnerHistoryToWeights">
      <MemberSignature Language="C#" Value="protected double[] LearnerHistoryToWeights (Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] history, bool isMaximizingMetric);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance float64[] LearnerHistoryToWeights(class Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] history, bool isMaximizingMetric) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.LearnerHistoryToWeights(Microsoft.ML.Runtime.PipelineInference.PipelinePattern[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function LearnerHistoryToWeights (history As PipelinePattern(), isMaximizingMetric As Boolean) As Double()" />
      <MemberSignature Language="F#" Value="member this.LearnerHistoryToWeights : Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] * bool -&gt; double[]" Usage="pipelineOptimizerBase.LearnerHistoryToWeights (history, isMaximizingMetric)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="history" Type="Microsoft.ML.Runtime.PipelineInference.PipelinePattern[]" />
        <Parameter Name="isMaximizingMetric" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="history">To be added.</param>
        <param name="isMaximizingMetric">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalData">
      <MemberSignature Language="C#" Value="protected Microsoft.ML.Runtime.Data.IDataView OriginalData;" />
      <MemberSignature Language="ILAsm" Value=".field family class Microsoft.ML.Runtime.Data.IDataView OriginalData" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.OriginalData" />
      <MemberSignature Language="VB.NET" Value="Protected OriginalData As IDataView " />
      <MemberSignature Language="F#" Value="val mutable OriginalData : Microsoft.ML.Runtime.Data.IDataView" Usage="Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.OriginalData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PipelineVerifier">
      <MemberSignature Language="C#" Value="protected Func&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern,long,bool&gt; PipelineVerifier;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Func`3&lt;class Microsoft.ML.Runtime.PipelineInference.PipelinePattern, int64, bool&gt; PipelineVerifier" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.PipelineVerifier" />
      <MemberSignature Language="VB.NET" Value="Protected PipelineVerifier As Func(Of PipelinePattern, Long, Boolean) " />
      <MemberSignature Language="F#" Value="val mutable PipelineVerifier : Func&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern, int64, bool&gt;" Usage="Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.PipelineVerifier" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern,System.Int64,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProbUtils">
      <MemberSignature Language="C#" Value="protected readonly Microsoft.ML.Runtime.Sweeper.Algorithms.SweeperProbabilityUtils ProbUtils;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class Microsoft.ML.Runtime.Sweeper.Algorithms.SweeperProbabilityUtils ProbUtils" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.ProbUtils" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly ProbUtils As SweeperProbabilityUtils " />
      <MemberSignature Language="F#" Value="val mutable ProbUtils : Microsoft.ML.Runtime.Sweeper.Algorithms.SweeperProbabilityUtils" Usage="Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.ProbUtils" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Sweeper.Algorithms.SweeperProbabilityUtils</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleHyperparameters">
      <MemberSignature Language="C#" Value="protected void SampleHyperparameters (Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner learner, Microsoft.ML.Runtime.ISweeper sweeper, bool isMaximizingMetric, Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] history);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SampleHyperparameters(valuetype Microsoft.ML.Runtime.PipelineInference.RecipeInference/SuggestedRecipe/SuggestedLearner learner, class Microsoft.ML.Runtime.ISweeper sweeper, bool isMaximizingMetric, class Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] history) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.SampleHyperparameters(Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner,Microsoft.ML.Runtime.ISweeper,System.Boolean,Microsoft.ML.Runtime.PipelineInference.PipelinePattern[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SampleHyperparameters (learner As RecipeInference.SuggestedRecipe.SuggestedLearner, sweeper As ISweeper, isMaximizingMetric As Boolean, history As PipelinePattern())" />
      <MemberSignature Language="F#" Value="member this.SampleHyperparameters : Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner * Microsoft.ML.Runtime.ISweeper * bool * Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] -&gt; unit" Usage="pipelineOptimizerBase.SampleHyperparameters (learner, sweeper, isMaximizingMetric, history)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="learner" Type="Microsoft.ML.Runtime.PipelineInference.RecipeInference+SuggestedRecipe+SuggestedLearner" />
        <Parameter Name="sweeper" Type="Microsoft.ML.Runtime.ISweeper" />
        <Parameter Name="isMaximizingMetric" Type="System.Boolean" />
        <Parameter Name="history" Type="Microsoft.ML.Runtime.PipelineInference.PipelinePattern[]" />
      </Parameters>
      <Docs>
        <param name="learner">To be added.</param>
        <param name="sweeper">To be added.</param>
        <param name="isMaximizingMetric">To be added.</param>
        <param name="history">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpace">
      <MemberSignature Language="C#" Value="public virtual void SetSpace (Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform[] availableTransforms, Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[] availableLearners, Func&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern,long,bool&gt; pipelineVerifier, Microsoft.ML.Runtime.Data.IDataView originalData, Microsoft.ML.Runtime.Data.IDataView fullyTransformedData, Microsoft.ML.Runtime.PipelineInference.AutoInference.DependencyMap dependencyMapping, bool isMaximizingMetric);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSpace(valuetype Microsoft.ML.Runtime.PipelineInference.TransformInference/SuggestedTransform[] availableTransforms, valuetype Microsoft.ML.Runtime.PipelineInference.RecipeInference/SuggestedRecipe/SuggestedLearner[] availableLearners, class System.Func`3&lt;class Microsoft.ML.Runtime.PipelineInference.PipelinePattern, int64, bool&gt; pipelineVerifier, class Microsoft.ML.Runtime.Data.IDataView originalData, class Microsoft.ML.Runtime.Data.IDataView fullyTransformedData, class Microsoft.ML.Runtime.PipelineInference.AutoInference/DependencyMap dependencyMapping, bool isMaximizingMetric) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.SetSpace(Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform[],Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[],System.Func{Microsoft.ML.Runtime.PipelineInference.PipelinePattern,System.Int64,System.Boolean},Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.PipelineInference.AutoInference.DependencyMap,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetSpace (availableTransforms As TransformInference.SuggestedTransform(), availableLearners As RecipeInference.SuggestedRecipe.SuggestedLearner(), pipelineVerifier As Func(Of PipelinePattern, Long, Boolean), originalData As IDataView, fullyTransformedData As IDataView, dependencyMapping As AutoInference.DependencyMap, isMaximizingMetric As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetSpace : Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform[] * Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[] * Func&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern, int64, bool&gt; * Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.PipelineInference.AutoInference.DependencyMap * bool -&gt; unit&#xA;override this.SetSpace : Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform[] * Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[] * Func&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern, int64, bool&gt; * Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.PipelineInference.AutoInference.DependencyMap * bool -&gt; unit" Usage="pipelineOptimizerBase.SetSpace (availableTransforms, availableLearners, pipelineVerifier, originalData, fullyTransformedData, dependencyMapping, isMaximizingMetric)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.PipelineInference.IPipelineOptimizer.SetSpace(Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform[],Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[],System.Func{Microsoft.ML.Runtime.PipelineInference.PipelinePattern,System.Int64,System.Boolean},Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.PipelineInference.AutoInference.DependencyMap,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableTransforms" Type="Microsoft.ML.Runtime.PipelineInference.TransformInference+SuggestedTransform[]" />
        <Parameter Name="availableLearners" Type="Microsoft.ML.Runtime.PipelineInference.RecipeInference+SuggestedRecipe+SuggestedLearner[]" />
        <Parameter Name="pipelineVerifier" Type="System.Func&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern,System.Int64,System.Boolean&gt;" />
        <Parameter Name="originalData" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="fullyTransformedData" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="dependencyMapping" Type="Microsoft.ML.Runtime.PipelineInference.AutoInference+DependencyMap" />
        <Parameter Name="isMaximizingMetric" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="availableTransforms">To be added.</param>
        <param name="availableLearners">To be added.</param>
        <param name="pipelineVerifier">To be added.</param>
        <param name="originalData">To be added.</param>
        <param name="fullyTransformedData">To be added.</param>
        <param name="dependencyMapping">To be added.</param>
        <param name="isMaximizingMetric">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformsMaskValidity">
      <MemberSignature Language="C#" Value="protected readonly System.Collections.Generic.Dictionary&lt;long,bool&gt; TransformsMaskValidity;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class System.Collections.Generic.Dictionary`2&lt;int64, bool&gt; TransformsMaskValidity" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.TransformsMaskValidity" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly TransformsMaskValidity As Dictionary(Of Long, Boolean) " />
      <MemberSignature Language="F#" Value="val mutable TransformsMaskValidity : System.Collections.Generic.Dictionary&lt;int64, bool&gt;" Usage="Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.TransformsMaskValidity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Int64,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLearners">
      <MemberSignature Language="C#" Value="public virtual void UpdateLearners (Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[] availableLearners);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateLearners(valuetype Microsoft.ML.Runtime.PipelineInference.RecipeInference/SuggestedRecipe/SuggestedLearner[] availableLearners) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.UpdateLearners(Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateLearners (availableLearners As RecipeInference.SuggestedRecipe.SuggestedLearner())" />
      <MemberSignature Language="F#" Value="abstract member UpdateLearners : Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[] -&gt; unit&#xA;override this.UpdateLearners : Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[] -&gt; unit" Usage="pipelineOptimizerBase.UpdateLearners availableLearners" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.PipelineInference.IPipelineOptimizer.UpdateLearners(Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableLearners" Type="Microsoft.ML.Runtime.PipelineInference.RecipeInference+SuggestedRecipe+SuggestedLearner[]" />
      </Parameters>
      <Docs>
        <param name="availableLearners">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitedPipelines">
      <MemberSignature Language="C#" Value="protected readonly System.Collections.Generic.HashSet&lt;string&gt; VisitedPipelines;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class System.Collections.Generic.HashSet`1&lt;string&gt; VisitedPipelines" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.VisitedPipelines" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly VisitedPipelines As HashSet(Of String) " />
      <MemberSignature Language="F#" Value="val mutable VisitedPipelines : System.Collections.Generic.HashSet&lt;string&gt;" Usage="Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.VisitedPipelines" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.HashSet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>