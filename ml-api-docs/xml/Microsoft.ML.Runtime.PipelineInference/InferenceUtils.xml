<Type Name="InferenceUtils" FullName="Microsoft.ML.Runtime.PipelineInference.InferenceUtils">
  <TypeSignature Language="C#" Value="public static class InferenceUtils" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit InferenceUtils extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.PipelineInference.InferenceUtils" />
  <TypeSignature Language="VB.NET" Value="Public Module InferenceUtils" />
  <TypeSignature Language="F#" Value="type InferenceUtils = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataView Cache (this Microsoft.ML.Runtime.Data.IDataView data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataView Cache(class Microsoft.ML.Runtime.Data.IDataView data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.InferenceUtils.Cache(Microsoft.ML.Runtime.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Cache (data As IDataView) As IDataView" />
      <MemberSignature Language="F#" Value="static member Cache : Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.Data.IDataView" Usage="Microsoft.ML.Runtime.PipelineInference.InferenceUtils.Cache data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.IDataView" RefType="this" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InferColumnPurposes">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.PipelineInference.ColumnGroupingInference.GroupingColumn[] InferColumnPurposes (Microsoft.ML.Runtime.IChannel ch, Microsoft.ML.Runtime.IHost env, Microsoft.ML.Runtime.PipelineInference.TextFileSample sample, Microsoft.ML.Runtime.PipelineInference.TextFileContents.ColumnSplitResult splitResult, out bool hasHeader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.ML.Runtime.PipelineInference.ColumnGroupingInference/GroupingColumn[] InferColumnPurposes(class Microsoft.ML.Runtime.IChannel ch, class Microsoft.ML.Runtime.IHost env, class Microsoft.ML.Runtime.PipelineInference.TextFileSample sample, valuetype Microsoft.ML.Runtime.PipelineInference.TextFileContents/ColumnSplitResult splitResult, [out] bool&amp; hasHeader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.InferenceUtils.InferColumnPurposes(Microsoft.ML.Runtime.IChannel,Microsoft.ML.Runtime.IHost,Microsoft.ML.Runtime.PipelineInference.TextFileSample,Microsoft.ML.Runtime.PipelineInference.TextFileContents.ColumnSplitResult,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferColumnPurposes (ch As IChannel, env As IHost, sample As TextFileSample, splitResult As TextFileContents.ColumnSplitResult, ByRef hasHeader As Boolean) As ColumnGroupingInference.GroupingColumn()" />
      <MemberSignature Language="F#" Value="static member InferColumnPurposes : Microsoft.ML.Runtime.IChannel * Microsoft.ML.Runtime.IHost * Microsoft.ML.Runtime.PipelineInference.TextFileSample * Microsoft.ML.Runtime.PipelineInference.TextFileContents.ColumnSplitResult *  -&gt; Microsoft.ML.Runtime.PipelineInference.ColumnGroupingInference.GroupingColumn[]" Usage="Microsoft.ML.Runtime.PipelineInference.InferenceUtils.InferColumnPurposes (ch, env, sample, splitResult, hasHeader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.ColumnGroupingInference+GroupingColumn[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Microsoft.ML.Runtime.IChannel" />
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHost" />
        <Parameter Name="sample" Type="Microsoft.ML.Runtime.PipelineInference.TextFileSample" />
        <Parameter Name="splitResult" Type="Microsoft.ML.Runtime.PipelineInference.TextFileContents+ColumnSplitResult" />
        <Parameter Name="hasHeader" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ch">To be added.</param>
        <param name="env">To be added.</param>
        <param name="sample">To be added.</param>
        <param name="splitResult">To be added.</param>
        <param name="hasHeader">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InferPredictorCategoryType">
      <MemberSignature Language="C#" Value="public static Type InferPredictorCategoryType (Microsoft.ML.Runtime.Data.IDataView data, Microsoft.ML.Runtime.PipelineInference.PurposeInference.Column[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type InferPredictorCategoryType(class Microsoft.ML.Runtime.Data.IDataView data, valuetype Microsoft.ML.Runtime.PipelineInference.PurposeInference/Column[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.InferenceUtils.InferPredictorCategoryType(Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.PipelineInference.PurposeInference.Column[])" />
      <MemberSignature Language="VB.NET" Value="Public Function InferPredictorCategoryType (data As IDataView, columns As PurposeInference.Column()) As Type" />
      <MemberSignature Language="F#" Value="static member InferPredictorCategoryType : Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.PipelineInference.PurposeInference.Column[] -&gt; Type" Usage="Microsoft.ML.Runtime.PipelineInference.InferenceUtils.InferPredictorCategoryType (data, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="columns" Type="Microsoft.ML.Runtime.PipelineInference.PurposeInference+Column[]" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="columns">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataView Take (this Microsoft.ML.Runtime.Data.IDataView data, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataView Take(class Microsoft.ML.Runtime.Data.IDataView data, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.InferenceUtils.Take(Microsoft.ML.Runtime.Data.IDataView,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Take (data As IDataView, count As Integer) As IDataView" />
      <MemberSignature Language="F#" Value="static member Take : Microsoft.ML.Runtime.Data.IDataView * int -&gt; Microsoft.ML.Runtime.Data.IDataView" Usage="Microsoft.ML.Runtime.PipelineInference.InferenceUtils.Take (data, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.IDataView" RefType="this" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>