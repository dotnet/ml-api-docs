<Type Name="Predictor" FullName="Microsoft.ML.Runtime.Api.Predictor">
  <TypeSignature Language="C#" Value="public sealed class Predictor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Predictor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Api.Predictor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Predictor" />
  <TypeSignature Language="F#" Value="type Predictor = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Api</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            An opaque 'holder' of the predictor, meant to insulate the user from the internal TLC predictor structure,
            which is subject to change.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetPredictorObject">
      <MemberSignature Language="C#" Value="public object GetPredictorObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPredictorObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.Predictor.GetPredictorObject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPredictorObject () As Object" />
      <MemberSignature Language="F#" Value="member this.GetPredictorObject : unit -&gt; obj" Usage="predictor.GetPredictorObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Api</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Welcome adventurous stranger, to the Underdark! By calling the mysterious GetPredictorObject method, you have entered a world of shifting realities, where nothing is as it seems. Your code may work today, but the churning impermanence of the Underdark means the strong foothold today may be nothing but empty air tomorrow. Brace yourself!")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            A way for the user to extract the predictor object and 'delve into the underworld' of unsupported non-API methods.
            This is needed, for instance, to inspect the weights of a predictor programmatically.
            The intention is to expose most methods through the API and make usage of this method increasingly unnecessary.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>