<Type Name="CalibratorUtils" FullName="Microsoft.ML.Runtime.Internal.Calibration.CalibratorUtils">
  <TypeSignature Language="C#" Value="public static class CalibratorUtils" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CalibratorUtils extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Internal.Calibration.CalibratorUtils" />
  <TypeSignature Language="VB.NET" Value="Public Class CalibratorUtils" />
  <TypeSignature Language="F#" Value="type CalibratorUtils = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class CalibratorUtils abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class CalibratorUtils abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class CalibratorUtils abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateCalibratedPredictor">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.IPredictorProducing&lt;float&gt; CreateCalibratedPredictor (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.IPredictorProducing&lt;float&gt; predictor, Microsoft.ML.Runtime.Internal.Calibration.ICalibrator cali, bool needValueMapper = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.IPredictorProducing`1&lt;float32&gt; CreateCalibratedPredictor(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.IPredictorProducing`1&lt;float32&gt; predictor, class Microsoft.ML.Runtime.Internal.Calibration.ICalibrator cali, bool needValueMapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Calibration.CalibratorUtils.CreateCalibratedPredictor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.IPredictorProducing{System.Single},Microsoft.ML.Runtime.Internal.Calibration.ICalibrator,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCalibratedPredictor (env As IHostEnvironment, predictor As IPredictorProducing(Of Single), cali As ICalibrator, Optional needValueMapper As Boolean = false) As IPredictorProducing(Of Single)" />
      <MemberSignature Language="F#" Value="static member CreateCalibratedPredictor : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.IPredictorProducing&lt;single&gt; * Microsoft.ML.Runtime.Internal.Calibration.ICalibrator * bool -&gt; Microsoft.ML.Runtime.IPredictorProducing&lt;single&gt;" Usage="Microsoft.ML.Runtime.Internal.Calibration.CalibratorUtils.CreateCalibratedPredictor (env, predictor, cali, needValueMapper)" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::ML::Runtime::IPredictorProducing&lt;float&gt; CreateCalibratedPredictor(Microsoft::ML::Runtime::IHostEnvironment const &amp; env, Microsoft::ML::Runtime::IPredictorProducing&lt;float&gt; const &amp; predictor, Microsoft::ML::Runtime::Internal::Calibration::ICalibrator const &amp; cali, bool needValueMapper = false);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IPredictorProducing&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="predictor" Type="Microsoft.ML.Runtime.IPredictorProducing&lt;System.Single&gt;" />
        <Parameter Name="cali" Type="Microsoft.ML.Runtime.Internal.Calibration.ICalibrator" />
        <Parameter Name="needValueMapper" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="predictor">To be added.</param>
        <param name="cali">To be added.</param>
        <param name="needValueMapper">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainCalibrator">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.IPredictor TrainCalibrator (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.IChannel ch, Microsoft.ML.Runtime.Internal.Calibration.ICalibratorTrainer caliTrainer, int maxRows, Microsoft.ML.Runtime.IPredictor predictor, Microsoft.ML.Runtime.Data.RoleMappedData data, bool needValueMapper = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.IPredictor TrainCalibrator(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.IChannel ch, class Microsoft.ML.Runtime.Internal.Calibration.ICalibratorTrainer caliTrainer, int32 maxRows, class Microsoft.ML.Runtime.IPredictor predictor, class Microsoft.ML.Runtime.Data.RoleMappedData data, bool needValueMapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Calibration.CalibratorUtils.TrainCalibrator(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.IChannel,Microsoft.ML.Runtime.Internal.Calibration.ICalibratorTrainer,System.Int32,Microsoft.ML.Runtime.IPredictor,Microsoft.ML.Runtime.Data.RoleMappedData,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrainCalibrator (env As IHostEnvironment, ch As IChannel, caliTrainer As ICalibratorTrainer, maxRows As Integer, predictor As IPredictor, data As RoleMappedData, Optional needValueMapper As Boolean = false) As IPredictor" />
      <MemberSignature Language="F#" Value="static member TrainCalibrator : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.IChannel * Microsoft.ML.Runtime.Internal.Calibration.ICalibratorTrainer * int * Microsoft.ML.Runtime.IPredictor * Microsoft.ML.Runtime.Data.RoleMappedData * bool -&gt; Microsoft.ML.Runtime.IPredictor" Usage="Microsoft.ML.Runtime.Internal.Calibration.CalibratorUtils.TrainCalibrator (env, ch, caliTrainer, maxRows, predictor, data, needValueMapper)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IPredictor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="ch" Type="Microsoft.ML.Runtime.IChannel" />
        <Parameter Name="caliTrainer" Type="Microsoft.ML.Runtime.Internal.Calibration.ICalibratorTrainer" />
        <Parameter Name="maxRows" Type="System.Int32" />
        <Parameter Name="predictor" Type="Microsoft.ML.Runtime.IPredictor" />
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
        <Parameter Name="needValueMapper" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="env">The environment to use.</param>
        <param name="ch">The channel.</param>
        <param name="caliTrainer">The calibrator trainer.</param>
        <param name="maxRows">The maximum rows to use for calibrator training.</param>
        <param name="predictor">The predictor that needs calibration.</param>
        <param name="data">The examples to used for calibrator training.</param>
        <param name="needValueMapper">Indicates whether the predictor returned needs to be an <see cref="T:Microsoft.ML.Runtime.Data.IValueMapper" />.
            This parameter is needed for OVA that uses the predictors as <see cref="T:Microsoft.ML.Runtime.Data.IValueMapper" />s. If it is false,
            The predictor returned is an an <see cref="T:Microsoft.ML.Runtime.Data.ISchemaBindableMapper" />.</param>
        <summary>
            Trains a calibrator.
            </summary>
        <returns>The original predictor, if no calibration is needed, 
            or a metapredictor that wraps the original predictor and the newly trained calibrator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainCalibratorIfNeeded">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.IPredictor TrainCalibratorIfNeeded (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.IChannel ch, Microsoft.ML.Runtime.Internal.Calibration.ICalibratorTrainer calibrator, int maxRows, Microsoft.ML.Runtime.ITrainer trainer, Microsoft.ML.Runtime.IPredictor predictor, Microsoft.ML.Runtime.Data.RoleMappedData data, bool needValueMapper = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.IPredictor TrainCalibratorIfNeeded(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.IChannel ch, class Microsoft.ML.Runtime.Internal.Calibration.ICalibratorTrainer calibrator, int32 maxRows, class Microsoft.ML.Runtime.ITrainer trainer, class Microsoft.ML.Runtime.IPredictor predictor, class Microsoft.ML.Runtime.Data.RoleMappedData data, bool needValueMapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Calibration.CalibratorUtils.TrainCalibratorIfNeeded(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.IChannel,Microsoft.ML.Runtime.Internal.Calibration.ICalibratorTrainer,System.Int32,Microsoft.ML.Runtime.ITrainer,Microsoft.ML.Runtime.IPredictor,Microsoft.ML.Runtime.Data.RoleMappedData,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrainCalibratorIfNeeded (env As IHostEnvironment, ch As IChannel, calibrator As ICalibratorTrainer, maxRows As Integer, trainer As ITrainer, predictor As IPredictor, data As RoleMappedData, Optional needValueMapper As Boolean = false) As IPredictor" />
      <MemberSignature Language="F#" Value="static member TrainCalibratorIfNeeded : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.IChannel * Microsoft.ML.Runtime.Internal.Calibration.ICalibratorTrainer * int * Microsoft.ML.Runtime.ITrainer * Microsoft.ML.Runtime.IPredictor * Microsoft.ML.Runtime.Data.RoleMappedData * bool -&gt; Microsoft.ML.Runtime.IPredictor" Usage="Microsoft.ML.Runtime.Internal.Calibration.CalibratorUtils.TrainCalibratorIfNeeded (env, ch, calibrator, maxRows, trainer, predictor, data, needValueMapper)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IPredictor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="ch" Type="Microsoft.ML.Runtime.IChannel" />
        <Parameter Name="calibrator" Type="Microsoft.ML.Runtime.Internal.Calibration.ICalibratorTrainer" />
        <Parameter Name="maxRows" Type="System.Int32" />
        <Parameter Name="trainer" Type="Microsoft.ML.Runtime.ITrainer" />
        <Parameter Name="predictor" Type="Microsoft.ML.Runtime.IPredictor" />
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
        <Parameter Name="needValueMapper" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="env">The environment to use.</param>
        <param name="ch">The channel.</param>
        <param name="calibrator">The calibrator trainer.</param>
        <param name="maxRows">The maximum rows to use for calibrator training.</param>
        <param name="trainer">The trainer used to train the predictor.</param>
        <param name="predictor">The predictor that needs calibration.</param>
        <param name="data">The examples to used for calibrator training.</param>
        <param name="needValueMapper">Indicates whether the predictor returned needs to be an <see cref="T:Microsoft.ML.Runtime.Data.IValueMapper" />.
            This parameter is needed for OVA that uses the predictors as <see cref="T:Microsoft.ML.Runtime.Data.IValueMapper" />s. If it is false,
            The predictor returned is an an <see cref="T:Microsoft.ML.Runtime.Data.ISchemaBindableMapper" />.</param>
        <summary>
            Trains a calibrator, if needed.
            </summary>
        <returns>The original predictor, if no calibration is needed, 
            or a metapredictor that wraps the original predictor and the newly trained calibrator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>