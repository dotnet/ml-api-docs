<Type Name="VBufferUtils+ValuePredicate&lt;T&gt;" FullName="Microsoft.ML.Runtime.Internal.Utilities.VBufferUtils+ValuePredicate&lt;T&gt;">
  <TypeSignature Language="C#" Value="public delegate bool VBufferUtils.ValuePredicate&lt;T&gt;(ref T src);" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed VBufferUtils/ValuePredicate`1&lt;T&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Internal.Utilities.VBufferUtils.ValuePredicate`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function VBufferUtils.ValuePredicate(Of T)(ByRef src As T) As Boolean " />
  <TypeSignature Language="F#" Value="type VBufferUtils.ValuePredicate&lt;'T&gt; = delegate of  -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="src" Type="T&amp;" RefType="ref" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <param name="src">The value to test</param>
    <summary>
            A predicate on some sort of value.
            </summary>
    <returns>The result of some sort of test from that value</returns>
    <remarks>To be added.</remarks>
  </Docs>
</Type>