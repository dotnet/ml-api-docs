<Type Name="Hashing" FullName="Microsoft.ML.Runtime.Internal.Utilities.Hashing">
  <TypeSignature Language="C#" Value="public static class Hashing" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Hashing extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Internal.Utilities.Hashing" />
  <TypeSignature Language="VB.NET" Value="Public Class Hashing" />
  <TypeSignature Language="F#" Value="type Hashing = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CombinedHash">
      <MemberSignature Language="C#" Value="public static int CombinedHash (int startHash, params object[] os);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CombinedHash(int32 startHash, object[] os) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Hashing.CombinedHash(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CombinedHash (startHash As Integer, ParamArray os As Object()) As Integer" />
      <MemberSignature Language="F#" Value="static member CombinedHash : int * obj[] -&gt; int" Usage="Microsoft.ML.Runtime.Internal.Utilities.Hashing.CombinedHash (startHash, os)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startHash" Type="System.Int32" />
        <Parameter Name="os" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="startHash">The leading hash, incorporated into the final hash</param>
        <param name="os">A variable list of objects, where null is a valid value</param>
        <summary>
            Creates a combined hash of possibly heterogenously typed values.
            </summary>
        <returns>The combined hash incorpoating a starting hash, and the hash codes
            of all input values</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CombinedHash&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int CombinedHash&lt;T&gt; (int startHash, params T[] os);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CombinedHash&lt;T&gt;(int32 startHash, !!T[] os) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Hashing.CombinedHash``1(System.Int32,``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CombinedHash(Of T) (startHash As Integer, ParamArray os As T()) As Integer" />
      <MemberSignature Language="F#" Value="static member CombinedHash : int * 'T[] -&gt; int" Usage="Microsoft.ML.Runtime.Internal.Utilities.Hashing.CombinedHash (startHash, os)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="startHash" Type="System.Int32" />
        <Parameter Name="os" Type="T[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The type of items to hash</typeparam>
        <param name="startHash">The leading hash, incorporated into the final hash</param>
        <param name="os">A variable list of non-null values</param>
        <summary>
            Creates a combined hash of multiple homogenously typed non-null values.
            </summary>
        <returns>The combined hash incorpoating a starting hash, and the hash codes
            of all input values</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CombineHash">
      <MemberSignature Language="C#" Value="public static int CombineHash (int n1, int n2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CombineHash(int32 n1, int32 n2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Hashing.CombineHash(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CombineHash (n1 As Integer, n2 As Integer) As Integer" />
      <MemberSignature Language="F#" Value="static member CombineHash : int * int -&gt; int" Usage="Microsoft.ML.Runtime.Internal.Utilities.Hashing.CombineHash (n1, n2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n1" Type="System.Int32" />
        <Parameter Name="n2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n1">To be added.</param>
        <param name="n2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CombineHash">
      <MemberSignature Language="C#" Value="public static uint CombineHash (uint u1, uint u2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 CombineHash(unsigned int32 u1, unsigned int32 u2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Hashing.CombineHash(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CombineHash (u1 As UInteger, u2 As UInteger) As UInteger" />
      <MemberSignature Language="F#" Value="static member CombineHash : uint32 * uint32 -&gt; uint32" Usage="Microsoft.ML.Runtime.Internal.Utilities.Hashing.CombineHash (u1, u2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="u1" Type="System.UInt32" />
        <Parameter Name="u2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="u1">To be added.</param>
        <param name="u2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashInt">
      <MemberSignature Language="C#" Value="public static int HashInt (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 HashInt(int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Hashing.HashInt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashInt (n As Integer) As Integer" />
      <MemberSignature Language="F#" Value="static member HashInt : int -&gt; int" Usage="Microsoft.ML.Runtime.Internal.Utilities.Hashing.HashInt n" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashSequence">
      <MemberSignature Language="C#" Value="public static uint HashSequence (uint[] sequence, int min, int lim);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 HashSequence(unsigned int32[] sequence, int32 min, int32 lim) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Hashing.HashSequence(System.UInt32[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashSequence (sequence As UInteger(), min As Integer, lim As Integer) As UInteger" />
      <MemberSignature Language="F#" Value="static member HashSequence : uint32[] * int * int -&gt; uint32" Usage="Microsoft.ML.Runtime.Internal.Utilities.Hashing.HashSequence (sequence, min, lim)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.UInt32[]" />
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="lim" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sequence">To be added.</param>
        <param name="min">To be added.</param>
        <param name="lim">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashString">
      <MemberSignature Language="C#" Value="public static uint HashString (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 HashString(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Hashing.HashString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashString (str As String) As UInteger" />
      <MemberSignature Language="F#" Value="static member HashString : string -&gt; uint32" Usage="Microsoft.ML.Runtime.Internal.Utilities.Hashing.HashString str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">To be added.</param>
        <summary>
            Hash the characters in a string. This MUST produce the same result as the other
            overloads (with equivalent characters).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashString">
      <MemberSignature Language="C#" Value="public static uint HashString (System.Text.StringBuilder sb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 HashString(class System.Text.StringBuilder sb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Hashing.HashString(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashString (sb As StringBuilder) As UInteger" />
      <MemberSignature Language="F#" Value="static member HashString : System.Text.StringBuilder -&gt; uint32" Usage="Microsoft.ML.Runtime.Internal.Utilities.Hashing.HashString sb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="sb">To be added.</param>
        <summary>
            Hash the characters in a string builder. This MUST produce the same result
            as HashString(sb.ToString()).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashString">
      <MemberSignature Language="C#" Value="public static uint HashString (string str, int ichMin, int ichLim);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 HashString(string str, int32 ichMin, int32 ichLim) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Hashing.HashString(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashString (str As String, ichMin As Integer, ichLim As Integer) As UInteger" />
      <MemberSignature Language="F#" Value="static member HashString : string * int * int -&gt; uint32" Usage="Microsoft.ML.Runtime.Internal.Utilities.Hashing.HashString (str, ichMin, ichLim)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="ichMin" Type="System.Int32" />
        <Parameter Name="ichLim" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">To be added.</param>
        <param name="ichMin">To be added.</param>
        <param name="ichLim">To be added.</param>
        <summary>
            Hash the characters in a sub-string. This MUST produce the same result
            as HashString(str.SubString(ichMin, ichLim - ichMin)).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashUint">
      <MemberSignature Language="C#" Value="public static uint HashUint (uint u);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 HashUint(unsigned int32 u) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Hashing.HashUint(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashUint (u As UInteger) As UInteger" />
      <MemberSignature Language="F#" Value="static member HashUint : uint32 -&gt; uint32" Usage="Microsoft.ML.Runtime.Internal.Utilities.Hashing.HashUint u" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="u" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="u">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MixHash">
      <MemberSignature Language="C#" Value="public static uint MixHash (uint hash);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 MixHash(unsigned int32 hash) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Hashing.MixHash(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MixHash (hash As UInteger) As UInteger" />
      <MemberSignature Language="F#" Value="static member MixHash : uint32 -&gt; uint32" Usage="Microsoft.ML.Runtime.Internal.Utilities.Hashing.MixHash hash" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="hash">To be added.</param>
        <summary>
            The final mixing ritual for the Murmur3 hashing algorithm. Most users of
            <see cref="M:Microsoft.ML.Runtime.Internal.Utilities.Hashing.MurmurRound(System.UInt32,System.UInt32)" /> will want to close their progressive building of
            a hash with a call to this method.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MurmurHash">
      <MemberSignature Language="C#" Value="public static uint MurmurHash (uint hash, uint[] data, int min, int lim);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 MurmurHash(unsigned int32 hash, unsigned int32[] data, int32 min, int32 lim) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Hashing.MurmurHash(System.UInt32,System.UInt32[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MurmurHash (hash As UInteger, data As UInteger(), min As Integer, lim As Integer) As UInteger" />
      <MemberSignature Language="F#" Value="static member MurmurHash : uint32 * uint32[] * int * int -&gt; uint32" Usage="Microsoft.ML.Runtime.Internal.Utilities.Hashing.MurmurHash (hash, data, min, lim)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.UInt32" />
        <Parameter Name="data" Type="System.UInt32[]" />
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="lim" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hash">To be added.</param>
        <param name="data">To be added.</param>
        <param name="min">To be added.</param>
        <param name="lim">To be added.</param>
        <summary>
            Performs a MurmurRound on each int in the sequence
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MurmurHash">
      <MemberSignature Language="C#" Value="public static uint MurmurHash (uint hash, string data, int ichMin, int ichLim, bool toUpper = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 MurmurHash(unsigned int32 hash, string data, int32 ichMin, int32 ichLim, bool toUpper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Hashing.MurmurHash(System.UInt32,System.String,System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MurmurHash (hash As UInteger, data As String, ichMin As Integer, ichLim As Integer, Optional toUpper As Boolean = false) As UInteger" />
      <MemberSignature Language="F#" Value="static member MurmurHash : uint32 * string * int * int * bool -&gt; uint32" Usage="Microsoft.ML.Runtime.Internal.Utilities.Hashing.MurmurHash (hash, data, ichMin, ichLim, toUpper)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.UInt32" />
        <Parameter Name="data" Type="System.String" />
        <Parameter Name="ichMin" Type="System.Int32" />
        <Parameter Name="ichLim" Type="System.Int32" />
        <Parameter Name="toUpper" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hash">To be added.</param>
        <param name="data">To be added.</param>
        <param name="ichMin">To be added.</param>
        <param name="ichLim">To be added.</param>
        <param name="toUpper">To be added.</param>
        <summary>
            Implements the murmur hash 3 algorithm, using a mock UTF-8 encoding.
            The UTF-8 conversion ignores the possibilities of unicode planes other than the 0th.
            That is, it simply converts char values to one, two, or three bytes according to
            the following rules:
            * 0x0000 to 0x007F : 0xxxxxxx
            * 0x0080 to 0x07FF : 110xxxxx 10xxxxxx
            * 0x0800 to 0xFFFF : 1110xxxx 10xxxxxx 10xxxxxx
            NOTE: This MUST match the StringBuilder version below.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MurmurHash">
      <MemberSignature Language="C#" Value="public static uint MurmurHash (uint hash, System.Text.StringBuilder data, int ichMin, int ichLim, bool toUpper = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 MurmurHash(unsigned int32 hash, class System.Text.StringBuilder data, int32 ichMin, int32 ichLim, bool toUpper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Hashing.MurmurHash(System.UInt32,System.Text.StringBuilder,System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MurmurHash (hash As UInteger, data As StringBuilder, ichMin As Integer, ichLim As Integer, Optional toUpper As Boolean = false) As UInteger" />
      <MemberSignature Language="F#" Value="static member MurmurHash : uint32 * System.Text.StringBuilder * int * int * bool -&gt; uint32" Usage="Microsoft.ML.Runtime.Internal.Utilities.Hashing.MurmurHash (hash, data, ichMin, ichLim, toUpper)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.UInt32" />
        <Parameter Name="data" Type="System.Text.StringBuilder" />
        <Parameter Name="ichMin" Type="System.Int32" />
        <Parameter Name="ichLim" Type="System.Int32" />
        <Parameter Name="toUpper" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hash">To be added.</param>
        <param name="data">To be added.</param>
        <param name="ichMin">To be added.</param>
        <param name="ichLim">To be added.</param>
        <param name="toUpper">To be added.</param>
        <summary>
            Implements the murmur hash 3 algorithm, using a mock UTF-8 encoding.
            The UTF-8 conversion ignores the possibilities of unicode planes other than the 0th.
            That is, it simply converts char values to one, two, or three bytes according to
            the following rules:
            * 0x0000 to 0x007F : 0xxxxxxx
            * 0x0080 to 0x07FF : 110xxxxx 10xxxxxx
            * 0x0800 to 0xFFFF : 1110xxxx 10xxxxxx 10xxxxxx
            NOTE: This MUST match the string version above.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MurmurRound">
      <MemberSignature Language="C#" Value="public static uint MurmurRound (uint hash, uint chunk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 MurmurRound(unsigned int32 hash, unsigned int32 chunk) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Hashing.MurmurRound(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MurmurRound (hash As UInteger, chunk As UInteger) As UInteger" />
      <MemberSignature Language="F#" Value="static member MurmurRound : uint32 * uint32 -&gt; uint32" Usage="Microsoft.ML.Runtime.Internal.Utilities.Hashing.MurmurRound (hash, chunk)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.UInt32" />
        <Parameter Name="chunk" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="hash">To be added.</param>
        <param name="chunk">To be added.</param>
        <summary>
            Combines the given hash value with a uint value, using the murmur hash 3 algorithm.
            Make certain to also use <see cref="M:Microsoft.ML.Runtime.Internal.Utilities.Hashing.MixHash(System.UInt32)" /> on the final hashed value, if you
            depend upon having distinct bits.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>