<Type Name="VBufferUtils+SlotValueManipulator&lt;T&gt;" FullName="Microsoft.ML.Runtime.Internal.Utilities.VBufferUtils+SlotValueManipulator&lt;T&gt;">
  <TypeSignature Language="C#" Value="public delegate void VBufferUtils.SlotValueManipulator&lt;T&gt;(int slot, ref T value);" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed VBufferUtils/SlotValueManipulator`1&lt;T&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Internal.Utilities.VBufferUtils.SlotValueManipulator`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub VBufferUtils.SlotValueManipulator(Of T)(slot As Integer, ByRef value As T)" />
  <TypeSignature Language="F#" Value="type VBufferUtils.SlotValueManipulator&lt;'T&gt; = delegate of int *  -&gt; unit" />
  <TypeSignature Language="C++ CLI" Value="public: generic &lt;typename T&gt;&#xA;delegate void VBufferUtils::SlotValueManipulator(int slot, T % value);" />
  <TypeSignature Language="C++ CX" Value="public: delegate void VBufferUtils::SlotValueManipulator(int slot, T &amp;  value);" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="slot" Type="System.Int32" />
    <Parameter Name="value" Type="T&amp;" RefType="ref" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <param name="slot">Index of entry</param>
    <param name="value">Value to change</param>
    <summary>
            A delegate for functions that can change a value.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>