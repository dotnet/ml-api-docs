<Type Name="MathUtils" FullName="Microsoft.ML.Runtime.Internal.Utilities.MathUtils">
  <TypeSignature Language="C#" Value="public static class MathUtils" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MathUtils extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Internal.Utilities.MathUtils" />
  <TypeSignature Language="VB.NET" Value="Public Module MathUtils" />
  <TypeSignature Language="F#" Value="type MathUtils = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Some useful math methods.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AlmostEqual">
      <MemberSignature Language="C#" Value="public static bool AlmostEqual (float a, float b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AlmostEqual(float32 a, float32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.AlmostEqual(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AlmostEqual (a As Single, b As Single) As Boolean" />
      <MemberSignature Language="F#" Value="static member AlmostEqual : single * single -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.AlmostEqual (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single" />
        <Parameter Name="b" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="a"></param>
        <param name="b"></param>
        <summary>
            true if two Float values are close (using relative comparison)
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlmostEqual">
      <MemberSignature Language="C#" Value="public static bool AlmostEqual (float a, float b, float maxRelErr, float maxAbsError);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AlmostEqual(float32 a, float32 b, float32 maxRelErr, float32 maxAbsError) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.AlmostEqual(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AlmostEqual (a As Single, b As Single, maxRelErr As Single, maxAbsError As Single) As Boolean" />
      <MemberSignature Language="F#" Value="static member AlmostEqual : single * single * single * single -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.AlmostEqual (a, b, maxRelErr, maxAbsError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single" />
        <Parameter Name="b" Type="System.Single" />
        <Parameter Name="maxRelErr" Type="System.Single" />
        <Parameter Name="maxAbsError" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <param name="maxRelErr">To be added.</param>
        <param name="maxAbsError">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplySoftMax">
      <MemberSignature Language="C#" Value="public static void ApplySoftMax (float[] src, float[] dst);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ApplySoftMax(float32[] src, float32[] dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ApplySoftMax(System.Single[],System.Single[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplySoftMax (src As Single(), dst As Single())" />
      <MemberSignature Language="F#" Value="static member ApplySoftMax : single[] * single[] -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ApplySoftMax (src, dst)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Single[]" />
        <Parameter Name="dst" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <param name="dst">To be added.</param>
        <summary>
            Apply a soft max on an array of Floats. Note that src and dst may be the same array.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplySoftMax">
      <MemberSignature Language="C#" Value="public static void ApplySoftMax (float[] src, float[] dst, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ApplySoftMax(float32[] src, float32[] dst, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ApplySoftMax(System.Single[],System.Single[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplySoftMax (src As Single(), dst As Single(), start As Integer, end As Integer)" />
      <MemberSignature Language="F#" Value="static member ApplySoftMax : single[] * single[] * int * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ApplySoftMax (src, dst, start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Single[]" />
        <Parameter Name="dst" Type="System.Single[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <param name="dst">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>
            Apply a soft max on a range within an array of Floats. Note that src and dst may be the same array.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArgMax">
      <MemberSignature Language="C#" Value="public static int ArgMax (float[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ArgMax(float32[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ArgMax(System.Single[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ArgMax (a As Single()) As Integer" />
      <MemberSignature Language="F#" Value="static member ArgMax : single[] -&gt; int" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ArgMax a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="a">an array</param>
        <summary>
            Finds the first index of the max element of the array.
            NaNs are ignored. If all the elements to consider are NaNs, -1 is 
            returned. The caller should distinguish in this case between two
            possibilities:
            1) The number of the element to consider is zero.
            2) All the elements to consider are NaNs.
            </summary>
        <returns>the first index of the max element</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArgMax">
      <MemberSignature Language="C#" Value="public static int ArgMax (float[] a, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ArgMax(float32[] a, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ArgMax(System.Single[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ArgMax (a As Single(), count As Integer) As Integer" />
      <MemberSignature Language="F#" Value="static member ArgMax : single[] * int -&gt; int" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ArgMax (a, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">an array</param>
        <param name="count">number of the element in the array to consider</param>
        <summary>
            Finds the first index of the max element of the array. 
            NaNs are ignored. If all the elements to consider are NaNs, -1 is 
            returned. The caller should distinguish in this case between two
            possibilities:
            1) The number of the element to consider is zero.
            2) All the elements to consider are NaNs.
            </summary>
        <returns>the first index of the max element</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArgMin">
      <MemberSignature Language="C#" Value="public static int ArgMin (float[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ArgMin(float32[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ArgMin(System.Single[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ArgMin (a As Single()) As Integer" />
      <MemberSignature Language="F#" Value="static member ArgMin : single[] -&gt; int" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ArgMin a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="a">an array</param>
        <summary>
            Finds the first index of the minimum element of the array.
            NaNs are ignored. If all the elements to consider are NaNs, -1 is 
            returned. The caller should distinguish in this case between two
            possibilities:
            1) The number of the element to consider is zero.
            2) All the elements to consider are NaNs.
            </summary>
        <returns>the first index of the minimum element</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArgMin">
      <MemberSignature Language="C#" Value="public static int ArgMin (float[] a, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ArgMin(float32[] a, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ArgMin(System.Single[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ArgMin (a As Single(), count As Integer) As Integer" />
      <MemberSignature Language="F#" Value="static member ArgMin : single[] * int -&gt; int" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ArgMin (a, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">an array</param>
        <param name="count">number of the element in the array to consider</param>
        <summary>
            Finds the first index of the minimum element of the array.
            NaNs are ignored. If all the elements to consider are NaNs, -1 is 
            returned. The caller should distinguish in this case between two
            possibilities:
            1) The number of the element to consider is zero.
            2) All the elements to consider are NaNs.
            </summary>
        <returns>the first index of the minimum element</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cos">
      <MemberSignature Language="C#" Value="public static double Cos (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cos(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Cos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Cos (a As Double) As Double" />
      <MemberSignature Language="F#" Value="static member Cos : double -&gt; double" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Cos a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <summary>
            Math.Cos returns the input value for inputs with large magnitude. We return NaN instead, for consistency 
            with Math.Cos(infinity).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CosineSimilarity">
      <MemberSignature Language="C#" Value="public static double CosineSimilarity (float[] a, float[] b, int aIdx, int bIdx, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 CosineSimilarity(float32[] a, float32[] b, int32 aIdx, int32 bIdx, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.CosineSimilarity(System.Single[],System.Single[],System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CosineSimilarity (a As Single(), b As Single(), aIdx As Integer, bIdx As Integer, len As Integer) As Double" />
      <MemberSignature Language="F#" Value="static member CosineSimilarity : single[] * single[] * int * int * int -&gt; double" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.CosineSimilarity (a, b, aIdx, bIdx, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]" />
        <Parameter Name="b" Type="System.Single[]" />
        <Parameter Name="aIdx" Type="System.Int32" />
        <Parameter Name="bIdx" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <param name="aIdx">To be added.</param>
        <param name="bIdx">To be added.</param>
        <param name="len">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CrossEntropy">
      <MemberSignature Language="C#" Value="public static double CrossEntropy (double probTrue, double probPredicted, bool useLnNotLog2 = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 CrossEntropy(float64 probTrue, float64 probPredicted, bool useLnNotLog2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.CrossEntropy(System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CrossEntropy (probTrue As Double, probPredicted As Double, Optional useLnNotLog2 As Boolean = false) As Double" />
      <MemberSignature Language="F#" Value="static member CrossEntropy : double * double * bool -&gt; double" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.CrossEntropy (probTrue, probPredicted, useLnNotLog2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probTrue" Type="System.Double" />
        <Parameter Name="probPredicted" Type="System.Double" />
        <Parameter Name="useLnNotLog2" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="probTrue">To be added.</param>
        <param name="probPredicted">To be added.</param>
        <param name="useLnNotLog2">To be added.</param>
        <summary>
            Cross-entropy of two distributions
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMaxAbsErr">
      <MemberSignature Language="C#" Value="public const float DefaultMaxAbsErr = 1E-12;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 DefaultMaxAbsErr = (1E-12)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.DefaultMaxAbsErr" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultMaxAbsErr As Single  = 1E-12" />
      <MemberSignature Language="F#" Value="val mutable DefaultMaxAbsErr : single" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.DefaultMaxAbsErr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>1E-12</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMaxRelativeErr">
      <MemberSignature Language="C#" Value="public const float DefaultMaxRelativeErr = 1E-08;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 DefaultMaxRelativeErr = (1E-08)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.DefaultMaxRelativeErr" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultMaxRelativeErr As Single  = 1E-08" />
      <MemberSignature Language="F#" Value="val mutable DefaultMaxRelativeErr : single" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.DefaultMaxRelativeErr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>1E-08</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entropy">
      <MemberSignature Language="C#" Value="public static double Entropy (double prob, bool useLnNotLog2 = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Entropy(float64 prob, bool useLnNotLog2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Entropy(System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Entropy (prob As Double, Optional useLnNotLog2 As Boolean = false) As Double" />
      <MemberSignature Language="F#" Value="static member Entropy : double * bool -&gt; double" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Entropy (prob, useLnNotLog2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prob" Type="System.Double" />
        <Parameter Name="useLnNotLog2" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="prob">To be added.</param>
        <param name="useLnNotLog2">To be added.</param>
        <summary>
            Entropy of a given probability
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpFast">
      <MemberSignature Language="C#" Value="public static float ExpFast (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ExpFast(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ExpFast(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpFast (x As Single) As Single" />
      <MemberSignature Language="F#" Value="static member ExpFast : single -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ExpFast x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>
            The exponential function: e^(x).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpSlow">
      <MemberSignature Language="C#" Value="public static float ExpSlow (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ExpSlow(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ExpSlow(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpSlow (x As Single) As Single" />
      <MemberSignature Language="F#" Value="static member ExpSlow : single -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ExpSlow x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>
            The exponential function: e^(x).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMedianInPlace">
      <MemberSignature Language="C#" Value="public static float GetMedianInPlace (float[] src, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetMedianInPlace(float32[] src, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.GetMedianInPlace(System.Single[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMedianInPlace (src As Single(), count As Integer) As Single" />
      <MemberSignature Language="F#" Value="static member GetMedianInPlace : single[] * int -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.GetMedianInPlace (src, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Single[]" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LnSum">
      <MemberSignature Language="C#" Value="public static float LnSum (System.Collections.Generic.IEnumerable&lt;float&gt; terms);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 LnSum(class System.Collections.Generic.IEnumerable`1&lt;float32&gt; terms) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.LnSum(System.Collections.Generic.IEnumerable{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Function LnSum (terms As IEnumerable(Of Single)) As Single" />
      <MemberSignature Language="F#" Value="static member LnSum : seq&lt;single&gt; -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.LnSum terms" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="terms" Type="System.Collections.Generic.IEnumerable&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="terms"></param>
        <summary>
            Given a set of values <c>Ln(a1), Ln(a2), ... Ln(an)</c>,
            return <c>Ln(a1+a2+...+an)</c>. This is especially useful
            when working with log probabilities and likelihoods.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static float Log (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Log(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Log(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Log (x As Single) As Single" />
      <MemberSignature Language="F#" Value="static member Log : single -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Log x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static float Log (float a, float newBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Log(float32 a, float32 newBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Log(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Log (a As Single, newBase As Single) As Single" />
      <MemberSignature Language="F#" Value="static member Log : single * single -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Log (a, newBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single" />
        <Parameter Name="newBase" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="newBase">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFactorial">
      <MemberSignature Language="C#" Value="public static double LogFactorial (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 LogFactorial(int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.LogFactorial(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogFactorial (n As Integer) As Double" />
      <MemberSignature Language="F#" Value="static member LogFactorial : int -&gt; double" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.LogFactorial n" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">The number to compute the factorial of</param>
        <summary>
            Computes the log factorial of n, using fast methods
            </summary>
        <returns>The log factorial of n</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogGamma">
      <MemberSignature Language="C#" Value="public static double LogGamma (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 LogGamma(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.LogGamma(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogGamma (x As Double) As Double" />
      <MemberSignature Language="F#" Value="static member LogGamma : double -&gt; double" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.LogGamma x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">Argument of function</param>
        <summary>
            Returns the log of the gamma function, using the Stirling approximation
            </summary>
        <returns>Log Gamma(x)</returns>
        <remarks>Accurate to eight digits for all x.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static float Max (float[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Max(float32[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Max(System.Single[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Max (a As Single()) As Single" />
      <MemberSignature Language="F#" Value="static member Max : single[] -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Max a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="a">an array</param>
        <summary>
            Find the max element of a
            </summary>
        <returns>the max element</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static float Min (float[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Min(float32[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Min(System.Single[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Min (a As Single()) As Single" />
      <MemberSignature Language="F#" Value="static member Min : single[] -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Min a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="a">an array</param>
        <summary>
            Find the minimum element of a
            </summary>
        <returns>the minimum element</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public static float Pow (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Pow(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Pow(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pow (x As Single, y As Single) As Single" />
      <MemberSignature Language="F#" Value="static member Pow : single * single -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Pow (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Product">
      <MemberSignature Language="C#" Value="public static int Product (int[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Product(int32[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Product(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Product (a As Integer()) As Integer" />
      <MemberSignature Language="F#" Value="static member Product : int[] -&gt; int" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Product a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="a">an array</param>
        <summary>
            The product of elements in a
            </summary>
        <returns>the product of a's elements</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sigmoid">
      <MemberSignature Language="C#" Value="public static float Sigmoid (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sigmoid(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Sigmoid(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sigmoid (x As Single) As Single" />
      <MemberSignature Language="F#" Value="static member Sigmoid : single -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Sigmoid x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>
            The logistic sigmoid function: 1 / (1 + e^(-x)).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SigmoidFast">
      <MemberSignature Language="C#" Value="public static float SigmoidFast (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 SigmoidFast(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.SigmoidFast(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function SigmoidFast (x As Single) As Single" />
      <MemberSignature Language="F#" Value="static member SigmoidFast : single -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.SigmoidFast x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>
            The logistic sigmoid function: 1 / (1 + e^(-x)).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SigmoidSlow">
      <MemberSignature Language="C#" Value="public static float SigmoidSlow (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 SigmoidSlow(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.SigmoidSlow(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function SigmoidSlow (x As Single) As Single" />
      <MemberSignature Language="F#" Value="static member SigmoidSlow : single -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.SigmoidSlow x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>
            The logistic sigmoid function: 1 / (1 + e^(-x)).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SimpleLinearRegression">
      <MemberSignature Language="C#" Value="public static void SimpleLinearRegression (float[] x, float[] y, out float a, out float b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SimpleLinearRegression(float32[] x, float32[] y, [out] float32&amp; a, [out] float32&amp; b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.SimpleLinearRegression(System.Single[],System.Single[],System.Single@,System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SimpleLinearRegression (x As Single(), y As Single(), ByRef a As Single, ByRef b As Single)" />
      <MemberSignature Language="F#" Value="static member SimpleLinearRegression : single[] * single[] *  *  -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.SimpleLinearRegression (x, y, a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single[]" />
        <Parameter Name="y" Type="System.Single[]" />
        <Parameter Name="a" Type="System.Single&amp;" RefType="out" />
        <Parameter Name="b" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="x">The x values.</param>
        <param name="y">The y values.</param>
        <param name="a">The coefficent a.</param>
        <param name="b">The intercept b.</param>
        <summary>
            Finds the best least-squares fit of y = ax + b
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sin">
      <MemberSignature Language="C#" Value="public static double Sin (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sin(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Sin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sin (a As Double) As Double" />
      <MemberSignature Language="F#" Value="static member Sin : double -&gt; double" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Sin a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <summary>
            Math.Sin returns the input value for inputs with large magnitude. We return NaN instead, for consistency 
            with Math.Sin(infinity).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoftMax">
      <MemberSignature Language="C#" Value="public static float SoftMax (float lx, float ly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 SoftMax(float32 lx, float32 ly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.SoftMax(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function SoftMax (lx As Single, ly As Single) As Single" />
      <MemberSignature Language="F#" Value="static member SoftMax : single * single -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.SoftMax (lx, ly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lx" Type="System.Single" />
        <Parameter Name="ly" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="lx">To be added.</param>
        <param name="ly">To be added.</param>
        <summary>
            computes "softmax" function of two arguments: log (exp x + exp y)
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoftMax">
      <MemberSignature Language="C#" Value="public static float SoftMax (float[] inputs, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 SoftMax(float32[] inputs, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.SoftMax(System.Single[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SoftMax (inputs As Single(), count As Integer) As Single" />
      <MemberSignature Language="F#" Value="static member SoftMax : single[] * int -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.SoftMax (inputs, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Single[]" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputs">Array of numbers to softmax</param>
        <param name="count">the number of input array elements to process</param>
        <summary>
            computes the "softmax" function: log sum_i exp x_i
            </summary>
        <returns>the softmax of the numbers</returns>
        <remarks>may have slightly lower roundoff error if inputs are sorted, smallest first</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sqrt">
      <MemberSignature Language="C#" Value="public static float Sqrt (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sqrt(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Sqrt(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sqrt (x As Single) As Single" />
      <MemberSignature Language="F#" Value="static member Sqrt : single -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Sqrt x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tanh">
      <MemberSignature Language="C#" Value="public static float Tanh (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Tanh(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Tanh(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Tanh (x As Single) As Single" />
      <MemberSignature Language="F#" Value="static member Tanh : single -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.Tanh x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>
            Hyperbolic tangent.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TanhFast">
      <MemberSignature Language="C#" Value="public static float TanhFast (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 TanhFast(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.TanhFast(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function TanhFast (x As Single) As Single" />
      <MemberSignature Language="F#" Value="static member TanhFast : single -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.TanhFast x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>
            The hyperbolic tangent function.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TanhSlow">
      <MemberSignature Language="C#" Value="public static float TanhSlow (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 TanhSlow(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.TanhSlow(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function TanhSlow (x As Single) As Single" />
      <MemberSignature Language="F#" Value="static member TanhSlow : single -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.TanhSlow x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>
            Hyperbolic tangent.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToFloat">
      <MemberSignature Language="C#" Value="public static float ToFloat (this double dbl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToFloat(float64 dbl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ToFloat(System.Double)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToFloat (dbl As Double) As Single" />
      <MemberSignature Language="F#" Value="static member ToFloat : double -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ToFloat dbl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dbl" Type="System.Double" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dbl">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToFloat">
      <MemberSignature Language="C#" Value="public static void ToFloat (this float dbl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToFloat(float32 dbl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ToFloat(System.Single)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ToFloat (dbl As Single)" />
      <MemberSignature Language="F#" Value="static member ToFloat : single -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.ToFloat dbl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dbl" Type="System.Single" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dbl">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TStatisticToPValue">
      <MemberSignature Language="C#" Value="public static double TStatisticToPValue (double t, double df);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 TStatisticToPValue(float64 t, float64 df) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MathUtils.TStatisticToPValue(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TStatisticToPValue (t As Double, df As Double) As Double" />
      <MemberSignature Language="F#" Value="static member TStatisticToPValue : double * double -&gt; double" Usage="Microsoft.ML.Runtime.Internal.Utilities.MathUtils.TStatisticToPValue (t, df)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Double" />
        <Parameter Name="df" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="t">The t-statistic</param>
        <param name="df">The degrees of freedom</param>
        <summary>
            Returns the two-tailed p-value given a t statistic from a distribution
            parameterized by the provided number of degrees of freedom.
            </summary>
        <returns>The corresponding two-tailed p-value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>