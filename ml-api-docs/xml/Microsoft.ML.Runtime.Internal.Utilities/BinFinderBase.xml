<Type Name="BinFinderBase" FullName="Microsoft.ML.Runtime.Internal.Utilities.BinFinderBase">
  <TypeSignature Language="C#" Value="public abstract class BinFinderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BinFinderBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Internal.Utilities.BinFinderBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BinFinderBase" />
  <TypeSignature Language="F#" Value="type BinFinderBase = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BinFinderBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.BinFinderBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CountBins">
      <MemberSignature Language="C#" Value="protected int CountBins { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CountBins" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Internal.Utilities.BinFinderBase.CountBins" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CountBins As Integer" />
      <MemberSignature Language="F#" Value="member this.CountBins : int" Usage="Microsoft.ML.Runtime.Internal.Utilities.BinFinderBase.CountBins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CountValues">
      <MemberSignature Language="C#" Value="protected int CountValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CountValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Internal.Utilities.BinFinderBase.CountValues" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CountValues As Integer" />
      <MemberSignature Language="F#" Value="member this.CountValues : int" Usage="Microsoft.ML.Runtime.Internal.Utilities.BinFinderBase.CountValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindBins">
      <MemberSignature Language="C#" Value="public double[] FindBins (int cbin, System.Collections.Generic.IList&lt;double&gt; values, int numZeroes = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64[] FindBins(int32 cbin, class System.Collections.Generic.IList`1&lt;float64&gt; values, int32 numZeroes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.BinFinderBase.FindBins(System.Int32,System.Collections.Generic.IList{System.Double},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindBins (cbin As Integer, values As IList(Of Double), Optional numZeroes As Integer = 0) As Double()" />
      <MemberSignature Language="F#" Value="member this.FindBins : int * System.Collections.Generic.IList&lt;double&gt; * int -&gt; double[]" Usage="binFinderBase.FindBins (cbin, values, numZeroes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cbin" Type="System.Int32" />
        <Parameter Name="values" Type="System.Collections.Generic.IList&lt;System.Double&gt;" />
        <Parameter Name="numZeroes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cbin">To be added.</param>
        <param name="values">To be added.</param>
        <param name="numZeroes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindBins">
      <MemberSignature Language="C#" Value="public float[] FindBins (int cbin, System.Collections.Generic.IList&lt;float&gt; values, int numZeroes = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32[] FindBins(int32 cbin, class System.Collections.Generic.IList`1&lt;float32&gt; values, int32 numZeroes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.BinFinderBase.FindBins(System.Int32,System.Collections.Generic.IList{System.Single},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindBins (cbin As Integer, values As IList(Of Single), Optional numZeroes As Integer = 0) As Single()" />
      <MemberSignature Language="F#" Value="member this.FindBins : int * System.Collections.Generic.IList&lt;single&gt; * int -&gt; single[]" Usage="binFinderBase.FindBins (cbin, values, numZeroes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cbin" Type="System.Int32" />
        <Parameter Name="values" Type="System.Collections.Generic.IList&lt;System.Single&gt;" />
        <Parameter Name="numZeroes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cbin">To be added.</param>
        <param name="values">To be added.</param>
        <param name="numZeroes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindBinsCore">
      <MemberSignature Language="C#" Value="protected abstract void FindBinsCore (System.Collections.Generic.List&lt;int&gt; counts, int[] path);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FindBinsCore(class System.Collections.Generic.List`1&lt;int32&gt; counts, int32[] path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.BinFinderBase.FindBinsCore(System.Collections.Generic.List{System.Int32},System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub FindBinsCore (counts As List(Of Integer), path As Integer())" />
      <MemberSignature Language="F#" Value="abstract member FindBinsCore : System.Collections.Generic.List&lt;int&gt; * int[] -&gt; unit" Usage="binFinderBase.FindBinsCore (counts, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counts" Type="System.Collections.Generic.List&lt;System.Int32&gt;" />
        <Parameter Name="path" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="counts">To be added.</param>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindBinsWithCounts">
      <MemberSignature Language="C#" Value="public void FindBinsWithCounts (System.Collections.Generic.IList&lt;int&gt; counts, int numValues, int cbin, int[] path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FindBinsWithCounts(class System.Collections.Generic.IList`1&lt;int32&gt; counts, int32 numValues, int32 cbin, int32[] path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.BinFinderBase.FindBinsWithCounts(System.Collections.Generic.IList{System.Int32},System.Int32,System.Int32,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub FindBinsWithCounts (counts As IList(Of Integer), numValues As Integer, cbin As Integer, path As Integer())" />
      <MemberSignature Language="F#" Value="member this.FindBinsWithCounts : System.Collections.Generic.IList&lt;int&gt; * int * int * int[] -&gt; unit" Usage="binFinderBase.FindBinsWithCounts (counts, numValues, cbin, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counts" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="numValues" Type="System.Int32" />
        <Parameter Name="cbin" Type="System.Int32" />
        <Parameter Name="path" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="counts">To be added.</param>
        <param name="numValues">To be added.</param>
        <param name="cbin">To be added.</param>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSplitValue">
      <MemberSignature Language="C#" Value="public static double GetSplitValue (double a, double b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetSplitValue(float64 a, float64 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.BinFinderBase.GetSplitValue(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSplitValue (a As Double, b As Double) As Double" />
      <MemberSignature Language="F#" Value="static member GetSplitValue : double * double -&gt; double" Usage="Microsoft.ML.Runtime.Internal.Utilities.BinFinderBase.GetSplitValue (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
        <Parameter Name="b" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>
            This should normally be just (a + b) / 2, except in one interesting case:
            If a and b are 'consecutive' floats (they differ only in the least significant bit),
            the above expression is possible to be rounded to a.
            This can lead to bin bounds that are not strictly increasing!
            Also note that the simple (a + b) / 2 can overflow, that's the reason for a / 2 + b / 2.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSplitValue">
      <MemberSignature Language="C#" Value="public static float GetSplitValue (float a, float b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetSplitValue(float32 a, float32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.BinFinderBase.GetSplitValue(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSplitValue (a As Single, b As Single) As Single" />
      <MemberSignature Language="F#" Value="static member GetSplitValue : single * single -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.BinFinderBase.GetSplitValue (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single" />
        <Parameter Name="b" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>
            This should normally be just (a + b) / 2, except in one interesting case:
            If a and b are 'consecutive' floats (they differ only in the least significant bit),
            the above expression is possible to be rounded to a.
            This can lead to bin bounds that are not strictly increasing!
            Also note that the simple (a + b) / 2 can overflow, that's the reason for a / 2 + b / 2.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>