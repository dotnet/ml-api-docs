<Type Name="Stats" FullName="Microsoft.ML.Runtime.Internal.Utilities.Stats">
  <TypeSignature Language="C#" Value="public static class Stats" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Stats extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Internal.Utilities.Stats" />
  <TypeSignature Language="VB.NET" Value="Public Class Stats" />
  <TypeSignature Language="F#" Value="type Stats = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stats abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class Stats abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class Stats abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A class containing common statistical functions
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="SampleFromBeta">
      <MemberSignature Language="C#" Value="public static double SampleFromBeta (Microsoft.ML.Runtime.IRandom rand, double alpha1, double alpha2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 SampleFromBeta(class Microsoft.ML.Runtime.IRandom rand, float64 alpha1, float64 alpha2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Stats.SampleFromBeta(Microsoft.ML.Runtime.IRandom,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SampleFromBeta (rand As IRandom, alpha1 As Double, alpha2 As Double) As Double" />
      <MemberSignature Language="F#" Value="static member SampleFromBeta : Microsoft.ML.Runtime.IRandom * double * double -&gt; double" Usage="Microsoft.ML.Runtime.Internal.Utilities.Stats.SampleFromBeta (rand, alpha1, alpha2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double SampleFromBeta(Microsoft::ML::Runtime::IRandom ^ rand, double alpha1, double alpha2);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static double SampleFromBeta(Microsoft::ML::Runtime::IRandom ^ rand, double alpha1, double alpha2);" />
      <MemberSignature Language="C++ WINRT" Value=" static double SampleFromBeta(Microsoft::ML::Runtime::IRandom const &amp; rand, double alpha1, double alpha2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rand" Type="Microsoft.ML.Runtime.IRandom" />
        <Parameter Name="alpha1" Type="System.Double" />
        <Parameter Name="alpha2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rand">Random generator to use</param>
        <param name="alpha1">first parameter</param>
        <param name="alpha2">second parameter</param>
        <summary>
            Generates a beta-distributed random variable
            </summary>
        <returns>Sample from distribution</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleFromBinomial">
      <MemberSignature Language="C#" Value="public static int SampleFromBinomial (Microsoft.ML.Runtime.IRandom r, int n, double p);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SampleFromBinomial(class Microsoft.ML.Runtime.IRandom r, int32 n, float64 p) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Stats.SampleFromBinomial(Microsoft.ML.Runtime.IRandom,System.Int32,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SampleFromBinomial (r As IRandom, n As Integer, p As Double) As Integer" />
      <MemberSignature Language="F#" Value="static member SampleFromBinomial : Microsoft.ML.Runtime.IRandom * int * double -&gt; int" Usage="Microsoft.ML.Runtime.Internal.Utilities.Stats.SampleFromBinomial (r, n, p)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int SampleFromBinomial(Microsoft::ML::Runtime::IRandom ^ r, int n, double p);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static int SampleFromBinomial(Microsoft::ML::Runtime::IRandom ^ r, int n, double p);" />
      <MemberSignature Language="C++ WINRT" Value=" static int SampleFromBinomial(Microsoft::ML::Runtime::IRandom const &amp; r, int n, double p);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Microsoft.ML.Runtime.IRandom" />
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="p" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="r">Random generator to use</param>
        <param name="n">Parameter N of binomial</param>
        <param name="p">Parameter p of binomial</param>
        <summary>
            Returns a number sampled from the binomial distribution with parameters n and p
            </summary>
        <returns />
        <remarks>Should be robust for all values of n, p</remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleFromCauchy">
      <MemberSignature Language="C#" Value="public static float SampleFromCauchy (Microsoft.ML.Runtime.IRandom rand);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 SampleFromCauchy(class Microsoft.ML.Runtime.IRandom rand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Stats.SampleFromCauchy(Microsoft.ML.Runtime.IRandom)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SampleFromCauchy (rand As IRandom) As Single" />
      <MemberSignature Language="F#" Value="static member SampleFromCauchy : Microsoft.ML.Runtime.IRandom -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.Stats.SampleFromCauchy rand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float SampleFromCauchy(Microsoft::ML::Runtime::IRandom ^ rand);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static float SampleFromCauchy(Microsoft::ML::Runtime::IRandom ^ rand);" />
      <MemberSignature Language="C++ WINRT" Value=" static float SampleFromCauchy(Microsoft::ML::Runtime::IRandom const &amp; rand);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rand" Type="Microsoft.ML.Runtime.IRandom" />
      </Parameters>
      <Docs>
        <param name="rand"></param>
        <summary>
            Sample from a standard Cauchy distribution:
            http://en.wikipedia.org/wiki/Lorentzian_function
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleFromDirichlet">
      <MemberSignature Language="C#" Value="public static void SampleFromDirichlet (Microsoft.ML.Runtime.IRandom rand, double[] alphas, double[] result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SampleFromDirichlet(class Microsoft.ML.Runtime.IRandom rand, float64[] alphas, float64[] result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Stats.SampleFromDirichlet(Microsoft.ML.Runtime.IRandom,System.Double[],System.Double[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SampleFromDirichlet (rand As IRandom, alphas As Double(), result As Double())" />
      <MemberSignature Language="F#" Value="static member SampleFromDirichlet : Microsoft.ML.Runtime.IRandom * double[] * double[] -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.Stats.SampleFromDirichlet (rand, alphas, result)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SampleFromDirichlet(Microsoft::ML::Runtime::IRandom ^ rand, cli::array &lt;double&gt; ^ alphas, cli::array &lt;double&gt; ^ result);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static void SampleFromDirichlet(Microsoft::ML::Runtime::IRandom ^ rand, Platform::Array &lt;double&gt; ^ alphas, Platform::Array &lt;double&gt; ^ result);" />
      <MemberSignature Language="C++ WINRT" Value=" static void SampleFromDirichlet(Microsoft::ML::Runtime::IRandom const &amp; rand, std::Array &lt;double&gt; const &amp; alphas, std::Array &lt;double&gt; const &amp; result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rand" Type="Microsoft.ML.Runtime.IRandom" />
        <Parameter Name="alphas" Type="System.Double[]" />
        <Parameter Name="result" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="rand">Random generator to use</param>
        <param name="alphas">array of parameters</param>
        <param name="result">array in which to store resulting sample</param>
        <summary>
            Generates a dirichlet-distributed random variable
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleFromGamma">
      <MemberSignature Language="C#" Value="public static double SampleFromGamma (Microsoft.ML.Runtime.IRandom r, double alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 SampleFromGamma(class Microsoft.ML.Runtime.IRandom r, float64 alpha) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Stats.SampleFromGamma(Microsoft.ML.Runtime.IRandom,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SampleFromGamma (r As IRandom, alpha As Double) As Double" />
      <MemberSignature Language="F#" Value="static member SampleFromGamma : Microsoft.ML.Runtime.IRandom * double -&gt; double" Usage="Microsoft.ML.Runtime.Internal.Utilities.Stats.SampleFromGamma (r, alpha)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double SampleFromGamma(Microsoft::ML::Runtime::IRandom ^ r, double alpha);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static double SampleFromGamma(Microsoft::ML::Runtime::IRandom ^ r, double alpha);" />
      <MemberSignature Language="C++ WINRT" Value=" static double SampleFromGamma(Microsoft::ML::Runtime::IRandom const &amp; r, double alpha);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Microsoft.ML.Runtime.IRandom" />
        <Parameter Name="alpha" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="r">The random number generator to use</param>
        <param name="alpha">Shape parameter</param>
        <summary>
            Returns a sample from the gamma distribution with scale parameter 1, shape parameter alpha
            </summary>
        <returns>Sample from gamma distribution</returns>
        <remarks>Uses Marsaglia and Tsang's fast algorithm</remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleFromGaussian">
      <MemberSignature Language="C#" Value="public static double SampleFromGaussian (Microsoft.ML.Runtime.IRandom rand);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 SampleFromGaussian(class Microsoft.ML.Runtime.IRandom rand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Stats.SampleFromGaussian(Microsoft.ML.Runtime.IRandom)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SampleFromGaussian (rand As IRandom) As Double" />
      <MemberSignature Language="F#" Value="static member SampleFromGaussian : Microsoft.ML.Runtime.IRandom -&gt; double" Usage="Microsoft.ML.Runtime.Internal.Utilities.Stats.SampleFromGaussian rand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double SampleFromGaussian(Microsoft::ML::Runtime::IRandom ^ rand);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static double SampleFromGaussian(Microsoft::ML::Runtime::IRandom ^ rand);" />
      <MemberSignature Language="C++ WINRT" Value=" static double SampleFromGaussian(Microsoft::ML::Runtime::IRandom const &amp; rand);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rand" Type="Microsoft.ML.Runtime.IRandom" />
      </Parameters>
      <Docs>
        <param name="rand">A Random to use for the sampling</param>
        <summary>
            Returns a number sampled from a zero-mean, unit variance Gaussian
            </summary>
        <returns>a sample</returns>
        <remarks>uses Joseph L. Leva's algorithm from "A fast normal random number generator", 1992</remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleFromLaplacian">
      <MemberSignature Language="C#" Value="public static float SampleFromLaplacian (Microsoft.ML.Runtime.IRandom rand, float mean, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 SampleFromLaplacian(class Microsoft.ML.Runtime.IRandom rand, float32 mean, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Stats.SampleFromLaplacian(Microsoft.ML.Runtime.IRandom,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SampleFromLaplacian (rand As IRandom, mean As Single, scale As Single) As Single" />
      <MemberSignature Language="F#" Value="static member SampleFromLaplacian : Microsoft.ML.Runtime.IRandom * single * single -&gt; single" Usage="Microsoft.ML.Runtime.Internal.Utilities.Stats.SampleFromLaplacian (rand, mean, scale)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float SampleFromLaplacian(Microsoft::ML::Runtime::IRandom ^ rand, float mean, float scale);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static float SampleFromLaplacian(Microsoft::ML::Runtime::IRandom ^ rand, float mean, float scale);" />
      <MemberSignature Language="C++ WINRT" Value=" static float SampleFromLaplacian(Microsoft::ML::Runtime::IRandom const &amp; rand, float mean, float scale);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rand" Type="Microsoft.ML.Runtime.IRandom" />
        <Parameter Name="mean" Type="System.Single" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rand">To be added.</param>
        <param name="mean">To be added.</param>
        <param name="scale">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleFromPoisson">
      <MemberSignature Language="C#" Value="public static int SampleFromPoisson (Microsoft.ML.Runtime.IRandom rand, double lambda);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SampleFromPoisson(class Microsoft.ML.Runtime.IRandom rand, float64 lambda) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Stats.SampleFromPoisson(Microsoft.ML.Runtime.IRandom,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SampleFromPoisson (rand As IRandom, lambda As Double) As Integer" />
      <MemberSignature Language="F#" Value="static member SampleFromPoisson : Microsoft.ML.Runtime.IRandom * double -&gt; int" Usage="Microsoft.ML.Runtime.Internal.Utilities.Stats.SampleFromPoisson (rand, lambda)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int SampleFromPoisson(Microsoft::ML::Runtime::IRandom ^ rand, double lambda);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static int SampleFromPoisson(Microsoft::ML::Runtime::IRandom ^ rand, double lambda);" />
      <MemberSignature Language="C++ WINRT" Value=" static int SampleFromPoisson(Microsoft::ML::Runtime::IRandom const &amp; rand, double lambda);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rand" Type="Microsoft.ML.Runtime.IRandom" />
        <Parameter Name="lambda" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rand">To be added.</param>
        <param name="lambda">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleLong">
      <MemberSignature Language="C#" Value="public static long SampleLong (long rangeSize, Microsoft.ML.Runtime.IRandom rand);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SampleLong(int64 rangeSize, class Microsoft.ML.Runtime.IRandom rand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.Stats.SampleLong(System.Int64,Microsoft.ML.Runtime.IRandom)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SampleLong (rangeSize As Long, rand As IRandom) As Long" />
      <MemberSignature Language="F#" Value="static member SampleLong : int64 * Microsoft.ML.Runtime.IRandom -&gt; int64" Usage="Microsoft.ML.Runtime.Internal.Utilities.Stats.SampleLong (rangeSize, rand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long SampleLong(long rangeSize, Microsoft::ML::Runtime::IRandom ^ rand);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static long long SampleLong(long long rangeSize, Microsoft::ML::Runtime::IRandom ^ rand);" />
      <MemberSignature Language="C++ WINRT" Value=" static long SampleLong(long rangeSize, Microsoft::ML::Runtime::IRandom const &amp; rand);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rangeSize" Type="System.Int64" />
        <Parameter Name="rand" Type="Microsoft.ML.Runtime.IRandom" />
      </Parameters>
      <Docs>
        <param name="rangeSize">Size of range to sample from, between 0 and int.MaxValue^2</param>
        <param name="rand">Random number generator</param>
        <summary>
            Returns a number uniformly sampled from 0...(rangeSize-1)
            </summary>
        <returns>Sampled value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>