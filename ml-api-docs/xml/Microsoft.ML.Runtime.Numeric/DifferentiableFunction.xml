<Type Name="DifferentiableFunction" FullName="Microsoft.ML.Runtime.Numeric.DifferentiableFunction">
  <TypeSignature Language="C#" Value="public delegate float DifferentiableFunction(ref VBuffer&lt;float&gt; input, ref VBuffer&lt;float&gt; gradient, IProgressChannelProvider progress);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DifferentiableFunction extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Numeric.DifferentiableFunction" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function DifferentiableFunction(ByRef input As VBuffer(Of Single), ByRef gradient As VBuffer(Of Single), progress As IProgressChannelProvider) As Single " />
  <TypeSignature Language="F#" Value="type DifferentiableFunction = delegate of  *  * IProgressChannelProvider -&gt; single" />
  <TypeSignature Language="C++ CLI" Value="public delegate float DifferentiableFunction(VBuffer&lt;float&gt; % input, VBuffer&lt;float&gt; % gradient, IProgressChannelProvider ^ progress);" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.VBuffer&lt;System.Single&gt;&amp;" RefType="ref" />
    <Parameter Name="gradient" Type="Microsoft.ML.Runtime.Data.VBuffer&lt;System.Single&gt;&amp;" RefType="ref" />
    <Parameter Name="progress" Type="Microsoft.ML.Runtime.IProgressChannelProvider" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Single</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="input">The point at which to evaluate the function</param>
    <param name="gradient">The gradient vector, which must be filled in (its initial contents are undefined)</param>
    <param name="progress">The progress channel provider that can be used to report calculation progress. Can be null.</param>
    <summary>
            A delegate for functions with gradients.
            </summary>
    <returns>The value of the function</returns>
    <remarks>To be added.</remarks>
  </Docs>
</Type>