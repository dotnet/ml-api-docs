<Type Name="IBindableCanSaveOnnx" FullName="Microsoft.ML.Runtime.Model.Onnx.IBindableCanSaveOnnx">
  <TypeSignature Language="C#" Value="public interface IBindableCanSaveOnnx : Microsoft.ML.Runtime.Data.ISchemaBindableMapper, Microsoft.ML.Runtime.Model.Onnx.ICanSaveOnnx" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindableCanSaveOnnx implements class Microsoft.ML.Runtime.Data.ISchemaBindableMapper, class Microsoft.ML.Runtime.Model.Onnx.ICanSaveOnnx" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Model.Onnx.IBindableCanSaveOnnx" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindableCanSaveOnnx&#xA;Implements ICanSaveOnnx, ISchemaBindableMapper" />
  <TypeSignature Language="F#" Value="type IBindableCanSaveOnnx = interface&#xA;    interface ICanSaveOnnx&#xA;    interface ISchemaBindableMapper" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindableCanSaveOnnx : Microsoft::ML::Runtime::Data::ISchemaBindableMapper, Microsoft::ML::Runtime::Model::Onnx::ICanSaveOnnx" />
  <TypeSignature Language="C++ CX" Value="public interface class IBindableCanSaveOnnx : Microsoft::ML::Runtime::Data::ISchemaBindableMapper, Microsoft::ML::Runtime::Model::Onnx::ICanSaveOnnx" />
  <TypeSignature Language="C++ WINRT" Value="__interface IBindableCanSaveOnnx : Microsoft::ML::Runtime::Data::ISchemaBindableMapper, Microsoft::ML::Runtime::Model::Onnx::ICanSaveOnnx" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Data.ISchemaBindableMapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Model.Onnx.ICanSaveOnnx</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            This <see cref="T:Microsoft.ML.Runtime.Data.ISchemaBindableMapper" /> is savable in ONNX. Note that this is
            typically called within an <see cref="T:Microsoft.ML.Runtime.Data.IDataScorerTransform" /> that is wrapping
            this mapper, and has already been bound to it.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="SaveAsOnnx">
      <MemberSignature Language="C#" Value="public bool SaveAsOnnx (Microsoft.ML.Runtime.Model.Onnx.OnnxContext ctx, Microsoft.ML.Runtime.Data.RoleMappedSchema schema, string[] outputNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SaveAsOnnx(class Microsoft.ML.Runtime.Model.Onnx.OnnxContext ctx, class Microsoft.ML.Runtime.Data.RoleMappedSchema schema, string[] outputNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Onnx.IBindableCanSaveOnnx.SaveAsOnnx(Microsoft.ML.Runtime.Model.Onnx.OnnxContext,Microsoft.ML.Runtime.Data.RoleMappedSchema,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveAsOnnx (ctx As OnnxContext, schema As RoleMappedSchema, outputNames As String()) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member SaveAsOnnx : Microsoft.ML.Runtime.Model.Onnx.OnnxContext * Microsoft.ML.Runtime.Data.RoleMappedSchema * string[] -&gt; bool" Usage="iBindableCanSaveOnnx.SaveAsOnnx (ctx, schema, outputNames)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SaveAsOnnx(Microsoft::ML::Runtime::Model::Onnx::OnnxContext ^ ctx, Microsoft::ML::Runtime::Data::RoleMappedSchema ^ schema, cli::array &lt;System::String ^&gt; ^ outputNames);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool SaveAsOnnx(Microsoft::ML::Runtime::Model::Onnx::OnnxContext ^ ctx, Microsoft::ML::Runtime::Data::RoleMappedSchema ^ schema, Platform::Array &lt;Platform::String ^&gt; ^ outputNames);" />
      <MemberSignature Language="C++ WINRT" Value="bool SaveAsOnnx(Microsoft::ML::Runtime::Model::Onnx::OnnxContext const &amp; ctx, Microsoft::ML::Runtime::Data::RoleMappedSchema const &amp; schema, std::Array &lt;std::wstring const &amp;&gt; const &amp; outputNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.Onnx.OnnxContext" />
        <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.RoleMappedSchema" />
        <Parameter Name="outputNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="ctx">The ONNX program being built</param>
        <param name="schema">The role mappings that was passed to this bindable
            object, when the <see cref="T:Microsoft.ML.Runtime.Data.ISchemaBoundMapper" /> was created that this transform
            is wrapping</param>
        <param name="outputNames">Since this method is called from a scorer transform,
            it is that transform that controls what the output column names will be, of
            the outputs produced by this bindable mapper. This is the array that holds
            those names, so that implementors of this method know what to produce in
            <paramref name="ctx" />.</param>
        <summary>
            Save as ONNX. If <see cref="P:Microsoft.ML.Runtime.Model.Onnx.ICanSaveOnnx.CanSaveOnnx" /> is
            <c>false</c> this should not be called. This method is intended to be called
            by the wrapping scorer transform, and is intended to produce enough information
            for that purpose.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>