<Type Name="LogisticRegressor" FullName="Microsoft.ML.Trainers.LogisticRegressor">
  <TypeSignature Language="C#" Value="public sealed class LogisticRegressor : Microsoft.ML.ILearningPipelineItem, Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITrainerInputWithWeight" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LogisticRegressor extends System.Object implements class Microsoft.ML.ILearningPipelineItem, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITrainerInput, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITrainerInputWithLabel, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITrainerInputWithWeight" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.LogisticRegressor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LogisticRegressor&#xA;Implements CommonInputs.ITrainerInputWithWeight, ILearningPipelineItem" />
  <TypeSignature Language="F#" Value="type LogisticRegressor = class&#xA;    interface CommonInputs.ITrainerInputWithWeight&#xA;    interface CommonInputs.ITrainerInputWithLabel&#xA;    interface CommonInputs.ITrainerInput&#xA;    interface ILearningPipelineItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogisticRegressor sealed : Microsoft::ML::ILearningPipelineItem, Microsoft::ML::Runtime::EntryPoints::CommonInputs::ITrainerInputWithWeight" />
  <TypeSignature Language="C++ CX" Value="public ref class LogisticRegressor sealed : Microsoft::ML::ILearningPipelineItem, Microsoft::ML::Runtime::EntryPoints::CommonInputs::ITrainerInputWithWeight" />
  <TypeSignature Language="C++ WINRT" Value="class LogisticRegressor sealed : Microsoft::ML::ILearningPipelineItem, Microsoft::ML::Runtime::EntryPoints::CommonInputs::ITrainerInputWithWeight" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.ILearningPipelineItem</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.EntryPoints.CommonInputs+ITrainerInputWithWeight</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Train a logistic regression multi class model
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogisticRegressor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.LogisticRegressor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogisticRegressor();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; LogisticRegressor();" />
      <MemberSignature Language="C++ WINRT" Value=" LogisticRegressor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyStep">
      <MemberSignature Language="C#" Value="public Microsoft.ML.ILearningPipelineStep ApplyStep (Microsoft.ML.ILearningPipelineStep previousStep, Microsoft.ML.Runtime.Experiment experiment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.ILearningPipelineStep ApplyStep(class Microsoft.ML.ILearningPipelineStep previousStep, class Microsoft.ML.Runtime.Experiment experiment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.LogisticRegressor.ApplyStep(Microsoft.ML.ILearningPipelineStep,Microsoft.ML.Runtime.Experiment)" />
      <MemberSignature Language="F#" Value="abstract member ApplyStep : Microsoft.ML.ILearningPipelineStep * Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.ILearningPipelineStep&#xA;override this.ApplyStep : Microsoft.ML.ILearningPipelineStep * Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.ILearningPipelineStep" Usage="logisticRegressor.ApplyStep (previousStep, experiment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::ML::ILearningPipelineStep ^ ApplyStep(Microsoft::ML::ILearningPipelineStep ^ previousStep, Microsoft::ML::Runtime::Experiment ^ experiment);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::ML::ILearningPipelineStep ^ ApplyStep(Microsoft::ML::ILearningPipelineStep ^ previousStep, Microsoft::ML::Runtime::Experiment ^ experiment);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::ML::ILearningPipelineStep ApplyStep(Microsoft::ML::ILearningPipelineStep const &amp; previousStep, Microsoft::ML::Runtime::Experiment const &amp; experiment);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.ILearningPipelineItem.ApplyStep(Microsoft.ML.ILearningPipelineStep,Microsoft.ML.Runtime.Experiment)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.ILearningPipelineStep</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previousStep" Type="Microsoft.ML.ILearningPipelineStep" />
        <Parameter Name="experiment" Type="Microsoft.ML.Runtime.Experiment" />
      </Parameters>
      <Docs>
        <param name="previousStep">To be added.</param>
        <param name="experiment">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caching">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.CachingOptions Caching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Models.CachingOptions Caching" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LogisticRegressor.Caching" />
      <MemberSignature Language="VB.NET" Value="Public Property Caching As CachingOptions" />
      <MemberSignature Language="F#" Value="member this.Caching : Microsoft.ML.Models.CachingOptions with get, set" Usage="Microsoft.ML.Trainers.LogisticRegressor.Caching" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ML::Models::CachingOptions Caching { Microsoft::ML::Models::CachingOptions get(); void set(Microsoft::ML::Models::CachingOptions value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::ML::Models::CachingOptions Caching { Microsoft::ML::Models::CachingOptions get(); void set(Microsoft::ML::Models::CachingOptions value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.CachingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether learner should cache input training data
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DenseOptimizer">
      <MemberSignature Language="C#" Value="public bool DenseOptimizer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DenseOptimizer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LogisticRegressor.DenseOptimizer" />
      <MemberSignature Language="VB.NET" Value="Public Property DenseOptimizer As Boolean" />
      <MemberSignature Language="F#" Value="member this.DenseOptimizer : bool with get, set" Usage="Microsoft.ML.Trainers.LogisticRegressor.DenseOptimizer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DenseOptimizer { bool get(); void set(bool value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool DenseOptimizer { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableDiscreteParam("DenseOptimizer", Mono.Cecil.CustomAttributeArgument[], false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Force densification of the internal optimization vectors
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnforceNonNegativity">
      <MemberSignature Language="C#" Value="public bool EnforceNonNegativity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnforceNonNegativity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LogisticRegressor.EnforceNonNegativity" />
      <MemberSignature Language="VB.NET" Value="Public Property EnforceNonNegativity As Boolean" />
      <MemberSignature Language="F#" Value="member this.EnforceNonNegativity : bool with get, set" Usage="Microsoft.ML.Trainers.LogisticRegressor.EnforceNonNegativity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnforceNonNegativity { bool get(); void set(bool value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool EnforceNonNegativity { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Enforce non-negative weights
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureColumn">
      <MemberSignature Language="C#" Value="public string FeatureColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FeatureColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LogisticRegressor.FeatureColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureColumn As String" />
      <MemberSignature Language="F#" Value="member this.FeatureColumn : string with get, set" Usage="Microsoft.ML.Trainers.LogisticRegressor.FeatureColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FeatureColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ FeatureColumn { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for features
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitWtsDiameter">
      <MemberSignature Language="C#" Value="public float InitWtsDiameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 InitWtsDiameter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LogisticRegressor.InitWtsDiameter" />
      <MemberSignature Language="VB.NET" Value="Public Property InitWtsDiameter As Single" />
      <MemberSignature Language="F#" Value="member this.InitWtsDiameter : single with get, set" Usage="Microsoft.ML.Trainers.LogisticRegressor.InitWtsDiameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float InitWtsDiameter { float get(); void set(float value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property float InitWtsDiameter { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableFloatParam("InitWtsDiameter", 0, 1, -1, 5, false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Init weights diameter
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="L1Weight">
      <MemberSignature Language="C#" Value="public float L1Weight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 L1Weight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LogisticRegressor.L1Weight" />
      <MemberSignature Language="VB.NET" Value="Public Property L1Weight As Single" />
      <MemberSignature Language="F#" Value="member this.L1Weight : single with get, set" Usage="Microsoft.ML.Trainers.LogisticRegressor.L1Weight" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float L1Weight { float get(); void set(float value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property float L1Weight { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableFloatParam("L1Weight", 0, 1, -1, 4, false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            L1 regularization weight
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="L2Weight">
      <MemberSignature Language="C#" Value="public float L2Weight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 L2Weight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LogisticRegressor.L2Weight" />
      <MemberSignature Language="VB.NET" Value="Public Property L2Weight As Single" />
      <MemberSignature Language="F#" Value="member this.L2Weight : single with get, set" Usage="Microsoft.ML.Trainers.LogisticRegressor.L2Weight" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float L2Weight { float get(); void set(float value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property float L2Weight { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableFloatParam("L2Weight", 0, 1, -1, 4, false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            L2 regularization weight
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelColumn">
      <MemberSignature Language="C#" Value="public string LabelColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LabelColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LogisticRegressor.LabelColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelColumn As String" />
      <MemberSignature Language="F#" Value="member this.LabelColumn : string with get, set" Usage="Microsoft.ML.Trainers.LogisticRegressor.LabelColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LabelColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ LabelColumn { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for labels
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxIterations">
      <MemberSignature Language="C#" Value="public int MaxIterations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxIterations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LogisticRegressor.MaxIterations" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxIterations As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxIterations : int with get, set" Usage="Microsoft.ML.Trainers.LogisticRegressor.MaxIterations" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxIterations { int get(); void set(int value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int MaxIterations { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableLongParam("MaxIterations", 1, 2147483647, -1, -1, false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Maximum iterations.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemorySize">
      <MemberSignature Language="C#" Value="public int MemorySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemorySize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LogisticRegressor.MemorySize" />
      <MemberSignature Language="VB.NET" Value="Public Property MemorySize As Integer" />
      <MemberSignature Language="F#" Value="member this.MemorySize : int with get, set" Usage="Microsoft.ML.Trainers.LogisticRegressor.MemorySize" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemorySize { int get(); void set(int value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int MemorySize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableDiscreteParam("MemorySize", Mono.Cecil.CustomAttributeArgument[], false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Memory size for L-BFGS. Lower=faster, less accurate
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeFeatures">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.NormalizeOption NormalizeFeatures { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Models.NormalizeOption NormalizeFeatures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LogisticRegressor.NormalizeFeatures" />
      <MemberSignature Language="VB.NET" Value="Public Property NormalizeFeatures As NormalizeOption" />
      <MemberSignature Language="F#" Value="member this.NormalizeFeatures : Microsoft.ML.Models.NormalizeOption with get, set" Usage="Microsoft.ML.Trainers.LogisticRegressor.NormalizeFeatures" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ML::Models::NormalizeOption NormalizeFeatures { Microsoft::ML::Models::NormalizeOption get(); void set(Microsoft::ML::Models::NormalizeOption value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::ML::Models::NormalizeOption NormalizeFeatures { Microsoft::ML::Models::NormalizeOption get(); void set(Microsoft::ML::Models::NormalizeOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.NormalizeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Normalize option for the feature column
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumThreads">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; NumThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; NumThreads" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LogisticRegressor.NumThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property NumThreads As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.NumThreads : Nullable&lt;int&gt; with get, set" Usage="Microsoft.ML.Trainers.LogisticRegressor.NumThreads" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; NumThreads { Nullable&lt;int&gt; get(); void set(Nullable&lt;int&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Number of threads
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptTol">
      <MemberSignature Language="C#" Value="public float OptTol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 OptTol" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LogisticRegressor.OptTol" />
      <MemberSignature Language="VB.NET" Value="Public Property OptTol As Single" />
      <MemberSignature Language="F#" Value="member this.OptTol : single with get, set" Usage="Microsoft.ML.Trainers.LogisticRegressor.OptTol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float OptTol { float get(); void set(float value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property float OptTol { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableDiscreteParam("OptTol", Mono.Cecil.CustomAttributeArgument[], false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Tolerance parameter for optimization convergence. Lower = slower, more accurate
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Quiet">
      <MemberSignature Language="C#" Value="public bool Quiet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Quiet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LogisticRegressor.Quiet" />
      <MemberSignature Language="VB.NET" Value="Public Property Quiet As Boolean" />
      <MemberSignature Language="F#" Value="member this.Quiet : bool with get, set" Usage="Microsoft.ML.Trainers.LogisticRegressor.Quiet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Quiet { bool get(); void set(bool value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool Quiet { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If set to true, produce no output during training.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SgdInitializationTolerance">
      <MemberSignature Language="C#" Value="public float SgdInitializationTolerance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 SgdInitializationTolerance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LogisticRegressor.SgdInitializationTolerance" />
      <MemberSignature Language="VB.NET" Value="Public Property SgdInitializationTolerance As Single" />
      <MemberSignature Language="F#" Value="member this.SgdInitializationTolerance : single with get, set" Usage="Microsoft.ML.Trainers.LogisticRegressor.SgdInitializationTolerance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float SgdInitializationTolerance { float get(); void set(float value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property float SgdInitializationTolerance { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Run SGD to initialize LR weights, converging to this tolerance
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTrainingStats">
      <MemberSignature Language="C#" Value="public bool ShowTrainingStats { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowTrainingStats" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LogisticRegressor.ShowTrainingStats" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowTrainingStats As Boolean" />
      <MemberSignature Language="F#" Value="member this.ShowTrainingStats : bool with get, set" Usage="Microsoft.ML.Trainers.LogisticRegressor.ShowTrainingStats" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowTrainingStats { bool get(); void set(bool value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool ShowTrainingStats { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Show statistics of training examples.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainingData">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; TrainingData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; TrainingData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LogisticRegressor.TrainingData" />
      <MemberSignature Language="VB.NET" Value="Public Property TrainingData As Var(Of IDataView)" />
      <MemberSignature Language="F#" Value="member this.TrainingData : Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; with get, set" Usage="Microsoft.ML.Trainers.LogisticRegressor.TrainingData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ML::Runtime::EntryPoints::Var&lt;Microsoft::ML::Runtime::Data::IDataView ^&gt; ^ TrainingData { Microsoft::ML::Runtime::EntryPoints::Var&lt;Microsoft::ML::Runtime::Data::IDataView ^&gt; ^ get(); void set(Microsoft::ML::Runtime::EntryPoints::Var&lt;Microsoft::ML::Runtime::Data::IDataView ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITrainerInput.TrainingData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The data to be used for training
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseThreads">
      <MemberSignature Language="C#" Value="public bool UseThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseThreads" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LogisticRegressor.UseThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property UseThreads As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseThreads : bool with get, set" Usage="Microsoft.ML.Trainers.LogisticRegressor.UseThreads" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseThreads { bool get(); void set(bool value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool UseThreads { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether or not to use threads. Default is true
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeightColumn">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Optional&lt;string&gt; WeightColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Optional`1&lt;string&gt; WeightColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LogisticRegressor.WeightColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property WeightColumn As Optional(Of String)" />
      <MemberSignature Language="F#" Value="member this.WeightColumn : Microsoft.ML.Runtime.EntryPoints.Optional&lt;string&gt; with get, set" Usage="Microsoft.ML.Trainers.LogisticRegressor.WeightColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ML::Runtime::EntryPoints::Optional&lt;System::String ^&gt; ^ WeightColumn { Microsoft::ML::Runtime::EntryPoints::Optional&lt;System::String ^&gt; ^ get(); void set(Microsoft::ML::Runtime::EntryPoints::Optional&lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Optional&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for example weight
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>