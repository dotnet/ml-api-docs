<Type Name="LambdaTransform+LoadDelegate" FullName="Microsoft.ML.Runtime.Api.LambdaTransform+LoadDelegate">
  <TypeSignature Language="C#" Value="public delegate Microsoft.ML.Runtime.Data.ITransformTemplate LambdaTransform.LoadDelegate(BinaryReader reader, IHostEnvironment env, IDataView input);" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed LambdaTransform/LoadDelegate extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Api.LambdaTransform.LoadDelegate" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function LambdaTransform.LoadDelegate(reader As BinaryReader, env As IHostEnvironment, input As IDataView) As ITransformTemplate " />
  <TypeSignature Language="F#" Value="type LambdaTransform.LoadDelegate = delegate of BinaryReader * IHostEnvironment * IDataView -&gt; ITransformTemplate" />
  <TypeSignature Language="C++ CLI" Value="public: delegate Microsoft::ML::Runtime::Data::ITransformTemplate ^ LambdaTransform::LoadDelegate(BinaryReader ^ reader, IHostEnvironment ^ env, IDataView ^ input);" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Api</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="reader" Type="System.IO.BinaryReader" />
    <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
    <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
  </Parameters>
  <ReturnValue>
    <ReturnType>Microsoft.ML.Runtime.Data.ITransformTemplate</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="reader">The binary stream from which the load is persisted</param>
    <param name="env">The host environment</param>
    <param name="input">The dataview this transform should be persisted on</param>
    <summary>
            A delegate type to create a persistent transform, utilized by the creation functions
            as a callback to reconstitute a transform from binary data.
            </summary>
    <returns>A transform of the input data, as parameterized by the binary input
            stream</returns>
    <remarks>To be added.</remarks>
  </Docs>
</Type>