<Type Name="PredictionEngine&lt;TSrc,TDst&gt;" FullName="Microsoft.ML.Runtime.Api.PredictionEngine&lt;TSrc,TDst&gt;">
  <TypeSignature Language="C#" Value="public sealed class PredictionEngine&lt;TSrc,TDst&gt; where TSrc : class where TDst : class, new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PredictionEngine`2&lt;class TSrc, class .ctor TDst&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Api.PredictionEngine`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PredictionEngine(Of TSrc, TDst)" />
  <TypeSignature Language="F#" Value="type PredictionEngine&lt;'Src, 'Dst (requires 'Src : null and 'Dst : null and 'Dst : (new : unit -&gt; 'Dst))&gt; = class" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TSrc, typename TDst&gt;&#xA; where TSrc : class where TDst : class, gcnew()public ref class PredictionEngine sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Api</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSrc">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TDst">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TSrc">The user-defined type that holds the example.</typeparam>
    <typeparam name="TDst">The user-defined type that holds the prediction.</typeparam>
    <summary>
            A class that runs the previously trained model (and the preceding transform pipeline) on the
            in-memory data, one example at a time.
            This can also be used with trained pipelines that do not end with a predictor: in this case, the
            'prediction' will be just the outcome of all the transformations.
            This is essentially a wrapper for <see cref="T:Microsoft.ML.Runtime.Api.BatchPredictionEngine`2" /> that throws if 
            more than one result is returned per call to <see cref="M:Microsoft.ML.Runtime.Api.PredictionEngine`2.Predict(`0)" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Predict">
      <MemberSignature Language="C#" Value="public TDst Predict (TSrc example);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TDst Predict(!TSrc example) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Api.PredictionEngine`2.Predict(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Predict (example As TSrc) As TDst" />
      <MemberSignature Language="F#" Value="member this.Predict : 'Src -&gt; 'Dst" Usage="predictionEngine.Predict example" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TDst Predict(TSrc example);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; TDst Predict(TSrc example);" />
      <MemberSignature Language="C++ WINRT" Value="TDst Predict(TSrc example);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Api</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TDst</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="example" Type="TSrc" />
      </Parameters>
      <Docs>
        <param name="example">The example to run on.</param>
        <summary>
            Run prediction pipeline on one example.
            </summary>
        <returns>The result of prediction. A new object is created for every call.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>