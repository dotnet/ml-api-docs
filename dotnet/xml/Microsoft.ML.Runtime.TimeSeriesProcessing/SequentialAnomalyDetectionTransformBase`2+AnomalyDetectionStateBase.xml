<Type Name="SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;+AnomalyDetectionStateBase" FullName="Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;+AnomalyDetectionStateBase">
  <TypeSignature Language="C#" Value="public abstract class SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;.AnomalyDetectionStateBase : Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;TInput,Microsoft.ML.Runtime.Data.VBuffer&lt;double&gt;,TState&gt;.StateBase where TState : SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;.AnomalyDetectionStateBasenew()" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi abstract beforefieldinit SequentialAnomalyDetectionTransformBase`2/AnomalyDetectionStateBase&lt;TInput, .ctor (class Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2/AnomalyDetectionStateBase&lt;!TInput, !TState&gt;) TState&gt; extends Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3/StateBase&lt;!TInput, valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;float64&gt;, !TState&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.AnomalyDetectionStateBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SequentialAnomalyDetectionTransformBase(Of TInput, TState).AnomalyDetectionStateBase&#xA;Inherits SequentialTransformerBase(Of TInput, VBuffer(Of Double), TState).StateBase" />
  <TypeSignature Language="F#" Value="type SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.AnomalyDetectionStateBase = class&#xA;    inherit SequentialTransformerBase&lt;'Input, VBuffer&lt;double&gt;, 'State (requires 'State :&gt; SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.StateBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput" />
    <TypeParameter Name="TState">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;+AnomalyDetectionStateBase</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;TInput,Microsoft.ML.Runtime.Data.VBuffer&lt;System.Double&gt;,TState&gt;+StateBase</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TInput">TInput</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TOutput">Microsoft.ML.Runtime.Data.VBuffer&lt;System.Double&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TState">TState</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The base state class for sequential anomaly detection: this class implements the p-values and martinagle calculations for anomaly detection
            given that the raw anomaly score calculation is specified by the derived classes.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AnomalyDetectionStateBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.AnomalyDetectionStateBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeRawAnomalyScore">
      <MemberSignature Language="C#" Value="protected abstract double ComputeRawAnomalyScore (ref TInput input, Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue&lt;TInput&gt; windowedBuffer, long iteration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance float64 ComputeRawAnomalyScore(!TInput&amp; input, class Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue`1&lt;!TInput&gt; windowedBuffer, int64 iteration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.AnomalyDetectionStateBase.ComputeRawAnomalyScore(`0@,Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue{`0},System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ComputeRawAnomalyScore (ByRef input As TInput, windowedBuffer As FixedSizeQueue(Of TInput), iteration As Long) As Double" />
      <MemberSignature Language="F#" Value="abstract member ComputeRawAnomalyScore :  * Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue&lt;'Input&gt; * int64 -&gt; double" Usage="anomalyDetectionStateBase.ComputeRawAnomalyScore (input, windowedBuffer, iteration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="TInput" RefType="ref" />
        <Parameter Name="windowedBuffer" Type="Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue&lt;TInput&gt;" />
        <Parameter Name="iteration" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="input">A reference to the input object.</param>
        <param name="windowedBuffer">A reference to the windowed buffer.</param>
        <param name="iteration">A long number that indicates the number of times ComputeRawAnomalyScore has been called so far (starting value = 0).</param>
        <summary>
            The abstract method that realizes the main logic for calculating the raw anomaly score bfor the current input given a windowed buffer
            </summary>
        <returns>The raw anomaly score for the input. The Assumption is the higher absolute value of the raw score, the more anomalous the input is.
            The sign of the score determines whether it's a positive anomaly or a negative one.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeAnomalyDetector">
      <MemberSignature Language="C#" Value="protected abstract void InitializeAnomalyDetector ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeAnomalyDetector() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.AnomalyDetectionStateBase.InitializeAnomalyDetector" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub InitializeAnomalyDetector ()" />
      <MemberSignature Language="F#" Value="abstract member InitializeAnomalyDetector : unit -&gt; unit" Usage="anomalyDetectionStateBase.InitializeAnomalyDetector " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            The abstract method that realizes the initialization functionality for the anomaly detector.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeStateCore">
      <MemberSignature Language="C#" Value="protected override sealed void InitializeStateCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeStateCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.AnomalyDetectionStateBase.InitializeStateCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub InitializeStateCore ()" />
      <MemberSignature Language="F#" Value="override this.InitializeStateCore : unit -&gt; unit" Usage="anomalyDetectionStateBase.InitializeStateCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LatestMartingaleScore">
      <MemberSignature Language="C#" Value="protected double LatestMartingaleScore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LatestMartingaleScore" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.AnomalyDetectionStateBase.LatestMartingaleScore" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property LatestMartingaleScore As Double" />
      <MemberSignature Language="F#" Value="member this.LatestMartingaleScore : double" Usage="Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.AnomalyDetectionStateBase.LatestMartingaleScore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="protected Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt; Parent;" />
      <MemberSignature Language="ILAsm" Value=".field family class Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2&lt;!TInput, !TState&gt; Parent" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.AnomalyDetectionStateBase.Parent" />
      <MemberSignature Language="VB.NET" Value="Protected Parent As SequentialAnomalyDetectionTransformBase(Of TInput, TState) " />
      <MemberSignature Language="F#" Value="val mutable Parent : Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;" Usage="Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.AnomalyDetectionStateBase.Parent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNaOutput">
      <MemberSignature Language="C#" Value="protected override void SetNaOutput (ref Microsoft.ML.Runtime.Data.VBuffer&lt;double&gt; dst);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetNaOutput(valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;float64&gt;&amp; dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.AnomalyDetectionStateBase.SetNaOutput(Microsoft.ML.Runtime.Data.VBuffer{System.Double}@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetNaOutput (ByRef dst As VBuffer(Of Double))" />
      <MemberSignature Language="F#" Value="override this.SetNaOutput :  -&gt; unit" Usage="anomalyDetectionStateBase.SetNaOutput dst" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="Microsoft.ML.Runtime.Data.VBuffer&lt;System.Double&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="dst">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformCore">
      <MemberSignature Language="C#" Value="protected override sealed void TransformCore (ref TInput input, Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue&lt;TInput&gt; windowedBuffer, long iteration, ref Microsoft.ML.Runtime.Data.VBuffer&lt;double&gt; dst);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TransformCore(!TInput&amp; input, class Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue`1&lt;!TInput&gt; windowedBuffer, int64 iteration, valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;float64&gt;&amp; dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.AnomalyDetectionStateBase.TransformCore(`0@,Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue{`0},System.Int64,Microsoft.ML.Runtime.Data.VBuffer{System.Double}@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub TransformCore (ByRef input As TInput, windowedBuffer As FixedSizeQueue(Of TInput), iteration As Long, ByRef dst As VBuffer(Of Double))" />
      <MemberSignature Language="F#" Value="override this.TransformCore :  * Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue&lt;'Input&gt; * int64 *  -&gt; unit" Usage="anomalyDetectionStateBase.TransformCore (input, windowedBuffer, iteration, dst)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="TInput" RefType="ref" />
        <Parameter Name="windowedBuffer" Type="Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue&lt;TInput&gt;" />
        <Parameter Name="iteration" Type="System.Int64" />
        <Parameter Name="dst" Type="Microsoft.ML.Runtime.Data.VBuffer&lt;System.Double&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="windowedBuffer">To be added.</param>
        <param name="iteration">To be added.</param>
        <param name="dst">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>