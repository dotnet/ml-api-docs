<Type Name="SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;" FullName="Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;">
  <TypeSignature Language="C#" Value="public abstract class SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt; : Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;TInput,Microsoft.ML.Runtime.Data.VBuffer&lt;double&gt;,TState&gt; where TState : SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;.AnomalyDetectionStateBasenew()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SequentialAnomalyDetectionTransformBase`2&lt;TInput, .ctor (class Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2/AnomalyDetectionStateBase&lt;!TInput, !TState&gt;) TState&gt; extends Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3&lt;!TInput, valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;float64&gt;, !TState&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SequentialAnomalyDetectionTransformBase(Of TInput, TState)&#xA;Inherits SequentialTransformerBase(Of TInput, VBuffer(Of Double), TState)" />
  <TypeSignature Language="F#" Value="type SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt; = class&#xA;    inherit SequentialTransformerBase&lt;'Input, VBuffer&lt;double&gt;, 'State (requires 'State :&gt; SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput" />
    <TypeParameter Name="TState">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;+AnomalyDetectionStateBase</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;TInput,Microsoft.ML.Runtime.Data.VBuffer&lt;System.Double&gt;,TState&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TInput">TInput</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TOutput">Microsoft.ML.Runtime.Data.VBuffer&lt;System.Double&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TState">TState</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TInput">The type of the input sequence</typeparam>
    <typeparam name="TState">The type of the state object for sequential anomaly detection. Must be a class inherited from AnomalyDetectionStateBase</typeparam>
    <summary>
            The base class for sequential anomaly detection transforms that supports the p-value as well as the martingales scores computation from the sequence of
            raw anomaly scores whose calculation is specified by the children classes. This class also provides mechanism for the threshold-based alerting on
            the raw anomaly score, the p-value score or the martingale score. Currently, this class supports Power and Mixture martingales.
            For more details, please refer to http://arxiv.org/pdf/1204.3251.pdf
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AlertThreshold">
      <MemberSignature Language="C#" Value="protected double AlertThreshold;" />
      <MemberSignature Language="ILAsm" Value=".field family float64 AlertThreshold" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.AlertThreshold" />
      <MemberSignature Language="VB.NET" Value="Protected AlertThreshold As Double " />
      <MemberSignature Language="F#" Value="val mutable AlertThreshold : double" Usage="Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.AlertThreshold" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMixtureMartigaleBettingFunc">
      <MemberSignature Language="C#" Value="protected double LogMixtureMartigaleBettingFunc (double p);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance float64 LogMixtureMartigaleBettingFunc(float64 p) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.LogMixtureMartigaleBettingFunc(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Function LogMixtureMartigaleBettingFunc (p As Double) As Double" />
      <MemberSignature Language="F#" Value="member this.LogMixtureMartigaleBettingFunc : double -&gt; double" Usage="sequentialAnomalyDetectionTransformBase.LogMixtureMartigaleBettingFunc p" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="p">The p-value</param>
        <summary>
            Calculates the betting function for the Mixture martingale in the log scale.
            For more details, please refer to http://arxiv.org/pdf/1204.3251.pdf.
            </summary>
        <returns>The Mixure (marginalized over epsilon) martingale betting function value in the natural logarithmic scale.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogPowerMartigaleBettingFunc">
      <MemberSignature Language="C#" Value="protected double LogPowerMartigaleBettingFunc (double p, double epsilon);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance float64 LogPowerMartigaleBettingFunc(float64 p, float64 epsilon) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.LogPowerMartigaleBettingFunc(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Function LogPowerMartigaleBettingFunc (p As Double, epsilon As Double) As Double" />
      <MemberSignature Language="F#" Value="member this.LogPowerMartigaleBettingFunc : double * double -&gt; double" Usage="sequentialAnomalyDetectionTransformBase.LogPowerMartigaleBettingFunc (p, epsilon)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="System.Double" />
        <Parameter Name="epsilon" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="p">The p-value</param>
        <param name="epsilon">The epsilon</param>
        <summary>
            Calculates the betting function for the Power martingale in the log scale.
            For more details, please refer to http://arxiv.org/pdf/1204.3251.pdf.
            </summary>
        <returns>The Power martingale betting function value in the natural logarithmic scale.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Martingale">
      <MemberSignature Language="C#" Value="protected Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;.MartingaleType Martingale;" />
      <MemberSignature Language="ILAsm" Value=".field family valuetype Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2/MartingaleType&lt;!TInput, !TState&gt; Martingale" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.Martingale" />
      <MemberSignature Language="VB.NET" Value="Protected Martingale As SequentialAnomalyDetectionTransformBase(Of TInput, TState).MartingaleType " />
      <MemberSignature Language="F#" Value="val mutable Martingale : Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.MartingaleType" Usage="Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.Martingale" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;+MartingaleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PowerMartingaleEpsilon">
      <MemberSignature Language="C#" Value="protected double PowerMartingaleEpsilon;" />
      <MemberSignature Language="ILAsm" Value=".field family float64 PowerMartingaleEpsilon" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.PowerMartingaleEpsilon" />
      <MemberSignature Language="VB.NET" Value="Protected PowerMartingaleEpsilon As Double " />
      <MemberSignature Language="F#" Value="val mutable PowerMartingaleEpsilon : double" Usage="Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.PowerMartingaleEpsilon" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save (Microsoft.ML.Runtime.Model.ModelSaveContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save(class Microsoft.ML.Runtime.Model.ModelSaveContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.Save(Microsoft.ML.Runtime.Model.ModelSaveContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save (ctx As ModelSaveContext)" />
      <MemberSignature Language="F#" Value="override this.Save : Microsoft.ML.Runtime.Model.ModelSaveContext -&gt; unit" Usage="sequentialAnomalyDetectionTransformBase.Save ctx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.ModelSaveContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Side">
      <MemberSignature Language="C#" Value="protected Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;.AnomalySide Side;" />
      <MemberSignature Language="ILAsm" Value=".field family valuetype Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2/AnomalySide&lt;!TInput, !TState&gt; Side" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.Side" />
      <MemberSignature Language="VB.NET" Value="Protected Side As SequentialAnomalyDetectionTransformBase(Of TInput, TState).AnomalySide " />
      <MemberSignature Language="F#" Value="val mutable Side : Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.AnomalySide" Usage="Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.Side" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;+AnomalySide</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdScore">
      <MemberSignature Language="C#" Value="protected Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;.AlertingScore ThresholdScore;" />
      <MemberSignature Language="ILAsm" Value=".field family valuetype Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2/AlertingScore&lt;!TInput, !TState&gt; ThresholdScore" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.ThresholdScore" />
      <MemberSignature Language="VB.NET" Value="Protected ThresholdScore As SequentialAnomalyDetectionTransformBase(Of TInput, TState).AlertingScore " />
      <MemberSignature Language="F#" Value="val mutable ThresholdScore : Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.AlertingScore" Usage="Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.ThresholdScore" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;+AlertingScore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
