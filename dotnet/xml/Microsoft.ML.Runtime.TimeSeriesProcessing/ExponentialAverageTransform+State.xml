<Type Name="ExponentialAverageTransform+State" FullName="Microsoft.ML.Runtime.TimeSeriesProcessing.ExponentialAverageTransform+State">
  <TypeSignature Language="C#" Value="public sealed class ExponentialAverageTransform.State : Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformBase&lt;float,float,Microsoft.ML.Runtime.TimeSeriesProcessing.ExponentialAverageTransform.State&gt;.StateBase" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit ExponentialAverageTransform/State extends Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformBase`3/StateBase&lt;float32, float32, class Microsoft.ML.Runtime.TimeSeriesProcessing.ExponentialAverageTransform/State&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.TimeSeriesProcessing.ExponentialAverageTransform.State" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExponentialAverageTransform.State&#xA;Inherits SequentialTransformBase(Of Single, Single, ExponentialAverageTransform.State).StateBase" />
  <TypeSignature Language="F#" Value="type ExponentialAverageTransform.State = class&#xA;    inherit SequentialTransformBase&lt;single, single, ExponentialAverageTransform.State&gt;.StateBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformBase&lt;System.Single,System.Single,Microsoft.ML.Runtime.TimeSeriesProcessing.ExponentialAverageTransform+State&gt;+StateBase</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TInput">System.Single</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TOutput">System.Single</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TState">Microsoft.ML.Runtime.TimeSeriesProcessing.ExponentialAverageTransform+State</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public State ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.ExponentialAverageTransform.State.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeStateCore">
      <MemberSignature Language="C#" Value="protected override void InitializeStateCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeStateCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.ExponentialAverageTransform.State.InitializeStateCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeStateCore ()" />
      <MemberSignature Language="F#" Value="override this.InitializeStateCore : unit -&gt; unit" Usage="state.InitializeStateCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LearnStateFromDataCore">
      <MemberSignature Language="C#" Value="protected override void LearnStateFromDataCore (Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue&lt;float&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LearnStateFromDataCore(class Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue`1&lt;float32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.ExponentialAverageTransform.State.LearnStateFromDataCore(Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LearnStateFromDataCore (data As FixedSizeQueue(Of Single))" />
      <MemberSignature Language="F#" Value="override this.LearnStateFromDataCore : Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue&lt;single&gt; -&gt; unit" Usage="state.LearnStateFromDataCore data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNaOutput">
      <MemberSignature Language="C#" Value="protected override void SetNaOutput (ref float output);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetNaOutput(float32&amp; output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.ExponentialAverageTransform.State.SetNaOutput(System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetNaOutput (ByRef output As Single)" />
      <MemberSignature Language="F#" Value="override this.SetNaOutput :  -&gt; unit" Usage="state.SetNaOutput output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Single" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformCore">
      <MemberSignature Language="C#" Value="protected override void TransformCore (ref float input, Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue&lt;float&gt; windowedBuffer, long iteration, ref float output);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TransformCore(float32&amp; input, class Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue`1&lt;float32&gt; windowedBuffer, int64 iteration, float32&amp; output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.ExponentialAverageTransform.State.TransformCore(System.Single@,Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue{System.Single},System.Int64,System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TransformCore (ByRef input As Single, windowedBuffer As FixedSizeQueue(Of Single), iteration As Long, ByRef output As Single)" />
      <MemberSignature Language="F#" Value="override this.TransformCore :  * Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue&lt;single&gt; * int64 *  -&gt; unit" Usage="state.TransformCore (input, windowedBuffer, iteration, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Single" RefType="ref" />
        <Parameter Name="windowedBuffer" Type="Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue&lt;System.Single&gt;" />
        <Parameter Name="iteration" Type="System.Int64" />
        <Parameter Name="output" Type="System.Single" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="windowedBuffer">To be added.</param>
        <param name="iteration">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>