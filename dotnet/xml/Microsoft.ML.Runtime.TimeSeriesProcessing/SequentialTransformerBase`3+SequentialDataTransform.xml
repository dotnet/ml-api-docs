<Type Name="SequentialTransformerBase&lt;TInput,TOutput,TState&gt;+SequentialDataTransform" FullName="Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;TInput,TOutput,TState&gt;+SequentialDataTransform">
  <TypeSignature Language="C#" Value="public sealed class SequentialTransformerBase&lt;TInput,TOutput,TState&gt;.SequentialDataTransform : Microsoft.ML.Runtime.Data.TransformBase, Microsoft.ML.Runtime.Data.IDataView, Microsoft.ML.Runtime.Data.ITransformTemplate where TState : SequentialTransformerBase&lt;TInput,TOutput,TState&gt;.StateBasenew()" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit SequentialTransformerBase`3/SequentialDataTransform&lt;TInput, TOutput, .ctor (class Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3/StateBase&lt;!TInput, !TOutput, !TState&gt;) TState&gt; extends Microsoft.ML.Runtime.Data.TransformBase implements class Microsoft.ML.Runtime.Data.IDataTransform, class Microsoft.ML.Runtime.Data.IDataView, class Microsoft.ML.Runtime.Data.ISchematized, class Microsoft.ML.Runtime.Data.ITransformTemplate, class Microsoft.ML.Runtime.Model.ICanSaveModel" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3.SequentialDataTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SequentialTransformerBase(Of TInput, TOutput, TState).SequentialDataTransform&#xA;Inherits TransformBase&#xA;Implements IDataView, ITransformTemplate" />
  <TypeSignature Language="F#" Value="type SequentialTransformerBase&lt;'Input, 'Output, 'State (requires 'State :&gt; SequentialTransformerBase&lt;'Input, 'Output, 'State&gt;.StateBase and 'State : (new : unit -&gt; 'State))&gt;.SequentialDataTransform = class&#xA;    inherit TransformBase&#xA;    interface ITransformTemplate&#xA;    interface IDataTransform&#xA;    interface IDataView&#xA;    interface ISchematized&#xA;    interface ICanSaveModel" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput" />
    <TypeParameter Name="TOutput" />
    <TypeParameter Name="TState">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;TInput,TOutput,TState&gt;+StateBase</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.Data.TransformBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Data.IDataTransform</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Data.IDataView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Data.ISchematized</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Data.ITransformTemplate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Model.ICanSaveModel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SequentialDataTransform (Microsoft.ML.Runtime.IHost host, Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;TInput,TOutput,TState&gt; parent, Microsoft.ML.Runtime.Data.IDataView input, Microsoft.ML.Runtime.Data.IRowMapper mapper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHost host, class Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3&lt;!TInput, !TOutput, !TState&gt; parent, class Microsoft.ML.Runtime.Data.IDataView input, class Microsoft.ML.Runtime.Data.IRowMapper mapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3.SequentialDataTransform.#ctor(Microsoft.ML.Runtime.IHost,Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase{`0,`1,`2},Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.Data.IRowMapper)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As IHost, parent As SequentialTransformerBase(Of TInput, TOutput, TState), input As IDataView, mapper As IRowMapper)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;'Input, 'Output, 'State (requires 'State :&gt; Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;'Input, 'Output, 'State&gt;.StateBase and 'State : (new : unit -&gt; 'State))&gt;.SequentialDataTransform : Microsoft.ML.Runtime.IHost * Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;'Input, 'Output, 'State (requires 'State :&gt; Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;'Input, 'Output, 'State&gt;.StateBase and 'State : (new : unit -&gt; 'State))&gt; * Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.Data.IRowMapper -&gt; Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;'Input, 'Output, 'State (requires 'State :&gt; Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;'Input, 'Output, 'State&gt;.StateBase and 'State : (new : unit -&gt; 'State))&gt;.SequentialDataTransform" Usage="new Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;'Input, 'Output, 'State (requires 'State :&gt; Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;'Input, 'Output, 'State&gt;.StateBase and 'State : (new : unit -&gt; 'State))&gt;.SequentialDataTransform (host, parent, input, mapper)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="Microsoft.ML.Runtime.IHost" />
        <Parameter Name="parent" Type="Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;TInput,TOutput,TState&gt;" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="mapper" Type="Microsoft.ML.Runtime.Data.IRowMapper" />
      </Parameters>
      <Docs>
        <param name="host">To be added.</param>
        <param name="parent">To be added.</param>
        <param name="input">To be added.</param>
        <param name="mapper">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyToData">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.IDataTransform ApplyToData (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.IDataView newSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.Data.IDataTransform ApplyToData(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.IDataView newSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3.SequentialDataTransform.ApplyToData(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyToData (env As IHostEnvironment, newSource As IDataView) As IDataTransform" />
      <MemberSignature Language="F#" Value="abstract member ApplyToData : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.Data.IDataTransform&#xA;override this.ApplyToData : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.Data.IDataTransform" Usage="sequentialDataTransform.ApplyToData (env, newSource)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.Data.ITransformTemplate.ApplyToData(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.IDataView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="newSource" Type="Microsoft.ML.Runtime.Data.IDataView" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="newSource">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanShuffle">
      <MemberSignature Language="C#" Value="public override bool CanShuffle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanShuffle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3.SequentialDataTransform.CanShuffle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanShuffle As Boolean" />
      <MemberSignature Language="F#" Value="member this.CanShuffle : bool" Usage="Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;'Input, 'Output, 'State (requires 'State :&gt; Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;'Input, 'Output, 'State&gt;.StateBase and 'State : (new : unit -&gt; 'State))&gt;.SequentialDataTransform.CanShuffle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.Data.IDataView.CanShuffle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowCount">
      <MemberSignature Language="C#" Value="public override Nullable&lt;long&gt; GetRowCount (bool lazy = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Nullable`1&lt;int64&gt; GetRowCount(bool lazy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3.SequentialDataTransform.GetRowCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRowCount (Optional lazy As Boolean = true) As Nullable(Of Long)" />
      <MemberSignature Language="F#" Value="override this.GetRowCount : bool -&gt; Nullable&lt;int64&gt;" Usage="sequentialDataTransform.GetRowCount lazy" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.Data.IDataView.GetRowCount(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lazy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="lazy">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowCursorCore">
      <MemberSignature Language="C#" Value="protected override Microsoft.ML.Runtime.Data.IRowCursor GetRowCursorCore (Func&lt;int,bool&gt; predicate, Microsoft.ML.Runtime.IRandom rand = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.ML.Runtime.Data.IRowCursor GetRowCursorCore(class System.Func`2&lt;int32, bool&gt; predicate, class Microsoft.ML.Runtime.IRandom rand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3.SequentialDataTransform.GetRowCursorCore(System.Func{System.Int32,System.Boolean},Microsoft.ML.Runtime.IRandom)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetRowCursorCore (predicate As Func(Of Integer, Boolean), Optional rand As IRandom = null) As IRowCursor" />
      <MemberSignature Language="F#" Value="override this.GetRowCursorCore : Func&lt;int, bool&gt; * Microsoft.ML.Runtime.IRandom -&gt; Microsoft.ML.Runtime.Data.IRowCursor" Usage="sequentialDataTransform.GetRowCursorCore (predicate, rand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IRowCursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Func&lt;System.Int32,System.Boolean&gt;" />
        <Parameter Name="rand" Type="Microsoft.ML.Runtime.IRandom" />
      </Parameters>
      <Docs>
        <param name="predicate">To be added.</param>
        <param name="rand">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowCursorSet">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.Runtime.Data.IRowCursor[] GetRowCursorSet (out Microsoft.ML.Runtime.Data.IRowCursorConsolidator consolidator, Func&lt;int,bool&gt; predicate, int n, Microsoft.ML.Runtime.IRandom rand = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.ML.Runtime.Data.IRowCursor[] GetRowCursorSet([out] class Microsoft.ML.Runtime.Data.IRowCursorConsolidator&amp; consolidator, class System.Func`2&lt;int32, bool&gt; predicate, int32 n, class Microsoft.ML.Runtime.IRandom rand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3.SequentialDataTransform.GetRowCursorSet(Microsoft.ML.Runtime.Data.IRowCursorConsolidator@,System.Func{System.Int32,System.Boolean},System.Int32,Microsoft.ML.Runtime.IRandom)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRowCursorSet (ByRef consolidator As IRowCursorConsolidator, predicate As Func(Of Integer, Boolean), n As Integer, Optional rand As IRandom = null) As IRowCursor()" />
      <MemberSignature Language="F#" Value="override this.GetRowCursorSet :  * Func&lt;int, bool&gt; * int * Microsoft.ML.Runtime.IRandom -&gt; Microsoft.ML.Runtime.Data.IRowCursor[]" Usage="sequentialDataTransform.GetRowCursorSet (consolidator, predicate, n, rand)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.Data.IDataView.GetRowCursorSet(Microsoft.ML.Runtime.Data.IRowCursorConsolidator@,System.Func{System.Int32,System.Boolean},System.Int32,Microsoft.ML.Runtime.IRandom)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IRowCursor[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="consolidator" Type="Microsoft.ML.Runtime.Data.IRowCursorConsolidator" RefType="out" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Int32,System.Boolean&gt;" />
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="rand" Type="Microsoft.ML.Runtime.IRandom" />
      </Parameters>
      <Docs>
        <param name="consolidator">To be added.</param>
        <param name="predicate">To be added.</param>
        <param name="n">To be added.</param>
        <param name="rand">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save (Microsoft.ML.Runtime.Model.ModelSaveContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save(class Microsoft.ML.Runtime.Model.ModelSaveContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3.SequentialDataTransform.Save(Microsoft.ML.Runtime.Model.ModelSaveContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save (ctx As ModelSaveContext)" />
      <MemberSignature Language="F#" Value="override this.Save : Microsoft.ML.Runtime.Model.ModelSaveContext -&gt; unit" Usage="sequentialDataTransform.Save ctx" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.Model.ICanSaveModel.Save(Microsoft.ML.Runtime.Model.ModelSaveContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.ModelSaveContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.Runtime.Data.Schema Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.Data.Schema Schema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3.SequentialDataTransform.Schema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Schema As Schema" />
      <MemberSignature Language="F#" Value="member this.Schema : Microsoft.ML.Runtime.Data.Schema" Usage="Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;'Input, 'Output, 'State (requires 'State :&gt; Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;'Input, 'Output, 'State&gt;.StateBase and 'State : (new : unit -&gt; 'State))&gt;.SequentialDataTransform.Schema" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.Data.ISchematized.Schema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.Schema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldUseParallelCursors">
      <MemberSignature Language="C#" Value="protected override Nullable&lt;bool&gt; ShouldUseParallelCursors (Func&lt;int,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Nullable`1&lt;bool&gt; ShouldUseParallelCursors(class System.Func`2&lt;int32, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3.SequentialDataTransform.ShouldUseParallelCursors(System.Func{System.Int32,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ShouldUseParallelCursors (predicate As Func(Of Integer, Boolean)) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="override this.ShouldUseParallelCursors : Func&lt;int, bool&gt; -&gt; Nullable&lt;bool&gt;" Usage="sequentialDataTransform.ShouldUseParallelCursors predicate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Func&lt;System.Int32,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="predicate">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>