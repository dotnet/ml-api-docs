<Type Name="ISequenceModeler&lt;TInput,TOutput&gt;" FullName="Microsoft.ML.Runtime.TimeSeriesProcessing.ISequenceModeler&lt;TInput,TOutput&gt;">
  <TypeSignature Language="C#" Value="public interface ISequenceModeler&lt;TInput,TOutput&gt; : Microsoft.ML.Runtime.Model.ICanSaveModel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISequenceModeler`2&lt;TInput, TOutput&gt; implements class Microsoft.ML.Runtime.Model.ICanSaveModel" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.TimeSeriesProcessing.ISequenceModeler`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISequenceModeler(Of TInput, TOutput)&#xA;Implements ICanSaveModel" />
  <TypeSignature Language="F#" Value="type ISequenceModeler&lt;'Input, 'Output&gt; = interface&#xA;    interface ICanSaveModel" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput" />
    <TypeParameter Name="TOutput" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Model.ICanSaveModel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TInput">The type of the elements in the input sequence</typeparam>
    <typeparam name="TOutput">The type of the elements in the output sequence</typeparam>
    <summary>
            The standard interface for modeling a sequence.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.TimeSeriesProcessing.ISequenceModeler&lt;TInput,TOutput&gt; Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.TimeSeriesProcessing.ISequenceModeler`2&lt;!TInput, !TOutput&gt; Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.ISequenceModeler`2.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ISequenceModeler(Of TInput, TOutput)" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; Microsoft.ML.Runtime.TimeSeriesProcessing.ISequenceModeler&lt;'Input, 'Output&gt;" Usage="iSequenceModeler.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.TimeSeriesProcessing.ISequenceModeler&lt;TInput,TOutput&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a clone of the model.
            </summary>
        <returns>A clone of the object</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Consume">
      <MemberSignature Language="C#" Value="public void Consume (ref TInput input, bool updateModel = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Consume(!TInput&amp; input, bool updateModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.ISequenceModeler`2.Consume(`0@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Consume (ByRef input As TInput, Optional updateModel As Boolean = false)" />
      <MemberSignature Language="F#" Value="abstract member Consume :  * bool -&gt; unit" Usage="iSequenceModeler.Consume (input, updateModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="TInput" RefType="ref" />
        <Parameter Name="updateModel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="input">An element in the sequence</param>
        <param name="updateModel">determines whether the sequence model should be updated according to the input</param>
        <summary>
            Consumes one element from the input sequence.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Forecast">
      <MemberSignature Language="C#" Value="public void Forecast (ref Microsoft.ML.Runtime.TimeSeriesProcessing.ForecastResultBase&lt;TOutput&gt; result, int horizon = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Forecast(class Microsoft.ML.Runtime.TimeSeriesProcessing.ForecastResultBase`1&lt;!TOutput&gt;&amp; result, int32 horizon) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.ISequenceModeler`2.Forecast(Microsoft.ML.Runtime.TimeSeriesProcessing.ForecastResultBase{`1}@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Forecast (ByRef result As ForecastResultBase(Of TOutput), Optional horizon As Integer = 1)" />
      <MemberSignature Language="F#" Value="abstract member Forecast :  * int -&gt; unit" Usage="iSequenceModeler.Forecast (result, horizon)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="Microsoft.ML.Runtime.TimeSeriesProcessing.ForecastResultBase&lt;TOutput&gt;" RefType="ref" />
        <Parameter Name="horizon" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="result">The forecast result for the given horizon along with optional information depending on the algorithm</param>
        <param name="horizon">The forecast horizon</param>
        <summary>
            Forecasts the next 'horizon' elements in the output sequence.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitState">
      <MemberSignature Language="C#" Value="public void InitState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.ISequenceModeler`2.InitState" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitState ()" />
      <MemberSignature Language="F#" Value="abstract member InitState : unit -&gt; unit" Usage="iSequenceModeler.InitState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Initializes the state of the modeler
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictNext">
      <MemberSignature Language="C#" Value="public void PredictNext (ref TOutput output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PredictNext(!TOutput&amp; output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.ISequenceModeler`2.PredictNext(`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PredictNext (ByRef output As TOutput)" />
      <MemberSignature Language="F#" Value="abstract member PredictNext :  -&gt; unit" Usage="iSequenceModeler.PredictNext output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="TOutput" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="output">The output ref parameter the will contain the prediction result</param>
        <summary>
            Predicts the next element in the output sequence.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Train">
      <MemberSignature Language="C#" Value="public void Train (Microsoft.ML.Runtime.Data.RoleMappedData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Train(class Microsoft.ML.Runtime.Data.RoleMappedData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.ISequenceModeler`2.Train(Microsoft.ML.Runtime.Data.RoleMappedData)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Train (data As RoleMappedData)" />
      <MemberSignature Language="F#" Value="abstract member Train : Microsoft.ML.Runtime.Data.RoleMappedData -&gt; unit" Usage="iSequenceModeler.Train data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
      </Parameters>
      <Docs>
        <param name="data">The input sequence used for training</param>
        <summary>
            Trains the sequence model on a given sequence. The method accepts an object of RoleMappedData,
            and assumes the input column is the 'Feature' column of type TInput.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Train">
      <MemberSignature Language="C#" Value="public void Train (Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue&lt;TInput&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Train(class Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue`1&lt;!TInput&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.ISequenceModeler`2.Train(Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Train (data As FixedSizeQueue(Of TInput))" />
      <MemberSignature Language="F#" Value="abstract member Train : Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue&lt;'Input&gt; -&gt; unit" Usage="iSequenceModeler.Train data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Internal.Utilities.FixedSizeQueue&lt;TInput&gt;" />
      </Parameters>
      <Docs>
        <param name="data">The input sequence used for training</param>
        <summary>
            Trains the sequence model on a given sequence.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
