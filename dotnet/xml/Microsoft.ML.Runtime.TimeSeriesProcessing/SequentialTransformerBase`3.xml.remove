<Type Name="SequentialTransformerBase&lt;TInput,TOutput,TState&gt;" FullName="Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;TInput,TOutput,TState&gt;">
  <TypeSignature Language="C#" Value="public abstract class SequentialTransformerBase&lt;TInput,TOutput,TState&gt; : Microsoft.ML.Core.Data.ITransformer, Microsoft.ML.Runtime.Model.ICanSaveModel where TState : SequentialTransformerBase&lt;TInput,TOutput,TState&gt;.StateBasenew()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SequentialTransformerBase`3&lt;TInput, TOutput, .ctor (class Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3/StateBase&lt;!TInput, !TOutput, !TState&gt;) TState&gt; extends System.Object implements class Microsoft.ML.Core.Data.ITransformer, class Microsoft.ML.Runtime.Model.ICanSaveModel" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SequentialTransformerBase(Of TInput, TOutput, TState)&#xA;Implements ICanSaveModel, ITransformer" />
  <TypeSignature Language="F#" Value="type SequentialTransformerBase&lt;'Input, 'Output, 'State (requires 'State :&gt; SequentialTransformerBase&lt;'Input, 'Output, 'State&gt;.StateBase and 'State : (new : unit -&gt; 'State))&gt; = class&#xA;    interface ITransformer&#xA;    interface ICanSaveModel" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput" />
    <TypeParameter Name="TOutput" />
    <TypeParameter Name="TState">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;TInput,TOutput,TState&gt;+StateBase</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Core.Data.ITransformer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Model.ICanSaveModel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TInput">The input type of the sequential processing.</typeparam>
    <typeparam name="TOutput">The dst type of the sequential processing.</typeparam>
    <typeparam name="TState">The state type of the sequential processing. Must be a class inherited from StateBase </typeparam>
    <summary>
            The base class for sequential processing transforms. This class implements the basic sliding window buffering. The derived classes need to specify the transform logic,
            the initialization logic and the learning logic via implementing the abstract methods TransformCore(), InitializeStateCore() and LearnStateFromDataCore(), respectively
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public abstract Microsoft.ML.Data.Schema GetOutputSchema (Microsoft.ML.Data.Schema inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Data.Schema GetOutputSchema(class Microsoft.ML.Data.Schema inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3.GetOutputSchema(Microsoft.ML.Data.Schema)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetOutputSchema (inputSchema As Schema) As Schema" />
      <MemberSignature Language="F#" Value="abstract member GetOutputSchema : Microsoft.ML.Data.Schema -&gt; Microsoft.ML.Data.Schema" Usage="sequentialTransformerBase.GetOutputSchema inputSchema" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.ITransformer.GetOutputSchema(Microsoft.ML.Data.Schema)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.Schema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Data.Schema" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowToRowMapper">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.IRowToRowMapper GetRowToRowMapper (Microsoft.ML.Data.Schema inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.Data.IRowToRowMapper GetRowToRowMapper(class Microsoft.ML.Data.Schema inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3.GetRowToRowMapper(Microsoft.ML.Data.Schema)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowToRowMapper (inputSchema As Schema) As IRowToRowMapper" />
      <MemberSignature Language="F#" Value="abstract member GetRowToRowMapper : Microsoft.ML.Data.Schema -&gt; Microsoft.ML.Runtime.Data.IRowToRowMapper&#xA;override this.GetRowToRowMapper : Microsoft.ML.Data.Schema -&gt; Microsoft.ML.Runtime.Data.IRowToRowMapper" Usage="sequentialTransformerBase.GetRowToRowMapper inputSchema" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.ITransformer.GetRowToRowMapper(Microsoft.ML.Data.Schema)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IRowToRowMapper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Data.Schema" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRowToRowMapper">
      <MemberSignature Language="C#" Value="public bool IsRowToRowMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRowToRowMapper" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3.IsRowToRowMapper" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRowToRowMapper As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsRowToRowMapper : bool" Usage="Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;'Input, 'Output, 'State (requires 'State :&gt; Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;'Input, 'Output, 'State&gt;.StateBase and 'State : (new : unit -&gt; 'State))&gt;.IsRowToRowMapper" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Core.Data.ITransformer.IsRowToRowMapper</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (Microsoft.ML.Runtime.Model.ModelSaveContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class Microsoft.ML.Runtime.Model.ModelSaveContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3.Save(Microsoft.ML.Runtime.Model.ModelSaveContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (ctx As ModelSaveContext)" />
      <MemberSignature Language="F#" Value="abstract member Save : Microsoft.ML.Runtime.Model.ModelSaveContext -&gt; unit&#xA;override this.Save : Microsoft.ML.Runtime.Model.ModelSaveContext -&gt; unit" Usage="sequentialTransformerBase.Save ctx" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.Model.ICanSaveModel.Save(Microsoft.ML.Runtime.Model.ModelSaveContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.ModelSaveContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateRef">
      <MemberSignature Language="C#" Value="public TState StateRef { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TState StateRef" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3.StateRef" />
      <MemberSignature Language="VB.NET" Value="Public Property StateRef As TState" />
      <MemberSignature Language="F#" Value="member this.StateRef : 'State with get, set" Usage="Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;'Input, 'Output, 'State (requires 'State :&gt; Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;'Input, 'Output, 'State&gt;.StateBase and 'State : (new : unit -&gt; 'State))&gt;.StateRef" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateRefCount">
      <MemberSignature Language="C#" Value="public int StateRefCount;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 StateRefCount" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3.StateRefCount" />
      <MemberSignature Language="VB.NET" Value="Public StateRefCount As Integer " />
      <MemberSignature Language="F#" Value="val mutable StateRefCount : int" Usage="Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;'Input, 'Output, 'State (requires 'State :&gt; Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase&lt;'Input, 'Output, 'State&gt;.StateBase and 'State : (new : unit -&gt; 'State))&gt;.StateRefCount" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.IDataView Transform (Microsoft.ML.Runtime.Data.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.Data.IDataView Transform(class Microsoft.ML.Runtime.Data.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TimeSeriesProcessing.SequentialTransformerBase`3.Transform(Microsoft.ML.Runtime.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IDataView) As IDataView" />
      <MemberSignature Language="F#" Value="abstract member Transform : Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.Data.IDataView&#xA;override this.Transform : Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.Data.IDataView" Usage="sequentialTransformerBase.Transform input" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.ITransformer.Transform(Microsoft.ML.Runtime.Data.IDataView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
