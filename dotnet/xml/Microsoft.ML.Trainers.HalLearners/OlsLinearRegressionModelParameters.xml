<Type Name="OlsLinearRegressionModelParameters" FullName="Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters">
  <TypeSignature Language="C#" Value="public sealed class OlsLinearRegressionModelParameters : Microsoft.ML.Learners.RegressionModelParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OlsLinearRegressionModelParameters extends Microsoft.ML.Learners.RegressionModelParameters" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OlsLinearRegressionModelParameters&#xA;Inherits RegressionModelParameters" />
  <TypeSignature Language="F#" Value="type OlsLinearRegressionModelParameters = class&#xA;    inherit RegressionModelParameters" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.HalLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Learners.RegressionModelParameters</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A linear predictor for which per parameter significance statistics are available.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OlsLinearRegressionModelParameters (Microsoft.ML.IHostEnvironment env, ref Microsoft.ML.Data.VBuffer&lt;float&gt; weights, float bias, double[] standardErrors = null, double[] tValues = null, double[] pValues = null, double rSquared = 1, double rSquaredAdjusted = NaN);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, [in]valuetype Microsoft.ML.Data.VBuffer`1&lt;float32&gt;&amp; weights, float32 bias, float64[] standardErrors, float64[] tValues, float64[] pValues, float64 rSquared, float64 rSquaredAdjusted) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters.#ctor(Microsoft.ML.IHostEnvironment,Microsoft.ML.Data.VBuffer{System.Single}@,System.Single,System.Double[],System.Double[],System.Double[],System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, ByRef weights As VBuffer(Of Single), bias As Single, Optional standardErrors As Double() = null, Optional tValues As Double() = null, Optional pValues As Double() = null, Optional rSquared As Double = 1, Optional rSquaredAdjusted As Double = NaN)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters : Microsoft.ML.IHostEnvironment *  * single * double[] * double[] * double[] * double * double -&gt; Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters" Usage="new Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters (env, weights, bias, standardErrors, tValues, pValues, rSquared, rSquaredAdjusted)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.HalLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="weights" Type="Microsoft.ML.Data.VBuffer&lt;System.Single&gt;" RefType="ref" />
        <Parameter Name="bias" Type="System.Single" />
        <Parameter Name="standardErrors" Type="System.Double[]" />
        <Parameter Name="tValues" Type="System.Double[]" />
        <Parameter Name="pValues" Type="System.Double[]" />
        <Parameter Name="rSquared" Type="System.Double" />
        <Parameter Name="rSquaredAdjusted" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="env">The Host environment.</param>
        <param name="weights">The weights for the linear model. The i-th element of weights is the coefficient
            of the i-th feature. Note that this will take ownership of the <see cref="T:Microsoft.ML.Data.VBuffer`1" />.</param>
        <param name="bias">The bias added to every output score.</param>
        <param name="standardErrors">Optional: The statndard errors of the weights and bias.</param>
        <param name="tValues">Optional: The t-statistics for the estimates of the weights and bias.</param>
        <param name="pValues">Optional: The p-values of the weights and bias.</param>
        <param name="rSquared">The coefficient of determination.</param>
        <param name="rSquaredAdjusted">The adjusted coefficient of determination.</param>
        <summary>
            Constructs a new OLS regression model parameters from trained model.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFeatureWeights">
      <MemberSignature Language="C#" Value="public override void GetFeatureWeights (ref Microsoft.ML.Data.VBuffer&lt;float&gt; weights);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetFeatureWeights(valuetype Microsoft.ML.Data.VBuffer`1&lt;float32&gt;&amp; weights) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters.GetFeatureWeights(Microsoft.ML.Data.VBuffer{System.Single}@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetFeatureWeights (ByRef weights As VBuffer(Of Single))" />
      <MemberSignature Language="F#" Value="override this.GetFeatureWeights :  -&gt; unit" Usage="olsLinearRegressionModelParameters.GetFeatureWeights weights" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.HalLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="weights" Type="Microsoft.ML.Data.VBuffer&lt;System.Single&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="weights">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasStatistics">
      <MemberSignature Language="C#" Value="public bool HasStatistics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasStatistics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters.HasStatistics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasStatistics As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasStatistics : bool" Usage="Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters.HasStatistics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.HalLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether the model has per parameter statistics. This is false iff
            <see cref="P:Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters.StandardErrors" />, <see cref="P:Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters.TValues" />, and <see cref="P:Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters.PValues" />
            are all null. A model may not have per parameter statistics because either
            there were not more examples than parameters in the model, or because they
            were explicitly suppressed in training by setting
            <see cref="F:Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionTrainer.Options.PerParameterSignificance" />
            to false.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyCollection&lt;double&gt; PValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;float64&gt; PValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters.PValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PValues As IReadOnlyCollection(Of Double)" />
      <MemberSignature Language="F#" Value="member this.PValues : System.Collections.Generic.IReadOnlyCollection&lt;double&gt;" Usage="Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters.PValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.HalLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            p-values corresponding to each of the model standard errors. This is <c>null</c>
            if and only if <see cref="P:Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters.HasStatistics" /> is <c>false</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RSquared">
      <MemberSignature Language="C#" Value="public double RSquared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RSquared" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters.RSquared" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RSquared As Double" />
      <MemberSignature Language="F#" Value="member this.RSquared : double" Usage="Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters.RSquared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.HalLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The coefficient of determination.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RSquaredAdjusted">
      <MemberSignature Language="C#" Value="public double RSquaredAdjusted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RSquaredAdjusted" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters.RSquaredAdjusted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RSquaredAdjusted As Double" />
      <MemberSignature Language="F#" Value="member this.RSquaredAdjusted : double" Usage="Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters.RSquaredAdjusted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.HalLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The adjusted coefficient of determination. It is only possible to produce
            an adjusted R-squared if there are more examples than parameters in the model
            plus one. If this condition is not met, this value will be <c>NaN</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardErrors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyCollection&lt;double&gt; StandardErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;float64&gt; StandardErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters.StandardErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StandardErrors As IReadOnlyCollection(Of Double)" />
      <MemberSignature Language="F#" Value="member this.StandardErrors : System.Collections.Generic.IReadOnlyCollection&lt;double&gt;" Usage="Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters.StandardErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.HalLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The standard error per model parameter, where the first corresponds to the bias,
            and all subsequent correspond to each weight in turn. This is <c>null</c> if and
            only if <see cref="P:Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters.HasStatistics" /> is <c>false</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyCollection&lt;double&gt; TValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;float64&gt; TValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters.TValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TValues As IReadOnlyCollection(Of Double)" />
      <MemberSignature Language="F#" Value="member this.TValues : System.Collections.Generic.IReadOnlyCollection&lt;double&gt;" Usage="Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters.TValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.HalLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            t-Statistic values corresponding to each of the model standard errors. This is
            <c>null</c> if and only if <see cref="P:Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionModelParameters.HasStatistics" /> is <c>false</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>