<Type Name="SymSgdClassificationTrainer" FullName="Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer">
  <TypeSignature Language="C#" Value="public sealed class SymSgdClassificationTrainer : Microsoft.ML.Trainers.TrainerEstimatorBase&lt;Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;,Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SymSgdClassificationTrainer extends Microsoft.ML.Trainers.TrainerEstimatorBase`2&lt;class Microsoft.ML.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Calibrators.CalibratedModelParametersBase`2&lt;class Microsoft.ML.Trainers.LinearBinaryModelParameters, class Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;, class Microsoft.ML.Calibrators.CalibratedModelParametersBase`2&lt;class Microsoft.ML.Trainers.LinearBinaryModelParameters, class Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SymSgdClassificationTrainer&#xA;Inherits TrainerEstimatorBase(Of BinaryPredictionTransformer(Of CalibratedModelParametersBase(Of LinearBinaryModelParameters, PlattCalibrator)), CalibratedModelParametersBase(Of LinearBinaryModelParameters, PlattCalibrator))" />
  <TypeSignature Language="F#" Value="type SymSgdClassificationTrainer = class&#xA;    inherit TrainerEstimatorBase&lt;BinaryPredictionTransformer&lt;CalibratedModelParametersBase&lt;LinearBinaryModelParameters, PlattCalibrator&gt;&gt;, CalibratedModelParametersBase&lt;LinearBinaryModelParameters, PlattCalibrator&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.HalLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Trainers.TrainerEstimatorBase&lt;Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;,Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!1">Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
        Parallel Stochastic Gradient Descent trainer.
      </summary>
    <remarks>
      <a href="https://en.wikipedia.org/wiki/Stochastic_gradient_descent">Stochastic gradient descent (SGD)</a> is an interative algorithm
        that optimizes a differentiable objective function. <a href="https://arxiv.org/abs/1705.08030">SYMSGD</a> parallelizes SGD using Sound Combiners.
      </remarks>
    <example>
      <code language="csharp">
          new SymSgdBinaryClassifier()
          {
            NumberOfIterations = 50,
            L2Regularization = 0,
            Shuffle = true
          }
        </code>
    </example>
  </Docs>
  <Members>
    <Member MemberName="Fit">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt; Fit (Microsoft.Data.DataView.IDataView trainData, Microsoft.ML.Trainers.LinearModelParameters modelParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Calibrators.CalibratedModelParametersBase`2&lt;class Microsoft.ML.Trainers.LinearBinaryModelParameters, class Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt; Fit(class Microsoft.Data.DataView.IDataView trainData, class Microsoft.ML.Trainers.LinearModelParameters modelParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer.Fit(Microsoft.Data.DataView.IDataView,Microsoft.ML.Trainers.LinearModelParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fit (trainData As IDataView, modelParameters As LinearModelParameters) As BinaryPredictionTransformer(Of CalibratedModelParametersBase(Of LinearBinaryModelParameters, PlattCalibrator))" />
      <MemberSignature Language="F#" Value="override this.Fit : Microsoft.Data.DataView.IDataView * Microsoft.ML.Trainers.LinearModelParameters -&gt; Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters, Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;" Usage="symSgdClassificationTrainer.Fit (trainData, modelParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.HalLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainData" Type="Microsoft.Data.DataView.IDataView" />
        <Parameter Name="modelParameters" Type="Microsoft.ML.Trainers.LinearModelParameters" />
      </Parameters>
      <Docs>
        <param name="trainData">To be added.</param>
        <param name="modelParameters">To be added.</param>
        <summary>
            Continues the training of a <see cref="T:Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer" /> using an already trained <paramref name="modelParameters" />
            a <see cref="T:Microsoft.ML.Data.BinaryPredictionTransformer" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.TrainerInfo Info { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.TrainerInfo Info" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer.Info" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Info As TrainerInfo" />
      <MemberSignature Language="F#" Value="member this.Info : Microsoft.ML.TrainerInfo" Usage="Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer.Info" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.HalLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TrainerInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>