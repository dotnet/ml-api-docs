<Type Name="LogisticRegression+Arguments" FullName="Microsoft.ML.Learners.LogisticRegression+Arguments">
  <TypeSignature Language="C#" Value="public sealed class LogisticRegression.Arguments : Microsoft.ML.Learners.LbfgsTrainerBase&lt;Microsoft.ML.Learners.LogisticRegression.Arguments,Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Internal.Calibration.ParameterMixingCalibratedPredictor&gt;,Microsoft.ML.Internal.Calibration.ParameterMixingCalibratedPredictor&gt;.ArgumentsBase" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit LogisticRegression/Arguments extends Microsoft.ML.Learners.LbfgsTrainerBase`3/ArgumentsBase&lt;class Microsoft.ML.Learners.LogisticRegression/Arguments, class Microsoft.ML.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Internal.Calibration.ParameterMixingCalibratedPredictor&gt;, class Microsoft.ML.Internal.Calibration.ParameterMixingCalibratedPredictor&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Learners.LogisticRegression.Arguments" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LogisticRegression.Arguments&#xA;Inherits LbfgsTrainerBase(Of LogisticRegression.Arguments, BinaryPredictionTransformer(Of ParameterMixingCalibratedPredictor), ParameterMixingCalibratedPredictor).ArgumentsBase" />
  <TypeSignature Language="F#" Value="type LogisticRegression.Arguments = class&#xA;    inherit LbfgsTrainerBase&lt;LogisticRegression.Arguments, BinaryPredictionTransformer&lt;ParameterMixingCalibratedPredictor&gt;, ParameterMixingCalibratedPredictor&gt;.ArgumentsBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Learners.LbfgsTrainerBase&lt;Microsoft.ML.Learners.LogisticRegression+Arguments,Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Internal.Calibration.ParameterMixingCalibratedPredictor&gt;,Microsoft.ML.Internal.Calibration.ParameterMixingCalibratedPredictor&gt;+ArgumentsBase</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TArgs">Microsoft.ML.Learners.LogisticRegression+Arguments</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TTransformer">Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Internal.Calibration.ParameterMixingCalibratedPredictor&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TModel">Microsoft.ML.Internal.Calibration.ParameterMixingCalibratedPredictor</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Arguments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Learners.LogisticRegression.Arguments.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTrainingStats">
      <MemberSignature Language="C#" Value="public bool ShowTrainingStats;" />
      <MemberSignature Language="ILAsm" Value=".field public bool ShowTrainingStats" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Learners.LogisticRegression.Arguments.ShowTrainingStats" />
      <MemberSignature Language="VB.NET" Value="Public ShowTrainingStats As Boolean " />
      <MemberSignature Language="F#" Value="val mutable ShowTrainingStats : bool" Usage="Microsoft.ML.Learners.LogisticRegression.Arguments.ShowTrainingStats" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Show statistics of training examples.", ShortName="stat", SortOrder=50)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If set to <value>true</value>training statistics will be generated at the end of training.
            If you have a large number of learned training parameters(more than 500),
            generating the training statistics might take a few seconds.
            More than 1000 weights might take a few minutes. For those cases consider using the instance of <see cref="T:Microsoft.ML.Learners.ComputeLRTrainingStd" />
            present in the Microsoft.ML.HalLearners package. That computes the statistics using hardware acceleration.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StdComputer">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Learners.ComputeLRTrainingStd StdComputer;" />
      <MemberSignature Language="ILAsm" Value=".field public class Microsoft.ML.Learners.ComputeLRTrainingStd StdComputer" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Learners.LogisticRegression.Arguments.StdComputer" />
      <MemberSignature Language="VB.NET" Value="Public StdComputer As ComputeLRTrainingStd " />
      <MemberSignature Language="F#" Value="val mutable StdComputer : Microsoft.ML.Learners.ComputeLRTrainingStd" Usage="Microsoft.ML.Learners.LogisticRegression.Arguments.StdComputer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Learners.ComputeLRTrainingStd</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The instance of <see cref="T:Microsoft.ML.Learners.ComputeLRTrainingStd" /> that computes the std of the training statistics, at the end of training.
            The calculations are not part of Microsoft.ML package, due to the size of MKL.
            If you need these calculations, add the Microsoft.ML.HalLearners package, and initialize <see cref="F:Microsoft.ML.Learners.LogisticRegression.Arguments.StdComputer" />.
            to the <see cref="T:Microsoft.ML.Learners.ComputeLRTrainingStd" /> implementation in the Microsoft.ML.HalLearners package.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
