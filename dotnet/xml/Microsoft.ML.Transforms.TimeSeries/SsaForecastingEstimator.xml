<Type Name="SsaForecastingEstimator" FullName="Microsoft.ML.Transforms.TimeSeries.SsaForecastingEstimator">
  <TypeSignature Language="C#" Value="public sealed class SsaForecastingEstimator : Microsoft.ML.IEstimator&lt;Microsoft.ML.Transforms.TimeSeries.SsaForecastingTransformer&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SsaForecastingEstimator extends System.Object implements class Microsoft.ML.IEstimator`1&lt;class Microsoft.ML.Transforms.TimeSeries.SsaForecastingTransformer&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.TimeSeries.SsaForecastingEstimator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SsaForecastingEstimator&#xA;Implements IEstimator(Of SsaForecastingTransformer)" />
  <TypeSignature Language="F#" Value="type SsaForecastingEstimator = class&#xA;    interface IEstimator&lt;SsaForecastingTransformer&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.IEstimator&lt;Microsoft.ML.Transforms.TimeSeries.SsaForecastingTransformer&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
             Forecasts using Singular Spectrum Analysis.
             </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[
             To create this estimator, use [ForecastBySsa](xref:Microsoft.ML.TimeSeriesCatalog.ForecastBySsa(Microsoft.ML.TransformsCatalog,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean, System.Single, Microsoft.ML.Transforms.TimeSeries.AnomalySide,Microsoft.ML.Transforms.TimeSeries.ErrorFunction))
            
             [!include[io](~/../docs/samples/docs/api-reference/io-time-series-ssa-forecast.md)]
            
             ###  Estimator Characteristics
             |  |  |
             | -- | -- |
             | Does this estimator need to look at the data to train its parameters? | Yes |
             | Input column data type | <xref:System.Single> |
             | Output column data type | Vector of <xref:System.Single> |
            
             |  |  |
             | -- | -- |
             | Does this estimator need to look at the data to train its parameters? | Yes |
             | Input column data type | <xref:System.Single> |
             | Output column data type | Three vectors of <xref:System.Single> |
            
             [!include[io](~/../docs/samples/docs/api-reference/time-series-props.md)]
            
             [!include[io](~/../docs/samples/docs/api-reference/time-series-ssa.md)]
            
             Check the See Also section for links to usage examples.
             ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Fit">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.TimeSeries.SsaForecastingTransformer Fit (Microsoft.ML.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Transforms.TimeSeries.SsaForecastingTransformer Fit(class Microsoft.ML.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.TimeSeries.SsaForecastingEstimator.Fit(Microsoft.ML.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fit (input As IDataView) As SsaForecastingTransformer" />
      <MemberSignature Language="F#" Value="abstract member Fit : Microsoft.ML.IDataView -&gt; Microsoft.ML.Transforms.TimeSeries.SsaForecastingTransformer&#xA;override this.Fit : Microsoft.ML.IDataView -&gt; Microsoft.ML.Transforms.TimeSeries.SsaForecastingTransformer" Usage="ssaForecastingEstimator.Fit input" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.IEstimator`1.Fit(Microsoft.ML.IDataView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.TimeSeries.SsaForecastingTransformer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.IDataView" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>
            Train and return a transformer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.SchemaShape GetOutputSchema (Microsoft.ML.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.SchemaShape GetOutputSchema(class Microsoft.ML.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.TimeSeries.SsaForecastingEstimator.GetOutputSchema(Microsoft.ML.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutputSchema (inputSchema As SchemaShape) As SchemaShape" />
      <MemberSignature Language="F#" Value="abstract member GetOutputSchema : Microsoft.ML.SchemaShape -&gt; Microsoft.ML.SchemaShape&#xA;override this.GetOutputSchema : Microsoft.ML.SchemaShape -&gt; Microsoft.ML.SchemaShape" Usage="ssaForecastingEstimator.GetOutputSchema inputSchema" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.IEstimator`1.GetOutputSchema(Microsoft.ML.SchemaShape)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.SchemaShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>
            Schema propagation for transformers.
            Returns the output schema of the data, if the input schema is like the one provided.
            Creates three output columns if confidence intervals are requested otherwise
            just one.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
