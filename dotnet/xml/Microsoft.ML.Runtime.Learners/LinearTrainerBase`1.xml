<Type Name="LinearTrainerBase&lt;TPredictor&gt;" FullName="Microsoft.ML.Runtime.Learners.LinearTrainerBase&lt;TPredictor&gt;">
  <TypeSignature Language="C#" Value="public abstract class LinearTrainerBase&lt;TPredictor&gt; : Microsoft.ML.Runtime.Training.TrainerBase&lt;TPredictor&gt; where TPredictor : IPredictor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LinearTrainerBase`1&lt;(class Microsoft.ML.Runtime.IPredictor) TPredictor&gt; extends Microsoft.ML.Runtime.Training.TrainerBase`1&lt;!TPredictor&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class LinearTrainerBase(Of TPredictor)&#xA;Inherits TrainerBase(Of TPredictor)" />
  <TypeSignature Language="F#" Value="type LinearTrainerBase&lt;'Predictor (requires 'Predictor :&gt; IPredictor)&gt; = class&#xA;    inherit TrainerBase&lt;'Predictor (requires 'Predictor :&gt; IPredictor)&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TPredictor">
      <Constraints>
        <InterfaceName>Microsoft.ML.Runtime.IPredictor</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.Training.TrainerBase&lt;Microsoft.ML.Runtime.Data.RoleMappedData,TPredictor&gt;</BaseTypeName>
    <BaseTypeName FrameworkAlternate="ml-dotnet">Microsoft.ML.Runtime.Training.TrainerBase&lt;TPredictor&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">TPredictor</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TPredictor">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckLabel">
      <MemberSignature Language="C#" Value="protected abstract void CheckLabel (Microsoft.ML.Runtime.Data.RoleMappedData examples, out int weightSetCount);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CheckLabel(class Microsoft.ML.Runtime.Data.RoleMappedData examples, [out] int32&amp; weightSetCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.CheckLabel(Microsoft.ML.Runtime.Data.RoleMappedData,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub CheckLabel (examples As RoleMappedData, ByRef weightSetCount As Integer)" />
      <MemberSignature Language="F#" Value="abstract member CheckLabel : Microsoft.ML.Runtime.Data.RoleMappedData *  -&gt; unit" Usage="linearTrainerBase.CheckLabel (examples, weightSetCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="examples" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
        <Parameter Name="weightSetCount" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="examples">To be added.</param>
        <param name="weightSetCount">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeNumThreads">
      <MemberSignature Language="C#" Value="protected virtual int ComputeNumThreads (Microsoft.ML.Runtime.Training.FloatLabelCursor.Factory cursorFactory);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ComputeNumThreads(class Microsoft.ML.Runtime.Training.FloatLabelCursor/Factory cursorFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.ComputeNumThreads(Microsoft.ML.Runtime.Training.FloatLabelCursor.Factory)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ComputeNumThreads (cursorFactory As FloatLabelCursor.Factory) As Integer" />
      <MemberSignature Language="F#" Value="abstract member ComputeNumThreads : Microsoft.ML.Runtime.Training.FloatLabelCursor.Factory -&gt; int&#xA;override this.ComputeNumThreads : Microsoft.ML.Runtime.Training.FloatLabelCursor.Factory -&gt; int" Usage="linearTrainerBase.ComputeNumThreads cursorFactory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursorFactory" Type="Microsoft.ML.Runtime.Training.FloatLabelCursor+Factory" />
      </Parameters>
      <Docs>
        <param name="cursorFactory">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.Runtime.TrainerInfo Info { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.TrainerInfo Info" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.Info" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Info As TrainerInfo" />
      <MemberSignature Language="F#" Value="member this.Info : Microsoft.ML.Runtime.TrainerInfo" Usage="Microsoft.ML.Runtime.Learners.LinearTrainerBase&lt;'Predictor (requires 'Predictor :&gt; Microsoft.ML.Runtime.IPredictor)&gt;.Info" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.TrainerInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NeedShuffle">
      <MemberSignature Language="C#" Value="protected bool NeedShuffle;" />
      <MemberSignature Language="ILAsm" Value=".field family bool NeedShuffle" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.NeedShuffle" />
      <MemberSignature Language="VB.NET" Value="Protected NeedShuffle As Boolean " />
      <MemberSignature Language="F#" Value="val mutable NeedShuffle : bool" Usage="Microsoft.ML.Runtime.Learners.LinearTrainerBase&lt;'Predictor (requires 'Predictor :&gt; Microsoft.ML.Runtime.IPredictor)&gt;.NeedShuffle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareDataFromTrainingExamples">
      <MemberSignature Language="C#" Value="protected Microsoft.ML.Runtime.Data.RoleMappedData PrepareDataFromTrainingExamples (Microsoft.ML.Runtime.IChannel ch, Microsoft.ML.Runtime.Data.RoleMappedData examples, out int weightSetCount);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.ML.Runtime.Data.RoleMappedData PrepareDataFromTrainingExamples(class Microsoft.ML.Runtime.IChannel ch, class Microsoft.ML.Runtime.Data.RoleMappedData examples, [out] int32&amp; weightSetCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.PrepareDataFromTrainingExamples(Microsoft.ML.Runtime.IChannel,Microsoft.ML.Runtime.Data.RoleMappedData,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function PrepareDataFromTrainingExamples (ch As IChannel, examples As RoleMappedData, ByRef weightSetCount As Integer) As RoleMappedData" />
      <MemberSignature Language="F#" Value="member this.PrepareDataFromTrainingExamples : Microsoft.ML.Runtime.IChannel * Microsoft.ML.Runtime.Data.RoleMappedData *  -&gt; Microsoft.ML.Runtime.Data.RoleMappedData" Usage="linearTrainerBase.PrepareDataFromTrainingExamples (ch, examples, weightSetCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.RoleMappedData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Microsoft.ML.Runtime.IChannel" />
        <Parameter Name="examples" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
        <Parameter Name="weightSetCount" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ch">The channel</param>
        <param name="examples">The training examples</param>
        <param name="weightSetCount">Gets the length of weights and bias array. For binary classification and regression,
            this is 1. For multi-class classification, this equals the number of classes on the label.</param>
        <summary>
            This method ensures that the data meets the requirements of this trainer and its
            subclasses, injects necessary transforms, and throws if it couldn't meet them.
            </summary>
        <returns>A potentially modified version of <paramref name="examples" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShuffleData">
      <MemberSignature Language="C#" Value="protected abstract bool ShuffleData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShuffleData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.ShuffleData" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property ShuffleData As Boolean" />
      <MemberSignature Language="F#" Value="member this.ShuffleData : bool" Usage="Microsoft.ML.Runtime.Learners.LinearTrainerBase&lt;'Predictor (requires 'Predictor :&gt; Microsoft.ML.Runtime.IPredictor)&gt;.ShuffleData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether data is to be shuffled every epoch.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Train">
      <MemberSignature Language="C#" Value="public override TPredictor Train (Microsoft.ML.Runtime.TrainContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !TPredictor Train(class Microsoft.ML.Runtime.TrainContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.Train(Microsoft.ML.Runtime.TrainContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Train (context As TrainContext) As TPredictor" />
      <MemberSignature Language="F#" Value="override this.Train : Microsoft.ML.Runtime.TrainContext -&gt; 'Predictor" Usage="linearTrainerBase.Train context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TPredictor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.ML.Runtime.TrainContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainCore">
      <MemberSignature Language="C#" Value="protected abstract TPredictor TrainCore (Microsoft.ML.Runtime.IChannel ch, Microsoft.ML.Runtime.Data.RoleMappedData data, Microsoft.ML.Runtime.Learners.LinearPredictor predictor, int weightSetCount);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TPredictor TrainCore(class Microsoft.ML.Runtime.IChannel ch, class Microsoft.ML.Runtime.Data.RoleMappedData data, class Microsoft.ML.Runtime.Learners.LinearPredictor predictor, int32 weightSetCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.TrainCore(Microsoft.ML.Runtime.IChannel,Microsoft.ML.Runtime.Data.RoleMappedData,Microsoft.ML.Runtime.Learners.LinearPredictor,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function TrainCore (ch As IChannel, data As RoleMappedData, predictor As LinearPredictor, weightSetCount As Integer) As TPredictor" />
      <MemberSignature Language="F#" Value="abstract member TrainCore : Microsoft.ML.Runtime.IChannel * Microsoft.ML.Runtime.Data.RoleMappedData * Microsoft.ML.Runtime.Learners.LinearPredictor * int -&gt; 'Predictor" Usage="linearTrainerBase.TrainCore (ch, data, predictor, weightSetCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TPredictor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Microsoft.ML.Runtime.IChannel" />
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
        <Parameter Name="predictor" Type="Microsoft.ML.Runtime.Learners.LinearPredictor" />
        <Parameter Name="weightSetCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">To be added.</param>
        <param name="data">To be added.</param>
        <param name="predictor">To be added.</param>
        <param name="weightSetCount">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WDot">
      <MemberSignature Language="C#" Value="protected float WDot (ref Microsoft.ML.Runtime.Data.VBuffer&lt;float&gt; features, ref Microsoft.ML.Runtime.Data.VBuffer&lt;float&gt; weights, float bias);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance float32 WDot(valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;float32&gt;&amp; features, valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;float32&gt;&amp; weights, float32 bias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.WDot(Microsoft.ML.Runtime.Data.VBuffer{System.Single}@,Microsoft.ML.Runtime.Data.VBuffer{System.Single}@,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Protected Function WDot (ByRef features As VBuffer(Of Single), ByRef weights As VBuffer(Of Single), bias As Single) As Single" />
      <MemberSignature Language="F#" Value="member this.WDot :  *  * single -&gt; single" Usage="linearTrainerBase.WDot (features, weights, bias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="features" Type="Microsoft.ML.Runtime.Data.VBuffer&lt;System.Single&gt;" RefType="ref" />
        <Parameter Name="weights" Type="Microsoft.ML.Runtime.Data.VBuffer&lt;System.Single&gt;" RefType="ref" />
        <Parameter Name="bias" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="features">To be added.</param>
        <param name="weights">To be added.</param>
        <param name="bias">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WScaledDot">
      <MemberSignature Language="C#" Value="protected float WScaledDot (ref Microsoft.ML.Runtime.Data.VBuffer&lt;float&gt; features, double scaling, ref Microsoft.ML.Runtime.Data.VBuffer&lt;float&gt; weights, float bias);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance float32 WScaledDot(valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;float32&gt;&amp; features, float64 scaling, valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;float32&gt;&amp; weights, float32 bias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.WScaledDot(Microsoft.ML.Runtime.Data.VBuffer{System.Single}@,System.Double,Microsoft.ML.Runtime.Data.VBuffer{System.Single}@,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Protected Function WScaledDot (ByRef features As VBuffer(Of Single), scaling As Double, ByRef weights As VBuffer(Of Single), bias As Single) As Single" />
      <MemberSignature Language="F#" Value="member this.WScaledDot :  * double *  * single -&gt; single" Usage="linearTrainerBase.WScaledDot (features, scaling, weights, bias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="features" Type="Microsoft.ML.Runtime.Data.VBuffer&lt;System.Single&gt;" RefType="ref" />
        <Parameter Name="scaling" Type="System.Double" />
        <Parameter Name="weights" Type="Microsoft.ML.Runtime.Data.VBuffer&lt;System.Single&gt;" RefType="ref" />
        <Parameter Name="bias" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="features">To be added.</param>
        <param name="scaling">To be added.</param>
        <param name="weights">To be added.</param>
        <param name="bias">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>