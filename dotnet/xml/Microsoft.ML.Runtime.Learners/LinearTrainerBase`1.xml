<Type Name="LinearTrainerBase&lt;TPredictor&gt;" FullName="Microsoft.ML.Runtime.Learners.LinearTrainerBase&lt;TPredictor&gt;">
  <TypeSignature Language="C#" Value="public abstract class LinearTrainerBase&lt;TPredictor&gt; : Microsoft.ML.Runtime.Training.TrainerBase&lt;Microsoft.ML.Runtime.Data.RoleMappedData,TPredictor&gt; where TPredictor : IPredictor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LinearTrainerBase`1&lt;(class Microsoft.ML.Runtime.IPredictor) TPredictor&gt; extends Microsoft.ML.Runtime.Training.TrainerBase`2&lt;class Microsoft.ML.Runtime.Data.RoleMappedData, !TPredictor&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class LinearTrainerBase(Of TPredictor)&#xA;Inherits TrainerBase(Of RoleMappedData, TPredictor)" />
  <TypeSignature Language="F#" Value="type LinearTrainerBase&lt;'Predictor (requires 'Predictor :&gt; IPredictor)&gt; = class&#xA;    inherit TrainerBase&lt;RoleMappedData, 'Predictor (requires 'Predictor :&gt; IPredictor)&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TPredictor&gt;&#xA; where TPredictor : IPredictorpublic ref class LinearTrainerBase abstract : Microsoft::ML::Runtime::Training::TrainerBase&lt;Microsoft::ML::Runtime::Data::RoleMappedData ^, TPredictor&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TPredictor">
      <Constraints>
        <InterfaceName>Microsoft.ML.Runtime.IPredictor</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.Training.TrainerBase&lt;Microsoft.ML.Runtime.Data.RoleMappedData,TPredictor&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Microsoft.ML.Runtime.Data.RoleMappedData</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!1">TPredictor</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TPredictor">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LinearTrainerBase (Microsoft.ML.Runtime.IHostEnvironment env, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (env As IHostEnvironment, name As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Learners.LinearTrainerBase&lt;'Predictor (requires 'Predictor :&gt; Microsoft.ML.Runtime.IPredictor)&gt; : Microsoft.ML.Runtime.IHostEnvironment * string -&gt; Microsoft.ML.Runtime.Learners.LinearTrainerBase&lt;'Predictor (requires 'Predictor :&gt; Microsoft.ML.Runtime.IPredictor)&gt;" Usage="new Microsoft.ML.Runtime.Learners.LinearTrainerBase&lt;'Predictor (requires 'Predictor :&gt; Microsoft.ML.Runtime.IPredictor)&gt; (env, name)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LinearTrainerBase(Microsoft::ML::Runtime::IHostEnvironment ^ env, System::String ^ name);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; LinearTrainerBase(Microsoft::ML::Runtime::IHostEnvironment ^ env, Platform::String ^ name);" />
      <MemberSignature Language="C++ WINRT" Value=" LinearTrainerBase(Microsoft::ML::Runtime::IHostEnvironment const &amp; env, std::wstring const &amp; name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bias">
      <MemberSignature Language="C#" Value="protected float[] Bias;" />
      <MemberSignature Language="ILAsm" Value=".field family float32[] Bias" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.Bias" />
      <MemberSignature Language="VB.NET" Value="Protected Bias As Single() " />
      <MemberSignature Language="F#" Value="val mutable Bias : single[]" Usage="Microsoft.ML.Runtime.Learners.LinearTrainerBase&lt;'Predictor (requires 'Predictor :&gt; Microsoft.ML.Runtime.IPredictor)&gt;.Bias" />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;float&gt; ^ Bias;" />
      <MemberSignature Language="C++ CX" Value="protected: Platform::Array &lt;float&gt; ^ Bias;" />
      <MemberSignature Language="C++ WINRT" Value="std::Array &lt;float&gt; Bias;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckLabel">
      <MemberSignature Language="C#" Value="protected abstract void CheckLabel (Microsoft.ML.Runtime.Data.RoleMappedData examples);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CheckLabel(class Microsoft.ML.Runtime.Data.RoleMappedData examples) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.CheckLabel(Microsoft.ML.Runtime.Data.RoleMappedData)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub CheckLabel (examples As RoleMappedData)" />
      <MemberSignature Language="F#" Value="abstract member CheckLabel : Microsoft.ML.Runtime.Data.RoleMappedData -&gt; unit" Usage="linearTrainerBase.CheckLabel examples" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void CheckLabel(Microsoft::ML::Runtime::Data::RoleMappedData ^ examples);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; abstract void CheckLabel(Microsoft::ML::Runtime::Data::RoleMappedData ^ examples);" />
      <MemberSignature Language="C++ WINRT" Value=" abstract void CheckLabel(Microsoft::ML::Runtime::Data::RoleMappedData const &amp; examples);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="examples" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
      </Parameters>
      <Docs>
        <param name="examples">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeNumThreads">
      <MemberSignature Language="C#" Value="protected virtual int ComputeNumThreads (Microsoft.ML.Runtime.Training.FloatLabelCursor.Factory cursorFactory);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ComputeNumThreads(class Microsoft.ML.Runtime.Training.FloatLabelCursor/Factory cursorFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.ComputeNumThreads(Microsoft.ML.Runtime.Training.FloatLabelCursor.Factory)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ComputeNumThreads (cursorFactory As FloatLabelCursor.Factory) As Integer" />
      <MemberSignature Language="F#" Value="abstract member ComputeNumThreads : Microsoft.ML.Runtime.Training.FloatLabelCursor.Factory -&gt; int&#xA;override this.ComputeNumThreads : Microsoft.ML.Runtime.Training.FloatLabelCursor.Factory -&gt; int" Usage="linearTrainerBase.ComputeNumThreads cursorFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ComputeNumThreads(Microsoft::ML::Runtime::Training::FloatLabelCursor::Factory ^ cursorFactory);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual int ComputeNumThreads(Microsoft::ML::Runtime::Training::FloatLabelCursor::Factory const &amp; cursorFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursorFactory" Type="Microsoft.ML.Runtime.Training.FloatLabelCursor+Factory" />
      </Parameters>
      <Docs>
        <param name="cursorFactory">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NeedNormalization">
      <MemberSignature Language="C#" Value="public override bool NeedNormalization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeedNormalization" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.NeedNormalization" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NeedNormalization As Boolean" />
      <MemberSignature Language="F#" Value="member this.NeedNormalization : bool" Usage="Microsoft.ML.Runtime.Learners.LinearTrainerBase&lt;'Predictor (requires 'Predictor :&gt; Microsoft.ML.Runtime.IPredictor)&gt;.NeedNormalization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool NeedNormalization { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property bool NeedNormalization { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NeedShuffle">
      <MemberSignature Language="C#" Value="protected bool NeedShuffle;" />
      <MemberSignature Language="ILAsm" Value=".field family bool NeedShuffle" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.NeedShuffle" />
      <MemberSignature Language="VB.NET" Value="Protected NeedShuffle As Boolean " />
      <MemberSignature Language="F#" Value="val mutable NeedShuffle : bool" Usage="Microsoft.ML.Runtime.Learners.LinearTrainerBase&lt;'Predictor (requires 'Predictor :&gt; Microsoft.ML.Runtime.IPredictor)&gt;.NeedShuffle" />
      <MemberSignature Language="C++ CLI" Value="protected: bool NeedShuffle;" />
      <MemberSignature Language="C++ CX" Value="protected: bool NeedShuffle;" />
      <MemberSignature Language="C++ WINRT" Value="bool NeedShuffle;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumFeatures">
      <MemberSignature Language="C#" Value="protected int NumFeatures;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 NumFeatures" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.NumFeatures" />
      <MemberSignature Language="VB.NET" Value="Protected NumFeatures As Integer " />
      <MemberSignature Language="F#" Value="val mutable NumFeatures : int" Usage="Microsoft.ML.Runtime.Learners.LinearTrainerBase&lt;'Predictor (requires 'Predictor :&gt; Microsoft.ML.Runtime.IPredictor)&gt;.NumFeatures" />
      <MemberSignature Language="C++ CLI" Value="protected: int NumFeatures;" />
      <MemberSignature Language="C++ CX" Value="protected: int NumFeatures;" />
      <MemberSignature Language="C++ WINRT" Value="int NumFeatures;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareDataFromTrainingExamples">
      <MemberSignature Language="C#" Value="protected Microsoft.ML.Runtime.Data.RoleMappedData PrepareDataFromTrainingExamples (Microsoft.ML.Runtime.IChannel ch, Microsoft.ML.Runtime.Data.RoleMappedData examples);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.ML.Runtime.Data.RoleMappedData PrepareDataFromTrainingExamples(class Microsoft.ML.Runtime.IChannel ch, class Microsoft.ML.Runtime.Data.RoleMappedData examples) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.PrepareDataFromTrainingExamples(Microsoft.ML.Runtime.IChannel,Microsoft.ML.Runtime.Data.RoleMappedData)" />
      <MemberSignature Language="VB.NET" Value="Protected Function PrepareDataFromTrainingExamples (ch As IChannel, examples As RoleMappedData) As RoleMappedData" />
      <MemberSignature Language="F#" Value="member this.PrepareDataFromTrainingExamples : Microsoft.ML.Runtime.IChannel * Microsoft.ML.Runtime.Data.RoleMappedData -&gt; Microsoft.ML.Runtime.Data.RoleMappedData" Usage="linearTrainerBase.PrepareDataFromTrainingExamples (ch, examples)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Microsoft::ML::Runtime::Data::RoleMappedData ^ PrepareDataFromTrainingExamples(Microsoft::ML::Runtime::IChannel ^ ch, Microsoft::ML::Runtime::Data::RoleMappedData ^ examples);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.RoleMappedData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Microsoft.ML.Runtime.IChannel" />
        <Parameter Name="examples" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
      </Parameters>
      <Docs>
        <param name="ch">To be added.</param>
        <param name="examples">To be added.</param>
        <summary>
            This method ensures that the data meets the requirements of this trainer and its
            subclasses, injects necessary transforms, and throws if it couldn't meet them.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShuffleData">
      <MemberSignature Language="C#" Value="protected abstract bool ShuffleData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShuffleData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.ShuffleData" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property ShuffleData As Boolean" />
      <MemberSignature Language="F#" Value="member this.ShuffleData : bool" Usage="Microsoft.ML.Runtime.Learners.LinearTrainerBase&lt;'Predictor (requires 'Predictor :&gt; Microsoft.ML.Runtime.IPredictor)&gt;.ShuffleData" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property bool ShuffleData { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; abstract property bool ShuffleData { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether data is to be shuffled every epoch.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Train">
      <MemberSignature Language="C#" Value="public override void Train (Microsoft.ML.Runtime.Data.RoleMappedData examples);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Train(class Microsoft.ML.Runtime.Data.RoleMappedData examples) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.Train(Microsoft.ML.Runtime.Data.RoleMappedData)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Train (examples As RoleMappedData)" />
      <MemberSignature Language="F#" Value="override this.Train : Microsoft.ML.Runtime.Data.RoleMappedData -&gt; unit" Usage="linearTrainerBase.Train examples" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Train(Microsoft::ML::Runtime::Data::RoleMappedData ^ examples);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override void Train(Microsoft::ML::Runtime::Data::RoleMappedData ^ examples);" />
      <MemberSignature Language="C++ WINRT" Value=" override void Train(Microsoft::ML::Runtime::Data::RoleMappedData const &amp; examples);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="examples" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
      </Parameters>
      <Docs>
        <param name="examples">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainCore">
      <MemberSignature Language="C#" Value="protected abstract void TrainCore (Microsoft.ML.Runtime.IChannel ch, Microsoft.ML.Runtime.Data.RoleMappedData data, Microsoft.ML.Runtime.Learners.LinearPredictor predictor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrainCore(class Microsoft.ML.Runtime.IChannel ch, class Microsoft.ML.Runtime.Data.RoleMappedData data, class Microsoft.ML.Runtime.Learners.LinearPredictor predictor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.TrainCore(Microsoft.ML.Runtime.IChannel,Microsoft.ML.Runtime.Data.RoleMappedData,Microsoft.ML.Runtime.Learners.LinearPredictor)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub TrainCore (ch As IChannel, data As RoleMappedData, predictor As LinearPredictor)" />
      <MemberSignature Language="F#" Value="abstract member TrainCore : Microsoft.ML.Runtime.IChannel * Microsoft.ML.Runtime.Data.RoleMappedData * Microsoft.ML.Runtime.Learners.LinearPredictor -&gt; unit" Usage="linearTrainerBase.TrainCore (ch, data, predictor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void TrainCore(Microsoft::ML::Runtime::IChannel ^ ch, Microsoft::ML::Runtime::Data::RoleMappedData ^ data, Microsoft::ML::Runtime::Learners::LinearPredictor ^ predictor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Microsoft.ML.Runtime.IChannel" />
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
        <Parameter Name="predictor" Type="Microsoft.ML.Runtime.Learners.LinearPredictor" />
      </Parameters>
      <Docs>
        <param name="ch">To be added.</param>
        <param name="data">To be added.</param>
        <param name="predictor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainEx">
      <MemberSignature Language="C#" Value="protected void TrainEx (Microsoft.ML.Runtime.Data.RoleMappedData data, Microsoft.ML.Runtime.Learners.LinearPredictor predictor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TrainEx(class Microsoft.ML.Runtime.Data.RoleMappedData data, class Microsoft.ML.Runtime.Learners.LinearPredictor predictor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.TrainEx(Microsoft.ML.Runtime.Data.RoleMappedData,Microsoft.ML.Runtime.Learners.LinearPredictor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TrainEx (data As RoleMappedData, predictor As LinearPredictor)" />
      <MemberSignature Language="F#" Value="member this.TrainEx : Microsoft.ML.Runtime.Data.RoleMappedData * Microsoft.ML.Runtime.Learners.LinearPredictor -&gt; unit" Usage="linearTrainerBase.TrainEx (data, predictor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TrainEx(Microsoft::ML::Runtime::Data::RoleMappedData ^ data, Microsoft::ML::Runtime::Learners::LinearPredictor ^ predictor);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; void TrainEx(Microsoft::ML::Runtime::Data::RoleMappedData ^ data, Microsoft::ML::Runtime::Learners::LinearPredictor ^ predictor);" />
      <MemberSignature Language="C++ WINRT" Value="void TrainEx(Microsoft::ML::Runtime::Data::RoleMappedData const &amp; data, Microsoft::ML::Runtime::Learners::LinearPredictor const &amp; predictor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
        <Parameter Name="predictor" Type="Microsoft.ML.Runtime.Learners.LinearPredictor" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="predictor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WantCaching">
      <MemberSignature Language="C#" Value="public override bool WantCaching { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WantCaching" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.WantCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property WantCaching As Boolean" />
      <MemberSignature Language="F#" Value="member this.WantCaching : bool" Usage="Microsoft.ML.Runtime.Learners.LinearTrainerBase&lt;'Predictor (requires 'Predictor :&gt; Microsoft.ML.Runtime.IPredictor)&gt;.WantCaching" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool WantCaching { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property bool WantCaching { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WDot">
      <MemberSignature Language="C#" Value="protected float WDot (ref Microsoft.ML.Runtime.Data.VBuffer&lt;float&gt; features, ref Microsoft.ML.Runtime.Data.VBuffer&lt;float&gt; weights, float bias);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance float32 WDot(valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;float32&gt;&amp; features, valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;float32&gt;&amp; weights, float32 bias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.WDot(Microsoft.ML.Runtime.Data.VBuffer{System.Single}@,Microsoft.ML.Runtime.Data.VBuffer{System.Single}@,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Protected Function WDot (ByRef features As VBuffer(Of Single), ByRef weights As VBuffer(Of Single), bias As Single) As Single" />
      <MemberSignature Language="F#" Value="member this.WDot :  *  * single -&gt; single" Usage="linearTrainerBase.WDot (features, weights, bias)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; float WDot(Microsoft::ML::Runtime::Data::VBuffer&lt;float&gt; % features, Microsoft::ML::Runtime::Data::VBuffer&lt;float&gt; % weights, float bias);" />
      <MemberSignature Language="C++ WINRT" Value="float WDot(Microsoft::ML::Runtime::Data::VBuffer&lt;float&gt; &amp; features, Microsoft::ML::Runtime::Data::VBuffer&lt;float&gt; &amp; weights, float bias);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="features" Type="Microsoft.ML.Runtime.Data.VBuffer&lt;System.Single&gt;&amp;" RefType="ref" />
        <Parameter Name="weights" Type="Microsoft.ML.Runtime.Data.VBuffer&lt;System.Single&gt;&amp;" RefType="ref" />
        <Parameter Name="bias" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="features">To be added.</param>
        <param name="weights">To be added.</param>
        <param name="bias">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeightArraySize">
      <MemberSignature Language="C#" Value="protected abstract int WeightArraySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WeightArraySize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.WeightArraySize" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property WeightArraySize As Integer" />
      <MemberSignature Language="F#" Value="member this.WeightArraySize : int" Usage="Microsoft.ML.Runtime.Learners.LinearTrainerBase&lt;'Predictor (requires 'Predictor :&gt; Microsoft.ML.Runtime.IPredictor)&gt;.WeightArraySize" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property int WeightArraySize { int get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; abstract property int WeightArraySize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the size of weights and bias array. For binary classification and regression, this is 1. 
            For multi-class classification, this equals the number of classes.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Weights">
      <MemberSignature Language="C#" Value="protected Microsoft.ML.Runtime.Data.VBuffer&lt;float&gt;[] Weights;" />
      <MemberSignature Language="ILAsm" Value=".field family valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;float32&gt;[] Weights" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.Weights" />
      <MemberSignature Language="VB.NET" Value="Protected Weights As VBuffer(Of Single)() " />
      <MemberSignature Language="F#" Value="val mutable Weights : Microsoft.ML.Runtime.Data.VBuffer&lt;single&gt;[]" Usage="Microsoft.ML.Runtime.Learners.LinearTrainerBase&lt;'Predictor (requires 'Predictor :&gt; Microsoft.ML.Runtime.IPredictor)&gt;.Weights" />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;Microsoft::ML::Runtime::Data::VBuffer&lt;float&gt;&gt; ^ Weights;" />
      <MemberSignature Language="C++ WINRT" Value="std::Array &lt;Microsoft::ML::Runtime::Data::VBuffer&lt;float&gt;&gt; Weights;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.VBuffer&lt;System.Single&gt;[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WScaledDot">
      <MemberSignature Language="C#" Value="protected float WScaledDot (ref Microsoft.ML.Runtime.Data.VBuffer&lt;float&gt; features, double scaling, ref Microsoft.ML.Runtime.Data.VBuffer&lt;float&gt; weights, float bias);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance float32 WScaledDot(valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;float32&gt;&amp; features, float64 scaling, valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;float32&gt;&amp; weights, float32 bias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.LinearTrainerBase`1.WScaledDot(Microsoft.ML.Runtime.Data.VBuffer{System.Single}@,System.Double,Microsoft.ML.Runtime.Data.VBuffer{System.Single}@,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Protected Function WScaledDot (ByRef features As VBuffer(Of Single), scaling As Double, ByRef weights As VBuffer(Of Single), bias As Single) As Single" />
      <MemberSignature Language="F#" Value="member this.WScaledDot :  * double *  * single -&gt; single" Usage="linearTrainerBase.WScaledDot (features, scaling, weights, bias)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; float WScaledDot(Microsoft::ML::Runtime::Data::VBuffer&lt;float&gt; % features, double scaling, Microsoft::ML::Runtime::Data::VBuffer&lt;float&gt; % weights, float bias);" />
      <MemberSignature Language="C++ WINRT" Value="float WScaledDot(Microsoft::ML::Runtime::Data::VBuffer&lt;float&gt; &amp; features, double scaling, Microsoft::ML::Runtime::Data::VBuffer&lt;float&gt; &amp; weights, float bias);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="features" Type="Microsoft.ML.Runtime.Data.VBuffer&lt;System.Single&gt;&amp;" RefType="ref" />
        <Parameter Name="scaling" Type="System.Double" />
        <Parameter Name="weights" Type="Microsoft.ML.Runtime.Data.VBuffer&lt;System.Single&gt;&amp;" RefType="ref" />
        <Parameter Name="bias" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="features">To be added.</param>
        <param name="scaling">To be added.</param>
        <param name="weights">To be added.</param>
        <param name="bias">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>