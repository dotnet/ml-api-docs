<Type Name="MetaMulticlassTrainer&lt;TTransformer,TModel&gt;" FullName="Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer&lt;TTransformer,TModel&gt;">
  <TypeSignature Language="C#" Value="public abstract class MetaMulticlassTrainer&lt;TTransformer,TModel&gt; : Microsoft.ML.Core.Data.IEstimator&lt;TTransformer&gt;, Microsoft.ML.Runtime.ITrainer&lt;TModel&gt;, Microsoft.ML.Runtime.Training.ITrainerEstimator&lt;TTransformer,TModel&gt; where TTransformer : ISingleFeaturePredictionTransformer&lt;TModel&gt; where TModel : IPredictor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetaMulticlassTrainer`2&lt;(class Microsoft.ML.Runtime.ISingleFeaturePredictionTransformer`1&lt;!TModel&gt;) TTransformer, (class Microsoft.ML.Runtime.IPredictor) TModel&gt; extends System.Object implements class Microsoft.ML.Core.Data.IEstimator`1&lt;!TTransformer&gt;, class Microsoft.ML.Runtime.ITrainer, class Microsoft.ML.Runtime.ITrainer`1&lt;!TModel&gt;, class Microsoft.ML.Runtime.Training.ITrainerEstimator`2&lt;!TTransformer, !TModel&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetaMulticlassTrainer(Of TTransformer, TModel)&#xA;Implements IEstimator(Of TTransformer), ITrainer(Of TModel), ITrainerEstimator(Of TTransformer, TModel)" />
  <TypeSignature Language="F#" Value="type MetaMulticlassTrainer&lt;'ransformer, 'Model (requires 'ransformer :&gt; ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; IPredictor)&gt; = class&#xA;    interface ITrainerEstimator&lt;'ransformer, 'Model (requires 'ransformer :&gt; ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; IPredictor)&gt;&#xA;    interface IEstimator&lt;'ransformer (requires 'ransformer :&gt; ISingleFeaturePredictionTransformer&lt;'Model&gt;)&gt;&#xA;    interface ITrainer&lt;'Model (requires 'Model :&gt; IPredictor)&gt;&#xA;    interface ITrainer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TPred">
      <Constraints>
        <InterfaceName>Microsoft.ML.Runtime.IPredictor</InterfaceName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TArgs">
      <Constraints>
        <BaseTypeName>Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer&lt;TPred,TArgs&gt;+ArgumentsBase</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.Training.TrainerBase&lt;Microsoft.ML.Runtime.Data.RoleMappedData,TPred&gt;</BaseTypeName>
    <BaseTypeName FrameworkAlternate="ml-dotnet">Microsoft.ML.Runtime.Training.TrainerBase&lt;TPred&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">TPred</BaseTypeArgument>
    </BaseTypeArguments>
    <BaseTypeName FrameworkAlternate="ml-dotnet">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Core.Data.IEstimator&lt;TTransformer&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.ITrainer&lt;TModel&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Training.ITrainerEstimator&lt;TTransformer,TModel&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TPred">To be added.</typeparam>
    <typeparam name="TTransformer">To be added.</typeparam>
    <typeparam name="TModel">To be added.</typeparam>
    <typeparam name="TArgs">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Args">
      <MemberSignature Language="C#" Value="protected readonly Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer&lt;TTransformer,TModel&gt;.ArgumentsBase Args;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer`2/ArgumentsBase&lt;!TTransformer, !TModel&gt; Args" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer`2.Args" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Args As MetaMulticlassTrainer(Of TTransformer, TModel).ArgumentsBase " />
      <MemberSignature Language="F#" Value="val mutable Args : Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer&lt;'ransformer, 'Model (requires 'ransformer :&gt; Microsoft.ML.Runtime.ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; Microsoft.ML.Runtime.IPredictor)&gt;.ArgumentsBase" Usage="Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer&lt;'ransformer, 'Model (requires 'ransformer :&gt; Microsoft.ML.Runtime.ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; Microsoft.ML.Runtime.IPredictor)&gt;.Args" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer&lt;TTransformer,TModel&gt;+ArgumentsBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calibrator">
      <MemberSignature Language="C#" Value="protected readonly Microsoft.ML.Runtime.Internal.Calibration.ICalibratorTrainer Calibrator;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class Microsoft.ML.Runtime.Internal.Calibration.ICalibratorTrainer Calibrator" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer`2.Calibrator" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Calibrator As ICalibratorTrainer " />
      <MemberSignature Language="F#" Value="val mutable Calibrator : Microsoft.ML.Runtime.Internal.Calibration.ICalibratorTrainer" Usage="Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer&lt;'ransformer, 'Model (requires 'ransformer :&gt; Microsoft.ML.Runtime.ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; Microsoft.ML.Runtime.IPredictor)&gt;.Calibrator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.Calibration.ICalibratorTrainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fit">
      <MemberSignature Language="C#" Value="public abstract TTransformer Fit (Microsoft.ML.Runtime.Data.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TTransformer Fit(class Microsoft.ML.Runtime.Data.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer`2.Fit(Microsoft.ML.Runtime.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fit (input As IDataView) As TTransformer" />
      <MemberSignature Language="F#" Value="abstract member Fit : Microsoft.ML.Runtime.Data.IDataView -&gt; 'ransformer" Usage="metaMulticlassTrainer.Fit input" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IEstimator`1.Fit(Microsoft.ML.Runtime.Data.IDataView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TTransformer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
      </Parameters>
      <Docs>
        <param name="input">The input data to fit to.</param>
        <summary>
            Fits the data to the trainer.
            </summary>
        <returns>The transformer.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Core.Data.SchemaShape GetOutputSchema (Microsoft.ML.Core.Data.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Core.Data.SchemaShape GetOutputSchema(class Microsoft.ML.Core.Data.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer`2.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutputSchema (inputSchema As SchemaShape) As SchemaShape" />
      <MemberSignature Language="F#" Value="abstract member GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape&#xA;override this.GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape" Usage="metaMulticlassTrainer.GetOutputSchema inputSchema" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IEstimator`1.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Core.Data.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">The input schema. </param>
        <summary>
             Gets the output columns.
            </summary>
        <returns>The output <see cref="T:Microsoft.ML.Core.Data.SchemaShape" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrainer">
      <MemberSignature Language="C#" Value="protected Microsoft.ML.Runtime.Training.ITrainerEstimator&lt;Microsoft.ML.Runtime.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.Runtime.IPredictorProducing&lt;float&gt;&gt;,Microsoft.ML.Runtime.IPredictorProducing&lt;float&gt;&gt; GetTrainer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.ML.Runtime.Training.ITrainerEstimator`2&lt;class Microsoft.ML.Runtime.ISingleFeaturePredictionTransformer`1&lt;class Microsoft.ML.Runtime.IPredictorProducing`1&lt;float32&gt;&gt;, class Microsoft.ML.Runtime.IPredictorProducing`1&lt;float32&gt;&gt; GetTrainer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer`2.GetTrainer" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetTrainer () As ITrainerEstimator(Of ISingleFeaturePredictionTransformer(Of IPredictorProducing(Of Single)), IPredictorProducing(Of Single))" />
      <MemberSignature Language="F#" Value="member this.GetTrainer : unit -&gt; Microsoft.ML.Runtime.Training.ITrainerEstimator&lt;Microsoft.ML.Runtime.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.Runtime.IPredictorProducing&lt;single&gt;&gt;, Microsoft.ML.Runtime.IPredictorProducing&lt;single&gt;&gt;" Usage="metaMulticlassTrainer.GetTrainer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Training.ITrainerEstimator&lt;Microsoft.ML.Runtime.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.Runtime.IPredictorProducing&lt;System.Single&gt;&gt;,Microsoft.ML.Runtime.IPredictorProducing&lt;System.Single&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="protected readonly Microsoft.ML.Runtime.IHost Host;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class Microsoft.ML.Runtime.IHost Host" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer`2.Host" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Host As IHost " />
      <MemberSignature Language="F#" Value="val mutable Host : Microsoft.ML.Runtime.IHost" Usage="Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer&lt;'ransformer, 'Model (requires 'ransformer :&gt; Microsoft.ML.Runtime.ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; Microsoft.ML.Runtime.IPredictor)&gt;.Host" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.TrainerInfo Info { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.TrainerInfo Info" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer`2.Info" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Info As TrainerInfo" />
      <MemberSignature Language="F#" Value="member this.Info : Microsoft.ML.Runtime.TrainerInfo" Usage="Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer&lt;'ransformer, 'Model (requires 'ransformer :&gt; Microsoft.ML.Runtime.ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; Microsoft.ML.Runtime.IPredictor)&gt;.Info" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.Training.ITrainerEstimator`2.Info</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.TrainerInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelColumn">
      <MemberSignature Language="C#" Value="public readonly Microsoft.ML.Core.Data.SchemaShape.Column LabelColumn;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly class Microsoft.ML.Core.Data.SchemaShape/Column LabelColumn" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer`2.LabelColumn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly LabelColumn As SchemaShape.Column " />
      <MemberSignature Language="F#" Value="val mutable LabelColumn : Microsoft.ML.Core.Data.SchemaShape.Column" Usage="Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer&lt;'ransformer, 'Model (requires 'ransformer :&gt; Microsoft.ML.Runtime.ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; Microsoft.ML.Runtime.IPredictor)&gt;.LabelColumn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape+Column</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The label column that the trainer expects.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapLabelsCore&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected Microsoft.ML.Runtime.Data.IDataView MapLabelsCore&lt;T&gt; (Microsoft.ML.Runtime.Data.ColumnType type, Microsoft.ML.Runtime.Data.RefPredicate&lt;T&gt; equalsTarget, Microsoft.ML.Runtime.Data.RoleMappedData data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.ML.Runtime.Data.IDataView MapLabelsCore&lt;T&gt;(class Microsoft.ML.Runtime.Data.ColumnType type, class Microsoft.ML.Runtime.Data.RefPredicate`1&lt;!!T&gt; equalsTarget, class Microsoft.ML.Runtime.Data.RoleMappedData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer`2.MapLabelsCore``1(Microsoft.ML.Runtime.Data.ColumnType,Microsoft.ML.Runtime.Data.RefPredicate{``0},Microsoft.ML.Runtime.Data.RoleMappedData)" />
      <MemberSignature Language="VB.NET" Value="Protected Function MapLabelsCore(Of T) (type As ColumnType, equalsTarget As RefPredicate(Of T), data As RoleMappedData) As IDataView" />
      <MemberSignature Language="F#" Value="member this.MapLabelsCore : Microsoft.ML.Runtime.Data.ColumnType * Microsoft.ML.Runtime.Data.RefPredicate&lt;'T&gt; * Microsoft.ML.Runtime.Data.RoleMappedData -&gt; Microsoft.ML.Runtime.Data.IDataView" Usage="metaMulticlassTrainer.MapLabelsCore (type, equalsTarget, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataView</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.ML.Runtime.Data.ColumnType" />
        <Parameter Name="equalsTarget" Type="Microsoft.ML.Runtime.Data.RefPredicate&lt;T&gt;" />
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="type">To be added.</param>
        <param name="equalsTarget">To be added.</param>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.ML.Runtime.ITrainer.Train">
      <MemberSignature Language="C#" Value="Microsoft.ML.Runtime.IPredictor ITrainer.Train (Microsoft.ML.Runtime.TrainContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.ML.Runtime.IPredictor Microsoft.ML.Runtime.ITrainer.Train(class Microsoft.ML.Runtime.TrainContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer`2.Microsoft#ML#Runtime#ITrainer#Train(Microsoft.ML.Runtime.TrainContext)" />
      <MemberSignature Language="VB.NET" Value="Function Train (context As TrainContext) As IPredictor Implements ITrainer.Train" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.ITrainer.Train(Microsoft.ML.Runtime.TrainContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IPredictor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.ML.Runtime.TrainContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputColumns">
      <MemberSignature Language="C#" Value="protected Microsoft.ML.Core.Data.SchemaShape.Column[] OutputColumns;" />
      <MemberSignature Language="ILAsm" Value=".field family class Microsoft.ML.Core.Data.SchemaShape/Column[] OutputColumns" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer`2.OutputColumns" />
      <MemberSignature Language="VB.NET" Value="Protected OutputColumns As SchemaShape.Column() " />
      <MemberSignature Language="F#" Value="val mutable OutputColumns : Microsoft.ML.Core.Data.SchemaShape.Column[]" Usage="Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer&lt;'ransformer, 'Model (requires 'ransformer :&gt; Microsoft.ML.Runtime.ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; Microsoft.ML.Runtime.IPredictor)&gt;.OutputColumns" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape+Column[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictionKind">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.PredictionKind PredictionKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Runtime.PredictionKind PredictionKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer`2.PredictionKind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PredictionKind As PredictionKind" />
      <MemberSignature Language="F#" Value="member this.PredictionKind : Microsoft.ML.Runtime.PredictionKind" Usage="Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer&lt;'ransformer, 'Model (requires 'ransformer :&gt; Microsoft.ML.Runtime.ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; Microsoft.ML.Runtime.IPredictor)&gt;.PredictionKind" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.Training.ITrainerEstimator`2.PredictionKind</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PredictionKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictorType">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Training.ITrainerEstimator&lt;Microsoft.ML.Runtime.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.Runtime.IPredictorProducing&lt;float&gt;&gt;,Microsoft.ML.Runtime.IPredictorProducing&lt;float&gt;&gt; PredictorType;" />
      <MemberSignature Language="ILAsm" Value=".field public class Microsoft.ML.Runtime.Training.ITrainerEstimator`2&lt;class Microsoft.ML.Runtime.ISingleFeaturePredictionTransformer`1&lt;class Microsoft.ML.Runtime.IPredictorProducing`1&lt;float32&gt;&gt;, class Microsoft.ML.Runtime.IPredictorProducing`1&lt;float32&gt;&gt; PredictorType" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer`2.PredictorType" />
      <MemberSignature Language="VB.NET" Value="Public PredictorType As ITrainerEstimator(Of ISingleFeaturePredictionTransformer(Of IPredictorProducing(Of Single)), IPredictorProducing(Of Single)) " />
      <MemberSignature Language="F#" Value="val mutable PredictorType : Microsoft.ML.Runtime.Training.ITrainerEstimator&lt;Microsoft.ML.Runtime.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.Runtime.IPredictorProducing&lt;single&gt;&gt;, Microsoft.ML.Runtime.IPredictorProducing&lt;single&gt;&gt;" Usage="Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer&lt;'ransformer, 'Model (requires 'ransformer :&gt; Microsoft.ML.Runtime.ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; Microsoft.ML.Runtime.IPredictor)&gt;.PredictorType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Training.ITrainerEstimator&lt;Microsoft.ML.Runtime.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.Runtime.IPredictorProducing&lt;System.Single&gt;&gt;,Microsoft.ML.Runtime.IPredictorProducing&lt;System.Single&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Train">
      <MemberSignature Language="C#" Value="public TModel Train (Microsoft.ML.Runtime.TrainContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TModel Train(class Microsoft.ML.Runtime.TrainContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer`2.Train(Microsoft.ML.Runtime.TrainContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Train (context As TrainContext) As TModel" />
      <MemberSignature Language="F#" Value="abstract member Train : Microsoft.ML.Runtime.TrainContext -&gt; 'Model&#xA;override this.Train : Microsoft.ML.Runtime.TrainContext -&gt; 'Model" Usage="metaMulticlassTrainer.Train context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.ITrainer`1.Train(Microsoft.ML.Runtime.TrainContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.ML.Runtime.TrainContext" />
      </Parameters>
      <Docs>
        <param name="context">The trainig context for this learner.</param>
        <summary>
            The legacy train method.
            </summary>
        <returns>The trained model.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainCore">
      <MemberSignature Language="C#" Value="protected abstract TModel TrainCore (Microsoft.ML.Runtime.IChannel ch, Microsoft.ML.Runtime.Data.RoleMappedData data, int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TModel TrainCore(class Microsoft.ML.Runtime.IChannel ch, class Microsoft.ML.Runtime.Data.RoleMappedData data, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer`2.TrainCore(Microsoft.ML.Runtime.IChannel,Microsoft.ML.Runtime.Data.RoleMappedData,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function TrainCore (ch As IChannel, data As RoleMappedData, count As Integer) As TModel" />
      <MemberSignature Language="F#" Value="abstract member TrainCore : Microsoft.ML.Runtime.IChannel * Microsoft.ML.Runtime.Data.RoleMappedData * int -&gt; 'Model" Usage="metaMulticlassTrainer.TrainCore (ch, data, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Microsoft.ML.Runtime.IChannel" />
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">To be added.</param>
        <param name="data">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>