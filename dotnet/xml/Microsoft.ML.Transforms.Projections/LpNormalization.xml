<Type Name="LpNormalization" FullName="Microsoft.ML.Transforms.Projections.LpNormalization">
  <TypeSignature Language="C#" Value="public static class LpNormalization" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LpNormalization extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.Projections.LpNormalization" />
  <TypeSignature Language="VB.NET" Value="Public Class LpNormalization" />
  <TypeSignature Language="F#" Value="type LpNormalization = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GcNormalize">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.EntryPoints.CommonOutputs.TransformOutput GcNormalize (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Transforms.Projections.LpNormalizingTransformer.GcnArguments input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.EntryPoints.CommonOutputs/TransformOutput GcNormalize(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Transforms.Projections.LpNormalizingTransformer/GcnArguments input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Projections.LpNormalization.GcNormalize(Microsoft.ML.IHostEnvironment,Microsoft.ML.Transforms.Projections.LpNormalizingTransformer.GcnArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GcNormalize (env As IHostEnvironment, input As LpNormalizingTransformer.GcnArguments) As CommonOutputs.TransformOutput" />
      <MemberSignature Language="F#" Value="static member GcNormalize : Microsoft.ML.IHostEnvironment * Microsoft.ML.Transforms.Projections.LpNormalizingTransformer.GcnArguments -&gt; Microsoft.ML.EntryPoints.CommonOutputs.TransformOutput" Usage="Microsoft.ML.Transforms.Projections.LpNormalization.GcNormalize (env, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/EntryPoint(Desc="Performs a global contrast normalization on input values: Y = (s * X - M) / D, where s is a scale, M is mean and D is either L2 norm or standard deviation.", Name="Transforms.GlobalContrastNormalizer", ShortName="Gcn", UserName="Global Contrast Normalization Transform", XmlInclude=new System.String[] { "&lt;include file='../Microsoft.ML.Transforms/doc.xml' path='doc/members/member[@name="GcNormalize"]/*' /&gt;" })</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.EntryPoints.CommonOutputs+TransformOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Transforms.Projections.LpNormalizingTransformer+GcnArguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.EntryPoints.CommonOutputs.TransformOutput Normalize (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Transforms.Projections.LpNormalizingTransformer.Arguments input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.EntryPoints.CommonOutputs/TransformOutput Normalize(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Transforms.Projections.LpNormalizingTransformer/Arguments input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Projections.LpNormalization.Normalize(Microsoft.ML.IHostEnvironment,Microsoft.ML.Transforms.Projections.LpNormalizingTransformer.Arguments)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Normalize (env As IHostEnvironment, input As LpNormalizingTransformer.Arguments) As CommonOutputs.TransformOutput" />
      <MemberSignature Language="F#" Value="static member Normalize : Microsoft.ML.IHostEnvironment * Microsoft.ML.Transforms.Projections.LpNormalizingTransformer.Arguments -&gt; Microsoft.ML.EntryPoints.CommonOutputs.TransformOutput" Usage="Microsoft.ML.Transforms.Projections.LpNormalization.Normalize (env, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/EntryPoint(Desc="Normalize vectors (rows) individually by rescaling them to unit norm (L2, L1 or LInf). Performs the following operation on a vector X: Y = (X - M) / D, where M is mean and D is either L2 norm, L1 norm or LInf norm.", Name="Transforms.LpNormalizer", ShortName="lpnorm", UserName="Lp-Norm Normalizer", XmlInclude=new System.String[] { "&lt;include file='../Microsoft.ML.Transforms/doc.xml' path='doc/members/member[@name="LpNormalize"]/*' /&gt;" })</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.EntryPoints.CommonOutputs+TransformOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Transforms.Projections.LpNormalizingTransformer+Arguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>