<Type Name="LpNormalizingEstimator" FullName="Microsoft.ML.Transforms.Projections.LpNormalizingEstimator">
  <TypeSignature Language="C#" Value="public sealed class LpNormalizingEstimator : Microsoft.ML.Transforms.Projections.LpNormalizingEstimatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LpNormalizingEstimator extends Microsoft.ML.Transforms.Projections.LpNormalizingEstimatorBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.Projections.LpNormalizingEstimator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LpNormalizingEstimator&#xA;Inherits LpNormalizingEstimatorBase" />
  <TypeSignature Language="F#" Value="type LpNormalizingEstimator = class&#xA;    inherit LpNormalizingEstimatorBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Transforms.Projections.LpNormalizingEstimatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Lp Normalizing estimator allow you take columns and normalize them individually by rescaling them to unit norm.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LpNormalizingEstimator (Microsoft.ML.IHostEnvironment env, params Microsoft.ML.Transforms.Projections.LpNormalizingTransformer.LpNormColumnInfo[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Transforms.Projections.LpNormalizingTransformer/LpNormColumnInfo[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Projections.LpNormalizingEstimator.#ctor(Microsoft.ML.IHostEnvironment,Microsoft.ML.Transforms.Projections.LpNormalizingTransformer.LpNormColumnInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, ParamArray columns As LpNormalizingTransformer.LpNormColumnInfo())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.Projections.LpNormalizingEstimator : Microsoft.ML.IHostEnvironment * Microsoft.ML.Transforms.Projections.LpNormalizingTransformer.LpNormColumnInfo[] -&gt; Microsoft.ML.Transforms.Projections.LpNormalizingEstimator" Usage="new Microsoft.ML.Transforms.Projections.LpNormalizingEstimator (env, columns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="columns" Type="Microsoft.ML.Transforms.Projections.LpNormalizingTransformer+LpNormColumnInfo[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="columns">To be added.</param>
        <summary>
            Create a <see cref="T:Microsoft.ML.Transforms.Projections.LpNormalizingEstimator" /> that takes multiple pairs of columns.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LpNormalizingEstimator (Microsoft.ML.IHostEnvironment env, ValueTuple&lt;string,string&gt;[] columns, Microsoft.ML.Transforms.Projections.LpNormalizingEstimatorBase.NormalizerKind normKind = Microsoft.ML.Transforms.Projections.LpNormalizingEstimatorBase+NormalizerKind.L2Norm, bool substractMean = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, valuetype System.ValueTuple`2&lt;string, string&gt;[] columns, valuetype Microsoft.ML.Transforms.Projections.LpNormalizingEstimatorBase/NormalizerKind normKind, bool substractMean) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Projections.LpNormalizingEstimator.#ctor(Microsoft.ML.IHostEnvironment,System.ValueTuple{System.String,System.String}[],Microsoft.ML.Transforms.Projections.LpNormalizingEstimatorBase.NormalizerKind,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, columns As ValueTuple(Of String, String)(), Optional normKind As LpNormalizingEstimatorBase.NormalizerKind = Microsoft.ML.Transforms.Projections.LpNormalizingEstimatorBase+NormalizerKind.L2Norm, Optional substractMean As Boolean = false)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.Projections.LpNormalizingEstimator : Microsoft.ML.IHostEnvironment * ValueTuple&lt;string, string&gt;[] * Microsoft.ML.Transforms.Projections.LpNormalizingEstimatorBase.NormalizerKind * bool -&gt; Microsoft.ML.Transforms.Projections.LpNormalizingEstimator" Usage="new Microsoft.ML.Transforms.Projections.LpNormalizingEstimator (env, columns, normKind, substractMean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="columns" Type="System.ValueTuple&lt;System.String,System.String&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "input", "output" })</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="normKind" Type="Microsoft.ML.Transforms.Projections.LpNormalizingEstimatorBase+NormalizerKind" />
        <Parameter Name="substractMean" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="env">The environment.</param>
        <param name="columns">Pairs of columns to run the normalization on.</param>
        <param name="normKind">Type of norm to use to normalize each sample.</param>
        <param name="substractMean">Subtract mean from each value before normalizing.</param>
        <summary>
         The LpNormalizer transforms, normalizes vectors (rows) individually by rescaling them to unit norm (L2, L1 or LInf). 
         <para>Performs the following operation on a vector X:</para><para>Y = (X - M) / D</para><para>where M is mean and D is either L2 norm, L1 norm or LInf norm.</para></summary>
        <remarks>
        Scaling inputs to unit norms is a common operation for text classification or clustering.
        For more information see: <a href="https://www.cs.stanford.edu/~acoates/papers/coatesleeng_aistats_2011.pdf" /></remarks>
        <altmember cref="T:Microsoft.ML.Transforms.Projections.GlobalContrastNormalizingEstimator" />
        <example>
          <code language="csharp">
          pipeline.Add(new LpNormalizer("FeatureCol")
          { 
              NormKind = LpNormNormalizerTransformNormalizerKind.L1Norm
          });
        </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LpNormalizingEstimator (Microsoft.ML.IHostEnvironment env, string inputColumn, string outputColumn = null, Microsoft.ML.Transforms.Projections.LpNormalizingEstimatorBase.NormalizerKind normKind = Microsoft.ML.Transforms.Projections.LpNormalizingEstimatorBase+NormalizerKind.L2Norm, bool substractMean = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, string inputColumn, string outputColumn, valuetype Microsoft.ML.Transforms.Projections.LpNormalizingEstimatorBase/NormalizerKind normKind, bool substractMean) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Projections.LpNormalizingEstimator.#ctor(Microsoft.ML.IHostEnvironment,System.String,System.String,Microsoft.ML.Transforms.Projections.LpNormalizingEstimatorBase.NormalizerKind,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, inputColumn As String, Optional outputColumn As String = null, Optional normKind As LpNormalizingEstimatorBase.NormalizerKind = Microsoft.ML.Transforms.Projections.LpNormalizingEstimatorBase+NormalizerKind.L2Norm, Optional substractMean As Boolean = false)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.Projections.LpNormalizingEstimator : Microsoft.ML.IHostEnvironment * string * string * Microsoft.ML.Transforms.Projections.LpNormalizingEstimatorBase.NormalizerKind * bool -&gt; Microsoft.ML.Transforms.Projections.LpNormalizingEstimator" Usage="new Microsoft.ML.Transforms.Projections.LpNormalizingEstimator (env, inputColumn, outputColumn, normKind, substractMean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="inputColumn" Type="System.String" />
        <Parameter Name="outputColumn" Type="System.String" />
        <Parameter Name="normKind" Type="Microsoft.ML.Transforms.Projections.LpNormalizingEstimatorBase+NormalizerKind" />
        <Parameter Name="substractMean" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="env">The environment.</param>
        <param name="inputColumn">Name of the input column.</param>
        <param name="outputColumn">Name of the column resulting from the transformation of <paramref name="inputColumn" />. Null means <paramref name="inputColumn" /> is replaced. </param>
        <param name="normKind">Type of norm to use to normalize each sample.</param>
        <param name="substractMean">Subtract mean from each value before normalizing.</param>
        <summary>
         The LpNormalizer transforms, normalizes vectors (rows) individually by rescaling them to unit norm (L2, L1 or LInf). 
         <para>Performs the following operation on a vector X:</para><para>Y = (X - M) / D</para><para>where M is mean and D is either L2 norm, L1 norm or LInf norm.</para></summary>
        <remarks>
        Scaling inputs to unit norms is a common operation for text classification or clustering.
        For more information see: <a href="https://www.cs.stanford.edu/~acoates/papers/coatesleeng_aistats_2011.pdf" /></remarks>
        <altmember cref="T:Microsoft.ML.Transforms.Projections.GlobalContrastNormalizingEstimator" />
        <example>
          <code language="csharp">
          pipeline.Add(new LpNormalizer("FeatureCol")
          { 
              NormKind = LpNormNormalizerTransformNormalizerKind.L1Norm
          });
        </code>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>