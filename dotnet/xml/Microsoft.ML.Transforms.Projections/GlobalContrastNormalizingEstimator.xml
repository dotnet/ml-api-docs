<Type Name="GlobalContrastNormalizingEstimator" FullName="Microsoft.ML.Transforms.Projections.GlobalContrastNormalizingEstimator">
  <TypeSignature Language="C#" Value="public sealed class GlobalContrastNormalizingEstimator : Microsoft.ML.Transforms.Projections.LpNormalizingEstimatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GlobalContrastNormalizingEstimator extends Microsoft.ML.Transforms.Projections.LpNormalizingEstimatorBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.Projections.GlobalContrastNormalizingEstimator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GlobalContrastNormalizingEstimator&#xA;Inherits LpNormalizingEstimatorBase" />
  <TypeSignature Language="F#" Value="type GlobalContrastNormalizingEstimator = class&#xA;    inherit LpNormalizingEstimatorBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Transforms.Projections.LpNormalizingEstimatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Global contrast normalizing estimator allow you take columns and performs global constrast normalization on them.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlobalContrastNormalizingEstimator (Microsoft.ML.Runtime.IHostEnvironment env, params Microsoft.ML.Transforms.Projections.LpNormalizingTransformer.GcnColumnInfo[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Transforms.Projections.LpNormalizingTransformer/GcnColumnInfo[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Projections.GlobalContrastNormalizingEstimator.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Transforms.Projections.LpNormalizingTransformer.GcnColumnInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, ParamArray columns As LpNormalizingTransformer.GcnColumnInfo())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.Projections.GlobalContrastNormalizingEstimator : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Transforms.Projections.LpNormalizingTransformer.GcnColumnInfo[] -&gt; Microsoft.ML.Transforms.Projections.GlobalContrastNormalizingEstimator" Usage="new Microsoft.ML.Transforms.Projections.GlobalContrastNormalizingEstimator (env, columns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="columns" Type="Microsoft.ML.Transforms.Projections.LpNormalizingTransformer+GcnColumnInfo[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="columns">To be added.</param>
        <summary>
            Create a <see cref="T:Microsoft.ML.Transforms.Projections.GlobalContrastNormalizingEstimator" /> that takes multiple pairs of columns.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlobalContrastNormalizingEstimator (Microsoft.ML.Runtime.IHostEnvironment env, ValueTuple&lt;string,string&gt;[] columns, bool substractMean = true, bool useStdDev = false, float scale = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, valuetype System.ValueTuple`2&lt;string, string&gt;[] columns, bool substractMean, bool useStdDev, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Projections.GlobalContrastNormalizingEstimator.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.ValueTuple{System.String,System.String}[],System.Boolean,System.Boolean,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, columns As ValueTuple(Of String, String)(), Optional substractMean As Boolean = true, Optional useStdDev As Boolean = false, Optional scale As Single = 1)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.Projections.GlobalContrastNormalizingEstimator : Microsoft.ML.Runtime.IHostEnvironment * ValueTuple&lt;string, string&gt;[] * bool * bool * single -&gt; Microsoft.ML.Transforms.Projections.GlobalContrastNormalizingEstimator" Usage="new Microsoft.ML.Transforms.Projections.GlobalContrastNormalizingEstimator (env, columns, substractMean, useStdDev, scale)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="columns" Type="System.ValueTuple&lt;System.String,System.String&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "input", "output" })</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="substractMean" Type="System.Boolean" />
        <Parameter Name="useStdDev" Type="System.Boolean" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="env">The environment.</param>
        <param name="columns">Pairs of columns to run the normalization on.</param>
        <param name="substractMean">Subtract mean from each value before normalizing.</param>
        <param name="useStdDev">Normalize by standard deviation rather than L2 norm.</param>
        <param name="scale">Scale features by this value.</param>
        <summary>
          <para>Performs a global contrast normalization on input values:</para>
          <para>Y = (s * X - M) / D</para>
          <para>where s is a scale, M is mean and D is either the L2 norm or standard deviation.</para>
        </summary>
        <remarks>
        Scaling inputs to unit norms is a common operation for text classification or clustering.
        For more information see: 
        <a href="https://www.cs.stanford.edu/~acoates/papers/coatesleeng_aistats_2011.pdf">An Analysis of Single-Layer Networks in Unsupervised Feature Learning</a></remarks>
        <altmember cref="T:Microsoft.ML.Transforms.Projections.LpNormalizingEstimator" />
        <example>
          <code language="csharp">
          pipeline.Add(new GlobalContrastNormalizer("FeatureCol")
          { 
              SubMean= false
          });
        </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlobalContrastNormalizingEstimator (Microsoft.ML.Runtime.IHostEnvironment env, string inputColumn, string outputColumn = null, bool substractMean = true, bool useStdDev = false, float scale = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, string inputColumn, string outputColumn, bool substractMean, bool useStdDev, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Projections.GlobalContrastNormalizingEstimator.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.String,System.Boolean,System.Boolean,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, inputColumn As String, Optional outputColumn As String = null, Optional substractMean As Boolean = true, Optional useStdDev As Boolean = false, Optional scale As Single = 1)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.Projections.GlobalContrastNormalizingEstimator : Microsoft.ML.Runtime.IHostEnvironment * string * string * bool * bool * single -&gt; Microsoft.ML.Transforms.Projections.GlobalContrastNormalizingEstimator" Usage="new Microsoft.ML.Transforms.Projections.GlobalContrastNormalizingEstimator (env, inputColumn, outputColumn, substractMean, useStdDev, scale)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="inputColumn" Type="System.String" />
        <Parameter Name="outputColumn" Type="System.String" />
        <Parameter Name="substractMean" Type="System.Boolean" />
        <Parameter Name="useStdDev" Type="System.Boolean" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="env">The environment.</param>
        <param name="inputColumn">Name of the input column.</param>
        <param name="outputColumn">Name of the column resulting from the transformation of <paramref name="inputColumn" />. Null means <paramref name="inputColumn" /> is replaced. </param>
        <param name="substractMean">Subtract mean from each value before normalizing.</param>
        <param name="useStdDev">Normalize by standard deviation rather than L2 norm.</param>
        <param name="scale">Scale features by this value.</param>
        <summary>
          <para>Performs a global contrast normalization on input values:</para>
          <para>Y = (s * X - M) / D</para>
          <para>where s is a scale, M is mean and D is either the L2 norm or standard deviation.</para>
        </summary>
        <remarks>
        Scaling inputs to unit norms is a common operation for text classification or clustering.
        For more information see: 
        <a href="https://www.cs.stanford.edu/~acoates/papers/coatesleeng_aistats_2011.pdf">An Analysis of Single-Layer Networks in Unsupervised Feature Learning</a></remarks>
        <altmember cref="T:Microsoft.ML.Transforms.Projections.LpNormalizingEstimator" />
        <example>
          <code language="csharp">
          pipeline.Add(new GlobalContrastNormalizer("FeatureCol")
          { 
              SubMean= false
          });
        </code>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>