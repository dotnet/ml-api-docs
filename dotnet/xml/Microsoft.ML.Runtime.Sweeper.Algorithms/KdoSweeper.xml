<Type Name="KdoSweeper" FullName="Microsoft.ML.Runtime.Sweeper.Algorithms.KdoSweeper">
  <TypeSignature Language="C#" Value="public sealed class KdoSweeper : Microsoft.ML.Runtime.ISweeper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit KdoSweeper extends System.Object implements class Microsoft.ML.Runtime.ISweeper" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Sweeper.Algorithms.KdoSweeper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class KdoSweeper&#xA;Implements ISweeper" />
  <TypeSignature Language="F#" Value="type KdoSweeper = class&#xA;    interface ISweeper" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Sweeper</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.ISweeper</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
             Kernel Density Optimization (KDO) is a sequential model-based optimization method originally developed by George D. Montanez (me).
             The search space consists of a unit hypercube, with one dimension per hyperparameter (it is a spatial method, so scaling the dimensions
             to the unit hypercube is critical). The idea is that the exploration of the cube to find good values is performed by creating an approximate
             (and biased) kernel density estimate of the space (where density corresponds to metric performance), concentrating mass in regions of better
             performance, then drawing samples from the pdf.
            
             To trade off exploration versus exploitation, an fitness proportional mutation scheme is used. Uniform random points are selected during
             initialization and during the runs (parameter controls how often). A Gaussian model is fit to the distribution of performance values, and
             each evaluated point in the history is given a value between 0 and 1 corresponding to the CDF evaluation of its performance under the
             Gaussian. Points with low quantile values are mutated more strongly than those with higher values, which allows the method to hone in
             precisely when approaching really good regions.
            
             Categorical parameters are handled by forming a categorical distribution on possible values weighted by observed performance of each value,
             taken independently.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KdoSweeper (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Sweeper.Algorithms.KdoSweeper.Arguments args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Sweeper.Algorithms.KdoSweeper/Arguments args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Sweeper.Algorithms.KdoSweeper.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Sweeper.Algorithms.KdoSweeper.Arguments)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, args As KdoSweeper.Arguments)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Sweeper.Algorithms.KdoSweeper : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Sweeper.Algorithms.KdoSweeper.Arguments -&gt; Microsoft.ML.Runtime.Sweeper.Algorithms.KdoSweeper" Usage="new Microsoft.ML.Runtime.Sweeper.Algorithms.KdoSweeper (env, args)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Sweeper</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="args" Type="Microsoft.ML.Runtime.Sweeper.Algorithms.KdoSweeper+Arguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProposeSweeps">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.ParameterSet[] ProposeSweeps (int maxSweeps, System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.IRunResult&gt; previousRuns = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.ParameterSet[] ProposeSweeps(int32 maxSweeps, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.ML.Runtime.IRunResult&gt; previousRuns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Sweeper.Algorithms.KdoSweeper.ProposeSweeps(System.Int32,System.Collections.Generic.IEnumerable{Microsoft.ML.Runtime.IRunResult})" />
      <MemberSignature Language="VB.NET" Value="Public Function ProposeSweeps (maxSweeps As Integer, Optional previousRuns As IEnumerable(Of IRunResult) = null) As ParameterSet()" />
      <MemberSignature Language="F#" Value="abstract member ProposeSweeps : int * seq&lt;Microsoft.ML.Runtime.IRunResult&gt; -&gt; Microsoft.ML.Runtime.ParameterSet[]&#xA;override this.ProposeSweeps : int * seq&lt;Microsoft.ML.Runtime.IRunResult&gt; -&gt; Microsoft.ML.Runtime.ParameterSet[]" Usage="kdoSweeper.ProposeSweeps (maxSweeps, previousRuns)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.ISweeper.ProposeSweeps(System.Int32,System.Collections.Generic.IEnumerable{Microsoft.ML.Runtime.IRunResult})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Sweeper</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.ParameterSet[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxSweeps" Type="System.Int32" />
        <Parameter Name="previousRuns" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.IRunResult&gt;" />
      </Parameters>
      <Docs>
        <param name="maxSweeps">To be added.</param>
        <param name="previousRuns">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>