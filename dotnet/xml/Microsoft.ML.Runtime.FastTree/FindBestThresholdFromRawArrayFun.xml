<Type Name="FindBestThresholdFromRawArrayFun" FullName="Microsoft.ML.Runtime.FastTree.FindBestThresholdFromRawArrayFun">
  <TypeSignature Language="C#" Value="public delegate void FindBestThresholdFromRawArrayFun(LeastSquaresRegressionTreeLearner.LeafSplitCandidates leafSplitCandidates, int feature, int flock, int subfeature, int[] countByBin, double[] sumTargetsByBin, double[] sumWeightsByBin, int numDocsInLeaf, double sumTargets, double sumWeights, double varianceTargets, out LeastSquaresRegressionTreeLearner.SplitInfo bestSplit);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FindBestThresholdFromRawArrayFun extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.FastTree.FindBestThresholdFromRawArrayFun" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub FindBestThresholdFromRawArrayFun(leafSplitCandidates As LeastSquaresRegressionTreeLearner.LeafSplitCandidates, feature As Integer, flock As Integer, subfeature As Integer, countByBin As Integer(), sumTargetsByBin As Double(), sumWeightsByBin As Double(), numDocsInLeaf As Integer, sumTargets As Double, sumWeights As Double, varianceTargets As Double, ByRef bestSplit As LeastSquaresRegressionTreeLearner.SplitInfo)" />
  <TypeSignature Language="F#" Value="type FindBestThresholdFromRawArrayFun = delegate of LeastSquaresRegressionTreeLearner.LeafSplitCandidates * int * int * int * int[] * double[] * double[] * int * double * double * double *  -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="leafSplitCandidates" Type="Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner+LeafSplitCandidates" />
    <Parameter Name="feature" Type="System.Int32" />
    <Parameter Name="flock" Type="System.Int32" />
    <Parameter Name="subfeature" Type="System.Int32" />
    <Parameter Name="countByBin" Type="System.Int32[]" />
    <Parameter Name="sumTargetsByBin" Type="System.Double[]" />
    <Parameter Name="sumWeightsByBin" Type="System.Double[]" />
    <Parameter Name="numDocsInLeaf" Type="System.Int32" />
    <Parameter Name="sumTargets" Type="System.Double" />
    <Parameter Name="sumWeights" Type="System.Double" />
    <Parameter Name="varianceTargets" Type="System.Double" />
    <Parameter Name="bestSplit" Type="Microsoft.ML.Runtime.FastTree.Internal.LeastSquaresRegressionTreeLearner+SplitInfo&amp;" RefType="out" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="leafSplitCandidates">To be added.</param>
    <param name="feature">To be added.</param>
    <param name="flock">To be added.</param>
    <param name="subfeature">To be added.</param>
    <param name="countByBin">To be added.</param>
    <param name="sumTargetsByBin">To be added.</param>
    <param name="sumWeightsByBin">To be added.</param>
    <param name="numDocsInLeaf">To be added.</param>
    <param name="sumTargets">To be added.</param>
    <param name="sumWeights">To be added.</param>
    <param name="varianceTargets">To be added.</param>
    <param name="bestSplit">To be added.</param>
    <summary>
            delegate function. This function is implemented in TLC, and called by TLC++. It will find best threshold
            from raw histogram data (countByBin, sumTargetsByBin, sumWeightsByBin, numDocsInLeaf, sumTargets, sumWeights)
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>