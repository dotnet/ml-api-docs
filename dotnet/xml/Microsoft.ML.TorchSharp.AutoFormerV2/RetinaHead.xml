<Type Name="RetinaHead" FullName="Microsoft.ML.TorchSharp.AutoFormerV2.RetinaHead">
  <TypeSignature Language="C#" Value="public class RetinaHead : TorchSharp.torch.nn.Module&lt;System.Collections.Generic.List&lt;TorchSharp.torch.Tensor&gt;,(System.Collections.Generic.List&lt;TorchSharp.torch.Tensor&gt;, System.Collections.Generic.List&lt;TorchSharp.torch.Tensor&gt;)&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RetinaHead extends TorchSharp.torch/nn/Module`2&lt;class System.Collections.Generic.List`1&lt;class TorchSharp.torch/Tensor&gt;, valuetype System.ValueTuple`2&lt;class System.Collections.Generic.List`1&lt;class TorchSharp.torch/Tensor&gt;, class System.Collections.Generic.List`1&lt;class TorchSharp.torch/Tensor&gt;&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.TorchSharp.AutoFormerV2.RetinaHead" />
  <TypeSignature Language="VB.NET" Value="Public Class RetinaHead&#xA;Inherits torch.nn.Module(Of List(Of torch.Tensor), ValueTuple(Of List(Of torch.Tensor), List(Of torch.Tensor)))" />
  <TypeSignature Language="F#" Value="type RetinaHead = class&#xA;    inherit torch.nn.Module&lt;List&lt;torch.Tensor&gt;, ValueTuple&lt;List&lt;torch.Tensor&gt;, List&lt;torch.Tensor&gt;&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>TorchSharp.torch+nn+Module&lt;System.Collections.Generic.List&lt;TorchSharp.torch+Tensor&gt;,System.ValueTuple&lt;System.Collections.Generic.List&lt;TorchSharp.torch+Tensor&gt;,System.Collections.Generic.List&lt;TorchSharp.torch+Tensor&gt;&gt;&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Collections.Generic.List&lt;TorchSharp.torch+Tensor&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!1">System.ValueTuple&lt;System.Collections.Generic.List&lt;TorchSharp.torch+Tensor&gt;,System.Collections.Generic.List&lt;TorchSharp.torch+Tensor&gt;&gt;</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The head of RetinaNet.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RetinaHead (int numClasses, int inChannels = 256, int stackedConvs = 4, int featChannels = 256, int numBasePriors = 9);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 numClasses, int32 inChannels, int32 stackedConvs, int32 featChannels, int32 numBasePriors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.AutoFormerV2.RetinaHead.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (numClasses As Integer, Optional inChannels As Integer = 256, Optional stackedConvs As Integer = 4, Optional featChannels As Integer = 256, Optional numBasePriors As Integer = 9)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.TorchSharp.AutoFormerV2.RetinaHead : int * int * int * int * int -&gt; Microsoft.ML.TorchSharp.AutoFormerV2.RetinaHead" Usage="new Microsoft.ML.TorchSharp.AutoFormerV2.RetinaHead (numClasses, inChannels, stackedConvs, featChannels, numBasePriors)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="numClasses" Type="System.Int32" />
        <Parameter Name="inChannels" Type="System.Int32" />
        <Parameter Name="stackedConvs" Type="System.Int32" />
        <Parameter Name="featChannels" Type="System.Int32" />
        <Parameter Name="numBasePriors" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numClasses">The number of classes.</param>
        <param name="inChannels">The input channels.</param>
        <param name="stackedConvs">The number of stacked convolution layers.</param>
        <param name="featChannels">The feature channels.</param>
        <param name="numBasePriors">The number of base priors.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ML.TorchSharp.AutoFormerV2.RetinaHead" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.AutoFormerV2.RetinaHead.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="retinaHead.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="forward">
      <MemberSignature Language="C#" Value="public override (System.Collections.Generic.List&lt;TorchSharp.torch.Tensor&gt;, System.Collections.Generic.List&lt;TorchSharp.torch.Tensor&gt;) forward (System.Collections.Generic.List&lt;TorchSharp.torch.Tensor&gt; inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.ValueTuple`2&lt;class System.Collections.Generic.List`1&lt;class TorchSharp.torch/Tensor&gt;, class System.Collections.Generic.List`1&lt;class TorchSharp.torch/Tensor&gt;&gt; forward(class System.Collections.Generic.List`1&lt;class TorchSharp.torch/Tensor&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.AutoFormerV2.RetinaHead.forward(System.Collections.Generic.List{TorchSharp.torch.Tensor})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function forward (inputs As List(Of torch.Tensor)) As ValueTuple(Of List(Of torch.Tensor), List(Of torch.Tensor))" />
      <MemberSignature Language="F#" Value="override this.forward : System.Collections.Generic.List&lt;TorchSharp.torch.Tensor&gt; -&gt; ValueTuple&lt;System.Collections.Generic.List&lt;TorchSharp.torch.Tensor&gt;, System.Collections.Generic.List&lt;TorchSharp.torch.Tensor&gt;&gt;" Usage="retinaHead.forward inputs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Collections.Generic.List&lt;TorchSharp.torch+Tensor&gt;,System.Collections.Generic.List&lt;TorchSharp.torch+Tensor&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Collections.Generic.List&lt;TorchSharp.torch+Tensor&gt;" />
      </Parameters>
      <Docs>
        <param name="inputs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
