<Type Name="PatchMerging" FullName="Microsoft.ML.TorchSharp.AutoFormerV2.PatchMerging">
  <TypeSignature Language="C#" Value="public class PatchMerging : TorchSharp.torch.nn.Module&lt;TorchSharp.torch.Tensor,int,int,(TorchSharp.torch.Tensor, int, int)&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PatchMerging extends TorchSharp.torch/nn/Module`4&lt;class TorchSharp.torch/Tensor, int32, int32, valuetype System.ValueTuple`3&lt;class TorchSharp.torch/Tensor, int32, int32&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.TorchSharp.AutoFormerV2.PatchMerging" />
  <TypeSignature Language="VB.NET" Value="Public Class PatchMerging&#xA;Inherits torch.nn.Module(Of torch.Tensor, Integer, Integer, ValueTuple(Of torch.Tensor, Integer, Integer))" />
  <TypeSignature Language="F#" Value="type PatchMerging = class&#xA;    inherit torch.nn.Module&lt;torch.Tensor, int, int, ValueTuple&lt;torch.Tensor, int, int&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>TorchSharp.torch+nn+Module&lt;TorchSharp.torch+Tensor,System.Int32,System.Int32,System.ValueTuple&lt;TorchSharp.torch+Tensor,System.Int32,System.Int32&gt;&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">TorchSharp.torch+Tensor</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!1">System.Int32</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!2">System.Int32</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!3">System.ValueTuple&lt;TorchSharp.torch+Tensor,System.Int32,System.Int32&gt;</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The PatchMerging layer.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PatchMerging (int inChannels, int outChannels);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 inChannels, int32 outChannels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.AutoFormerV2.PatchMerging.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (inChannels As Integer, outChannels As Integer)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.TorchSharp.AutoFormerV2.PatchMerging : int * int -&gt; Microsoft.ML.TorchSharp.AutoFormerV2.PatchMerging" Usage="new Microsoft.ML.TorchSharp.AutoFormerV2.PatchMerging (inChannels, outChannels)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inChannels" Type="System.Int32" />
        <Parameter Name="outChannels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inChannels">The input channels.</param>
        <param name="outChannels">The output channels.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ML.TorchSharp.AutoFormerV2.PatchMerging" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.AutoFormerV2.PatchMerging.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="patchMerging.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="forward">
      <MemberSignature Language="C#" Value="public override (TorchSharp.torch.Tensor, int, int) forward (TorchSharp.torch.Tensor x, int h, int w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.ValueTuple`3&lt;class TorchSharp.torch/Tensor, int32, int32&gt; forward(class TorchSharp.torch/Tensor x, int32 h, int32 w) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.AutoFormerV2.PatchMerging.forward(TorchSharp.torch.Tensor,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function forward (x As torch.Tensor, h As Integer, w As Integer) As ValueTuple(Of torch.Tensor, Integer, Integer)" />
      <MemberSignature Language="F#" Value="override this.forward : TorchSharp.torch.Tensor * int * int -&gt; ValueTuple&lt;TorchSharp.torch.Tensor, int, int&gt;" Usage="patchMerging.forward (x, h, w)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;TorchSharp.torch+Tensor,System.Int32,System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="TorchSharp.torch+Tensor" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="h">To be added.</param>
        <param name="w">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
