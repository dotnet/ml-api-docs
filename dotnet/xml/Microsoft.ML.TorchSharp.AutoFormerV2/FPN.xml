<Type Name="FPN" FullName="Microsoft.ML.TorchSharp.AutoFormerV2.FPN">
  <TypeSignature Language="C#" Value="public class FPN : TorchSharp.torch.nn.Module&lt;System.Collections.Generic.List&lt;TorchSharp.torch.Tensor&gt;,System.Collections.Generic.List&lt;TorchSharp.torch.Tensor&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FPN extends TorchSharp.torch/nn/Module`2&lt;class System.Collections.Generic.List`1&lt;class TorchSharp.torch/Tensor&gt;, class System.Collections.Generic.List`1&lt;class TorchSharp.torch/Tensor&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.TorchSharp.AutoFormerV2.FPN" />
  <TypeSignature Language="VB.NET" Value="Public Class FPN&#xA;Inherits torch.nn.Module(Of List(Of torch.Tensor), List(Of torch.Tensor))" />
  <TypeSignature Language="F#" Value="type FPN = class&#xA;    inherit torch.nn.Module&lt;List&lt;torch.Tensor&gt;, List&lt;torch.Tensor&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>TorchSharp.torch+nn+Module&lt;System.Collections.Generic.List&lt;TorchSharp.torch+Tensor&gt;,System.Collections.Generic.List&lt;TorchSharp.torch+Tensor&gt;&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Collections.Generic.List&lt;TorchSharp.torch+Tensor&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!1">System.Collections.Generic.List&lt;TorchSharp.torch+Tensor&gt;</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The FPN (Feature Pyramid Networks) layer.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FPN (System.Collections.Generic.List&lt;int&gt; inChannels = default, int outChannel = 256, int numOuts = 5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.List`1&lt;int32&gt; inChannels, int32 outChannel, int32 numOuts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.AutoFormerV2.FPN.#ctor(System.Collections.Generic.List{System.Int32},System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional inChannels As List(Of Integer) = Nothing, Optional outChannel As Integer = 256, Optional numOuts As Integer = 5)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.TorchSharp.AutoFormerV2.FPN : System.Collections.Generic.List&lt;int&gt; * int * int -&gt; Microsoft.ML.TorchSharp.AutoFormerV2.FPN" Usage="new Microsoft.ML.TorchSharp.AutoFormerV2.FPN (inChannels, outChannel, numOuts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inChannels" Type="System.Collections.Generic.List&lt;System.Int32&gt;" />
        <Parameter Name="outChannel" Type="System.Int32" />
        <Parameter Name="numOuts" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inChannels">The input channels.</param>
        <param name="outChannel">The output channels.</param>
        <param name="numOuts">The number of output tensors.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ML.TorchSharp.AutoFormerV2.FPN" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.AutoFormerV2.FPN.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="fPN.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="forward">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.List&lt;TorchSharp.torch.Tensor&gt; forward (System.Collections.Generic.List&lt;TorchSharp.torch.Tensor&gt; inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.List`1&lt;class TorchSharp.torch/Tensor&gt; forward(class System.Collections.Generic.List`1&lt;class TorchSharp.torch/Tensor&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.AutoFormerV2.FPN.forward(System.Collections.Generic.List{TorchSharp.torch.Tensor})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function forward (inputs As List(Of torch.Tensor)) As List(Of torch.Tensor)" />
      <MemberSignature Language="F#" Value="override this.forward : System.Collections.Generic.List&lt;TorchSharp.torch.Tensor&gt; -&gt; System.Collections.Generic.List&lt;TorchSharp.torch.Tensor&gt;" Usage="fPN.forward inputs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;TorchSharp.torch+Tensor&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Collections.Generic.List&lt;TorchSharp.torch+Tensor&gt;" />
      </Parameters>
      <Docs>
        <param name="inputs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
