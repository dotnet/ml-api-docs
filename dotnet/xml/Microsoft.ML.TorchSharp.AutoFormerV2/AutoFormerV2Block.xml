<Type Name="AutoFormerV2Block" FullName="Microsoft.ML.TorchSharp.AutoFormerV2.AutoFormerV2Block">
  <TypeSignature Language="C#" Value="public class AutoFormerV2Block : TorchSharp.torch.nn.Module&lt;TorchSharp.torch.Tensor,int,int,TorchSharp.torch.Tensor,TorchSharp.torch.Tensor&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AutoFormerV2Block extends TorchSharp.torch/nn/Module`5&lt;class TorchSharp.torch/Tensor, int32, int32, class TorchSharp.torch/Tensor, class TorchSharp.torch/Tensor&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.TorchSharp.AutoFormerV2.AutoFormerV2Block" />
  <TypeSignature Language="VB.NET" Value="Public Class AutoFormerV2Block&#xA;Inherits torch.nn.Module(Of torch.Tensor, Integer, Integer, torch.Tensor, torch.Tensor)" />
  <TypeSignature Language="F#" Value="type AutoFormerV2Block = class&#xA;    inherit torch.nn.Module&lt;torch.Tensor, int, int, torch.Tensor, torch.Tensor&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>TorchSharp.torch+nn+Module&lt;TorchSharp.torch+Tensor,System.Int32,System.Int32,TorchSharp.torch+Tensor,TorchSharp.torch+Tensor&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">TorchSharp.torch+Tensor</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!1">System.Int32</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!2">System.Int32</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!3">TorchSharp.torch+Tensor</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!4">TorchSharp.torch+Tensor</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The block module of AutoFormer network.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AutoFormerV2Block (int inChannels, int numHeads, int windowSize = 7, int shiftSize = 0, double mlpRatio = 4, double dropRatio = 0, int localConvSize = 3, bool useShiftWindow = false, bool useInterpolate = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 inChannels, int32 numHeads, int32 windowSize, int32 shiftSize, float64 mlpRatio, float64 dropRatio, int32 localConvSize, bool useShiftWindow, bool useInterpolate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.AutoFormerV2.AutoFormerV2Block.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Int32,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (inChannels As Integer, numHeads As Integer, Optional windowSize As Integer = 7, Optional shiftSize As Integer = 0, Optional mlpRatio As Double = 4, Optional dropRatio As Double = 0, Optional localConvSize As Integer = 3, Optional useShiftWindow As Boolean = false, Optional useInterpolate As Boolean = false)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.TorchSharp.AutoFormerV2.AutoFormerV2Block : int * int * int * int * double * double * int * bool * bool -&gt; Microsoft.ML.TorchSharp.AutoFormerV2.AutoFormerV2Block" Usage="new Microsoft.ML.TorchSharp.AutoFormerV2.AutoFormerV2Block (inChannels, numHeads, windowSize, shiftSize, mlpRatio, dropRatio, localConvSize, useShiftWindow, useInterpolate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inChannels" Type="System.Int32" />
        <Parameter Name="numHeads" Type="System.Int32" />
        <Parameter Name="windowSize" Type="System.Int32" />
        <Parameter Name="shiftSize" Type="System.Int32" />
        <Parameter Name="mlpRatio" Type="System.Double" />
        <Parameter Name="dropRatio" Type="System.Double" />
        <Parameter Name="localConvSize" Type="System.Int32" />
        <Parameter Name="useShiftWindow" Type="System.Boolean" />
        <Parameter Name="useInterpolate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inChannels">The input channels.</param>
        <param name="numHeads">The number of blocks.</param>
        <param name="windowSize">The size of window.</param>
        <param name="shiftSize">The size of shift.</param>
        <param name="mlpRatio">The ratio of MLP.</param>
        <param name="dropRatio">The ratio of drop.</param>
        <param name="localConvSize">The size of local convolution.</param>
        <param name="useShiftWindow">Whether use shift window.</param>
        <param name="useInterpolate">Whether use interpolation.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ML.TorchSharp.AutoFormerV2.AutoFormerV2Block" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.AutoFormerV2.AutoFormerV2Block.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="autoFormerV2Block.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="forward">
      <MemberSignature Language="C#" Value="public override TorchSharp.torch.Tensor forward (TorchSharp.torch.Tensor x, int h, int w, TorchSharp.torch.Tensor maskMatrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class TorchSharp.torch/Tensor forward(class TorchSharp.torch/Tensor x, int32 h, int32 w, class TorchSharp.torch/Tensor maskMatrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.AutoFormerV2.AutoFormerV2Block.forward(TorchSharp.torch.Tensor,System.Int32,System.Int32,TorchSharp.torch.Tensor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function forward (x As torch.Tensor, h As Integer, w As Integer, maskMatrix As torch.Tensor) As torch.Tensor" />
      <MemberSignature Language="F#" Value="override this.forward : TorchSharp.torch.Tensor * int * int * TorchSharp.torch.Tensor -&gt; TorchSharp.torch.Tensor" Usage="autoFormerV2Block.forward (x, h, w, maskMatrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TorchSharp.torch+Tensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="TorchSharp.torch+Tensor" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="maskMatrix" Type="TorchSharp.torch+Tensor" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="h">To be added.</param>
        <param name="w">To be added.</param>
        <param name="maskMatrix">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
