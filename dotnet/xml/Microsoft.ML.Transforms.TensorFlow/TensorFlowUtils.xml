<Type Name="TensorFlowUtils" FullName="Microsoft.ML.Transforms.TensorFlow.TensorFlowUtils">
  <TypeSignature Language="C#" Value="public static class TensorFlowUtils" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TensorFlowUtils extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.TensorFlow.TensorFlowUtils" />
  <TypeSignature Language="VB.NET" Value="Public Class TensorFlowUtils" />
  <TypeSignature Language="F#" Value="type TensorFlowUtils = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TensorFlow</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetModelNodes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;ValueTuple&lt;string,string,Microsoft.ML.Runtime.Data.ColumnType,string[]&gt;&gt; GetModelNodes (string modelFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;valuetype System.ValueTuple`4&lt;string, string, class Microsoft.ML.Runtime.Data.ColumnType, string[]&gt;&gt; GetModelNodes(string modelFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.TensorFlow.TensorFlowUtils.GetModelNodes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Iterator Function GetModelNodes (modelFile As String) As IEnumerable(Of ValueTuple(Of String, String, ColumnType, String()))" />
      <MemberSignature Language="F#" Value="static member GetModelNodes : string -&gt; seq&lt;ValueTuple&lt;string, string, Microsoft.ML.Runtime.Data.ColumnType, string[]&gt;&gt;" Usage="Microsoft.ML.Transforms.TensorFlow.TensorFlowUtils.GetModelNodes modelFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TensorFlow</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.ML.Transforms.TensorFlow.TensorFlowUtils/&lt;GetModelNodes&gt;d__4))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ValueTuple&lt;System.String,System.String,Microsoft.ML.Runtime.Data.ColumnType,System.String[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="modelFile"></param>
        <summary>
            This is a convenience method for iterating over the nodes of a TensorFlow model graph. It
            iterates over the columns of the <see cref="T:Microsoft.ML.Runtime.Data.ISchema" /> returned by <see cref="M:Microsoft.ML.Transforms.TensorFlow.TensorFlowUtils.GetModelSchema(Microsoft.ML.Runtime.IExceptionContext,System.String)" />,
            and for each one it returns a tuple containing the name, operation type, column type and an array of input node names.
            This method is convenient for filtering nodes based on certain criteria, for example, by the operation type.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModelSchema">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.ISchema GetModelSchema (Microsoft.ML.Runtime.IExceptionContext ectx, string modelFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.ISchema GetModelSchema(class Microsoft.ML.Runtime.IExceptionContext ectx, string modelFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.TensorFlow.TensorFlowUtils.GetModelSchema(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetModelSchema (ectx As IExceptionContext, modelFile As String) As ISchema" />
      <MemberSignature Language="F#" Value="static member GetModelSchema : Microsoft.ML.Runtime.IExceptionContext * string -&gt; Microsoft.ML.Runtime.Data.ISchema" Usage="Microsoft.ML.Transforms.TensorFlow.TensorFlowUtils.GetModelSchema (ectx, modelFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TensorFlow</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ISchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ectx" Type="Microsoft.ML.Runtime.IExceptionContext" />
        <Parameter Name="modelFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ectx">An <see cref="T:Microsoft.ML.Runtime.IExceptionContext" />.</param>
        <param name="modelFile">The name of the file containing the TensorFlow model. Currently only frozen model
            format is supported.</param>
        <summary>
            This method retrieves the information about the graph nodes of a TensorFlow model as an <see cref="T:Microsoft.ML.Runtime.Data.ISchema" />.
            For every node in the graph that has an output type that is compatible with the types supported by
            <see cref="T:Microsoft.ML.Transforms.TensorFlowTransform" />, the output schema contains a column with the name of that node, and the
            type of its output (including the item type and the shape, if it is known). Every column also contains metadata
            of kind <see cref="F:Microsoft.ML.Transforms.TensorFlow.TensorFlowUtils.OpType" />, indicating the operation type of the node, and if that node has inputs in the graph,
            it contains metadata of kind <see cref="F:Microsoft.ML.Transforms.TensorFlow.TensorFlowUtils.InputOps" />, indicating the names of the input nodes.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputOps">
      <MemberSignature Language="C#" Value="public const string InputOps;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string InputOps" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.TensorFlow.TensorFlowUtils.InputOps" />
      <MemberSignature Language="VB.NET" Value="Public Const InputOps As String " />
      <MemberSignature Language="F#" Value="val mutable InputOps : string" Usage="Microsoft.ML.Transforms.TensorFlow.TensorFlowUtils.InputOps" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TensorFlow</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadTensorFlowModel">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.TensorFlowModelInfo LoadTensorFlowModel (Microsoft.ML.Runtime.IHostEnvironment env, string modelPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.TensorFlowModelInfo LoadTensorFlowModel(class Microsoft.ML.Runtime.IHostEnvironment env, string modelPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.TensorFlow.TensorFlowUtils.LoadTensorFlowModel(Microsoft.ML.Runtime.IHostEnvironment,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadTensorFlowModel (env As IHostEnvironment, modelPath As String) As TensorFlowModelInfo" />
      <MemberSignature Language="F#" Value="static member LoadTensorFlowModel : Microsoft.ML.Runtime.IHostEnvironment * string -&gt; Microsoft.ML.Transforms.TensorFlowModelInfo" Usage="Microsoft.ML.Transforms.TensorFlow.TensorFlowUtils.LoadTensorFlowModel (env, modelPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TensorFlow</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.TensorFlowModelInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="modelPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="modelPath">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpType">
      <MemberSignature Language="C#" Value="public const string OpType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string OpType" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.TensorFlow.TensorFlowUtils.OpType" />
      <MemberSignature Language="VB.NET" Value="Public Const OpType As String " />
      <MemberSignature Language="F#" Value="val mutable OpType : string" Usage="Microsoft.ML.Transforms.TensorFlow.TensorFlowUtils.OpType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TensorFlow</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>