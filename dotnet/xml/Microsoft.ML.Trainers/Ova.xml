<Type Name="Ova" FullName="Microsoft.ML.Trainers.Ova">
  <TypeSignature Language="C#" Value="public sealed class Ova : Microsoft.ML.Trainers.MetaMulticlassTrainer&lt;Microsoft.ML.Data.MulticlassPredictionTransformer&lt;Microsoft.ML.Trainers.OvaModelParameters&gt;,Microsoft.ML.Trainers.OvaModelParameters&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Ova extends Microsoft.ML.Trainers.MetaMulticlassTrainer`2&lt;class Microsoft.ML.Data.MulticlassPredictionTransformer`1&lt;class Microsoft.ML.Trainers.OvaModelParameters&gt;, class Microsoft.ML.Trainers.OvaModelParameters&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.Ova" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Ova&#xA;Inherits MetaMulticlassTrainer(Of MulticlassPredictionTransformer(Of OvaModelParameters), OvaModelParameters)" />
  <TypeSignature Language="F#" Value="type Ova = class&#xA;    inherit MetaMulticlassTrainer&lt;MulticlassPredictionTransformer&lt;OvaModelParameters&gt;, OvaModelParameters&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.Learners.MetaMulticlassTrainer&lt;Microsoft.ML.Runtime.Data.MulticlassPredictionTransformer&lt;Microsoft.ML.Trainers.OvaPredictor&gt;,Microsoft.ML.Trainers.OvaPredictor&gt;</BaseTypeName>
    <BaseTypeName FrameworkAlternate="ml-dotnet">Microsoft.ML.Learners.MetaMulticlassTrainer&lt;Microsoft.ML.Data.MulticlassPredictionTransformer&lt;Microsoft.ML.Trainers.OvaModelParameters&gt;,Microsoft.ML.Trainers.OvaModelParameters&gt;</BaseTypeName>
    <BaseTypeName FrameworkAlternate="ml-dotnet">Microsoft.ML.Trainers.MetaMulticlassTrainer&lt;Microsoft.ML.Data.MulticlassPredictionTransformer&lt;Microsoft.ML.Trainers.OvaModelParameters&gt;,Microsoft.ML.Trainers.OvaModelParameters&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TTransformer">Microsoft.ML.Data.MulticlassPredictionTransformer&lt;Microsoft.ML.Trainers.OvaModelParameters&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TModel">Microsoft.ML.Trainers.OvaModelParameters</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Fit">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.Data.MulticlassPredictionTransformer&lt;Microsoft.ML.Trainers.OvaModelParameters&gt; Fit (Microsoft.Data.DataView.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.ML.Data.MulticlassPredictionTransformer`1&lt;class Microsoft.ML.Trainers.OvaModelParameters&gt; Fit(class Microsoft.Data.DataView.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.Ova.Fit(Microsoft.Data.DataView.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Fit (input As IDataView) As MulticlassPredictionTransformer(Of OvaModelParameters)" />
      <MemberSignature Language="F#" Value="override this.Fit : Microsoft.Data.DataView.IDataView -&gt; Microsoft.ML.Data.MulticlassPredictionTransformer&lt;Microsoft.ML.Trainers.OvaModelParameters&gt;" Usage="ova.Fit input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.MulticlassPredictionTransformer&lt;Microsoft.ML.Trainers.OvaModelParameters&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.Data.DataView.IDataView" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary> Trains and returns a <see cref="T:Microsoft.ML.Data.MulticlassPredictionTransformer`1" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>