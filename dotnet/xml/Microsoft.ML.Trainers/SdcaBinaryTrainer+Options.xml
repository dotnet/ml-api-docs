<Type Name="SdcaBinaryTrainer+Options" FullName="Microsoft.ML.Trainers.SdcaBinaryTrainer+Options">
  <TypeSignature Language="C#" Value="public sealed class SdcaBinaryTrainer.Options : Microsoft.ML.Trainers.SdcaTrainerBase&lt;Microsoft.ML.Trainers.SdcaBinaryTrainer.Options,Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Internal.Internallearn.IPredictorWithFeatureWeights&lt;float&gt;&gt;,Microsoft.ML.Internal.Internallearn.IPredictorWithFeatureWeights&lt;float&gt;&gt;.ArgumentsBase" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit SdcaBinaryTrainer/Options extends Microsoft.ML.Trainers.SdcaTrainerBase`3/ArgumentsBase&lt;class Microsoft.ML.Trainers.SdcaBinaryTrainer/Options, class Microsoft.ML.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Internal.Internallearn.IPredictorWithFeatureWeights`1&lt;float32&gt;&gt;, class Microsoft.ML.Internal.Internallearn.IPredictorWithFeatureWeights`1&lt;float32&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.SdcaBinaryTrainer.Options" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SdcaBinaryTrainer.Options&#xA;Inherits SdcaTrainerBase(Of SdcaBinaryTrainer.Options, BinaryPredictionTransformer(Of IPredictorWithFeatureWeights(Of Single)), IPredictorWithFeatureWeights(Of Single)).ArgumentsBase" />
  <TypeSignature Language="F#" Value="type SdcaBinaryTrainer.Options = class&#xA;    inherit SdcaTrainerBase&lt;SdcaBinaryTrainer.Options, BinaryPredictionTransformer&lt;IPredictorWithFeatureWeights&lt;single&gt;&gt;, IPredictorWithFeatureWeights&lt;single&gt;&gt;.ArgumentsBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Trainers.SdcaTrainerBase&lt;Microsoft.ML.Trainers.SdcaBinaryTrainer+Options,Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Internal.Internallearn.IPredictorWithFeatureWeights&lt;System.Single&gt;&gt;,Microsoft.ML.Internal.Internallearn.IPredictorWithFeatureWeights&lt;System.Single&gt;&gt;+ArgumentsBase</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TArgs">Microsoft.ML.Trainers.SdcaBinaryTrainer+Options</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TTransformer">Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Internal.Internallearn.IPredictorWithFeatureWeights&lt;System.Single&gt;&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TModel">Microsoft.ML.Internal.Internallearn.IPredictorWithFeatureWeights&lt;System.Single&gt;</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Options ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.SdcaBinaryTrainer.Options.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calibrator">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Internal.Calibration.ICalibratorTrainerFactory Calibrator;" />
      <MemberSignature Language="ILAsm" Value=".field public class Microsoft.ML.Internal.Calibration.ICalibratorTrainerFactory Calibrator" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.SdcaBinaryTrainer.Options.Calibrator" />
      <MemberSignature Language="VB.NET" Value="Public Calibrator As ICalibratorTrainerFactory " />
      <MemberSignature Language="F#" Value="val mutable Calibrator : Microsoft.ML.Internal.Calibration.ICalibratorTrainerFactory" Usage="Microsoft.ML.Trainers.SdcaBinaryTrainer.Options.Calibrator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="The calibrator kind to apply to the predictor. Specify null for no calibration", Visibility=Microsoft.ML.CommandLine.ArgumentAttribute+VisibilityType.EntryPointsOnly)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Internal.Calibration.ICalibratorTrainerFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LossFunction">
      <MemberSignature Language="C#" Value="public Microsoft.ML.ISupportSdcaClassificationLossFactory LossFunction;" />
      <MemberSignature Language="ILAsm" Value=".field public class Microsoft.ML.ISupportSdcaClassificationLossFactory LossFunction" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.SdcaBinaryTrainer.Options.LossFunction" />
      <MemberSignature Language="VB.NET" Value="Public LossFunction As ISupportSdcaClassificationLossFactory " />
      <MemberSignature Language="F#" Value="val mutable LossFunction : Microsoft.ML.ISupportSdcaClassificationLossFactory" Usage="Microsoft.ML.Trainers.SdcaBinaryTrainer.Options.LossFunction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.LastOccurenceWins, HelpText="Loss Function", ShortName="loss", SortOrder=50)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.ISupportSdcaClassificationLossFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCalibrationExamples">
      <MemberSignature Language="C#" Value="public int MaxCalibrationExamples;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 MaxCalibrationExamples" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.SdcaBinaryTrainer.Options.MaxCalibrationExamples" />
      <MemberSignature Language="VB.NET" Value="Public MaxCalibrationExamples As Integer " />
      <MemberSignature Language="F#" Value="val mutable MaxCalibrationExamples : int" Usage="Microsoft.ML.Trainers.SdcaBinaryTrainer.Options.MaxCalibrationExamples" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="The maximum number of examples to use when training the calibrator", Visibility=Microsoft.ML.CommandLine.ArgumentAttribute+VisibilityType.EntryPointsOnly)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PositiveInstanceWeight">
      <MemberSignature Language="C#" Value="public float PositiveInstanceWeight;" />
      <MemberSignature Language="ILAsm" Value=".field public float32 PositiveInstanceWeight" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.SdcaBinaryTrainer.Options.PositiveInstanceWeight" />
      <MemberSignature Language="VB.NET" Value="Public PositiveInstanceWeight As Single " />
      <MemberSignature Language="F#" Value="val mutable PositiveInstanceWeight : single" Usage="Microsoft.ML.Trainers.SdcaBinaryTrainer.Options.PositiveInstanceWeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Apply weight to the positive class, for imbalanced data", ShortName="piw")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>