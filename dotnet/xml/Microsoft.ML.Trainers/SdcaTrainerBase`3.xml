<Type Name="SdcaTrainerBase&lt;TArgs,TTransformer,TModel&gt;" FullName="Microsoft.ML.Trainers.SdcaTrainerBase&lt;TArgs,TTransformer,TModel&gt;">
  <TypeSignature Language="C#" Value="public abstract class SdcaTrainerBase&lt;TArgs,TTransformer,TModel&gt; : Microsoft.ML.Learners.StochasticTrainerBase&lt;TTransformer,TModel&gt; where TArgs : SdcaTrainerBase&lt;TArgs,TTransformer,TModel&gt;.ArgumentsBasenew() where TTransformer : ISingleFeaturePredictionTransformer&lt;TModel&gt; where TModel : IPredictor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SdcaTrainerBase`3&lt;.ctor (class Microsoft.ML.Trainers.SdcaTrainerBase`3/ArgumentsBase&lt;!TArgs, !TTransformer, !TModel&gt;) TArgs, (class Microsoft.ML.ISingleFeaturePredictionTransformer`1&lt;!TModel&gt;) TTransformer, (class Microsoft.ML.IPredictor) TModel&gt; extends Microsoft.ML.Learners.StochasticTrainerBase`2&lt;!TTransformer, !TModel&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.SdcaTrainerBase`3" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SdcaTrainerBase(Of TArgs, TTransformer, TModel)&#xA;Inherits StochasticTrainerBase(Of TTransformer, TModel)" />
  <TypeSignature Language="F#" Value="type SdcaTrainerBase&lt;'Args, 'ransformer, 'Model (requires 'Args :&gt; SdcaTrainerBase&lt;'Args, 'ransformer, 'Model&gt;.ArgumentsBase and 'Args : (new : unit -&gt; 'Args) and 'ransformer :&gt; ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; IPredictor)&gt; = class&#xA;    inherit StochasticTrainerBase&lt;'ransformer, 'Model (requires 'ransformer :&gt; ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; IPredictor)&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TArgs">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.ML.Trainers.SdcaTrainerBase&lt;TArgs,TTransformer,TModel&gt;+ArgumentsBase</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TTransformer">
      <Constraints>
        <InterfaceName>Microsoft.ML.Runtime.ISingleFeaturePredictionTransformer&lt;TModel&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TModel">
      <Constraints>
        <InterfaceName>Microsoft.ML.Runtime.IPredictor</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.Learners.StochasticTrainerBase&lt;TTransformer,TModel&gt;</BaseTypeName>
    <BaseTypeName FrameworkAlternate="ml-dotnet">Microsoft.ML.Learners.StochasticTrainerBase&lt;TTransformer,TModel&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TTransformer">TTransformer</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TModel">TModel</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TArgs">To be added.</typeparam>
    <typeparam name="TTransformer">To be added.</typeparam>
    <typeparam name="TModel">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Args">
      <MemberSignature Language="C#" Value="protected readonly TArgs Args;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly !TArgs Args" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.SdcaTrainerBase`3.Args" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Args As TArgs " />
      <MemberSignature Language="F#" Value="val mutable Args : 'Args" Usage="Microsoft.ML.Trainers.SdcaTrainerBase&lt;'Args, 'ransformer, 'Model (requires 'Args :&gt; Microsoft.ML.Trainers.SdcaTrainerBase&lt;'Args, 'ransformer, 'Model&gt;.ArgumentsBase and 'Args : (new : unit -&gt; 'Args) and 'ransformer :&gt; Microsoft.ML.ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; Microsoft.ML.IPredictor)&gt;.Args" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TArgs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePredictor">
      <MemberSignature Language="C#" Value="protected abstract TModel CreatePredictor (Microsoft.ML.Data.VBuffer&lt;float&gt;[] weights, float[] bias);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TModel CreatePredictor(valuetype Microsoft.ML.Data.VBuffer`1&lt;float32&gt;[] weights, float32[] bias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.SdcaTrainerBase`3.CreatePredictor(Microsoft.ML.Data.VBuffer{System.Single}[],System.Single[])" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreatePredictor (weights As VBuffer(Of Single)(), bias As Single()) As TModel" />
      <MemberSignature Language="F#" Value="abstract member CreatePredictor : Microsoft.ML.Data.VBuffer&lt;single&gt;[] * single[] -&gt; 'Model" Usage="sdcaTrainerBase.CreatePredictor (weights, bias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="weights" Type="Microsoft.ML.Data.VBuffer&lt;System.Single&gt;[]" />
        <Parameter Name="bias" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="weights">To be added.</param>
        <param name="bias">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndexFromIdAndRowGetter">
      <MemberSignature Language="C#" Value="protected Func&lt;Microsoft.Data.DataView.RowId,long,long&gt; GetIndexFromIdAndRowGetter (Microsoft.ML.Trainers.SdcaTrainerBase&lt;TArgs,TTransformer,TModel&gt;.IdToIdxLookup idToIdx, int biasLength);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Func`3&lt;valuetype Microsoft.Data.DataView.RowId, int64, int64&gt; GetIndexFromIdAndRowGetter(class Microsoft.ML.Trainers.SdcaTrainerBase`3/IdToIdxLookup&lt;!TArgs, !TTransformer, !TModel&gt; idToIdx, int32 biasLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.SdcaTrainerBase`3.GetIndexFromIdAndRowGetter(Microsoft.ML.Trainers.SdcaTrainerBase`3.IdToIdxLookup{`0,`1,`2},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetIndexFromIdAndRowGetter (idToIdx As SdcaTrainerBase(Of TArgs, TTransformer, TModel).IdToIdxLookup, biasLength As Integer) As Func(Of RowId, Long, Long)" />
      <MemberSignature Language="F#" Value="member this.GetIndexFromIdAndRowGetter : Microsoft.ML.Trainers.SdcaTrainerBase&lt;'Args, 'ransformer, 'Model (requires 'Args :&gt; Microsoft.ML.Trainers.SdcaTrainerBase&lt;'Args, 'ransformer, 'Model&gt;.ArgumentsBase and 'Args : (new : unit -&gt; 'Args) and 'ransformer :&gt; Microsoft.ML.ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; Microsoft.ML.IPredictor)&gt;.IdToIdxLookup * int -&gt; Func&lt;Microsoft.Data.DataView.RowId, int64, int64&gt;" Usage="sdcaTrainerBase.GetIndexFromIdAndRowGetter (idToIdx, biasLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.Data.DataView.RowId,System.Int64,System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idToIdx" Type="Microsoft.ML.Trainers.SdcaTrainerBase&lt;TArgs,TTransformer,TModel&gt;+IdToIdxLookup" />
        <Parameter Name="biasLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="idToIdx">To be added.</param>
        <param name="biasLength">To be added.</param>
        <summary>
            Returns a function delegate to retrieve index from id and row.
            Only works if the cursor is not shuffled.
            This is to avoid redundant conditional branches in the tight loop of training.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndexFromIdGetter">
      <MemberSignature Language="C#" Value="protected Func&lt;Microsoft.Data.DataView.RowId,long&gt; GetIndexFromIdGetter (Microsoft.ML.Trainers.SdcaTrainerBase&lt;TArgs,TTransformer,TModel&gt;.IdToIdxLookup idToIdx, int biasLength);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Func`2&lt;valuetype Microsoft.Data.DataView.RowId, int64&gt; GetIndexFromIdGetter(class Microsoft.ML.Trainers.SdcaTrainerBase`3/IdToIdxLookup&lt;!TArgs, !TTransformer, !TModel&gt; idToIdx, int32 biasLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.SdcaTrainerBase`3.GetIndexFromIdGetter(Microsoft.ML.Trainers.SdcaTrainerBase`3.IdToIdxLookup{`0,`1,`2},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetIndexFromIdGetter (idToIdx As SdcaTrainerBase(Of TArgs, TTransformer, TModel).IdToIdxLookup, biasLength As Integer) As Func(Of RowId, Long)" />
      <MemberSignature Language="F#" Value="member this.GetIndexFromIdGetter : Microsoft.ML.Trainers.SdcaTrainerBase&lt;'Args, 'ransformer, 'Model (requires 'Args :&gt; Microsoft.ML.Trainers.SdcaTrainerBase&lt;'Args, 'ransformer, 'Model&gt;.ArgumentsBase and 'Args : (new : unit -&gt; 'Args) and 'ransformer :&gt; Microsoft.ML.ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; Microsoft.ML.IPredictor)&gt;.IdToIdxLookup * int -&gt; Func&lt;Microsoft.Data.DataView.RowId, int64&gt;" Usage="sdcaTrainerBase.GetIndexFromIdGetter (idToIdx, biasLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.Data.DataView.RowId,System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idToIdx" Type="Microsoft.ML.Trainers.SdcaTrainerBase&lt;TArgs,TTransformer,TModel&gt;+IdToIdxLookup" />
        <Parameter Name="biasLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="idToIdx">To be added.</param>
        <param name="biasLength">To be added.</param>
        <summary>
            Returns a function delegate to retrieve index from id.
            This is to avoid redundant conditional branches in the tight loop of training.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeFeatureNormSquared">
      <MemberSignature Language="C#" Value="protected virtual float[] InitializeFeatureNormSquared (int length);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance float32[] InitializeFeatureNormSquared(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.SdcaTrainerBase`3.InitializeFeatureNormSquared(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InitializeFeatureNormSquared (length As Integer) As Single()" />
      <MemberSignature Language="F#" Value="abstract member InitializeFeatureNormSquared : int -&gt; single[]&#xA;override this.InitializeFeatureNormSquared : int -&gt; single[]" Usage="sdcaTrainerBase.InitializeFeatureNormSquared length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loss">
      <MemberSignature Language="C#" Value="protected Microsoft.ML.ISupportSdcaLoss Loss;" />
      <MemberSignature Language="ILAsm" Value=".field family class Microsoft.ML.ISupportSdcaLoss Loss" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.SdcaTrainerBase`3.Loss" />
      <MemberSignature Language="VB.NET" Value="Protected Loss As ISupportSdcaLoss " />
      <MemberSignature Language="F#" Value="val mutable Loss : Microsoft.ML.ISupportSdcaLoss" Usage="Microsoft.ML.Trainers.SdcaTrainerBase&lt;'Args, 'ransformer, 'Model (requires 'Args :&gt; Microsoft.ML.Trainers.SdcaTrainerBase&lt;'Args, 'ransformer, 'Model&gt;.ArgumentsBase and 'Args : (new : unit -&gt; 'Args) and 'ransformer :&gt; Microsoft.ML.ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; Microsoft.ML.IPredictor)&gt;.Loss" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.ISupportSdcaLoss</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShuffleData">
      <MemberSignature Language="C#" Value="protected override bool ShuffleData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShuffleData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.SdcaTrainerBase`3.ShuffleData" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ShuffleData As Boolean" />
      <MemberSignature Language="F#" Value="member this.ShuffleData : bool" Usage="Microsoft.ML.Trainers.SdcaTrainerBase&lt;'Args, 'ransformer, 'Model (requires 'Args :&gt; Microsoft.ML.Trainers.SdcaTrainerBase&lt;'Args, 'ransformer, 'Model&gt;.ArgumentsBase and 'Args : (new : unit -&gt; 'Args) and 'ransformer :&gt; Microsoft.ML.ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; Microsoft.ML.IPredictor)&gt;.ShuffleData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TuneDefaultL2">
      <MemberSignature Language="C#" Value="protected virtual float TuneDefaultL2 (Microsoft.ML.IChannel ch, int maxIterations, long rowCount, int numThreads);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance float32 TuneDefaultL2(class Microsoft.ML.IChannel ch, int32 maxIterations, int64 rowCount, int32 numThreads) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.SdcaTrainerBase`3.TuneDefaultL2(Microsoft.ML.IChannel,System.Int32,System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TuneDefaultL2 (ch As IChannel, maxIterations As Integer, rowCount As Long, numThreads As Integer) As Single" />
      <MemberSignature Language="F#" Value="abstract member TuneDefaultL2 : Microsoft.ML.IChannel * int * int64 * int -&gt; single&#xA;override this.TuneDefaultL2 : Microsoft.ML.IChannel * int * int64 * int -&gt; single" Usage="sdcaTrainerBase.TuneDefaultL2 (ch, maxIterations, rowCount, numThreads)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Microsoft.ML.IChannel" />
        <Parameter Name="maxIterations" Type="System.Int32" />
        <Parameter Name="rowCount" Type="System.Int64" />
        <Parameter Name="numThreads" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">To be added.</param>
        <param name="maxIterations">To be added.</param>
        <param name="rowCount">To be added.</param>
        <param name="numThreads">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WDot">
      <MemberSignature Language="C#" Value="protected float WDot (ref Microsoft.ML.Data.VBuffer&lt;float&gt; features, ref Microsoft.ML.Data.VBuffer&lt;float&gt; weights, float bias);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance float32 WDot([in]valuetype Microsoft.ML.Data.VBuffer`1&lt;float32&gt;&amp; features, [in]valuetype Microsoft.ML.Data.VBuffer`1&lt;float32&gt;&amp; weights, float32 bias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.SdcaTrainerBase`3.WDot(Microsoft.ML.Data.VBuffer{System.Single}@,Microsoft.ML.Data.VBuffer{System.Single}@,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Protected Function WDot (ByRef features As VBuffer(Of Single), ByRef weights As VBuffer(Of Single), bias As Single) As Single" />
      <MemberSignature Language="F#" Value="member this.WDot :  *  * single -&gt; single" Usage="sdcaTrainerBase.WDot (features, weights, bias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="features" Type="Microsoft.ML.Data.VBuffer&lt;System.Single&gt;" RefType="ref" />
        <Parameter Name="weights" Type="Microsoft.ML.Data.VBuffer&lt;System.Single&gt;" RefType="ref" />
        <Parameter Name="bias" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="features">To be added.</param>
        <param name="weights">To be added.</param>
        <param name="bias">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>