<Type Name="LbfgsLogisticRegressionBinaryTrainer+Options" FullName="Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer+Options">
  <TypeSignature Language="C#" Value="public sealed class LbfgsLogisticRegressionBinaryTrainer.Options : Microsoft.ML.Trainers.LbfgsTrainerBase&lt;Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer.Options,Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;,Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;.OptionsBase" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit LbfgsLogisticRegressionBinaryTrainer/Options extends Microsoft.ML.Trainers.LbfgsTrainerBase`3/OptionsBase&lt;class Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer/Options, class Microsoft.ML.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Calibrators.CalibratedModelParametersBase`2&lt;class Microsoft.ML.Trainers.LinearBinaryModelParameters, class Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;, class Microsoft.ML.Calibrators.CalibratedModelParametersBase`2&lt;class Microsoft.ML.Trainers.LinearBinaryModelParameters, class Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer.Options" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LbfgsLogisticRegressionBinaryTrainer.Options&#xA;Inherits LbfgsTrainerBase(Of LbfgsLogisticRegressionBinaryTrainer.Options, BinaryPredictionTransformer(Of CalibratedModelParametersBase(Of LinearBinaryModelParameters, PlattCalibrator)), CalibratedModelParametersBase(Of LinearBinaryModelParameters, PlattCalibrator)).OptionsBase" />
  <TypeSignature Language="F#" Value="type LbfgsLogisticRegressionBinaryTrainer.Options = class&#xA;    inherit LbfgsTrainerBase&lt;LbfgsLogisticRegressionBinaryTrainer.Options, BinaryPredictionTransformer&lt;CalibratedModelParametersBase&lt;LinearBinaryModelParameters, PlattCalibrator&gt;&gt;, CalibratedModelParametersBase&lt;LinearBinaryModelParameters, PlattCalibrator&gt;&gt;.OptionsBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Trainers.LbfgsTrainerBase&lt;Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer+Options,Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;,Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;+OptionsBase</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TOptions">Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer+Options</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TTransformer">Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TModel">Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Options ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer.Options.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeStandardDeviation">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.ComputeLogisticRegressionStandardDeviation ComputeStandardDeviation;" />
      <MemberSignature Language="ILAsm" Value=".field public class Microsoft.ML.Trainers.ComputeLogisticRegressionStandardDeviation ComputeStandardDeviation" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer.Options.ComputeStandardDeviation" />
      <MemberSignature Language="VB.NET" Value="Public ComputeStandardDeviation As ComputeLogisticRegressionStandardDeviation " />
      <MemberSignature Language="F#" Value="val mutable ComputeStandardDeviation : Microsoft.ML.Trainers.ComputeLogisticRegressionStandardDeviation" Usage="Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer.Options.ComputeStandardDeviation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.ComputeLogisticRegressionStandardDeviation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The instance of <see cref="T:Microsoft.ML.Trainers.ComputeLogisticRegressionStandardDeviation" /> that computes the std of the training statistics, at the end of training.
            The calculations are not part of Microsoft.ML package, due to the size of MKL.
            If you need these calculations, add the Microsoft.ML.Mkl.Components package, and initialize <see cref="F:Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer.Options.ComputeStandardDeviation" />.
            to the <see cref="T:Microsoft.ML.Trainers.ComputeLogisticRegressionStandardDeviation" /> implementation in the Microsoft.ML.Mkl.Components package.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTrainingStatistics">
      <MemberSignature Language="C#" Value="public bool ShowTrainingStatistics;" />
      <MemberSignature Language="ILAsm" Value=".field public bool ShowTrainingStatistics" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer.Options.ShowTrainingStatistics" />
      <MemberSignature Language="VB.NET" Value="Public ShowTrainingStatistics As Boolean " />
      <MemberSignature Language="F#" Value="val mutable ShowTrainingStatistics : bool" Usage="Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer.Options.ShowTrainingStatistics" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Show statistics of training examples.", ShortName="stat, ShowTrainingStats", SortOrder=50)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If set to <value>true</value> training statistics will be generated at the end of training.
            If you have a large number of learned training parameters(more than 500),
            generating the training statistics might take a few seconds.
            More than 1000 weights might take a few minutes. For those cases consider using the instance of <see cref="T:Microsoft.ML.Trainers.ComputeLogisticRegressionStandardDeviation" />
            present in the Microsoft.ML.Mkl.Components package. That computes the statistics using hardware acceleration.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>