<Type Name="LinearSvmBinaryClassifier" FullName="Microsoft.ML.Trainers.LinearSvmBinaryClassifier">
  <TypeSignature Language="C#" Value="public sealed class LinearSvmBinaryClassifier : Microsoft.ML.ILearningPipelineItem, Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITrainerInputWithLabel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LinearSvmBinaryClassifier extends System.Object implements class Microsoft.ML.ILearningPipelineItem, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITrainerInput, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITrainerInputWithLabel" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.LinearSvmBinaryClassifier" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LinearSvmBinaryClassifier&#xA;Implements CommonInputs.ITrainerInputWithLabel, ILearningPipelineItem" />
  <TypeSignature Language="F#" Value="type LinearSvmBinaryClassifier = class&#xA;    interface CommonInputs.ITrainerInputWithLabel&#xA;    interface CommonInputs.ITrainerInput&#xA;    interface ILearningPipelineItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinearSvmBinaryClassifier sealed : Microsoft::ML::ILearningPipelineItem, Microsoft::ML::Runtime::EntryPoints::CommonInputs::ITrainerInputWithLabel" />
  <TypeSignature Language="C++ CX" Value="public ref class LinearSvmBinaryClassifier sealed : Microsoft::ML::ILearningPipelineItem, Microsoft::ML::Runtime::EntryPoints::CommonInputs::ITrainerInputWithLabel" />
  <TypeSignature Language="C++ WINRT" Value="class LinearSvmBinaryClassifier sealed : Microsoft::ML::ILearningPipelineItem, Microsoft::ML::Runtime::EntryPoints::CommonInputs::ITrainerInputWithLabel" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.ILearningPipelineItem</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.EntryPoints.CommonInputs+ITrainerInputWithLabel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Train a linear SVM.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearSvmBinaryClassifier ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.LinearSvmBinaryClassifier.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearSvmBinaryClassifier();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; LinearSvmBinaryClassifier();" />
      <MemberSignature Language="C++ WINRT" Value=" LinearSvmBinaryClassifier();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyStep">
      <MemberSignature Language="C#" Value="public Microsoft.ML.ILearningPipelineStep ApplyStep (Microsoft.ML.ILearningPipelineStep previousStep, Microsoft.ML.Runtime.Experiment experiment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.ILearningPipelineStep ApplyStep(class Microsoft.ML.ILearningPipelineStep previousStep, class Microsoft.ML.Runtime.Experiment experiment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.LinearSvmBinaryClassifier.ApplyStep(Microsoft.ML.ILearningPipelineStep,Microsoft.ML.Runtime.Experiment)" />
      <MemberSignature Language="F#" Value="abstract member ApplyStep : Microsoft.ML.ILearningPipelineStep * Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.ILearningPipelineStep&#xA;override this.ApplyStep : Microsoft.ML.ILearningPipelineStep * Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.ILearningPipelineStep" Usage="linearSvmBinaryClassifier.ApplyStep (previousStep, experiment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::ML::ILearningPipelineStep ^ ApplyStep(Microsoft::ML::ILearningPipelineStep ^ previousStep, Microsoft::ML::Runtime::Experiment ^ experiment);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::ML::ILearningPipelineStep ^ ApplyStep(Microsoft::ML::ILearningPipelineStep ^ previousStep, Microsoft::ML::Runtime::Experiment ^ experiment);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::ML::ILearningPipelineStep ApplyStep(Microsoft::ML::ILearningPipelineStep const &amp; previousStep, Microsoft::ML::Runtime::Experiment const &amp; experiment);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.ILearningPipelineItem.ApplyStep(Microsoft.ML.ILearningPipelineStep,Microsoft.ML.Runtime.Experiment)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.ILearningPipelineStep</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previousStep" Type="Microsoft.ML.ILearningPipelineStep" />
        <Parameter Name="experiment" Type="Microsoft.ML.Runtime.Experiment" />
      </Parameters>
      <Docs>
        <param name="previousStep">To be added.</param>
        <param name="experiment">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchSize">
      <MemberSignature Language="C#" Value="public int BatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BatchSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LinearSvmBinaryClassifier.BatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Property BatchSize As Integer" />
      <MemberSignature Language="F#" Value="member this.BatchSize : int with get, set" Usage="Microsoft.ML.Trainers.LinearSvmBinaryClassifier.BatchSize" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int BatchSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Batch size
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caching">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.CachingOptions Caching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Models.CachingOptions Caching" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LinearSvmBinaryClassifier.Caching" />
      <MemberSignature Language="VB.NET" Value="Public Property Caching As CachingOptions" />
      <MemberSignature Language="F#" Value="member this.Caching : Microsoft.ML.Models.CachingOptions with get, set" Usage="Microsoft.ML.Trainers.LinearSvmBinaryClassifier.Caching" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ML::Models::CachingOptions Caching { Microsoft::ML::Models::CachingOptions get(); void set(Microsoft::ML::Models::CachingOptions value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::ML::Models::CachingOptions Caching { Microsoft::ML::Models::CachingOptions get(); void set(Microsoft::ML::Models::CachingOptions value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.CachingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether learner should cache input training data
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calibrator">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.CalibratorTrainer Calibrator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.CalibratorTrainer Calibrator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LinearSvmBinaryClassifier.Calibrator" />
      <MemberSignature Language="VB.NET" Value="Public Property Calibrator As CalibratorTrainer" />
      <MemberSignature Language="F#" Value="member this.Calibrator : Microsoft.ML.Runtime.CalibratorTrainer with get, set" Usage="Microsoft.ML.Trainers.LinearSvmBinaryClassifier.Calibrator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ML::Runtime::CalibratorTrainer ^ Calibrator { Microsoft::ML::Runtime::CalibratorTrainer ^ get(); void set(Microsoft::ML::Runtime::CalibratorTrainer ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::ML::Runtime::CalibratorTrainer ^ Calibrator { Microsoft::ML::Runtime::CalibratorTrainer ^ get(); void set(Microsoft::ML::Runtime::CalibratorTrainer ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonConverter(typeof(Microsoft.ML.Runtime.ComponentSerializer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.CalibratorTrainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The calibrator kind to apply to the predictor. Specify null for no calibration
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureColumn">
      <MemberSignature Language="C#" Value="public string FeatureColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FeatureColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LinearSvmBinaryClassifier.FeatureColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureColumn As String" />
      <MemberSignature Language="F#" Value="member this.FeatureColumn : string with get, set" Usage="Microsoft.ML.Trainers.LinearSvmBinaryClassifier.FeatureColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FeatureColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ FeatureColumn { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for features
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialWeights">
      <MemberSignature Language="C#" Value="public string InitialWeights { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InitialWeights" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LinearSvmBinaryClassifier.InitialWeights" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialWeights As String" />
      <MemberSignature Language="F#" Value="member this.InitialWeights : string with get, set" Usage="Microsoft.ML.Trainers.LinearSvmBinaryClassifier.InitialWeights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InitialWeights { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ InitialWeights { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Initial Weights and bias, comma-separated
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitWtsDiameter">
      <MemberSignature Language="C#" Value="public float InitWtsDiameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 InitWtsDiameter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LinearSvmBinaryClassifier.InitWtsDiameter" />
      <MemberSignature Language="VB.NET" Value="Public Property InitWtsDiameter As Single" />
      <MemberSignature Language="F#" Value="member this.InitWtsDiameter : single with get, set" Usage="Microsoft.ML.Trainers.LinearSvmBinaryClassifier.InitWtsDiameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float InitWtsDiameter { float get(); void set(float value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property float InitWtsDiameter { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableFloatParam("InitWtsDiameter", 0, 1, -1, 5, false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Init weights diameter
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelColumn">
      <MemberSignature Language="C#" Value="public string LabelColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LabelColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LinearSvmBinaryClassifier.LabelColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelColumn As String" />
      <MemberSignature Language="F#" Value="member this.LabelColumn : string with get, set" Usage="Microsoft.ML.Trainers.LinearSvmBinaryClassifier.LabelColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LabelColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ LabelColumn { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for labels
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public float Lambda { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Lambda" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LinearSvmBinaryClassifier.Lambda" />
      <MemberSignature Language="VB.NET" Value="Public Property Lambda As Single" />
      <MemberSignature Language="F#" Value="member this.Lambda : single with get, set" Usage="Microsoft.ML.Trainers.LinearSvmBinaryClassifier.Lambda" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Lambda { float get(); void set(float value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property float Lambda { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableFloatParam("Lambda", 1E-05, 0.1, 10, -1, true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Regularizer constant
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCalibrationExamples">
      <MemberSignature Language="C#" Value="public int MaxCalibrationExamples { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCalibrationExamples" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LinearSvmBinaryClassifier.MaxCalibrationExamples" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCalibrationExamples As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxCalibrationExamples : int with get, set" Usage="Microsoft.ML.Trainers.LinearSvmBinaryClassifier.MaxCalibrationExamples" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxCalibrationExamples { int get(); void set(int value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int MaxCalibrationExamples { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The maximum number of examples to use when training the calibrator
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoBias">
      <MemberSignature Language="C#" Value="public bool NoBias { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoBias" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LinearSvmBinaryClassifier.NoBias" />
      <MemberSignature Language="VB.NET" Value="Public Property NoBias As Boolean" />
      <MemberSignature Language="F#" Value="member this.NoBias : bool with get, set" Usage="Microsoft.ML.Trainers.LinearSvmBinaryClassifier.NoBias" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoBias { bool get(); void set(bool value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool NoBias { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableDiscreteParam("NoBias", Mono.Cecil.CustomAttributeArgument[], false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            No bias
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeFeatures">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.NormalizeOption NormalizeFeatures { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Models.NormalizeOption NormalizeFeatures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LinearSvmBinaryClassifier.NormalizeFeatures" />
      <MemberSignature Language="VB.NET" Value="Public Property NormalizeFeatures As NormalizeOption" />
      <MemberSignature Language="F#" Value="member this.NormalizeFeatures : Microsoft.ML.Models.NormalizeOption with get, set" Usage="Microsoft.ML.Trainers.LinearSvmBinaryClassifier.NormalizeFeatures" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ML::Models::NormalizeOption NormalizeFeatures { Microsoft::ML::Models::NormalizeOption get(); void set(Microsoft::ML::Models::NormalizeOption value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::ML::Models::NormalizeOption NormalizeFeatures { Microsoft::ML::Models::NormalizeOption get(); void set(Microsoft::ML::Models::NormalizeOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.NormalizeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Normalize option for the feature column
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumIterations">
      <MemberSignature Language="C#" Value="public int NumIterations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumIterations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LinearSvmBinaryClassifier.NumIterations" />
      <MemberSignature Language="VB.NET" Value="Public Property NumIterations As Integer" />
      <MemberSignature Language="F#" Value="member this.NumIterations : int with get, set" Usage="Microsoft.ML.Trainers.LinearSvmBinaryClassifier.NumIterations" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumIterations { int get(); void set(int value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int NumIterations { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableLongParam("NumIterations", 1, 100, 10, -1, true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Number of iterations
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformProjection">
      <MemberSignature Language="C#" Value="public bool PerformProjection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PerformProjection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LinearSvmBinaryClassifier.PerformProjection" />
      <MemberSignature Language="VB.NET" Value="Public Property PerformProjection As Boolean" />
      <MemberSignature Language="F#" Value="member this.PerformProjection : bool with get, set" Usage="Microsoft.ML.Trainers.LinearSvmBinaryClassifier.PerformProjection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PerformProjection { bool get(); void set(bool value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool PerformProjection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableDiscreteParam("PerformProjection", Mono.Cecil.CustomAttributeArgument[], false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Perform projection to unit-ball? Typically used with batch size &gt; 1.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shuffle">
      <MemberSignature Language="C#" Value="public bool Shuffle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shuffle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LinearSvmBinaryClassifier.Shuffle" />
      <MemberSignature Language="VB.NET" Value="Public Property Shuffle As Boolean" />
      <MemberSignature Language="F#" Value="member this.Shuffle : bool with get, set" Usage="Microsoft.ML.Trainers.LinearSvmBinaryClassifier.Shuffle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Shuffle { bool get(); void set(bool value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool Shuffle { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableDiscreteParam("Shuffle", Mono.Cecil.CustomAttributeArgument[], false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether to shuffle for each training iteration
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StreamingCacheSize">
      <MemberSignature Language="C#" Value="public int StreamingCacheSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StreamingCacheSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LinearSvmBinaryClassifier.StreamingCacheSize" />
      <MemberSignature Language="VB.NET" Value="Public Property StreamingCacheSize As Integer" />
      <MemberSignature Language="F#" Value="member this.StreamingCacheSize : int with get, set" Usage="Microsoft.ML.Trainers.LinearSvmBinaryClassifier.StreamingCacheSize" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StreamingCacheSize { int get(); void set(int value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int StreamingCacheSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Size of cache when trained in Scope
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainingData">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; TrainingData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; TrainingData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LinearSvmBinaryClassifier.TrainingData" />
      <MemberSignature Language="VB.NET" Value="Public Property TrainingData As Var(Of IDataView)" />
      <MemberSignature Language="F#" Value="member this.TrainingData : Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; with get, set" Usage="Microsoft.ML.Trainers.LinearSvmBinaryClassifier.TrainingData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ML::Runtime::EntryPoints::Var&lt;Microsoft::ML::Runtime::Data::IDataView ^&gt; ^ TrainingData { Microsoft::ML::Runtime::EntryPoints::Var&lt;Microsoft::ML::Runtime::Data::IDataView ^&gt; ^ get(); void set(Microsoft::ML::Runtime::EntryPoints::Var&lt;Microsoft::ML::Runtime::Data::IDataView ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITrainerInput.TrainingData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The data to be used for training
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>