<Type Name="GeneralizedAdditiveModelBinaryClassifier" FullName="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier">
  <TypeSignature Language="C#" Value="public sealed class GeneralizedAdditiveModelBinaryClassifier : Microsoft.ML.ILearningPipelineItem, Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITrainerInputWithWeight" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GeneralizedAdditiveModelBinaryClassifier extends System.Object implements class Microsoft.ML.ILearningPipelineItem, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITrainerInput, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITrainerInputWithLabel, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITrainerInputWithWeight" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GeneralizedAdditiveModelBinaryClassifier&#xA;Implements CommonInputs.ITrainerInputWithWeight, ILearningPipelineItem" />
  <TypeSignature Language="F#" Value="type GeneralizedAdditiveModelBinaryClassifier = class&#xA;    interface CommonInputs.ITrainerInputWithWeight&#xA;    interface CommonInputs.ITrainerInputWithLabel&#xA;    interface CommonInputs.ITrainerInput&#xA;    interface ILearningPipelineItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.ILearningPipelineItem</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.EntryPoints.CommonInputs+ITrainerInputWithWeight</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Trains a gradient boosted stump per feature, on all features simultaneously, to fit target values using least-squares. It mantains no interactions between features.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GeneralizedAdditiveModelBinaryClassifier ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyStep">
      <MemberSignature Language="C#" Value="public Microsoft.ML.ILearningPipelineStep ApplyStep (Microsoft.ML.ILearningPipelineStep previousStep, Microsoft.ML.Runtime.Experiment experiment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.ILearningPipelineStep ApplyStep(class Microsoft.ML.ILearningPipelineStep previousStep, class Microsoft.ML.Runtime.Experiment experiment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.ApplyStep(Microsoft.ML.ILearningPipelineStep,Microsoft.ML.Runtime.Experiment)" />
      <MemberSignature Language="F#" Value="abstract member ApplyStep : Microsoft.ML.ILearningPipelineStep * Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.ILearningPipelineStep&#xA;override this.ApplyStep : Microsoft.ML.ILearningPipelineStep * Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.ILearningPipelineStep" Usage="generalizedAdditiveModelBinaryClassifier.ApplyStep (previousStep, experiment)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.ILearningPipelineItem.ApplyStep(Microsoft.ML.ILearningPipelineStep,Microsoft.ML.Runtime.Experiment)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.ILearningPipelineStep</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previousStep" Type="Microsoft.ML.ILearningPipelineStep" />
        <Parameter Name="experiment" Type="Microsoft.ML.Runtime.Experiment" />
      </Parameters>
      <Docs>
        <param name="previousStep">To be added.</param>
        <param name="experiment">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caching">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.CachingOptions Caching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Models.CachingOptions Caching" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.Caching" />
      <MemberSignature Language="VB.NET" Value="Public Property Caching As CachingOptions" />
      <MemberSignature Language="F#" Value="member this.Caching : Microsoft.ML.Models.CachingOptions with get, set" Usage="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.Caching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.CachingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether learner should cache input training data
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calibrator">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.CalibratorTrainer Calibrator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.CalibratorTrainer Calibrator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.Calibrator" />
      <MemberSignature Language="VB.NET" Value="Public Property Calibrator As CalibratorTrainer" />
      <MemberSignature Language="F#" Value="member this.Calibrator : Microsoft.ML.Runtime.CalibratorTrainer with get, set" Usage="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.Calibrator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonConverter(typeof(Microsoft.ML.Runtime.ComponentSerializer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.CalibratorTrainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The calibrator kind to apply to the predictor. Specify null for no calibration
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiskTranspose">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; DiskTranspose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; DiskTranspose" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.DiskTranspose" />
      <MemberSignature Language="VB.NET" Value="Public Property DiskTranspose As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.DiskTranspose : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.DiskTranspose" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether to utilize the disk or the data's native transposition facilities (where applicable) when performing the transpose
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntropyCoefficient">
      <MemberSignature Language="C#" Value="public double EntropyCoefficient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 EntropyCoefficient" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.EntropyCoefficient" />
      <MemberSignature Language="VB.NET" Value="Public Property EntropyCoefficient As Double" />
      <MemberSignature Language="F#" Value="member this.EntropyCoefficient : double with get, set" Usage="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.EntropyCoefficient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The entropy (regularization) coefficient between 0 and 1
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureColumn">
      <MemberSignature Language="C#" Value="public string FeatureColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FeatureColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.FeatureColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureColumn As String" />
      <MemberSignature Language="F#" Value="member this.FeatureColumn : string with get, set" Usage="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.FeatureColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for features
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureFlocks">
      <MemberSignature Language="C#" Value="public bool FeatureFlocks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FeatureFlocks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.FeatureFlocks" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureFlocks As Boolean" />
      <MemberSignature Language="F#" Value="member this.FeatureFlocks : bool with get, set" Usage="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.FeatureFlocks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether to collectivize features during dataset preparation to speed up training
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GainConfidenceLevel">
      <MemberSignature Language="C#" Value="public int GainConfidenceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GainConfidenceLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.GainConfidenceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property GainConfidenceLevel As Integer" />
      <MemberSignature Language="F#" Value="member this.GainConfidenceLevel : int with get, set" Usage="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.GainConfidenceLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Tree fitting gain confidence requirement (should be in the range [0,1) ).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDerivativesSampleRate">
      <MemberSignature Language="C#" Value="public int GetDerivativesSampleRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GetDerivativesSampleRate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.GetDerivativesSampleRate" />
      <MemberSignature Language="VB.NET" Value="Public Property GetDerivativesSampleRate As Integer" />
      <MemberSignature Language="F#" Value="member this.GetDerivativesSampleRate : int with get, set" Usage="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.GetDerivativesSampleRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sample each query 1 in k times in the GetDerivatives function
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInputData">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; GetInputData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; GetInputData() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.GetInputData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInputData () As Var(Of IDataView)" />
      <MemberSignature Language="F#" Value="abstract member GetInputData : unit -&gt; Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;&#xA;override this.GetInputData : unit -&gt; Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;" Usage="generalizedAdditiveModelBinaryClassifier.GetInputData " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.ILearningPipelineItem.GetInputData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelColumn">
      <MemberSignature Language="C#" Value="public string LabelColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LabelColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.LabelColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelColumn As String" />
      <MemberSignature Language="F#" Value="member this.LabelColumn : string with get, set" Usage="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.LabelColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for labels
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LearningRates">
      <MemberSignature Language="C#" Value="public double LearningRates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LearningRates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.LearningRates" />
      <MemberSignature Language="VB.NET" Value="Public Property LearningRates As Double" />
      <MemberSignature Language="F#" Value="member this.LearningRates : double with get, set" Usage="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.LearningRates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableFloatParam("LearningRates", 0.001, 0.1, -1, -1, true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The learning rate
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBins">
      <MemberSignature Language="C#" Value="public int MaxBins { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBins" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.MaxBins" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBins As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxBins : int with get, set" Usage="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.MaxBins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Maximum number of distinct values (bins) per feature
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCalibrationExamples">
      <MemberSignature Language="C#" Value="public int MaxCalibrationExamples { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCalibrationExamples" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.MaxCalibrationExamples" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCalibrationExamples As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxCalibrationExamples : int with get, set" Usage="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.MaxCalibrationExamples" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The maximum number of examples to use when training the calibrator
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxOutput">
      <MemberSignature Language="C#" Value="public double MaxOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxOutput" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.MaxOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxOutput As Double" />
      <MemberSignature Language="F#" Value="member this.MaxOutput : double with get, set" Usage="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.MaxOutput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Upper bound on absolute value of single output
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinDocuments">
      <MemberSignature Language="C#" Value="public int MinDocuments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinDocuments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.MinDocuments" />
      <MemberSignature Language="VB.NET" Value="Public Property MinDocuments As Integer" />
      <MemberSignature Language="F#" Value="member this.MinDocuments : int with get, set" Usage="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.MinDocuments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableDiscreteParam("MinDocuments", Mono.Cecil.CustomAttributeArgument[], false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Minimum number of training instances required to form a partition
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeFeatures">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.NormalizeOption NormalizeFeatures { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Models.NormalizeOption NormalizeFeatures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.NormalizeFeatures" />
      <MemberSignature Language="VB.NET" Value="Public Property NormalizeFeatures As NormalizeOption" />
      <MemberSignature Language="F#" Value="member this.NormalizeFeatures : Microsoft.ML.Models.NormalizeOption with get, set" Usage="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.NormalizeFeatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.NormalizeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Normalize option for the feature column
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumIterations">
      <MemberSignature Language="C#" Value="public int NumIterations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumIterations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.NumIterations" />
      <MemberSignature Language="VB.NET" Value="Public Property NumIterations As Integer" />
      <MemberSignature Language="F#" Value="member this.NumIterations : int with get, set" Usage="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.NumIterations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableDiscreteParam("NumIterations", Mono.Cecil.CustomAttributeArgument[], false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Total number of iterations over all features
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumThreads">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; NumThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; NumThreads" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.NumThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property NumThreads As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.NumThreads : Nullable&lt;int&gt; with get, set" Usage="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.NumThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The number of threads to use
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RngSeed">
      <MemberSignature Language="C#" Value="public int RngSeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RngSeed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.RngSeed" />
      <MemberSignature Language="VB.NET" Value="Public Property RngSeed As Integer" />
      <MemberSignature Language="F#" Value="member this.RngSeed : int with get, set" Usage="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.RngSeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The seed of the random number generator
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainingData">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; TrainingData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; TrainingData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.TrainingData" />
      <MemberSignature Language="VB.NET" Value="Public Property TrainingData As Var(Of IDataView)" />
      <MemberSignature Language="F#" Value="member this.TrainingData : Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; with get, set" Usage="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.TrainingData" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITrainerInput.TrainingData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The data to be used for training
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnbalancedSets">
      <MemberSignature Language="C#" Value="public bool UnbalancedSets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnbalancedSets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.UnbalancedSets" />
      <MemberSignature Language="VB.NET" Value="Public Property UnbalancedSets As Boolean" />
      <MemberSignature Language="F#" Value="member this.UnbalancedSets : bool with get, set" Usage="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.UnbalancedSets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Should we use derivatives optimized for unbalanced sets
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeightColumn">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Optional&lt;string&gt; WeightColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Optional`1&lt;string&gt; WeightColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.WeightColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property WeightColumn As Optional(Of String)" />
      <MemberSignature Language="F#" Value="member this.WeightColumn : Microsoft.ML.Runtime.EntryPoints.Optional&lt;string&gt; with get, set" Usage="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.WeightColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Optional&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for example weight
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
