<Type Name="RandomModelParameters" FullName="Microsoft.ML.Trainers.RandomModelParameters">
  <TypeSignature Language="C#" Value="public sealed class RandomModelParameters : Microsoft.ML.Internal.Internallearn.ModelParametersBase&lt;float&gt;, Microsoft.ML.IDistPredictorProducing&lt;float,float&gt;, Microsoft.ML.IPredictorProducing&lt;float&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RandomModelParameters extends Microsoft.ML.Internal.Internallearn.ModelParametersBase`1&lt;float32&gt; implements class Microsoft.ML.IDistPredictorProducing`2&lt;float32, float32&gt;, class Microsoft.ML.IPredictor, class Microsoft.ML.IPredictorProducing`1&lt;float32&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.RandomModelParameters" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RandomModelParameters&#xA;Inherits ModelParametersBase(Of Single)&#xA;Implements IDistPredictorProducing(Of Single, Single), IPredictorProducing(Of Single)" />
  <TypeSignature Language="F#" Value="type RandomModelParameters = class&#xA;    inherit ModelParametersBase&lt;single&gt;&#xA;    interface IDistPredictorProducing&lt;single, single&gt;&#xA;    interface IPredictorProducing&lt;single&gt;&#xA;    interface IPredictor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Internal.Internallearn.ModelParametersBase&lt;System.Single&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Single</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.IDistPredictorProducing&lt;System.Single,System.Single&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.IPredictor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.IPredictorProducing&lt;System.Single&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.IPredictorProducing&lt;TResult&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            The predictor implements the Predict() interface. The predictor returns a
             uniform random probability and classification assignment.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RandomModelParameters (Microsoft.ML.IHostEnvironment env, int seed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, int32 seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.RandomModelParameters.#ctor(Microsoft.ML.IHostEnvironment,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, seed As Integer)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Trainers.RandomModelParameters : Microsoft.ML.IHostEnvironment * int -&gt; Microsoft.ML.Trainers.RandomModelParameters" Usage="new Microsoft.ML.Trainers.RandomModelParameters (env, seed)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="seed" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="env">The host environment.</param>
        <param name="seed">The random seed.</param>
        <summary>
            Instantiate a model that returns a uniform random probability.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictionKind">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.PredictionKind PredictionKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.PredictionKind PredictionKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.RandomModelParameters.PredictionKind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PredictionKind As PredictionKind" />
      <MemberSignature Language="F#" Value="member this.PredictionKind : Microsoft.ML.PredictionKind" Usage="Microsoft.ML.Trainers.RandomModelParameters.PredictionKind" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.IPredictor.PredictionKind</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.PredictionKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>