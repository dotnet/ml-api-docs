<Type Name="PcaAnomalyDetector" FullName="Microsoft.ML.Trainers.PcaAnomalyDetector">
  <TypeSignature Language="C#" Value="public sealed class PcaAnomalyDetector : Microsoft.ML.ILearningPipelineItem, Microsoft.ML.Runtime.EntryPoints.CommonInputs.IUnsupervisedTrainerWithWeight" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PcaAnomalyDetector extends System.Object implements class Microsoft.ML.ILearningPipelineItem, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITrainerInput, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/IUnsupervisedTrainerWithWeight" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.PcaAnomalyDetector" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PcaAnomalyDetector&#xA;Implements CommonInputs.IUnsupervisedTrainerWithWeight, ILearningPipelineItem" />
  <TypeSignature Language="F#" Value="type PcaAnomalyDetector = class&#xA;    interface CommonInputs.IUnsupervisedTrainerWithWeight&#xA;    interface CommonInputs.ITrainerInput&#xA;    interface ILearningPipelineItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.ILearningPipelineItem</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.EntryPoints.CommonInputs+IUnsupervisedTrainerWithWeight</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
        PCA is a dimensionality-reduction transform which computes the projection of the feature vector onto a low-rank subspace. 
      </summary>
    <remarks>
      <a href="https://en.wikipedia.org/wiki/Principal_component_analysis">Principle Component Analysis (PCA)</a> is a dimensionality-reduction algorithm which computes the projection of the feature vector to onto a low-rank subspace.
      Its training is done using the technique described in the paper: <a href="https://arxiv.org/pdf/1310.6304v2.pdf">Combining Structured and Unstructured Randomness in Large Scale PCA</a>,
      and the paper <a href="https://arxiv.org/pdf/0909.4061v2.pdf">Finding Structure with Randomness: Probabilistic Algorithms for Constructing Approximate Matrix Decompositions</a><para>For more information, see also:</para><list type="bullet"><item><description><a href="http://web.stanford.edu/group/mmds/slides2010/Martinsson.pdf">Randomized Methods for Computing the Singular Value Decomposition (SVD) of very large matrices</a></description></item><item><description><a href="https://arxiv.org/abs/0809.2274">A randomized algorithm for principal component analysis</a></description></item><item><description><a href="http://users.cms.caltech.edu/~jtropp/papers/HMT11-Finding-Structure-SIREV.pdf">Finding Structure with Randomness: Probabilistic Algorithms for Constructing Approximate Matrix Decompositions</a></description></item></list></remarks>
    <example>
      <code language="csharp">
          new PcaAnomalyDetector
          {
            Rank = 40,
            Oversampling = 40,
            NormalizeFeatures = Microsoft.ML.Models.NormalizeOption.Warn
          }
        </code>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PcaAnomalyDetector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.PcaAnomalyDetector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyStep">
      <MemberSignature Language="C#" Value="public Microsoft.ML.ILearningPipelineStep ApplyStep (Microsoft.ML.ILearningPipelineStep previousStep, Microsoft.ML.Runtime.Experiment experiment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.ILearningPipelineStep ApplyStep(class Microsoft.ML.ILearningPipelineStep previousStep, class Microsoft.ML.Runtime.Experiment experiment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.PcaAnomalyDetector.ApplyStep(Microsoft.ML.ILearningPipelineStep,Microsoft.ML.Runtime.Experiment)" />
      <MemberSignature Language="F#" Value="abstract member ApplyStep : Microsoft.ML.ILearningPipelineStep * Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.ILearningPipelineStep&#xA;override this.ApplyStep : Microsoft.ML.ILearningPipelineStep * Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.ILearningPipelineStep" Usage="pcaAnomalyDetector.ApplyStep (previousStep, experiment)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.ILearningPipelineItem.ApplyStep(Microsoft.ML.ILearningPipelineStep,Microsoft.ML.Runtime.Experiment)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.ILearningPipelineStep</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previousStep" Type="Microsoft.ML.ILearningPipelineStep" />
        <Parameter Name="experiment" Type="Microsoft.ML.Runtime.Experiment" />
      </Parameters>
      <Docs>
        <param name="previousStep">To be added.</param>
        <param name="experiment">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caching">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.CachingOptions Caching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Models.CachingOptions Caching" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.PcaAnomalyDetector.Caching" />
      <MemberSignature Language="VB.NET" Value="Public Property Caching As CachingOptions" />
      <MemberSignature Language="F#" Value="member this.Caching : Microsoft.ML.Models.CachingOptions with get, set" Usage="Microsoft.ML.Trainers.PcaAnomalyDetector.Caching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.CachingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether learner should cache input training data
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Center">
      <MemberSignature Language="C#" Value="public bool Center { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Center" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.PcaAnomalyDetector.Center" />
      <MemberSignature Language="VB.NET" Value="Public Property Center As Boolean" />
      <MemberSignature Language="F#" Value="member this.Center : bool with get, set" Usage="Microsoft.ML.Trainers.PcaAnomalyDetector.Center" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableDiscreteParam("Center", Mono.Cecil.CustomAttributeArgument[], false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If enabled, data is centered to be zero mean
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureColumn">
      <MemberSignature Language="C#" Value="public string FeatureColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FeatureColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.PcaAnomalyDetector.FeatureColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureColumn As String" />
      <MemberSignature Language="F#" Value="member this.FeatureColumn : string with get, set" Usage="Microsoft.ML.Trainers.PcaAnomalyDetector.FeatureColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for features
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInputData">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; GetInputData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; GetInputData() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.PcaAnomalyDetector.GetInputData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInputData () As Var(Of IDataView)" />
      <MemberSignature Language="F#" Value="abstract member GetInputData : unit -&gt; Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;&#xA;override this.GetInputData : unit -&gt; Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;" Usage="pcaAnomalyDetector.GetInputData " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.ILearningPipelineItem.GetInputData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeFeatures">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.NormalizeOption NormalizeFeatures { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Models.NormalizeOption NormalizeFeatures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.PcaAnomalyDetector.NormalizeFeatures" />
      <MemberSignature Language="VB.NET" Value="Public Property NormalizeFeatures As NormalizeOption" />
      <MemberSignature Language="F#" Value="member this.NormalizeFeatures : Microsoft.ML.Models.NormalizeOption with get, set" Usage="Microsoft.ML.Trainers.PcaAnomalyDetector.NormalizeFeatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.NormalizeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Normalize option for the feature column
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Oversampling">
      <MemberSignature Language="C#" Value="public int Oversampling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Oversampling" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.PcaAnomalyDetector.Oversampling" />
      <MemberSignature Language="VB.NET" Value="Public Property Oversampling As Integer" />
      <MemberSignature Language="F#" Value="member this.Oversampling : int with get, set" Usage="Microsoft.ML.Trainers.PcaAnomalyDetector.Oversampling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableDiscreteParam("Oversampling", Mono.Cecil.CustomAttributeArgument[], false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Oversampling parameter for randomized PCA training
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rank">
      <MemberSignature Language="C#" Value="public int Rank { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rank" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.PcaAnomalyDetector.Rank" />
      <MemberSignature Language="VB.NET" Value="Public Property Rank As Integer" />
      <MemberSignature Language="F#" Value="member this.Rank : int with get, set" Usage="Microsoft.ML.Trainers.PcaAnomalyDetector.Rank" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableDiscreteParam("Rank", Mono.Cecil.CustomAttributeArgument[], false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The number of components in the PCA
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Seed">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; Seed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Seed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.PcaAnomalyDetector.Seed" />
      <MemberSignature Language="VB.NET" Value="Public Property Seed As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Seed : Nullable&lt;int&gt; with get, set" Usage="Microsoft.ML.Trainers.PcaAnomalyDetector.Seed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The seed for random number generation
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainingData">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; TrainingData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; TrainingData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.PcaAnomalyDetector.TrainingData" />
      <MemberSignature Language="VB.NET" Value="Public Property TrainingData As Var(Of IDataView)" />
      <MemberSignature Language="F#" Value="member this.TrainingData : Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; with get, set" Usage="Microsoft.ML.Trainers.PcaAnomalyDetector.TrainingData" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITrainerInput.TrainingData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The data to be used for training
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeightColumn">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Optional&lt;string&gt; WeightColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Optional`1&lt;string&gt; WeightColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.PcaAnomalyDetector.WeightColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property WeightColumn As Optional(Of String)" />
      <MemberSignature Language="F#" Value="member this.WeightColumn : Microsoft.ML.Runtime.EntryPoints.Optional&lt;string&gt; with get, set" Usage="Microsoft.ML.Trainers.PcaAnomalyDetector.WeightColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Optional&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for example weight
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>