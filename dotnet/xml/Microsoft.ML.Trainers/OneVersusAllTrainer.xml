<Type Name="OneVersusAllTrainer" FullName="Microsoft.ML.Trainers.OneVersusAllTrainer">
  <TypeSignature Language="C#" Value="public sealed class OneVersusAllTrainer : Microsoft.ML.Trainers.MetaMulticlassTrainer&lt;Microsoft.ML.Data.MulticlassPredictionTransformer&lt;Microsoft.ML.Trainers.OneVersusAllModelParameters&gt;,Microsoft.ML.Trainers.OneVersusAllModelParameters&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OneVersusAllTrainer extends Microsoft.ML.Trainers.MetaMulticlassTrainer`2&lt;class Microsoft.ML.Data.MulticlassPredictionTransformer`1&lt;class Microsoft.ML.Trainers.OneVersusAllModelParameters&gt;, class Microsoft.ML.Trainers.OneVersusAllModelParameters&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.OneVersusAllTrainer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OneVersusAllTrainer&#xA;Inherits MetaMulticlassTrainer(Of MulticlassPredictionTransformer(Of OneVersusAllModelParameters), OneVersusAllModelParameters)" />
  <TypeSignature Language="F#" Value="type OneVersusAllTrainer = class&#xA;    inherit MetaMulticlassTrainer&lt;MulticlassPredictionTransformer&lt;OneVersusAllModelParameters&gt;, OneVersusAllModelParameters&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Trainers.MetaMulticlassTrainer&lt;Microsoft.ML.Data.MulticlassPredictionTransformer&lt;Microsoft.ML.Trainers.OneVersusAllModelParameters&gt;,Microsoft.ML.Trainers.OneVersusAllModelParameters&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TTransformer">Microsoft.ML.Data.MulticlassPredictionTransformer&lt;Microsoft.ML.Trainers.OneVersusAllModelParameters&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TModel">Microsoft.ML.Trainers.OneVersusAllModelParameters</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Fit">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.Data.MulticlassPredictionTransformer&lt;Microsoft.ML.Trainers.OneVersusAllModelParameters&gt; Fit (Microsoft.ML.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.ML.Data.MulticlassPredictionTransformer`1&lt;class Microsoft.ML.Trainers.OneVersusAllModelParameters&gt; Fit(class Microsoft.ML.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.OneVersusAllTrainer.Fit(Microsoft.ML.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Fit (input As IDataView) As MulticlassPredictionTransformer(Of OneVersusAllModelParameters)" />
      <MemberSignature Language="F#" Value="override this.Fit : Microsoft.ML.IDataView -&gt; Microsoft.ML.Data.MulticlassPredictionTransformer&lt;Microsoft.ML.Trainers.OneVersusAllModelParameters&gt;" Usage="oneVersusAllTrainer.Fit input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.MulticlassPredictionTransformer&lt;Microsoft.ML.Trainers.OneVersusAllModelParameters&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.IDataView" />
      </Parameters>
      <Docs>
        <param name="input">The input data.</param>
        <summary> Trains a <see cref="T:Microsoft.ML.Data.MulticlassPredictionTransformer`1" /> model.</summary>
        <returns>A <see cref="T:Microsoft.ML.Data.MulticlassPredictionTransformer`1" /> model./&gt;</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>