<Type Name="SgdBinaryTrainerBase&lt;TModel&gt;+OptionsBase" FullName="Microsoft.ML.Trainers.SgdBinaryTrainerBase&lt;TModel&gt;+OptionsBase">
  <TypeSignature Language="C#" Value="public class SgdBinaryTrainerBase&lt;TModel&gt;.OptionsBase : Microsoft.ML.Trainers.TrainerInputBaseWithWeight where TModel : class" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit SgdBinaryTrainerBase`1/OptionsBase&lt;class TModel&gt; extends Microsoft.ML.Trainers.TrainerInputBaseWithWeight" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.SgdBinaryTrainerBase`1.OptionsBase" />
  <TypeSignature Language="VB.NET" Value="Public Class SgdBinaryTrainerBase(Of TModel).OptionsBase&#xA;Inherits TrainerInputBaseWithWeight" />
  <TypeSignature Language="F#" Value="type SgdBinaryTrainerBase&lt;'Model (requires 'Model : null)&gt;.OptionsBase = class&#xA;    inherit TrainerInputBaseWithWeight" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TModel">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.Trainers.TrainerInputBaseWithWeight</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OptionsBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.SgdBinaryTrainerBase`1.OptionsBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckFrequency">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; CheckFrequency;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Nullable`1&lt;int32&gt; CheckFrequency" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.SgdBinaryTrainerBase`1.OptionsBase.CheckFrequency" />
      <MemberSignature Language="VB.NET" Value="Public CheckFrequency As Nullable(Of Integer) " />
      <MemberSignature Language="F#" Value="val mutable CheckFrequency : Nullable&lt;int&gt;" Usage="Microsoft.ML.Trainers.SgdBinaryTrainerBase&lt;'Model (requires 'Model : null)&gt;.OptionsBase.CheckFrequency" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Convergence check frequency (in terms of number of iterations). Default equals number of threads", ShortName="checkFreq")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Determines the frequency of checking for convergence in terms of number of iterations.
            </summary>
        <returns>
            Default equals <see cref="F:Microsoft.ML.Trainers.SgdBinaryTrainerBase`1.OptionsBase.NumberOfThreads" />."
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvergenceTolerance">
      <MemberSignature Language="C#" Value="public double ConvergenceTolerance;" />
      <MemberSignature Language="ILAsm" Value=".field public float64 ConvergenceTolerance" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.SgdBinaryTrainerBase`1.OptionsBase.ConvergenceTolerance" />
      <MemberSignature Language="VB.NET" Value="Public ConvergenceTolerance As Double " />
      <MemberSignature Language="F#" Value="val mutable ConvergenceTolerance : double" Usage="Microsoft.ML.Trainers.SgdBinaryTrainerBase&lt;'Model (requires 'Model : null)&gt;.OptionsBase.ConvergenceTolerance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Exponential moving averaged improvement tolerance for convergence", ShortName="tol")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/SweepableDiscreteParam("ConvergenceTolerance", new System.Object[] { Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument }, false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.Internal.Internallearn.TGUI(SuggestedSweeps="1e-2,1e-3,1e-4,1e-5")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The convergence tolerance. If the exponential moving average of loss reductions falls below this tolerance,
            the algorithm is deemed to have converged and will stop.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="L2Regularization">
      <MemberSignature Language="C#" Value="public float L2Regularization;" />
      <MemberSignature Language="ILAsm" Value=".field public float32 L2Regularization" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.SgdBinaryTrainerBase`1.OptionsBase.L2Regularization" />
      <MemberSignature Language="VB.NET" Value="Public L2Regularization As Single " />
      <MemberSignature Language="F#" Value="val mutable L2Regularization : single" Usage="Microsoft.ML.Trainers.SgdBinaryTrainerBase&lt;'Model (requires 'Model : null)&gt;.OptionsBase.L2Regularization" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="L2 Regularization constant", ShortName="l2, L2Weight", SortOrder=50)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/SweepableDiscreteParam("L2Const", new System.Object[] { Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument }, false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.Internal.Internallearn.TGUI(Label="L2 Regularization Constant", SuggestedSweeps="1e-7,5e-7,1e-6,5e-6,1e-5")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The L2 weight for <a href="tmpurl_regularization">regularization</a>.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LearningRate">
      <MemberSignature Language="C#" Value="public double LearningRate;" />
      <MemberSignature Language="ILAsm" Value=".field public float64 LearningRate" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.SgdBinaryTrainerBase`1.OptionsBase.LearningRate" />
      <MemberSignature Language="VB.NET" Value="Public LearningRate As Double " />
      <MemberSignature Language="F#" Value="val mutable LearningRate : double" Usage="Microsoft.ML.Trainers.SgdBinaryTrainerBase&lt;'Model (requires 'Model : null)&gt;.OptionsBase.LearningRate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Initial learning rate (only used by SGD)", Name="InitialLearningRate", ShortName="ilr,lr,InitLearningRate")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.Internal.Internallearn.TGUI(Label="Initial Learning Rate (for SGD)")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The initial <a href="tmpurl_lr">learning rate</a> used by SGD.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfIterations">
      <MemberSignature Language="C#" Value="public int NumberOfIterations;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 NumberOfIterations" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.SgdBinaryTrainerBase`1.OptionsBase.NumberOfIterations" />
      <MemberSignature Language="VB.NET" Value="Public NumberOfIterations As Integer " />
      <MemberSignature Language="F#" Value="val mutable NumberOfIterations : int" Usage="Microsoft.ML.Trainers.SgdBinaryTrainerBase&lt;'Model (requires 'Model : null)&gt;.OptionsBase.NumberOfIterations" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Maximum number of iterations; set to 1 to simulate online learning.", ShortName="iter, MaxIterations")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/SweepableDiscreteParam("MaxIterations", new System.Object[] { Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument }, false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.Internal.Internallearn.TGUI(Label="Max number of iterations", SuggestedSweeps="1,5,10,20")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The maximum number of passes through the training dataset.
            </summary>
        <returns>
            Set to 1 to simulate online learning.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfThreads">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; NumberOfThreads;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Nullable`1&lt;int32&gt; NumberOfThreads" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.SgdBinaryTrainerBase`1.OptionsBase.NumberOfThreads" />
      <MemberSignature Language="VB.NET" Value="Public NumberOfThreads As Nullable(Of Integer) " />
      <MemberSignature Language="F#" Value="val mutable NumberOfThreads : Nullable&lt;int&gt;" Usage="Microsoft.ML.Trainers.SgdBinaryTrainerBase&lt;'Model (requires 'Model : null)&gt;.OptionsBase.NumberOfThreads" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Degree of lock-free parallelism. Defaults to automatic depending on data sparseness. Determinism not guaranteed.", ShortName="nt,t,threads, NumThreads", SortOrder=50)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.Internal.Internallearn.TGUI(Label="Number of threads", SuggestedSweeps="1,2,4")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The degree of lock-free parallelism used by SGD.
            </summary>
        <returns>
            Defaults to automatic depending on data sparseness. Determinism is not guaranteed.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PositiveInstanceWeight">
      <MemberSignature Language="C#" Value="public float PositiveInstanceWeight;" />
      <MemberSignature Language="ILAsm" Value=".field public float32 PositiveInstanceWeight" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.SgdBinaryTrainerBase`1.OptionsBase.PositiveInstanceWeight" />
      <MemberSignature Language="VB.NET" Value="Public PositiveInstanceWeight As Single " />
      <MemberSignature Language="F#" Value="val mutable PositiveInstanceWeight : single" Usage="Microsoft.ML.Trainers.SgdBinaryTrainerBase&lt;'Model (requires 'Model : null)&gt;.OptionsBase.PositiveInstanceWeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Apply weight to the positive class, for imbalanced data", ShortName="piw")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The weight to be applied to the positive class. This is useful for training with imbalanced data.
            </summary>
        <returns>
            Default value is 1, which means no extra weight.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shuffle">
      <MemberSignature Language="C#" Value="public bool Shuffle;" />
      <MemberSignature Language="ILAsm" Value=".field public bool Shuffle" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.SgdBinaryTrainerBase`1.OptionsBase.Shuffle" />
      <MemberSignature Language="VB.NET" Value="Public Shuffle As Boolean " />
      <MemberSignature Language="F#" Value="val mutable Shuffle : bool" Usage="Microsoft.ML.Trainers.SgdBinaryTrainerBase&lt;'Model (requires 'Model : null)&gt;.OptionsBase.Shuffle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Shuffle data every epoch?", ShortName="shuf")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/SweepableDiscreteParam("Shuffle", null, true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Determines whether to shuffle data for each training iteration.
            </summary>
        <returns>
          <see langword="true" /> to shuffle data for each training iteration; otherwise, <see langword="false" />.
            Default is <see langword="true" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>