<Type Name="TrainerEstimatorBaseWithGroupId&lt;TTransformer,TModel&gt;" FullName="Microsoft.ML.Trainers.TrainerEstimatorBaseWithGroupId&lt;TTransformer,TModel&gt;">
  <TypeSignature Language="C#" Value="public abstract class TrainerEstimatorBaseWithGroupId&lt;TTransformer,TModel&gt; : Microsoft.ML.Trainers.TrainerEstimatorBase&lt;TTransformer,TModel&gt; where TTransformer : ISingleFeaturePredictionTransformer&lt;TModel&gt; where TModel : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TrainerEstimatorBaseWithGroupId`2&lt;(class Microsoft.ML.ISingleFeaturePredictionTransformer`1&lt;!TModel&gt;) TTransformer, class TModel&gt; extends Microsoft.ML.Trainers.TrainerEstimatorBase`2&lt;!TTransformer, !TModel&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.TrainerEstimatorBaseWithGroupId`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TrainerEstimatorBaseWithGroupId(Of TTransformer, TModel)&#xA;Inherits TrainerEstimatorBase(Of TTransformer, TModel)" />
  <TypeSignature Language="F#" Value="type TrainerEstimatorBaseWithGroupId&lt;'ransformer, 'Model (requires 'ransformer :&gt; ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model : null)&gt; = class&#xA;    inherit TrainerEstimatorBase&lt;'ransformer, 'Model (requires 'ransformer :&gt; ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model : null)&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TTransformer">
      <Constraints>
        <InterfaceName>Microsoft.ML.ISingleFeaturePredictionTransformer&lt;TModel&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TModel">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.Trainers.TrainerEstimatorBase&lt;TTransformer,TModel&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TTransformer">TTransformer</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TModel">TModel</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TTransformer">To be added.</typeparam>
    <typeparam name="TModel">To be added.</typeparam>
    <summary>
            This represents a basic class for 'simple trainer'.
            A 'simple trainer' accepts one feature column and one label column, also optionally a weight column.
            It produces a 'prediction transformer'.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GroupIdColumn">
      <MemberSignature Language="C#" Value="public readonly Microsoft.ML.SchemaShape.Column GroupIdColumn;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly valuetype Microsoft.ML.SchemaShape/Column GroupIdColumn" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.TrainerEstimatorBaseWithGroupId`2.GroupIdColumn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly GroupIdColumn As SchemaShape.Column " />
      <MemberSignature Language="F#" Value="val mutable GroupIdColumn : Microsoft.ML.SchemaShape.Column" Usage="Microsoft.ML.Trainers.TrainerEstimatorBaseWithGroupId&lt;'ransformer, 'Model (requires 'ransformer :&gt; Microsoft.ML.ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model : null)&gt;.GroupIdColumn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.SchemaShape+Column</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The optional groupID column that the ranking trainers expects.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>