<Type Name="LinearClassificationTrainer" FullName="Microsoft.ML.Trainers.LinearClassificationTrainer">
  <TypeSignature Language="C#" Value="public sealed class LinearClassificationTrainer : Microsoft.ML.Trainers.SdcaTrainerBase&lt;Microsoft.ML.Trainers.LinearClassificationTrainer.Arguments,Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;float&gt;&gt;,Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;float&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LinearClassificationTrainer extends Microsoft.ML.Trainers.SdcaTrainerBase`3&lt;class Microsoft.ML.Trainers.LinearClassificationTrainer/Arguments, class Microsoft.ML.Runtime.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights`1&lt;float32&gt;&gt;, class Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights`1&lt;float32&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.LinearClassificationTrainer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LinearClassificationTrainer&#xA;Inherits SdcaTrainerBase(Of LinearClassificationTrainer.Arguments, BinaryPredictionTransformer(Of IPredictorWithFeatureWeights(Of Single)), IPredictorWithFeatureWeights(Of Single))" />
  <TypeSignature Language="F#" Value="type LinearClassificationTrainer = class&#xA;    inherit SdcaTrainerBase&lt;LinearClassificationTrainer.Arguments, BinaryPredictionTransformer&lt;IPredictorWithFeatureWeights&lt;single&gt;&gt;, IPredictorWithFeatureWeights&lt;single&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Trainers.SdcaTrainerBase&lt;Microsoft.ML.Trainers.LinearClassificationTrainer+Arguments,Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;System.Single&gt;&gt;,Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;System.Single&gt;&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TArgs">Microsoft.ML.Trainers.LinearClassificationTrainer+Arguments</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TTransformer">Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;System.Single&gt;&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TModel">Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;System.Single&gt;</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearClassificationTrainer (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Trainers.LinearClassificationTrainer.Arguments args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Trainers.LinearClassificationTrainer/Arguments args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.LinearClassificationTrainer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Trainers.LinearClassificationTrainer.Arguments)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, args As LinearClassificationTrainer.Arguments)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Trainers.LinearClassificationTrainer : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Trainers.LinearClassificationTrainer.Arguments -&gt; Microsoft.ML.Trainers.LinearClassificationTrainer" Usage="new Microsoft.ML.Trainers.LinearClassificationTrainer (env, args)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="args" Type="Microsoft.ML.Trainers.LinearClassificationTrainer+Arguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearClassificationTrainer (Microsoft.ML.Runtime.IHostEnvironment env, string featureColumn, string labelColumn, string weightColumn = null, Microsoft.ML.Runtime.ISupportSdcaClassificationLoss loss = null, Nullable&lt;float&gt; l2Const = null, Nullable&lt;float&gt; l1Threshold = null, Nullable&lt;int&gt; maxIterations = null, Action&lt;Microsoft.ML.Trainers.LinearClassificationTrainer.Arguments&gt; advancedSettings = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, string featureColumn, string labelColumn, string weightColumn, class Microsoft.ML.Runtime.ISupportSdcaClassificationLoss loss, valuetype System.Nullable`1&lt;float32&gt; l2Const, valuetype System.Nullable`1&lt;float32&gt; l1Threshold, valuetype System.Nullable`1&lt;int32&gt; maxIterations, class System.Action`1&lt;class Microsoft.ML.Trainers.LinearClassificationTrainer/Arguments&gt; advancedSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.LinearClassificationTrainer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.String,System.String,Microsoft.ML.Runtime.ISupportSdcaClassificationLoss,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32},System.Action{Microsoft.ML.Trainers.LinearClassificationTrainer.Arguments})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, featureColumn As String, labelColumn As String, Optional weightColumn As String = null, Optional loss As ISupportSdcaClassificationLoss = null, Optional l2Const As Nullable(Of Single) = null, Optional l1Threshold As Nullable(Of Single) = null, Optional maxIterations As Nullable(Of Integer) = null, Optional advancedSettings As Action(Of LinearClassificationTrainer.Arguments) = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Trainers.LinearClassificationTrainer : Microsoft.ML.Runtime.IHostEnvironment * string * string * string * Microsoft.ML.Runtime.ISupportSdcaClassificationLoss * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;int&gt; * Action&lt;Microsoft.ML.Trainers.LinearClassificationTrainer.Arguments&gt; -&gt; Microsoft.ML.Trainers.LinearClassificationTrainer" Usage="new Microsoft.ML.Trainers.LinearClassificationTrainer (env, featureColumn, labelColumn, weightColumn, loss, l2Const, l1Threshold, maxIterations, advancedSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="featureColumn" Type="System.String" />
        <Parameter Name="labelColumn" Type="System.String" />
        <Parameter Name="weightColumn" Type="System.String" />
        <Parameter Name="loss" Type="Microsoft.ML.Runtime.ISupportSdcaClassificationLoss" />
        <Parameter Name="l2Const" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="l1Threshold" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="maxIterations" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="advancedSettings" Type="System.Action&lt;Microsoft.ML.Trainers.LinearClassificationTrainer+Arguments&gt;" />
      </Parameters>
      <Docs>
        <param name="env">The environment to use.</param>
        <param name="featureColumn">The features, or independent variables.</param>
        <param name="labelColumn">The label, or dependent variable.</param>
        <param name="weightColumn">The optional example weights.</param>
        <param name="loss">The custom loss.</param>
        <param name="l2Const">The L2 regularization hyperparameter.</param>
        <param name="l1Threshold">The L1 regularization hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="maxIterations">The maximum number of passes to perform over the data.</param>
        <param name="advancedSettings">A delegate to set more settings.
            The settings here will override the ones provided in the direct method signature,
            if both are present and have different values.
            The columns names, however need to be provided directly, not through the <paramref name="advancedSettings" />.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Trainers.LinearClassificationTrainer" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckLabel">
      <MemberSignature Language="C#" Value="protected override void CheckLabel (Microsoft.ML.Runtime.Data.RoleMappedData examples, out int weightSetCount);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CheckLabel(class Microsoft.ML.Runtime.Data.RoleMappedData examples, [out] int32&amp; weightSetCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.LinearClassificationTrainer.CheckLabel(Microsoft.ML.Runtime.Data.RoleMappedData,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CheckLabel (examples As RoleMappedData, ByRef weightSetCount As Integer)" />
      <MemberSignature Language="F#" Value="override this.CheckLabel : Microsoft.ML.Runtime.Data.RoleMappedData *  -&gt; unit" Usage="linearClassificationTrainer.CheckLabel (examples, weightSetCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="examples" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
        <Parameter Name="weightSetCount" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="examples">To be added.</param>
        <param name="weightSetCount">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckLabelCompatible">
      <MemberSignature Language="C#" Value="protected override void CheckLabelCompatible (Microsoft.ML.Core.Data.SchemaShape.Column labelCol);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CheckLabelCompatible(class Microsoft.ML.Core.Data.SchemaShape/Column labelCol) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.LinearClassificationTrainer.CheckLabelCompatible(Microsoft.ML.Core.Data.SchemaShape.Column)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CheckLabelCompatible (labelCol As SchemaShape.Column)" />
      <MemberSignature Language="F#" Value="override this.CheckLabelCompatible : Microsoft.ML.Core.Data.SchemaShape.Column -&gt; unit" Usage="linearClassificationTrainer.CheckLabelCompatible labelCol" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="labelCol" Type="Microsoft.ML.Core.Data.SchemaShape+Column" />
      </Parameters>
      <Docs>
        <param name="labelCol">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePredictor">
      <MemberSignature Language="C#" Value="protected override Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;float&gt; CreatePredictor (Microsoft.ML.Runtime.Data.VBuffer&lt;float&gt;[] weights, float[] bias);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights`1&lt;float32&gt; CreatePredictor(valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;float32&gt;[] weights, float32[] bias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.LinearClassificationTrainer.CreatePredictor(Microsoft.ML.Runtime.Data.VBuffer{System.Single}[],System.Single[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreatePredictor (weights As VBuffer(Of Single)(), bias As Single()) As IPredictorWithFeatureWeights(Of Single)" />
      <MemberSignature Language="F#" Value="override this.CreatePredictor : Microsoft.ML.Runtime.Data.VBuffer&lt;single&gt;[] * single[] -&gt; Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;single&gt;" Usage="linearClassificationTrainer.CreatePredictor (weights, bias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="weights" Type="Microsoft.ML.Runtime.Data.VBuffer&lt;System.Single&gt;[]" />
        <Parameter Name="bias" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="weights">To be added.</param>
        <param name="bias">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstanceWeight">
      <MemberSignature Language="C#" Value="protected override float GetInstanceWeight (Microsoft.ML.Runtime.Training.FloatLabelCursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float32 GetInstanceWeight(class Microsoft.ML.Runtime.Training.FloatLabelCursor cursor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.LinearClassificationTrainer.GetInstanceWeight(Microsoft.ML.Runtime.Training.FloatLabelCursor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetInstanceWeight (cursor As FloatLabelCursor) As Single" />
      <MemberSignature Language="F#" Value="override this.GetInstanceWeight : Microsoft.ML.Runtime.Training.FloatLabelCursor -&gt; single" Usage="linearClassificationTrainer.GetInstanceWeight cursor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursor" Type="Microsoft.ML.Runtime.Training.FloatLabelCursor" />
      </Parameters>
      <Docs>
        <param name="cursor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputColumnsCore">
      <MemberSignature Language="C#" Value="protected override Microsoft.ML.Core.Data.SchemaShape.Column[] GetOutputColumnsCore (Microsoft.ML.Core.Data.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.ML.Core.Data.SchemaShape/Column[] GetOutputColumnsCore(class Microsoft.ML.Core.Data.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.LinearClassificationTrainer.GetOutputColumnsCore(Microsoft.ML.Core.Data.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetOutputColumnsCore (inputSchema As SchemaShape) As SchemaShape.Column()" />
      <MemberSignature Language="F#" Value="override this.GetOutputColumnsCore : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape.Column[]" Usage="linearClassificationTrainer.GetOutputColumnsCore inputSchema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape+Column[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Core.Data.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.Runtime.TrainerInfo Info { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.TrainerInfo Info" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LinearClassificationTrainer.Info" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Info As TrainerInfo" />
      <MemberSignature Language="F#" Value="member this.Info : Microsoft.ML.Runtime.TrainerInfo" Usage="Microsoft.ML.Trainers.LinearClassificationTrainer.Info" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.TrainerInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadNameValue">
      <MemberSignature Language="C#" Value="public const string LoadNameValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string LoadNameValue" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.LinearClassificationTrainer.LoadNameValue" />
      <MemberSignature Language="VB.NET" Value="Public Const LoadNameValue As String " />
      <MemberSignature Language="F#" Value="val mutable LoadNameValue : string" Usage="Microsoft.ML.Trainers.LinearClassificationTrainer.LoadNameValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeTransformer">
      <MemberSignature Language="C#" Value="protected override Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;float&gt;&gt; MakeTransformer (Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;float&gt; model, Microsoft.ML.Runtime.Data.Schema trainSchema);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.ML.Runtime.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights`1&lt;float32&gt;&gt; MakeTransformer(class Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights`1&lt;float32&gt; model, class Microsoft.ML.Runtime.Data.Schema trainSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.LinearClassificationTrainer.MakeTransformer(Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights{System.Single},Microsoft.ML.Runtime.Data.Schema)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MakeTransformer (model As IPredictorWithFeatureWeights(Of Single), trainSchema As Schema) As BinaryPredictionTransformer(Of IPredictorWithFeatureWeights(Of Single))" />
      <MemberSignature Language="F#" Value="override this.MakeTransformer : Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;single&gt; * Microsoft.ML.Runtime.Data.Schema -&gt; Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;single&gt;&gt;" Usage="linearClassificationTrainer.MakeTransformer (model, trainSchema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;System.Single&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;System.Single&gt;" />
        <Parameter Name="trainSchema" Type="Microsoft.ML.Runtime.Data.Schema" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="trainSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictionKind">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.Runtime.PredictionKind PredictionKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Runtime.PredictionKind PredictionKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LinearClassificationTrainer.PredictionKind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PredictionKind As PredictionKind" />
      <MemberSignature Language="F#" Value="member this.PredictionKind : Microsoft.ML.Runtime.PredictionKind" Usage="Microsoft.ML.Trainers.LinearClassificationTrainer.PredictionKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PredictionKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShuffleData">
      <MemberSignature Language="C#" Value="protected override bool ShuffleData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShuffleData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.LinearClassificationTrainer.ShuffleData" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ShuffleData As Boolean" />
      <MemberSignature Language="F#" Value="member this.ShuffleData : bool" Usage="Microsoft.ML.Trainers.LinearClassificationTrainer.ShuffleData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Train">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;float&gt;&gt; Train (Microsoft.ML.Runtime.Data.IDataView trainData, Microsoft.ML.Runtime.Data.IDataView validationData = null, Microsoft.ML.Runtime.IPredictor initialPredictor = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights`1&lt;float32&gt;&gt; Train(class Microsoft.ML.Runtime.Data.IDataView trainData, class Microsoft.ML.Runtime.Data.IDataView validationData, class Microsoft.ML.Runtime.IPredictor initialPredictor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.LinearClassificationTrainer.Train(Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.IPredictor)" />
      <MemberSignature Language="VB.NET" Value="Public Function Train (trainData As IDataView, Optional validationData As IDataView = null, Optional initialPredictor As IPredictor = null) As BinaryPredictionTransformer(Of IPredictorWithFeatureWeights(Of Single))" />
      <MemberSignature Language="F#" Value="override this.Train : Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.IPredictor -&gt; Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;single&gt;&gt;" Usage="linearClassificationTrainer.Train (trainData, validationData, initialPredictor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;System.Single&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainData" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="validationData" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="initialPredictor" Type="Microsoft.ML.Runtime.IPredictor" />
      </Parameters>
      <Docs>
        <param name="trainData">To be added.</param>
        <param name="validationData">To be added.</param>
        <param name="initialPredictor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>