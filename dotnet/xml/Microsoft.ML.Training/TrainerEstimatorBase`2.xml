<Type Name="TrainerEstimatorBase&lt;TTransformer,TModel&gt;" FullName="Microsoft.ML.Training.TrainerEstimatorBase&lt;TTransformer,TModel&gt;">
  <TypeSignature Language="C#" Value="public abstract class TrainerEstimatorBase&lt;TTransformer,TModel&gt; : Microsoft.ML.Core.Data.IEstimator&lt;TTransformer&gt;, Microsoft.ML.Training.ITrainerEstimator&lt;TTransformer,TModel&gt; where TTransformer : ISingleFeaturePredictionTransformer&lt;TModel&gt; where TModel : IPredictor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TrainerEstimatorBase`2&lt;(class Microsoft.ML.ISingleFeaturePredictionTransformer`1&lt;!TModel&gt;) TTransformer, (class Microsoft.ML.IPredictor) TModel&gt; extends System.Object implements class Microsoft.ML.Core.Data.IEstimator`1&lt;!TTransformer&gt;, class Microsoft.ML.Training.ITrainerEstimator`2&lt;!TTransformer, !TModel&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Training.TrainerEstimatorBase`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TrainerEstimatorBase(Of TTransformer, TModel)&#xA;Implements IEstimator(Of TTransformer), ITrainerEstimator(Of TTransformer, TModel)" />
  <TypeSignature Language="F#" Value="type TrainerEstimatorBase&lt;'ransformer, 'Model (requires 'ransformer :&gt; ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; IPredictor)&gt; = class&#xA;    interface ITrainerEstimator&lt;'ransformer, 'Model (requires 'ransformer :&gt; ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; IPredictor)&gt;&#xA;    interface IEstimator&lt;'ransformer (requires 'ransformer :&gt; ISingleFeaturePredictionTransformer&lt;'Model&gt;)&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TTransformer">
      <Constraints>
        <InterfaceName>Microsoft.ML.ISingleFeaturePredictionTransformer&lt;TModel&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TModel">
      <Constraints>
        <InterfaceName>Microsoft.ML.IPredictor</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Core.Data.IEstimator&lt;TTransformer&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Training.ITrainerEstimator&lt;TTransformer,TModel&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TTransformer">To be added.</typeparam>
    <typeparam name="TModel">To be added.</typeparam>
    <summary>
            This represents a basic class for 'simple trainer'.
            A 'simple trainer' accepts one feature column and one label column, also optionally a weight column.
            It produces a 'prediction transformer'.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckLabelCompatible">
      <MemberSignature Language="C#" Value="protected virtual void CheckLabelCompatible (Microsoft.ML.Core.Data.SchemaShape.Column labelCol);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CheckLabelCompatible(valuetype Microsoft.ML.Core.Data.SchemaShape/Column labelCol) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Training.TrainerEstimatorBase`2.CheckLabelCompatible(Microsoft.ML.Core.Data.SchemaShape.Column)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CheckLabelCompatible (labelCol As SchemaShape.Column)" />
      <MemberSignature Language="F#" Value="abstract member CheckLabelCompatible : Microsoft.ML.Core.Data.SchemaShape.Column -&gt; unit&#xA;override this.CheckLabelCompatible : Microsoft.ML.Core.Data.SchemaShape.Column -&gt; unit" Usage="trainerEstimatorBase.CheckLabelCompatible labelCol" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="labelCol" Type="Microsoft.ML.Core.Data.SchemaShape+Column" />
      </Parameters>
      <Docs>
        <param name="labelCol">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureColumn">
      <MemberSignature Language="C#" Value="public readonly Microsoft.ML.Core.Data.SchemaShape.Column FeatureColumn;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly valuetype Microsoft.ML.Core.Data.SchemaShape/Column FeatureColumn" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Training.TrainerEstimatorBase`2.FeatureColumn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly FeatureColumn As SchemaShape.Column " />
      <MemberSignature Language="F#" Value="val mutable FeatureColumn : Microsoft.ML.Core.Data.SchemaShape.Column" Usage="Microsoft.ML.Training.TrainerEstimatorBase&lt;'ransformer, 'Model (requires 'ransformer :&gt; Microsoft.ML.ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; Microsoft.ML.IPredictor)&gt;.FeatureColumn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape+Column</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The feature column that the trainer expects.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fit">
      <MemberSignature Language="C#" Value="public TTransformer Fit (Microsoft.Data.DataView.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TTransformer Fit(class Microsoft.Data.DataView.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Training.TrainerEstimatorBase`2.Fit(Microsoft.Data.DataView.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fit (input As IDataView) As TTransformer" />
      <MemberSignature Language="F#" Value="abstract member Fit : Microsoft.Data.DataView.IDataView -&gt; 'ransformer&#xA;override this.Fit : Microsoft.Data.DataView.IDataView -&gt; 'ransformer" Usage="trainerEstimatorBase.Fit input" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IEstimator`1.Fit(Microsoft.Data.DataView.IDataView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TTransformer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.Data.DataView.IDataView" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputColumnsCore">
      <MemberSignature Language="C#" Value="protected abstract Microsoft.ML.Core.Data.SchemaShape.Column[] GetOutputColumnsCore (Microsoft.ML.Core.Data.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype Microsoft.ML.Core.Data.SchemaShape/Column[] GetOutputColumnsCore(class Microsoft.ML.Core.Data.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Training.TrainerEstimatorBase`2.GetOutputColumnsCore(Microsoft.ML.Core.Data.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetOutputColumnsCore (inputSchema As SchemaShape) As SchemaShape.Column()" />
      <MemberSignature Language="F#" Value="abstract member GetOutputColumnsCore : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape.Column[]" Usage="trainerEstimatorBase.GetOutputColumnsCore inputSchema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape+Column[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Core.Data.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>
            The columns that will be created by the fitted transformer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Core.Data.SchemaShape GetOutputSchema (Microsoft.ML.Core.Data.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Core.Data.SchemaShape GetOutputSchema(class Microsoft.ML.Core.Data.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Training.TrainerEstimatorBase`2.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutputSchema (inputSchema As SchemaShape) As SchemaShape" />
      <MemberSignature Language="F#" Value="abstract member GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape&#xA;override this.GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape" Usage="trainerEstimatorBase.GetOutputSchema inputSchema" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IEstimator`1.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Core.Data.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="protected readonly Microsoft.ML.IHost Host;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class Microsoft.ML.IHost Host" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Training.TrainerEstimatorBase`2.Host" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Host As IHost " />
      <MemberSignature Language="F#" Value="val mutable Host : Microsoft.ML.IHost" Usage="Microsoft.ML.Training.TrainerEstimatorBase&lt;'ransformer, 'Model (requires 'ransformer :&gt; Microsoft.ML.ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; Microsoft.ML.IPredictor)&gt;.Host" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.IHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public abstract Microsoft.ML.TrainerInfo Info { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.TrainerInfo Info" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Training.TrainerEstimatorBase`2.Info" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Info As TrainerInfo" />
      <MemberSignature Language="F#" Value="member this.Info : Microsoft.ML.TrainerInfo" Usage="Microsoft.ML.Training.TrainerEstimatorBase&lt;'ransformer, 'Model (requires 'ransformer :&gt; Microsoft.ML.ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; Microsoft.ML.IPredictor)&gt;.Info" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Training.ITrainerEstimator`2.Info</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TrainerInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The information about the trainer: whether it benefits from normalization, caching etc.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelColumn">
      <MemberSignature Language="C#" Value="public readonly Microsoft.ML.Core.Data.SchemaShape.Column LabelColumn;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly valuetype Microsoft.ML.Core.Data.SchemaShape/Column LabelColumn" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Training.TrainerEstimatorBase`2.LabelColumn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly LabelColumn As SchemaShape.Column " />
      <MemberSignature Language="F#" Value="val mutable LabelColumn : Microsoft.ML.Core.Data.SchemaShape.Column" Usage="Microsoft.ML.Training.TrainerEstimatorBase&lt;'ransformer, 'Model (requires 'ransformer :&gt; Microsoft.ML.ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; Microsoft.ML.IPredictor)&gt;.LabelColumn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape+Column</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The label column that the trainer expects. Can be <c>null</c>, which indicates that label
            is not used for training.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeTransformer">
      <MemberSignature Language="C#" Value="protected abstract TTransformer MakeTransformer (TModel model, Microsoft.Data.DataView.Schema trainSchema);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TTransformer MakeTransformer(!TModel model, class Microsoft.Data.DataView.Schema trainSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Training.TrainerEstimatorBase`2.MakeTransformer(`1,Microsoft.Data.DataView.Schema)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function MakeTransformer (model As TModel, trainSchema As Schema) As TTransformer" />
      <MemberSignature Language="F#" Value="abstract member MakeTransformer : 'Model * Microsoft.Data.DataView.Schema -&gt; 'ransformer" Usage="trainerEstimatorBase.MakeTransformer (model, trainSchema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TTransformer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
        <Parameter Name="trainSchema" Type="Microsoft.Data.DataView.Schema" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="trainSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoTrainingInstancesMessage">
      <MemberSignature Language="C#" Value="protected const string NoTrainingInstancesMessage;" />
      <MemberSignature Language="ILAsm" Value=".field family static literal string NoTrainingInstancesMessage" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Training.TrainerEstimatorBase`2.NoTrainingInstancesMessage" />
      <MemberSignature Language="VB.NET" Value="Protected Const NoTrainingInstancesMessage As String " />
      <MemberSignature Language="F#" Value="val mutable NoTrainingInstancesMessage : string" Usage="Microsoft.ML.Training.TrainerEstimatorBase&lt;'ransformer, 'Model (requires 'ransformer :&gt; Microsoft.ML.ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; Microsoft.ML.IPredictor)&gt;.NoTrainingInstancesMessage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A standard string to use in errors or warnings by subclasses, to communicate the idea that no valid
            instances were able to be found.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictionKind">
      <MemberSignature Language="C#" Value="public abstract Microsoft.ML.PredictionKind PredictionKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.PredictionKind PredictionKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Training.TrainerEstimatorBase`2.PredictionKind" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PredictionKind As PredictionKind" />
      <MemberSignature Language="F#" Value="member this.PredictionKind : Microsoft.ML.PredictionKind" Usage="Microsoft.ML.Training.TrainerEstimatorBase&lt;'ransformer, 'Model (requires 'ransformer :&gt; Microsoft.ML.ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; Microsoft.ML.IPredictor)&gt;.PredictionKind" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Training.ITrainerEstimator`2.PredictionKind</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.PredictionKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainTransformer">
      <MemberSignature Language="C#" Value="protected TTransformer TrainTransformer (Microsoft.Data.DataView.IDataView trainSet, Microsoft.Data.DataView.IDataView validationSet = null, Microsoft.ML.IPredictor initPredictor = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance !TTransformer TrainTransformer(class Microsoft.Data.DataView.IDataView trainSet, class Microsoft.Data.DataView.IDataView validationSet, class Microsoft.ML.IPredictor initPredictor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Training.TrainerEstimatorBase`2.TrainTransformer(Microsoft.Data.DataView.IDataView,Microsoft.Data.DataView.IDataView,Microsoft.ML.IPredictor)" />
      <MemberSignature Language="VB.NET" Value="Protected Function TrainTransformer (trainSet As IDataView, Optional validationSet As IDataView = null, Optional initPredictor As IPredictor = null) As TTransformer" />
      <MemberSignature Language="F#" Value="member this.TrainTransformer : Microsoft.Data.DataView.IDataView * Microsoft.Data.DataView.IDataView * Microsoft.ML.IPredictor -&gt; 'ransformer" Usage="trainerEstimatorBase.TrainTransformer (trainSet, validationSet, initPredictor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TTransformer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainSet" Type="Microsoft.Data.DataView.IDataView" />
        <Parameter Name="validationSet" Type="Microsoft.Data.DataView.IDataView" />
        <Parameter Name="initPredictor" Type="Microsoft.ML.IPredictor" />
      </Parameters>
      <Docs>
        <param name="trainSet">To be added.</param>
        <param name="validationSet">To be added.</param>
        <param name="initPredictor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeightColumn">
      <MemberSignature Language="C#" Value="public readonly Microsoft.ML.Core.Data.SchemaShape.Column WeightColumn;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly valuetype Microsoft.ML.Core.Data.SchemaShape/Column WeightColumn" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Training.TrainerEstimatorBase`2.WeightColumn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly WeightColumn As SchemaShape.Column " />
      <MemberSignature Language="F#" Value="val mutable WeightColumn : Microsoft.ML.Core.Data.SchemaShape.Column" Usage="Microsoft.ML.Training.TrainerEstimatorBase&lt;'ransformer, 'Model (requires 'ransformer :&gt; Microsoft.ML.ISingleFeaturePredictionTransformer&lt;'Model&gt; and 'Model :&gt; Microsoft.ML.IPredictor)&gt;.WeightColumn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape+Column</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The weight column that the trainer expects. Can be <c>null</c>, which indicates that weight is
            not used for training.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>