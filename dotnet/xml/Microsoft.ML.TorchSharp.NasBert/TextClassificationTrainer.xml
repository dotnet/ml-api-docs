<Type Name="TextClassificationTrainer" FullName="Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer">
  <TypeSignature Language="C#" Value="public class TextClassificationTrainer : Microsoft.ML.TorchSharp.NasBert.NasBertTrainer&lt;uint,long&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextClassificationTrainer extends Microsoft.ML.TorchSharp.NasBert.NasBertTrainer`2&lt;unsigned int32, int64&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer" />
  <TypeSignature Language="VB.NET" Value="Public Class TextClassificationTrainer&#xA;Inherits NasBertTrainer(Of UInteger, Long)" />
  <TypeSignature Language="F#" Value="type TextClassificationTrainer = class&#xA;    inherit NasBertTrainer&lt;uint32, int64&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.TorchSharp.NasBert.NasBertTrainer&lt;System.UInt32,System.Int64&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TLabelCol">System.UInt32</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TTargetsCol">System.Int64</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             The <see cref="T:Microsoft.ML.IEstimator`1" /> for training a Deep Neural Network (DNN) to classify text.
             </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[
             To create this trainer, use [TextClassification](xref:Microsoft.ML.TorchSharpCatalog.TextClassification(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Int32,System.String,System.String,System.String,System.String,Int32,Int32,Int32,Microsoft.ML.TorchSharp.NasBert.BertArchitecture,Microsoft.ML.IDataView)).
            
             ### Input and output columns
             The input label column data must be [key](xref:Microsoft.ML.Data.KeyDataViewType) type and the sentence columns must be of type <xref:Microsoft.ML.Data.TextDataViewType>.
            
             This trainer outputs the following columns:
            
             | Output column name | Column type | Description|
             | -- | -- | -- |
             | `PredictedLabel` | [key](xref:Microsoft.ML.Data.KeyDataViewType) type | The predicted label's index. If its value is `i`, the actual label would be the `i`-th category in the key-valued input label type. |
             | `Score` | Vector of<xref:System.Single> | The scores of all classes. Higher value means higher probability to fall into the associated class. If the `i`-th element has the largest value, the predicted label index would be `i`. Note that `i` is a zero-based index. |
            
             ### Trainer characteristics
             | Characteristic | Value |
             | -- | -- |
             | Machine learning task | Multiclass classification |
             | Is normalization required? | No |
             | Is caching required? | No |
             | Required NuGet in addition to Microsoft.ML | Microsoft.ML.TorchSharp and libtorch-cpu or libtorch-cuda-11.3 or any of the OS specific variants. |
             | Exportable to ONNX | No |
            
             ### Training algorithm details
             Trains a Deep Neural Network (DNN) by leveraging an existing, pretrained NAS-BERT roBERTa model for the purpose of classifying text.
             ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>
