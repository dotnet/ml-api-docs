<Type Name="TransformInference+TransformInferenceExpertBase" FullName="Microsoft.ML.Runtime.PipelineInference.TransformInference+TransformInferenceExpertBase">
  <TypeSignature Language="C#" Value="public abstract class TransformInference.TransformInferenceExpertBase : Microsoft.ML.Runtime.PipelineInference.TransformInference.ITransformInferenceExpert" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi abstract beforefieldinit TransformInference/TransformInferenceExpertBase extends System.Object implements class Microsoft.ML.Runtime.PipelineInference.TransformInference/ITransformInferenceExpert" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.PipelineInference.TransformInference.TransformInferenceExpertBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TransformInference.TransformInferenceExpertBase&#xA;Implements TransformInference.ITransformInferenceExpert" />
  <TypeSignature Language="F#" Value="type TransformInference.TransformInferenceExpertBase = class&#xA;    interface TransformInference.ITransformInferenceExpert" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.PipelineInference.TransformInference+ITransformInferenceExpert</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TransformInferenceExpertBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.TransformInference.TransformInferenceExpertBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform&gt; Apply (Microsoft.ML.Runtime.PipelineInference.TransformInference.IntermediateColumn[] columns, Microsoft.ML.Runtime.PipelineInference.TransformInference.Arguments inferenceArgs, Microsoft.ML.Runtime.IChannel ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.ML.Runtime.PipelineInference.TransformInference/SuggestedTransform&gt; Apply(class Microsoft.ML.Runtime.PipelineInference.TransformInference/IntermediateColumn[] columns, class Microsoft.ML.Runtime.PipelineInference.TransformInference/Arguments inferenceArgs, class Microsoft.ML.Runtime.IChannel ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.TransformInference.TransformInferenceExpertBase.Apply(Microsoft.ML.Runtime.PipelineInference.TransformInference.IntermediateColumn[],Microsoft.ML.Runtime.PipelineInference.TransformInference.Arguments,Microsoft.ML.Runtime.IChannel)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Apply (columns As TransformInference.IntermediateColumn(), inferenceArgs As TransformInference.Arguments, ch As IChannel) As IEnumerable(Of TransformInference.SuggestedTransform)" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.ML.Runtime.PipelineInference.TransformInference.IntermediateColumn[] * Microsoft.ML.Runtime.PipelineInference.TransformInference.Arguments * Microsoft.ML.Runtime.IChannel -&gt; seq&lt;Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform&gt;" Usage="transformInferenceExpertBase.Apply (columns, inferenceArgs, ch)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.PipelineInference.TransformInference.ITransformInferenceExpert.Apply(Microsoft.ML.Runtime.PipelineInference.TransformInference.IntermediateColumn[],Microsoft.ML.Runtime.PipelineInference.TransformInference.Arguments,Microsoft.ML.Runtime.IChannel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.PipelineInference.TransformInference+SuggestedTransform&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columns" Type="Microsoft.ML.Runtime.PipelineInference.TransformInference+IntermediateColumn[]" />
        <Parameter Name="inferenceArgs" Type="Microsoft.ML.Runtime.PipelineInference.TransformInference+Arguments" />
        <Parameter Name="ch" Type="Microsoft.ML.Runtime.IChannel" />
      </Parameters>
      <Docs>
        <param name="columns">To be added.</param>
        <param name="inferenceArgs">To be added.</param>
        <param name="ch">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeFeaturesOverride">
      <MemberSignature Language="C#" Value="public bool IncludeFeaturesOverride { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeFeaturesOverride" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.PipelineInference.TransformInference.TransformInferenceExpertBase.IncludeFeaturesOverride" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeFeaturesOverride As Boolean" />
      <MemberSignature Language="F#" Value="member this.IncludeFeaturesOverride : bool with get, set" Usage="Microsoft.ML.Runtime.PipelineInference.TransformInference.TransformInferenceExpertBase.IncludeFeaturesOverride" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.PipelineInference.TransformInference.ITransformInferenceExpert.IncludeFeaturesOverride</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>