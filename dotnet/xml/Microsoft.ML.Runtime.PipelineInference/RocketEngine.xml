<Type Name="RocketEngine" FullName="Microsoft.ML.Runtime.PipelineInference.RocketEngine">
  <TypeSignature Language="C#" Value="public class RocketEngine : Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RocketEngine extends Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.PipelineInference.RocketEngine" />
  <TypeSignature Language="VB.NET" Value="Public Class RocketEngine&#xA;Inherits PipelineOptimizerBase" />
  <TypeSignature Language="F#" Value="type RocketEngine = class&#xA;    inherit PipelineOptimizerBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RocketEngine (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.PipelineInference.RocketEngine.Arguments args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.PipelineInference.RocketEngine/Arguments args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.RocketEngine.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.PipelineInference.RocketEngine.Arguments)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, args As RocketEngine.Arguments)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.PipelineInference.RocketEngine : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.PipelineInference.RocketEngine.Arguments -&gt; Microsoft.ML.Runtime.PipelineInference.RocketEngine" Usage="new Microsoft.ML.Runtime.PipelineInference.RocketEngine (env, args)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="args" Type="Microsoft.ML.Runtime.PipelineInference.RocketEngine+Arguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextCandidates">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] GetNextCandidates (System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern&gt; history, int numCandidates, Microsoft.ML.Runtime.Data.RoleMappedData dataRoles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] GetNextCandidates(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.ML.Runtime.PipelineInference.PipelinePattern&gt; history, int32 numCandidates, class Microsoft.ML.Runtime.Data.RoleMappedData dataRoles) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.RocketEngine.GetNextCandidates(System.Collections.Generic.IEnumerable{Microsoft.ML.Runtime.PipelineInference.PipelinePattern},System.Int32,Microsoft.ML.Runtime.Data.RoleMappedData)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNextCandidates (history As IEnumerable(Of PipelinePattern), numCandidates As Integer, dataRoles As RoleMappedData) As PipelinePattern()" />
      <MemberSignature Language="F#" Value="override this.GetNextCandidates : seq&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern&gt; * int * Microsoft.ML.Runtime.Data.RoleMappedData -&gt; Microsoft.ML.Runtime.PipelineInference.PipelinePattern[]" Usage="rocketEngine.GetNextCandidates (history, numCandidates, dataRoles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.PipelinePattern[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="history" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern&gt;" />
        <Parameter Name="numCandidates" Type="System.Int32" />
        <Parameter Name="dataRoles" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
      </Parameters>
      <Docs>
        <param name="history">To be added.</param>
        <param name="numCandidates">To be added.</param>
        <param name="dataRoles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpace">
      <MemberSignature Language="C#" Value="public override void SetSpace (Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform[] availableTransforms, Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[] availableLearners, Func&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern,long,bool&gt; pipelineVerifier, Microsoft.ML.Runtime.Data.IDataView originalData, Microsoft.ML.Runtime.Data.IDataView fullyTransformedData, Microsoft.ML.Runtime.PipelineInference.AutoInference.DependencyMap dependencyMapping, bool isMaximizingMetric);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetSpace(valuetype Microsoft.ML.Runtime.PipelineInference.TransformInference/SuggestedTransform[] availableTransforms, valuetype Microsoft.ML.Runtime.PipelineInference.RecipeInference/SuggestedRecipe/SuggestedLearner[] availableLearners, class System.Func`3&lt;class Microsoft.ML.Runtime.PipelineInference.PipelinePattern, int64, bool&gt; pipelineVerifier, class Microsoft.ML.Runtime.Data.IDataView originalData, class Microsoft.ML.Runtime.Data.IDataView fullyTransformedData, class Microsoft.ML.Runtime.PipelineInference.AutoInference/DependencyMap dependencyMapping, bool isMaximizingMetric) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.RocketEngine.SetSpace(Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform[],Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[],System.Func{Microsoft.ML.Runtime.PipelineInference.PipelinePattern,System.Int64,System.Boolean},Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.PipelineInference.AutoInference.DependencyMap,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetSpace (availableTransforms As TransformInference.SuggestedTransform(), availableLearners As RecipeInference.SuggestedRecipe.SuggestedLearner(), pipelineVerifier As Func(Of PipelinePattern, Long, Boolean), originalData As IDataView, fullyTransformedData As IDataView, dependencyMapping As AutoInference.DependencyMap, isMaximizingMetric As Boolean)" />
      <MemberSignature Language="F#" Value="override this.SetSpace : Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform[] * Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[] * Func&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern, int64, bool&gt; * Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.PipelineInference.AutoInference.DependencyMap * bool -&gt; unit" Usage="rocketEngine.SetSpace (availableTransforms, availableLearners, pipelineVerifier, originalData, fullyTransformedData, dependencyMapping, isMaximizingMetric)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableTransforms" Type="Microsoft.ML.Runtime.PipelineInference.TransformInference+SuggestedTransform[]" />
        <Parameter Name="availableLearners" Type="Microsoft.ML.Runtime.PipelineInference.RecipeInference+SuggestedRecipe+SuggestedLearner[]" />
        <Parameter Name="pipelineVerifier" Type="System.Func&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern,System.Int64,System.Boolean&gt;" />
        <Parameter Name="originalData" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="fullyTransformedData" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="dependencyMapping" Type="Microsoft.ML.Runtime.PipelineInference.AutoInference+DependencyMap" />
        <Parameter Name="isMaximizingMetric" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="availableTransforms">To be added.</param>
        <param name="availableLearners">To be added.</param>
        <param name="pipelineVerifier">To be added.</param>
        <param name="originalData">To be added.</param>
        <param name="fullyTransformedData">To be added.</param>
        <param name="dependencyMapping">To be added.</param>
        <param name="isMaximizingMetric">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLearners">
      <MemberSignature Language="C#" Value="public override void UpdateLearners (Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[] availableLearners);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateLearners(valuetype Microsoft.ML.Runtime.PipelineInference.RecipeInference/SuggestedRecipe/SuggestedLearner[] availableLearners) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.RocketEngine.UpdateLearners(Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateLearners (availableLearners As RecipeInference.SuggestedRecipe.SuggestedLearner())" />
      <MemberSignature Language="F#" Value="override this.UpdateLearners : Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner[] -&gt; unit" Usage="rocketEngine.UpdateLearners availableLearners" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableLearners" Type="Microsoft.ML.Runtime.PipelineInference.RecipeInference+SuggestedRecipe+SuggestedLearner[]" />
      </Parameters>
      <Docs>
        <param name="availableLearners">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>