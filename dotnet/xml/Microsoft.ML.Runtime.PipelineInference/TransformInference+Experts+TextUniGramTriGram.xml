<Type Name="TransformInference+Experts+TextUniGramTriGram" FullName="Microsoft.ML.Runtime.PipelineInference.TransformInference+Experts+TextUniGramTriGram">
  <TypeSignature Language="C#" Value="public sealed class TransformInference.Experts.TextUniGramTriGram : Microsoft.ML.Runtime.PipelineInference.TransformInference.TransformInferenceExpertBase" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit TransformInference/Experts/TextUniGramTriGram extends Microsoft.ML.Runtime.PipelineInference.TransformInference/TransformInferenceExpertBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.PipelineInference.TransformInference.Experts.TextUniGramTriGram" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TransformInference.Experts.TextUniGramTriGram&#xA;Inherits TransformInference.TransformInferenceExpertBase" />
  <TypeSignature Language="F#" Value="type TransformInference.Experts.TextUniGramTriGram = class&#xA;    inherit TransformInference.TransformInferenceExpertBase" />
  <TypeSignature Language="C++ CLI" Value="public: ref class TransformInference::Experts::TextUniGramTriGram sealed : Microsoft::ML::Runtime::PipelineInference::TransformInference::TransformInferenceExpertBase" />
  <TypeSignature Language="C++ WINRT" Value="class TransformInference::Experts::TextUniGramTriGram sealed : Microsoft::ML::Runtime::PipelineInference::TransformInference::TransformInferenceExpertBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.PipelineInference.TransformInference+TransformInferenceExpertBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextUniGramTriGram ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.TransformInference.Experts.TextUniGramTriGram.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextUniGramTriGram();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; TextUniGramTriGram();" />
      <MemberSignature Language="C++ WINRT" Value=" TextUniGramTriGram();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform&gt; Apply (Microsoft.ML.Runtime.PipelineInference.TransformInference.IntermediateColumn[] columns, Microsoft.ML.Runtime.PipelineInference.TransformInference.Arguments inferenceArgs, Microsoft.ML.Runtime.IChannel ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.ML.Runtime.PipelineInference.TransformInference/SuggestedTransform&gt; Apply(class Microsoft.ML.Runtime.PipelineInference.TransformInference/IntermediateColumn[] columns, class Microsoft.ML.Runtime.PipelineInference.TransformInference/Arguments inferenceArgs, class Microsoft.ML.Runtime.IChannel ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.TransformInference.Experts.TextUniGramTriGram.Apply(Microsoft.ML.Runtime.PipelineInference.TransformInference.IntermediateColumn[],Microsoft.ML.Runtime.PipelineInference.TransformInference.Arguments,Microsoft.ML.Runtime.IChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Overrides Function Apply (columns As TransformInference.IntermediateColumn(), inferenceArgs As TransformInference.Arguments, ch As IChannel) As IEnumerable(Of TransformInference.SuggestedTransform)" />
      <MemberSignature Language="F#" Value="override this.Apply : Microsoft.ML.Runtime.PipelineInference.TransformInference.IntermediateColumn[] * Microsoft.ML.Runtime.PipelineInference.TransformInference.Arguments * Microsoft.ML.Runtime.IChannel -&gt; seq&lt;Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform&gt;" Usage="textUniGramTriGram.Apply (columns, inferenceArgs, ch)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerable&lt;Microsoft::ML::Runtime::PipelineInference::TransformInference::SuggestedTransform&gt; ^ Apply(cli::array &lt;Microsoft::ML::Runtime::PipelineInference::TransformInference::IntermediateColumn ^&gt; ^ columns, Microsoft::ML::Runtime::PipelineInference::TransformInference::Arguments ^ inferenceArgs, Microsoft::ML::Runtime::IChannel ^ ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.ML.Runtime.PipelineInference.TransformInference/Experts/TextUniGramTriGram/&lt;Apply&gt;d__0))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.PipelineInference.TransformInference+SuggestedTransform&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columns" Type="Microsoft.ML.Runtime.PipelineInference.TransformInference+IntermediateColumn[]" />
        <Parameter Name="inferenceArgs" Type="Microsoft.ML.Runtime.PipelineInference.TransformInference+Arguments" />
        <Parameter Name="ch" Type="Microsoft.ML.Runtime.IChannel" />
      </Parameters>
      <Docs>
        <param name="columns">To be added.</param>
        <param name="inferenceArgs">To be added.</param>
        <param name="ch">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>