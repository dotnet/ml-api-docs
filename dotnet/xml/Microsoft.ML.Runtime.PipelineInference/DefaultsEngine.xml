<Type Name="DefaultsEngine" FullName="Microsoft.ML.Runtime.PipelineInference.DefaultsEngine">
  <TypeSignature Language="C#" Value="public sealed class DefaultsEngine : Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DefaultsEngine extends Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.PipelineInference.DefaultsEngine" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DefaultsEngine&#xA;Inherits PipelineOptimizerBase" />
  <TypeSignature Language="F#" Value="type DefaultsEngine = class&#xA;    inherit PipelineOptimizerBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            AutoML engine that goes through all lerners using defaults. Need to decide
            how to handle which transforms to try.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultsEngine (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.PipelineInference.DefaultsEngine.Arguments args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.PipelineInference.DefaultsEngine/Arguments args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.DefaultsEngine.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.PipelineInference.DefaultsEngine.Arguments)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, args As DefaultsEngine.Arguments)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.PipelineInference.DefaultsEngine : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.PipelineInference.DefaultsEngine.Arguments -&gt; Microsoft.ML.Runtime.PipelineInference.DefaultsEngine" Usage="new Microsoft.ML.Runtime.PipelineInference.DefaultsEngine (env, args)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="args" Type="Microsoft.ML.Runtime.PipelineInference.DefaultsEngine+Arguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextCandidates">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] GetNextCandidates (System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern&gt; history, int numCandidates, Microsoft.ML.Runtime.Data.RoleMappedData dataRoles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] GetNextCandidates(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.ML.Runtime.PipelineInference.PipelinePattern&gt; history, int32 numCandidates, class Microsoft.ML.Runtime.Data.RoleMappedData dataRoles) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.DefaultsEngine.GetNextCandidates(System.Collections.Generic.IEnumerable{Microsoft.ML.Runtime.PipelineInference.PipelinePattern},System.Int32,Microsoft.ML.Runtime.Data.RoleMappedData)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNextCandidates (history As IEnumerable(Of PipelinePattern), numCandidates As Integer, dataRoles As RoleMappedData) As PipelinePattern()" />
      <MemberSignature Language="F#" Value="override this.GetNextCandidates : seq&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern&gt; * int * Microsoft.ML.Runtime.Data.RoleMappedData -&gt; Microsoft.ML.Runtime.PipelineInference.PipelinePattern[]" Usage="defaultsEngine.GetNextCandidates (history, numCandidates, dataRoles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.PipelinePattern[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="history" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern&gt;" />
        <Parameter Name="numCandidates" Type="System.Int32" />
        <Parameter Name="dataRoles" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
      </Parameters>
      <Docs>
        <param name="history">To be added.</param>
        <param name="numCandidates">To be added.</param>
        <param name="dataRoles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>