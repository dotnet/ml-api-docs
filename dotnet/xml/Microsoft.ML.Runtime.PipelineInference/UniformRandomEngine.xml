<Type Name="UniformRandomEngine" FullName="Microsoft.ML.Runtime.PipelineInference.UniformRandomEngine">
  <TypeSignature Language="C#" Value="public sealed class UniformRandomEngine : Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UniformRandomEngine extends Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.PipelineInference.UniformRandomEngine" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UniformRandomEngine&#xA;Inherits PipelineOptimizerBase" />
  <TypeSignature Language="F#" Value="type UniformRandomEngine = class&#xA;    inherit PipelineOptimizerBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Example class of an autoML engine (a pipeline optimizer) that simply tries random enumeration.
            If we use a third-party solution for autoML, we can just implement a new wrapper for it as a
            PipelineOptimizerBase, and use our existing autoML body code to take advantage of it. This design
            should allow for easy development of new autoML methods.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UniformRandomEngine (Microsoft.ML.Runtime.IHostEnvironment env);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.UniformRandomEngine.#ctor(Microsoft.ML.Runtime.IHostEnvironment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.PipelineInference.UniformRandomEngine : Microsoft.ML.Runtime.IHostEnvironment -&gt; Microsoft.ML.Runtime.PipelineInference.UniformRandomEngine" Usage="new Microsoft.ML.Runtime.PipelineInference.UniformRandomEngine env" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextCandidates">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] GetNextCandidates (System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern&gt; history, int numberOfCandidates, Microsoft.ML.Runtime.Data.RoleMappedData dataRoles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.ML.Runtime.PipelineInference.PipelinePattern[] GetNextCandidates(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.ML.Runtime.PipelineInference.PipelinePattern&gt; history, int32 numberOfCandidates, class Microsoft.ML.Runtime.Data.RoleMappedData dataRoles) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.UniformRandomEngine.GetNextCandidates(System.Collections.Generic.IEnumerable{Microsoft.ML.Runtime.PipelineInference.PipelinePattern},System.Int32,Microsoft.ML.Runtime.Data.RoleMappedData)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNextCandidates (history As IEnumerable(Of PipelinePattern), numberOfCandidates As Integer, dataRoles As RoleMappedData) As PipelinePattern()" />
      <MemberSignature Language="F#" Value="override this.GetNextCandidates : seq&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern&gt; * int * Microsoft.ML.Runtime.Data.RoleMappedData -&gt; Microsoft.ML.Runtime.PipelineInference.PipelinePattern[]" Usage="uniformRandomEngine.GetNextCandidates (history, numberOfCandidates, dataRoles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.PipelinePattern[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="history" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern&gt;" />
        <Parameter Name="numberOfCandidates" Type="System.Int32" />
        <Parameter Name="dataRoles" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
      </Parameters>
      <Docs>
        <param name="history">To be added.</param>
        <param name="numberOfCandidates">To be added.</param>
        <param name="dataRoles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>