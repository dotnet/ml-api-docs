<Type Name="ColumnGroupingInference" FullName="Microsoft.ML.Runtime.PipelineInference.ColumnGroupingInference">
  <TypeSignature Language="C#" Value="public static class ColumnGroupingInference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ColumnGroupingInference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.PipelineInference.ColumnGroupingInference" />
  <TypeSignature Language="VB.NET" Value="Public Class ColumnGroupingInference" />
  <TypeSignature Language="F#" Value="type ColumnGroupingInference = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ColumnGroupingInference abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class ColumnGroupingInference abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class ColumnGroupingInference abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This class incapsulates logic for grouping together the inferred columns of the text file based on their type
            and purpose, and generating column names.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GenerateLoaderColumns">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.TextLoader.Column[] GenerateLoaderColumns (Microsoft.ML.Runtime.PipelineInference.ColumnGroupingInference.GroupingColumn[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.TextLoader/Column[] GenerateLoaderColumns(valuetype Microsoft.ML.Runtime.PipelineInference.ColumnGroupingInference/GroupingColumn[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.ColumnGroupingInference.GenerateLoaderColumns(Microsoft.ML.Runtime.PipelineInference.ColumnGroupingInference.GroupingColumn[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateLoaderColumns (columns As ColumnGroupingInference.GroupingColumn()) As TextLoader.Column()" />
      <MemberSignature Language="F#" Value="static member GenerateLoaderColumns : Microsoft.ML.Runtime.PipelineInference.ColumnGroupingInference.GroupingColumn[] -&gt; Microsoft.ML.Runtime.Data.TextLoader.Column[]" Usage="Microsoft.ML.Runtime.PipelineInference.ColumnGroupingInference.GenerateLoaderColumns columns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Microsoft::ML::Runtime::Data::TextLoader::Column ^&gt; ^ GenerateLoaderColumns(cli::array &lt;Microsoft::ML::Runtime::PipelineInference::ColumnGroupingInference::GroupingColumn&gt; ^ columns);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::Array &lt;Microsoft::ML::Runtime::Data::TextLoader::Column const &amp;&gt; GenerateLoaderColumns(std::Array &lt;Microsoft::ML::Runtime::PipelineInference::ColumnGroupingInference::GroupingColumn&gt; const &amp; columns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.TextLoader+Column[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columns" Type="Microsoft.ML.Runtime.PipelineInference.ColumnGroupingInference+GroupingColumn[]" />
      </Parameters>
      <Docs>
        <param name="columns">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRange">
      <MemberSignature Language="C#" Value="public static int[] GetRange (string indicies);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] GetRange(string indicies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.ColumnGroupingInference.GetRange(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRange (indicies As String) As Integer()" />
      <MemberSignature Language="F#" Value="static member GetRange : string -&gt; int[]" Usage="Microsoft.ML.Runtime.PipelineInference.ColumnGroupingInference.GetRange indicies" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ GetRange(System::String ^ indicies);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::Array &lt;int&gt; ^ GetRange(Platform::String ^ indicies);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::Array &lt;int&gt; GetRange(std::wstring const &amp; indicies);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indicies" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="indicies">To be added.</param>
        <summary>
            Generates individual indices from a string range selector.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InferGroupingAndNames">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.PipelineInference.ColumnGroupingInference.InferenceResult InferGroupingAndNames (Microsoft.ML.Runtime.IHostEnvironment env, bool hasHeader, Microsoft.ML.Runtime.PipelineInference.ColumnTypeInference.Column[] types, Microsoft.ML.Runtime.PipelineInference.PurposeInference.Column[] purposes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.ML.Runtime.PipelineInference.ColumnGroupingInference/InferenceResult InferGroupingAndNames(class Microsoft.ML.Runtime.IHostEnvironment env, bool hasHeader, valuetype Microsoft.ML.Runtime.PipelineInference.ColumnTypeInference/Column[] types, valuetype Microsoft.ML.Runtime.PipelineInference.PurposeInference/Column[] purposes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.ColumnGroupingInference.InferGroupingAndNames(Microsoft.ML.Runtime.IHostEnvironment,System.Boolean,Microsoft.ML.Runtime.PipelineInference.ColumnTypeInference.Column[],Microsoft.ML.Runtime.PipelineInference.PurposeInference.Column[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InferGroupingAndNames (env As IHostEnvironment, hasHeader As Boolean, types As ColumnTypeInference.Column(), purposes As PurposeInference.Column()) As ColumnGroupingInference.InferenceResult" />
      <MemberSignature Language="F#" Value="static member InferGroupingAndNames : Microsoft.ML.Runtime.IHostEnvironment * bool * Microsoft.ML.Runtime.PipelineInference.ColumnTypeInference.Column[] * Microsoft.ML.Runtime.PipelineInference.PurposeInference.Column[] -&gt; Microsoft.ML.Runtime.PipelineInference.ColumnGroupingInference.InferenceResult" Usage="Microsoft.ML.Runtime.PipelineInference.ColumnGroupingInference.InferGroupingAndNames (env, hasHeader, types, purposes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::ML::Runtime::PipelineInference::ColumnGroupingInference::InferenceResult InferGroupingAndNames(Microsoft::ML::Runtime::IHostEnvironment ^ env, bool hasHeader, cli::array &lt;Microsoft::ML::Runtime::PipelineInference::ColumnTypeInference::Column&gt; ^ types, cli::array &lt;Microsoft::ML::Runtime::PipelineInference::PurposeInference::Column&gt; ^ purposes);" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::ML::Runtime::PipelineInference::ColumnGroupingInference::InferenceResult InferGroupingAndNames(Microsoft::ML::Runtime::IHostEnvironment const &amp; env, bool hasHeader, std::Array &lt;Microsoft::ML::Runtime::PipelineInference::ColumnTypeInference::Column&gt; const &amp; types, std::Array &lt;Microsoft::ML::Runtime::PipelineInference::PurposeInference::Column&gt; const &amp; purposes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.ColumnGroupingInference+InferenceResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="hasHeader" Type="System.Boolean" />
        <Parameter Name="types" Type="Microsoft.ML.Runtime.PipelineInference.ColumnTypeInference+Column[]" />
        <Parameter Name="purposes" Type="Microsoft.ML.Runtime.PipelineInference.PurposeInference+Column[]" />
      </Parameters>
      <Docs>
        <param name="env">The host environment to use.</param>
        <param name="hasHeader">Whether the original file had a header. 
            If yes, the <see cref="F:Microsoft.ML.Runtime.PipelineInference.ColumnTypeInference.Column.SuggestedName" /> fields are used to generate the column
            names, otherwise they are ignored.</param>
        <param name="types">The (detected) column types.</param>
        <param name="purposes">The (detected) column purposes. Must be parallel to <paramref name="types" />.</param>
        <summary>
            Group together the single-valued columns with the same type and purpose and generate column names.
            </summary>
        <returns>The struct containing an array of grouped columns specifications.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>