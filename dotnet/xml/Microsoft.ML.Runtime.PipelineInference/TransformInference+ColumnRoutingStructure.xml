<Type Name="TransformInference+ColumnRoutingStructure" FullName="Microsoft.ML.Runtime.PipelineInference.TransformInference+ColumnRoutingStructure">
  <TypeSignature Language="C#" Value="public sealed class TransformInference.ColumnRoutingStructure : IEquatable&lt;Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit TransformInference/ColumnRoutingStructure extends System.Object implements class System.IEquatable`1&lt;class Microsoft.ML.Runtime.PipelineInference.TransformInference/ColumnRoutingStructure&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TransformInference.ColumnRoutingStructure&#xA;Implements IEquatable(Of TransformInference.ColumnRoutingStructure)" />
  <TypeSignature Language="F#" Value="type TransformInference.ColumnRoutingStructure = class&#xA;    interface IEquatable&lt;TransformInference.ColumnRoutingStructure&gt;" />
  <TypeSignature Language="C++ CLI" Value="public: ref class TransformInference::ColumnRoutingStructure sealed : IEquatable&lt;Microsoft::ML::Runtime::PipelineInference::TransformInference::ColumnRoutingStructure ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.ML.Runtime.PipelineInference.TransformInference+ColumnRoutingStructure&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnRoutingStructure (Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure.AnnotatedName[] columnsConsumed, Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure.AnnotatedName[] columnsProduced, int level = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.ML.Runtime.PipelineInference.TransformInference/ColumnRoutingStructure/AnnotatedName[] columnsConsumed, valuetype Microsoft.ML.Runtime.PipelineInference.TransformInference/ColumnRoutingStructure/AnnotatedName[] columnsProduced, int32 level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure.#ctor(Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure.AnnotatedName[],Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure.AnnotatedName[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnsConsumed As TransformInference.ColumnRoutingStructure.AnnotatedName(), columnsProduced As TransformInference.ColumnRoutingStructure.AnnotatedName(), Optional level As Integer = 0)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure : Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure.AnnotatedName[] * Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure.AnnotatedName[] * int -&gt; Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure" Usage="new Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure (columnsConsumed, columnsProduced, level)" />
      <MemberSignature Language="C++ WINRT" Value=" ColumnRoutingStructure(std::Array &lt;Microsoft::ML::Runtime::PipelineInference::TransformInference::ColumnRoutingStructure::AnnotatedName&gt; const &amp; columnsConsumed, std::Array &lt;Microsoft::ML::Runtime::PipelineInference::TransformInference::ColumnRoutingStructure::AnnotatedName&gt; const &amp; columnsProduced, int level = 0);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnsConsumed" Type="Microsoft.ML.Runtime.PipelineInference.TransformInference+ColumnRoutingStructure+AnnotatedName[]" />
        <Parameter Name="columnsProduced" Type="Microsoft.ML.Runtime.PipelineInference.TransformInference+ColumnRoutingStructure+AnnotatedName[]" />
        <Parameter Name="level" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnsConsumed">To be added.</param>
        <param name="columnsProduced">To be added.</param>
        <param name="level">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnsConsumed">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure.AnnotatedName[] ColumnsConsumed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Runtime.PipelineInference.TransformInference/ColumnRoutingStructure/AnnotatedName[] ColumnsConsumed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure.ColumnsConsumed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnsConsumed As TransformInference.ColumnRoutingStructure.AnnotatedName()" />
      <MemberSignature Language="F#" Value="member this.ColumnsConsumed : Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure.AnnotatedName[]" Usage="Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure.ColumnsConsumed" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::ML::Runtime::PipelineInference::TransformInference::ColumnRoutingStructure::AnnotatedName&gt; ^ ColumnsConsumed { cli::array &lt;Microsoft::ML::Runtime::PipelineInference::TransformInference::ColumnRoutingStructure::AnnotatedName&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.TransformInference+ColumnRoutingStructure+AnnotatedName[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnsProduced">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure.AnnotatedName[] ColumnsProduced { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Runtime.PipelineInference.TransformInference/ColumnRoutingStructure/AnnotatedName[] ColumnsProduced" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure.ColumnsProduced" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnsProduced As TransformInference.ColumnRoutingStructure.AnnotatedName()" />
      <MemberSignature Language="F#" Value="member this.ColumnsProduced : Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure.AnnotatedName[]" Usage="Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure.ColumnsProduced" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::ML::Runtime::PipelineInference::TransformInference::ColumnRoutingStructure::AnnotatedName&gt; ^ ColumnsProduced { cli::array &lt;Microsoft::ML::Runtime::PipelineInference::TransformInference::ColumnRoutingStructure::AnnotatedName&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.TransformInference+ColumnRoutingStructure+AnnotatedName[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Microsoft.ML.Runtime.PipelineInference.TransformInference/ColumnRoutingStructure obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure.Equals(Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As TransformInference.ColumnRoutingStructure) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure -&gt; bool" Usage="columnRoutingStructure.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Microsoft::ML::Runtime::PipelineInference::TransformInference::ColumnRoutingStructure ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Microsoft.ML.Runtime.PipelineInference.TransformInference+ColumnRoutingStructure" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public int Level { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Level" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure.Level" />
      <MemberSignature Language="VB.NET" Value="Public Property Level As Integer" />
      <MemberSignature Language="F#" Value="member this.Level : int with get, set" Usage="Microsoft.ML.Runtime.PipelineInference.TransformInference.ColumnRoutingStructure.Level" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Level { int get(); void set(int value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int Level { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>