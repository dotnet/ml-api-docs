<Type Name="PipelinePattern" FullName="Microsoft.ML.Runtime.PipelineInference.PipelinePattern">
  <TypeSignature Language="C#" Value="public sealed class PipelinePattern : IEquatable&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PipelinePattern extends System.Object implements class System.IEquatable`1&lt;class Microsoft.ML.Runtime.PipelineInference.PipelinePattern&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.PipelineInference.PipelinePattern" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PipelinePattern&#xA;Implements IEquatable(Of PipelinePattern)" />
  <TypeSignature Language="F#" Value="type PipelinePattern = class&#xA;    interface IEquatable&lt;PipelinePattern&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.ML.Runtime.PipelineInference.PipelinePattern&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A runnable pipeline. Contains a learner and set of transforms,
            along with a RunSummary if it has already been exectued.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PipelinePattern (Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform[] transforms, Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner learner, string loaderSettings, Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.PipelineInference.PipelineSweeperRunSummary summary = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.ML.Runtime.PipelineInference.TransformInference/SuggestedTransform[] transforms, valuetype Microsoft.ML.Runtime.PipelineInference.RecipeInference/SuggestedRecipe/SuggestedLearner learner, string loaderSettings, class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.PipelineInference.PipelineSweeperRunSummary summary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.PipelinePattern.#ctor(Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform[],Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner,System.String,Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.PipelineInference.PipelineSweeperRunSummary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transforms As TransformInference.SuggestedTransform(), learner As RecipeInference.SuggestedRecipe.SuggestedLearner, loaderSettings As String, env As IHostEnvironment, Optional summary As PipelineSweeperRunSummary = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.PipelineInference.PipelinePattern : Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform[] * Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner * string * Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.PipelineInference.PipelineSweeperRunSummary -&gt; Microsoft.ML.Runtime.PipelineInference.PipelinePattern" Usage="new Microsoft.ML.Runtime.PipelineInference.PipelinePattern (transforms, learner, loaderSettings, env, summary)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transforms" Type="Microsoft.ML.Runtime.PipelineInference.TransformInference+SuggestedTransform[]" />
        <Parameter Name="learner" Type="Microsoft.ML.Runtime.PipelineInference.RecipeInference+SuggestedRecipe+SuggestedLearner" />
        <Parameter Name="loaderSettings" Type="System.String" />
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="summary" Type="Microsoft.ML.Runtime.PipelineInference.PipelineSweeperRunSummary" />
      </Parameters>
      <Docs>
        <param name="transforms">To be added.</param>
        <param name="learner">To be added.</param>
        <param name="loaderSettings">To be added.</param>
        <param name="env">To be added.</param>
        <param name="summary">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAsTrainTest">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.TrainTestEvaluator.Output AddAsTrainTest (Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; trainData, Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; testData, Microsoft.ML.Runtime.EntryPoints.MacroUtils.TrainerKinds trainerKind, Microsoft.ML.Runtime.Experiment experiment = null, bool includeTrainingMetrics = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Models.TrainTestEvaluator/Output AddAsTrainTest(class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; trainData, class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; testData, valuetype Microsoft.ML.Runtime.EntryPoints.MacroUtils/TrainerKinds trainerKind, class Microsoft.ML.Runtime.Experiment experiment, bool includeTrainingMetrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.PipelinePattern.AddAsTrainTest(Microsoft.ML.Runtime.EntryPoints.Var{Microsoft.ML.Runtime.Data.IDataView},Microsoft.ML.Runtime.EntryPoints.Var{Microsoft.ML.Runtime.Data.IDataView},Microsoft.ML.Runtime.EntryPoints.MacroUtils.TrainerKinds,Microsoft.ML.Runtime.Experiment,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.AddAsTrainTest : Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; * Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; * Microsoft.ML.Runtime.EntryPoints.MacroUtils.TrainerKinds * Microsoft.ML.Runtime.Experiment * bool -&gt; Microsoft.ML.Models.TrainTestEvaluator.Output" Usage="pipelinePattern.AddAsTrainTest (trainData, testData, trainerKind, experiment, includeTrainingMetrics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.TrainTestEvaluator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainData" Type="Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;" />
        <Parameter Name="testData" Type="Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;" />
        <Parameter Name="trainerKind" Type="Microsoft.ML.Runtime.EntryPoints.MacroUtils+TrainerKinds" />
        <Parameter Name="experiment" Type="Microsoft.ML.Runtime.Experiment" />
        <Parameter Name="includeTrainingMetrics" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="trainData">To be added.</param>
        <param name="testData">To be added.</param>
        <param name="trainerKind">To be added.</param>
        <param name="experiment">To be added.</param>
        <param name="includeTrainingMetrics">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTrainTestExperiment">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Experiment CreateTrainTestExperiment (Microsoft.ML.Runtime.Data.IDataView trainData, Microsoft.ML.Runtime.Data.IDataView testData, Microsoft.ML.Runtime.EntryPoints.MacroUtils.TrainerKinds trainerKind, bool includeTrainingMetrics, out Microsoft.ML.Models.TrainTestEvaluator.Output resultsOutput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.Experiment CreateTrainTestExperiment(class Microsoft.ML.Runtime.Data.IDataView trainData, class Microsoft.ML.Runtime.Data.IDataView testData, valuetype Microsoft.ML.Runtime.EntryPoints.MacroUtils/TrainerKinds trainerKind, bool includeTrainingMetrics, [out] class Microsoft.ML.Models.TrainTestEvaluator/Output&amp; resultsOutput) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.PipelinePattern.CreateTrainTestExperiment(Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.EntryPoints.MacroUtils.TrainerKinds,System.Boolean,Microsoft.ML.Models.TrainTestEvaluator.Output@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTrainTestExperiment (trainData As IDataView, testData As IDataView, trainerKind As MacroUtils.TrainerKinds, includeTrainingMetrics As Boolean, ByRef resultsOutput As TrainTestEvaluator.Output) As Experiment" />
      <MemberSignature Language="F#" Value="member this.CreateTrainTestExperiment : Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.EntryPoints.MacroUtils.TrainerKinds * bool *  -&gt; Microsoft.ML.Runtime.Experiment" Usage="pipelinePattern.CreateTrainTestExperiment (trainData, testData, trainerKind, includeTrainingMetrics, resultsOutput)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Experiment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainData" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="testData" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="trainerKind" Type="Microsoft.ML.Runtime.EntryPoints.MacroUtils+TrainerKinds" />
        <Parameter Name="includeTrainingMetrics" Type="System.Boolean" />
        <Parameter Name="resultsOutput" Type="Microsoft.ML.Models.TrainTestEvaluator+Output" RefType="out" />
      </Parameters>
      <Docs>
        <param name="trainData">To be added.</param>
        <param name="testData">To be added.</param>
        <param name="trainerKind">To be added.</param>
        <param name="includeTrainingMetrics">To be added.</param>
        <param name="resultsOutput">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.ML.Runtime.PipelineInference.PipelinePattern obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Microsoft.ML.Runtime.PipelineInference.PipelinePattern obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.PipelinePattern.Equals(Microsoft.ML.Runtime.PipelineInference.PipelinePattern)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As PipelinePattern) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.ML.Runtime.PipelineInference.PipelinePattern -&gt; bool" Usage="pipelinePattern.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Microsoft.ML.Runtime.PipelineInference.PipelinePattern" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractResults">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.PipelineInference.PipelinePattern.PipelineResultRow[] ExtractResults (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.IDataView data, string graphColName, string metricColName, string idColName, string trainingMetricColName, string firstInputColName, string predictorModelColName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.PipelineInference.PipelinePattern/PipelineResultRow[] ExtractResults(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.IDataView data, string graphColName, string metricColName, string idColName, string trainingMetricColName, string firstInputColName, string predictorModelColName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.PipelinePattern.ExtractResults(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.IDataView,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExtractResults (env As IHostEnvironment, data As IDataView, graphColName As String, metricColName As String, idColName As String, trainingMetricColName As String, firstInputColName As String, predictorModelColName As String) As PipelinePattern.PipelineResultRow()" />
      <MemberSignature Language="F#" Value="static member ExtractResults : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.IDataView * string * string * string * string * string * string -&gt; Microsoft.ML.Runtime.PipelineInference.PipelinePattern.PipelineResultRow[]" Usage="Microsoft.ML.Runtime.PipelineInference.PipelinePattern.ExtractResults (env, data, graphColName, metricColName, idColName, trainingMetricColName, firstInputColName, predictorModelColName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.PipelinePattern+PipelineResultRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="graphColName" Type="System.String" />
        <Parameter Name="metricColName" Type="System.String" />
        <Parameter Name="idColName" Type="System.String" />
        <Parameter Name="trainingMetricColName" Type="System.String" />
        <Parameter Name="firstInputColName" Type="System.String" />
        <Parameter Name="predictorModelColName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="data">To be added.</param>
        <param name="graphColName">To be added.</param>
        <param name="metricColName">To be added.</param>
        <param name="idColName">To be added.</param>
        <param name="trainingMetricColName">To be added.</param>
        <param name="firstInputColName">To be added.</param>
        <param name="predictorModelColName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Learner">
      <MemberSignature Language="C#" Value="public readonly Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner Learner;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly valuetype Microsoft.ML.Runtime.PipelineInference.RecipeInference/SuggestedRecipe/SuggestedLearner Learner" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.PipelinePattern.Learner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Learner As RecipeInference.SuggestedRecipe.SuggestedLearner " />
      <MemberSignature Language="F#" Value="val mutable Learner : Microsoft.ML.Runtime.PipelineInference.RecipeInference.SuggestedRecipe.SuggestedLearner" Usage="Microsoft.ML.Runtime.PipelineInference.PipelinePattern.Learner" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.RecipeInference+SuggestedRecipe+SuggestedLearner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoaderSettings">
      <MemberSignature Language="C#" Value="public string LoaderSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LoaderSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.PipelineInference.PipelinePattern.LoaderSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property LoaderSettings As String" />
      <MemberSignature Language="F#" Value="member this.LoaderSettings : string with get, set" Usage="Microsoft.ML.Runtime.PipelineInference.PipelinePattern.LoaderSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformanceSummary">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.PipelineInference.PipelineSweeperRunSummary PerformanceSummary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.PipelineInference.PipelineSweeperRunSummary PerformanceSummary" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.PipelineInference.PipelinePattern.PerformanceSummary" />
      <MemberSignature Language="VB.NET" Value="Public Property PerformanceSummary As PipelineSweeperRunSummary" />
      <MemberSignature Language="F#" Value="member this.PerformanceSummary : Microsoft.ML.Runtime.PipelineInference.PipelineSweeperRunSummary with get, set" Usage="Microsoft.ML.Runtime.PipelineInference.PipelinePattern.PerformanceSummary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.PipelineSweeperRunSummary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunTrainTestExperiment">
      <MemberSignature Language="C#" Value="public void RunTrainTestExperiment (Microsoft.ML.Runtime.Data.IDataView trainData, Microsoft.ML.Runtime.Data.IDataView testData, Microsoft.ML.Runtime.PipelineInference.SupportedMetric metric, Microsoft.ML.Runtime.EntryPoints.MacroUtils.TrainerKinds trainerKind, out double testMetricValue, out double trainMetricValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RunTrainTestExperiment(class Microsoft.ML.Runtime.Data.IDataView trainData, class Microsoft.ML.Runtime.Data.IDataView testData, class Microsoft.ML.Runtime.PipelineInference.SupportedMetric metric, valuetype Microsoft.ML.Runtime.EntryPoints.MacroUtils/TrainerKinds trainerKind, [out] float64&amp; testMetricValue, [out] float64&amp; trainMetricValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.PipelinePattern.RunTrainTestExperiment(Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.PipelineInference.SupportedMetric,Microsoft.ML.Runtime.EntryPoints.MacroUtils.TrainerKinds,System.Double@,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunTrainTestExperiment (trainData As IDataView, testData As IDataView, metric As SupportedMetric, trainerKind As MacroUtils.TrainerKinds, ByRef testMetricValue As Double, ByRef trainMetricValue As Double)" />
      <MemberSignature Language="F#" Value="member this.RunTrainTestExperiment : Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.PipelineInference.SupportedMetric * Microsoft.ML.Runtime.EntryPoints.MacroUtils.TrainerKinds *  *  -&gt; unit" Usage="pipelinePattern.RunTrainTestExperiment (trainData, testData, metric, trainerKind, testMetricValue, trainMetricValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainData" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="testData" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="metric" Type="Microsoft.ML.Runtime.PipelineInference.SupportedMetric" />
        <Parameter Name="trainerKind" Type="Microsoft.ML.Runtime.EntryPoints.MacroUtils+TrainerKinds" />
        <Parameter Name="testMetricValue" Type="System.Double" RefType="out" />
        <Parameter Name="trainMetricValue" Type="System.Double" RefType="out" />
      </Parameters>
      <Docs>
        <param name="trainData">To be added.</param>
        <param name="testData">To be added.</param>
        <param name="metric">To be added.</param>
        <param name="trainerKind">To be added.</param>
        <param name="testMetricValue">To be added.</param>
        <param name="trainMetricValue">To be added.</param>
        <summary>
            Runs a train-test experiment on the current pipeline, through entrypoints.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToEntryPointGraph">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.PipelineInference.AutoInference.EntryPointGraphDef ToEntryPointGraph (Microsoft.ML.Runtime.Experiment experiment = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.PipelineInference.AutoInference/EntryPointGraphDef ToEntryPointGraph(class Microsoft.ML.Runtime.Experiment experiment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.PipelinePattern.ToEntryPointGraph(Microsoft.ML.Runtime.Experiment)" />
      <MemberSignature Language="F#" Value="member this.ToEntryPointGraph : Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.Runtime.PipelineInference.AutoInference.EntryPointGraphDef" Usage="pipelinePattern.ToEntryPointGraph experiment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.AutoInference+EntryPointGraphDef</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="experiment" Type="Microsoft.ML.Runtime.Experiment" />
      </Parameters>
      <Docs>
        <param name="experiment">To be added.</param>
        <summary>
            Constructs an entrypoint graph from the current pipeline.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToResultRow">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.PipelineInference.PipelinePattern.PipelineResultRow ToResultRow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.PipelineInference.PipelinePattern/PipelineResultRow ToResultRow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.PipelinePattern.ToResultRow" />
      <MemberSignature Language="VB.NET" Value="Public Function ToResultRow () As PipelinePattern.PipelineResultRow" />
      <MemberSignature Language="F#" Value="member this.ToResultRow : unit -&gt; Microsoft.ML.Runtime.PipelineInference.PipelinePattern.PipelineResultRow" Usage="pipelinePattern.ToResultRow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.PipelinePattern+PipelineResultRow</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.PipelinePattern.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="pipelinePattern.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            This method will return some indentifying string for the pipeline,
            based on transforms, learner, and (eventually) hyperparameters.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transforms">
      <MemberSignature Language="C#" Value="public readonly Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform[] Transforms;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly valuetype Microsoft.ML.Runtime.PipelineInference.TransformInference/SuggestedTransform[] Transforms" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.PipelineInference.PipelinePattern.Transforms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Transforms As TransformInference.SuggestedTransform() " />
      <MemberSignature Language="F#" Value="val mutable Transforms : Microsoft.ML.Runtime.PipelineInference.TransformInference.SuggestedTransform[]" Usage="Microsoft.ML.Runtime.PipelineInference.PipelinePattern.Transforms" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.TransformInference+SuggestedTransform[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniqueId">
      <MemberSignature Language="C#" Value="public Guid UniqueId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid UniqueId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.PipelineInference.PipelinePattern.UniqueId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UniqueId As Guid" />
      <MemberSignature Language="F#" Value="member this.UniqueId : Guid" Usage="Microsoft.ML.Runtime.PipelineInference.PipelinePattern.UniqueId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>