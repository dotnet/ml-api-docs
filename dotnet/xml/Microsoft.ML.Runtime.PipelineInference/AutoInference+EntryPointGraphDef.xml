<Type Name="AutoInference+EntryPointGraphDef" FullName="Microsoft.ML.Runtime.PipelineInference.AutoInference+EntryPointGraphDef">
  <TypeSignature Language="C#" Value="public class AutoInference.EntryPointGraphDef" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit AutoInference/EntryPointGraphDef extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.PipelineInference.AutoInference.EntryPointGraphDef" />
  <TypeSignature Language="VB.NET" Value="Public Class AutoInference.EntryPointGraphDef" />
  <TypeSignature Language="F#" Value="type AutoInference.EntryPointGraphDef = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Class for encapsulating an entrypoint experiment graph
            and keeping track of the input and output nodes.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryPointGraphDef (Microsoft.ML.Runtime.Experiment experiment, Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.EntryPoints.IPredictorModel&gt; model, Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; transformsOutputData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.Experiment experiment, class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.EntryPoints.IPredictorModel&gt; model, class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; transformsOutputData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.AutoInference.EntryPointGraphDef.#ctor(Microsoft.ML.Runtime.Experiment,Microsoft.ML.Runtime.EntryPoints.Var{Microsoft.ML.Runtime.EntryPoints.IPredictorModel},Microsoft.ML.Runtime.EntryPoints.Var{Microsoft.ML.Runtime.Data.IDataView})" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.PipelineInference.AutoInference.EntryPointGraphDef : Microsoft.ML.Runtime.Experiment * Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.EntryPoints.IPredictorModel&gt; * Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; -&gt; Microsoft.ML.Runtime.PipelineInference.AutoInference.EntryPointGraphDef" Usage="new Microsoft.ML.Runtime.PipelineInference.AutoInference.EntryPointGraphDef (experiment, model, transformsOutputData)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="experiment" Type="Microsoft.ML.Runtime.Experiment" />
        <Parameter Name="model" Type="Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.EntryPoints.IPredictorModel&gt;" />
        <Parameter Name="transformsOutputData" Type="Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;" />
      </Parameters>
      <Docs>
        <param name="experiment">To be added.</param>
        <param name="model">To be added.</param>
        <param name="transformsOutputData">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubgraphFirstNodeDataVarName">
      <MemberSignature Language="C#" Value="public string GetSubgraphFirstNodeDataVarName (Microsoft.ML.Runtime.IExceptionContext ectx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetSubgraphFirstNodeDataVarName(class Microsoft.ML.Runtime.IExceptionContext ectx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.AutoInference.EntryPointGraphDef.GetSubgraphFirstNodeDataVarName(Microsoft.ML.Runtime.IExceptionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubgraphFirstNodeDataVarName (ectx As IExceptionContext) As String" />
      <MemberSignature Language="F#" Value="member this.GetSubgraphFirstNodeDataVarName : Microsoft.ML.Runtime.IExceptionContext -&gt; string" Usage="entryPointGraphDef.GetSubgraphFirstNodeDataVarName ectx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ectx" Type="Microsoft.ML.Runtime.IExceptionContext" />
      </Parameters>
      <Docs>
        <param name="ectx">To be added.</param>
        <summary>
            Get the name of the variable asssigned to the Data or Training Data input, based on what is the first node of the subgraph.
            A better way to do this would be with a ICanBeSubGraphFirstNode common interface between ITransformInput and ITrainerInputs 
            and a custom deserializer. 
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Graph">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Experiment Graph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.Experiment Graph" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.PipelineInference.AutoInference.EntryPointGraphDef.Graph" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graph As Experiment" />
      <MemberSignature Language="F#" Value="member this.Graph : Microsoft.ML.Runtime.Experiment" Usage="Microsoft.ML.Runtime.PipelineInference.AutoInference.EntryPointGraphDef.Graph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Experiment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelOutput">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.EntryPoints.IPredictorModel&gt; ModelOutput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.EntryPoints.IPredictorModel&gt; ModelOutput" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.PipelineInference.AutoInference.EntryPointGraphDef.ModelOutput" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModelOutput As Var(Of IPredictorModel)" />
      <MemberSignature Language="F#" Value="member this.ModelOutput : Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.EntryPoints.IPredictorModel&gt;" Usage="Microsoft.ML.Runtime.PipelineInference.AutoInference.EntryPointGraphDef.ModelOutput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.EntryPoints.IPredictorModel&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformsOutputData">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; TransformsOutputData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; TransformsOutputData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.PipelineInference.AutoInference.EntryPointGraphDef.TransformsOutputData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransformsOutputData As Var(Of IDataView)" />
      <MemberSignature Language="F#" Value="member this.TransformsOutputData : Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;" Usage="Microsoft.ML.Runtime.PipelineInference.AutoInference.EntryPointGraphDef.TransformsOutputData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>