<Type Name="IPipelineNode&lt;TModelType&gt;" FullName="Microsoft.ML.Runtime.PipelineInference.IPipelineNode&lt;TModelType&gt;">
  <TypeSignature Language="C#" Value="public interface IPipelineNode&lt;TModelType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPipelineNode`1&lt;TModelType&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.PipelineInference.IPipelineNode`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPipelineNode(Of TModelType)" />
  <TypeSignature Language="F#" Value="type IPipelineNode&lt;'ModelType&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TModelType" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="TModelType">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.PipelineInference.DataAndModel&lt;TModelType&gt; Add (Microsoft.ML.Runtime.Experiment experiment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.PipelineInference.DataAndModel`1&lt;!TModelType&gt; Add(class Microsoft.ML.Runtime.Experiment experiment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.IPipelineNode`1.Add(Microsoft.ML.Runtime.Experiment)" />
      <MemberSignature Language="F#" Value="abstract member Add : Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.Runtime.PipelineInference.DataAndModel&lt;'ModelType&gt;" Usage="iPipelineNode.Add experiment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PipelineInference.DataAndModel&lt;TModelType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="experiment" Type="Microsoft.ML.Runtime.Experiment" />
      </Parameters>
      <Docs>
        <param name="experiment">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueByName&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetPropertyValueByName&lt;T&gt; (string name, T defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetPropertyValueByName&lt;T&gt;(string name, !!T defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.IPipelineNode`1.GetPropertyValueByName``1(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValueByName(Of T) (name As String, defaultValue As T) As T" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValueByName : string * 'T -&gt; 'T" Usage="iPipelineNode.GetPropertyValueByName (name, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="name">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInputData">
      <MemberSignature Language="C#" Value="public void SetInputData (Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInputData(class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.IPipelineNode`1.SetInputData(Microsoft.ML.Runtime.EntryPoints.Var{Microsoft.ML.Runtime.Data.IDataView})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetInputData (data As Var(Of IDataView))" />
      <MemberSignature Language="F#" Value="abstract member SetInputData : Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; -&gt; unit" Usage="iPipelineNode.SetInputData data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInputData">
      <MemberSignature Language="C#" Value="public void SetInputData (Microsoft.ML.Runtime.Data.IDataView data, Microsoft.ML.Runtime.Experiment experiment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInputData(class Microsoft.ML.Runtime.Data.IDataView data, class Microsoft.ML.Runtime.Experiment experiment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.PipelineInference.IPipelineNode`1.SetInputData(Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.Experiment)" />
      <MemberSignature Language="F#" Value="abstract member SetInputData : Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.Experiment -&gt; unit" Usage="iPipelineNode.SetInputData (data, experiment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PipelineInference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="experiment" Type="Microsoft.ML.Runtime.Experiment" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="experiment">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>