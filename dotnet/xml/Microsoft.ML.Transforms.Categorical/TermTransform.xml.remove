<Type Name="TermTransform" FullName="Microsoft.ML.Transforms.Categorical.TermTransform">
  <TypeSignature Language="C#" Value="public sealed class TermTransform : Microsoft.ML.Runtime.Data.OneToOneTransformerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TermTransform extends Microsoft.ML.Runtime.Data.OneToOneTransformerBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.Categorical.TermTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TermTransform&#xA;Inherits OneToOneTransformerBase" />
  <TypeSignature Language="F#" Value="type TermTransform = class&#xA;    inherit OneToOneTransformerBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.Data.OneToOneTransformerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
        Converts input values (words, numbers, etc.) to index in a dictionary.
      </summary>
    <remarks>
        The TextToKeyConverter transform builds up term vocabularies (dictionaries).
        The TextToKeyConverter and the <see cref="T:Microsoft.ML.Transforms.HashConverter" /> are the two one primary mechanisms by which raw input is transformed into keys.
        If multiple columns are used, each column builds/uses exactly one vocabulary.
        The output columns are KeyType-valued.
        The Key value is the one-based index of the item in the dictionary.
        If the key is not found in the dictionary, it is assigned the missing value indicator.
        This dictionary mapping values to keys is most commonly learnt from the unique values in input data,
        but can be defined through other means: either with the mapping defined directly on the command line, or as loaded from an external file.
      </remarks>
    <altmember cref="T:Microsoft.ML.Transforms.HashConverter" />
    <altmember cref="T:Microsoft.ML.Transforms.KeyToTextConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TermTransform (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.IDataView input, params Microsoft.ML.Transforms.Categorical.TermTransform.ColumnInfo[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.IDataView input, class Microsoft.ML.Transforms.Categorical.TermTransform/ColumnInfo[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Categorical.TermTransform.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Transforms.Categorical.TermTransform.ColumnInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, input As IDataView, ParamArray columns As TermTransform.ColumnInfo())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.Categorical.TermTransform : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Transforms.Categorical.TermTransform.ColumnInfo[] -&gt; Microsoft.ML.Transforms.Categorical.TermTransform" Usage="new Microsoft.ML.Transforms.Categorical.TermTransform (env, input, columns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="columns" Type="Microsoft.ML.Transforms.Categorical.TermTransform+ColumnInfo[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <param name="columns">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataTransform Create (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Transforms.Categorical.TermTransform.Arguments args, Microsoft.ML.Runtime.Data.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataTransform Create(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Transforms.Categorical.TermTransform/Arguments args, class Microsoft.ML.Runtime.Data.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Categorical.TermTransform.Create(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Transforms.Categorical.TermTransform.Arguments,Microsoft.ML.Runtime.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (env As IHostEnvironment, args As TermTransform.Arguments, input As IDataView) As IDataTransform" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Transforms.Categorical.TermTransform.Arguments * Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.Data.IDataTransform" Usage="Microsoft.ML.Transforms.Categorical.TermTransform.Create (env, args, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="args" Type="Microsoft.ML.Transforms.Categorical.TermTransform+Arguments" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataTransform Create (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Transforms.Categorical.TermTransform.ArgumentsBase args, Microsoft.ML.Transforms.Categorical.TermTransform.ColumnBase[] column, Microsoft.ML.Runtime.Data.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataTransform Create(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Transforms.Categorical.TermTransform/ArgumentsBase args, class Microsoft.ML.Transforms.Categorical.TermTransform/ColumnBase[] column, class Microsoft.ML.Runtime.Data.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Categorical.TermTransform.Create(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Transforms.Categorical.TermTransform.ArgumentsBase,Microsoft.ML.Transforms.Categorical.TermTransform.ColumnBase[],Microsoft.ML.Runtime.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (env As IHostEnvironment, args As TermTransform.ArgumentsBase, column As TermTransform.ColumnBase(), input As IDataView) As IDataTransform" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Transforms.Categorical.TermTransform.ArgumentsBase * Microsoft.ML.Transforms.Categorical.TermTransform.ColumnBase[] * Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.Data.IDataTransform" Usage="Microsoft.ML.Transforms.Categorical.TermTransform.Create (env, args, column, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="args" Type="Microsoft.ML.Transforms.Categorical.TermTransform+ArgumentsBase" />
        <Parameter Name="column" Type="Microsoft.ML.Transforms.Categorical.TermTransform+ColumnBase[]" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <param name="column">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataView Create (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.IDataView input, string name, string source = null, int maxNumTerms = 1000000, Microsoft.ML.Transforms.Categorical.TermTransform.SortOrder sort = Microsoft.ML.Transforms.Categorical.TermTransform+SortOrder.Occurrence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataView Create(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.IDataView input, string name, string source, int32 maxNumTerms, valuetype Microsoft.ML.Transforms.Categorical.TermTransform/SortOrder sort) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Categorical.TermTransform.Create(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.IDataView,System.String,System.String,System.Int32,Microsoft.ML.Transforms.Categorical.TermTransform.SortOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (env As IHostEnvironment, input As IDataView, name As String, Optional source As String = null, Optional maxNumTerms As Integer = 1000000, Optional sort As TermTransform.SortOrder = Microsoft.ML.Transforms.Categorical.TermTransform+SortOrder.Occurrence) As IDataView" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.IDataView * string * string * int * Microsoft.ML.Transforms.Categorical.TermTransform.SortOrder -&gt; Microsoft.ML.Runtime.Data.IDataView" Usage="Microsoft.ML.Transforms.Categorical.TermTransform.Create (env, input, name, source, maxNumTerms, sort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="maxNumTerms" Type="System.Int32" />
        <Parameter Name="sort" Type="Microsoft.ML.Transforms.Categorical.TermTransform+SortOrder" />
      </Parameters>
      <Docs>
        <param name="env">Host Environment.</param>
        <param name="input">Input <see cref="T:Microsoft.ML.Runtime.Data.IDataView" />. This is the output from previous transform or loader.</param>
        <param name="name">Name of the output column.</param>
        <param name="source">Name of the column to be transformed. If this is null '<paramref name="name" />' will be used.</param>
        <param name="maxNumTerms">Maximum number of terms to keep per column when auto-training.</param>
        <param name="sort">How items should be ordered when vectorized. By default, they will be in the order encountered.
            If by value items are sorted according to their default comparison, for example, text sorting will be case sensitive (for example, 'A' then 'Z' then 'a').</param>
        <summary>
            Convenience constructor for public facing API.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FriendlyName">
      <MemberSignature Language="C#" Value="public const string FriendlyName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FriendlyName" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Categorical.TermTransform.FriendlyName" />
      <MemberSignature Language="VB.NET" Value="Public Const FriendlyName As String " />
      <MemberSignature Language="F#" Value="val mutable FriendlyName : string" Usage="Microsoft.ML.Transforms.Categorical.TermTransform.FriendlyName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTermMap">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.Categorical.TermTransform.TermMap GetTermMap (int iinfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.Categorical.TermTransform/TermMap GetTermMap(int32 iinfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Categorical.TermTransform.GetTermMap(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTermMap (iinfo As Integer) As TermTransform.TermMap" />
      <MemberSignature Language="F#" Value="member this.GetTermMap : int -&gt; Microsoft.ML.Transforms.Categorical.TermTransform.TermMap" Usage="termTransform.GetTermMap iinfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Categorical.TermTransform+TermMap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iinfo" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="iinfo">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoaderSignature">
      <MemberSignature Language="C#" Value="public const string LoaderSignature;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string LoaderSignature" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Categorical.TermTransform.LoaderSignature" />
      <MemberSignature Language="VB.NET" Value="Public Const LoaderSignature As String " />
      <MemberSignature Language="F#" Value="val mutable LoaderSignature : string" Usage="Microsoft.ML.Transforms.Categorical.TermTransform.LoaderSignature" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeRowMapper">
      <MemberSignature Language="C#" Value="protected override Microsoft.ML.Runtime.Data.IRowMapper MakeRowMapper (Microsoft.ML.Runtime.Data.ISchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.ML.Runtime.Data.IRowMapper MakeRowMapper(class Microsoft.ML.Runtime.Data.ISchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Categorical.TermTransform.MakeRowMapper(Microsoft.ML.Runtime.Data.ISchema)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MakeRowMapper (schema As ISchema) As IRowMapper" />
      <MemberSignature Language="F#" Value="override this.MakeRowMapper : Microsoft.ML.Runtime.Data.ISchema -&gt; Microsoft.ML.Runtime.Data.IRowMapper" Usage="termTransform.MakeRowMapper schema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IRowMapper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.ISchema" />
      </Parameters>
      <Docs>
        <param name="schema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save (Microsoft.ML.Runtime.Model.ModelSaveContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save(class Microsoft.ML.Runtime.Model.ModelSaveContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Categorical.TermTransform.Save(Microsoft.ML.Runtime.Model.ModelSaveContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save (ctx As ModelSaveContext)" />
      <MemberSignature Language="F#" Value="override this.Save : Microsoft.ML.Runtime.Model.ModelSaveContext -&gt; unit" Usage="termTransform.Save ctx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.ModelSaveContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Summary">
      <MemberSignature Language="C#" Value="public const string Summary;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Summary" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Categorical.TermTransform.Summary" />
      <MemberSignature Language="VB.NET" Value="Public Const Summary As String " />
      <MemberSignature Language="F#" Value="val mutable Summary : string" Usage="Microsoft.ML.Transforms.Categorical.TermTransform.Summary" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TermManagerLoaderSignature">
      <MemberSignature Language="C#" Value="public const string TermManagerLoaderSignature;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string TermManagerLoaderSignature" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Categorical.TermTransform.TermManagerLoaderSignature" />
      <MemberSignature Language="VB.NET" Value="Public Const TermManagerLoaderSignature As String " />
      <MemberSignature Language="F#" Value="val mutable TermManagerLoaderSignature : string" Usage="Microsoft.ML.Transforms.Categorical.TermTransform.TermManagerLoaderSignature" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public const string UserName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UserName" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Categorical.TermTransform.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Const UserName As String " />
      <MemberSignature Language="F#" Value="val mutable UserName : string" Usage="Microsoft.ML.Transforms.Categorical.TermTransform.UserName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
