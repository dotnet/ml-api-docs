<Type Name="OneHotHashEncodingEstimator" FullName="Microsoft.ML.Transforms.Categorical.OneHotHashEncodingEstimator">
  <TypeSignature Language="C#" Value="public sealed class OneHotHashEncodingEstimator : Microsoft.ML.Core.Data.IEstimator&lt;Microsoft.ML.Transforms.Categorical.OneHotHashEncoding&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OneHotHashEncodingEstimator extends System.Object implements class Microsoft.ML.Core.Data.IEstimator`1&lt;class Microsoft.ML.Transforms.Categorical.OneHotHashEncoding&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.Categorical.OneHotHashEncodingEstimator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OneHotHashEncodingEstimator&#xA;Implements IEstimator(Of OneHotHashEncoding)" />
  <TypeSignature Language="F#" Value="type OneHotHashEncodingEstimator = class&#xA;    interface IEstimator&lt;OneHotHashEncoding&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Core.Data.IEstimator&lt;Microsoft.ML.Transforms.Categorical.OneHotHashEncoding&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Estimator which takes set of columns and produce for each column indicator array. Use hashing to determine indicator position.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OneHotHashEncodingEstimator (Microsoft.ML.IHostEnvironment env, params Microsoft.ML.Transforms.Categorical.OneHotHashEncodingEstimator.ColumnInfo[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Transforms.Categorical.OneHotHashEncodingEstimator/ColumnInfo[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Categorical.OneHotHashEncodingEstimator.#ctor(Microsoft.ML.IHostEnvironment,Microsoft.ML.Transforms.Categorical.OneHotHashEncodingEstimator.ColumnInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, ParamArray columns As OneHotHashEncodingEstimator.ColumnInfo())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.Categorical.OneHotHashEncodingEstimator : Microsoft.ML.IHostEnvironment * Microsoft.ML.Transforms.Categorical.OneHotHashEncodingEstimator.ColumnInfo[] -&gt; Microsoft.ML.Transforms.Categorical.OneHotHashEncodingEstimator" Usage="new Microsoft.ML.Transforms.Categorical.OneHotHashEncodingEstimator (env, columns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="columns" Type="Microsoft.ML.Transforms.Categorical.OneHotHashEncodingEstimator+ColumnInfo[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="columns">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OneHotHashEncodingEstimator (Microsoft.ML.IHostEnvironment env, string outputColumnName, string inputColumnName = null, int hashBits = 16, int invertHash = 0, Microsoft.ML.Transforms.Categorical.OneHotEncodingTransformer.OutputKind outputKind = Microsoft.ML.Transforms.Categorical.OneHotEncodingTransformer+OutputKind.Bag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, string outputColumnName, string inputColumnName, int32 hashBits, int32 invertHash, valuetype Microsoft.ML.Transforms.Categorical.OneHotEncodingTransformer/OutputKind outputKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Categorical.OneHotHashEncodingEstimator.#ctor(Microsoft.ML.IHostEnvironment,System.String,System.String,System.Int32,System.Int32,Microsoft.ML.Transforms.Categorical.OneHotEncodingTransformer.OutputKind)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.Categorical.OneHotHashEncodingEstimator : Microsoft.ML.IHostEnvironment * string * string * int * int * Microsoft.ML.Transforms.Categorical.OneHotEncodingTransformer.OutputKind -&gt; Microsoft.ML.Transforms.Categorical.OneHotHashEncodingEstimator" Usage="new Microsoft.ML.Transforms.Categorical.OneHotHashEncodingEstimator (env, outputColumnName, inputColumnName, hashBits, invertHash, outputKind)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" Index="0" />
        <Parameter Name="outputColumnName" Type="System.String" Index="1" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="inputColumnName" Type="System.String" Index="2" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="hashBits" Type="System.Int32" Index="3" />
        <Parameter Name="invertHash" Type="System.Int32" Index="4" />
        <Parameter Name="outputKind" Type="Microsoft.ML.Transforms.Categorical.OneHotEncodingTransformer+OutputKind" Index="5" />
      </Parameters>
      <Docs>
        <param name="env">Host Environment.</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="inputColumnName">Name of the column to transform.
            If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="hashBits">Number of bits to hash into. Must be between 1 and 30, inclusive.</param>
        <param name="invertHash">During hashing we constuct mappings between original values and the produced hash values.
            Text representation of original values are stored in the slot names of the  metadata for the new column.Hashing, as such, can map many initial values to one.
            <paramref name="invertHash" /> specifies the upper bound of the number of distinct input values mapping to a hash that should be retained.
            <value>0</value> does not retain any input values. <value>-1</value> retains all input values mapping to each hash.</param>
        <param name="outputKind">The type of output expected.</param>
        <summary>
            A helper method to create <see cref="T:Microsoft.ML.Transforms.Categorical.OneHotHashEncodingEstimator" /> for public facing API.
            </summary>
        <remarks>To be added.</remarks>
        <see cref="T:Microsoft.ML.Transforms.Categorical.OneHotHashEncodingEstimator" />
      </Docs>
    </Member>
    <Member MemberName="Fit">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.Categorical.OneHotHashEncoding Fit (Microsoft.Data.DataView.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Transforms.Categorical.OneHotHashEncoding Fit(class Microsoft.Data.DataView.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Categorical.OneHotHashEncodingEstimator.Fit(Microsoft.Data.DataView.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fit (input As IDataView) As OneHotHashEncoding" />
      <MemberSignature Language="F#" Value="abstract member Fit : Microsoft.Data.DataView.IDataView -&gt; Microsoft.ML.Transforms.Categorical.OneHotHashEncoding&#xA;override this.Fit : Microsoft.Data.DataView.IDataView -&gt; Microsoft.ML.Transforms.Categorical.OneHotHashEncoding" Usage="oneHotHashEncodingEstimator.Fit input" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IEstimator`1.Fit(Microsoft.Data.DataView.IDataView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Categorical.OneHotHashEncoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.Data.DataView.IDataView" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Core.Data.SchemaShape GetOutputSchema (Microsoft.ML.Core.Data.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Core.Data.SchemaShape GetOutputSchema(class Microsoft.ML.Core.Data.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Categorical.OneHotHashEncodingEstimator.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutputSchema (inputSchema As SchemaShape) As SchemaShape" />
      <MemberSignature Language="F#" Value="abstract member GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape&#xA;override this.GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape" Usage="oneHotHashEncodingEstimator.GetOutputSchema inputSchema" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IEstimator`1.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Core.Data.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>