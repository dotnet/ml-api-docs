<Type Name="OneHotHashEncoding" FullName="Microsoft.ML.Transforms.Categorical.OneHotHashEncoding">
  <TypeSignature Language="C#" Value="public sealed class OneHotHashEncoding : Microsoft.ML.Core.Data.ITransformer, Microsoft.ML.Model.ICanSaveModel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OneHotHashEncoding extends System.Object implements class Microsoft.ML.Core.Data.ITransformer, class Microsoft.ML.Model.ICanSaveModel" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.Categorical.OneHotHashEncoding" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OneHotHashEncoding&#xA;Implements ICanSaveModel, ITransformer" />
  <TypeSignature Language="F#" Value="type OneHotHashEncoding = class&#xA;    interface ITransformer&#xA;    interface ICanSaveModel" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Core.Data.ITransformer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Model.ICanSaveModel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Data.IDataView Create (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Data.IDataView input, string name, string source = null, int hashBits = 16, int invertHash = 0, Microsoft.ML.Transforms.Categorical.OneHotEncodingTransformer.OutputKind outputKind = Microsoft.ML.Transforms.Categorical.OneHotEncodingTransformer+OutputKind.Bag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Data.IDataView Create(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Data.IDataView input, string name, string source, int32 hashBits, int32 invertHash, valuetype Microsoft.ML.Transforms.Categorical.OneHotEncodingTransformer/OutputKind outputKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Categorical.OneHotHashEncoding.Create(Microsoft.ML.IHostEnvironment,Microsoft.ML.Data.IDataView,System.String,System.String,System.Int32,System.Int32,Microsoft.ML.Transforms.Categorical.OneHotEncodingTransformer.OutputKind)" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.ML.IHostEnvironment * Microsoft.ML.Data.IDataView * string * string * int * int * Microsoft.ML.Transforms.Categorical.OneHotEncodingTransformer.OutputKind -&gt; Microsoft.ML.Data.IDataView" Usage="Microsoft.ML.Transforms.Categorical.OneHotHashEncoding.Create (env, input, name, source, hashBits, invertHash, outputKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.IDataView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Data.IDataView" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="hashBits" Type="System.Int32" />
        <Parameter Name="invertHash" Type="System.Int32" />
        <Parameter Name="outputKind" Type="Microsoft.ML.Transforms.Categorical.OneHotEncodingTransformer+OutputKind" />
      </Parameters>
      <Docs>
        <param name="env">Host Environment.</param>
        <param name="input">Input <see cref="T:Microsoft.ML.Data.IDataView" />. This is the output from previous transform or loader.</param>
        <param name="name">Name of the output column.</param>
        <param name="source">Name of the column to be transformed. If this is null '<paramref name="name" />' will be used.</param>
        <param name="hashBits">Number of bits to hash into. Must be between 1 and 30, inclusive.</param>
        <param name="invertHash">During hashing we constuct mappings between original values and the produced hash values.
            Text representation of original values are stored in the slot names of the  metadata for the new column.Hashing, as such, can map many initial values to one.
            <paramref name="invertHash" /> specifies the upper bound of the number of distinct input values mapping to a hash that should be retained.
            <value>0</value> does not retain any input values. <value>-1</value> retains all input values mapping to each hash.</param>
        <param name="outputKind">The type of output expected.</param>
        <summary>
            A helper method to create <see cref="T:Microsoft.ML.Transforms.Categorical.OneHotHashEncoding" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.Schema GetOutputSchema (Microsoft.ML.Data.Schema inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Data.Schema GetOutputSchema(class Microsoft.ML.Data.Schema inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Categorical.OneHotHashEncoding.GetOutputSchema(Microsoft.ML.Data.Schema)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutputSchema (inputSchema As Schema) As Schema" />
      <MemberSignature Language="F#" Value="abstract member GetOutputSchema : Microsoft.ML.Data.Schema -&gt; Microsoft.ML.Data.Schema&#xA;override this.GetOutputSchema : Microsoft.ML.Data.Schema -&gt; Microsoft.ML.Data.Schema" Usage="oneHotHashEncoding.GetOutputSchema inputSchema" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.ITransformer.GetOutputSchema(Microsoft.ML.Data.Schema)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.Schema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Data.Schema" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowToRowMapper">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.IRowToRowMapper GetRowToRowMapper (Microsoft.ML.Data.Schema inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Data.IRowToRowMapper GetRowToRowMapper(class Microsoft.ML.Data.Schema inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Categorical.OneHotHashEncoding.GetRowToRowMapper(Microsoft.ML.Data.Schema)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowToRowMapper (inputSchema As Schema) As IRowToRowMapper" />
      <MemberSignature Language="F#" Value="abstract member GetRowToRowMapper : Microsoft.ML.Data.Schema -&gt; Microsoft.ML.Data.IRowToRowMapper&#xA;override this.GetRowToRowMapper : Microsoft.ML.Data.Schema -&gt; Microsoft.ML.Data.IRowToRowMapper" Usage="oneHotHashEncoding.GetRowToRowMapper inputSchema" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.ITransformer.GetRowToRowMapper(Microsoft.ML.Data.Schema)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.IRowToRowMapper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Data.Schema" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRowToRowMapper">
      <MemberSignature Language="C#" Value="public bool IsRowToRowMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRowToRowMapper" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Categorical.OneHotHashEncoding.IsRowToRowMapper" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRowToRowMapper As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsRowToRowMapper : bool" Usage="Microsoft.ML.Transforms.Categorical.OneHotHashEncoding.IsRowToRowMapper" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Core.Data.ITransformer.IsRowToRowMapper</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (Microsoft.ML.Model.ModelSaveContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class Microsoft.ML.Model.ModelSaveContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Categorical.OneHotHashEncoding.Save(Microsoft.ML.Model.ModelSaveContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (ctx As ModelSaveContext)" />
      <MemberSignature Language="F#" Value="abstract member Save : Microsoft.ML.Model.ModelSaveContext -&gt; unit&#xA;override this.Save : Microsoft.ML.Model.ModelSaveContext -&gt; unit" Usage="oneHotHashEncoding.Save ctx" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Model.ICanSaveModel.Save(Microsoft.ML.Model.ModelSaveContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Model.ModelSaveContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.IDataView Transform (Microsoft.ML.Data.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Data.IDataView Transform(class Microsoft.ML.Data.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Categorical.OneHotHashEncoding.Transform(Microsoft.ML.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IDataView) As IDataView" />
      <MemberSignature Language="F#" Value="abstract member Transform : Microsoft.ML.Data.IDataView -&gt; Microsoft.ML.Data.IDataView&#xA;override this.Transform : Microsoft.ML.Data.IDataView -&gt; Microsoft.ML.Data.IDataView" Usage="oneHotHashEncoding.Transform input" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.ITransformer.Transform(Microsoft.ML.Data.IDataView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.IDataView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Data.IDataView" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public const string UserName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UserName" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Categorical.OneHotHashEncoding.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Const UserName As String " />
      <MemberSignature Language="F#" Value="val mutable UserName : string" Usage="Microsoft.ML.Transforms.Categorical.OneHotHashEncoding.UserName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>