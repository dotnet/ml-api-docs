<Type Name="BinaryClassificationMetrics" FullName="Microsoft.ML.Models.BinaryClassificationMetrics">
  <TypeSignature Language="C#" Value="public sealed class BinaryClassificationMetrics" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BinaryClassificationMetrics extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Models.BinaryClassificationMetrics" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BinaryClassificationMetrics" />
  <TypeSignature Language="F#" Value="type BinaryClassificationMetrics = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This class contains the overall metrics computed by binary classification evaluators.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accuracy">
      <MemberSignature Language="C#" Value="public double Accuracy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Accuracy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Models.BinaryClassificationMetrics.Accuracy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Accuracy As Double" />
      <MemberSignature Language="F#" Value="member this.Accuracy : double" Usage="Microsoft.ML.Models.BinaryClassificationMetrics.Accuracy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the accuracy of a classifier which is the proportion of correct predictions in the test set.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Auc">
      <MemberSignature Language="C#" Value="public double Auc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Auc" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Models.BinaryClassificationMetrics.Auc" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Auc As Double" />
      <MemberSignature Language="F#" Value="member this.Auc : double" Usage="Microsoft.ML.Models.BinaryClassificationMetrics.Auc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the area under the ROC curve.
            </summary>
        <value>To be added.</value>
        <remarks>
            The area under the ROC curve is equal to the probability that the classifier ranks
            a randomly chosen positive instance higher than a randomly chosen negative one
            (assuming 'positive' ranks higher than 'negative').
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Auprc">
      <MemberSignature Language="C#" Value="public double Auprc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Auprc" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Models.BinaryClassificationMetrics.Auprc" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Auprc As Double" />
      <MemberSignature Language="F#" Value="member this.Auprc : double" Usage="Microsoft.ML.Models.BinaryClassificationMetrics.Auprc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the area under the precision/recall curve of the classifier.
            </summary>
        <value>To be added.</value>
        <remarks>
            The area under the precision/recall curve is a single number summary of the information in the
            precision/recall curve. It is increasingly used in the machine learning community, particularly
            for imbalanced datasets where one class is observed more frequently than the other. On these
            datasets, AUPRC can highlight performance differences that are lost with AUC.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfusionMatrix">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.ConfusionMatrix ConfusionMatrix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Models.ConfusionMatrix ConfusionMatrix" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Models.BinaryClassificationMetrics.ConfusionMatrix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConfusionMatrix As ConfusionMatrix" />
      <MemberSignature Language="F#" Value="member this.ConfusionMatrix : Microsoft.ML.Models.ConfusionMatrix" Usage="Microsoft.ML.Models.BinaryClassificationMetrics.ConfusionMatrix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.ConfusionMatrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the confusion matrix, or error matrix, of the classifier.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entropy">
      <MemberSignature Language="C#" Value="public double Entropy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Entropy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Models.BinaryClassificationMetrics.Entropy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entropy As Double" />
      <MemberSignature Language="F#" Value="member this.Entropy : double" Usage="Microsoft.ML.Models.BinaryClassificationMetrics.Entropy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the test-set entropy (prior Log-Loss/instance) of the classifier.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="F1Score">
      <MemberSignature Language="C#" Value="public double F1Score { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 F1Score" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Models.BinaryClassificationMetrics.F1Score" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property F1Score As Double" />
      <MemberSignature Language="F#" Value="member this.F1Score : double" Usage="Microsoft.ML.Models.BinaryClassificationMetrics.F1Score" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the F1 score of the classifier.
            </summary>
        <value>To be added.</value>
        <remarks>
            F1 score is the harmonic mean of precision and recall: 2 * precision * recall / (precision + recall).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogLoss">
      <MemberSignature Language="C#" Value="public double LogLoss { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LogLoss" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Models.BinaryClassificationMetrics.LogLoss" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogLoss As Double" />
      <MemberSignature Language="F#" Value="member this.LogLoss : double" Usage="Microsoft.ML.Models.BinaryClassificationMetrics.LogLoss" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the log-loss of the classifier.
            </summary>
        <value>To be added.</value>
        <remarks>
            The log-loss metric, is computed as follows:
            LL = - (1/m) * sum( log(p[i]))
            where m is the number of instances in the test set.
            p[i] is the probability returned by the classifier if the instance belongs to class 1,
            and 1 minus the probability returned by the classifier if the instance belongs to class 0.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogLossReduction">
      <MemberSignature Language="C#" Value="public double LogLossReduction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LogLossReduction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Models.BinaryClassificationMetrics.LogLossReduction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogLossReduction As Double" />
      <MemberSignature Language="F#" Value="member this.LogLossReduction : double" Usage="Microsoft.ML.Models.BinaryClassificationMetrics.LogLossReduction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the log-loss reduction (also known as relative log-loss, or reduction in information gain - RIG)
            of the classifier.
            </summary>
        <value>To be added.</value>
        <remarks>
            The log-loss reduction is scaled relative to a classifier that predicts the prior for every example:
            (LL(prior) - LL(classifier)) / LL(prior)
            This metric can be interpreted as the advantage of the classifier over a random prediction.
            E.g., if the RIG equals 20, it can be interpreted as "the probability of a correct prediction is
            20% better than random guessing".
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="NegativePrecision">
      <MemberSignature Language="C#" Value="public double NegativePrecision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 NegativePrecision" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Models.BinaryClassificationMetrics.NegativePrecision" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NegativePrecision As Double" />
      <MemberSignature Language="F#" Value="member this.NegativePrecision : double" Usage="Microsoft.ML.Models.BinaryClassificationMetrics.NegativePrecision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the negative precision of a classifier which is the proportion of correctly predicted
            negative instances among all the negative predictions (i.e., the number of negative instances
            predicted as negative, divided by the total number of instances predicted as negative).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NegativeRecall">
      <MemberSignature Language="C#" Value="public double NegativeRecall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 NegativeRecall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Models.BinaryClassificationMetrics.NegativeRecall" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NegativeRecall As Double" />
      <MemberSignature Language="F#" Value="member this.NegativeRecall : double" Usage="Microsoft.ML.Models.BinaryClassificationMetrics.NegativeRecall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the negative recall of a classifier which is the proportion of correctly predicted
            negative instances among all the negative instances (i.e., the number of negative instances
            predicted as negative, divided by the total number of negative instances).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PositivePrecision">
      <MemberSignature Language="C#" Value="public double PositivePrecision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PositivePrecision" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Models.BinaryClassificationMetrics.PositivePrecision" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PositivePrecision As Double" />
      <MemberSignature Language="F#" Value="member this.PositivePrecision : double" Usage="Microsoft.ML.Models.BinaryClassificationMetrics.PositivePrecision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the positive precision of a classifier which is the proportion of correctly predicted
            positive instances among all the positive predictions (i.e., the number of positive instances
            predicted as positive, divided by the total number of instances predicted as positive).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PositiveRecall">
      <MemberSignature Language="C#" Value="public double PositiveRecall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PositiveRecall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Models.BinaryClassificationMetrics.PositiveRecall" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PositiveRecall As Double" />
      <MemberSignature Language="F#" Value="member this.PositiveRecall : double" Usage="Microsoft.ML.Models.BinaryClassificationMetrics.PositiveRecall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the positive recall of a classifier which is the proportion of correctly predicted
            positive instances among all the positive instances (i.e., the number of positive instances
            predicted as positive, divided by the total number of positive instances).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowTag">
      <MemberSignature Language="C#" Value="public string RowTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RowTag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Models.BinaryClassificationMetrics.RowTag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowTag As String" />
      <MemberSignature Language="F#" Value="member this.RowTag : string" Usage="Microsoft.ML.Models.BinaryClassificationMetrics.RowTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            For cross-validation, this is equal to "Fold N" for per-fold metric rows, "Overall" for the average metrics and "STD" for standard deviation.
            For non-CV scenarios, this is equal to null
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>