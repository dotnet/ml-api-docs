<Type Name="ClassificationMetrics" FullName="Microsoft.ML.Models.ClassificationMetrics">
  <TypeSignature Language="C#" Value="public sealed class ClassificationMetrics" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClassificationMetrics extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Models.ClassificationMetrics" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClassificationMetrics" />
  <TypeSignature Language="F#" Value="type ClassificationMetrics = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This class contains the overall metrics computed by multi-class classification evaluators.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AccuracyMacro">
      <MemberSignature Language="C#" Value="public double AccuracyMacro { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 AccuracyMacro" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Models.ClassificationMetrics.AccuracyMacro" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccuracyMacro As Double" />
      <MemberSignature Language="F#" Value="member this.AccuracyMacro : double" Usage="Microsoft.ML.Models.ClassificationMetrics.AccuracyMacro" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets the macro-average accuracy of the model.
             </summary>
        <value>To be added.</value>
        <remarks>
             The macro-average is computed by taking the average over all the classes of the fraction
             of correct predictions in this class (the number of correctly predicted instances in the class,
             divided by the total number of instances in the class).
            
             The macro-average metric gives the same weight to each class, no matter how many instances from
             that class the dataset contains.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccuracyMicro">
      <MemberSignature Language="C#" Value="public double AccuracyMicro { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 AccuracyMicro" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Models.ClassificationMetrics.AccuracyMicro" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccuracyMicro As Double" />
      <MemberSignature Language="F#" Value="member this.AccuracyMicro : double" Usage="Microsoft.ML.Models.ClassificationMetrics.AccuracyMicro" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets the micro-average accuracy of the model.
             </summary>
        <value>To be added.</value>
        <remarks>
             The micro-average is the fraction of instances predicted correctly.
            
             The micro-average metric weighs each class according to the number of instances that belong
             to it in the dataset.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfusionMatrix">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.ConfusionMatrix ConfusionMatrix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Models.ConfusionMatrix ConfusionMatrix" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Models.ClassificationMetrics.ConfusionMatrix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConfusionMatrix As ConfusionMatrix" />
      <MemberSignature Language="F#" Value="member this.ConfusionMatrix : Microsoft.ML.Models.ConfusionMatrix" Usage="Microsoft.ML.Models.ClassificationMetrics.ConfusionMatrix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.ConfusionMatrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the confusion matrix, or error matrix, of the classifier.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogLoss">
      <MemberSignature Language="C#" Value="public double LogLoss { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LogLoss" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Models.ClassificationMetrics.LogLoss" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogLoss As Double" />
      <MemberSignature Language="F#" Value="member this.LogLoss : double" Usage="Microsoft.ML.Models.ClassificationMetrics.LogLoss" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the average log-loss of the classifier.
            </summary>
        <value>To be added.</value>
        <remarks>
            The log-loss metric, is computed as follows:
            LL = - (1/m) * sum( log(p[i]))
            where m is the number of instances in the test set.
            p[i] is the probability returned by the classifier if the instance belongs to class 1,
            and 1 minus the probability returned by the classifier if the instance belongs to class 0.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogLossReduction">
      <MemberSignature Language="C#" Value="public double LogLossReduction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LogLossReduction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Models.ClassificationMetrics.LogLossReduction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogLossReduction As Double" />
      <MemberSignature Language="F#" Value="member this.LogLossReduction : double" Usage="Microsoft.ML.Models.ClassificationMetrics.LogLossReduction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the log-loss reduction (also known as relative log-loss, or reduction in information gain - RIG)
            of the classifier.
            </summary>
        <value>To be added.</value>
        <remarks>
            The log-loss reduction is scaled relative to a classifier that predicts the prior for every example:
            (LL(prior) - LL(classifier)) / LL(prior)
            This metric can be interpreted as the advantage of the classifier over a random prediction.
            E.g., if the RIG equals 20, it can be interpreted as "the probability of a correct prediction is
            20% better than random guessing".
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerClassLogLoss">
      <MemberSignature Language="C#" Value="public double[] PerClassLogLoss { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64[] PerClassLogLoss" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Models.ClassificationMetrics.PerClassLogLoss" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PerClassLogLoss As Double()" />
      <MemberSignature Language="F#" Value="member this.PerClassLogLoss : double[]" Usage="Microsoft.ML.Models.ClassificationMetrics.PerClassLogLoss" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the log-loss of the classifier for each class.
            </summary>
        <value>To be added.</value>
        <remarks>
            The log-loss metric, is computed as follows:
            LL = - (1/m) * sum( log(p[i]))
            where m is the number of instances in the test set.
            p[i] is the probability returned by the classifier if the instance belongs to the class,
            and 1 minus the probability returned by the classifier if the instance does not belong to the class.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowTag">
      <MemberSignature Language="C#" Value="public string RowTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RowTag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Models.ClassificationMetrics.RowTag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowTag As String" />
      <MemberSignature Language="F#" Value="member this.RowTag : string" Usage="Microsoft.ML.Models.ClassificationMetrics.RowTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            For cross-validation, this is equal to "Fold N" for per-fold metric rows, "Overall" for the average metrics and "STD" for standard deviation.
            For non-CV scenarios, this is equal to null
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopKAccuracy">
      <MemberSignature Language="C#" Value="public double TopKAccuracy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TopKAccuracy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Models.ClassificationMetrics.TopKAccuracy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopKAccuracy As Double" />
      <MemberSignature Language="F#" Value="member this.TopKAccuracy : double" Usage="Microsoft.ML.Models.ClassificationMetrics.TopKAccuracy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If <see cref="P:Microsoft.ML.Models.ClassificationEvaluator.OutputTopKAcc" /> was specified on the
            evaluator to be k, then TopKAccuracy is the relative number of examples where
            the true label is one of the top k predicted labels by the predictor.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
