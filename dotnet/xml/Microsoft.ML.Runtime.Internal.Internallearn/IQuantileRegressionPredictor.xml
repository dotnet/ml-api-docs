<Type Name="IQuantileRegressionPredictor" FullName="Microsoft.ML.Runtime.Internal.Internallearn.IQuantileRegressionPredictor">
  <TypeSignature Language="C#" Value="public interface IQuantileRegressionPredictor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQuantileRegressionPredictor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Internal.Internallearn.IQuantileRegressionPredictor" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQuantileRegressionPredictor" />
  <TypeSignature Language="F#" Value="type IQuantileRegressionPredictor = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQuantileRegressionPredictor" />
  <TypeSignature Language="C++ CX" Value="public interface class IQuantileRegressionPredictor" />
  <TypeSignature Language="C++ WINRT" Value="__interface IQuantileRegressionPredictor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Predictor that can specialize for quantile regression. It will produce a <see cref="T:Microsoft.ML.Runtime.Data.ISchemaBindableMapper" />, given
            an array of quantiles.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateMapper">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.ISchemaBindableMapper CreateMapper (double[] quantiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.Data.ISchemaBindableMapper CreateMapper(float64[] quantiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Internallearn.IQuantileRegressionPredictor.CreateMapper(System.Double[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMapper (quantiles As Double()) As ISchemaBindableMapper" />
      <MemberSignature Language="F#" Value="abstract member CreateMapper : double[] -&gt; Microsoft.ML.Runtime.Data.ISchemaBindableMapper" Usage="iQuantileRegressionPredictor.CreateMapper quantiles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::ML::Runtime::Data::ISchemaBindableMapper ^ CreateMapper(cli::array &lt;double&gt; ^ quantiles);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::ML::Runtime::Data::ISchemaBindableMapper ^ CreateMapper(Platform::Array &lt;double&gt; ^ quantiles);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::ML::Runtime::Data::ISchemaBindableMapper CreateMapper(std::Array &lt;double&gt; const &amp; quantiles);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ISchemaBindableMapper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quantiles" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="quantiles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>