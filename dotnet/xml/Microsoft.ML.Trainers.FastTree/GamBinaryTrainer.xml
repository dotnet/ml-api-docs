<Type Name="GamBinaryTrainer" FullName="Microsoft.ML.Trainers.FastTree.GamBinaryTrainer">
  <TypeSignature Language="C#" Value="public sealed class GamBinaryTrainer : Microsoft.ML.Trainers.FastTree.GamTrainerBase&lt;Microsoft.ML.Trainers.FastTree.GamBinaryTrainer.Options,Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.FastTree.GamBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;,Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.FastTree.GamBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GamBinaryTrainer extends Microsoft.ML.Trainers.FastTree.GamTrainerBase`3&lt;class Microsoft.ML.Trainers.FastTree.GamBinaryTrainer/Options, class Microsoft.ML.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Calibrators.CalibratedModelParametersBase`2&lt;class Microsoft.ML.Trainers.FastTree.GamBinaryModelParameters, class Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;, class Microsoft.ML.Calibrators.CalibratedModelParametersBase`2&lt;class Microsoft.ML.Trainers.FastTree.GamBinaryModelParameters, class Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.FastTree.GamBinaryTrainer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GamBinaryTrainer&#xA;Inherits GamTrainerBase(Of GamBinaryTrainer.Options, BinaryPredictionTransformer(Of CalibratedModelParametersBase(Of GamBinaryModelParameters, PlattCalibrator)), CalibratedModelParametersBase(Of GamBinaryModelParameters, PlattCalibrator))" />
  <TypeSignature Language="F#" Value="type GamBinaryTrainer = class&#xA;    inherit GamTrainerBase&lt;GamBinaryTrainer.Options, BinaryPredictionTransformer&lt;CalibratedModelParametersBase&lt;GamBinaryModelParameters, PlattCalibrator&gt;&gt;, CalibratedModelParametersBase&lt;GamBinaryModelParameters, PlattCalibrator&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Trainers.FastTree.GamTrainerBase&lt;Microsoft.ML.Trainers.FastTree.GamBinaryTrainer+Options,Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.FastTree.GamBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;,Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.FastTree.GamBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TOptions">Microsoft.ML.Trainers.FastTree.GamBinaryTrainer+Options</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TTransformer">Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.FastTree.GamBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TPredictor">Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.FastTree.GamBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The <see cref="T:Microsoft.ML.IEstimator`1" /> for training a binary classification model with generalized additive models (GAM).
            </summary>
    <remarks>
      <para>
        Generalized Additive Models, or GAMs, model the data as a set of linearly independent features
        similar to a linear model. For each feature, the GAM trainer learns a non-linear function,
        called a "shape function", that computes the response as a function of the feature's value.
        (In contrast, a linear model fits a linear response (e.g. a line) to each feature.)
        To score an example, the outputs of all the shape functions are summed and the score is the total value.
        </para>
      <para>
        This GAM trainer is implemented using shallow gradient boosted trees (e.g. tree stumps) to learn nonparametric
        shape functions, and is based on the method described in Lou, Caruana, and Gehrke.
        <a href="http://www.cs.cornell.edu/~yinlou/papers/lou-kdd12.pdf">"Intelligible Models for Classification and Regression."</a> KDD'12, Beijing, China. 2012.
        After training, an intercept is added to represent the average prediction over the training set,
        and the shape functions are normalized to represent the deviation from the average prediction. This results
        in models that are easily interpreted simply by inspecting the intercept and the shape functions.
        See the sample below for an example of how to train a GAM model and inspect and interpret the results.
        </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Fit">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.FastTree.GamBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt; Fit (Microsoft.ML.IDataView trainData, Microsoft.ML.IDataView validationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Calibrators.CalibratedModelParametersBase`2&lt;class Microsoft.ML.Trainers.FastTree.GamBinaryModelParameters, class Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt; Fit(class Microsoft.ML.IDataView trainData, class Microsoft.ML.IDataView validationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.FastTree.GamBinaryTrainer.Fit(Microsoft.ML.IDataView,Microsoft.ML.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fit (trainData As IDataView, validationData As IDataView) As BinaryPredictionTransformer(Of CalibratedModelParametersBase(Of GamBinaryModelParameters, PlattCalibrator))" />
      <MemberSignature Language="F#" Value="override this.Fit : Microsoft.ML.IDataView * Microsoft.ML.IDataView -&gt; Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.FastTree.GamBinaryModelParameters, Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;" Usage="gamBinaryTrainer.Fit (trainData, validationData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.FastTree.GamBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainData" Type="Microsoft.ML.IDataView" />
        <Parameter Name="validationData" Type="Microsoft.ML.IDataView" />
      </Parameters>
      <Docs>
        <param name="trainData">To be added.</param>
        <param name="validationData">To be added.</param>
        <summary>
            Trains a <see cref="T:Microsoft.ML.Trainers.FastTree.GamBinaryTrainer" /> using both training and validation data, returns
            a <see cref="T:Microsoft.ML.Data.BinaryPredictionTransformer`1" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>