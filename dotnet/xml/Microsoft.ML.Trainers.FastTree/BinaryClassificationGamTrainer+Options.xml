<Type Name="BinaryClassificationGamTrainer+Options" FullName="Microsoft.ML.Trainers.FastTree.BinaryClassificationGamTrainer+Options">
  <TypeSignature Language="C#" Value="public sealed class BinaryClassificationGamTrainer.Options : Microsoft.ML.Trainers.FastTree.GamTrainerBase&lt;Microsoft.ML.Trainers.FastTree.BinaryClassificationGamTrainer.Options,Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.FastTree.BinaryClassificationGamModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;,Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.FastTree.BinaryClassificationGamModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;.OptionsBase" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit BinaryClassificationGamTrainer/Options extends Microsoft.ML.Trainers.FastTree.GamTrainerBase`3/OptionsBase&lt;class Microsoft.ML.Trainers.FastTree.BinaryClassificationGamTrainer/Options, class Microsoft.ML.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Calibrators.CalibratedModelParametersBase`2&lt;class Microsoft.ML.Trainers.FastTree.BinaryClassificationGamModelParameters, class Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;, class Microsoft.ML.Calibrators.CalibratedModelParametersBase`2&lt;class Microsoft.ML.Trainers.FastTree.BinaryClassificationGamModelParameters, class Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.FastTree.BinaryClassificationGamTrainer.Options" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BinaryClassificationGamTrainer.Options&#xA;Inherits GamTrainerBase(Of BinaryClassificationGamTrainer.Options, BinaryPredictionTransformer(Of CalibratedModelParametersBase(Of BinaryClassificationGamModelParameters, PlattCalibrator)), CalibratedModelParametersBase(Of BinaryClassificationGamModelParameters, PlattCalibrator)).OptionsBase" />
  <TypeSignature Language="F#" Value="type BinaryClassificationGamTrainer.Options = class&#xA;    inherit GamTrainerBase&lt;BinaryClassificationGamTrainer.Options, BinaryPredictionTransformer&lt;CalibratedModelParametersBase&lt;BinaryClassificationGamModelParameters, PlattCalibrator&gt;&gt;, CalibratedModelParametersBase&lt;BinaryClassificationGamModelParameters, PlattCalibrator&gt;&gt;.OptionsBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Trainers.FastTree.GamTrainerBase&lt;Microsoft.ML.Trainers.FastTree.BinaryClassificationGamTrainer+Options,Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.IPredictorProducing&lt;System.Single&gt;&gt;,Microsoft.ML.IPredictorProducing&lt;System.Single&gt;&gt;+ArgumentsBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="ml-dotnet">Microsoft.ML.Trainers.FastTree.GamTrainerBase&lt;Microsoft.ML.Trainers.FastTree.BinaryClassificationGamTrainer+Options,Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.FastTree.BinaryClassificationGamModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;,Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.FastTree.BinaryClassificationGamModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;+OptionsBase</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TOptions">Microsoft.ML.Trainers.FastTree.BinaryClassificationGamTrainer+Options</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TTransformer">Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.FastTree.BinaryClassificationGamModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TPredictor">Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.FastTree.BinaryClassificationGamModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Options ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.FastTree.BinaryClassificationGamTrainer.Options.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnbalancedSets">
      <MemberSignature Language="C#" Value="public bool UnbalancedSets;" />
      <MemberSignature Language="ILAsm" Value=".field public bool UnbalancedSets" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.FastTree.BinaryClassificationGamTrainer.Options.UnbalancedSets" />
      <MemberSignature Language="VB.NET" Value="Public UnbalancedSets As Boolean " />
      <MemberSignature Language="F#" Value="val mutable UnbalancedSets : bool" Usage="Microsoft.ML.Trainers.FastTree.BinaryClassificationGamTrainer.Options.UnbalancedSets" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.LastOccurenceWins, HelpText="Should we use derivatives optimized for unbalanced sets", ShortName="us")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Internal.Internallearn.TGUI(Label="Optimize for unbalanced")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>