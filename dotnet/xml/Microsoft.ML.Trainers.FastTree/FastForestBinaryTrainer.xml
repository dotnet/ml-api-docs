<Type Name="FastForestBinaryTrainer" FullName="Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer">
  <TypeSignature Language="C#" Value="public sealed class FastForestBinaryTrainer : Microsoft.ML.Trainers.FastTree.RandomForestTrainerBase&lt;Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer.Options,Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Trainers.FastTree.FastForestBinaryModelParameters&gt;,Microsoft.ML.Trainers.FastTree.FastForestBinaryModelParameters&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FastForestBinaryTrainer extends Microsoft.ML.Trainers.FastTree.RandomForestTrainerBase`3&lt;class Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer/Options, class Microsoft.ML.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Trainers.FastTree.FastForestBinaryModelParameters&gt;, class Microsoft.ML.Trainers.FastTree.FastForestBinaryModelParameters&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FastForestBinaryTrainer&#xA;Inherits RandomForestTrainerBase(Of FastForestBinaryTrainer.Options, BinaryPredictionTransformer(Of FastForestBinaryModelParameters), FastForestBinaryModelParameters)" />
  <TypeSignature Language="F#" Value="type FastForestBinaryTrainer = class&#xA;    inherit RandomForestTrainerBase&lt;FastForestBinaryTrainer.Options, BinaryPredictionTransformer&lt;FastForestBinaryModelParameters&gt;, FastForestBinaryModelParameters&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Trainers.FastTree.RandomForestTrainerBase&lt;Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer+Options,Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Trainers.FastTree.FastForestBinaryModelParameters&gt;,Microsoft.ML.Trainers.FastTree.FastForestBinaryModelParameters&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TOptions">Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer+Options</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TTransformer">Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Trainers.FastTree.FastForestBinaryModelParameters&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TModel">Microsoft.ML.Trainers.FastTree.FastForestBinaryModelParameters</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The <see cref="T:Microsoft.ML.IEstimator`1" /> for training a decision tree binary classification model using Fast Forest.
            </summary>
    <remarks>
        Decision trees are non-parametric models that perform a sequence of simple tests on inputs.
        This decision procedure maps them to outputs found in the training dataset whose inputs were similar to the instance being processed.
        A decision is made at each node of the binary tree data structure based on a measure of similarity that maps each instance recursively through the branches of the tree until the appropriate leaf node is reached and the output decision returned.
        <para>Decision trees have several advantages:</para><list type="bullet"><item><description>They are efficient in both computation and memory usage during training and prediction. </description></item><item><description>They can represent non-linear decision boundaries.</description></item><item><description>They perform integrated feature selection and classification. </description></item><item><description>They are resilient in the presence of noisy features.</description></item></list><para>Fast forest is a random forest implementation.
        The model consists of an ensemble of decision trees. Each tree in a decision forest outputs a Gaussian distribution by way of prediction.
        An aggregation is performed over the ensemble of trees to find a Gaussian distribution closest to the combined distribution for all trees in the model.
        This decision forest classifier consists of an ensemble of decision trees.</para><para>Generally, ensemble models provide better coverage and accuracy than single decision trees.
         Each tree in a decision forest outputs a Gaussian distribution.</para><para>For more see: </para><list type="bullet"><item><description><a href="https://en.wikipedia.org/wiki/Random_forest">Wikipedia: Random forest</a></description></item><item><description><a href="http://jmlr.org/papers/volume7/meinshausen06a/meinshausen06a.pdf">Quantile regression forest</a></description></item><item><description><a href="https://blogs.technet.microsoft.com/machinelearning/2014/09/10/from-stumps-to-trees-to-forests/">From Stumps to Trees to Forests</a></description></item></list></remarks>
  </Docs>
  <Members>
    <Member MemberName="Fit">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Trainers.FastTree.FastForestBinaryModelParameters&gt; Fit (Microsoft.ML.IDataView trainData, Microsoft.ML.IDataView validationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Trainers.FastTree.FastForestBinaryModelParameters&gt; Fit(class Microsoft.ML.IDataView trainData, class Microsoft.ML.IDataView validationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer.Fit(Microsoft.ML.IDataView,Microsoft.ML.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fit (trainData As IDataView, validationData As IDataView) As BinaryPredictionTransformer(Of FastForestBinaryModelParameters)" />
      <MemberSignature Language="F#" Value="override this.Fit : Microsoft.ML.IDataView * Microsoft.ML.IDataView -&gt; Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Trainers.FastTree.FastForestBinaryModelParameters&gt;" Usage="fastForestBinaryTrainer.Fit (trainData, validationData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Trainers.FastTree.FastForestBinaryModelParameters&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainData" Type="Microsoft.ML.IDataView" />
        <Parameter Name="validationData" Type="Microsoft.ML.IDataView" />
      </Parameters>
      <Docs>
        <param name="trainData">To be added.</param>
        <param name="validationData">To be added.</param>
        <summary>
            Trains a <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer" /> using both training and validation data, returns
            a <see cref="T:Microsoft.ML.Data.BinaryPredictionTransformer`1" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>