<Type Name="TreeEnsembleFeaturizationTransformer" FullName="Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationTransformer">
  <TypeSignature Language="C#" Value="public sealed class TreeEnsembleFeaturizationTransformer : Microsoft.ML.Data.PredictionTransformerBase&lt;Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TreeEnsembleFeaturizationTransformer extends Microsoft.ML.Data.PredictionTransformerBase`1&lt;class Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationTransformer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TreeEnsembleFeaturizationTransformer&#xA;Inherits PredictionTransformerBase(Of TreeEnsembleModelParameters)" />
  <TypeSignature Language="F#" Value="type TreeEnsembleFeaturizationTransformer = class&#xA;    inherit PredictionTransformerBase&lt;TreeEnsembleModelParameters&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Data.PredictionTransformerBase&lt;Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:Microsoft.ML.ITransformer" /> resulting from fitting any derived class of <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase" />.
            The derived classes include, for example, <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryFeaturizationEstimator" /> and
            <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionFeaturizationEstimator" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.DataViewSchema GetOutputSchema (Microsoft.ML.DataViewSchema inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.ML.DataViewSchema GetOutputSchema(class Microsoft.ML.DataViewSchema inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationTransformer.GetOutputSchema(Microsoft.ML.DataViewSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOutputSchema (inputSchema As DataViewSchema) As DataViewSchema" />
      <MemberSignature Language="F#" Value="override this.GetOutputSchema : Microsoft.ML.DataViewSchema -&gt; Microsoft.ML.DataViewSchema" Usage="treeEnsembleFeaturizationTransformer.GetOutputSchema inputSchema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.DataViewSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.DataViewSchema" />
      </Parameters>
      <Docs>
        <param name="inputSchema">
          <see cref="T:Microsoft.ML.DataViewSchema" /> of the data to be transformed.</param>
        <summary>
          <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationTransformer" /> appends three columns to the <paramref name="inputSchema" />.
            The three columns are all <see cref="T:System.Single" /> vectors. The fist column stores the prediction values of all trees and
            its default name is "Trees". The second column (default name: "Leaves") contains leaf IDs where the given feature vector falls into.
            The third column (default name: "Paths") encodes the paths to those leaves via a 0-1 vector.
            </summary>
        <returns>
          <see cref="T:Microsoft.ML.DataViewSchema" /> of the transformed data if the input schema is <paramref name="inputSchema" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
