<Type Name="FastTreeTweedieTrainer" FullName="Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer">
  <TypeSignature Language="C#" Value="public sealed class FastTreeTweedieTrainer : Microsoft.ML.Trainers.FastTree.BoostingFastTreeTrainerBase&lt;Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer.Options,Microsoft.ML.Data.RegressionPredictionTransformer&lt;Microsoft.ML.Trainers.FastTree.FastTreeTweedieModelParameters&gt;,Microsoft.ML.Trainers.FastTree.FastTreeTweedieModelParameters&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FastTreeTweedieTrainer extends Microsoft.ML.Trainers.FastTree.BoostingFastTreeTrainerBase`3&lt;class Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer/Options, class Microsoft.ML.Data.RegressionPredictionTransformer`1&lt;class Microsoft.ML.Trainers.FastTree.FastTreeTweedieModelParameters&gt;, class Microsoft.ML.Trainers.FastTree.FastTreeTweedieModelParameters&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FastTreeTweedieTrainer&#xA;Inherits BoostingFastTreeTrainerBase(Of FastTreeTweedieTrainer.Options, RegressionPredictionTransformer(Of FastTreeTweedieModelParameters), FastTreeTweedieModelParameters)" />
  <TypeSignature Language="F#" Value="type FastTreeTweedieTrainer = class&#xA;    inherit BoostingFastTreeTrainerBase&lt;FastTreeTweedieTrainer.Options, RegressionPredictionTransformer&lt;FastTreeTweedieModelParameters&gt;, FastTreeTweedieModelParameters&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Trainers.FastTree.BoostingFastTreeTrainerBase&lt;Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer+Options,Microsoft.ML.Data.RegressionPredictionTransformer&lt;Microsoft.ML.Trainers.FastTree.FastTreeTweedieModelParameters&gt;,Microsoft.ML.Trainers.FastTree.FastTreeTweedieModelParameters&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TOptions">Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer+Options</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TTransformer">Microsoft.ML.Data.RegressionPredictionTransformer&lt;Microsoft.ML.Trainers.FastTree.FastTreeTweedieModelParameters&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TModel">Microsoft.ML.Trainers.FastTree.FastTreeTweedieModelParameters</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The <see cref="T:Microsoft.ML.IEstimator`1" /> for training a decision tree regression model using Tweedie loss function.
            This trainer is a generalization of Poisson, compound Poisson, and gamma regression.
            </summary>
    <remarks>
            The Tweedie boosting model follows the mathematics established in <a href="https://arxiv.org/pdf/1508.06378.pdf">
            Insurance Premium Prediction via Gradient Tree-Boosted Tweedie Compound Poisson Models</a> from Yang, Quan, and Zou.
            For an introduction to Gradient Boosting, and more information, see:
            <a href="https://en.wikipedia.org/wiki/Gradient_boosting#Gradient_tree_boosting"> Wikipedia: Gradient boosting(Gradient tree boosting)</a> or
            <a href="https://projecteuclid.org/DPubS?service=UI&amp;version=1.0&amp;verb=Display&amp;handle=euclid.aos/1013203451"> Greedy function approximation: A gradient boosting machine</a>.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="Fit">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.RegressionPredictionTransformer&lt;Microsoft.ML.Trainers.FastTree.FastTreeTweedieModelParameters&gt; Fit (Microsoft.ML.IDataView trainData, Microsoft.ML.IDataView validationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Data.RegressionPredictionTransformer`1&lt;class Microsoft.ML.Trainers.FastTree.FastTreeTweedieModelParameters&gt; Fit(class Microsoft.ML.IDataView trainData, class Microsoft.ML.IDataView validationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer.Fit(Microsoft.ML.IDataView,Microsoft.ML.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fit (trainData As IDataView, validationData As IDataView) As RegressionPredictionTransformer(Of FastTreeTweedieModelParameters)" />
      <MemberSignature Language="F#" Value="override this.Fit : Microsoft.ML.IDataView * Microsoft.ML.IDataView -&gt; Microsoft.ML.Data.RegressionPredictionTransformer&lt;Microsoft.ML.Trainers.FastTree.FastTreeTweedieModelParameters&gt;" Usage="fastTreeTweedieTrainer.Fit (trainData, validationData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.RegressionPredictionTransformer&lt;Microsoft.ML.Trainers.FastTree.FastTreeTweedieModelParameters&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainData" Type="Microsoft.ML.IDataView" />
        <Parameter Name="validationData" Type="Microsoft.ML.IDataView" />
      </Parameters>
      <Docs>
        <param name="trainData">To be added.</param>
        <param name="validationData">To be added.</param>
        <summary>
            Trains a <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer" /> using both training and validation data, returns
            a <see cref="T:Microsoft.ML.Data.RegressionPredictionTransformer`1" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>