<Type Name="FastTreeTweedieRegressor" FullName="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor">
  <TypeSignature Language="C#" Value="public sealed class FastTreeTweedieRegressor : Microsoft.ML.Legacy.ILearningPipelineItem, Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITrainerInputWithGroupId" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FastTreeTweedieRegressor extends System.Object implements class Microsoft.ML.Legacy.ILearningPipelineItem, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITrainerInput, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITrainerInputWithGroupId, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITrainerInputWithLabel, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITrainerInputWithWeight" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FastTreeTweedieRegressor&#xA;Implements CommonInputs.ITrainerInputWithGroupId, ILearningPipelineItem" />
  <TypeSignature Language="F#" Value="type FastTreeTweedieRegressor = class&#xA;    interface CommonInputs.ITrainerInputWithGroupId&#xA;    interface CommonInputs.ITrainerInputWithWeight&#xA;    interface CommonInputs.ITrainerInputWithLabel&#xA;    interface CommonInputs.ITrainerInput&#xA;    interface ILearningPipelineItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Legacy.ILearningPipelineItem</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.EntryPoints.CommonInputs+ITrainerInputWithGroupId</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
        Trains gradient boosted decision trees to fit target values using a Tweedie loss function. 
        This learner is a generalization of Poisson, compound Poisson, and gamma regression.
      </summary>
    <remarks>
        The Tweedie boosting model follows the mathematics established in <a href="https://arxiv.org/pdf/1508.06378.pdf">
        Insurance Premium Prediction via Gradient Tree-Boosted Tweedie Compound Poisson Models.</a> from Yang, Quan, and Zou. 
        <para>For an introduction to Gradient Boosting, and more information, see:</para><para><a href="https://en.wikipedia.org/wiki/Gradient_boosting#Gradient_tree_boosting">Wikipedia: Gradient boosting (Gradient tree boosting)</a></para><para><a href="https://projecteuclid.org/DPubS?service=UI&amp;version=1.0&amp;verb=Display&amp;handle=euclid.aos/1013203451">Greedy function approximation: A gradient boosting machine</a></para></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FastTreeTweedieRegressor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowEmptyTrees">
      <MemberSignature Language="C#" Value="public bool AllowEmptyTrees { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEmptyTrees" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.AllowEmptyTrees" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowEmptyTrees As Boolean" />
      <MemberSignature Language="F#" Value="member this.AllowEmptyTrees : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.AllowEmptyTrees" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When a root split is impossible, allow training to proceed
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyStep">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Legacy.ILearningPipelineStep ApplyStep (Microsoft.ML.Legacy.ILearningPipelineStep previousStep, Microsoft.ML.Runtime.Experiment experiment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Legacy.ILearningPipelineStep ApplyStep(class Microsoft.ML.Legacy.ILearningPipelineStep previousStep, class Microsoft.ML.Runtime.Experiment experiment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.ApplyStep(Microsoft.ML.Legacy.ILearningPipelineStep,Microsoft.ML.Runtime.Experiment)" />
      <MemberSignature Language="F#" Value="abstract member ApplyStep : Microsoft.ML.Legacy.ILearningPipelineStep * Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.Legacy.ILearningPipelineStep&#xA;override this.ApplyStep : Microsoft.ML.Legacy.ILearningPipelineStep * Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.Legacy.ILearningPipelineStep" Usage="fastTreeTweedieRegressor.ApplyStep (previousStep, experiment)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Legacy.ILearningPipelineItem.ApplyStep(Microsoft.ML.Legacy.ILearningPipelineStep,Microsoft.ML.Runtime.Experiment)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Legacy.ILearningPipelineStep</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previousStep" Type="Microsoft.ML.Legacy.ILearningPipelineStep" />
        <Parameter Name="experiment" Type="Microsoft.ML.Runtime.Experiment" />
      </Parameters>
      <Docs>
        <param name="previousStep">To be added.</param>
        <param name="experiment">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaggingSize">
      <MemberSignature Language="C#" Value="public int BaggingSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BaggingSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.BaggingSize" />
      <MemberSignature Language="VB.NET" Value="Public Property BaggingSize As Integer" />
      <MemberSignature Language="F#" Value="member this.BaggingSize : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.BaggingSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Number of trees in each bag (0 for disabling bagging)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaggingTrainFraction">
      <MemberSignature Language="C#" Value="public double BaggingTrainFraction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 BaggingTrainFraction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.BaggingTrainFraction" />
      <MemberSignature Language="VB.NET" Value="Public Property BaggingTrainFraction As Double" />
      <MemberSignature Language="F#" Value="member this.BaggingTrainFraction : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.BaggingTrainFraction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Percentage of training examples used in each bag
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaselineAlphaRisk">
      <MemberSignature Language="C#" Value="public string BaselineAlphaRisk { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaselineAlphaRisk" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.BaselineAlphaRisk" />
      <MemberSignature Language="VB.NET" Value="Public Property BaselineAlphaRisk As String" />
      <MemberSignature Language="F#" Value="member this.BaselineAlphaRisk : string with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.BaselineAlphaRisk" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Baseline alpha for tradeoffs of risk (0 is normal training)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaselineScoresFormula">
      <MemberSignature Language="C#" Value="public string BaselineScoresFormula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaselineScoresFormula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.BaselineScoresFormula" />
      <MemberSignature Language="VB.NET" Value="Public Property BaselineScoresFormula As String" />
      <MemberSignature Language="F#" Value="member this.BaselineScoresFormula : string with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.BaselineScoresFormula" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Freeform defining the scores that should be used as the baseline ranker
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BestStepRankingRegressionTrees">
      <MemberSignature Language="C#" Value="public bool BestStepRankingRegressionTrees { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BestStepRankingRegressionTrees" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.BestStepRankingRegressionTrees" />
      <MemberSignature Language="VB.NET" Value="Public Property BestStepRankingRegressionTrees As Boolean" />
      <MemberSignature Language="F#" Value="member this.BestStepRankingRegressionTrees : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.BestStepRankingRegressionTrees" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Use best regression step trees?
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bias">
      <MemberSignature Language="C#" Value="public double Bias { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Bias" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.Bias" />
      <MemberSignature Language="VB.NET" Value="Public Property Bias As Double" />
      <MemberSignature Language="F#" Value="member this.Bias : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.Bias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Bias for calculating gradient for each feature bin for a categorical feature.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bundling">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Legacy.Trainers.Bundle Bundling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Legacy.Trainers.Bundle Bundling" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.Bundling" />
      <MemberSignature Language="VB.NET" Value="Public Property Bundling As Bundle" />
      <MemberSignature Language="F#" Value="member this.Bundling : Microsoft.ML.Legacy.Trainers.Bundle with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.Bundling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Legacy.Trainers.Bundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Bundle low population bins. Bundle.None(0): no bundling, Bundle.AggregateLowPopulation(1): Bundle low population, Bundle.Adjacent(2): Neighbor low population bundle.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caching">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Legacy.Models.CachingOptions Caching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Legacy.Models.CachingOptions Caching" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.Caching" />
      <MemberSignature Language="VB.NET" Value="Public Property Caching As CachingOptions" />
      <MemberSignature Language="F#" Value="member this.Caching : Microsoft.ML.Legacy.Models.CachingOptions with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.Caching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Legacy.Models.CachingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether learner should cache input training data
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoricalSplit">
      <MemberSignature Language="C#" Value="public bool CategoricalSplit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CategoricalSplit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.CategoricalSplit" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoricalSplit As Boolean" />
      <MemberSignature Language="F#" Value="member this.CategoricalSplit : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.CategoricalSplit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether to do split based on multiple categorical feature values.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressEnsemble">
      <MemberSignature Language="C#" Value="public bool CompressEnsemble { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompressEnsemble" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.CompressEnsemble" />
      <MemberSignature Language="VB.NET" Value="Public Property CompressEnsemble As Boolean" />
      <MemberSignature Language="F#" Value="member this.CompressEnsemble : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.CompressEnsemble" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Compress the tree Ensemble
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiskTranspose">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; DiskTranspose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; DiskTranspose" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.DiskTranspose" />
      <MemberSignature Language="VB.NET" Value="Public Property DiskTranspose As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.DiskTranspose : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.DiskTranspose" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether to utilize the disk or the data's native transposition facilities (where applicable) when performing the transpose
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropoutRate">
      <MemberSignature Language="C#" Value="public double DropoutRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DropoutRate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.DropoutRate" />
      <MemberSignature Language="VB.NET" Value="Public Property DropoutRate As Double" />
      <MemberSignature Language="F#" Value="member this.DropoutRate : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.DropoutRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableDiscreteParam("DropoutRate", new System.Object[] { Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument }, false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Dropout rate for tree regularization
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EarlyStoppingMetrics">
      <MemberSignature Language="C#" Value="public int EarlyStoppingMetrics { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EarlyStoppingMetrics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.EarlyStoppingMetrics" />
      <MemberSignature Language="VB.NET" Value="Public Property EarlyStoppingMetrics As Integer" />
      <MemberSignature Language="F#" Value="member this.EarlyStoppingMetrics : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.EarlyStoppingMetrics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Early stopping metrics. (For regression, 1: L1, 2:L2; for ranking, 1:NDCG@1, 3:NDCG@3)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EarlyStoppingRule">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EarlyStoppingCriterion EarlyStoppingRule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EarlyStoppingCriterion EarlyStoppingRule" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.EarlyStoppingRule" />
      <MemberSignature Language="VB.NET" Value="Public Property EarlyStoppingRule As EarlyStoppingCriterion" />
      <MemberSignature Language="F#" Value="member this.EarlyStoppingRule : Microsoft.ML.Runtime.EarlyStoppingCriterion with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.EarlyStoppingRule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonConverter(typeof(Microsoft.ML.Runtime.ComponentSerializer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EarlyStoppingCriterion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Early stopping rule. (Validation set (/valid) is required.)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePruning">
      <MemberSignature Language="C#" Value="public bool EnablePruning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePruning" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.EnablePruning" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePruning As Boolean" />
      <MemberSignature Language="F#" Value="member this.EnablePruning : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.EnablePruning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Enable post-training pruning to avoid overfitting. (a validation set is required)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntropyCoefficient">
      <MemberSignature Language="C#" Value="public double EntropyCoefficient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 EntropyCoefficient" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.EntropyCoefficient" />
      <MemberSignature Language="VB.NET" Value="Public Property EntropyCoefficient As Double" />
      <MemberSignature Language="F#" Value="member this.EntropyCoefficient : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.EntropyCoefficient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The entropy (regularization) coefficient between 0 and 1
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionTimes">
      <MemberSignature Language="C#" Value="public bool ExecutionTimes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExecutionTimes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.ExecutionTimes" />
      <MemberSignature Language="VB.NET" Value="Public Property ExecutionTimes As Boolean" />
      <MemberSignature Language="F#" Value="member this.ExecutionTimes : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.ExecutionTimes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Print execution time breakdown to stdout
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureColumn">
      <MemberSignature Language="C#" Value="public string FeatureColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FeatureColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.FeatureColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureColumn As String" />
      <MemberSignature Language="F#" Value="member this.FeatureColumn : string with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.FeatureColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for features
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureCompressionLevel">
      <MemberSignature Language="C#" Value="public int FeatureCompressionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FeatureCompressionLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.FeatureCompressionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureCompressionLevel As Integer" />
      <MemberSignature Language="F#" Value="member this.FeatureCompressionLevel : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.FeatureCompressionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The level of feature compression to use
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureFirstUsePenalty">
      <MemberSignature Language="C#" Value="public double FeatureFirstUsePenalty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 FeatureFirstUsePenalty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.FeatureFirstUsePenalty" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureFirstUsePenalty As Double" />
      <MemberSignature Language="F#" Value="member this.FeatureFirstUsePenalty : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.FeatureFirstUsePenalty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The feature first use penalty coefficient
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureFlocks">
      <MemberSignature Language="C#" Value="public bool FeatureFlocks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FeatureFlocks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.FeatureFlocks" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureFlocks As Boolean" />
      <MemberSignature Language="F#" Value="member this.FeatureFlocks : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.FeatureFlocks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether to collectivize features during dataset preparation to speed up training
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureFraction">
      <MemberSignature Language="C#" Value="public double FeatureFraction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 FeatureFraction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.FeatureFraction" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureFraction As Double" />
      <MemberSignature Language="F#" Value="member this.FeatureFraction : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.FeatureFraction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The fraction of features (chosen randomly) to use on each iteration
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureReusePenalty">
      <MemberSignature Language="C#" Value="public double FeatureReusePenalty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 FeatureReusePenalty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.FeatureReusePenalty" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureReusePenalty As Double" />
      <MemberSignature Language="F#" Value="member this.FeatureReusePenalty : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.FeatureReusePenalty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The feature re-use penalty (regularization) coefficient
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureSelectSeed">
      <MemberSignature Language="C#" Value="public int FeatureSelectSeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FeatureSelectSeed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.FeatureSelectSeed" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureSelectSeed As Integer" />
      <MemberSignature Language="F#" Value="member this.FeatureSelectSeed : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.FeatureSelectSeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The seed of the active feature selection
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterZeroLambdas">
      <MemberSignature Language="C#" Value="public bool FilterZeroLambdas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterZeroLambdas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.FilterZeroLambdas" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterZeroLambdas As Boolean" />
      <MemberSignature Language="F#" Value="member this.FilterZeroLambdas : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.FilterZeroLambdas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Filter zero lambdas during training
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GainConfidenceLevel">
      <MemberSignature Language="C#" Value="public double GainConfidenceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 GainConfidenceLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.GainConfidenceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property GainConfidenceLevel As Double" />
      <MemberSignature Language="F#" Value="member this.GainConfidenceLevel : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.GainConfidenceLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Tree fitting gain confidence requirement (should be in the range [0,1) ).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDerivativesSampleRate">
      <MemberSignature Language="C#" Value="public int GetDerivativesSampleRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GetDerivativesSampleRate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.GetDerivativesSampleRate" />
      <MemberSignature Language="VB.NET" Value="Public Property GetDerivativesSampleRate As Integer" />
      <MemberSignature Language="F#" Value="member this.GetDerivativesSampleRate : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.GetDerivativesSampleRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sample each query 1 in k times in the GetDerivatives function
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInputData">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; GetInputData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; GetInputData() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.GetInputData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInputData () As Var(Of IDataView)" />
      <MemberSignature Language="F#" Value="abstract member GetInputData : unit -&gt; Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;&#xA;override this.GetInputData : unit -&gt; Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;" Usage="fastTreeTweedieRegressor.GetInputData " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Legacy.ILearningPipelineItem.GetInputData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupIdColumn">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Optional&lt;string&gt; GroupIdColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Optional`1&lt;string&gt; GroupIdColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.GroupIdColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupIdColumn As Optional(Of String)" />
      <MemberSignature Language="F#" Value="member this.GroupIdColumn : Microsoft.ML.Runtime.EntryPoints.Optional&lt;string&gt; with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.GroupIdColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Optional&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for example groupId
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HistogramPoolSize">
      <MemberSignature Language="C#" Value="public int HistogramPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HistogramPoolSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.HistogramPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property HistogramPoolSize As Integer" />
      <MemberSignature Language="F#" Value="member this.HistogramPoolSize : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.HistogramPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The number of histograms in the pool (between 2 and numLeaves)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public double Index { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.Index" />
      <MemberSignature Language="VB.NET" Value="Public Property Index As Double" />
      <MemberSignature Language="F#" Value="member this.Index : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Index parameter for the Tweedie distribution, in the range [1, 2]. 1 is Poisson loss, 2 is gamma loss, and intermediate values are compound Poisson loss.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelColumn">
      <MemberSignature Language="C#" Value="public string LabelColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LabelColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.LabelColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelColumn As String" />
      <MemberSignature Language="F#" Value="member this.LabelColumn : string with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.LabelColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for labels
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LearningRates">
      <MemberSignature Language="C#" Value="public double LearningRates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LearningRates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.LearningRates" />
      <MemberSignature Language="VB.NET" Value="Public Property LearningRates As Double" />
      <MemberSignature Language="F#" Value="member this.LearningRates : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.LearningRates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableFloatParam("LearningRates", 0.025, 0.4, -1, -1, true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The learning rate
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBins">
      <MemberSignature Language="C#" Value="public int MaxBins { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBins" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.MaxBins" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBins As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxBins : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.MaxBins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Maximum number of distinct values (bins) per feature
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCategoricalGroupsPerNode">
      <MemberSignature Language="C#" Value="public int MaxCategoricalGroupsPerNode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCategoricalGroupsPerNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.MaxCategoricalGroupsPerNode" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCategoricalGroupsPerNode As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxCategoricalGroupsPerNode : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.MaxCategoricalGroupsPerNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Maximum categorical split groups to consider when splitting on a categorical feature. Split groups are a collection of split points. This is used to reduce overfitting when there many categorical features.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCategoricalSplitPoints">
      <MemberSignature Language="C#" Value="public int MaxCategoricalSplitPoints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCategoricalSplitPoints" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.MaxCategoricalSplitPoints" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCategoricalSplitPoints As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxCategoricalSplitPoints : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.MaxCategoricalSplitPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Maximum categorical split points to consider when splitting on a categorical feature.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTreeOutput">
      <MemberSignature Language="C#" Value="public double MaxTreeOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxTreeOutput" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.MaxTreeOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxTreeOutput As Double" />
      <MemberSignature Language="F#" Value="member this.MaxTreeOutput : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.MaxTreeOutput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Upper bound on absolute value of single tree output
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTreesAfterCompression">
      <MemberSignature Language="C#" Value="public int MaxTreesAfterCompression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxTreesAfterCompression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.MaxTreesAfterCompression" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxTreesAfterCompression As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxTreesAfterCompression : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.MaxTreesAfterCompression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Maximum Number of trees after compression
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinDocsForCategoricalSplit">
      <MemberSignature Language="C#" Value="public int MinDocsForCategoricalSplit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinDocsForCategoricalSplit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.MinDocsForCategoricalSplit" />
      <MemberSignature Language="VB.NET" Value="Public Property MinDocsForCategoricalSplit As Integer" />
      <MemberSignature Language="F#" Value="member this.MinDocsForCategoricalSplit : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.MinDocsForCategoricalSplit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Minimum categorical doc count in a bin to consider for a split.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinDocsPercentageForCategoricalSplit">
      <MemberSignature Language="C#" Value="public double MinDocsPercentageForCategoricalSplit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinDocsPercentageForCategoricalSplit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.MinDocsPercentageForCategoricalSplit" />
      <MemberSignature Language="VB.NET" Value="Public Property MinDocsPercentageForCategoricalSplit As Double" />
      <MemberSignature Language="F#" Value="member this.MinDocsPercentageForCategoricalSplit : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.MinDocsPercentageForCategoricalSplit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Minimum categorical docs percentage in a bin to consider for a split.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinDocumentsInLeafs">
      <MemberSignature Language="C#" Value="public int MinDocumentsInLeafs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinDocumentsInLeafs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.MinDocumentsInLeafs" />
      <MemberSignature Language="VB.NET" Value="Public Property MinDocumentsInLeafs As Integer" />
      <MemberSignature Language="F#" Value="member this.MinDocumentsInLeafs : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.MinDocumentsInLeafs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableDiscreteParam("MinDocumentsInLeafs", new System.Object[] { Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument }, false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The minimal number of documents allowed in a leaf of a regression tree, out of the subsampled data
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinStepSize">
      <MemberSignature Language="C#" Value="public double MinStepSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinStepSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.MinStepSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MinStepSize As Double" />
      <MemberSignature Language="F#" Value="member this.MinStepSize : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.MinStepSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Minimum line search step size
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeFeatures">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Legacy.Models.NormalizeOption NormalizeFeatures { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Legacy.Models.NormalizeOption NormalizeFeatures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.NormalizeFeatures" />
      <MemberSignature Language="VB.NET" Value="Public Property NormalizeFeatures As NormalizeOption" />
      <MemberSignature Language="F#" Value="member this.NormalizeFeatures : Microsoft.ML.Legacy.Models.NormalizeOption with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.NormalizeFeatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Legacy.Models.NormalizeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Normalize option for the feature column
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumLeaves">
      <MemberSignature Language="C#" Value="public int NumLeaves { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumLeaves" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.NumLeaves" />
      <MemberSignature Language="VB.NET" Value="Public Property NumLeaves As Integer" />
      <MemberSignature Language="F#" Value="member this.NumLeaves : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.NumLeaves" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableLongParam("NumLeaves", 2, 128, 4, -1, true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The max number of leaves in each regression tree
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumPostBracketSteps">
      <MemberSignature Language="C#" Value="public int NumPostBracketSteps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumPostBracketSteps" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.NumPostBracketSteps" />
      <MemberSignature Language="VB.NET" Value="Public Property NumPostBracketSteps As Integer" />
      <MemberSignature Language="F#" Value="member this.NumPostBracketSteps : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.NumPostBracketSteps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Number of post-bracket line search steps
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumThreads">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; NumThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; NumThreads" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.NumThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property NumThreads As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.NumThreads : Nullable&lt;int&gt; with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.NumThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The number of threads to use
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumTrees">
      <MemberSignature Language="C#" Value="public int NumTrees { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumTrees" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.NumTrees" />
      <MemberSignature Language="VB.NET" Value="Public Property NumTrees As Integer" />
      <MemberSignature Language="F#" Value="member this.NumTrees : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.NumTrees" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableDiscreteParam("NumTrees", new System.Object[] { Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument }, false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Total number of decision trees to create in the ensemble
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptimizationAlgorithm">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Legacy.Trainers.BoostedTreeArgsOptimizationAlgorithmType OptimizationAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Legacy.Trainers.BoostedTreeArgsOptimizationAlgorithmType OptimizationAlgorithm" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.OptimizationAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property OptimizationAlgorithm As BoostedTreeArgsOptimizationAlgorithmType" />
      <MemberSignature Language="F#" Value="member this.OptimizationAlgorithm : Microsoft.ML.Legacy.Trainers.BoostedTreeArgsOptimizationAlgorithmType with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.OptimizationAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Legacy.Trainers.BoostedTreeArgsOptimizationAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Optimization algorithm to be used (GradientDescent, AcceleratedGradientDescent)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelTrainer">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.ParallelTraining ParallelTrainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.ParallelTraining ParallelTrainer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.ParallelTrainer" />
      <MemberSignature Language="VB.NET" Value="Public Property ParallelTrainer As ParallelTraining" />
      <MemberSignature Language="F#" Value="member this.ParallelTrainer : Microsoft.ML.Runtime.ParallelTraining with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.ParallelTrainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonConverter(typeof(Microsoft.ML.Runtime.ComponentSerializer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.ParallelTraining</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Allows to choose Parallel FastTree Learning Algorithm
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PositionDiscountFreeform">
      <MemberSignature Language="C#" Value="public string PositionDiscountFreeform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PositionDiscountFreeform" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.PositionDiscountFreeform" />
      <MemberSignature Language="VB.NET" Value="Public Property PositionDiscountFreeform As String" />
      <MemberSignature Language="F#" Value="member this.PositionDiscountFreeform : string with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.PositionDiscountFreeform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The discount freeform which specifies the per position discounts of documents in a query (uses a single variable P for position where P=0 is first position)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintTestGraph">
      <MemberSignature Language="C#" Value="public bool PrintTestGraph { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintTestGraph" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.PrintTestGraph" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintTestGraph As Boolean" />
      <MemberSignature Language="F#" Value="member this.PrintTestGraph : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.PrintTestGraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Print metrics graph for the first test set
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintTrainValidGraph">
      <MemberSignature Language="C#" Value="public bool PrintTrainValidGraph { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintTrainValidGraph" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.PrintTrainValidGraph" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintTrainValidGraph As Boolean" />
      <MemberSignature Language="F#" Value="member this.PrintTrainValidGraph : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.PrintTrainValidGraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Print Train and Validation metrics in graph
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PruningThreshold">
      <MemberSignature Language="C#" Value="public double PruningThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PruningThreshold" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.PruningThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property PruningThreshold As Double" />
      <MemberSignature Language="F#" Value="member this.PruningThreshold : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.PruningThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The tolerance threshold for pruning
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PruningWindowSize">
      <MemberSignature Language="C#" Value="public int PruningWindowSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PruningWindowSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.PruningWindowSize" />
      <MemberSignature Language="VB.NET" Value="Public Property PruningWindowSize As Integer" />
      <MemberSignature Language="F#" Value="member this.PruningWindowSize : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.PruningWindowSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The moving window size for pruning
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RandomStart">
      <MemberSignature Language="C#" Value="public bool RandomStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RandomStart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.RandomStart" />
      <MemberSignature Language="VB.NET" Value="Public Property RandomStart As Boolean" />
      <MemberSignature Language="F#" Value="member this.RandomStart : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.RandomStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Training starts from random ordering (determined by /r1)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RngSeed">
      <MemberSignature Language="C#" Value="public int RngSeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RngSeed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.RngSeed" />
      <MemberSignature Language="VB.NET" Value="Public Property RngSeed As Integer" />
      <MemberSignature Language="F#" Value="member this.RngSeed : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.RngSeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The seed of the random number generator
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shrinkage">
      <MemberSignature Language="C#" Value="public double Shrinkage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Shrinkage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.Shrinkage" />
      <MemberSignature Language="VB.NET" Value="Public Property Shrinkage As Double" />
      <MemberSignature Language="F#" Value="member this.Shrinkage : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.Shrinkage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableFloatParam("Shrinkage", 0.025, 4, -1, -1, true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Shrinkage
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Smoothing">
      <MemberSignature Language="C#" Value="public double Smoothing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Smoothing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.Smoothing" />
      <MemberSignature Language="VB.NET" Value="Public Property Smoothing As Double" />
      <MemberSignature Language="F#" Value="member this.Smoothing : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.Smoothing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Smoothing paramter for tree regularization
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoftmaxTemperature">
      <MemberSignature Language="C#" Value="public double SoftmaxTemperature { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SoftmaxTemperature" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.SoftmaxTemperature" />
      <MemberSignature Language="VB.NET" Value="Public Property SoftmaxTemperature As Double" />
      <MemberSignature Language="F#" Value="member this.SoftmaxTemperature : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.SoftmaxTemperature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The temperature of the randomized softmax distribution for choosing the feature
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparsifyThreshold">
      <MemberSignature Language="C#" Value="public double SparsifyThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SparsifyThreshold" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.SparsifyThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property SparsifyThreshold As Double" />
      <MemberSignature Language="F#" Value="member this.SparsifyThreshold : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.SparsifyThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sparsity level needed to use sparse feature representation
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitFraction">
      <MemberSignature Language="C#" Value="public double SplitFraction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SplitFraction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.SplitFraction" />
      <MemberSignature Language="VB.NET" Value="Public Property SplitFraction As Double" />
      <MemberSignature Language="F#" Value="member this.SplitFraction : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.SplitFraction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The fraction of features (chosen randomly) to use on each split
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestFrequency">
      <MemberSignature Language="C#" Value="public int TestFrequency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TestFrequency" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.TestFrequency" />
      <MemberSignature Language="VB.NET" Value="Public Property TestFrequency As Integer" />
      <MemberSignature Language="F#" Value="member this.TestFrequency : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.TestFrequency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Calculate metric values for train/valid/test every k rounds
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainingData">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; TrainingData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; TrainingData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.TrainingData" />
      <MemberSignature Language="VB.NET" Value="Public Property TrainingData As Var(Of IDataView)" />
      <MemberSignature Language="F#" Value="member this.TrainingData : Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.TrainingData" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITrainerInput.TrainingData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The data to be used for training
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLineSearch">
      <MemberSignature Language="C#" Value="public bool UseLineSearch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseLineSearch" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.UseLineSearch" />
      <MemberSignature Language="VB.NET" Value="Public Property UseLineSearch As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseLineSearch : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.UseLineSearch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Should we use line search for a step size
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseTolerantPruning">
      <MemberSignature Language="C#" Value="public bool UseTolerantPruning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseTolerantPruning" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.UseTolerantPruning" />
      <MemberSignature Language="VB.NET" Value="Public Property UseTolerantPruning As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseTolerantPruning : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.UseTolerantPruning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Use window and tolerance for pruning
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeightColumn">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Optional&lt;string&gt; WeightColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Optional`1&lt;string&gt; WeightColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.WeightColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property WeightColumn As Optional(Of String)" />
      <MemberSignature Language="F#" Value="member this.WeightColumn : Microsoft.ML.Runtime.EntryPoints.Optional&lt;string&gt; with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.WeightColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Optional&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for example weight
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLastEnsemble">
      <MemberSignature Language="C#" Value="public bool WriteLastEnsemble { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteLastEnsemble" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.WriteLastEnsemble" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteLastEnsemble As Boolean" />
      <MemberSignature Language="F#" Value="member this.WriteLastEnsemble : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastTreeTweedieRegressor.WriteLastEnsemble" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Write the last ensemble instead of the one determined by early stopping
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>