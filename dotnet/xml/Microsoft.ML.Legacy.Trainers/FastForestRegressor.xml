<Type Name="FastForestRegressor" FullName="Microsoft.ML.Legacy.Trainers.FastForestRegressor">
  <TypeSignature Language="C#" Value="public sealed class FastForestRegressor : Microsoft.ML.Legacy.ILearningPipelineItem, Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITrainerInputWithGroupId" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FastForestRegressor extends System.Object implements class Microsoft.ML.Legacy.ILearningPipelineItem, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITrainerInput, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITrainerInputWithGroupId, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITrainerInputWithLabel, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITrainerInputWithWeight" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Legacy.Trainers.FastForestRegressor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FastForestRegressor&#xA;Implements CommonInputs.ITrainerInputWithGroupId, ILearningPipelineItem" />
  <TypeSignature Language="F#" Value="type FastForestRegressor = class&#xA;    interface CommonInputs.ITrainerInputWithGroupId&#xA;    interface CommonInputs.ITrainerInputWithWeight&#xA;    interface CommonInputs.ITrainerInputWithLabel&#xA;    interface CommonInputs.ITrainerInput&#xA;    interface ILearningPipelineItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Legacy.ILearningPipelineItem</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.EntryPoints.CommonInputs+ITrainerInputWithGroupId</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
        Trains a random forest to fit target values using least-squares.
      </summary>
    <remarks>
        Decision trees are non-parametric models that perform a sequence of simple tests on inputs.
        This decision procedure maps them to outputs found in the training dataset whose inputs were similar to the instance being processed.
        A decision is made at each node of the binary tree data structure based on a measure of similarity that maps each instance recursively through the branches of the tree until the appropriate leaf node is reached and the output decision returned.
        <para>Decision trees have several advantages:</para><list type="bullet"><item><description>They are efficient in both computation and memory usage during training and prediction. </description></item><item><description>They can represent non-linear decision boundaries.</description></item><item><description>They perform integrated feature selection and classification. </description></item><item><description>They are resilient in the presence of noisy features.</description></item></list><para>Fast forest is a random forest implementation.
        The model consists of an ensemble of decision trees. Each tree in a decision forest outputs a Gaussian distribution by way of prediction.
        An aggregation is performed over the ensemble of trees to find a Gaussian distribution closest to the combined distribution for all trees in the model.
        This decision forest classifier consists of an ensemble of decision trees.</para><para>Generally, ensemble models provide better coverage and accuracy than single decision trees.
         Each tree in a decision forest outputs a Gaussian distribution.</para><para>For more see: </para><list type="bullet"><item><description><a href="https://en.wikipedia.org/wiki/Random_forest">Wikipedia: Random forest</a></description></item><item><description><a href="http://jmlr.org/papers/volume7/meinshausen06a/meinshausen06a.pdf">Quantile regression forest</a></description></item><item><description><a href="https://blogs.technet.microsoft.com/machinelearning/2014/09/10/from-stumps-to-trees-to-forests/">From Stumps to Trees to Forests</a></description></item></list></remarks>
    <example>
      <code language="csharp">
          new FastForestRegressor
          {
            NumTrees = 100,
            NumLeaves = 50,
            NumThreads = 5,
            EntropyCoefficient = 0.3
          }
        </code>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FastForestRegressor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Legacy.Trainers.FastForestRegressor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowEmptyTrees">
      <MemberSignature Language="C#" Value="public bool AllowEmptyTrees { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEmptyTrees" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.AllowEmptyTrees" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowEmptyTrees As Boolean" />
      <MemberSignature Language="F#" Value="member this.AllowEmptyTrees : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.AllowEmptyTrees" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When a root split is impossible, allow training to proceed
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyStep">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Legacy.ILearningPipelineStep ApplyStep (Microsoft.ML.Legacy.ILearningPipelineStep previousStep, Microsoft.ML.Runtime.Experiment experiment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Legacy.ILearningPipelineStep ApplyStep(class Microsoft.ML.Legacy.ILearningPipelineStep previousStep, class Microsoft.ML.Runtime.Experiment experiment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Legacy.Trainers.FastForestRegressor.ApplyStep(Microsoft.ML.Legacy.ILearningPipelineStep,Microsoft.ML.Runtime.Experiment)" />
      <MemberSignature Language="F#" Value="abstract member ApplyStep : Microsoft.ML.Legacy.ILearningPipelineStep * Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.Legacy.ILearningPipelineStep&#xA;override this.ApplyStep : Microsoft.ML.Legacy.ILearningPipelineStep * Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.Legacy.ILearningPipelineStep" Usage="fastForestRegressor.ApplyStep (previousStep, experiment)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Legacy.ILearningPipelineItem.ApplyStep(Microsoft.ML.Legacy.ILearningPipelineStep,Microsoft.ML.Runtime.Experiment)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Legacy.ILearningPipelineStep</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previousStep" Type="Microsoft.ML.Legacy.ILearningPipelineStep" />
        <Parameter Name="experiment" Type="Microsoft.ML.Runtime.Experiment" />
      </Parameters>
      <Docs>
        <param name="previousStep">To be added.</param>
        <param name="experiment">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaggingSize">
      <MemberSignature Language="C#" Value="public int BaggingSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BaggingSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.BaggingSize" />
      <MemberSignature Language="VB.NET" Value="Public Property BaggingSize As Integer" />
      <MemberSignature Language="F#" Value="member this.BaggingSize : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.BaggingSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Number of trees in each bag (0 for disabling bagging)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaggingTrainFraction">
      <MemberSignature Language="C#" Value="public double BaggingTrainFraction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 BaggingTrainFraction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.BaggingTrainFraction" />
      <MemberSignature Language="VB.NET" Value="Public Property BaggingTrainFraction As Double" />
      <MemberSignature Language="F#" Value="member this.BaggingTrainFraction : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.BaggingTrainFraction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Percentage of training examples used in each bag
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bias">
      <MemberSignature Language="C#" Value="public double Bias { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Bias" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.Bias" />
      <MemberSignature Language="VB.NET" Value="Public Property Bias As Double" />
      <MemberSignature Language="F#" Value="member this.Bias : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.Bias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Bias for calculating gradient for each feature bin for a categorical feature.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bundling">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Legacy.Trainers.Bundle Bundling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Legacy.Trainers.Bundle Bundling" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.Bundling" />
      <MemberSignature Language="VB.NET" Value="Public Property Bundling As Bundle" />
      <MemberSignature Language="F#" Value="member this.Bundling : Microsoft.ML.Legacy.Trainers.Bundle with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.Bundling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Legacy.Trainers.Bundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Bundle low population bins. Bundle.None(0): no bundling, Bundle.AggregateLowPopulation(1): Bundle low population, Bundle.Adjacent(2): Neighbor low population bundle.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caching">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Legacy.Models.CachingOptions Caching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Legacy.Models.CachingOptions Caching" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.Caching" />
      <MemberSignature Language="VB.NET" Value="Public Property Caching As CachingOptions" />
      <MemberSignature Language="F#" Value="member this.Caching : Microsoft.ML.Legacy.Models.CachingOptions with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.Caching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Legacy.Models.CachingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether learner should cache input training data
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoricalSplit">
      <MemberSignature Language="C#" Value="public bool CategoricalSplit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CategoricalSplit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.CategoricalSplit" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoricalSplit As Boolean" />
      <MemberSignature Language="F#" Value="member this.CategoricalSplit : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.CategoricalSplit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether to do split based on multiple categorical feature values.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressEnsemble">
      <MemberSignature Language="C#" Value="public bool CompressEnsemble { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompressEnsemble" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.CompressEnsemble" />
      <MemberSignature Language="VB.NET" Value="Public Property CompressEnsemble As Boolean" />
      <MemberSignature Language="F#" Value="member this.CompressEnsemble : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.CompressEnsemble" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Compress the tree Ensemble
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiskTranspose">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; DiskTranspose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; DiskTranspose" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.DiskTranspose" />
      <MemberSignature Language="VB.NET" Value="Public Property DiskTranspose As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.DiskTranspose : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.DiskTranspose" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether to utilize the disk or the data's native transposition facilities (where applicable) when performing the transpose
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntropyCoefficient">
      <MemberSignature Language="C#" Value="public double EntropyCoefficient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 EntropyCoefficient" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.EntropyCoefficient" />
      <MemberSignature Language="VB.NET" Value="Public Property EntropyCoefficient As Double" />
      <MemberSignature Language="F#" Value="member this.EntropyCoefficient : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.EntropyCoefficient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The entropy (regularization) coefficient between 0 and 1
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionTimes">
      <MemberSignature Language="C#" Value="public bool ExecutionTimes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExecutionTimes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.ExecutionTimes" />
      <MemberSignature Language="VB.NET" Value="Public Property ExecutionTimes As Boolean" />
      <MemberSignature Language="F#" Value="member this.ExecutionTimes : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.ExecutionTimes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Print execution time breakdown to stdout
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureColumn">
      <MemberSignature Language="C#" Value="public string FeatureColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FeatureColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.FeatureColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureColumn As String" />
      <MemberSignature Language="F#" Value="member this.FeatureColumn : string with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.FeatureColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for features
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureCompressionLevel">
      <MemberSignature Language="C#" Value="public int FeatureCompressionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FeatureCompressionLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.FeatureCompressionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureCompressionLevel As Integer" />
      <MemberSignature Language="F#" Value="member this.FeatureCompressionLevel : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.FeatureCompressionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The level of feature compression to use
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureFirstUsePenalty">
      <MemberSignature Language="C#" Value="public double FeatureFirstUsePenalty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 FeatureFirstUsePenalty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.FeatureFirstUsePenalty" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureFirstUsePenalty As Double" />
      <MemberSignature Language="F#" Value="member this.FeatureFirstUsePenalty : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.FeatureFirstUsePenalty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The feature first use penalty coefficient
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureFlocks">
      <MemberSignature Language="C#" Value="public bool FeatureFlocks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FeatureFlocks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.FeatureFlocks" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureFlocks As Boolean" />
      <MemberSignature Language="F#" Value="member this.FeatureFlocks : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.FeatureFlocks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether to collectivize features during dataset preparation to speed up training
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureFraction">
      <MemberSignature Language="C#" Value="public double FeatureFraction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 FeatureFraction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.FeatureFraction" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureFraction As Double" />
      <MemberSignature Language="F#" Value="member this.FeatureFraction : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.FeatureFraction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The fraction of features (chosen randomly) to use on each iteration
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureReusePenalty">
      <MemberSignature Language="C#" Value="public double FeatureReusePenalty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 FeatureReusePenalty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.FeatureReusePenalty" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureReusePenalty As Double" />
      <MemberSignature Language="F#" Value="member this.FeatureReusePenalty : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.FeatureReusePenalty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The feature re-use penalty (regularization) coefficient
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureSelectSeed">
      <MemberSignature Language="C#" Value="public int FeatureSelectSeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FeatureSelectSeed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.FeatureSelectSeed" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureSelectSeed As Integer" />
      <MemberSignature Language="F#" Value="member this.FeatureSelectSeed : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.FeatureSelectSeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The seed of the active feature selection
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GainConfidenceLevel">
      <MemberSignature Language="C#" Value="public double GainConfidenceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 GainConfidenceLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.GainConfidenceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property GainConfidenceLevel As Double" />
      <MemberSignature Language="F#" Value="member this.GainConfidenceLevel : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.GainConfidenceLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Tree fitting gain confidence requirement (should be in the range [0,1) ).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInputData">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; GetInputData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; GetInputData() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Legacy.Trainers.FastForestRegressor.GetInputData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInputData () As Var(Of IDataView)" />
      <MemberSignature Language="F#" Value="abstract member GetInputData : unit -&gt; Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;&#xA;override this.GetInputData : unit -&gt; Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;" Usage="fastForestRegressor.GetInputData " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Legacy.ILearningPipelineItem.GetInputData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupIdColumn">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Optional&lt;string&gt; GroupIdColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Optional`1&lt;string&gt; GroupIdColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.GroupIdColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupIdColumn As Optional(Of String)" />
      <MemberSignature Language="F#" Value="member this.GroupIdColumn : Microsoft.ML.Runtime.EntryPoints.Optional&lt;string&gt; with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.GroupIdColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Optional&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for example groupId
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HistogramPoolSize">
      <MemberSignature Language="C#" Value="public int HistogramPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HistogramPoolSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.HistogramPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property HistogramPoolSize As Integer" />
      <MemberSignature Language="F#" Value="member this.HistogramPoolSize : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.HistogramPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The number of histograms in the pool (between 2 and numLeaves)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelColumn">
      <MemberSignature Language="C#" Value="public string LabelColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LabelColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.LabelColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelColumn As String" />
      <MemberSignature Language="F#" Value="member this.LabelColumn : string with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.LabelColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for labels
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBins">
      <MemberSignature Language="C#" Value="public int MaxBins { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBins" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.MaxBins" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBins As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxBins : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.MaxBins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Maximum number of distinct values (bins) per feature
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCategoricalGroupsPerNode">
      <MemberSignature Language="C#" Value="public int MaxCategoricalGroupsPerNode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCategoricalGroupsPerNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.MaxCategoricalGroupsPerNode" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCategoricalGroupsPerNode As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxCategoricalGroupsPerNode : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.MaxCategoricalGroupsPerNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Maximum categorical split groups to consider when splitting on a categorical feature. Split groups are a collection of split points. This is used to reduce overfitting when there many categorical features.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCategoricalSplitPoints">
      <MemberSignature Language="C#" Value="public int MaxCategoricalSplitPoints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCategoricalSplitPoints" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.MaxCategoricalSplitPoints" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCategoricalSplitPoints As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxCategoricalSplitPoints : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.MaxCategoricalSplitPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Maximum categorical split points to consider when splitting on a categorical feature.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTreesAfterCompression">
      <MemberSignature Language="C#" Value="public int MaxTreesAfterCompression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxTreesAfterCompression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.MaxTreesAfterCompression" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxTreesAfterCompression As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxTreesAfterCompression : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.MaxTreesAfterCompression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Maximum Number of trees after compression
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinDocsForCategoricalSplit">
      <MemberSignature Language="C#" Value="public int MinDocsForCategoricalSplit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinDocsForCategoricalSplit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.MinDocsForCategoricalSplit" />
      <MemberSignature Language="VB.NET" Value="Public Property MinDocsForCategoricalSplit As Integer" />
      <MemberSignature Language="F#" Value="member this.MinDocsForCategoricalSplit : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.MinDocsForCategoricalSplit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Minimum categorical doc count in a bin to consider for a split.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinDocsPercentageForCategoricalSplit">
      <MemberSignature Language="C#" Value="public double MinDocsPercentageForCategoricalSplit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinDocsPercentageForCategoricalSplit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.MinDocsPercentageForCategoricalSplit" />
      <MemberSignature Language="VB.NET" Value="Public Property MinDocsPercentageForCategoricalSplit As Double" />
      <MemberSignature Language="F#" Value="member this.MinDocsPercentageForCategoricalSplit : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.MinDocsPercentageForCategoricalSplit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Minimum categorical docs percentage in a bin to consider for a split.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinDocumentsInLeafs">
      <MemberSignature Language="C#" Value="public int MinDocumentsInLeafs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinDocumentsInLeafs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.MinDocumentsInLeafs" />
      <MemberSignature Language="VB.NET" Value="Public Property MinDocumentsInLeafs As Integer" />
      <MemberSignature Language="F#" Value="member this.MinDocumentsInLeafs : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.MinDocumentsInLeafs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableDiscreteParam("MinDocumentsInLeafs", new System.Object[] { Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument }, false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The minimal number of documents allowed in a leaf of a regression tree, out of the subsampled data
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeFeatures">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Legacy.Models.NormalizeOption NormalizeFeatures { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Legacy.Models.NormalizeOption NormalizeFeatures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.NormalizeFeatures" />
      <MemberSignature Language="VB.NET" Value="Public Property NormalizeFeatures As NormalizeOption" />
      <MemberSignature Language="F#" Value="member this.NormalizeFeatures : Microsoft.ML.Legacy.Models.NormalizeOption with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.NormalizeFeatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Legacy.Models.NormalizeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Normalize option for the feature column
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumLeaves">
      <MemberSignature Language="C#" Value="public int NumLeaves { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumLeaves" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.NumLeaves" />
      <MemberSignature Language="VB.NET" Value="Public Property NumLeaves As Integer" />
      <MemberSignature Language="F#" Value="member this.NumLeaves : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.NumLeaves" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableLongParam("NumLeaves", 2, 128, 4, -1, true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The max number of leaves in each regression tree
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumThreads">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; NumThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; NumThreads" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.NumThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property NumThreads As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.NumThreads : Nullable&lt;int&gt; with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.NumThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The number of threads to use
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumTrees">
      <MemberSignature Language="C#" Value="public int NumTrees { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumTrees" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.NumTrees" />
      <MemberSignature Language="VB.NET" Value="Public Property NumTrees As Integer" />
      <MemberSignature Language="F#" Value="member this.NumTrees : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.NumTrees" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableDiscreteParam("NumTrees", new System.Object[] { Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument }, false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Total number of decision trees to create in the ensemble
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelTrainer">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.ParallelTraining ParallelTrainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.ParallelTraining ParallelTrainer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.ParallelTrainer" />
      <MemberSignature Language="VB.NET" Value="Public Property ParallelTrainer As ParallelTraining" />
      <MemberSignature Language="F#" Value="member this.ParallelTrainer : Microsoft.ML.Runtime.ParallelTraining with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.ParallelTrainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonConverter(typeof(Microsoft.ML.Runtime.ComponentSerializer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.ParallelTraining</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Allows to choose Parallel FastTree Learning Algorithm
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintTestGraph">
      <MemberSignature Language="C#" Value="public bool PrintTestGraph { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintTestGraph" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.PrintTestGraph" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintTestGraph As Boolean" />
      <MemberSignature Language="F#" Value="member this.PrintTestGraph : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.PrintTestGraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Print metrics graph for the first test set
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintTrainValidGraph">
      <MemberSignature Language="C#" Value="public bool PrintTrainValidGraph { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintTrainValidGraph" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.PrintTrainValidGraph" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintTrainValidGraph As Boolean" />
      <MemberSignature Language="F#" Value="member this.PrintTrainValidGraph : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.PrintTrainValidGraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Print Train and Validation metrics in graph
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuantileSampleCount">
      <MemberSignature Language="C#" Value="public int QuantileSampleCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 QuantileSampleCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.QuantileSampleCount" />
      <MemberSignature Language="VB.NET" Value="Public Property QuantileSampleCount As Integer" />
      <MemberSignature Language="F#" Value="member this.QuantileSampleCount : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.QuantileSampleCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Number of labels to be sampled from each leaf to make the distribtuion
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RngSeed">
      <MemberSignature Language="C#" Value="public int RngSeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RngSeed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.RngSeed" />
      <MemberSignature Language="VB.NET" Value="Public Property RngSeed As Integer" />
      <MemberSignature Language="F#" Value="member this.RngSeed : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.RngSeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The seed of the random number generator
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShuffleLabels">
      <MemberSignature Language="C#" Value="public bool ShuffleLabels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShuffleLabels" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.ShuffleLabels" />
      <MemberSignature Language="VB.NET" Value="Public Property ShuffleLabels As Boolean" />
      <MemberSignature Language="F#" Value="member this.ShuffleLabels : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.ShuffleLabels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Shuffle the labels on every iteration. Useful probably only if using this tree as a tree leaf featurizer for multiclass.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Smoothing">
      <MemberSignature Language="C#" Value="public double Smoothing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Smoothing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.Smoothing" />
      <MemberSignature Language="VB.NET" Value="Public Property Smoothing As Double" />
      <MemberSignature Language="F#" Value="member this.Smoothing : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.Smoothing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Smoothing paramter for tree regularization
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoftmaxTemperature">
      <MemberSignature Language="C#" Value="public double SoftmaxTemperature { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SoftmaxTemperature" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.SoftmaxTemperature" />
      <MemberSignature Language="VB.NET" Value="Public Property SoftmaxTemperature As Double" />
      <MemberSignature Language="F#" Value="member this.SoftmaxTemperature : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.SoftmaxTemperature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The temperature of the randomized softmax distribution for choosing the feature
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparsifyThreshold">
      <MemberSignature Language="C#" Value="public double SparsifyThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SparsifyThreshold" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.SparsifyThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property SparsifyThreshold As Double" />
      <MemberSignature Language="F#" Value="member this.SparsifyThreshold : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.SparsifyThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sparsity level needed to use sparse feature representation
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitFraction">
      <MemberSignature Language="C#" Value="public double SplitFraction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SplitFraction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.SplitFraction" />
      <MemberSignature Language="VB.NET" Value="Public Property SplitFraction As Double" />
      <MemberSignature Language="F#" Value="member this.SplitFraction : double with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.SplitFraction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The fraction of features (chosen randomly) to use on each split
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestFrequency">
      <MemberSignature Language="C#" Value="public int TestFrequency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TestFrequency" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.TestFrequency" />
      <MemberSignature Language="VB.NET" Value="Public Property TestFrequency As Integer" />
      <MemberSignature Language="F#" Value="member this.TestFrequency : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.TestFrequency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Calculate metric values for train/valid/test every k rounds
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainingData">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; TrainingData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; TrainingData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.TrainingData" />
      <MemberSignature Language="VB.NET" Value="Public Property TrainingData As Var(Of IDataView)" />
      <MemberSignature Language="F#" Value="member this.TrainingData : Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.TrainingData" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITrainerInput.TrainingData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The data to be used for training
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeightColumn">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Optional&lt;string&gt; WeightColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Optional`1&lt;string&gt; WeightColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.FastForestRegressor.WeightColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property WeightColumn As Optional(Of String)" />
      <MemberSignature Language="F#" Value="member this.WeightColumn : Microsoft.ML.Runtime.EntryPoints.Optional&lt;string&gt; with get, set" Usage="Microsoft.ML.Legacy.Trainers.FastForestRegressor.WeightColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Optional&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for example weight
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>