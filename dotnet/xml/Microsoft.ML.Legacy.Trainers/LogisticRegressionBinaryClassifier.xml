<Type Name="LogisticRegressionBinaryClassifier" FullName="Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier">
  <TypeSignature Language="C#" Value="public sealed class LogisticRegressionBinaryClassifier : Microsoft.ML.Legacy.ILearningPipelineItem, Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITrainerInputWithWeight" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LogisticRegressionBinaryClassifier extends System.Object implements class Microsoft.ML.Legacy.ILearningPipelineItem, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITrainerInput, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITrainerInputWithLabel, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITrainerInputWithWeight" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LogisticRegressionBinaryClassifier&#xA;Implements CommonInputs.ITrainerInputWithWeight, ILearningPipelineItem" />
  <TypeSignature Language="F#" Value="type LogisticRegressionBinaryClassifier = class&#xA;    interface CommonInputs.ITrainerInputWithWeight&#xA;    interface CommonInputs.ITrainerInputWithLabel&#xA;    interface CommonInputs.ITrainerInput&#xA;    interface ILearningPipelineItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Legacy.ILearningPipelineItem</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.EntryPoints.CommonInputs+ITrainerInputWithWeight</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
        Logistic Regression is a method in statistics used to predict the probability of occurrence of an event and can be used as 
        a classification algorithm. The algorithm predicts the probability of occurrence of an event by fitting data to a logistical function.
      </summary>
    <remarks>
        If the dependent variable has more than two possible values (blood type given diagnostic test results), 
        then the logistic regression is multinomial.
        <para>
          The optimization technique used for LogisticRegression Classifier is based on the limited memory Broyden-Fletcher-Goldfarb-Shanno (L-BFGS).
          Both the L-BFGS and regular BFGS algorithms use quasi-Newtonian methods to estimate the computationally intensive 
          Hessian matrix in the equation used by Newton's method to calculate steps.
          But the L-BFGS approximation uses only a limited amount of memory to compute the next step direction,
          so that it is especially suited for problems with a large number of variables.
          The MemorySize argument specifies the number of past positions and gradients to store for use in the 
          computation of the next step.
        </para><para>
          This learner can use elastic net regularization: a linear combination of L1 (LASSO) and L2 (ridge) regularizations.
          Regularization is a method that can render an ill-posed problem more tractable by imposing constraints that provide information 
          to supplement the data and that prevents overfitting by penalizing models with extreme coefficient values.
          This can improve the generalization of the model learned by selecting the optimal complexity in the bias-variance tradeoff.
          Regularization works by adding the penalty that is associated with coefficient values to the error of the hypothesis.
          An accurate model with extreme coefficient values would be penalized more, but a less accurate model with more conservative 
          values would be penalized less. L1 and L2 regularization have different effects and uses that are complementary in certain respects.
        </para><list type="bullet"><item><description>
              L1Weight can be applied to sparse models, when working with high-dimensional data. It pulls small weights associated features
              that are relatively unimportant towards 0.
              L1 regularization is an implementation of OWLQN, based on:
              <a href="https://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.68.5260">Scalable training of L1-regularized log-linear models</a></description></item><item><description>L2Weight is preferable for data that is not sparse. It pulls large weights towards zero.</description></item></list>
          Adding the ridge penalty to the regularization overcomes some of lasso's limitations. It can improve its predictive accuracy, for example, when the number of predictors is greater than the sample size. If x = l1_weight and y = l2_weight, ax + by = c defines the linear span of the regularization terms.
          The default values of x and y are both 1.
          An agressive regularization can harm predictive capacity by excluding important variables out of the model. So choosing the optimal values for the regularization parameters is important for the performance of the logistic regression model.
        <para>For more information see:</para><list type="bullet"><item><description><a href="https://research.microsoft.com/apps/pubs/default.aspx?id=78900">Scalable Training of L1-Regularized Log-Linear Models</a>.</description></item><item><description><a href="https://msdn.microsoft.com/en-us/magazine/dn904675.aspx">Test Run - L1 and L2 Regularization for Machine Learning</a>.</description></item><item><description><a href="https://en.wikipedia.org/wiki/L-BFGS">Wikipedia: L-BFGS</a>.</description></item><item><description><a href="https://en.wikipedia.org/wiki/Logistic_regression">Wikipedia: Logistic regression</a>.</description></item></list></remarks>
    <example>
      <code language="csharp">
          pipeline.Add(new LogisticRegressionBinaryClassifier());
        </code>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogisticRegressionBinaryClassifier ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyStep">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Legacy.ILearningPipelineStep ApplyStep (Microsoft.ML.Legacy.ILearningPipelineStep previousStep, Microsoft.ML.Runtime.Experiment experiment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Legacy.ILearningPipelineStep ApplyStep(class Microsoft.ML.Legacy.ILearningPipelineStep previousStep, class Microsoft.ML.Runtime.Experiment experiment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.ApplyStep(Microsoft.ML.Legacy.ILearningPipelineStep,Microsoft.ML.Runtime.Experiment)" />
      <MemberSignature Language="F#" Value="abstract member ApplyStep : Microsoft.ML.Legacy.ILearningPipelineStep * Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.Legacy.ILearningPipelineStep&#xA;override this.ApplyStep : Microsoft.ML.Legacy.ILearningPipelineStep * Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.Legacy.ILearningPipelineStep" Usage="logisticRegressionBinaryClassifier.ApplyStep (previousStep, experiment)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Legacy.ILearningPipelineItem.ApplyStep(Microsoft.ML.Legacy.ILearningPipelineStep,Microsoft.ML.Runtime.Experiment)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Legacy.ILearningPipelineStep</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previousStep" Type="Microsoft.ML.Legacy.ILearningPipelineStep" />
        <Parameter Name="experiment" Type="Microsoft.ML.Runtime.Experiment" />
      </Parameters>
      <Docs>
        <param name="previousStep">To be added.</param>
        <param name="experiment">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caching">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Legacy.Models.CachingOptions Caching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Legacy.Models.CachingOptions Caching" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.Caching" />
      <MemberSignature Language="VB.NET" Value="Public Property Caching As CachingOptions" />
      <MemberSignature Language="F#" Value="member this.Caching : Microsoft.ML.Legacy.Models.CachingOptions with get, set" Usage="Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.Caching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Legacy.Models.CachingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether learner should cache input training data
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DenseOptimizer">
      <MemberSignature Language="C#" Value="public bool DenseOptimizer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DenseOptimizer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.DenseOptimizer" />
      <MemberSignature Language="VB.NET" Value="Public Property DenseOptimizer As Boolean" />
      <MemberSignature Language="F#" Value="member this.DenseOptimizer : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.DenseOptimizer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableDiscreteParam("DenseOptimizer", new System.Object[] { Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument }, false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Force densification of the internal optimization vectors
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnforceNonNegativity">
      <MemberSignature Language="C#" Value="public bool EnforceNonNegativity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnforceNonNegativity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.EnforceNonNegativity" />
      <MemberSignature Language="VB.NET" Value="Public Property EnforceNonNegativity As Boolean" />
      <MemberSignature Language="F#" Value="member this.EnforceNonNegativity : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.EnforceNonNegativity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Enforce non-negative weights
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureColumn">
      <MemberSignature Language="C#" Value="public string FeatureColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FeatureColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.FeatureColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureColumn As String" />
      <MemberSignature Language="F#" Value="member this.FeatureColumn : string with get, set" Usage="Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.FeatureColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for features
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInputData">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; GetInputData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; GetInputData() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.GetInputData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInputData () As Var(Of IDataView)" />
      <MemberSignature Language="F#" Value="abstract member GetInputData : unit -&gt; Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;&#xA;override this.GetInputData : unit -&gt; Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;" Usage="logisticRegressionBinaryClassifier.GetInputData " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Legacy.ILearningPipelineItem.GetInputData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitWtsDiameter">
      <MemberSignature Language="C#" Value="public float InitWtsDiameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 InitWtsDiameter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.InitWtsDiameter" />
      <MemberSignature Language="VB.NET" Value="Public Property InitWtsDiameter As Single" />
      <MemberSignature Language="F#" Value="member this.InitWtsDiameter : single with get, set" Usage="Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.InitWtsDiameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableFloatParam("InitWtsDiameter", 0, 1, -1, 5, false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Init weights diameter
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="L1Weight">
      <MemberSignature Language="C#" Value="public float L1Weight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 L1Weight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.L1Weight" />
      <MemberSignature Language="VB.NET" Value="Public Property L1Weight As Single" />
      <MemberSignature Language="F#" Value="member this.L1Weight : single with get, set" Usage="Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.L1Weight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableFloatParam("L1Weight", 0, 1, -1, 4, false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            L1 regularization weight
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="L2Weight">
      <MemberSignature Language="C#" Value="public float L2Weight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 L2Weight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.L2Weight" />
      <MemberSignature Language="VB.NET" Value="Public Property L2Weight As Single" />
      <MemberSignature Language="F#" Value="member this.L2Weight : single with get, set" Usage="Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.L2Weight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableFloatParam("L2Weight", 0, 1, -1, 4, false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            L2 regularization weight
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelColumn">
      <MemberSignature Language="C#" Value="public string LabelColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LabelColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.LabelColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelColumn As String" />
      <MemberSignature Language="F#" Value="member this.LabelColumn : string with get, set" Usage="Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.LabelColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for labels
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxIterations">
      <MemberSignature Language="C#" Value="public int MaxIterations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxIterations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.MaxIterations" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxIterations As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxIterations : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.MaxIterations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableLongParam("MaxIterations", 1, 2147483647, -1, -1, false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Maximum iterations.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemorySize">
      <MemberSignature Language="C#" Value="public int MemorySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemorySize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.MemorySize" />
      <MemberSignature Language="VB.NET" Value="Public Property MemorySize As Integer" />
      <MemberSignature Language="F#" Value="member this.MemorySize : int with get, set" Usage="Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.MemorySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableDiscreteParam("MemorySize", new System.Object[] { Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument }, false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Memory size for L-BFGS. Lower=faster, less accurate
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeFeatures">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Legacy.Models.NormalizeOption NormalizeFeatures { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Legacy.Models.NormalizeOption NormalizeFeatures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.NormalizeFeatures" />
      <MemberSignature Language="VB.NET" Value="Public Property NormalizeFeatures As NormalizeOption" />
      <MemberSignature Language="F#" Value="member this.NormalizeFeatures : Microsoft.ML.Legacy.Models.NormalizeOption with get, set" Usage="Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.NormalizeFeatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Legacy.Models.NormalizeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Normalize option for the feature column
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumThreads">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; NumThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; NumThreads" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.NumThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property NumThreads As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.NumThreads : Nullable&lt;int&gt; with get, set" Usage="Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.NumThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Number of threads
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptTol">
      <MemberSignature Language="C#" Value="public float OptTol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 OptTol" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.OptTol" />
      <MemberSignature Language="VB.NET" Value="Public Property OptTol As Single" />
      <MemberSignature Language="F#" Value="member this.OptTol : single with get, set" Usage="Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.OptTol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableDiscreteParam("OptTol", new System.Object[] { Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument }, false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Tolerance parameter for optimization convergence. Lower = slower, more accurate
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Quiet">
      <MemberSignature Language="C#" Value="public bool Quiet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Quiet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.Quiet" />
      <MemberSignature Language="VB.NET" Value="Public Property Quiet As Boolean" />
      <MemberSignature Language="F#" Value="member this.Quiet : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.Quiet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If set to true, produce no output during training.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SgdInitializationTolerance">
      <MemberSignature Language="C#" Value="public float SgdInitializationTolerance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 SgdInitializationTolerance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.SgdInitializationTolerance" />
      <MemberSignature Language="VB.NET" Value="Public Property SgdInitializationTolerance As Single" />
      <MemberSignature Language="F#" Value="member this.SgdInitializationTolerance : single with get, set" Usage="Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.SgdInitializationTolerance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Run SGD to initialize LR weights, converging to this tolerance
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTrainingStats">
      <MemberSignature Language="C#" Value="public bool ShowTrainingStats { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowTrainingStats" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.ShowTrainingStats" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowTrainingStats As Boolean" />
      <MemberSignature Language="F#" Value="member this.ShowTrainingStats : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.ShowTrainingStats" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Show statistics of training examples.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainingData">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; TrainingData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; TrainingData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.TrainingData" />
      <MemberSignature Language="VB.NET" Value="Public Property TrainingData As Var(Of IDataView)" />
      <MemberSignature Language="F#" Value="member this.TrainingData : Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; with get, set" Usage="Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.TrainingData" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITrainerInput.TrainingData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The data to be used for training
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseThreads">
      <MemberSignature Language="C#" Value="public bool UseThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseThreads" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.UseThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property UseThreads As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseThreads : bool with get, set" Usage="Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.UseThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether or not to use threads. Default is true
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeightColumn">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Optional&lt;string&gt; WeightColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Optional`1&lt;string&gt; WeightColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.WeightColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property WeightColumn As Optional(Of String)" />
      <MemberSignature Language="F#" Value="member this.WeightColumn : Microsoft.ML.Runtime.EntryPoints.Optional&lt;string&gt; with get, set" Usage="Microsoft.ML.Legacy.Trainers.LogisticRegressionBinaryClassifier.WeightColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Optional&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for example weight
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>