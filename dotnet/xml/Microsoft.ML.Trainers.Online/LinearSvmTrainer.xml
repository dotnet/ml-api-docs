<Type Name="LinearSvmTrainer" FullName="Microsoft.ML.Trainers.Online.LinearSvmTrainer">
  <TypeSignature Language="C#" Value="public sealed class LinearSvmTrainer : Microsoft.ML.Trainers.Online.OnlineLinearTrainer&lt;Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Learners.LinearBinaryModelParameters&gt;,Microsoft.ML.Learners.LinearBinaryModelParameters&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LinearSvmTrainer extends Microsoft.ML.Trainers.Online.OnlineLinearTrainer`2&lt;class Microsoft.ML.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Learners.LinearBinaryModelParameters&gt;, class Microsoft.ML.Learners.LinearBinaryModelParameters&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.Online.LinearSvmTrainer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LinearSvmTrainer&#xA;Inherits OnlineLinearTrainer(Of BinaryPredictionTransformer(Of LinearBinaryModelParameters), LinearBinaryModelParameters)" />
  <TypeSignature Language="F#" Value="type LinearSvmTrainer = class&#xA;    inherit OnlineLinearTrainer&lt;BinaryPredictionTransformer&lt;LinearBinaryModelParameters&gt;, LinearBinaryModelParameters&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Trainers.Online.OnlineLinearTrainer&lt;Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Learners.LinearBinaryModelParameters&gt;,Microsoft.ML.Learners.LinearBinaryModelParameters&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TTransformer">Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Learners.LinearBinaryModelParameters&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TModel">Microsoft.ML.Learners.LinearBinaryModelParameters</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Linear SVM that implements PEGASOS for training. See: http://ttic.uchicago.edu/~shai/papers/ShalevSiSr07.pdf
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearSvmTrainer (Microsoft.ML.IHostEnvironment env, string labelColumn = &quot;Label&quot;, string featureColumn = &quot;Features&quot;, string weightsColumn = null, int numIterations = 1, Action&lt;Microsoft.ML.Trainers.Online.LinearSvmTrainer.Arguments&gt; advancedSettings = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, string labelColumn, string featureColumn, string weightsColumn, int32 numIterations, class System.Action`1&lt;class Microsoft.ML.Trainers.Online.LinearSvmTrainer/Arguments&gt; advancedSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.Online.LinearSvmTrainer.#ctor(Microsoft.ML.IHostEnvironment,System.String,System.String,System.String,System.Int32,System.Action{Microsoft.ML.Trainers.Online.LinearSvmTrainer.Arguments})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, Optional labelColumn As String = &quot;Label&quot;, Optional featureColumn As String = &quot;Features&quot;, Optional weightsColumn As String = null, Optional numIterations As Integer = 1, Optional advancedSettings As Action(Of LinearSvmTrainer.Arguments) = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Trainers.Online.LinearSvmTrainer : Microsoft.ML.IHostEnvironment * string * string * string * int * Action&lt;Microsoft.ML.Trainers.Online.LinearSvmTrainer.Arguments&gt; -&gt; Microsoft.ML.Trainers.Online.LinearSvmTrainer" Usage="new Microsoft.ML.Trainers.Online.LinearSvmTrainer (env, labelColumn, featureColumn, weightsColumn, numIterations, advancedSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="labelColumn" Type="System.String" />
        <Parameter Name="featureColumn" Type="System.String" />
        <Parameter Name="weightsColumn" Type="System.String" />
        <Parameter Name="numIterations" Type="System.Int32" />
        <Parameter Name="advancedSettings" Type="System.Action&lt;Microsoft.ML.Trainers.Online.LinearSvmTrainer+Arguments&gt;" />
      </Parameters>
      <Docs>
        <param name="env">The environment to use.</param>
        <param name="labelColumn">The name of the label column. </param>
        <param name="featureColumn">The name of the feature column.</param>
        <param name="weightsColumn">The optional name of the weights column.</param>
        <param name="numIterations">The number of training iteraitons.</param>
        <param name="advancedSettings">A delegate to supply more advanced arguments to the algorithm.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Trainers.Online.LinearSvmTrainer" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputColumnsCore">
      <MemberSignature Language="C#" Value="protected override Microsoft.ML.Core.Data.SchemaShape.Column[] GetOutputColumnsCore (Microsoft.ML.Core.Data.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype Microsoft.ML.Core.Data.SchemaShape/Column[] GetOutputColumnsCore(class Microsoft.ML.Core.Data.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.Online.LinearSvmTrainer.GetOutputColumnsCore(Microsoft.ML.Core.Data.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetOutputColumnsCore (inputSchema As SchemaShape) As SchemaShape.Column()" />
      <MemberSignature Language="F#" Value="override this.GetOutputColumnsCore : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape.Column[]" Usage="linearSvmTrainer.GetOutputColumnsCore inputSchema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape+Column[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Core.Data.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeTransformer">
      <MemberSignature Language="C#" Value="protected override Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Learners.LinearBinaryModelParameters&gt; MakeTransformer (Microsoft.ML.Learners.LinearBinaryModelParameters model, Microsoft.ML.Data.Schema trainSchema);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.ML.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Learners.LinearBinaryModelParameters&gt; MakeTransformer(class Microsoft.ML.Learners.LinearBinaryModelParameters model, class Microsoft.ML.Data.Schema trainSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.Online.LinearSvmTrainer.MakeTransformer(Microsoft.ML.Learners.LinearBinaryModelParameters,Microsoft.ML.Data.Schema)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MakeTransformer (model As LinearBinaryModelParameters, trainSchema As Schema) As BinaryPredictionTransformer(Of LinearBinaryModelParameters)" />
      <MemberSignature Language="F#" Value="override this.MakeTransformer : Microsoft.ML.Learners.LinearBinaryModelParameters * Microsoft.ML.Data.Schema -&gt; Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Learners.LinearBinaryModelParameters&gt;" Usage="linearSvmTrainer.MakeTransformer (model, trainSchema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Learners.LinearBinaryModelParameters&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.ML.Learners.LinearBinaryModelParameters" />
        <Parameter Name="trainSchema" Type="Microsoft.ML.Data.Schema" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="trainSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NeedCalibration">
      <MemberSignature Language="C#" Value="protected override bool NeedCalibration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeedCalibration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.Online.LinearSvmTrainer.NeedCalibration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property NeedCalibration As Boolean" />
      <MemberSignature Language="F#" Value="member this.NeedCalibration : bool" Usage="Microsoft.ML.Trainers.Online.LinearSvmTrainer.NeedCalibration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictionKind">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.PredictionKind PredictionKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.PredictionKind PredictionKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.Online.LinearSvmTrainer.PredictionKind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PredictionKind As PredictionKind" />
      <MemberSignature Language="F#" Value="member this.PredictionKind : Microsoft.ML.PredictionKind" Usage="Microsoft.ML.Trainers.Online.LinearSvmTrainer.PredictionKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.PredictionKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Train">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Learners.LinearBinaryModelParameters&gt; Train (Microsoft.ML.Data.IDataView trainData, Microsoft.ML.IPredictor initialPredictor = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Learners.LinearBinaryModelParameters&gt; Train(class Microsoft.ML.Data.IDataView trainData, class Microsoft.ML.IPredictor initialPredictor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.Online.LinearSvmTrainer.Train(Microsoft.ML.Data.IDataView,Microsoft.ML.IPredictor)" />
      <MemberSignature Language="VB.NET" Value="Public Function Train (trainData As IDataView, Optional initialPredictor As IPredictor = null) As BinaryPredictionTransformer(Of LinearBinaryModelParameters)" />
      <MemberSignature Language="F#" Value="member this.Train : Microsoft.ML.Data.IDataView * Microsoft.ML.IPredictor -&gt; Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Learners.LinearBinaryModelParameters&gt;" Usage="linearSvmTrainer.Train (trainData, initialPredictor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Learners.LinearBinaryModelParameters&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainData" Type="Microsoft.ML.Data.IDataView" />
        <Parameter Name="initialPredictor" Type="Microsoft.ML.IPredictor" />
      </Parameters>
      <Docs>
        <param name="trainData">To be added.</param>
        <param name="initialPredictor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainLinearSvm">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.EntryPoints.CommonOutputs.BinaryClassificationOutput TrainLinearSvm (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Trainers.Online.LinearSvmTrainer.Arguments input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.EntryPoints.CommonOutputs/BinaryClassificationOutput TrainLinearSvm(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Trainers.Online.LinearSvmTrainer/Arguments input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.Online.LinearSvmTrainer.TrainLinearSvm(Microsoft.ML.IHostEnvironment,Microsoft.ML.Trainers.Online.LinearSvmTrainer.Arguments)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrainLinearSvm (env As IHostEnvironment, input As LinearSvmTrainer.Arguments) As CommonOutputs.BinaryClassificationOutput" />
      <MemberSignature Language="F#" Value="static member TrainLinearSvm : Microsoft.ML.IHostEnvironment * Microsoft.ML.Trainers.Online.LinearSvmTrainer.Arguments -&gt; Microsoft.ML.EntryPoints.CommonOutputs.BinaryClassificationOutput" Usage="Microsoft.ML.Trainers.Online.LinearSvmTrainer.TrainLinearSvm (env, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/EntryPoint(Desc="Train a linear SVM.", Name="Trainers.LinearSvmBinaryClassifier", ShortName="svm", UserName="SVM (Pegasos-Linear)")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.EntryPoints.CommonOutputs+BinaryClassificationOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Trainers.Online.LinearSvmTrainer+Arguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>