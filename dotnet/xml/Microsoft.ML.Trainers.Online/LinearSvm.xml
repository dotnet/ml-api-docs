<Type Name="LinearSvm" FullName="Microsoft.ML.Trainers.Online.LinearSvm">
  <TypeSignature Language="C#" Value="public sealed class LinearSvm : Microsoft.ML.Trainers.Online.OnlineLinearTrainer&lt;Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;,Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LinearSvm extends Microsoft.ML.Trainers.Online.OnlineLinearTrainer`2&lt;class Microsoft.ML.Runtime.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;, class Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.Online.LinearSvm" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LinearSvm&#xA;Inherits OnlineLinearTrainer(Of BinaryPredictionTransformer(Of LinearBinaryPredictor), LinearBinaryPredictor)" />
  <TypeSignature Language="F#" Value="type LinearSvm = class&#xA;    inherit OnlineLinearTrainer&lt;BinaryPredictionTransformer&lt;LinearBinaryPredictor&gt;, LinearBinaryPredictor&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Trainers.Online.OnlineLinearTrainer&lt;Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;,Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TTransformer">Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TModel">Microsoft.ML.Runtime.Learners.LinearBinaryPredictor</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Linear SVM that implements PEGASOS for training. See: http://ttic.uchicago.edu/~shai/papers/ShalevSiSr07.pdf
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearSvm (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Trainers.Online.LinearSvm.Arguments args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Trainers.Online.LinearSvm/Arguments args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.Online.LinearSvm.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Trainers.Online.LinearSvm.Arguments)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, args As LinearSvm.Arguments)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Trainers.Online.LinearSvm : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Trainers.Online.LinearSvm.Arguments -&gt; Microsoft.ML.Trainers.Online.LinearSvm" Usage="new Microsoft.ML.Trainers.Online.LinearSvm (env, args)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="args" Type="Microsoft.ML.Trainers.Online.LinearSvm+Arguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckLabels">
      <MemberSignature Language="C#" Value="protected override void CheckLabels (Microsoft.ML.Runtime.Data.RoleMappedData data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CheckLabels(class Microsoft.ML.Runtime.Data.RoleMappedData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.Online.LinearSvm.CheckLabels(Microsoft.ML.Runtime.Data.RoleMappedData)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CheckLabels (data As RoleMappedData)" />
      <MemberSignature Language="F#" Value="override this.CheckLabels : Microsoft.ML.Runtime.Data.RoleMappedData -&gt; unit" Usage="linearSvm.CheckLabels data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputColumnsCore">
      <MemberSignature Language="C#" Value="protected override Microsoft.ML.Core.Data.SchemaShape.Column[] GetOutputColumnsCore (Microsoft.ML.Core.Data.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.ML.Core.Data.SchemaShape/Column[] GetOutputColumnsCore(class Microsoft.ML.Core.Data.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.Online.LinearSvm.GetOutputColumnsCore(Microsoft.ML.Core.Data.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetOutputColumnsCore (inputSchema As SchemaShape) As SchemaShape.Column()" />
      <MemberSignature Language="F#" Value="override this.GetOutputColumnsCore : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape.Column[]" Usage="linearSvm.GetOutputColumnsCore inputSchema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape+Column[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Core.Data.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeTransformer">
      <MemberSignature Language="C#" Value="protected override Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt; MakeTransformer (Microsoft.ML.Runtime.Learners.LinearBinaryPredictor model, Microsoft.ML.Runtime.Data.Schema trainSchema);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.ML.Runtime.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt; MakeTransformer(class Microsoft.ML.Runtime.Learners.LinearBinaryPredictor model, class Microsoft.ML.Runtime.Data.Schema trainSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.Online.LinearSvm.MakeTransformer(Microsoft.ML.Runtime.Learners.LinearBinaryPredictor,Microsoft.ML.Runtime.Data.Schema)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MakeTransformer (model As LinearBinaryPredictor, trainSchema As Schema) As BinaryPredictionTransformer(Of LinearBinaryPredictor)" />
      <MemberSignature Language="F#" Value="override this.MakeTransformer : Microsoft.ML.Runtime.Learners.LinearBinaryPredictor * Microsoft.ML.Runtime.Data.Schema -&gt; Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;" Usage="linearSvm.MakeTransformer (model, trainSchema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.ML.Runtime.Learners.LinearBinaryPredictor" />
        <Parameter Name="trainSchema" Type="Microsoft.ML.Runtime.Data.Schema" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="trainSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NeedCalibration">
      <MemberSignature Language="C#" Value="protected override bool NeedCalibration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeedCalibration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.Online.LinearSvm.NeedCalibration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property NeedCalibration As Boolean" />
      <MemberSignature Language="F#" Value="member this.NeedCalibration : bool" Usage="Microsoft.ML.Trainers.Online.LinearSvm.NeedCalibration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictionKind">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.Runtime.PredictionKind PredictionKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Runtime.PredictionKind PredictionKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.Online.LinearSvm.PredictionKind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PredictionKind As PredictionKind" />
      <MemberSignature Language="F#" Value="member this.PredictionKind : Microsoft.ML.Runtime.PredictionKind" Usage="Microsoft.ML.Trainers.Online.LinearSvm.PredictionKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PredictionKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainLinearSvm">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.EntryPoints.CommonOutputs.BinaryClassificationOutput TrainLinearSvm (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Trainers.Online.LinearSvm.Arguments input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.EntryPoints.CommonOutputs/BinaryClassificationOutput TrainLinearSvm(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Trainers.Online.LinearSvm/Arguments input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.Online.LinearSvm.TrainLinearSvm(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Trainers.Online.LinearSvm.Arguments)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrainLinearSvm (env As IHostEnvironment, input As LinearSvm.Arguments) As CommonOutputs.BinaryClassificationOutput" />
      <MemberSignature Language="F#" Value="static member TrainLinearSvm : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Trainers.Online.LinearSvm.Arguments -&gt; Microsoft.ML.Runtime.EntryPoints.CommonOutputs.BinaryClassificationOutput" Usage="Microsoft.ML.Trainers.Online.LinearSvm.TrainLinearSvm (env, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/EntryPoint(Desc="Train a linear SVM.", Name="Trainers.LinearSvmBinaryClassifier", ShortName="svm", UserName="SVM (Pegasos-Linear)")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.CommonOutputs+BinaryClassificationOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Trainers.Online.LinearSvm+Arguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>