<Type Name="AveragedPerceptronTrainer" FullName="Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer">
  <TypeSignature Language="C#" Value="public sealed class AveragedPerceptronTrainer : Microsoft.ML.Trainers.Online.AveragedLinearTrainer&lt;Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;,Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AveragedPerceptronTrainer extends Microsoft.ML.Trainers.Online.AveragedLinearTrainer`2&lt;class Microsoft.ML.Runtime.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;, class Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AveragedPerceptronTrainer&#xA;Inherits AveragedLinearTrainer(Of BinaryPredictionTransformer(Of LinearBinaryPredictor), LinearBinaryPredictor)" />
  <TypeSignature Language="F#" Value="type AveragedPerceptronTrainer = class&#xA;    inherit AveragedLinearTrainer&lt;BinaryPredictionTransformer&lt;LinearBinaryPredictor&gt;, LinearBinaryPredictor&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Trainers.Online.AveragedLinearTrainer&lt;Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;,Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TTransformer">Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TModel">Microsoft.ML.Runtime.Learners.LinearBinaryPredictor</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
        Averaged Perceptron Binary Classifier. 
      </summary>
    <remarks>
        Perceptron is a classification algorithm that makes its predictions based on a linear function.
        I.e., for an instance with feature values f0, f1,..., f_D-1, , the prediction is given by the sign of sigma[0,D-1] ( w_i * f_i), where w_0, w_1,...,w_D-1 are the weights computed by the algorithm.
        <para>
          Perceptron is an online algorithm, i.e., it processes the instances in the training set one at a time.
          The weights are initialized to be 0, or some random values. Then, for each example in the training set, the value of sigma[0, D-1] (w_i * f_i) is computed.
          If this value has the same sign as the label of the current example, the weights remain the same. If they have opposite signs,
          the weights vector is updated by either subtracting or adding (if the label is negative or positive, respectively) the feature vector of the current example,
          multiplied by a factor 0 &lt; a &lt;= 1, called the learning rate. In a generalization of this algorithm, the weights are updated by adding the feature vector multiplied by the learning rate,
          and by the gradient of some loss function (in the specific case described above, the loss is hinge-loss, whose gradient is 1 when it is non-zero).
        </para><para>
          In Averaged Perceptron (AKA voted-perceptron), the weight vectors are stored,
          together with a weight that counts the number of iterations it survived (this is equivalent to storing the weight vector after every iteration, regardless of whether it was updated or not).
          The prediction is then calculated by taking the weighted average of all the sums sigma[0, D-1] (w_i * f_i) or the different weight vectors.
        </para><para> For more information see:</para><para><a href="https://en.wikipedia.org/wiki/Perceptron">Wikipedia entry for Perceptron</a></para><para><a href="https://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.48.8200">Large Margin Classification Using the Perceptron Algorithm</a></para></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AveragedPerceptronTrainer (Microsoft.ML.Runtime.IHostEnvironment env, string labelColumn = &quot;Label&quot;, string featureColumn = &quot;Features&quot;, string weights = null, Microsoft.ML.Runtime.IClassificationLoss lossFunction = null, float learningRate = 1, bool decreaseLearningRate = false, float l2RegularizerWeight = 0, int numIterations = 1, Action&lt;Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.Arguments&gt; advancedSettings = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, string labelColumn, string featureColumn, string weights, class Microsoft.ML.Runtime.IClassificationLoss lossFunction, float32 learningRate, bool decreaseLearningRate, float32 l2RegularizerWeight, int32 numIterations, class System.Action`1&lt;class Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer/Arguments&gt; advancedSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.String,System.String,Microsoft.ML.Runtime.IClassificationLoss,System.Single,System.Boolean,System.Single,System.Int32,System.Action{Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.Arguments})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, Optional labelColumn As String = &quot;Label&quot;, Optional featureColumn As String = &quot;Features&quot;, Optional weights As String = null, Optional lossFunction As IClassificationLoss = null, Optional learningRate As Single = 1, Optional decreaseLearningRate As Boolean = false, Optional l2RegularizerWeight As Single = 0, Optional numIterations As Integer = 1, Optional advancedSettings As Action(Of AveragedPerceptronTrainer.Arguments) = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer : Microsoft.ML.Runtime.IHostEnvironment * string * string * string * Microsoft.ML.Runtime.IClassificationLoss * single * bool * single * int * Action&lt;Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.Arguments&gt; -&gt; Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer" Usage="new Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer (env, labelColumn, featureColumn, weights, lossFunction, learningRate, decreaseLearningRate, l2RegularizerWeight, numIterations, advancedSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" Index="0" />
        <Parameter Name="labelColumn" Type="System.String" Index="1" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="featureColumn" Type="System.String" Index="2" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="weights" Type="System.String" Index="3" />
        <Parameter Name="lossFunction" Type="Microsoft.ML.Runtime.IClassificationLoss" Index="4" />
        <Parameter Name="learningRate" Type="System.Single" Index="5" />
        <Parameter Name="decreaseLearningRate" Type="System.Boolean" Index="6" />
        <Parameter Name="l2RegularizerWeight" Type="System.Single" Index="7" />
        <Parameter Name="numIterations" Type="System.Int32" Index="8" />
        <Parameter Name="advancedSettings" Type="System.Action&lt;Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer+Arguments&gt;" Index="9" />
      </Parameters>
      <Docs>
        <param name="env">The local instance of the <see cref="T:Microsoft.ML.Runtime.IHostEnvironment" /></param>
        <param name="labelColumn">The name of the label column. </param>
        <param name="featureColumn">The name of the feature column.</param>
        <param name="weights">The optional name of the weights column.</param>
        <param name="lossFunction">The classification loss function. </param>
        <param name="learningRate">The learning rate. </param>
        <param name="decreaseLearningRate">Wheather to decrease learning rate as iterations progress.</param>
        <param name="l2RegularizerWeight">L2 Regularization Weight.</param>
        <param name="numIterations">The number of training iteraitons.</param>
        <param name="advancedSettings">A delegate to supply more advanced arguments to the algorithm.</param>
        <summary>
            Trains a linear binary classifier using the averaged perceptron.
            <a href="https://en.wikipedia.org/wiki/Perceptron">Wikipedia entry for Perceptron</a></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckLabelCompatible">
      <MemberSignature Language="C#" Value="protected override void CheckLabelCompatible (Microsoft.ML.Core.Data.SchemaShape.Column labelCol);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CheckLabelCompatible(class Microsoft.ML.Core.Data.SchemaShape/Column labelCol) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.CheckLabelCompatible(Microsoft.ML.Core.Data.SchemaShape.Column)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CheckLabelCompatible (labelCol As SchemaShape.Column)" />
      <MemberSignature Language="F#" Value="override this.CheckLabelCompatible : Microsoft.ML.Core.Data.SchemaShape.Column -&gt; unit" Usage="averagedPerceptronTrainer.CheckLabelCompatible labelCol" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="labelCol" Type="Microsoft.ML.Core.Data.SchemaShape+Column" />
      </Parameters>
      <Docs>
        <param name="labelCol">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckLabels">
      <MemberSignature Language="C#" Value="protected override void CheckLabels (Microsoft.ML.Runtime.Data.RoleMappedData data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CheckLabels(class Microsoft.ML.Runtime.Data.RoleMappedData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.CheckLabels(Microsoft.ML.Runtime.Data.RoleMappedData)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CheckLabels (data As RoleMappedData)" />
      <MemberSignature Language="F#" Value="override this.CheckLabels : Microsoft.ML.Runtime.Data.RoleMappedData -&gt; unit" Usage="averagedPerceptronTrainer.CheckLabels data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputColumnsCore">
      <MemberSignature Language="C#" Value="protected override Microsoft.ML.Core.Data.SchemaShape.Column[] GetOutputColumnsCore (Microsoft.ML.Core.Data.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.ML.Core.Data.SchemaShape/Column[] GetOutputColumnsCore(class Microsoft.ML.Core.Data.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.GetOutputColumnsCore(Microsoft.ML.Core.Data.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetOutputColumnsCore (inputSchema As SchemaShape) As SchemaShape.Column()" />
      <MemberSignature Language="F#" Value="override this.GetOutputColumnsCore : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape.Column[]" Usage="averagedPerceptronTrainer.GetOutputColumnsCore inputSchema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape+Column[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Core.Data.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadNameValue">
      <MemberSignature Language="C#" Value="public const string LoadNameValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string LoadNameValue" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.LoadNameValue" />
      <MemberSignature Language="VB.NET" Value="Public Const LoadNameValue As String " />
      <MemberSignature Language="F#" Value="val mutable LoadNameValue : string" Usage="Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.LoadNameValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeTransformer">
      <MemberSignature Language="C#" Value="protected override Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt; MakeTransformer (Microsoft.ML.Runtime.Learners.LinearBinaryPredictor model, Microsoft.ML.Data.Schema trainSchema);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.ML.Runtime.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt; MakeTransformer(class Microsoft.ML.Runtime.Learners.LinearBinaryPredictor model, class Microsoft.ML.Data.Schema trainSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.MakeTransformer(Microsoft.ML.Runtime.Learners.LinearBinaryPredictor,Microsoft.ML.Data.Schema)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MakeTransformer (model As LinearBinaryPredictor, trainSchema As Schema) As BinaryPredictionTransformer(Of LinearBinaryPredictor)" />
      <MemberSignature Language="F#" Value="override this.MakeTransformer : Microsoft.ML.Runtime.Learners.LinearBinaryPredictor * Microsoft.ML.Data.Schema -&gt; Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;" Usage="averagedPerceptronTrainer.MakeTransformer (model, trainSchema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.ML.Runtime.Learners.LinearBinaryPredictor" />
        <Parameter Name="trainSchema" Type="Microsoft.ML.Data.Schema" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="trainSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NeedCalibration">
      <MemberSignature Language="C#" Value="protected override bool NeedCalibration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeedCalibration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.NeedCalibration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property NeedCalibration As Boolean" />
      <MemberSignature Language="F#" Value="member this.NeedCalibration : bool" Usage="Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.NeedCalibration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictionKind">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.Runtime.PredictionKind PredictionKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Runtime.PredictionKind PredictionKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.PredictionKind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PredictionKind As PredictionKind" />
      <MemberSignature Language="F#" Value="member this.PredictionKind : Microsoft.ML.Runtime.PredictionKind" Usage="Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.PredictionKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.PredictionKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Train">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt; Train (Microsoft.ML.Runtime.Data.IDataView trainData, Microsoft.ML.Runtime.IPredictor initialPredictor = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt; Train(class Microsoft.ML.Runtime.Data.IDataView trainData, class Microsoft.ML.Runtime.IPredictor initialPredictor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.Train(Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.IPredictor)" />
      <MemberSignature Language="VB.NET" Value="Public Function Train (trainData As IDataView, Optional initialPredictor As IPredictor = null) As BinaryPredictionTransformer(Of LinearBinaryPredictor)" />
      <MemberSignature Language="F#" Value="member this.Train : Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.IPredictor -&gt; Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;" Usage="averagedPerceptronTrainer.Train (trainData, initialPredictor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainData" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="initialPredictor" Type="Microsoft.ML.Runtime.IPredictor" />
      </Parameters>
      <Docs>
        <param name="trainData">To be added.</param>
        <param name="initialPredictor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainBinary">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.EntryPoints.CommonOutputs.BinaryClassificationOutput TrainBinary (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.Arguments input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.EntryPoints.CommonOutputs/BinaryClassificationOutput TrainBinary(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer/Arguments input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.TrainBinary(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.Arguments)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrainBinary (env As IHostEnvironment, input As AveragedPerceptronTrainer.Arguments) As CommonOutputs.BinaryClassificationOutput" />
      <MemberSignature Language="F#" Value="static member TrainBinary : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.Arguments -&gt; Microsoft.ML.Runtime.EntryPoints.CommonOutputs.BinaryClassificationOutput" Usage="Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.TrainBinary (env, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/EntryPoint(Desc="Averaged Perceptron Binary Classifier.", Name="Trainers.AveragedPerceptronBinaryClassifier", ShortName="ap", UserName="Averaged Perceptron", XmlInclude=new System.String[] { "&lt;include file='../Microsoft.ML.StandardLearners/Standard/Online/doc.xml' path='doc/members/member[@name="AP"]/*' /&gt;", "&lt;include file='../Microsoft.ML.StandardLearners/Standard/Online/doc.xml' path='doc/members/example[@name="AP"]/*' /&gt;" })</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.CommonOutputs+BinaryClassificationOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer+Arguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>