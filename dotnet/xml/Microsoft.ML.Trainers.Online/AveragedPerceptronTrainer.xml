<Type Name="AveragedPerceptronTrainer" FullName="Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer">
  <TypeSignature Language="C#" Value="public sealed class AveragedPerceptronTrainer : Microsoft.ML.Trainers.Online.AveragedLinearTrainer&lt;Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Learners.LinearBinaryModelParameters&gt;,Microsoft.ML.Learners.LinearBinaryModelParameters&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AveragedPerceptronTrainer extends Microsoft.ML.Trainers.Online.AveragedLinearTrainer`2&lt;class Microsoft.ML.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Learners.LinearBinaryModelParameters&gt;, class Microsoft.ML.Learners.LinearBinaryModelParameters&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AveragedPerceptronTrainer&#xA;Inherits AveragedLinearTrainer(Of BinaryPredictionTransformer(Of LinearBinaryModelParameters), LinearBinaryModelParameters)" />
  <TypeSignature Language="F#" Value="type AveragedPerceptronTrainer = class&#xA;    inherit AveragedLinearTrainer&lt;BinaryPredictionTransformer&lt;LinearBinaryModelParameters&gt;, LinearBinaryModelParameters&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Trainers.Online.AveragedLinearTrainer&lt;Microsoft.ML.Runtime.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;,Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;</BaseTypeName>
    <BaseTypeName FrameworkAlternate="ml-dotnet">Microsoft.ML.Trainers.Online.AveragedLinearTrainer&lt;Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Learners.LinearBinaryModelParameters&gt;,Microsoft.ML.Learners.LinearBinaryModelParameters&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TTransformer">Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Learners.LinearBinaryModelParameters&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TModel">Microsoft.ML.Learners.LinearBinaryModelParameters</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
        Averaged Perceptron Binary Classifier. 
      </summary>
    <remarks>
        Perceptron is a classification algorithm that makes its predictions based on a linear function.
        I.e., for an instance with feature values f0, f1,..., f_D-1, , the prediction is given by the sign of sigma[0,D-1] ( w_i * f_i), where w_0, w_1,...,w_D-1 are the weights computed by the algorithm.
        <para>
          Perceptron is an online algorithm, i.e., it processes the instances in the training set one at a time.
          The weights are initialized to be 0, or some random values. Then, for each example in the training set, the value of sigma[0, D-1] (w_i * f_i) is computed.
          If this value has the same sign as the label of the current example, the weights remain the same. If they have opposite signs,
          the weights vector is updated by either subtracting or adding (if the label is negative or positive, respectively) the feature vector of the current example,
          multiplied by a factor 0 &lt; a &lt;= 1, called the learning rate. In a generalization of this algorithm, the weights are updated by adding the feature vector multiplied by the learning rate,
          and by the gradient of some loss function (in the specific case described above, the loss is hinge-loss, whose gradient is 1 when it is non-zero).
        </para><para>
          In Averaged Perceptron (AKA voted-perceptron), the weight vectors are stored,
          together with a weight that counts the number of iterations it survived (this is equivalent to storing the weight vector after every iteration, regardless of whether it was updated or not).
          The prediction is then calculated by taking the weighted average of all the sums sigma[0, D-1] (w_i * f_i) or the different weight vectors.
        </para><para> For more information see:</para><para><a href="https://en.wikipedia.org/wiki/Perceptron">Wikipedia entry for Perceptron</a></para><para><a href="https://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.48.8200">Large Margin Classification Using the Perceptron Algorithm</a></para></remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckLabelCompatible">
      <MemberSignature Language="C#" Value="protected override void CheckLabelCompatible (Microsoft.ML.Core.Data.SchemaShape.Column labelCol);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CheckLabelCompatible(valuetype Microsoft.ML.Core.Data.SchemaShape/Column labelCol) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.CheckLabelCompatible(Microsoft.ML.Core.Data.SchemaShape.Column)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CheckLabelCompatible (labelCol As SchemaShape.Column)" />
      <MemberSignature Language="F#" Value="override this.CheckLabelCompatible : Microsoft.ML.Core.Data.SchemaShape.Column -&gt; unit" Usage="averagedPerceptronTrainer.CheckLabelCompatible labelCol" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="labelCol" Type="Microsoft.ML.Core.Data.SchemaShape+Column" />
      </Parameters>
      <Docs>
        <param name="labelCol">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputColumnsCore">
      <MemberSignature Language="C#" Value="protected override Microsoft.ML.Core.Data.SchemaShape.Column[] GetOutputColumnsCore (Microsoft.ML.Core.Data.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype Microsoft.ML.Core.Data.SchemaShape/Column[] GetOutputColumnsCore(class Microsoft.ML.Core.Data.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.GetOutputColumnsCore(Microsoft.ML.Core.Data.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetOutputColumnsCore (inputSchema As SchemaShape) As SchemaShape.Column()" />
      <MemberSignature Language="F#" Value="override this.GetOutputColumnsCore : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape.Column[]" Usage="averagedPerceptronTrainer.GetOutputColumnsCore inputSchema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape+Column[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Core.Data.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadNameValue">
      <MemberSignature Language="C#" Value="public const string LoadNameValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string LoadNameValue" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.LoadNameValue" />
      <MemberSignature Language="VB.NET" Value="Public Const LoadNameValue As String " />
      <MemberSignature Language="F#" Value="val mutable LoadNameValue : string" Usage="Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.LoadNameValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeTransformer">
      <MemberSignature Language="C#" Value="protected override Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Learners.LinearBinaryModelParameters&gt; MakeTransformer (Microsoft.ML.Learners.LinearBinaryModelParameters model, Microsoft.Data.DataView.Schema trainSchema);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.ML.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Learners.LinearBinaryModelParameters&gt; MakeTransformer(class Microsoft.ML.Learners.LinearBinaryModelParameters model, class Microsoft.Data.DataView.Schema trainSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.MakeTransformer(Microsoft.ML.Learners.LinearBinaryModelParameters,Microsoft.Data.DataView.Schema)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MakeTransformer (model As LinearBinaryModelParameters, trainSchema As Schema) As BinaryPredictionTransformer(Of LinearBinaryModelParameters)" />
      <MemberSignature Language="F#" Value="override this.MakeTransformer : Microsoft.ML.Learners.LinearBinaryModelParameters * Microsoft.Data.DataView.Schema -&gt; Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Learners.LinearBinaryModelParameters&gt;" Usage="averagedPerceptronTrainer.MakeTransformer (model, trainSchema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Learners.LinearBinaryModelParameters&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.ML.Learners.LinearBinaryModelParameters" />
        <Parameter Name="trainSchema" Type="Microsoft.Data.DataView.Schema" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="trainSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NeedCalibration">
      <MemberSignature Language="C#" Value="protected override bool NeedCalibration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeedCalibration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.NeedCalibration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property NeedCalibration As Boolean" />
      <MemberSignature Language="F#" Value="member this.NeedCalibration : bool" Usage="Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.NeedCalibration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictionKind">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.PredictionKind PredictionKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.PredictionKind PredictionKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.PredictionKind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PredictionKind As PredictionKind" />
      <MemberSignature Language="F#" Value="member this.PredictionKind : Microsoft.ML.PredictionKind" Usage="Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.PredictionKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.PredictionKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Train">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Learners.LinearBinaryModelParameters&gt; Train (Microsoft.Data.DataView.IDataView trainData, Microsoft.ML.IPredictor initialPredictor = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Learners.LinearBinaryModelParameters&gt; Train(class Microsoft.Data.DataView.IDataView trainData, class Microsoft.ML.IPredictor initialPredictor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.Train(Microsoft.Data.DataView.IDataView,Microsoft.ML.IPredictor)" />
      <MemberSignature Language="VB.NET" Value="Public Function Train (trainData As IDataView, Optional initialPredictor As IPredictor = null) As BinaryPredictionTransformer(Of LinearBinaryModelParameters)" />
      <MemberSignature Language="F#" Value="member this.Train : Microsoft.Data.DataView.IDataView * Microsoft.ML.IPredictor -&gt; Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Learners.LinearBinaryModelParameters&gt;" Usage="averagedPerceptronTrainer.Train (trainData, initialPredictor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Learners.LinearBinaryModelParameters&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainData" Type="Microsoft.Data.DataView.IDataView" />
        <Parameter Name="initialPredictor" Type="Microsoft.ML.IPredictor" />
      </Parameters>
      <Docs>
        <param name="trainData">To be added.</param>
        <param name="initialPredictor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>