<Type Name="MetadataUtils" FullName="Microsoft.ML.Runtime.Data.MetadataUtils">
  <TypeSignature Language="C#" Value="public static class MetadataUtils" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MetadataUtils extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.MetadataUtils" />
  <TypeSignature Language="VB.NET" Value="Public Module MetadataUtils" />
  <TypeSignature Language="F#" Value="type MetadataUtils = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataUtils abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class MetadataUtils abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class MetadataUtils abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Utilities for implementing and using the metadata API of ISchema.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ExceptGetMetadata">
      <MemberSignature Language="C#" Value="public static Exception ExceptGetMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptGetMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.ExceptGetMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptGetMetadata () As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptGetMetadata : unit -&gt; Exception" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.ExceptGetMetadata " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Exception ^ ExceptGetMetadata();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a standard exception for responding to an invalid call to GetMetadata.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptGetMetadata">
      <MemberSignature Language="C#" Value="public static Exception ExceptGetMetadata (this Microsoft.ML.Runtime.IExceptionContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptGetMetadata(class Microsoft.ML.Runtime.IExceptionContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.ExceptGetMetadata(Microsoft.ML.Runtime.IExceptionContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptGetMetadata (ctx As IExceptionContext) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptGetMetadata : Microsoft.ML.Runtime.IExceptionContext -&gt; Exception" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.ExceptGetMetadata ctx" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Exception ^ ExceptGetMetadata(Microsoft::ML::Runtime::IExceptionContext ^ ctx);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>
            Returns a standard exception for responding to an invalid call to GetMetadata.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCategoricalType">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.VectorType GetCategoricalType (int rangeCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.VectorType GetCategoricalType(int32 rangeCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.GetCategoricalType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCategoricalType (rangeCount As Integer) As VectorType" />
      <MemberSignature Language="F#" Value="static member GetCategoricalType : int -&gt; Microsoft.ML.Runtime.Data.VectorType" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.GetCategoricalType rangeCount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::ML::Runtime::Data::VectorType ^ GetCategoricalType(int rangeCount);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Microsoft::ML::Runtime::Data::VectorType ^ GetCategoricalType(int rangeCount);" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::ML::Runtime::Data::VectorType GetCategoricalType(int rangeCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.VectorType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rangeCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rangeCount">To be added.</param>
        <summary>
            Returns a vector type with item type int and the given size. 
            The range count must be a positive integer.
            This is a standard type for metadata consisting of multiple int values that represent
            categorical slot ranges with in a column.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnSet">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;int&gt; GetColumnSet (this Microsoft.ML.Runtime.Data.ISchema schema, string metadataKind, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;int32&gt; GetColumnSet(class Microsoft.ML.Runtime.Data.ISchema schema, string metadataKind, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.GetColumnSet(Microsoft.ML.Runtime.Data.ISchema,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Iterator Function GetColumnSet (schema As ISchema, metadataKind As String, value As String) As IEnumerable(Of Integer)" />
      <MemberSignature Language="F#" Value="static member GetColumnSet : Microsoft.ML.Runtime.Data.ISchema * string * string -&gt; seq&lt;int&gt;" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.GetColumnSet (schema, metadataKind, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;int&gt; ^ GetColumnSet(Microsoft::ML::Runtime::Data::ISchema ^ schema, System::String ^ metadataKind, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.ML.Runtime.Data.MetadataUtils/&lt;GetColumnSet&gt;d__17))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.ISchema" RefType="this" />
        <Parameter Name="metadataKind" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="schema">To be added.</param>
        <param name="metadataKind">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Returns the set of column ids which match the value of specified metadata kind.
            The metadata type should be of type text.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnSet">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;int&gt; GetColumnSet (this Microsoft.ML.Runtime.Data.ISchema schema, string metadataKind, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;int32&gt; GetColumnSet(class Microsoft.ML.Runtime.Data.ISchema schema, string metadataKind, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.GetColumnSet(Microsoft.ML.Runtime.Data.ISchema,System.String,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Iterator Function GetColumnSet (schema As ISchema, metadataKind As String, value As UInteger) As IEnumerable(Of Integer)" />
      <MemberSignature Language="F#" Value="static member GetColumnSet : Microsoft.ML.Runtime.Data.ISchema * string * uint32 -&gt; seq&lt;int&gt;" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.GetColumnSet (schema, metadataKind, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;int&gt; ^ GetColumnSet(Microsoft::ML::Runtime::Data::ISchema ^ schema, System::String ^ metadataKind, System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.ML.Runtime.Data.MetadataUtils/&lt;GetColumnSet&gt;d__16))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.ISchema" RefType="this" />
        <Parameter Name="metadataKind" Type="System.String" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="schema">To be added.</param>
        <param name="metadataKind">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Returns the set of column ids which match the value of specified metadata kind.
            The metadata type should be a KeyType with raw type U4.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyNamesPair">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,Microsoft.ML.Runtime.Data.ColumnType&gt; GetKeyNamesPair (int size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class Microsoft.ML.Runtime.Data.ColumnType&gt; GetKeyNamesPair(int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.GetKeyNamesPair(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetKeyNamesPair (size As Integer) As KeyValuePair(Of String, ColumnType)" />
      <MemberSignature Language="F#" Value="static member GetKeyNamesPair : int -&gt; System.Collections.Generic.KeyValuePair&lt;string, Microsoft.ML.Runtime.Data.ColumnType&gt;" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.GetKeyNamesPair size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, Microsoft::ML::Runtime::Data::ColumnType ^&gt; GetKeyNamesPair(int size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,Microsoft.ML.Runtime.Data.ColumnType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <summary>
            Returns a key-value pair useful when implementing GetMetadataTypes(col). This assumes
            that the values of the key type are Text.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxMetadataKind">
      <MemberSignature Language="C#" Value="public static uint GetMaxMetadataKind (this Microsoft.ML.Runtime.Data.ISchema schema, out int colMax, string metadataKind, Func&lt;Microsoft.ML.Runtime.Data.ISchema,int,bool&gt; filterFunc = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 GetMaxMetadataKind(class Microsoft.ML.Runtime.Data.ISchema schema, [out] int32&amp; colMax, string metadataKind, class System.Func`3&lt;class Microsoft.ML.Runtime.Data.ISchema, int32, bool&gt; filterFunc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.GetMaxMetadataKind(Microsoft.ML.Runtime.Data.ISchema,System.Int32@,System.String,System.Func{Microsoft.ML.Runtime.Data.ISchema,System.Int32,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMaxMetadataKind (schema As ISchema, ByRef colMax As Integer, metadataKind As String, Optional filterFunc As Func(Of ISchema, Integer, Boolean) = null) As UInteger" />
      <MemberSignature Language="F#" Value="static member GetMaxMetadataKind : Microsoft.ML.Runtime.Data.ISchema *  * string * Func&lt;Microsoft.ML.Runtime.Data.ISchema, int, bool&gt; -&gt; uint32" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.GetMaxMetadataKind (schema, colMax, metadataKind, filterFunc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.ISchema" RefType="this" />
        <Parameter Name="colMax" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="metadataKind" Type="System.String" />
        <Parameter Name="filterFunc" Type="System.Func&lt;Microsoft.ML.Runtime.Data.ISchema,System.Int32,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="schema">To be added.</param>
        <param name="colMax">To be added.</param>
        <param name="metadataKind">To be added.</param>
        <param name="filterFunc">To be added.</param>
        <summary>
            Returns the max value for the specified metadata kind.
            The metadata type should be a KeyType with raw type U4.
            colMax will be set to the first column that has the max value for the specified metadata.
            If no column has the specified metadata, colMax is set to -1 and the method returns zero.
            The filter function is called for each column, passing in the schema and the column index, and returns
            true if the column should be considered, false if the column should be skipped.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamesType">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.VectorType GetNamesType (int size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.VectorType GetNamesType(int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.GetNamesType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNamesType (size As Integer) As VectorType" />
      <MemberSignature Language="F#" Value="static member GetNamesType : int -&gt; Microsoft.ML.Runtime.Data.VectorType" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.GetNamesType size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::ML::Runtime::Data::VectorType ^ GetNamesType(int size);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Microsoft::ML::Runtime::Data::VectorType ^ GetNamesType(int size);" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::ML::Runtime::Data::VectorType GetNamesType(int size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.VectorType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <summary>
            Returns a vector type with item type text and the given size. The size must be positive.
            This is a standard type for metadata consisting of multiple text values, eg SlotNames.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPair">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,Microsoft.ML.Runtime.Data.ColumnType&gt; GetPair (this Microsoft.ML.Runtime.Data.ColumnType type, string kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class Microsoft.ML.Runtime.Data.ColumnType&gt; GetPair(class Microsoft.ML.Runtime.Data.ColumnType type, string kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.GetPair(Microsoft.ML.Runtime.Data.ColumnType,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPair (type As ColumnType, kind As String) As KeyValuePair(Of String, ColumnType)" />
      <MemberSignature Language="F#" Value="static member GetPair : Microsoft.ML.Runtime.Data.ColumnType * string -&gt; System.Collections.Generic.KeyValuePair&lt;string, Microsoft.ML.Runtime.Data.ColumnType&gt;" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.GetPair (type, kind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, Microsoft::ML::Runtime::Data::ColumnType ^&gt; GetPair(Microsoft::ML::Runtime::Data::ColumnType ^ type, System::String ^ kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,Microsoft.ML.Runtime.Data.ColumnType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.ML.Runtime.Data.ColumnType" RefType="this" />
        <Parameter Name="kind" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="kind">To be added.</param>
        <summary>
            Given a type and metadata kind string, returns a key-value pair. This is useful when
            implementing GetMetadataTypes(col).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSlotNames">
      <MemberSignature Language="C#" Value="public static void GetSlotNames (Microsoft.ML.Runtime.Data.RoleMappedSchema schema, Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole role, int vectorSize, ref Microsoft.ML.Runtime.Data.VBuffer&lt;Microsoft.ML.Runtime.Data.DvText&gt; slotNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetSlotNames(class Microsoft.ML.Runtime.Data.RoleMappedSchema schema, valuetype Microsoft.ML.Runtime.Data.RoleMappedSchema/ColumnRole role, int32 vectorSize, valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;valuetype Microsoft.ML.Runtime.Data.DvText&gt;&amp; slotNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.GetSlotNames(Microsoft.ML.Runtime.Data.RoleMappedSchema,Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,System.Int32,Microsoft.ML.Runtime.Data.VBuffer{Microsoft.ML.Runtime.Data.DvText}@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetSlotNames (schema As RoleMappedSchema, role As RoleMappedSchema.ColumnRole, vectorSize As Integer, ByRef slotNames As VBuffer(Of DvText))" />
      <MemberSignature Language="F#" Value="static member GetSlotNames : Microsoft.ML.Runtime.Data.RoleMappedSchema * Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole * int *  -&gt; unit" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.GetSlotNames (schema, role, vectorSize, slotNames)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GetSlotNames(Microsoft::ML::Runtime::Data::RoleMappedSchema ^ schema, Microsoft::ML::Runtime::Data::RoleMappedSchema::ColumnRole role, int vectorSize, Microsoft::ML::Runtime::Data::VBuffer&lt;Microsoft::ML::Runtime::Data::DvText&gt; % slotNames);" />
      <MemberSignature Language="C++ WINRT" Value=" static void GetSlotNames(Microsoft::ML::Runtime::Data::RoleMappedSchema const &amp; schema, Microsoft::ML::Runtime::Data::RoleMappedSchema::ColumnRole role, int vectorSize, Microsoft::ML::Runtime::Data::VBuffer&lt;Microsoft::ML::Runtime::Data::DvText&gt; &amp; slotNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.RoleMappedSchema" />
        <Parameter Name="role" Type="Microsoft.ML.Runtime.Data.RoleMappedSchema+ColumnRole" />
        <Parameter Name="vectorSize" Type="System.Int32" />
        <Parameter Name="slotNames" Type="Microsoft.ML.Runtime.Data.VBuffer&lt;Microsoft.ML.Runtime.Data.DvText&gt;&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="schema">To be added.</param>
        <param name="role">To be added.</param>
        <param name="vectorSize">To be added.</param>
        <param name="slotNames">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSlotNamesPair">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,Microsoft.ML.Runtime.Data.ColumnType&gt; GetSlotNamesPair (int size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class Microsoft.ML.Runtime.Data.ColumnType&gt; GetSlotNamesPair(int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.GetSlotNamesPair(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSlotNamesPair (size As Integer) As KeyValuePair(Of String, ColumnType)" />
      <MemberSignature Language="F#" Value="static member GetSlotNamesPair : int -&gt; System.Collections.Generic.KeyValuePair&lt;string, Microsoft.ML.Runtime.Data.ColumnType&gt;" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.GetSlotNamesPair size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, Microsoft::ML::Runtime::Data::ColumnType ^&gt; GetSlotNamesPair(int size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,Microsoft.ML.Runtime.Data.ColumnType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <summary>
            Returns a key-value pair useful when implementing GetMetadataTypes(col).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKeyNames">
      <MemberSignature Language="C#" Value="public static bool HasKeyNames (this Microsoft.ML.Runtime.Data.ISchema schema, int col, int keyCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasKeyNames(class Microsoft.ML.Runtime.Data.ISchema schema, int32 col, int32 keyCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.HasKeyNames(Microsoft.ML.Runtime.Data.ISchema,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasKeyNames (schema As ISchema, col As Integer, keyCount As Integer) As Boolean" />
      <MemberSignature Language="F#" Value="static member HasKeyNames : Microsoft.ML.Runtime.Data.ISchema * int * int -&gt; bool" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.HasKeyNames (schema, col, keyCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool HasKeyNames(Microsoft::ML::Runtime::Data::ISchema ^ schema, int col, int keyCount);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool HasKeyNames(Microsoft::ML::Runtime::Data::ISchema ^ schema, int col, int keyCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.ISchema" RefType="this" />
        <Parameter Name="col" Type="System.Int32" />
        <Parameter Name="keyCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="schema">To be added.</param>
        <param name="col">To be added.</param>
        <param name="keyCount">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSlotNames">
      <MemberSignature Language="C#" Value="public static bool HasSlotNames (this Microsoft.ML.Runtime.Data.ISchema schema, int col, int vectorSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasSlotNames(class Microsoft.ML.Runtime.Data.ISchema schema, int32 col, int32 vectorSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.HasSlotNames(Microsoft.ML.Runtime.Data.ISchema,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasSlotNames (schema As ISchema, col As Integer, vectorSize As Integer) As Boolean" />
      <MemberSignature Language="F#" Value="static member HasSlotNames : Microsoft.ML.Runtime.Data.ISchema * int * int -&gt; bool" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.HasSlotNames (schema, col, vectorSize)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool HasSlotNames(Microsoft::ML::Runtime::Data::ISchema ^ schema, int col, int vectorSize);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool HasSlotNames(Microsoft::ML::Runtime::Data::ISchema ^ schema, int col, int vectorSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.ISchema" RefType="this" />
        <Parameter Name="col" Type="System.Int32" />
        <Parameter Name="vectorSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="schema">To be added.</param>
        <param name="col">To be added.</param>
        <param name="vectorSize">To be added.</param>
        <summary>
            Returns <c>true</c> if the specified column:
             * is a vector of length N (including 0)
             * has a SlotNames metadata
             * metadata type is VBuffer&lt;DvText&gt; of length N
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHidden">
      <MemberSignature Language="C#" Value="public static bool IsHidden (this Microsoft.ML.Runtime.Data.ISchema schema, int col);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHidden(class Microsoft.ML.Runtime.Data.ISchema schema, int32 col) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.IsHidden(Microsoft.ML.Runtime.Data.ISchema,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsHidden (schema As ISchema, col As Integer) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsHidden : Microsoft.ML.Runtime.Data.ISchema * int -&gt; bool" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.IsHidden (schema, col)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsHidden(Microsoft::ML::Runtime::Data::ISchema ^ schema, int col);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsHidden(Microsoft::ML::Runtime::Data::ISchema ^ schema, int col);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.ISchema" RefType="this" />
        <Parameter Name="col" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="schema">To be added.</param>
        <param name="col">To be added.</param>
        <summary>
            Return whether the given column index is hidden in the given schema.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Marshal&lt;THave,TNeed&gt;">
      <MemberSignature Language="C#" Value="public static void Marshal&lt;THave,TNeed&gt; (this Microsoft.ML.Runtime.Data.MetadataUtils.MetadataGetter&lt;THave&gt; getter, int col, ref TNeed dst);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Marshal&lt;THave, TNeed&gt;(class Microsoft.ML.Runtime.Data.MetadataUtils/MetadataGetter`1&lt;!!THave&gt; getter, int32 col, !!TNeed&amp; dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.Marshal``2(Microsoft.ML.Runtime.Data.MetadataUtils.MetadataGetter{``0},System.Int32,``1@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Marshal(Of THave, TNeed) (getter As MetadataUtils.MetadataGetter(Of THave), col As Integer, ByRef dst As TNeed)" />
      <MemberSignature Language="F#" Value="static member Marshal : Microsoft.ML.Runtime.Data.MetadataUtils.MetadataGetter&lt;'Have&gt; * int *  -&gt; unit" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.Marshal (getter, col, dst)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename THave, typename TNeed&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Marshal(Microsoft::ML::Runtime::Data::MetadataUtils::MetadataGetter&lt;THave&gt; ^ getter, int col, TNeed % dst);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename THave, typename TNeed&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Marshal(Microsoft::ML::Runtime::Data::MetadataUtils::MetadataGetter&lt;THave&gt; ^ getter, int col, TNeed &amp;  dst);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="THave" />
        <TypeParameter Name="TNeed" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="getter" Type="Microsoft.ML.Runtime.Data.MetadataUtils+MetadataGetter&lt;THave&gt;" RefType="this" />
        <Parameter Name="col" Type="System.Int32" />
        <Parameter Name="dst" Type="TNeed&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="THave">To be added.</typeparam>
        <typeparam name="TNeed">To be added.</typeparam>
        <param name="getter">To be added.</param>
        <param name="col">To be added.</param>
        <param name="dst">To be added.</param>
        <summary>
            Helper to marshal a call to GetMetadata{TValue} to a specific type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepend&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; Prepend&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; tail, params T[] head);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; Prepend&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; tail, !!T[] head) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Prepend(Of T) (tail As IEnumerable(Of T), ParamArray head As T()) As IEnumerable(Of T)" />
      <MemberSignature Language="F#" Value="static member Prepend : seq&lt;'T&gt; * 'T[] -&gt; seq&lt;'T&gt;" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.Prepend (tail, head)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ Prepend(System::Collections::Generic::IEnumerable&lt;T&gt; ^ tail, ... cli::array &lt;T&gt; ^ head);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tail" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="head" Type="T[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="tail">To be added.</param>
        <param name="head">To be added.</param>
        <summary>
            Prepends a params array to an enumerable. Useful when implementing GetMetadataTypes.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScoreColumnSetIdType">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.ColumnType ScoreColumnSetIdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.ML.Runtime.Data.ColumnType ScoreColumnSetIdType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.MetadataUtils.ScoreColumnSetIdType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScoreColumnSetIdType As ColumnType" />
      <MemberSignature Language="F#" Value="member this.ScoreColumnSetIdType : Microsoft.ML.Runtime.Data.ColumnType" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.ScoreColumnSetIdType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::ML::Runtime::Data::ColumnType ^ ScoreColumnSetIdType { Microsoft::ML::Runtime::Data::ColumnType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ColumnType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The type of the ScoreColumnSetId metadata.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetCategoricalFeatureIndices">
      <MemberSignature Language="C#" Value="public static bool TryGetCategoricalFeatureIndices (Microsoft.ML.Runtime.Data.ISchema schema, int colIndex, out int[] categoricalFeatures);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetCategoricalFeatureIndices(class Microsoft.ML.Runtime.Data.ISchema schema, int32 colIndex, [out] int32[]&amp; categoricalFeatures) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.TryGetCategoricalFeatureIndices(Microsoft.ML.Runtime.Data.ISchema,System.Int32,System.Int32[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetCategoricalFeatureIndices (schema As ISchema, colIndex As Integer, ByRef categoricalFeatures As Integer()) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryGetCategoricalFeatureIndices : Microsoft.ML.Runtime.Data.ISchema * int *  -&gt; bool" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.TryGetCategoricalFeatureIndices (schema, colIndex, categoricalFeatures)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetCategoricalFeatureIndices(Microsoft::ML::Runtime::Data::ISchema ^ schema, int colIndex, [Runtime::InteropServices::Out] cli::array &lt;int&gt; ^ % categoricalFeatures);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool TryGetCategoricalFeatureIndices(Microsoft::ML::Runtime::Data::ISchema const &amp; schema, int colIndex, [Runtime::InteropServices::Out] std::Array &lt;int&gt; const &amp; &amp; categoricalFeatures);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.ISchema" />
        <Parameter Name="colIndex" Type="System.Int32" />
        <Parameter Name="categoricalFeatures" Type="System.Int32[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="schema">To be added.</param>
        <param name="colIndex">To be added.</param>
        <param name="categoricalFeatures">To be added.</param>
        <summary>
            The categoricalFeatures is a vector of the indices of categorical features slots. 
            This vector should always have an even number of elements, and the elements should be parsed in groups of two consecutive numbers.
            So if its value is the range of numbers: 0,2,3,4,8,9
            look at it as [0,2],[3,4],[8,9].
            The way to interpret that is: feature with indices 0, 1, and 2 are one categorical
            Features with indices 3 and 4 are another categorical. Features 5 and 6 don't appear there, so they are not categoricals. 
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetMetadata&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TryGetMetadata&lt;T&gt; (this Microsoft.ML.Runtime.Data.ISchema schema, Microsoft.ML.Runtime.Data.PrimitiveType type, string kind, int col, ref T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetMetadata&lt;T&gt;(class Microsoft.ML.Runtime.Data.ISchema schema, class Microsoft.ML.Runtime.Data.PrimitiveType type, string kind, int32 col, !!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MetadataUtils.TryGetMetadata``1(Microsoft.ML.Runtime.Data.ISchema,Microsoft.ML.Runtime.Data.PrimitiveType,System.String,System.Int32,``0@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryGetMetadata(Of T) (schema As ISchema, type As PrimitiveType, kind As String, col As Integer, ByRef value As T) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryGetMetadata : Microsoft.ML.Runtime.Data.ISchema * Microsoft.ML.Runtime.Data.PrimitiveType * string * int *  -&gt; bool" Usage="Microsoft.ML.Runtime.Data.MetadataUtils.TryGetMetadata (schema, type, kind, col, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryGetMetadata(Microsoft::ML::Runtime::Data::ISchema ^ schema, Microsoft::ML::Runtime::Data::PrimitiveType ^ type, System::String ^ kind, int col, T % value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryGetMetadata(Microsoft::ML::Runtime::Data::ISchema ^ schema, Microsoft::ML::Runtime::Data::PrimitiveType ^ type, Platform::String ^ kind, int col, T &amp;  value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.ISchema" RefType="this" />
        <Parameter Name="type" Type="Microsoft.ML.Runtime.Data.PrimitiveType" />
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="col" Type="System.Int32" />
        <Parameter Name="value" Type="T&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T">The raw type of the metadata, should match the PrimitiveType type</typeparam>
        <param name="schema">The schema</param>
        <param name="type">The type of the metadata</param>
        <param name="kind">The metadata kind</param>
        <param name="col">The column</param>
        <param name="value">The value to return, if successful</param>
        <summary>
            Tries to get the metadata kind of the specified type for a column.
            </summary>
        <returns>True if the metadata of the right type exists, false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>