<Type Name="NgramHashExtractorTransform+NgramHashExtractorArguments" FullName="Microsoft.ML.Runtime.Data.NgramHashExtractorTransform+NgramHashExtractorArguments">
  <TypeSignature Language="C#" Value="public sealed class NgramHashExtractorTransform.NgramHashExtractorArguments : Microsoft.ML.Runtime.Data.NgramHashExtractorTransform.ArgumentsBase, Microsoft.ML.Runtime.Data.INgramExtractorFactoryFactory, Microsoft.ML.Runtime.EntryPoints.IComponentFactory&lt;Microsoft.ML.Runtime.Data.TermLoaderArguments,Microsoft.ML.Runtime.Data.INgramExtractorFactory&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit NgramHashExtractorTransform/NgramHashExtractorArguments extends Microsoft.ML.Runtime.Data.NgramHashExtractorTransform/ArgumentsBase implements class Microsoft.ML.Runtime.Data.INgramExtractorFactoryFactory, class Microsoft.ML.Runtime.EntryPoints.IComponentFactory, class Microsoft.ML.Runtime.EntryPoints.IComponentFactory`2&lt;class Microsoft.ML.Runtime.Data.TermLoaderArguments, class Microsoft.ML.Runtime.Data.INgramExtractorFactory&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.NgramHashExtractorTransform.NgramHashExtractorArguments" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NgramHashExtractorTransform.NgramHashExtractorArguments&#xA;Inherits NgramHashExtractorTransform.ArgumentsBase&#xA;Implements IComponentFactory(Of TermLoaderArguments, INgramExtractorFactory), INgramExtractorFactoryFactory" />
  <TypeSignature Language="F#" Value="type NgramHashExtractorTransform.NgramHashExtractorArguments = class&#xA;    inherit NgramHashExtractorTransform.ArgumentsBase&#xA;    interface INgramExtractorFactoryFactory&#xA;    interface IComponentFactory&lt;TermLoaderArguments, INgramExtractorFactory&gt;&#xA;    interface IComponentFactory" />
  <TypeSignature Language="C++ CLI" Value="public: ref class NgramHashExtractorTransform::NgramHashExtractorArguments sealed : Microsoft::ML::Runtime::Data::NgramHashExtractorTransform::ArgumentsBase, Microsoft::ML::Runtime::Data::INgramExtractorFactoryFactory, Microsoft::ML::Runtime::EntryPoints::IComponentFactory&lt;Microsoft::ML::Runtime::Data::TermLoaderArguments ^, Microsoft::ML::Runtime::Data::INgramExtractorFactory ^&gt;" />
  <TypeSignature Language="C++ WINRT" Value="class NgramHashExtractorTransform::NgramHashExtractorArguments sealed : Microsoft::ML::Runtime::Data::NgramHashExtractorTransform::ArgumentsBase, Microsoft::ML::Runtime::Data::INgramExtractorFactoryFactory, Microsoft::ML::Runtime::EntryPoints::IComponentFactory&lt;Microsoft::ML::Runtime::Data::TermLoaderArguments, Microsoft::ML::Runtime::Data::INgramExtractorFactory const &amp;&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.Data.NgramHashExtractorTransform+ArgumentsBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Data.INgramExtractorFactoryFactory</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.EntryPoints.IComponentFactory&lt;Microsoft.ML.Runtime.Data.TermLoaderArguments,Microsoft.ML.Runtime.Data.INgramExtractorFactory&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/Component(Alias="NGramHashExtractorTransform,NGramHashExtractor", Desc="Extracts NGrams from text and convert them to vector using hashing trick.", FriendlyName="NGram Hash Extractor Transform", Name="NGramHash")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NgramHashExtractorArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.NgramHashExtractorTransform.NgramHashExtractorArguments.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NgramHashExtractorArguments();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; NgramHashExtractorArguments();" />
      <MemberSignature Language="C++ WINRT" Value=" NgramHashExtractorArguments();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.INgramExtractorFactory CreateComponent (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.TermLoaderArguments loaderArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.Data.INgramExtractorFactory CreateComponent(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.TermLoaderArguments loaderArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.NgramHashExtractorTransform.NgramHashExtractorArguments.CreateComponent(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.TermLoaderArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateComponent (env As IHostEnvironment, loaderArgs As TermLoaderArguments) As INgramExtractorFactory" />
      <MemberSignature Language="F#" Value="abstract member CreateComponent : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.TermLoaderArguments -&gt; Microsoft.ML.Runtime.Data.INgramExtractorFactory&#xA;override this.CreateComponent : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.TermLoaderArguments -&gt; Microsoft.ML.Runtime.Data.INgramExtractorFactory" Usage="ngramHashExtractorArguments.CreateComponent (env, loaderArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::ML::Runtime::Data::INgramExtractorFactory ^ CreateComponent(Microsoft::ML::Runtime::IHostEnvironment ^ env, Microsoft::ML::Runtime::Data::TermLoaderArguments ^ loaderArgs);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::ML::Runtime::Data::INgramExtractorFactory ^ CreateComponent(Microsoft::ML::Runtime::IHostEnvironment ^ env, Microsoft::ML::Runtime::Data::TermLoaderArguments ^ loaderArgs);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::ML::Runtime::Data::INgramExtractorFactory CreateComponent(Microsoft::ML::Runtime::IHostEnvironment const &amp; env, Microsoft::ML::Runtime::Data::TermLoaderArguments const &amp; loaderArgs);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.EntryPoints.IComponentFactory`2.CreateComponent(Microsoft.ML.Runtime.IHostEnvironment,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.INgramExtractorFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="loaderArgs" Type="Microsoft.ML.Runtime.Data.TermLoaderArguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="loaderArgs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>