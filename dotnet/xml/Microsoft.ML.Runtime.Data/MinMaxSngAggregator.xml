<Type Name="MinMaxSngAggregator" FullName="Microsoft.ML.Runtime.Data.MinMaxSngAggregator">
  <TypeSignature Language="C#" Value="public sealed class MinMaxSngAggregator : Microsoft.ML.Runtime.Data.IColumnAggregator&lt;Microsoft.ML.Runtime.Data.VBuffer&lt;float&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MinMaxSngAggregator extends System.Object implements class Microsoft.ML.Runtime.Data.IColumnAggregator`1&lt;valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;float32&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.MinMaxSngAggregator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MinMaxSngAggregator&#xA;Implements IColumnAggregator(Of VBuffer(Of Single))" />
  <TypeSignature Language="F#" Value="type MinMaxSngAggregator = class&#xA;    interface IColumnAggregator&lt;VBuffer&lt;single&gt;&gt;" />
  <TypeSignature Language="C++ CLI" Value="public ref class MinMaxSngAggregator sealed : Microsoft::ML::Runtime::Data::IColumnAggregator&lt;Microsoft::ML::Runtime::Data::VBuffer&lt;float&gt;&gt;" />
  <TypeSignature Language="C++ CX" Value="public ref class MinMaxSngAggregator sealed : Microsoft::ML::Runtime::Data::IColumnAggregator&lt;Microsoft::ML::Runtime::Data::VBuffer&lt;float&gt;&gt;" />
  <TypeSignature Language="C++ WINRT" Value="class MinMaxSngAggregator sealed : Microsoft::ML::Runtime::Data::IColumnAggregator&lt;Microsoft::ML::Runtime::Data::VBuffer&lt;float&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Data.IColumnAggregator&lt;Microsoft.ML.Runtime.Data.VBuffer&lt;System.Single&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Base class for tracking min and max values for a vector valued column.
            It tracks min, max, number of non-sparse values (vCount) and number of ProcessValue() calls (trainCount).
            NaNs are ignored when updating min and max.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MinMaxSngAggregator (int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MinMaxSngAggregator.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (size As Integer)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.MinMaxSngAggregator : int -&gt; Microsoft.ML.Runtime.Data.MinMaxSngAggregator" Usage="new Microsoft.ML.Runtime.Data.MinMaxSngAggregator size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MinMaxSngAggregator(int size);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; MinMaxSngAggregator(int size);" />
      <MemberSignature Language="C++ WINRT" Value=" MinMaxSngAggregator(int size);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public long[] Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64[] Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.MinMaxSngAggregator.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Long()" />
      <MemberSignature Language="F#" Value="member this.Count : int64[]" Usage="Microsoft.ML.Runtime.Data.MinMaxSngAggregator.Count" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;long&gt; ^ Count { cli::array &lt;long&gt; ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::Array &lt;long long&gt; ^ Count { Platform::Array &lt;long long&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finish">
      <MemberSignature Language="C#" Value="public void Finish ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Finish() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MinMaxSngAggregator.Finish" />
      <MemberSignature Language="VB.NET" Value="Public Sub Finish ()" />
      <MemberSignature Language="F#" Value="abstract member Finish : unit -&gt; unit&#xA;override this.Finish : unit -&gt; unit" Usage="minMaxSngAggregator.Finish " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Finish();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Finish();" />
      <MemberSignature Language="C++ WINRT" Value="void Finish();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.Data.IColumnAggregator`1.Finish</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public float[] Max { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] Max" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.MinMaxSngAggregator.Max" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Max As Single()" />
      <MemberSignature Language="F#" Value="member this.Max : single[]" Usage="Microsoft.ML.Runtime.Data.MinMaxSngAggregator.Max" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ Max { cli::array &lt;float&gt; ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::Array &lt;float&gt; ^ Max { Platform::Array &lt;float&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public float[] Min { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] Min" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.MinMaxSngAggregator.Min" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Min As Single()" />
      <MemberSignature Language="F#" Value="member this.Min : single[]" Usage="Microsoft.ML.Runtime.Data.MinMaxSngAggregator.Min" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ Min { cli::array &lt;float&gt; ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::Array &lt;float&gt; ^ Min { Platform::Array &lt;float&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessValue">
      <MemberSignature Language="C#" Value="public void ProcessValue (ref Microsoft.ML.Runtime.Data.VBuffer&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessValue(valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;float32&gt;&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.MinMaxSngAggregator.ProcessValue(Microsoft.ML.Runtime.Data.VBuffer{System.Single}@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessValue (ByRef value As VBuffer(Of Single))" />
      <MemberSignature Language="F#" Value="abstract member ProcessValue :  -&gt; unit&#xA;override this.ProcessValue :  -&gt; unit" Usage="minMaxSngAggregator.ProcessValue value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessValue(Microsoft::ML::Runtime::Data::VBuffer&lt;float&gt; % value);" />
      <MemberSignature Language="C++ WINRT" Value="void ProcessValue(Microsoft::ML::Runtime::Data::VBuffer&lt;float&gt; &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Microsoft.ML.Runtime.Data.VBuffer&lt;System.Single&gt;&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>