<Type Name="NgramExtractorTransform" FullName="Microsoft.ML.Runtime.Data.NgramExtractorTransform">
  <TypeSignature Language="C#" Value="public static class NgramExtractorTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NgramExtractorTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.NgramExtractorTransform" />
  <TypeSignature Language="VB.NET" Value="Public Class NgramExtractorTransform" />
  <TypeSignature Language="F#" Value="type NgramExtractorTransform = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class NgramExtractorTransform abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class NgramExtractorTransform abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class NgramExtractorTransform abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A transform that turns a collection of tokenized text (vector of DvText), or vectors of keys into numerical 
            feature vectors. The feature vectors are counts of ngrams (sequences of consecutive *tokens* -words or keys-
            of length 1-n).
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.INgramExtractorFactory Create (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.NgramExtractorTransform.NgramExtractorArguments extractorArgs, Microsoft.ML.Runtime.Data.TermLoaderArguments termLoaderArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.INgramExtractorFactory Create(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.NgramExtractorTransform/NgramExtractorArguments extractorArgs, class Microsoft.ML.Runtime.Data.TermLoaderArguments termLoaderArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.NgramExtractorTransform.Create(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.NgramExtractorTransform.NgramExtractorArguments,Microsoft.ML.Runtime.Data.TermLoaderArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (env As IHostEnvironment, extractorArgs As NgramExtractorTransform.NgramExtractorArguments, termLoaderArgs As TermLoaderArguments) As INgramExtractorFactory" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.NgramExtractorTransform.NgramExtractorArguments * Microsoft.ML.Runtime.Data.TermLoaderArguments -&gt; Microsoft.ML.Runtime.Data.INgramExtractorFactory" Usage="Microsoft.ML.Runtime.Data.NgramExtractorTransform.Create (env, extractorArgs, termLoaderArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::ML::Runtime::Data::INgramExtractorFactory ^ Create(Microsoft::ML::Runtime::IHostEnvironment ^ env, Microsoft::ML::Runtime::Data::NgramExtractorTransform::NgramExtractorArguments ^ extractorArgs, Microsoft::ML::Runtime::Data::TermLoaderArguments ^ termLoaderArgs);" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::ML::Runtime::Data::INgramExtractorFactory Create(Microsoft::ML::Runtime::IHostEnvironment const &amp; env, Microsoft::ML::Runtime::Data::NgramExtractorTransform::NgramExtractorArguments const &amp; extractorArgs, Microsoft::ML::Runtime::Data::TermLoaderArguments const &amp; termLoaderArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.INgramExtractorFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="extractorArgs" Type="Microsoft.ML.Runtime.Data.NgramExtractorTransform+NgramExtractorArguments" />
        <Parameter Name="termLoaderArgs" Type="Microsoft.ML.Runtime.Data.TermLoaderArguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="extractorArgs">To be added.</param>
        <param name="termLoaderArgs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataTransform Create (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.NgramExtractorTransform.Arguments args, Microsoft.ML.Runtime.Data.IDataView input, Microsoft.ML.Runtime.Data.TermLoaderArguments termLoaderArgs = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataTransform Create(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.NgramExtractorTransform/Arguments args, class Microsoft.ML.Runtime.Data.IDataView input, class Microsoft.ML.Runtime.Data.TermLoaderArguments termLoaderArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.NgramExtractorTransform.Create(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.NgramExtractorTransform.Arguments,Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.Data.TermLoaderArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (env As IHostEnvironment, args As NgramExtractorTransform.Arguments, input As IDataView, Optional termLoaderArgs As TermLoaderArguments = null) As IDataTransform" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.NgramExtractorTransform.Arguments * Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.Data.TermLoaderArguments -&gt; Microsoft.ML.Runtime.Data.IDataTransform" Usage="Microsoft.ML.Runtime.Data.NgramExtractorTransform.Create (env, args, input, termLoaderArgs)" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::ML::Runtime::Data::IDataTransform Create(Microsoft::ML::Runtime::IHostEnvironment const &amp; env, Microsoft::ML::Runtime::Data::NgramExtractorTransform::Arguments const &amp; args, Microsoft::ML::Runtime::Data::IDataView const &amp; input, Microsoft::ML::Runtime::Data::TermLoaderArguments const &amp; termLoaderArgs = null);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="args" Type="Microsoft.ML.Runtime.Data.NgramExtractorTransform+Arguments" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="termLoaderArgs" Type="Microsoft.ML.Runtime.Data.TermLoaderArguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <param name="input">To be added.</param>
        <param name="termLoaderArgs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataTransform Create (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.NgramExtractorTransform.NgramExtractorArguments extractorArgs, Microsoft.ML.Runtime.Data.IDataView input, Microsoft.ML.Runtime.Data.ExtractorColumn[] cols, Microsoft.ML.Runtime.Data.TermLoaderArguments termLoaderArgs = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataTransform Create(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.NgramExtractorTransform/NgramExtractorArguments extractorArgs, class Microsoft.ML.Runtime.Data.IDataView input, class Microsoft.ML.Runtime.Data.ExtractorColumn[] cols, class Microsoft.ML.Runtime.Data.TermLoaderArguments termLoaderArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.NgramExtractorTransform.Create(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.NgramExtractorTransform.NgramExtractorArguments,Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.Data.ExtractorColumn[],Microsoft.ML.Runtime.Data.TermLoaderArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (env As IHostEnvironment, extractorArgs As NgramExtractorTransform.NgramExtractorArguments, input As IDataView, cols As ExtractorColumn(), Optional termLoaderArgs As TermLoaderArguments = null) As IDataTransform" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.NgramExtractorTransform.NgramExtractorArguments * Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.Data.ExtractorColumn[] * Microsoft.ML.Runtime.Data.TermLoaderArguments -&gt; Microsoft.ML.Runtime.Data.IDataTransform" Usage="Microsoft.ML.Runtime.Data.NgramExtractorTransform.Create (env, extractorArgs, input, cols, termLoaderArgs)" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::ML::Runtime::Data::IDataTransform Create(Microsoft::ML::Runtime::IHostEnvironment const &amp; env, Microsoft::ML::Runtime::Data::NgramExtractorTransform::NgramExtractorArguments const &amp; extractorArgs, Microsoft::ML::Runtime::Data::IDataView const &amp; input, std::Array &lt;Microsoft::ML::Runtime::Data::ExtractorColumn const &amp;&gt; const &amp; cols, Microsoft::ML::Runtime::Data::TermLoaderArguments const &amp; termLoaderArgs = null);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="extractorArgs" Type="Microsoft.ML.Runtime.Data.NgramExtractorTransform+NgramExtractorArguments" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="cols" Type="Microsoft.ML.Runtime.Data.ExtractorColumn[]" />
        <Parameter Name="termLoaderArgs" Type="Microsoft.ML.Runtime.Data.TermLoaderArguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="extractorArgs">To be added.</param>
        <param name="input">To be added.</param>
        <param name="cols">To be added.</param>
        <param name="termLoaderArgs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>