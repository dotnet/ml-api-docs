<Type Name="RoleMappedData" FullName="Microsoft.ML.Runtime.Data.RoleMappedData">
  <TypeSignature Language="C#" Value="public sealed class RoleMappedData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RoleMappedData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.RoleMappedData" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RoleMappedData" />
  <TypeSignature Language="F#" Value="type RoleMappedData = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Encapsulates an <see cref="T:Microsoft.ML.Runtime.Data.IDataView" /> plus a corresponding <see cref="T:Microsoft.ML.Runtime.Data.RoleMappedSchema" />.
            Note that the schema of <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.Schema" /> of <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedData.Schema" /> is
            guaranteed to equal the the <see cref="P:Microsoft.ML.Runtime.Data.ISchematized.Schema" /> of <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedData.Data" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleMappedData (Microsoft.ML.Runtime.Data.IDataView data, bool opt = false, params System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,string&gt;[] roles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.Data.IDataView data, bool opt, valuetype System.Collections.Generic.KeyValuePair`2&lt;valuetype Microsoft.ML.Runtime.Data.RoleMappedSchema/ColumnRole, string&gt;[] roles) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RoleMappedData.#ctor(Microsoft.ML.Runtime.Data.IDataView,System.Boolean,System.Collections.Generic.KeyValuePair{Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,System.String}[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As IDataView, Optional opt As Boolean = false, ParamArray roles As KeyValuePair(Of RoleMappedSchema.ColumnRole, String)())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.RoleMappedData : Microsoft.ML.Runtime.Data.IDataView * bool * System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole, string&gt;[] -&gt; Microsoft.ML.Runtime.Data.RoleMappedData" Usage="new Microsoft.ML.Runtime.Data.RoleMappedData (data, opt, roles)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="opt" Type="System.Boolean" />
        <Parameter Name="roles" Type="System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema+ColumnRole,System.String&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">The data over which roles are defined</param>
        <param name="opt">Whether to consider the column names specified "optional" or not. If <c>false</c> then any non-empty
            values for the column names that does not appear in <paramref name="data" />'s schema will result in an exception being thrown,
            but if <c>true</c> such values will be ignored</param>
        <param name="roles">The column role to column name mappings</param>
        <summary>
            Constructor given a data view, and mapping pairs of roles to columns in the data view's schema.
            This skips null or empty column-names. It will also skip column-names that are not
            found in the schema if <paramref name="opt" /> is true.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleMappedData (Microsoft.ML.Runtime.Data.IDataView data, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,string&gt;&gt; roles, bool opt = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.Data.IDataView data, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;valuetype Microsoft.ML.Runtime.Data.RoleMappedSchema/ColumnRole, string&gt;&gt; roles, bool opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RoleMappedData.#ctor(Microsoft.ML.Runtime.Data.IDataView,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,System.String}},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As IDataView, roles As IEnumerable(Of KeyValuePair(Of RoleMappedSchema.ColumnRole, String)), Optional opt As Boolean = false)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.RoleMappedData : Microsoft.ML.Runtime.Data.IDataView * seq&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole, string&gt;&gt; * bool -&gt; Microsoft.ML.Runtime.Data.RoleMappedData" Usage="new Microsoft.ML.Runtime.Data.RoleMappedData (data, roles, opt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="roles" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema+ColumnRole,System.String&gt;&gt;" />
        <Parameter Name="opt" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="data">The schema over which roles are defined</param>
        <param name="roles">The column role to column name mappings</param>
        <param name="opt">Whether to consider the column names specified "optional" or not. If <c>false</c> then any non-empty
            values for the column names that does not appear in <paramref name="data" />'s schema will result in an exception being thrown,
            but if <c>true</c> such values will be ignored</param>
        <summary>
            Constructor given a data view, and mapping pairs of roles to columns in the data view's schema.
            This skips null or empty column-names. It will also skip column-names that are not
            found in the schema if <paramref name="opt" /> is true.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleMappedData (Microsoft.ML.Runtime.Data.IDataView data, string label, string feature, string group = null, string weight = null, string name = null, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,string&gt;&gt; custom = null, bool opt = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.Data.IDataView data, string label, string feature, string group, string weight, string name, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;valuetype Microsoft.ML.Runtime.Data.RoleMappedSchema/ColumnRole, string&gt;&gt; custom, bool opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RoleMappedData.#ctor(Microsoft.ML.Runtime.Data.IDataView,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,System.String}},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As IDataView, label As String, feature As String, Optional group As String = null, Optional weight As String = null, Optional name As String = null, Optional custom As IEnumerable(Of KeyValuePair(Of RoleMappedSchema.ColumnRole, String)) = null, Optional opt As Boolean = false)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.RoleMappedData : Microsoft.ML.Runtime.Data.IDataView * string * string * string * string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole, string&gt;&gt; * bool -&gt; Microsoft.ML.Runtime.Data.RoleMappedData" Usage="new Microsoft.ML.Runtime.Data.RoleMappedData (data, label, feature, group, weight, name, custom, opt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="feature" Type="System.String" />
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="weight" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="custom" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema+ColumnRole,System.String&gt;&gt;" />
        <Parameter Name="opt" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="data">The data over which roles are defined</param>
        <param name="label">The column name that will be mapped to the <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole.Label" /> role</param>
        <param name="feature">The column name that will be mapped to the <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole.Feature" /> role</param>
        <param name="group">The column name that will be mapped to the <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole.Group" /> role</param>
        <param name="weight">The column name that will be mapped to the <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole.Weight" /> role</param>
        <param name="name">The column name that will be mapped to the <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole.Name" /> role</param>
        <param name="custom">Any additional desired custom column role mappings</param>
        <param name="opt">Whether to consider the column names specified "optional" or not. If <c>false</c> then any non-empty
            values for the column names that does not appear in <paramref name="data" />'s schema will result in an exception being thrown,
            but if <c>true</c> such values will be ignored</param>
        <summary>
            Convenience constructor for role-mappings over the commonly used roles. Note that if any column name specified
            is <c>null</c> or whitespace, it is ignored.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.IDataView Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.Data.IDataView Data" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.RoleMappedData.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As IDataView" />
      <MemberSignature Language="F#" Value="member this.Data : Microsoft.ML.Runtime.Data.IDataView" Usage="Microsoft.ML.Runtime.Data.RoleMappedData.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The data.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.RoleMappedSchema Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.Data.RoleMappedSchema Schema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.RoleMappedData.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As RoleMappedSchema" />
      <MemberSignature Language="F#" Value="member this.Schema : Microsoft.ML.Runtime.Data.RoleMappedSchema" Usage="Microsoft.ML.Runtime.Data.RoleMappedData.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.RoleMappedSchema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The role mapped schema. Note that <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedData.Schema" />'s <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.Schema" /> is
            guaranteed to be the same as <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedData.Data" />'s <see cref="P:Microsoft.ML.Runtime.Data.ISchematized.Schema" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>