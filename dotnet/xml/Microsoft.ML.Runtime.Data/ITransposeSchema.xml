<Type Name="ITransposeSchema" FullName="Microsoft.ML.Runtime.Data.ITransposeSchema">
  <TypeSignature Language="C#" Value="public interface ITransposeSchema : Microsoft.ML.Runtime.Data.ISchema" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITransposeSchema implements class Microsoft.ML.Runtime.Data.ISchema" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.ITransposeSchema" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITransposeSchema&#xA;Implements ISchema" />
  <TypeSignature Language="F#" Value="type ITransposeSchema = interface&#xA;    interface ISchema" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITransposeSchema : Microsoft::ML::Runtime::Data::ISchema" />
  <TypeSignature Language="C++ CX" Value="public interface class ITransposeSchema : Microsoft::ML::Runtime::Data::ISchema" />
  <TypeSignature Language="C++ WINRT" Value="__interface ITransposeSchema : Microsoft::ML::Runtime::Data::ISchema" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Data.ISchema</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            The transpose schema returns the schema information of the view we have transposed.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetSlotType">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.VectorType GetSlotType (int col);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.Data.VectorType GetSlotType(int32 col) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.ITransposeSchema.GetSlotType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSlotType (col As Integer) As VectorType" />
      <MemberSignature Language="F#" Value="abstract member GetSlotType : int -&gt; Microsoft.ML.Runtime.Data.VectorType" Usage="iTransposeSchema.GetSlotType col" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::ML::Runtime::Data::VectorType ^ GetSlotType(int col);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::ML::Runtime::Data::VectorType ^ GetSlotType(int col);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::ML::Runtime::Data::VectorType GetSlotType(int col);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.VectorType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="col" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="col">To be added.</param>
        <summary>
            Analogous to <see cref="M:Microsoft.ML.Runtime.Data.ISchema.GetColumnType(System.Int32)" />, except instead of returning the type of value
            accessible through the <see cref="T:Microsoft.ML.Runtime.Data.IRowCursor" />, returns the item type of value accessible
            through the <see cref="T:Microsoft.ML.Runtime.Data.ISlotCursor" />. This will return <c>null</c> iff this particular
            column is not transposable, that is, it cannot be viewed in a slotwise fashion. Observe from
            the return type that this will always be a vector type. This vector type should be of fixed
            size and one dimension.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>