<Type Name="Categorical" FullName="Microsoft.ML.Runtime.Data.Categorical">
  <TypeSignature Language="C#" Value="public static class Categorical" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Categorical extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.Categorical" />
  <TypeSignature Language="VB.NET" Value="Public Class Categorical" />
  <TypeSignature Language="F#" Value="type Categorical = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CatTransformDict">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput CatTransformDict (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.CategoricalTransform.Arguments input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.EntryPoints.CommonOutputs/TransformOutput CatTransformDict(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.CategoricalTransform/Arguments input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.Categorical.CatTransformDict(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.CategoricalTransform.Arguments)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CatTransformDict (env As IHostEnvironment, input As CategoricalTransform.Arguments) As CommonOutputs.TransformOutput" />
      <MemberSignature Language="F#" Value="static member CatTransformDict : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.CategoricalTransform.Arguments -&gt; Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput" Usage="Microsoft.ML.Runtime.Data.Categorical.CatTransformDict (env, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/EntryPoint(Desc="Converts the categorical value into an indicator array by building a dictionary of categories based on the data and using the id in the dictionary as the index in the array.", Name="Transforms.CategoricalOneHotVectorizer", UserName="Categorical Transform", XmlInclude=new System.String[] { "&lt;include file='../Microsoft.ML.Transforms/doc.xml' path='doc/members/member[@name="CategoricalOneHotVectorizer"]/*' /&gt;", "&lt;include file='../Microsoft.ML.Transforms/doc.xml' path='doc/members/example[@name="CategoricalOneHotVectorizer"]/*' /&gt;" })</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.CategoricalTransform+Arguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatTransformHash">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput CatTransformHash (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.CategoricalHashTransform.Arguments input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.EntryPoints.CommonOutputs/TransformOutput CatTransformHash(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.CategoricalHashTransform/Arguments input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.Categorical.CatTransformHash(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.CategoricalHashTransform.Arguments)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CatTransformHash (env As IHostEnvironment, input As CategoricalHashTransform.Arguments) As CommonOutputs.TransformOutput" />
      <MemberSignature Language="F#" Value="static member CatTransformHash : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.CategoricalHashTransform.Arguments -&gt; Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput" Usage="Microsoft.ML.Runtime.Data.Categorical.CatTransformHash (env, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/EntryPoint(Desc="Converts the categorical value into an indicator array by hashing the value and using the hash as an index in the bag. If the input column is a vector, a single indicator bag is returned for it.", Name="Transforms.CategoricalHashOneHotVectorizer", UserName="Categorical Hash Transform", XmlInclude=new System.String[] { "&lt;include file='../Microsoft.ML.Transforms/doc.xml' path='doc/members/member[@name="CategoricalHashOneHotVectorizer"]/*' /&gt;", "&lt;include file='../Microsoft.ML.Transforms/doc.xml' path='doc/members/example[@name="CategoricalHashOneHotVectorizer"]/*' /&gt;" })</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.CategoricalHashTransform+Arguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyToText">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput KeyToText (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.KeyToValueTransform.Arguments input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.EntryPoints.CommonOutputs/TransformOutput KeyToText(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.KeyToValueTransform/Arguments input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.Categorical.KeyToText(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.KeyToValueTransform.Arguments)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyToText (env As IHostEnvironment, input As KeyToValueTransform.Arguments) As CommonOutputs.TransformOutput" />
      <MemberSignature Language="F#" Value="static member KeyToText : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.KeyToValueTransform.Arguments -&gt; Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput" Usage="Microsoft.ML.Runtime.Data.Categorical.KeyToText (env, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/EntryPoint(Desc="KeyToValueTransform utilizes KeyValues metadata to map key indices to the corresponding values in the KeyValues metadata.", Name="Transforms.KeyToTextConverter", UserName="Key To Value Transform", XmlInclude=new System.String[] { "&lt;include file='../Microsoft.ML.Transforms/doc.xml' path='doc/members/member[@name="KeyToText"]/*' /&gt;" })</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.KeyToValueTransform+Arguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput TextToKey (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.TermTransform.Arguments input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.EntryPoints.CommonOutputs/TransformOutput TextToKey(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.TermTransform/Arguments input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.Categorical.TextToKey(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.TermTransform.Arguments)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TextToKey (env As IHostEnvironment, input As TermTransform.Arguments) As CommonOutputs.TransformOutput" />
      <MemberSignature Language="F#" Value="static member TextToKey : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.TermTransform.Arguments -&gt; Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput" Usage="Microsoft.ML.Runtime.Data.Categorical.TextToKey (env, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/EntryPoint(Desc="Converts input values (words, numbers, etc.) to index in a dictionary.", Name="Transforms.TextToKeyConverter", UserName="To Key", XmlInclude=new System.String[] { "&lt;include file='../Microsoft.ML.Data/Transforms/doc.xml' path='doc/members/member[@name="TextToKey"]/*' /&gt;", "&lt;include file='../Microsoft.ML.Data/Transforms/doc.xml' path='doc/members/example[@name="TextToKey"]/*' /&gt;" })</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.TermTransform+Arguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>