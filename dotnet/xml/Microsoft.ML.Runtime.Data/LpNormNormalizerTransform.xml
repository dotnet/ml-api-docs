<Type Name="LpNormNormalizerTransform" FullName="Microsoft.ML.Runtime.Data.LpNormNormalizerTransform">
  <TypeSignature Language="C#" Value="public sealed class LpNormNormalizerTransform : Microsoft.ML.Runtime.Data.OneToOneTransformBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LpNormNormalizerTransform extends Microsoft.ML.Runtime.Data.OneToOneTransformBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.LpNormNormalizerTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LpNormNormalizerTransform&#xA;Inherits OneToOneTransformBase" />
  <TypeSignature Language="F#" Value="type LpNormNormalizerTransform = class&#xA;    inherit OneToOneTransformBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.Data.OneToOneTransformBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Lp-Norm (vector/row-wise) normalization transform. Has the following two set of arguments:
            1- Lp-Norm normalizer arguments:
               Normalize rows individually by rescaling them to unit norm (L2, L1 or LInf).
               Performs the following operation on a vector X:
                    Y = (X - M) / D, where M is mean and D is either L2 norm, L1 norm or LInf norm.
               Scaling inputs to unit norms is a common operation for text classification or clustering.
            2- Global contrast normalization (GCN) arguments:
               Performs the following operation on a vector X:
                    Y = (s * X - M) / D, where s is a scale, M is mean and D is either L2 norm or standard deviation.
               Usage examples and Matlab code:
               <a href="http://www.cs.stanford.edu/~acoates/papers/coatesleeng_aistats_2011.pdf">http://www.cs.stanford.edu/~acoates/papers/coatesleeng_aistats_2011.pdf</a>.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LpNormNormalizerTransform (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.LpNormNormalizerTransform.Arguments args, Microsoft.ML.Runtime.Data.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.LpNormNormalizerTransform/Arguments args, class Microsoft.ML.Runtime.Data.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.LpNormNormalizerTransform.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.LpNormNormalizerTransform.Arguments,Microsoft.ML.Runtime.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, args As LpNormNormalizerTransform.Arguments, input As IDataView)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.LpNormNormalizerTransform : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.LpNormNormalizerTransform.Arguments * Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.Data.LpNormNormalizerTransform" Usage="new Microsoft.ML.Runtime.Data.LpNormNormalizerTransform (env, args, input)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="args" Type="Microsoft.ML.Runtime.Data.LpNormNormalizerTransform+Arguments" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LpNormNormalizerTransform (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.LpNormNormalizerTransform.GcnArguments args, Microsoft.ML.Runtime.Data.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.LpNormNormalizerTransform/GcnArguments args, class Microsoft.ML.Runtime.Data.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.LpNormNormalizerTransform.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.LpNormNormalizerTransform.GcnArguments,Microsoft.ML.Runtime.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, args As LpNormNormalizerTransform.GcnArguments, input As IDataView)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.LpNormNormalizerTransform : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.LpNormNormalizerTransform.GcnArguments * Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.Data.LpNormNormalizerTransform" Usage="new Microsoft.ML.Runtime.Data.LpNormNormalizerTransform (env, args, input)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="args" Type="Microsoft.ML.Runtime.Data.LpNormNormalizerTransform+GcnArguments" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <param name="input">To be added.</param>
        <summary>
            Public constructor corresponding to SignatureDataTransform.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.LpNormNormalizerTransform Create (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Model.ModelLoadContext ctx, Microsoft.ML.Runtime.Data.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.LpNormNormalizerTransform Create(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Model.ModelLoadContext ctx, class Microsoft.ML.Runtime.Data.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.LpNormNormalizerTransform.Create(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Model.ModelLoadContext,Microsoft.ML.Runtime.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (env As IHostEnvironment, ctx As ModelLoadContext, input As IDataView) As LpNormNormalizerTransform" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Model.ModelLoadContext * Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.Data.LpNormNormalizerTransform" Usage="Microsoft.ML.Runtime.Data.LpNormNormalizerTransform.Create (env, ctx, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.LpNormNormalizerTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.ModelLoadContext" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="ctx">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGlobalContrastNormalizer">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataTransform CreateGlobalContrastNormalizer (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.IDataView input, string name, string source = null, bool subMean = true, bool useStdDev = false, float scale = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataTransform CreateGlobalContrastNormalizer(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.IDataView input, string name, string source, bool subMean, bool useStdDev, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.LpNormNormalizerTransform.CreateGlobalContrastNormalizer(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.IDataView,System.String,System.String,System.Boolean,System.Boolean,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateGlobalContrastNormalizer (env As IHostEnvironment, input As IDataView, name As String, Optional source As String = null, Optional subMean As Boolean = true, Optional useStdDev As Boolean = false, Optional scale As Single = 1) As IDataTransform" />
      <MemberSignature Language="F#" Value="static member CreateGlobalContrastNormalizer : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.IDataView * string * string * bool * bool * single -&gt; Microsoft.ML.Runtime.Data.IDataTransform" Usage="Microsoft.ML.Runtime.Data.LpNormNormalizerTransform.CreateGlobalContrastNormalizer (env, input, name, source, subMean, useStdDev, scale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="subMean" Type="System.Boolean" />
        <Parameter Name="useStdDev" Type="System.Boolean" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="env">Host Environment.</param>
        <param name="input">Input <see cref="T:Microsoft.ML.Runtime.Data.IDataView" />. This is the output from previous transform or loader.</param>
        <param name="name">Name of the output column.</param>
        <param name="source">Name of the column to be transformed. If this is null '<paramref name="name" />' will be used.</param>
        <param name="subMean">Subtract mean from each value before normalizing.</param>
        <param name="useStdDev">Normalize by standard deviation rather than L2 norm.</param>
        <param name="scale">Scale features by this value.</param>
        <summary>
            A helper method to create GlobalContrastNormalizer transform for public facing API.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLpNormNormalizer">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataTransform CreateLpNormNormalizer (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.IDataView input, string name, string source = null, Microsoft.ML.Runtime.Data.LpNormNormalizerTransform.NormalizerKind normKind = Microsoft.ML.Runtime.Data.LpNormNormalizerTransform+NormalizerKind.L2Norm, bool subMean = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataTransform CreateLpNormNormalizer(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.IDataView input, string name, string source, valuetype Microsoft.ML.Runtime.Data.LpNormNormalizerTransform/NormalizerKind normKind, bool subMean) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.LpNormNormalizerTransform.CreateLpNormNormalizer(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.IDataView,System.String,System.String,Microsoft.ML.Runtime.Data.LpNormNormalizerTransform.NormalizerKind,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateLpNormNormalizer (env As IHostEnvironment, input As IDataView, name As String, Optional source As String = null, Optional normKind As LpNormNormalizerTransform.NormalizerKind = Microsoft.ML.Runtime.Data.LpNormNormalizerTransform+NormalizerKind.L2Norm, Optional subMean As Boolean = false) As IDataTransform" />
      <MemberSignature Language="F#" Value="static member CreateLpNormNormalizer : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.IDataView * string * string * Microsoft.ML.Runtime.Data.LpNormNormalizerTransform.NormalizerKind * bool -&gt; Microsoft.ML.Runtime.Data.IDataTransform" Usage="Microsoft.ML.Runtime.Data.LpNormNormalizerTransform.CreateLpNormNormalizer (env, input, name, source, normKind, subMean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="normKind" Type="Microsoft.ML.Runtime.Data.LpNormNormalizerTransform+NormalizerKind" />
        <Parameter Name="subMean" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="env">Host Environment.</param>
        <param name="input">Input <see cref="T:Microsoft.ML.Runtime.Data.IDataView" />. This is the output from previous transform or loader.</param>
        <param name="name">Name of the output column.</param>
        <param name="source">Name of the column to be transformed. If this is null '<paramref name="name" />' will be used.</param>
        <param name="normKind">The norm to use to normalize each sample.</param>
        <param name="subMean">Subtract mean from each value before normalizing.</param>
        <summary>
            A helper method to create LpNormNormalizer transform for public facing API.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnTypeCore">
      <MemberSignature Language="C#" Value="protected override Microsoft.ML.Runtime.Data.ColumnType GetColumnTypeCore (int iinfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.ML.Runtime.Data.ColumnType GetColumnTypeCore(int32 iinfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.LpNormNormalizerTransform.GetColumnTypeCore(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetColumnTypeCore (iinfo As Integer) As ColumnType" />
      <MemberSignature Language="F#" Value="override this.GetColumnTypeCore : int -&gt; Microsoft.ML.Runtime.Data.ColumnType" Usage="lpNormNormalizerTransform.GetColumnTypeCore iinfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ColumnType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iinfo" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="iinfo">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGetterCore">
      <MemberSignature Language="C#" Value="protected override Delegate GetGetterCore (Microsoft.ML.Runtime.IChannel ch, Microsoft.ML.Runtime.Data.IRow input, int iinfo, out Action disposer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Delegate GetGetterCore(class Microsoft.ML.Runtime.IChannel ch, class Microsoft.ML.Runtime.Data.IRow input, int32 iinfo, [out] class System.Action&amp; disposer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.LpNormNormalizerTransform.GetGetterCore(Microsoft.ML.Runtime.IChannel,Microsoft.ML.Runtime.Data.IRow,System.Int32,System.Action@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetGetterCore (ch As IChannel, input As IRow, iinfo As Integer, ByRef disposer As Action) As Delegate" />
      <MemberSignature Language="F#" Value="override this.GetGetterCore : Microsoft.ML.Runtime.IChannel * Microsoft.ML.Runtime.Data.IRow * int *  -&gt; Delegate" Usage="lpNormNormalizerTransform.GetGetterCore (ch, input, iinfo, disposer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Microsoft.ML.Runtime.IChannel" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IRow" />
        <Parameter Name="iinfo" Type="System.Int32" />
        <Parameter Name="disposer" Type="System.Action" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ch">To be added.</param>
        <param name="input">To be added.</param>
        <param name="iinfo">To be added.</param>
        <param name="disposer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoaderSignature">
      <MemberSignature Language="C#" Value="public const string LoaderSignature;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string LoaderSignature" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Data.LpNormNormalizerTransform.LoaderSignature" />
      <MemberSignature Language="VB.NET" Value="Public Const LoaderSignature As String " />
      <MemberSignature Language="F#" Value="val mutable LoaderSignature : string" Usage="Microsoft.ML.Runtime.Data.LpNormNormalizerTransform.LoaderSignature" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save (Microsoft.ML.Runtime.Model.ModelSaveContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save(class Microsoft.ML.Runtime.Model.ModelSaveContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.LpNormNormalizerTransform.Save(Microsoft.ML.Runtime.Model.ModelSaveContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save (ctx As ModelSaveContext)" />
      <MemberSignature Language="F#" Value="override this.Save : Microsoft.ML.Runtime.Model.ModelSaveContext -&gt; unit" Usage="lpNormNormalizerTransform.Save ctx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.ModelSaveContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>