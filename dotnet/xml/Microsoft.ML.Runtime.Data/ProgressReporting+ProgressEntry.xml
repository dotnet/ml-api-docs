<Type Name="ProgressReporting+ProgressEntry" FullName="Microsoft.ML.Runtime.Data.ProgressReporting+ProgressEntry">
  <TypeSignature Language="C#" Value="public sealed class ProgressReporting.ProgressEntry : Microsoft.ML.Runtime.IProgressEntry" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit ProgressReporting/ProgressEntry extends System.Object implements class Microsoft.ML.Runtime.IProgressEntry" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProgressReporting.ProgressEntry&#xA;Implements IProgressEntry" />
  <TypeSignature Language="F#" Value="type ProgressReporting.ProgressEntry = class&#xA;    interface IProgressEntry" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.IProgressEntry</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An array-backed implementation of <see cref="T:Microsoft.ML.Runtime.IProgressEntry" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProgressEntry (bool isCheckpoint, Microsoft.ML.Runtime.ProgressHeader header);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool isCheckpoint, class Microsoft.ML.Runtime.ProgressHeader header) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry.#ctor(System.Boolean,Microsoft.ML.Runtime.ProgressHeader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (isCheckpoint As Boolean, header As ProgressHeader)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry : bool * Microsoft.ML.Runtime.ProgressHeader -&gt; Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry" Usage="new Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry (isCheckpoint, header)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isCheckpoint" Type="System.Boolean" />
        <Parameter Name="header" Type="Microsoft.ML.Runtime.ProgressHeader" />
      </Parameters>
      <Docs>
        <param name="isCheckpoint">To be added.</param>
        <param name="header">To be added.</param>
        <summary>
            Creates the progress entry corresponding to a given header.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="public readonly Microsoft.ML.Runtime.ProgressHeader Header;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly class Microsoft.ML.Runtime.ProgressHeader Header" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry.Header" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Header As ProgressHeader " />
      <MemberSignature Language="F#" Value="val mutable Header : Microsoft.ML.Runtime.ProgressHeader" Usage="Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry.Header" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.ProgressHeader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The header (names of metrics and units).
            The contents of the header should be treated as read-only. The calculation itself doesn't even
            need to access the header, since it will know it anyway.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCheckpoint">
      <MemberSignature Language="C#" Value="public readonly bool IsCheckpoint;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly bool IsCheckpoint" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry.IsCheckpoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly IsCheckpoint As Boolean " />
      <MemberSignature Language="F#" Value="val mutable IsCheckpoint : bool" Usage="Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry.IsCheckpoint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether the progress entry is a 'checkpoint' (that is, it's being pushed by the component).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metrics">
      <MemberSignature Language="C#" Value="public readonly Nullable&lt;double&gt;[] Metrics;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly valuetype System.Nullable`1&lt;float64&gt;[] Metrics" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry.Metrics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Metrics As Nullable(Of Double)() " />
      <MemberSignature Language="F#" Value="val mutable Metrics : Nullable&lt;double&gt;[]" Usage="Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry.Metrics" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The reported metrics. Parallel to the header's <see cref="F:Microsoft.ML.Runtime.ProgressHeader.MetricNames" />.
            Null value indicates unknown.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Progress">
      <MemberSignature Language="C#" Value="public readonly Nullable&lt;double&gt;[] Progress;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly valuetype System.Nullable`1&lt;float64&gt;[] Progress" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry.Progress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Progress As Nullable(Of Double)() " />
      <MemberSignature Language="F#" Value="val mutable Progress : Nullable&lt;double&gt;[]" Usage="Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry.Progress" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The actual progress (amount of completed units), in the units that are contained in the header.
            Parallel to the header's <see cref="F:Microsoft.ML.Runtime.ProgressHeader.UnitNames" />. Null value indicates 'not applicable now'.
            
            The computation should not modify these arrays directly, and instead rely on <see cref="M:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry.SetMetric(System.Int32,System.Double)" />,
            <see cref="M:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry.SetProgress(System.Int32,System.Double)" /> and <see cref="M:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry.SetProgress(System.Int32,System.Double,System.Double)" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressLim">
      <MemberSignature Language="C#" Value="public readonly Nullable&lt;double&gt;[] ProgressLim;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly valuetype System.Nullable`1&lt;float64&gt;[] ProgressLim" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry.ProgressLim" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly ProgressLim As Nullable(Of Double)() " />
      <MemberSignature Language="F#" Value="val mutable ProgressLim : Nullable&lt;double&gt;[]" Usage="Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry.ProgressLim" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The lim values of each progress unit. 
            Parallel to the header's <see cref="F:Microsoft.ML.Runtime.ProgressHeader.UnitNames" />. Null value indicates unbounded or unknown.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetric">
      <MemberSignature Language="C#" Value="public void SetMetric (int index, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMetric(int32 index, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry.SetMetric(System.Int32,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMetric (index As Integer, value As Double)" />
      <MemberSignature Language="F#" Value="abstract member SetMetric : int * double -&gt; unit&#xA;override this.SetMetric : int * double -&gt; unit" Usage="progressEntry.SetMetric (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.IProgressEntry.SetMetric(System.Int32,System.Double)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Sets the metric with index <paramref name="index" /> to <paramref name="value" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProgress">
      <MemberSignature Language="C#" Value="public void SetProgress (int index, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProgress(int32 index, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry.SetProgress(System.Int32,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetProgress (index As Integer, value As Double)" />
      <MemberSignature Language="F#" Value="abstract member SetProgress : int * double -&gt; unit&#xA;override this.SetProgress : int * double -&gt; unit" Usage="progressEntry.SetProgress (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.IProgressEntry.SetProgress(System.Int32,System.Double)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Set the progress value for the index <paramref name="index" /> to <paramref name="value" />,
            and the limit value for the progress becomes 'unknown'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProgress">
      <MemberSignature Language="C#" Value="public void SetProgress (int index, double value, double lim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProgress(int32 index, float64 value, float64 lim) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.ProgressReporting.ProgressEntry.SetProgress(System.Int32,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetProgress (index As Integer, value As Double, lim As Double)" />
      <MemberSignature Language="F#" Value="abstract member SetProgress : int * double * double -&gt; unit&#xA;override this.SetProgress : int * double * double -&gt; unit" Usage="progressEntry.SetProgress (index, value, lim)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.IProgressEntry.SetProgress(System.Int32,System.Double,System.Double)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="lim" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="value">To be added.</param>
        <param name="lim">To be added.</param>
        <summary>
            Set the progress value for the index <paramref name="index" /> to <paramref name="value" />,
            and the limit value to <paramref name="lim" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>