<Type Name="EstimatorChain&lt;TLastTransformer&gt;" FullName="Microsoft.ML.Runtime.Data.EstimatorChain&lt;TLastTransformer&gt;">
  <TypeSignature Language="C#" Value="public sealed class EstimatorChain&lt;TLastTransformer&gt; : Microsoft.ML.Core.Data.IEstimator&lt;Microsoft.ML.Runtime.Data.TransformerChain&lt;TLastTransformer&gt;&gt; where TLastTransformer : class, ITransformer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EstimatorChain`1&lt;class (class Microsoft.ML.Core.Data.ITransformer) TLastTransformer&gt; extends System.Object implements class Microsoft.ML.Core.Data.IEstimator`1&lt;class Microsoft.ML.Runtime.Data.TransformerChain`1&lt;!TLastTransformer&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.EstimatorChain`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EstimatorChain(Of TLastTransformer)&#xA;Implements IEstimator(Of TransformerChain(Of TLastTransformer))" />
  <TypeSignature Language="F#" Value="type EstimatorChain&lt;'LastTransformer (requires 'LastTransformer : null and 'LastTransformer :&gt; ITransformer)&gt; = class&#xA;    interface IEstimator&lt;TransformerChain&lt;'LastTransformer&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TLastTransformer">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
        <InterfaceName>Microsoft.ML.Core.Data.ITransformer</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Core.Data.IEstimator&lt;Microsoft.ML.Runtime.Data.TransformerChain&lt;TLastTransformer&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TLastTransformer">To be added.</typeparam>
    <summary>
            Represents a chain (potentially empty) of estimators that end with a <typeparamref name="TLastTransformer" />.
            If the chain is empty, <typeparamref name="TLastTransformer" /> is always <see cref="T:Microsoft.ML.Core.Data.ITransformer" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EstimatorChain ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.EstimatorChain`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Create an empty estimator chain.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append&lt;TNewTrans&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.EstimatorChain&lt;TNewTrans&gt; Append&lt;TNewTrans&gt; (Microsoft.ML.Core.Data.IEstimator&lt;TNewTrans&gt; estimator, Microsoft.ML.Runtime.Data.TransformerScope scope = Microsoft.ML.Runtime.Data.TransformerScope.Everything) where TNewTrans : class, Microsoft.ML.Core.Data.ITransformer;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.Data.EstimatorChain`1&lt;!!TNewTrans&gt; Append&lt;class (class Microsoft.ML.Core.Data.ITransformer) TNewTrans&gt;(class Microsoft.ML.Core.Data.IEstimator`1&lt;!!TNewTrans&gt; estimator, valuetype Microsoft.ML.Runtime.Data.TransformerScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.EstimatorChain`1.Append``1(Microsoft.ML.Core.Data.IEstimator{``0},Microsoft.ML.Runtime.Data.TransformerScope)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append(Of TNewTrans As {Class, ITransformer}) (estimator As IEstimator(Of TNewTrans), Optional scope As TransformerScope = Microsoft.ML.Runtime.Data.TransformerScope.Everything) As EstimatorChain(Of TNewTrans)" />
      <MemberSignature Language="F#" Value="member this.Append : Microsoft.ML.Core.Data.IEstimator&lt;'NewTrans (requires 'NewTrans : null and 'NewTrans :&gt; Microsoft.ML.Core.Data.ITransformer)&gt; * Microsoft.ML.Runtime.Data.TransformerScope -&gt; Microsoft.ML.Runtime.Data.EstimatorChain&lt;'NewTrans (requires 'NewTrans : null and 'NewTrans :&gt; Microsoft.ML.Core.Data.ITransformer)&gt; (requires 'NewTrans : null and 'NewTrans :&gt; Microsoft.ML.Core.Data.ITransformer)" Usage="estimatorChain.Append (estimator, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.EstimatorChain&lt;TNewTrans&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewTrans">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.ML.Core.Data.ITransformer</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="estimator" Type="Microsoft.ML.Core.Data.IEstimator&lt;TNewTrans&gt;" />
        <Parameter Name="scope" Type="Microsoft.ML.Runtime.Data.TransformerScope" />
      </Parameters>
      <Docs>
        <typeparam name="TNewTrans">To be added.</typeparam>
        <param name="estimator">To be added.</param>
        <param name="scope">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fit">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.TransformerChain&lt;TLastTransformer&gt; Fit (Microsoft.ML.Runtime.Data.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.Data.TransformerChain`1&lt;!TLastTransformer&gt; Fit(class Microsoft.ML.Runtime.Data.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.EstimatorChain`1.Fit(Microsoft.ML.Runtime.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fit (input As IDataView) As TransformerChain(Of TLastTransformer)" />
      <MemberSignature Language="F#" Value="abstract member Fit : Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.Data.TransformerChain&lt;'LastTransformer (requires 'LastTransformer : null and 'LastTransformer :&gt; Microsoft.ML.Core.Data.ITransformer)&gt;&#xA;override this.Fit : Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.Data.TransformerChain&lt;'LastTransformer (requires 'LastTransformer : null and 'LastTransformer :&gt; Microsoft.ML.Core.Data.ITransformer)&gt;" Usage="estimatorChain.Fit input" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IEstimator`1.Fit(Microsoft.ML.Runtime.Data.IDataView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.TransformerChain&lt;TLastTransformer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Core.Data.SchemaShape GetOutputSchema (Microsoft.ML.Core.Data.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Core.Data.SchemaShape GetOutputSchema(class Microsoft.ML.Core.Data.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.EstimatorChain`1.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutputSchema (inputSchema As SchemaShape) As SchemaShape" />
      <MemberSignature Language="F#" Value="abstract member GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape&#xA;override this.GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape" Usage="estimatorChain.GetOutputSchema inputSchema" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IEstimator`1.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Core.Data.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastEstimator">
      <MemberSignature Language="C#" Value="public readonly Microsoft.ML.Core.Data.IEstimator&lt;TLastTransformer&gt; LastEstimator;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly class Microsoft.ML.Core.Data.IEstimator`1&lt;!TLastTransformer&gt; LastEstimator" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Data.EstimatorChain`1.LastEstimator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly LastEstimator As IEstimator(Of TLastTransformer) " />
      <MemberSignature Language="F#" Value="val mutable LastEstimator : Microsoft.ML.Core.Data.IEstimator&lt;'LastTransformer (requires 'LastTransformer : null and 'LastTransformer :&gt; Microsoft.ML.Core.Data.ITransformer)&gt;" Usage="Microsoft.ML.Runtime.Data.EstimatorChain&lt;'LastTransformer (requires 'LastTransformer : null and 'LastTransformer :&gt; Microsoft.ML.Core.Data.ITransformer)&gt;.LastEstimator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.IEstimator&lt;TLastTransformer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>