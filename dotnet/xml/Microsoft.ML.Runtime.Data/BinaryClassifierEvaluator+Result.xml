<Type Name="BinaryClassifierEvaluator+Result" FullName="Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator+Result">
  <TypeSignature Language="C#" Value="public class BinaryClassifierEvaluator.Result" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit BinaryClassifierEvaluator/Result extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.Result" />
  <TypeSignature Language="VB.NET" Value="Public Class BinaryClassifierEvaluator.Result" />
  <TypeSignature Language="F#" Value="type BinaryClassifierEvaluator.Result = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Evaluation results for binary classifiers, excluding probabilistic metrics.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accuracy">
      <MemberSignature Language="C#" Value="public double Accuracy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Accuracy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.Result.Accuracy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Accuracy As Double" />
      <MemberSignature Language="F#" Value="member this.Accuracy : double" Usage="Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.Result.Accuracy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the accuracy of a classifier which is the proportion of correct predictions in the test set.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Auc">
      <MemberSignature Language="C#" Value="public double Auc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Auc" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.Result.Auc" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Auc As Double" />
      <MemberSignature Language="F#" Value="member this.Auc : double" Usage="Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.Result.Auc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the area under the ROC curve.
            </summary>
        <value>To be added.</value>
        <remarks>
            The area under the ROC curve is equal to the probability that the classifier ranks
            a randomly chosen positive instance higher than a randomly chosen negative one
            (assuming 'positive' ranks higher than 'negative').
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Auprc">
      <MemberSignature Language="C#" Value="public double Auprc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Auprc" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.Result.Auprc" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Auprc As Double" />
      <MemberSignature Language="F#" Value="member this.Auprc : double" Usage="Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.Result.Auprc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the area under the precision/recall curve of the classifier.
            </summary>
        <value>To be added.</value>
        <remarks>
            The area under the precision/recall curve is a single number summary of the information in the
            precision/recall curve. It is increasingly used in the machine learning community, particularly
            for imbalanced datasets where one class is observed more frequently than the other. On these
            datasets, AUPRC can highlight performance differences that are lost with AUC.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="F1Score">
      <MemberSignature Language="C#" Value="public double F1Score { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 F1Score" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.Result.F1Score" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property F1Score As Double" />
      <MemberSignature Language="F#" Value="member this.F1Score : double" Usage="Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.Result.F1Score" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the F1 score of the classifier.
            </summary>
        <value>To be added.</value>
        <remarks>
            F1 score is the harmonic mean of precision and recall: 2 * precision * recall / (precision + recall).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="NegativePrecision">
      <MemberSignature Language="C#" Value="public double NegativePrecision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 NegativePrecision" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.Result.NegativePrecision" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NegativePrecision As Double" />
      <MemberSignature Language="F#" Value="member this.NegativePrecision : double" Usage="Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.Result.NegativePrecision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the negative precision of a classifier which is the proportion of correctly predicted
            negative instances among all the negative predictions (i.e., the number of negative instances
            predicted as negative, divided by the total number of instances predicted as negative).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NegativeRecall">
      <MemberSignature Language="C#" Value="public double NegativeRecall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 NegativeRecall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.Result.NegativeRecall" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NegativeRecall As Double" />
      <MemberSignature Language="F#" Value="member this.NegativeRecall : double" Usage="Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.Result.NegativeRecall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the negative recall of a classifier which is the proportion of correctly predicted
            negative instances among all the negative instances (i.e., the number of negative instances
            predicted as negative, divided by the total number of negative instances).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PositivePrecision">
      <MemberSignature Language="C#" Value="public double PositivePrecision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PositivePrecision" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.Result.PositivePrecision" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PositivePrecision As Double" />
      <MemberSignature Language="F#" Value="member this.PositivePrecision : double" Usage="Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.Result.PositivePrecision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the positive precision of a classifier which is the proportion of correctly predicted
            positive instances among all the positive predictions (i.e., the number of positive instances
            predicted as positive, divided by the total number of instances predicted as positive).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PositiveRecall">
      <MemberSignature Language="C#" Value="public double PositiveRecall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PositiveRecall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.Result.PositiveRecall" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PositiveRecall As Double" />
      <MemberSignature Language="F#" Value="member this.PositiveRecall : double" Usage="Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.Result.PositiveRecall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the positive recall of a classifier which is the proportion of correctly predicted
            positive instances among all the positive instances (i.e., the number of positive instances
            predicted as positive, divided by the total number of positive instances).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>