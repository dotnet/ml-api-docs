<Type Name="RoleMappedSchema" FullName="Microsoft.ML.Runtime.Data.RoleMappedSchema">
  <TypeSignature Language="C#" Value="public sealed class RoleMappedSchema" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RoleMappedSchema extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.RoleMappedSchema" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RoleMappedSchema" />
  <TypeSignature Language="F#" Value="type RoleMappedSchema = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Encapsulates an <see cref="T:Microsoft.ML.Runtime.Data.ISchema" /> plus column role mapping information. The purpose of role mappings is to
             provide information on what the intended usage is for. That is: while a given data view may have a column named
             "Features", by itself that is insufficient: the trainer must be fed a role mapping that says that the role
             mapping for features is filled by that "Features" column. This allows things like columns not named "Features"
             to actually fill that role (as opposed to insisting on a hard coding, or having every trainer have to be
             individually configured). Also, by being a one-to-many mapping, it is a way for learners that can consume
             multiple features columns to consume that information.
            
             This class has convenience fields for several common column roles (se.g., <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.Feature" />, <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.Label" />), but can hold an arbitrary set of column infos. The convenience fields are non-null if and only
             if there is a unique column with the corresponding role. When there are no such columns or more than one such
             column, the field is <c>null</c>. The <see cref="M:Microsoft.ML.Runtime.Data.RoleMappedSchema.Has(Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole)" />, <see cref="M:Microsoft.ML.Runtime.Data.RoleMappedSchema.HasUnique(Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole)" />, and <see cref="M:Microsoft.ML.Runtime.Data.RoleMappedSchema.HasMultiple(Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole)" />
             methods provide some cardinality information. Note that all columns assigned roles are guaranteed to be non-hidden
             in this schema.
             </summary>
    <remarks>
             Note that instances of this class are, like instances of <see cref="T:Microsoft.ML.Runtime.Data.ISchema" />, immutable.
            
             It is often the case that one wishes to bundle the actual data with the role mappings, not just the schema. For
             that case, please use the <see cref="T:Microsoft.ML.Runtime.Data.RoleMappedData" /> class.
            
             Note that there is no need for components consuming a <see cref="T:Microsoft.ML.Runtime.Data.RoleMappedData" /> or <see cref="T:Microsoft.ML.Runtime.Data.RoleMappedSchema" />
             to make use of every defined mapping. Consuming components are also expected to ignore any <see cref="T:Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole" />
             they do not handle. They may very well however complain if a mapping they wanted to see is not present, or the column(s)
             mapped from the role are not of the form they require.
             </remarks>
    <altmember cref="T:Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole" />
    <altmember cref="T:Microsoft.ML.Runtime.Data.RoleMappedData" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleMappedSchema (Microsoft.ML.Runtime.Data.ISchema schema, bool opt = false, params System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,string&gt;[] roles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.Data.ISchema schema, bool opt, valuetype System.Collections.Generic.KeyValuePair`2&lt;valuetype Microsoft.ML.Runtime.Data.RoleMappedSchema/ColumnRole, string&gt;[] roles) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RoleMappedSchema.#ctor(Microsoft.ML.Runtime.Data.ISchema,System.Boolean,System.Collections.Generic.KeyValuePair{Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,System.String}[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schema As ISchema, Optional opt As Boolean = false, ParamArray roles As KeyValuePair(Of RoleMappedSchema.ColumnRole, String)())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.RoleMappedSchema : Microsoft.ML.Runtime.Data.ISchema * bool * System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole, string&gt;[] -&gt; Microsoft.ML.Runtime.Data.RoleMappedSchema" Usage="new Microsoft.ML.Runtime.Data.RoleMappedSchema (schema, opt, roles)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.ISchema" />
        <Parameter Name="opt" Type="System.Boolean" />
        <Parameter Name="roles" Type="System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema+ColumnRole,System.String&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="schema">The schema over which roles are defined</param>
        <param name="opt">Whether to consider the column names specified "optional" or not. If <c>false</c> then any non-empty
            values for the column names that does not appear in <paramref name="schema" /> will result in an exception being thrown,
            but if <c>true</c> such values will be ignored</param>
        <param name="roles">The column role to column name mappings</param>
        <summary>
            Constructor given a schema, and mapping pairs of roles to columns in the schema.
            This skips null or empty column-names. It will also skip column-names that are not
            found in the schema if <paramref name="opt" /> is true.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleMappedSchema (Microsoft.ML.Runtime.Data.ISchema schema, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,string&gt;&gt; roles, bool opt = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.Data.ISchema schema, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;valuetype Microsoft.ML.Runtime.Data.RoleMappedSchema/ColumnRole, string&gt;&gt; roles, bool opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RoleMappedSchema.#ctor(Microsoft.ML.Runtime.Data.ISchema,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,System.String}},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schema As ISchema, roles As IEnumerable(Of KeyValuePair(Of RoleMappedSchema.ColumnRole, String)), Optional opt As Boolean = false)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.RoleMappedSchema : Microsoft.ML.Runtime.Data.ISchema * seq&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole, string&gt;&gt; * bool -&gt; Microsoft.ML.Runtime.Data.RoleMappedSchema" Usage="new Microsoft.ML.Runtime.Data.RoleMappedSchema (schema, roles, opt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.ISchema" />
        <Parameter Name="roles" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema+ColumnRole,System.String&gt;&gt;" />
        <Parameter Name="opt" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="schema">The schema over which roles are defined</param>
        <param name="roles">The column role to column name mappings</param>
        <param name="opt">Whether to consider the column names specified "optional" or not. If <c>false</c> then any non-empty
            values for the column names that does not appear in <paramref name="schema" /> will result in an exception being thrown,
            but if <c>true</c> such values will be ignored</param>
        <summary>
            Constructor given a schema, and mapping pairs of roles to columns in the schema.
            This skips null or empty column names. It will also skip column-names that are not
            found in the schema if <paramref name="opt" /> is true.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleMappedSchema (Microsoft.ML.Runtime.Data.ISchema schema, string label, string feature, string group = null, string weight = null, string name = null, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,string&gt;&gt; custom = null, bool opt = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.Data.ISchema schema, string label, string feature, string group, string weight, string name, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;valuetype Microsoft.ML.Runtime.Data.RoleMappedSchema/ColumnRole, string&gt;&gt; custom, bool opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RoleMappedSchema.#ctor(Microsoft.ML.Runtime.Data.ISchema,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,System.String}},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schema As ISchema, label As String, feature As String, Optional group As String = null, Optional weight As String = null, Optional name As String = null, Optional custom As IEnumerable(Of KeyValuePair(Of RoleMappedSchema.ColumnRole, String)) = null, Optional opt As Boolean = false)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.RoleMappedSchema : Microsoft.ML.Runtime.Data.ISchema * string * string * string * string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole, string&gt;&gt; * bool -&gt; Microsoft.ML.Runtime.Data.RoleMappedSchema" Usage="new Microsoft.ML.Runtime.Data.RoleMappedSchema (schema, label, feature, group, weight, name, custom, opt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.ISchema" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="feature" Type="System.String" />
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="weight" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="custom" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema+ColumnRole,System.String&gt;&gt;" />
        <Parameter Name="opt" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="schema">The schema over which roles are defined</param>
        <param name="label">The column name that will be mapped to the <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole.Label" /> role</param>
        <param name="feature">The column name that will be mapped to the <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole.Feature" /> role</param>
        <param name="group">The column name that will be mapped to the <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole.Group" /> role</param>
        <param name="weight">The column name that will be mapped to the <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole.Weight" /> role</param>
        <param name="name">The column name that will be mapped to the <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole.Name" /> role</param>
        <param name="custom">Any additional desired custom column role mappings</param>
        <param name="opt">Whether to consider the column names specified "optional" or not. If <c>false</c> then any non-empty
            values for the column names that does not appear in <paramref name="schema" /> will result in an exception being thrown,
            but if <c>true</c> such values will be ignored</param>
        <summary>
            Convenience constructor for role-mappings over the commonly used roles. Note that if any column name specified
            is <c>null</c> or whitespace, it is ignored.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePair">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,string&gt; CreatePair (Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole role, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;valuetype Microsoft.ML.Runtime.Data.RoleMappedSchema/ColumnRole, string&gt; CreatePair(valuetype Microsoft.ML.Runtime.Data.RoleMappedSchema/ColumnRole role, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RoleMappedSchema.CreatePair(Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePair (role As RoleMappedSchema.ColumnRole, name As String) As KeyValuePair(Of RoleMappedSchema.ColumnRole, String)" />
      <MemberSignature Language="F#" Value="static member CreatePair : Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole * string -&gt; System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole, string&gt;" Usage="Microsoft.ML.Runtime.Data.RoleMappedSchema.CreatePair (role, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema+ColumnRole,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.ML.Runtime.Data.RoleMappedSchema+ColumnRole" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Feature">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.ColumnInfo Feature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.Data.ColumnInfo Feature" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.Feature" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Feature As ColumnInfo" />
      <MemberSignature Language="F#" Value="member this.Feature : Microsoft.ML.Runtime.Data.ColumnInfo" Usage="Microsoft.ML.Runtime.Data.RoleMappedSchema.Feature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ColumnInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole.Feature" /> column, when there is exactly one (null otherwise).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnRoleNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,string&gt;&gt; GetColumnRoleNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;valuetype Microsoft.ML.Runtime.Data.RoleMappedSchema/ColumnRole, string&gt;&gt; GetColumnRoleNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RoleMappedSchema.GetColumnRoleNames" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetColumnRoleNames () As IEnumerable(Of KeyValuePair(Of RoleMappedSchema.ColumnRole, String))" />
      <MemberSignature Language="F#" Value="member this.GetColumnRoleNames : unit -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole, string&gt;&gt;" Usage="roleMappedSchema.GetColumnRoleNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.ML.Runtime.Data.RoleMappedSchema/&lt;GetColumnRoleNames&gt;d__36))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema+ColumnRole,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            An enumerable over all role-column associations within this object.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnRoleNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,string&gt;&gt; GetColumnRoleNames (Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;valuetype Microsoft.ML.Runtime.Data.RoleMappedSchema/ColumnRole, string&gt;&gt; GetColumnRoleNames(valuetype Microsoft.ML.Runtime.Data.RoleMappedSchema/ColumnRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RoleMappedSchema.GetColumnRoleNames(Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole)" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetColumnRoleNames (role As RoleMappedSchema.ColumnRole) As IEnumerable(Of KeyValuePair(Of RoleMappedSchema.ColumnRole, String))" />
      <MemberSignature Language="F#" Value="member this.GetColumnRoleNames : Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole, string&gt;&gt;" Usage="roleMappedSchema.GetColumnRoleNames role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.ML.Runtime.Data.RoleMappedSchema/&lt;GetColumnRoleNames&gt;d__37))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema+ColumnRole,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.ML.Runtime.Data.RoleMappedSchema+ColumnRole" />
      </Parameters>
      <Docs>
        <param name="role">To be added.</param>
        <summary>
            An enumerable over all role-column associations for the given role. This is a helper function
            for implementing the <see cref="M:Microsoft.ML.Runtime.Data.ISchemaBoundMapper.GetInputColumnRoles" /> method.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnRoles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,Microsoft.ML.Runtime.Data.ColumnInfo&gt;&gt; GetColumnRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;valuetype Microsoft.ML.Runtime.Data.RoleMappedSchema/ColumnRole, class Microsoft.ML.Runtime.Data.ColumnInfo&gt;&gt; GetColumnRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RoleMappedSchema.GetColumnRoles" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetColumnRoles () As IEnumerable(Of KeyValuePair(Of RoleMappedSchema.ColumnRole, ColumnInfo))" />
      <MemberSignature Language="F#" Value="member this.GetColumnRoles : unit -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole, Microsoft.ML.Runtime.Data.ColumnInfo&gt;&gt;" Usage="roleMappedSchema.GetColumnRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.ML.Runtime.Data.RoleMappedSchema/&lt;GetColumnRoles&gt;d__35))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema+ColumnRole,Microsoft.ML.Runtime.Data.ColumnInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            An enumerable over all role-column associations within this object.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumns">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.ML.Runtime.Data.ColumnInfo&gt; GetColumns (Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.ML.Runtime.Data.ColumnInfo&gt; GetColumns(valuetype Microsoft.ML.Runtime.Data.RoleMappedSchema/ColumnRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RoleMappedSchema.GetColumns(Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumns (role As RoleMappedSchema.ColumnRole) As IReadOnlyList(Of ColumnInfo)" />
      <MemberSignature Language="F#" Value="member this.GetColumns : Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.ML.Runtime.Data.ColumnInfo&gt;" Usage="roleMappedSchema.GetColumns role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.ML.Runtime.Data.ColumnInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.ML.Runtime.Data.RoleMappedSchema+ColumnRole" />
      </Parameters>
      <Docs>
        <param name="role">To be added.</param>
        <summary>
            If there are columns of the given role, this returns the infos as a readonly list. Otherwise,
            it returns null.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniqueColumn">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.ColumnInfo GetUniqueColumn (Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.Data.ColumnInfo GetUniqueColumn(valuetype Microsoft.ML.Runtime.Data.RoleMappedSchema/ColumnRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RoleMappedSchema.GetUniqueColumn(Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUniqueColumn (role As RoleMappedSchema.ColumnRole) As ColumnInfo" />
      <MemberSignature Language="F#" Value="member this.GetUniqueColumn : Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole -&gt; Microsoft.ML.Runtime.Data.ColumnInfo" Usage="roleMappedSchema.GetUniqueColumn role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ColumnInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.ML.Runtime.Data.RoleMappedSchema+ColumnRole" />
      </Parameters>
      <Docs>
        <param name="role">The role to look up</param>
        <summary>
            Returns the <see cref="T:Microsoft.ML.Runtime.Data.ColumnInfo" /> corresponding to <paramref name="role" /> if there is
            exactly one such mapping, and otherwise throws an exception.
            </summary>
        <returns>The info corresponding to that role, assuming there was only one column
            mapped to that</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.ColumnInfo Group { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.Data.ColumnInfo Group" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.Group" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Group As ColumnInfo" />
      <MemberSignature Language="F#" Value="member this.Group : Microsoft.ML.Runtime.Data.ColumnInfo" Usage="Microsoft.ML.Runtime.Data.RoleMappedSchema.Group" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ColumnInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole.Group" /> column, when there is exactly one (null otherwise).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Has">
      <MemberSignature Language="C#" Value="public bool Has (Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Has(valuetype Microsoft.ML.Runtime.Data.RoleMappedSchema/ColumnRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RoleMappedSchema.Has(Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole)" />
      <MemberSignature Language="VB.NET" Value="Public Function Has (role As RoleMappedSchema.ColumnRole) As Boolean" />
      <MemberSignature Language="F#" Value="member this.Has : Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole -&gt; bool" Usage="roleMappedSchema.Has role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.ML.Runtime.Data.RoleMappedSchema+ColumnRole" />
      </Parameters>
      <Docs>
        <param name="role">To be added.</param>
        <summary>
            Returns whether there are any columns with the given column role.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMultiple">
      <MemberSignature Language="C#" Value="public bool HasMultiple (Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasMultiple(valuetype Microsoft.ML.Runtime.Data.RoleMappedSchema/ColumnRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RoleMappedSchema.HasMultiple(Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasMultiple (role As RoleMappedSchema.ColumnRole) As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasMultiple : Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole -&gt; bool" Usage="roleMappedSchema.HasMultiple role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.ML.Runtime.Data.RoleMappedSchema+ColumnRole" />
      </Parameters>
      <Docs>
        <param name="role">To be added.</param>
        <summary>
            Returns whether there are two or more columns of the given role.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasUnique">
      <MemberSignature Language="C#" Value="public bool HasUnique (Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasUnique(valuetype Microsoft.ML.Runtime.Data.RoleMappedSchema/ColumnRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RoleMappedSchema.HasUnique(Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasUnique (role As RoleMappedSchema.ColumnRole) As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasUnique : Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole -&gt; bool" Usage="roleMappedSchema.HasUnique role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.ML.Runtime.Data.RoleMappedSchema+ColumnRole" />
      </Parameters>
      <Docs>
        <param name="role">To be added.</param>
        <summary>
            Returns whether there is exactly one column of the given role.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.ColumnInfo Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.Data.ColumnInfo Label" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.Label" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Label As ColumnInfo" />
      <MemberSignature Language="F#" Value="member this.Label : Microsoft.ML.Runtime.Data.ColumnInfo" Usage="Microsoft.ML.Runtime.Data.RoleMappedSchema.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ColumnInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole.Label" /> column, when there is exactly one (null otherwise).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.ColumnInfo Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.Data.ColumnInfo Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As ColumnInfo" />
      <MemberSignature Language="F#" Value="member this.Name : Microsoft.ML.Runtime.Data.ColumnInfo" Usage="Microsoft.ML.Runtime.Data.RoleMappedSchema.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ColumnInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole.Name" /> column, when there is exactly one (null otherwise).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.ISchema Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.Data.ISchema Schema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As ISchema" />
      <MemberSignature Language="F#" Value="member this.Schema : Microsoft.ML.Runtime.Data.ISchema" Usage="Microsoft.ML.Runtime.Data.RoleMappedSchema.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ISchema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The source <see cref="T:Microsoft.ML.Runtime.Data.ISchema" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Weight">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.ColumnInfo Weight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.Data.ColumnInfo Weight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.Weight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Weight As ColumnInfo" />
      <MemberSignature Language="F#" Value="member this.Weight : Microsoft.ML.Runtime.Data.ColumnInfo" Usage="Microsoft.ML.Runtime.Data.RoleMappedSchema.Weight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ColumnInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <see cref="P:Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole.Weight" /> column, when there is exactly one (null otherwise).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>