<Type Name="IValueMapperDist" FullName="Microsoft.ML.Runtime.Data.IValueMapperDist">
  <TypeSignature Language="C#" Value="public interface IValueMapperDist : Microsoft.ML.Runtime.Data.IValueMapper" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IValueMapperDist implements class Microsoft.ML.Runtime.Data.IValueMapper" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.IValueMapperDist" />
  <TypeSignature Language="VB.NET" Value="Public Interface IValueMapperDist&#xA;Implements IValueMapper" />
  <TypeSignature Language="F#" Value="type IValueMapperDist = interface&#xA;    interface IValueMapper" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Data.IValueMapper</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Interface for mapping a single input value (of an indicated ColumnType) to an output value
            plus distribution value (of indicated ColumnTypes). This interface is commonly implemented
            by predictors. Note that the input, output, and distribution ColumnTypes determine the proper
            type arguments for GetMapper, but typically contain additional information like
            vector lengths.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DistType">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.ColumnType DistType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.Data.ColumnType DistType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.IValueMapperDist.DistType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DistType As ColumnType" />
      <MemberSignature Language="F#" Value="member this.DistType : Microsoft.ML.Runtime.Data.ColumnType" Usage="Microsoft.ML.Runtime.Data.IValueMapperDist.DistType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ColumnType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMapper&lt;TSrc,TDst,TDist&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.ValueMapper&lt;TSrc,TDst,TDist&gt; GetMapper&lt;TSrc,TDst,TDist&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.Data.ValueMapper`3&lt;!!TSrc, !!TDst, !!TDist&gt; GetMapper&lt;TSrc, TDst, TDist&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.IValueMapperDist.GetMapper``3" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMapper(Of TSrc, TDst, TDist) () As ValueMapper(Of TSrc, TDst, TDist)" />
      <MemberSignature Language="F#" Value="abstract member GetMapper : unit -&gt; Microsoft.ML.Runtime.Data.ValueMapper&lt;'Src, 'Dst, 'Dist&gt;" Usage="iValueMapperDist.GetMapper " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ValueMapper&lt;TSrc,TDst,TDist&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSrc" />
        <TypeParameter Name="TDst" />
        <TypeParameter Name="TDist" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TSrc">To be added.</typeparam>
        <typeparam name="TDst">To be added.</typeparam>
        <typeparam name="TDist">To be added.</typeparam>
        <summary>
            Get a delegate used for mapping from input to output values. Note that the delegate
            should only be used on a single thread - it should NOT be assumed to be safe for concurrency.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>