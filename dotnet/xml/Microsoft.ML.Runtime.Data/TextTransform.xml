<Type Name="TextTransform" FullName="Microsoft.ML.Runtime.Data.TextTransform">
  <TypeSignature Language="C#" Value="public sealed class TextTransform : Microsoft.ML.Core.Data.IEstimator&lt;Microsoft.ML.Core.Data.ITransformer&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TextTransform extends System.Object implements class Microsoft.ML.Core.Data.IEstimator`1&lt;class Microsoft.ML.Core.Data.ITransformer&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.TextTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TextTransform&#xA;Implements IEstimator(Of ITransformer)" />
  <TypeSignature Language="F#" Value="type TextTransform = class&#xA;    interface IEstimator&lt;ITransformer&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Core.Data.IEstimator&lt;Microsoft.ML.Core.Data.ITransformer&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
        A transform that turns a collection of text documents into numerical feature vectors.
        The feature vectors are normalized counts of (word and/or character) ngrams in a given tokenized text.
      </summary>
    <remarks>
        The TextFeaturizer transform gives user one-stop solution for doing:
        <list type="bullet"><item><description>Language Detection</description></item><item><description>Tokenzation​</description></item><item><description>Text normalization</description></item><item><description>Predefined and custom stopwords removal.</description></item><item><description>Word-based or character-based Ngram and SkipGram extraction.​</description></item><item><description>TF, IDF or TF-IDF.</description></item><item><description>L-p vector normalization.​</description></item></list>
        The TextFeaturizer will show the transformed text, after being applied.
        It converts a collection of text columns to a matrix of token  ngrams/skip-grams counts.
        Features are made of (word/character) n-grams/skip-grams​ and the number of features are equal to the vocabulary size found by analyzing the data.
      </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextTransform (Microsoft.ML.Runtime.IHostEnvironment env, System.Collections.Generic.IEnumerable&lt;string&gt; inputColumns, string outputColumn, Action&lt;Microsoft.ML.Runtime.Data.TextTransform.Settings&gt; advancedSettings = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, class System.Collections.Generic.IEnumerable`1&lt;string&gt; inputColumns, string outputColumn, class System.Action`1&lt;class Microsoft.ML.Runtime.Data.TextTransform/Settings&gt; advancedSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TextTransform.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.Collections.Generic.IEnumerable{System.String},System.String,System.Action{Microsoft.ML.Runtime.Data.TextTransform.Settings})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, inputColumns As IEnumerable(Of String), outputColumn As String, Optional advancedSettings As Action(Of TextTransform.Settings) = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.TextTransform : Microsoft.ML.Runtime.IHostEnvironment * seq&lt;string&gt; * string * Action&lt;Microsoft.ML.Runtime.Data.TextTransform.Settings&gt; -&gt; Microsoft.ML.Runtime.Data.TextTransform" Usage="new Microsoft.ML.Runtime.Data.TextTransform (env, inputColumns, outputColumn, advancedSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="inputColumns" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="outputColumn" Type="System.String" />
        <Parameter Name="advancedSettings" Type="System.Action&lt;Microsoft.ML.Runtime.Data.TextTransform+Settings&gt;" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="inputColumns">To be added.</param>
        <param name="outputColumn">To be added.</param>
        <param name="advancedSettings">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextTransform (Microsoft.ML.Runtime.IHostEnvironment env, string inputColumn, string outputColumn = null, Action&lt;Microsoft.ML.Runtime.Data.TextTransform.Settings&gt; advancedSettings = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, string inputColumn, string outputColumn, class System.Action`1&lt;class Microsoft.ML.Runtime.Data.TextTransform/Settings&gt; advancedSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TextTransform.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.String,System.Action{Microsoft.ML.Runtime.Data.TextTransform.Settings})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, inputColumn As String, Optional outputColumn As String = null, Optional advancedSettings As Action(Of TextTransform.Settings) = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.TextTransform : Microsoft.ML.Runtime.IHostEnvironment * string * string * Action&lt;Microsoft.ML.Runtime.Data.TextTransform.Settings&gt; -&gt; Microsoft.ML.Runtime.Data.TextTransform" Usage="new Microsoft.ML.Runtime.Data.TextTransform (env, inputColumn, outputColumn, advancedSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="inputColumn" Type="System.String" />
        <Parameter Name="outputColumn" Type="System.String" />
        <Parameter Name="advancedSettings" Type="System.Action&lt;Microsoft.ML.Runtime.Data.TextTransform+Settings&gt;" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="inputColumn">To be added.</param>
        <param name="outputColumn">To be added.</param>
        <param name="advancedSettings">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvancedSettings">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.TextTransform.Settings AdvancedSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.Data.TextTransform/Settings AdvancedSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.TextTransform.AdvancedSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdvancedSettings As TextTransform.Settings" />
      <MemberSignature Language="F#" Value="member this.AdvancedSettings : Microsoft.ML.Runtime.Data.TextTransform.Settings" Usage="Microsoft.ML.Runtime.Data.TextTransform.AdvancedSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.TextTransform+Settings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Core.Data.ITransformer Create (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Model.ModelLoadContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Core.Data.ITransformer Create(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Model.ModelLoadContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TextTransform.Create(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Model.ModelLoadContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (env As IHostEnvironment, ctx As ModelLoadContext) As ITransformer" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Model.ModelLoadContext -&gt; Microsoft.ML.Core.Data.ITransformer" Usage="Microsoft.ML.Runtime.Data.TextTransform.Create (env, ctx)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.ITransformer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.ModelLoadContext" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataTransform Create (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.TextTransform.Arguments args, Microsoft.ML.Runtime.Data.IDataView data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataTransform Create(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.TextTransform/Arguments args, class Microsoft.ML.Runtime.Data.IDataView data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TextTransform.Create(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.TextTransform.Arguments,Microsoft.ML.Runtime.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (env As IHostEnvironment, args As TextTransform.Arguments, data As IDataView) As IDataTransform" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.TextTransform.Arguments * Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.Data.IDataTransform" Usage="Microsoft.ML.Runtime.Data.TextTransform.Create (env, args, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" Index="0" />
        <Parameter Name="args" Type="Microsoft.ML.Runtime.Data.TextTransform+Arguments" Index="1" />
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.IDataView" Index="2" FrameworkAlternate="ml-dotnet" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultLanguage">
      <MemberSignature Language="C#" Value="public const Microsoft.ML.Runtime.Data.TextTransform.Language DefaultLanguage = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.ML.Runtime.Data.TextTransform/Language DefaultLanguage = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Data.TextTransform.DefaultLanguage" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultLanguage As TextTransform.Language  = 1" />
      <MemberSignature Language="F#" Value="val mutable DefaultLanguage : Microsoft.ML.Runtime.Data.TextTransform.Language" Usage="Microsoft.ML.Runtime.Data.TextTransform.DefaultLanguage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.TextTransform+Language</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fit">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Core.Data.ITransformer Fit (Microsoft.ML.Runtime.Data.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Core.Data.ITransformer Fit(class Microsoft.ML.Runtime.Data.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TextTransform.Fit(Microsoft.ML.Runtime.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fit (input As IDataView) As ITransformer" />
      <MemberSignature Language="F#" Value="abstract member Fit : Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Core.Data.ITransformer&#xA;override this.Fit : Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Core.Data.ITransformer" Usage="textTransform.Fit input" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IEstimator`1.Fit(Microsoft.ML.Runtime.Data.IDataView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.ITransformer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Core.Data.SchemaShape GetOutputSchema (Microsoft.ML.Core.Data.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Core.Data.SchemaShape GetOutputSchema(class Microsoft.ML.Core.Data.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TextTransform.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutputSchema (inputSchema As SchemaShape) As SchemaShape" />
      <MemberSignature Language="F#" Value="abstract member GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape&#xA;override this.GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape" Usage="textTransform.GetOutputSchema inputSchema" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IEstimator`1.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Core.Data.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputColumns">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyCollection&lt;string&gt; InputColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;string&gt; InputColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.TextTransform.InputColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputColumns As IReadOnlyCollection(Of String)" />
      <MemberSignature Language="F#" Value="member this.InputColumns : System.Collections.Generic.IReadOnlyCollection&lt;string&gt;" Usage="Microsoft.ML.Runtime.Data.TextTransform.InputColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputColumn">
      <MemberSignature Language="C#" Value="public readonly string OutputColumn;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly string OutputColumn" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Data.TextTransform.OutputColumn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly OutputColumn As String " />
      <MemberSignature Language="F#" Value="val mutable OutputColumn : string" Usage="Microsoft.ML.Runtime.Data.TextTransform.OutputColumn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>