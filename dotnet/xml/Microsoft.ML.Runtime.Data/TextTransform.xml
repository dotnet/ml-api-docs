<Type Name="TextTransform" FullName="Microsoft.ML.Runtime.Data.TextTransform">
  <TypeSignature Language="C#" Value="public static class TextTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TextTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.TextTransform" />
  <TypeSignature Language="VB.NET" Value="Public Class TextTransform" />
  <TypeSignature Language="F#" Value="type TextTransform = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
        A transform that turns a collection of text documents into numerical feature vectors.
        The feature vectors are normalized counts of (word and/or character) ngrams in a given tokenized text.
      </summary>
    <remarks>
        The TextFeaturizer transform gives user one-stop solution for doing:
        <list type="bullet"><item><description>Language Detection</description></item><item><description>Tokenzation​</description></item><item><description>Text normalization</description></item><item><description>Predefined and custom stopwords removal.</description></item><item><description>Word-based or character-based Ngram and SkipGram extraction.​</description></item><item><description>TF, IDF or TF-IDF.</description></item><item><description>L-p vector normalization.​</description></item></list>
        The TextFeaturizer will show the transformed text, after being applied.
        It converts a collection of text columns to a matrix of token  ngrams/skip-grams counts.
        Features are made of (word/character) n-grams/skip-grams​ and the number of features are equal to the vocabulary size found by analyzing the data.
      </remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataTransform Create (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.TextTransform.Arguments args, Microsoft.ML.Runtime.Data.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataTransform Create(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.TextTransform/Arguments args, class Microsoft.ML.Runtime.Data.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TextTransform.Create(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.TextTransform.Arguments,Microsoft.ML.Runtime.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (env As IHostEnvironment, args As TextTransform.Arguments, input As IDataView) As IDataTransform" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.TextTransform.Arguments * Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.Data.IDataTransform" Usage="Microsoft.ML.Runtime.Data.TextTransform.Create (env, args, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="args" Type="Microsoft.ML.Runtime.Data.TextTransform+Arguments" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultLanguage">
      <MemberSignature Language="C#" Value="public const Microsoft.ML.Runtime.Data.TextTransform.Language DefaultLanguage = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.ML.Runtime.Data.TextTransform/Language DefaultLanguage = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Data.TextTransform.DefaultLanguage" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultLanguage As TextTransform.Language  = 1" />
      <MemberSignature Language="F#" Value="val mutable DefaultLanguage : Microsoft.ML.Runtime.Data.TextTransform.Language" Usage="Microsoft.ML.Runtime.Data.TextTransform.DefaultLanguage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.TextTransform+Language</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>