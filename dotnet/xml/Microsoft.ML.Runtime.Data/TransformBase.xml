<Type Name="TransformBase" FullName="Microsoft.ML.Runtime.Data.TransformBase">
  <TypeSignature Language="C#" Value="public abstract class TransformBase : Microsoft.ML.Runtime.Data.IDataTransform, Microsoft.ML.Runtime.Data.IDataView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TransformBase extends System.Object implements class Microsoft.ML.Runtime.Data.IDataTransform, class Microsoft.ML.Runtime.Data.IDataView, class Microsoft.ML.Runtime.Data.ISchematized, class Microsoft.ML.Runtime.Model.ICanSaveModel" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.TransformBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TransformBase&#xA;Implements IDataTransform, IDataView" />
  <TypeSignature Language="F#" Value="type TransformBase = class&#xA;    interface IDataTransform&#xA;    interface IDataView&#xA;    interface ISchematized&#xA;    interface ICanSaveModel" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Data.IDataTransform</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Data.IDataView</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Base class for transforms.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TransformBase (Microsoft.ML.Runtime.IHost host, Microsoft.ML.Runtime.Data.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHost host, class Microsoft.ML.Runtime.Data.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TransformBase.#ctor(Microsoft.ML.Runtime.IHost,Microsoft.ML.Runtime.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (host As IHost, input As IDataView)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.TransformBase : Microsoft.ML.Runtime.IHost * Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.Data.TransformBase" Usage="new Microsoft.ML.Runtime.Data.TransformBase (host, input)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="Microsoft.ML.Runtime.IHost" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
      </Parameters>
      <Docs>
        <param name="host">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TransformBase (Microsoft.ML.Runtime.IHostEnvironment env, string name, Microsoft.ML.Runtime.Data.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, string name, class Microsoft.ML.Runtime.Data.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TransformBase.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,Microsoft.ML.Runtime.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (env As IHostEnvironment, name As String, input As IDataView)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.TransformBase : Microsoft.ML.Runtime.IHostEnvironment * string * Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.Data.TransformBase" Usage="new Microsoft.ML.Runtime.Data.TransformBase (env, name, input)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="name">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanShuffle">
      <MemberSignature Language="C#" Value="public virtual bool CanShuffle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanShuffle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.TransformBase.CanShuffle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanShuffle As Boolean" />
      <MemberSignature Language="F#" Value="member this.CanShuffle : bool" Usage="Microsoft.ML.Runtime.Data.TransformBase.CanShuffle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.Data.IDataView.CanShuffle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowCount">
      <MemberSignature Language="C#" Value="public abstract Nullable&lt;long&gt; GetRowCount (bool lazy = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;int64&gt; GetRowCount(bool lazy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TransformBase.GetRowCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRowCount (Optional lazy As Boolean = true) As Nullable(Of Long)" />
      <MemberSignature Language="F#" Value="abstract member GetRowCount : bool -&gt; Nullable&lt;int64&gt;" Usage="transformBase.GetRowCount lazy" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.Data.IDataView.GetRowCount(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lazy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="lazy">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowCursor">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.IRowCursor GetRowCursor (Func&lt;int,bool&gt; predicate, Microsoft.ML.Runtime.IRandom rand = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.Data.IRowCursor GetRowCursor(class System.Func`2&lt;int32, bool&gt; predicate, class Microsoft.ML.Runtime.IRandom rand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TransformBase.GetRowCursor(System.Func{System.Int32,System.Boolean},Microsoft.ML.Runtime.IRandom)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowCursor (predicate As Func(Of Integer, Boolean), Optional rand As IRandom = null) As IRowCursor" />
      <MemberSignature Language="F#" Value="abstract member GetRowCursor : Func&lt;int, bool&gt; * Microsoft.ML.Runtime.IRandom -&gt; Microsoft.ML.Runtime.Data.IRowCursor&#xA;override this.GetRowCursor : Func&lt;int, bool&gt; * Microsoft.ML.Runtime.IRandom -&gt; Microsoft.ML.Runtime.Data.IRowCursor" Usage="transformBase.GetRowCursor (predicate, rand)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.Data.IDataView.GetRowCursor(System.Func{System.Int32,System.Boolean},Microsoft.ML.Runtime.IRandom)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IRowCursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Func&lt;System.Int32,System.Boolean&gt;" />
        <Parameter Name="rand" Type="Microsoft.ML.Runtime.IRandom" />
      </Parameters>
      <Docs>
        <param name="predicate">To be added.</param>
        <param name="rand">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowCursorCore">
      <MemberSignature Language="C#" Value="protected abstract Microsoft.ML.Runtime.Data.IRowCursor GetRowCursorCore (Func&lt;int,bool&gt; predicate, Microsoft.ML.Runtime.IRandom rand = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.ML.Runtime.Data.IRowCursor GetRowCursorCore(class System.Func`2&lt;int32, bool&gt; predicate, class Microsoft.ML.Runtime.IRandom rand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TransformBase.GetRowCursorCore(System.Func{System.Int32,System.Boolean},Microsoft.ML.Runtime.IRandom)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetRowCursorCore (predicate As Func(Of Integer, Boolean), Optional rand As IRandom = null) As IRowCursor" />
      <MemberSignature Language="F#" Value="abstract member GetRowCursorCore : Func&lt;int, bool&gt; * Microsoft.ML.Runtime.IRandom -&gt; Microsoft.ML.Runtime.Data.IRowCursor" Usage="transformBase.GetRowCursorCore (predicate, rand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IRowCursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Func&lt;System.Int32,System.Boolean&gt;" />
        <Parameter Name="rand" Type="Microsoft.ML.Runtime.IRandom" />
      </Parameters>
      <Docs>
        <param name="predicate">To be added.</param>
        <param name="rand">To be added.</param>
        <summary>
            Create a single (non-parallel) row cursor.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowCursorSet">
      <MemberSignature Language="C#" Value="public abstract Microsoft.ML.Runtime.Data.IRowCursor[] GetRowCursorSet (out Microsoft.ML.Runtime.Data.IRowCursorConsolidator consolidator, Func&lt;int,bool&gt; predicate, int n, Microsoft.ML.Runtime.IRandom rand = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.Data.IRowCursor[] GetRowCursorSet([out] class Microsoft.ML.Runtime.Data.IRowCursorConsolidator&amp; consolidator, class System.Func`2&lt;int32, bool&gt; predicate, int32 n, class Microsoft.ML.Runtime.IRandom rand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TransformBase.GetRowCursorSet(Microsoft.ML.Runtime.Data.IRowCursorConsolidator@,System.Func{System.Int32,System.Boolean},System.Int32,Microsoft.ML.Runtime.IRandom)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRowCursorSet (ByRef consolidator As IRowCursorConsolidator, predicate As Func(Of Integer, Boolean), n As Integer, Optional rand As IRandom = null) As IRowCursor()" />
      <MemberSignature Language="F#" Value="abstract member GetRowCursorSet :  * Func&lt;int, bool&gt; * int * Microsoft.ML.Runtime.IRandom -&gt; Microsoft.ML.Runtime.Data.IRowCursor[]" Usage="transformBase.GetRowCursorSet (consolidator, predicate, n, rand)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.Data.IDataView.GetRowCursorSet(Microsoft.ML.Runtime.Data.IRowCursorConsolidator@,System.Func{System.Int32,System.Boolean},System.Int32,Microsoft.ML.Runtime.IRandom)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IRowCursor[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="consolidator" Type="Microsoft.ML.Runtime.Data.IRowCursorConsolidator" RefType="out" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Int32,System.Boolean&gt;" />
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="rand" Type="Microsoft.ML.Runtime.IRandom" />
      </Parameters>
      <Docs>
        <param name="consolidator">To be added.</param>
        <param name="predicate">To be added.</param>
        <param name="n">To be added.</param>
        <param name="rand">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="protected readonly Microsoft.ML.Runtime.IHost Host;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class Microsoft.ML.Runtime.IHost Host" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Data.TransformBase.Host" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Host As IHost " />
      <MemberSignature Language="F#" Value="val mutable Host : Microsoft.ML.Runtime.IHost" Usage="Microsoft.ML.Runtime.Data.TransformBase.Host" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public abstract void Save (Microsoft.ML.Runtime.Model.ModelSaveContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class Microsoft.ML.Runtime.Model.ModelSaveContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TransformBase.Save(Microsoft.ML.Runtime.Model.ModelSaveContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Save (ctx As ModelSaveContext)" />
      <MemberSignature Language="F#" Value="abstract member Save : Microsoft.ML.Runtime.Model.ModelSaveContext -&gt; unit" Usage="transformBase.Save ctx" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.Model.ICanSaveModel.Save(Microsoft.ML.Runtime.Model.ModelSaveContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.ModelSaveContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public abstract Microsoft.ML.Runtime.Data.ISchema Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.Data.ISchema Schema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.TransformBase.Schema" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Schema As ISchema" />
      <MemberSignature Language="F#" Value="member this.Schema : Microsoft.ML.Runtime.Data.ISchema" Usage="Microsoft.ML.Runtime.Data.TransformBase.Schema" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.Data.ISchematized.Schema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ISchema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldUseParallelCursors">
      <MemberSignature Language="C#" Value="protected abstract Nullable&lt;bool&gt; ShouldUseParallelCursors (Func&lt;int,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Nullable`1&lt;bool&gt; ShouldUseParallelCursors(class System.Func`2&lt;int32, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TransformBase.ShouldUseParallelCursors(System.Func{System.Int32,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ShouldUseParallelCursors (predicate As Func(Of Integer, Boolean)) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ShouldUseParallelCursors : Func&lt;int, bool&gt; -&gt; Nullable&lt;bool&gt;" Usage="transformBase.ShouldUseParallelCursors predicate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Func&lt;System.Int32,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="predicate">To be added.</param>
        <summary>
            This returns false when this transform cannot support parallel cursors, null when it
            doesn't care, and true when it benefits from parallel cursors. For example, a transform
            that simply affects metadata, but not column values should return null, while a transform
            that does a bunch of computation should return true (if legal).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.IDataView Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.Data.IDataView Source" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.TransformBase.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As IDataView" />
      <MemberSignature Language="F#" Value="member this.Source : Microsoft.ML.Runtime.Data.IDataView" Usage="Microsoft.ML.Runtime.Data.TransformBase.Source" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.Data.IDataTransform.Source</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>