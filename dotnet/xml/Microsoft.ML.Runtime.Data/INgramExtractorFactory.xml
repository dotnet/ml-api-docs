<Type Name="INgramExtractorFactory" FullName="Microsoft.ML.Runtime.Data.INgramExtractorFactory">
  <TypeSignature Language="C#" Value="public interface INgramExtractorFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INgramExtractorFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.INgramExtractorFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface INgramExtractorFactory" />
  <TypeSignature Language="F#" Value="type INgramExtractorFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            An ngram extractor factory interface to create an ngram extractor transform.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.IDataTransform Create (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.IDataView input, Microsoft.ML.Runtime.Data.ExtractorColumn[] cols);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.Data.IDataTransform Create(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.IDataView input, class Microsoft.ML.Runtime.Data.ExtractorColumn[] cols) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.INgramExtractorFactory.Create(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.Data.ExtractorColumn[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (env As IHostEnvironment, input As IDataView, cols As ExtractorColumn()) As IDataTransform" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.Data.ExtractorColumn[] -&gt; Microsoft.ML.Runtime.Data.IDataTransform" Usage="iNgramExtractorFactory.Create (env, input, cols)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="cols" Type="Microsoft.ML.Runtime.Data.ExtractorColumn[]" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <param name="cols">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseHashingTrick">
      <MemberSignature Language="C#" Value="public bool UseHashingTrick { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseHashingTrick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.INgramExtractorFactory.UseHashingTrick" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseHashingTrick As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseHashingTrick : bool" Usage="Microsoft.ML.Runtime.Data.INgramExtractorFactory.UseHashingTrick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether the extractor transform created by this factory uses the hashing trick
            (by using <see cref="T:Microsoft.ML.Transforms.HashTransformer" /> or <see cref="T:Microsoft.ML.Runtime.Data.NgramHashTransform" />, for example).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>