<Type Name="IRowToRowMapper" FullName="Microsoft.ML.Runtime.Data.IRowToRowMapper">
  <TypeSignature Language="C#" Value="public interface IRowToRowMapper : Microsoft.ML.Runtime.Data.ISchematized" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRowToRowMapper implements class Microsoft.ML.Runtime.Data.ISchematized" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.IRowToRowMapper" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRowToRowMapper&#xA;Implements ISchematized" />
  <TypeSignature Language="F#" Value="type IRowToRowMapper = interface&#xA;    interface ISchematized" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Data.ISchematized</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            This interface maps an input <see cref="T:Microsoft.ML.Runtime.Data.IRow" /> to an output <see cref="T:Microsoft.ML.Runtime.Data.IRow" />. Typically, the output contains
            both the input columns and new columns added by the implementing class, although some implementations may
            return a subset of the input columns.
            This interface is similar to <see cref="T:Microsoft.ML.Runtime.Data.ISchemaBoundRowMapper" />, except it does not have any input role mappings,
            so to rebind, the same input column names must be used.
            Implementing of this object are typically created using a definie input <see cref="T:Microsoft.ML.Runtime.Data.ISchema" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetDependencies">
      <MemberSignature Language="C#" Value="public Func&lt;int,bool&gt; GetDependencies (Func&lt;int,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Func`2&lt;int32, bool&gt; GetDependencies(class System.Func`2&lt;int32, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.IRowToRowMapper.GetDependencies(System.Func{System.Int32,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDependencies (predicate As Func(Of Integer, Boolean)) As Func(Of Integer, Boolean)" />
      <MemberSignature Language="F#" Value="abstract member GetDependencies : Func&lt;int, bool&gt; -&gt; Func&lt;int, bool&gt;" Usage="iRowToRowMapper.GetDependencies predicate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Int32,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Func&lt;System.Int32,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="predicate">To be added.</param>
        <summary>
            Given a predicate specifying which columns are needed, return a predicate indicating which input columns are
            needed. The domain of the function is defined over the indices of the columns of <see cref="P:Microsoft.ML.Runtime.Data.ISchema.ColumnCount" />
            for <see cref="P:Microsoft.ML.Runtime.Data.IRowToRowMapper.InputSchema" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRow">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.IRow GetRow (Microsoft.ML.Runtime.Data.IRow input, Func&lt;int,bool&gt; active, out Action disposer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.Data.IRow GetRow(class Microsoft.ML.Runtime.Data.IRow input, class System.Func`2&lt;int32, bool&gt; active, [out] class System.Action&amp; disposer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.IRowToRowMapper.GetRow(Microsoft.ML.Runtime.Data.IRow,System.Func{System.Int32,System.Boolean},System.Action@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRow (input As IRow, active As Func(Of Integer, Boolean), ByRef disposer As Action) As IRow" />
      <MemberSignature Language="F#" Value="abstract member GetRow : Microsoft.ML.Runtime.Data.IRow * Func&lt;int, bool&gt; *  -&gt; Microsoft.ML.Runtime.Data.IRow" Usage="iRowToRowMapper.GetRow (input, active, disposer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IRow" />
        <Parameter Name="active" Type="System.Func&lt;System.Int32,System.Boolean&gt;" />
        <Parameter Name="disposer" Type="System.Action" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="active">To be added.</param>
        <param name="disposer">To be added.</param>
        <summary>
             Get an <see cref="T:Microsoft.ML.Runtime.Data.IRow" /> with the indicated active columns, based on the input <paramref name="input" />.
             The active columns are those for which <paramref name="active" /> returns true. Getting values on inactive
             columns of the returned row will throw. Null predicates are disallowed.
            
             The <see cref="P:Microsoft.ML.Runtime.Data.ISchematized.Schema" /> of <paramref name="input" /> should be the same object as
             <see cref="P:Microsoft.ML.Runtime.Data.IRowToRowMapper.InputSchema" />. Implementors of this method should throw if that is not the case. Conversely,
             the returned value must have the same schema as <see cref="P:Microsoft.ML.Runtime.Data.ISchematized.Schema" />.
            
             This method creates a live connection between the input <see cref="T:Microsoft.ML.Runtime.Data.IRow" /> and the output <see cref="T:Microsoft.ML.Runtime.Data.IRow" />. In particular, when the getters of the output <see cref="T:Microsoft.ML.Runtime.Data.IRow" /> are invoked, they invoke the
             getters of the input row and base the output values on the current values of the input <see cref="T:Microsoft.ML.Runtime.Data.IRow" />.
             The output <see cref="T:Microsoft.ML.Runtime.Data.IRow" /> values are re-computed when requested through the getters.
            
             The optional <paramref name="disposer" /> should be invoked by any user of this row mapping, once it no
             longer needs the <see cref="T:Microsoft.ML.Runtime.Data.IRow" />. If no action is needed when the cursor is Disposed, the implementation
             should set <paramref name="disposer" /> to <c>null</c>, otherwise it should be set to a delegate to be
             invoked by the code calling this object. (E.g., a wrapping cursor's <see cref="M:System.IDisposable.Dispose" />
             method. It's best for this action to be idempotent - calling it multiple times should be equivalent to
             calling it once.
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.ISchema InputSchema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.Data.ISchema InputSchema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.IRowToRowMapper.InputSchema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputSchema As ISchema" />
      <MemberSignature Language="F#" Value="member this.InputSchema : Microsoft.ML.Runtime.Data.ISchema" Usage="Microsoft.ML.Runtime.Data.IRowToRowMapper.InputSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ISchema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Mappers are defined as accepting inputs with this very specific schema.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>