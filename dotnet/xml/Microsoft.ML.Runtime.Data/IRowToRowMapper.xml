<Type Name="IRowToRowMapper" FullName="Microsoft.ML.Runtime.Data.IRowToRowMapper">
  <TypeSignature Language="C#" Value="public interface IRowToRowMapper" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRowToRowMapper" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.IRowToRowMapper" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRowToRowMapper" />
  <TypeSignature Language="F#" Value="type IRowToRowMapper = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            This interface maps an input <see cref="T:Microsoft.ML.Runtime.Data.IRow" /> to an output <see cref="T:Microsoft.ML.Runtime.Data.IRow" />. Typically, the output contains
            both the input columns and new columns added by the implementing class, although some implementations may
            return a subset of the input columns.
            This interface is similar to <see cref="T:Microsoft.ML.Runtime.Data.ISchemaBoundRowMapper" />, except it does not have any input role mappings,
            so to rebind, the same input column names must be used.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetDependencies">
      <MemberSignature Language="C#" Value="public Func&lt;int,bool&gt; GetDependencies (Func&lt;int,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Func`2&lt;int32, bool&gt; GetDependencies(class System.Func`2&lt;int32, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.IRowToRowMapper.GetDependencies(System.Func{System.Int32,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDependencies (predicate As Func(Of Integer, Boolean)) As Func(Of Integer, Boolean)" />
      <MemberSignature Language="F#" Value="abstract member GetDependencies : Func&lt;int, bool&gt; -&gt; Func&lt;int, bool&gt;" Usage="iRowToRowMapper.GetDependencies predicate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Int32,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Func&lt;System.Int32,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="predicate">To be added.</param>
        <summary>
            Given a predicate specifying which columns are needed, return a predicate
            indicating which input columns are needed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRow">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.IRow GetRow (Microsoft.ML.Runtime.Data.IRow input, Func&lt;int,bool&gt; active, out Action disposer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.Data.IRow GetRow(class Microsoft.ML.Runtime.Data.IRow input, class System.Func`2&lt;int32, bool&gt; active, [out] class System.Action&amp; disposer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.IRowToRowMapper.GetRow(Microsoft.ML.Runtime.Data.IRow,System.Func{System.Int32,System.Boolean},System.Action@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRow (input As IRow, active As Func(Of Integer, Boolean), ByRef disposer As Action) As IRow" />
      <MemberSignature Language="F#" Value="abstract member GetRow : Microsoft.ML.Runtime.Data.IRow * Func&lt;int, bool&gt; *  -&gt; Microsoft.ML.Runtime.Data.IRow" Usage="iRowToRowMapper.GetRow (input, active, disposer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IRow" />
        <Parameter Name="active" Type="System.Func&lt;System.Int32,System.Boolean&gt;" />
        <Parameter Name="disposer" Type="System.Action&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="active">To be added.</param>
        <param name="disposer">To be added.</param>
        <summary>
            Get an IRow based on the input IRow with the indicated active columns. The active columns are those for which
            predicate(col) returns true. Getting values on inactive columns will throw. Null predicates are disallowed.
            The schema of input should match the InputSchema.
            This method creates a live connection between the input IRow and the output IRow. In particular, when the
            getters of the output IRow are invoked, they invoke the getters of the input row and base the output values on 
            the current values of the input IRow. The output IRow values are re-computed when requested through the getters.
            The optional disposer is invoked by the cursor wrapping, when it no longer needs the IRow.
            If no action is needed when the cursor is Disposed, the override should set disposer to null,
            otherwise it should be set to a delegate to be invoked by the cursor's Dispose method. It's best
            for this action to be idempotent - calling it multiple times should be equivalent to calling it once.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>