<Type Name="RootCursorBase" FullName="Microsoft.ML.Runtime.Data.RootCursorBase">
  <TypeSignature Language="C#" Value="public abstract class RootCursorBase : IDisposable, Microsoft.ML.Runtime.Data.ICursor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RootCursorBase extends System.Object implements class Microsoft.ML.Runtime.Data.ICounted, class Microsoft.ML.Runtime.Data.ICursor, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.RootCursorBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RootCursorBase&#xA;Implements ICursor, IDisposable" />
  <TypeSignature Language="F#" Value="type RootCursorBase = class&#xA;    interface ICursor&#xA;    interface ICounted&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class RootCursorBase abstract : IDisposable, Microsoft::ML::Runtime::Data::ICursor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Data.ICursor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Base class for creating a cursor with default tracking of <see cref="P:Microsoft.ML.Runtime.Data.RootCursorBase.Position" /> and <see cref="P:Microsoft.ML.Runtime.Data.RootCursorBase.State" />
            with a default implementation of <see cref="M:Microsoft.ML.Runtime.Data.RootCursorBase.MoveManyCore(System.Int64)" /> (call <see cref="M:Microsoft.ML.Runtime.Data.RootCursorBase.MoveNextCore" /> repeatedly).
            This cursor base class returns "this" from <see cref="M:Microsoft.ML.Runtime.Data.RootCursorBase.GetRootCursor" />. That is, all
            <see cref="M:Microsoft.ML.Runtime.Data.RootCursorBase.MoveNext" />/<see cref="M:Microsoft.ML.Runtime.Data.RootCursorBase.MoveMany(System.Int64)" /> calls will be seen by this cursor. For a cursor
            that has an input cursor and does NOT need notification on <see cref="M:Microsoft.ML.Runtime.Data.RootCursorBase.MoveNext" />/<see cref="M:Microsoft.ML.Runtime.Data.RootCursorBase.MoveMany(System.Int64)" />,
            use <see cref="T:Microsoft.ML.Runtime.Data.SynchronizedCursorBase`1" /> .
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RootCursorBase (Microsoft.ML.Runtime.IChannelProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IChannelProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RootCursorBase.#ctor(Microsoft.ML.Runtime.IChannelProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (provider As IChannelProvider)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.RootCursorBase : Microsoft.ML.Runtime.IChannelProvider -&gt; Microsoft.ML.Runtime.Data.RootCursorBase" Usage="new Microsoft.ML.Runtime.Data.RootCursorBase provider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RootCursorBase(Microsoft::ML::Runtime::IChannelProvider ^ provider);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; RootCursorBase(Microsoft::ML::Runtime::IChannelProvider ^ provider);" />
      <MemberSignature Language="C++ WINRT" Value=" RootCursorBase(Microsoft::ML::Runtime::IChannelProvider const &amp; provider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="Microsoft.ML.Runtime.IChannelProvider" />
      </Parameters>
      <Docs>
        <param name="provider">Channel provider</param>
        <summary>
            Creates an instance of the RootCursorBase class
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Batch">
      <MemberSignature Language="C#" Value="public abstract long Batch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Batch" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.RootCursorBase.Batch" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Batch As Long" />
      <MemberSignature Language="F#" Value="member this.Batch : int64" Usage="Microsoft.ML.Runtime.Data.RootCursorBase.Batch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long Batch { long get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; abstract property long long Batch { long long get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.Data.ICounted.Batch</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ch">
      <MemberSignature Language="C#" Value="protected readonly Microsoft.ML.Runtime.IChannel Ch;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class Microsoft.ML.Runtime.IChannel Ch" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Data.RootCursorBase.Ch" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Ch As IChannel " />
      <MemberSignature Language="F#" Value="val mutable Ch : Microsoft.ML.Runtime.IChannel" Usage="Microsoft.ML.Runtime.Data.RootCursorBase.Ch" />
      <MemberSignature Language="C++ CLI" Value="protected: initonly Microsoft::ML::Runtime::IChannel ^ Ch;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IChannel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RootCursorBase.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="rootCursorBase.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIdGetter">
      <MemberSignature Language="C#" Value="public abstract Microsoft.ML.Runtime.Data.ValueGetter&lt;Microsoft.ML.Runtime.Data.UInt128&gt; GetIdGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.Data.ValueGetter`1&lt;valuetype Microsoft.ML.Runtime.Data.UInt128&gt; GetIdGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RootCursorBase.GetIdGetter" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIdGetter () As ValueGetter(Of UInt128)" />
      <MemberSignature Language="F#" Value="abstract member GetIdGetter : unit -&gt; Microsoft.ML.Runtime.Data.ValueGetter&lt;Microsoft.ML.Runtime.Data.UInt128&gt;" Usage="rootCursorBase.GetIdGetter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Microsoft::ML::Runtime::Data::ValueGetter&lt;Microsoft::ML::Runtime::Data::UInt128&gt; ^ GetIdGetter();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.Data.ICounted.GetIdGetter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ValueGetter&lt;Microsoft.ML.Runtime.Data.UInt128&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRootCursor">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.ICursor GetRootCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.Data.ICursor GetRootCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RootCursorBase.GetRootCursor" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRootCursor () As ICursor" />
      <MemberSignature Language="F#" Value="abstract member GetRootCursor : unit -&gt; Microsoft.ML.Runtime.Data.ICursor&#xA;override this.GetRootCursor : unit -&gt; Microsoft.ML.Runtime.Data.ICursor" Usage="rootCursorBase.GetRootCursor " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::ML::Runtime::Data::ICursor ^ GetRootCursor();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.Data.ICursor.GetRootCursor</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ICursor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a cursor that can be used for invoking <see cref="P:Microsoft.ML.Runtime.Data.RootCursorBase.Position" />, <see cref="P:Microsoft.ML.Runtime.Data.RootCursorBase.State" />,
            <see cref="M:Microsoft.ML.Runtime.Data.RootCursorBase.MoveNext" />, and <see cref="M:Microsoft.ML.Runtime.Data.RootCursorBase.MoveMany(System.Int64)" />, with results identical to calling
            those on this cursor. Generally, if the root cursor is not the same as this cursor, using
            the root cursor will be faster.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGood">
      <MemberSignature Language="C#" Value="protected bool IsGood { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGood" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.RootCursorBase.IsGood" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsGood As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsGood : bool" Usage="Microsoft.ML.Runtime.Data.RootCursorBase.IsGood" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsGood { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; property bool IsGood { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Convenience property for checking whether the current state of the cursor is <see cref="F:Microsoft.ML.Runtime.Data.CursorState.Good" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveMany">
      <MemberSignature Language="C#" Value="public bool MoveMany (long count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveMany(int64 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RootCursorBase.MoveMany(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveMany (count As Long) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member MoveMany : int64 -&gt; bool&#xA;override this.MoveMany : int64 -&gt; bool" Usage="rootCursorBase.MoveMany count" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveMany(long count);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool MoveMany(long long count);" />
      <MemberSignature Language="C++ WINRT" Value="bool MoveMany(long count);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.Data.ICursor.MoveMany(System.Int64)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveManyCore">
      <MemberSignature Language="C#" Value="protected virtual bool MoveManyCore (long count);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MoveManyCore(int64 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RootCursorBase.MoveManyCore(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MoveManyCore (count As Long) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member MoveManyCore : int64 -&gt; bool&#xA;override this.MoveManyCore : int64 -&gt; bool" Usage="rootCursorBase.MoveManyCore count" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool MoveManyCore(long count);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual bool MoveManyCore(long long count);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool MoveManyCore(long count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="count">The number of rows to move forward.</param>
        <summary>
            Default implementation is to simply call MoveNextCore repeatedly. Derived classes should
            override if they can do better.
            </summary>
        <returns>Whether the move forward is on a valid row</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RootCursorBase.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="rootCursorBase.MoveNext " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="C++ WINRT" Value="bool MoveNext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.Data.ICursor.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNextCore">
      <MemberSignature Language="C#" Value="protected abstract bool MoveNextCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MoveNextCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.RootCursorBase.MoveNextCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function MoveNextCore () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member MoveNextCore : unit -&gt; bool" Usage="rootCursorBase.MoveNextCore " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool MoveNextCore();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; abstract bool MoveNextCore();" />
      <MemberSignature Language="C++ WINRT" Value=" abstract bool MoveNextCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Core implementation of <see cref="M:Microsoft.ML.Runtime.Data.RootCursorBase.MoveNext" />, called if the cursor state is not
            <see cref="F:Microsoft.ML.Runtime.Data.CursorState.Done" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public long Position { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.RootCursorBase.Position" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Position As Long" />
      <MemberSignature Language="F#" Value="member this.Position : int64" Usage="Microsoft.ML.Runtime.Data.RootCursorBase.Position" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Position { long get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property long long Position { long long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Zero-based position of the cursor.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.CursorState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Runtime.Data.CursorState State" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.RootCursorBase.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As CursorState" />
      <MemberSignature Language="F#" Value="member this.State : Microsoft.ML.Runtime.Data.CursorState" Usage="Microsoft.ML.Runtime.Data.RootCursorBase.State" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ML::Runtime::Data::CursorState State { Microsoft::ML::Runtime::Data::CursorState get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::ML::Runtime::Data::CursorState State { Microsoft::ML::Runtime::Data::CursorState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.CursorState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>