<Type Name="TermTransform+TermMap+HashArrayImpl&lt;T&gt;" FullName="Microsoft.ML.Runtime.Data.TermTransform+TermMap+HashArrayImpl&lt;T&gt;">
  <TypeSignature Language="C#" Value="public sealed class TermTransform.TermMap.HashArrayImpl&lt;T&gt; : Microsoft.ML.Runtime.Data.TermTransform.TermMap&lt;T&gt; where T : IEquatable&lt;T&gt;, IComparable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit TermTransform/TermMap/HashArrayImpl`1&lt;(class System.IEquatable`1&lt;!T&gt;, class System.IComparable`1&lt;!T&gt;) T&gt; extends Microsoft.ML.Runtime.Data.TermTransform/TermMap`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.TermTransform.TermMap.HashArrayImpl`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TermTransform.TermMap.HashArrayImpl(Of T)&#xA;Inherits TermTransform.TermMap(Of T)" />
  <TypeSignature Language="F#" Value="type TermTransform.TermMap.HashArrayImpl&lt;'T (requires 'T :&gt; IEquatable&lt;'T&gt; and 'T :&gt; IComparable&lt;'T&gt;)&gt; = class&#xA;    inherit TermTransform.TermMap&lt;'T (requires 'T :&gt; IEquatable&lt;'T&gt; and 'T :&gt; IComparable&lt;'T&gt;)&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <InterfaceName>System.IEquatable&lt;T&gt;</InterfaceName>
        <InterfaceName>System.IComparable&lt;T&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.Data.TermTransform+TermMap&lt;T&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">T</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HashArrayImpl (Microsoft.ML.Runtime.Data.PrimitiveType itemType, Microsoft.ML.Runtime.Internal.Utilities.HashArray&lt;T&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.Data.PrimitiveType itemType, class Microsoft.ML.Runtime.Internal.Utilities.HashArray`1&lt;!T&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TermTransform.TermMap.HashArrayImpl`1.#ctor(Microsoft.ML.Runtime.Data.PrimitiveType,Microsoft.ML.Runtime.Internal.Utilities.HashArray{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (itemType As PrimitiveType, values As HashArray(Of T))" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.TermTransform.TermMap.HashArrayImpl&lt;'T (requires 'T :&gt; IEquatable&lt;'T&gt; and 'T :&gt; IComparable&lt;'T&gt;)&gt; : Microsoft.ML.Runtime.Data.PrimitiveType * Microsoft.ML.Runtime.Internal.Utilities.HashArray&lt;'T (requires 'T :&gt; IEquatable&lt;'T&gt; and 'T :&gt; IComparable&lt;'T&gt;)&gt; -&gt; Microsoft.ML.Runtime.Data.TermTransform.TermMap.HashArrayImpl&lt;'T (requires 'T :&gt; IEquatable&lt;'T&gt; and 'T :&gt; IComparable&lt;'T&gt;)&gt;" Usage="new Microsoft.ML.Runtime.Data.TermTransform.TermMap.HashArrayImpl&lt;'T (requires 'T :&gt; System.IEquatable&lt;'T&gt; and 'T :&gt; System.IComparable&lt;'T&gt;)&gt; (itemType, values)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="itemType" Type="Microsoft.ML.Runtime.Data.PrimitiveType" />
        <Parameter Name="values" Type="Microsoft.ML.Runtime.Internal.Utilities.HashArray&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyMapper">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.Runtime.Data.ValueMapper&lt;T,uint&gt; GetKeyMapper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.ML.Runtime.Data.ValueMapper`2&lt;!T, unsigned int32&gt; GetKeyMapper() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TermTransform.TermMap.HashArrayImpl`1.GetKeyMapper" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetKeyMapper () As ValueMapper(Of T, UInteger)" />
      <MemberSignature Language="F#" Value="override this.GetKeyMapper : unit -&gt; Microsoft.ML.Runtime.Data.ValueMapper&lt;'T, uint32 (requires 'T :&gt; IEquatable&lt;'T&gt; and 'T :&gt; IComparable&lt;'T&gt;)&gt;" Usage="hashArrayImpl.GetKeyMapper " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ValueMapper&lt;T,System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTerms">
      <MemberSignature Language="C#" Value="public override void GetTerms (ref Microsoft.ML.Runtime.Data.VBuffer&lt;T&gt; dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetTerms(valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;!T&gt;&amp; dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TermTransform.TermMap.HashArrayImpl`1.GetTerms(Microsoft.ML.Runtime.Data.VBuffer{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetTerms (ByRef dst As VBuffer(Of T))" />
      <MemberSignature Language="F#" Value="override this.GetTerms :  -&gt; unit" Usage="hashArrayImpl.GetTerms dst" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="Microsoft.ML.Runtime.Data.VBuffer&lt;T&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="dst">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTextTerms">
      <MemberSignature Language="C#" Value="public override void WriteTextTerms (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTextTerms(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TermTransform.TermMap.HashArrayImpl`1.WriteTextTerms(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTextTerms (writer As TextWriter)" />
      <MemberSignature Language="F#" Value="override this.WriteTextTerms : System.IO.TextWriter -&gt; unit" Usage="hashArrayImpl.WriteTextTerms writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>