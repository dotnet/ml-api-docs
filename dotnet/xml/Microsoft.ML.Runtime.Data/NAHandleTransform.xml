<Type Name="NAHandleTransform" FullName="Microsoft.ML.Runtime.Data.NAHandleTransform">
  <TypeSignature Language="C#" Value="public static class NAHandleTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NAHandleTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.NAHandleTransform" />
  <TypeSignature Language="VB.NET" Value="Public Class NAHandleTransform" />
  <TypeSignature Language="F#" Value="type NAHandleTransform = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This transform handles missing values in the input columns. For each input column, it creates an output column
            where the missing values are replaced by one of these specified values:
            - The default value of the appropriate type.
            - The mean value of the appropriate type.
            - The max value of the appropriate type.
            - The min value of the appropriate type.
            (The last three work only for numeric/time span/ DateTime columns).
            The output column can also optionally include an indicator vector for which slots were missing in the input column
            (this can be done only when the indicator vector type can be converted to the input column type, i.e. only for numeric columns).
            
            When computing the mean/max/min value, there is also an option to compute it over the whole column instead of per slot. This option
            has a default value of true for variable length vectors, and false for known length vectors. It can be changed to true for known
            length vectors, but it results in an error if changed to false for variable length vectors.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataTransform Create (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.NAHandleTransform.Arguments args, Microsoft.ML.Runtime.Data.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataTransform Create(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.NAHandleTransform/Arguments args, class Microsoft.ML.Runtime.Data.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.NAHandleTransform.Create(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.NAHandleTransform.Arguments,Microsoft.ML.Runtime.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (env As IHostEnvironment, args As NAHandleTransform.Arguments, input As IDataView) As IDataTransform" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.NAHandleTransform.Arguments * Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.Data.IDataTransform" Usage="Microsoft.ML.Runtime.Data.NAHandleTransform.Create (env, args, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="args" Type="Microsoft.ML.Runtime.Data.NAHandleTransform+Arguments" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>