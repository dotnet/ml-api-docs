<Type Name="BinaryClassifierEvaluator+CalibratedResult" FullName="Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator+CalibratedResult">
  <TypeSignature Language="C#" Value="public sealed class BinaryClassifierEvaluator.CalibratedResult : Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.Result" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit BinaryClassifierEvaluator/CalibratedResult extends Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator/Result" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.CalibratedResult" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BinaryClassifierEvaluator.CalibratedResult&#xA;Inherits BinaryClassifierEvaluator.Result" />
  <TypeSignature Language="F#" Value="type BinaryClassifierEvaluator.CalibratedResult = class&#xA;    inherit BinaryClassifierEvaluator.Result" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator+Result</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Evaluation results for binary classifiers, including probabilistic metrics.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Entropy">
      <MemberSignature Language="C#" Value="public double Entropy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Entropy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.CalibratedResult.Entropy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entropy As Double" />
      <MemberSignature Language="F#" Value="member this.Entropy : double" Usage="Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.CalibratedResult.Entropy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the test-set entropy (prior Log-Loss/instance) of the classifier.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogLoss">
      <MemberSignature Language="C#" Value="public double LogLoss { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LogLoss" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.CalibratedResult.LogLoss" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogLoss As Double" />
      <MemberSignature Language="F#" Value="member this.LogLoss : double" Usage="Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.CalibratedResult.LogLoss" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the log-loss of the classifier.
            </summary>
        <value>To be added.</value>
        <remarks>
            The log-loss metric, is computed as follows:
            LL = - (1/m) * sum( log(p[i]))
            where m is the number of instances in the test set.
            p[i] is the probability returned by the classifier if the instance belongs to class 1,
            and 1 minus the probability returned by the classifier if the instance belongs to class 0.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogLossReduction">
      <MemberSignature Language="C#" Value="public double LogLossReduction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LogLossReduction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.CalibratedResult.LogLossReduction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogLossReduction As Double" />
      <MemberSignature Language="F#" Value="member this.LogLossReduction : double" Usage="Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.CalibratedResult.LogLossReduction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the log-loss reduction (also known as relative log-loss, or reduction in information gain - RIG)
            of the classifier.
            </summary>
        <value>To be added.</value>
        <remarks>
            The log-loss reduction is scaled relative to a classifier that predicts the prior for every example:
            (LL(prior) - LL(classifier)) / LL(prior)
            This metric can be interpreted as the advantage of the classifier over a random prediction.
            E.g., if the RIG equals 20, it can be interpreted as "the probability of a correct prediction is
            20% better than random guessing."
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>