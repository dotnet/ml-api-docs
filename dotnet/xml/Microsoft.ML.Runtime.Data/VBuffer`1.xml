<Type Name="VBuffer&lt;T&gt;" FullName="Microsoft.ML.Runtime.Data.VBuffer&lt;T&gt;">
  <TypeSignature Language="C#" Value="public struct VBuffer&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit VBuffer`1&lt;T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.VBuffer`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure VBuffer(Of T)" />
  <TypeSignature Language="F#" Value="type VBuffer&lt;'T&gt; = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>
            A buffer that supports both dense and sparse representations. This is the
            representation type for all VectorType instances. When an instance of this
            is passed to a row cursor getter, the callee is free to take ownership of
            and re-use the arrays (Values and Indices).
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VBuffer (int length, T[] values, int[] indices = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 length, !T[] values, int32[] indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.VBuffer`1.#ctor(System.Int32,`0[],System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (length As Integer, values As T(), Optional indices As Integer() = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.VBuffer&lt;'T&gt; : int * 'T[] * int[] -&gt; Microsoft.ML.Runtime.Data.VBuffer&lt;'T&gt;" Usage="new Microsoft.ML.Runtime.Data.VBuffer&lt;'T&gt; (length, values, indices)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="values" Type="T[]" />
        <Parameter Name="indices" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <param name="values">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
            Construct a dense representation with unused Indices array.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VBuffer (int length, int count, T[] values, int[] indices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 length, int32 count, !T[] values, int32[] indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.VBuffer`1.#ctor(System.Int32,System.Int32,`0[],System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (length As Integer, count As Integer, values As T(), indices As Integer())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.VBuffer&lt;'T&gt; : int * int * 'T[] * int[] -&gt; Microsoft.ML.Runtime.Data.VBuffer&lt;'T&gt;" Usage="new Microsoft.ML.Runtime.Data.VBuffer&lt;'T&gt; (length, count, values, indices)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="values" Type="T[]" />
        <Parameter Name="indices" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <param name="count">To be added.</param>
        <param name="values">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
            Construct a possibly sparse representation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (T[] src, int srcIndex, ref Microsoft.ML.Runtime.Data.VBuffer&lt;T&gt; dst, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(!T[] src, int32 srcIndex, valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;!T&gt;&amp; dst, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.VBuffer`1.Copy(`0[],System.Int32,Microsoft.ML.Runtime.Data.VBuffer{`0}@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (src As T(), srcIndex As Integer, ByRef dst As VBuffer(Of T), length As Integer)" />
      <MemberSignature Language="F#" Value="static member Copy : 'T[] * int *  * int -&gt; unit" Usage="Microsoft.ML.Runtime.Data.VBuffer&lt;'T&gt;.Copy (src, srcIndex, dst, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="T[]" />
        <Parameter Name="srcIndex" Type="System.Int32" />
        <Parameter Name="dst" Type="Microsoft.ML.Runtime.Data.VBuffer&lt;T&gt;" RefType="ref" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <param name="srcIndex">To be added.</param>
        <param name="dst">To be added.</param>
        <param name="length">To be added.</param>
        <summary>
            Copy from a section of a source array to the given destination.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (ref Microsoft.ML.Runtime.Data.VBuffer&lt;T&gt; dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;!T&gt;&amp; dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.VBuffer`1.CopyTo(Microsoft.ML.Runtime.Data.VBuffer{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (ByRef dst As VBuffer(Of T))" />
      <MemberSignature Language="F#" Value="member this.CopyTo :  -&gt; unit" Usage="vBuffer.CopyTo dst" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="Microsoft.ML.Runtime.Data.VBuffer&lt;T&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="dst">To be added.</param>
        <summary>
            Copy from this buffer to the given destination.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Span&lt;T&gt; dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(valuetype System.Span`1&lt;!T&gt; dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.VBuffer`1.CopyTo(System.Span{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dst As Span(Of T))" />
      <MemberSignature Language="F#" Value="member this.CopyTo : Span&lt;'T&gt; -&gt; unit" Usage="vBuffer.CopyTo dst" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="System.Span&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="dst">To be added.</param>
        <summary>
            Copy from this buffer to the given destination array. This "densifies".
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (ref Microsoft.ML.Runtime.Data.VBuffer&lt;T&gt; dst, int srcMin, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;!T&gt;&amp; dst, int32 srcMin, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.VBuffer`1.CopyTo(Microsoft.ML.Runtime.Data.VBuffer{`0}@,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (ByRef dst As VBuffer(Of T), srcMin As Integer, length As Integer)" />
      <MemberSignature Language="F#" Value="member this.CopyTo :  * int * int -&gt; unit" Usage="vBuffer.CopyTo (dst, srcMin, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="Microsoft.ML.Runtime.Data.VBuffer&lt;T&gt;" RefType="ref" />
        <Parameter Name="srcMin" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dst">To be added.</param>
        <param name="srcMin">To be added.</param>
        <param name="length">To be added.</param>
        <summary>
            Copy a range of values from this buffer to the given destination.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Span&lt;T&gt; dst, int ivDst, T defaultValue = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(valuetype System.Span`1&lt;!T&gt; dst, int32 ivDst, !T defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.VBuffer`1.CopyTo(System.Span{`0},System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dst As Span(Of T), ivDst As Integer, Optional defaultValue As T = null)" />
      <MemberSignature Language="F#" Value="member this.CopyTo : Span&lt;'T&gt; * int * 'T -&gt; unit" Usage="vBuffer.CopyTo (dst, ivDst, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="System.Span&lt;T&gt;" />
        <Parameter Name="ivDst" Type="System.Int32" />
        <Parameter Name="defaultValue" Type="T" />
      </Parameters>
      <Docs>
        <param name="dst">To be added.</param>
        <param name="ivDst">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyToDense">
      <MemberSignature Language="C#" Value="public void CopyToDense (ref Microsoft.ML.Runtime.Data.VBuffer&lt;T&gt; dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyToDense(valuetype Microsoft.ML.Runtime.Data.VBuffer`1&lt;!T&gt;&amp; dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.VBuffer`1.CopyToDense(Microsoft.ML.Runtime.Data.VBuffer{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyToDense (ByRef dst As VBuffer(Of T))" />
      <MemberSignature Language="F#" Value="member this.CopyToDense :  -&gt; unit" Usage="vBuffer.CopyToDense dst" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="Microsoft.ML.Runtime.Data.VBuffer&lt;T&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="dst">To be added.</param>
        <summary>
            Copy from this buffer to the given destination, forcing a dense representation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DenseValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;T&gt; DenseValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!T&gt; DenseValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.VBuffer`1.DenseValues" />
      <MemberSignature Language="VB.NET" Value="Public Function DenseValues () As IEnumerable(Of T)" />
      <MemberSignature Language="F#" Value="member this.DenseValues : unit -&gt; seq&lt;'T&gt;" Usage="vBuffer.DenseValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndices">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;int&gt; GetIndices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ReadOnlySpan`1&lt;int32&gt; GetIndices() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.VBuffer`1.GetIndices" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIndices () As ReadOnlySpan(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.GetIndices : unit -&gt; ReadOnlySpan&lt;int&gt;" Usage="vBuffer.GetIndices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            The indices. For a dense representation, this array is not used. For a sparse representation
            it is parallel to values and specifies the logical indices for the corresponding values.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            For example, if GetIndices() returns [3, 5] and GetValues() produces [98, 76], this VBuffer
            stands for a vector with:
             - non-zeros values 98 and 76 respectively at the 4th and 6th coordinates
             - zeros at all other coordinates
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemOrDefault">
      <MemberSignature Language="C#" Value="public T GetItemOrDefault (int slot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T GetItemOrDefault(int32 slot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.VBuffer`1.GetItemOrDefault(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemOrDefault (slot As Integer) As T" />
      <MemberSignature Language="F#" Value="member this.GetItemOrDefault : int -&gt; 'T" Usage="vBuffer.GetItemOrDefault slot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="slot" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="slot">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemOrDefault">
      <MemberSignature Language="C#" Value="public void GetItemOrDefault (int slot, ref T dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetItemOrDefault(int32 slot, !T&amp; dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.VBuffer`1.GetItemOrDefault(System.Int32,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetItemOrDefault (slot As Integer, ByRef dst As T)" />
      <MemberSignature Language="F#" Value="member this.GetItemOrDefault : int *  -&gt; unit" Usage="vBuffer.GetItemOrDefault (slot, dst)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="slot" Type="System.Int32" />
        <Parameter Name="dst" Type="T" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="slot">To be added.</param>
        <param name="dst">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;T&gt; GetValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ReadOnlySpan`1&lt;!T&gt; GetValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.VBuffer`1.GetValues" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValues () As ReadOnlySpan(Of T)" />
      <MemberSignature Language="F#" Value="member this.GetValues : unit -&gt; ReadOnlySpan&lt;'T&gt;" Usage="vBuffer.GetValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            The explicitly represented values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDense">
      <MemberSignature Language="C#" Value="public bool IsDense { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDense" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Data.VBuffer`1.IsDense" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDense As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsDense : bool" Usage="Microsoft.ML.Runtime.Data.VBuffer&lt;'T&gt;.IsDense" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether every logical element is explicitly
            represented in the buffer.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;int,T&gt;&gt; Items (bool all = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;int32, !T&gt;&gt; Items(bool all) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.VBuffer`1.Items(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Items (Optional all As Boolean = false) As IEnumerable(Of KeyValuePair(Of Integer, T))" />
      <MemberSignature Language="F#" Value="member this.Items : bool -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;int, 'T&gt;&gt;" Usage="vBuffer.Items all" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Int32,T&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="all" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="all">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public readonly int Length;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly int32 Length" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Data.VBuffer`1.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Length As Integer " />
      <MemberSignature Language="F#" Value="val mutable Length : int" Usage="Microsoft.ML.Runtime.Data.VBuffer&lt;'T&gt;.Length" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The logical length of the buffer.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.VBuffer`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="vBuffer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>