<Type Name="TextLoader" FullName="Microsoft.ML.Runtime.Data.TextLoader">
  <TypeSignature Language="C#" Value="public sealed class TextLoader : Microsoft.ML.Core.Data.IDataReader&lt;Microsoft.ML.Runtime.Data.IMultiStreamSource&gt;, Microsoft.ML.Runtime.Model.ICanSaveModel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TextLoader extends System.Object implements class Microsoft.ML.Core.Data.IDataReader`1&lt;class Microsoft.ML.Runtime.Data.IMultiStreamSource&gt;, class Microsoft.ML.Runtime.Model.ICanSaveModel" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.TextLoader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TextLoader&#xA;Implements ICanSaveModel, IDataReader(Of IMultiStreamSource)" />
  <TypeSignature Language="F#" Value="type TextLoader = class&#xA;    interface IDataReader&lt;IMultiStreamSource&gt;&#xA;    interface ICanSaveModel" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Core.Data.IDataReader&lt;Microsoft.ML.Runtime.Data.IMultiStreamSource&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Model.ICanSaveModel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Loads a text file into an IDataView. Supports basic mapping from input columns to IDataView columns.
            Should accept any file that TlcTextInstances accepts.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextLoader (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.TextLoader.Arguments args, Microsoft.ML.Runtime.Data.IMultiStreamSource dataSample = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.TextLoader/Arguments args, class Microsoft.ML.Runtime.Data.IMultiStreamSource dataSample) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TextLoader.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.TextLoader.Arguments,Microsoft.ML.Runtime.Data.IMultiStreamSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, args As TextLoader.Arguments, Optional dataSample As IMultiStreamSource = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.TextLoader : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.TextLoader.Arguments * Microsoft.ML.Runtime.Data.IMultiStreamSource -&gt; Microsoft.ML.Runtime.Data.TextLoader" Usage="new Microsoft.ML.Runtime.Data.TextLoader (env, args, dataSample)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" Index="0" />
        <Parameter Name="args" Type="Microsoft.ML.Runtime.Data.TextLoader+Arguments" Index="1" />
        <Parameter Name="dataSample" Type="Microsoft.ML.Runtime.Data.IMultiStreamSource" Index="2" FrameworkAlternate="ml-dotnet" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <param name="dataSample">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.TextLoader Create (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Model.ModelLoadContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.TextLoader Create(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Model.ModelLoadContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TextLoader.Create(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Model.ModelLoadContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (env As IHostEnvironment, ctx As ModelLoadContext) As TextLoader" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Model.ModelLoadContext -&gt; Microsoft.ML.Runtime.Data.TextLoader" Usage="Microsoft.ML.Runtime.Data.TextLoader.Create (env, ctx)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.TextLoader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.ModelLoadContext" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataLoader Create (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.TextLoader.Arguments args, Microsoft.ML.Runtime.Data.IMultiStreamSource files);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataLoader Create(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.TextLoader/Arguments args, class Microsoft.ML.Runtime.Data.IMultiStreamSource files) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TextLoader.Create(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.TextLoader.Arguments,Microsoft.ML.Runtime.Data.IMultiStreamSource)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (env As IHostEnvironment, args As TextLoader.Arguments, files As IMultiStreamSource) As IDataLoader" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.TextLoader.Arguments * Microsoft.ML.Runtime.Data.IMultiStreamSource -&gt; Microsoft.ML.Runtime.Data.IDataLoader" Usage="Microsoft.ML.Runtime.Data.TextLoader.Create (env, args, files)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataLoader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="args" Type="Microsoft.ML.Runtime.Data.TextLoader+Arguments" />
        <Parameter Name="files" Type="Microsoft.ML.Runtime.Data.IMultiStreamSource" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <param name="files">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataLoader Create (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Model.ModelLoadContext ctx, Microsoft.ML.Runtime.Data.IMultiStreamSource files);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataLoader Create(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Model.ModelLoadContext ctx, class Microsoft.ML.Runtime.Data.IMultiStreamSource files) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TextLoader.Create(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Model.ModelLoadContext,Microsoft.ML.Runtime.Data.IMultiStreamSource)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (env As IHostEnvironment, ctx As ModelLoadContext, files As IMultiStreamSource) As IDataLoader" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Model.ModelLoadContext * Microsoft.ML.Runtime.Data.IMultiStreamSource -&gt; Microsoft.ML.Runtime.Data.IDataLoader" Usage="Microsoft.ML.Runtime.Data.TextLoader.Create (env, ctx, files)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataLoader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.ModelLoadContext" />
        <Parameter Name="files" Type="Microsoft.ML.Runtime.Data.IMultiStreamSource" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="ctx">To be added.</param>
        <param name="files">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateReader&lt;TTupleShape&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.DataReader&lt;Microsoft.ML.Runtime.Data.IMultiStreamSource,TTupleShape&gt; CreateReader&lt;TTupleShape&gt; (Microsoft.ML.Runtime.IHostEnvironment env, Func&lt;Microsoft.ML.Runtime.Data.TextLoader.Context,TTupleShape&gt; func, Microsoft.ML.Runtime.Data.IMultiStreamSource files = null, bool hasHeader = false, char separator = '\t', bool allowQuoting = true, bool allowSparse = true, bool trimWhitspace = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.DataReader`2&lt;class Microsoft.ML.Runtime.Data.IMultiStreamSource, !!TTupleShape&gt; CreateReader&lt;TTupleShape&gt;(class Microsoft.ML.Runtime.IHostEnvironment env, class System.Func`2&lt;class Microsoft.ML.Runtime.Data.TextLoader/Context, !!TTupleShape&gt; func, class Microsoft.ML.Runtime.Data.IMultiStreamSource files, bool hasHeader, char separator, bool allowQuoting, bool allowSparse, bool trimWhitspace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TextLoader.CreateReader``1(Microsoft.ML.Runtime.IHostEnvironment,System.Func{Microsoft.ML.Runtime.Data.TextLoader.Context,``0},Microsoft.ML.Runtime.Data.IMultiStreamSource,System.Boolean,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateReader(Of TTupleShape) (env As IHostEnvironment, func As Func(Of TextLoader.Context, TTupleShape), Optional files As IMultiStreamSource = null, Optional hasHeader As Boolean = false, Optional separator As Char = '\t', Optional allowQuoting As Boolean = true, Optional allowSparse As Boolean = true, Optional trimWhitspace As Boolean = false) As DataReader(Of IMultiStreamSource, TTupleShape)" />
      <MemberSignature Language="F#" Value="static member CreateReader : Microsoft.ML.Runtime.IHostEnvironment * Func&lt;Microsoft.ML.Runtime.Data.TextLoader.Context, 'upleShape&gt; * Microsoft.ML.Runtime.Data.IMultiStreamSource * bool * char * bool * bool * bool -&gt; Microsoft.ML.StaticPipe.DataReader&lt;Microsoft.ML.Runtime.Data.IMultiStreamSource, 'upleShape&gt;" Usage="Microsoft.ML.Runtime.Data.TextLoader.CreateReader (env, func, files, hasHeader, separator, allowQuoting, allowSparse, trimWhitspace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.DataReader&lt;Microsoft.ML.Runtime.Data.IMultiStreamSource,TTupleShape&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TTupleShape">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.ML.StaticPipe.IsShape</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="func" Type="System.Func&lt;Microsoft.ML.Runtime.Data.TextLoader+Context,TTupleShape&gt;" />
        <Parameter Name="files" Type="Microsoft.ML.Runtime.Data.IMultiStreamSource" />
        <Parameter Name="hasHeader" Type="System.Boolean" />
        <Parameter Name="separator" Type="System.Char" />
        <Parameter Name="allowQuoting" Type="System.Boolean" />
        <Parameter Name="allowSparse" Type="System.Boolean" />
        <Parameter Name="trimWhitspace" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TTupleShape">The type shape parameter, which must be</typeparam>
        <param name="env"></param>
        <param name="func">The delegate that describes what fields to read from the text file, as well as
            describing their input type. The way in which it works is that the delegate is fed a <see cref="T:Microsoft.ML.Runtime.Data.TextLoader.Context" />,
            and the user composes a value-tuple with <see cref="T:Microsoft.ML.StaticPipe.PipelineColumn" /> instances out of that <see cref="T:Microsoft.ML.Runtime.Data.TextLoader.Context" />.
            The resulting data will have columns with the names corresponding to their names in the value-tuple.</param>
        <param name="files">Input files. If <c>null</c> then no files are read, but this means that options or
            configurations that require input data for initialization (e.g., <paramref name="hasHeader" /> or
            <see cref="M:Microsoft.ML.Runtime.Data.TextLoader.Context.LoadFloat(System.Int32,System.Nullable{System.Int32})" />) with a <c>null</c> second argument.</param>
        <param name="hasHeader">Data file has header with feature names.</param>
        <param name="separator">Text field separator.</param>
        <param name="allowQuoting">Whether the input -may include quoted values, which can contain separator
            characters, colons, and distinguish empty values from missing values. When true, consecutive separators
            denote a missing value and an empty value is denoted by <c>""</c>. When false, consecutive separators
            denote an empty value.</param>
        <param name="allowSparse">Whether the input may include sparse representations.</param>
        <param name="trimWhitspace">Remove trailing whitespace from lines.</param>
        <summary>
            Configures a reader for text files.
            </summary>
        <returns>A configured statically-typed reader for text files.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileContainsValidSchema">
      <MemberSignature Language="C#" Value="public static bool FileContainsValidSchema (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.IMultiStreamSource files, out Microsoft.ML.Runtime.Data.TextLoader.Arguments args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool FileContainsValidSchema(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.IMultiStreamSource files, [out] class Microsoft.ML.Runtime.Data.TextLoader/Arguments&amp; args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TextLoader.FileContainsValidSchema(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.IMultiStreamSource,Microsoft.ML.Runtime.Data.TextLoader.Arguments@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FileContainsValidSchema (env As IHostEnvironment, files As IMultiStreamSource, ByRef args As TextLoader.Arguments) As Boolean" />
      <MemberSignature Language="F#" Value="static member FileContainsValidSchema : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.IMultiStreamSource *  -&gt; bool" Usage="Microsoft.ML.Runtime.Data.TextLoader.FileContainsValidSchema (env, files, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="files" Type="Microsoft.ML.Runtime.Data.IMultiStreamSource" />
        <Parameter Name="args" Type="Microsoft.ML.Runtime.Data.TextLoader+Arguments" RefType="out" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="files">To be added.</param>
        <param name="args">To be added.</param>
        <summary>
            Checks whether the source contains the valid TextLoader.Arguments depiction.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.ISchema GetOutputSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.Data.ISchema GetOutputSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TextLoader.GetOutputSchema" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutputSchema () As ISchema" />
      <MemberSignature Language="F#" Value="abstract member GetOutputSchema : unit -&gt; Microsoft.ML.Runtime.Data.ISchema&#xA;override this.GetOutputSchema : unit -&gt; Microsoft.ML.Runtime.Data.ISchema" Usage="textLoader.GetOutputSchema " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IDataReader`1.GetOutputSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ISchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoaderSignature">
      <MemberSignature Language="C#" Value="public const string LoaderSignature;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string LoaderSignature" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Data.TextLoader.LoaderSignature" />
      <MemberSignature Language="VB.NET" Value="Public Const LoaderSignature As String " />
      <MemberSignature Language="F#" Value="val mutable LoaderSignature : string" Usage="Microsoft.ML.Runtime.Data.TextLoader.LoaderSignature" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.IDataView Read (Microsoft.ML.Runtime.Data.IMultiStreamSource source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.Data.IDataView Read(class Microsoft.ML.Runtime.Data.IMultiStreamSource source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TextLoader.Read(Microsoft.ML.Runtime.Data.IMultiStreamSource)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (source As IMultiStreamSource) As IDataView" />
      <MemberSignature Language="F#" Value="abstract member Read : Microsoft.ML.Runtime.Data.IMultiStreamSource -&gt; Microsoft.ML.Runtime.Data.IDataView&#xA;override this.Read : Microsoft.ML.Runtime.Data.IMultiStreamSource -&gt; Microsoft.ML.Runtime.Data.IDataView" Usage="textLoader.Read source" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IDataReader`1.Read(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.ML.Runtime.Data.IMultiStreamSource" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFile">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataView ReadFile (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.TextLoader.Arguments args, Microsoft.ML.Runtime.Data.IMultiStreamSource fileSource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataView ReadFile(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.TextLoader/Arguments args, class Microsoft.ML.Runtime.Data.IMultiStreamSource fileSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TextLoader.ReadFile(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.TextLoader.Arguments,Microsoft.ML.Runtime.Data.IMultiStreamSource)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadFile (env As IHostEnvironment, args As TextLoader.Arguments, fileSource As IMultiStreamSource) As IDataView" />
      <MemberSignature Language="F#" Value="static member ReadFile : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.TextLoader.Arguments * Microsoft.ML.Runtime.Data.IMultiStreamSource -&gt; Microsoft.ML.Runtime.Data.IDataView" Usage="Microsoft.ML.Runtime.Data.TextLoader.ReadFile (env, args, fileSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="args" Type="Microsoft.ML.Runtime.Data.TextLoader+Arguments" />
        <Parameter Name="fileSource" Type="Microsoft.ML.Runtime.Data.IMultiStreamSource" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <param name="fileSource">To be added.</param>
        <summary>
            Convenience method to create a <see cref="T:Microsoft.ML.Runtime.Data.TextLoader" /> and use it to read a specified file.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (Microsoft.ML.Runtime.Model.ModelSaveContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class Microsoft.ML.Runtime.Model.ModelSaveContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TextLoader.Save(Microsoft.ML.Runtime.Model.ModelSaveContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (ctx As ModelSaveContext)" />
      <MemberSignature Language="F#" Value="abstract member Save : Microsoft.ML.Runtime.Model.ModelSaveContext -&gt; unit&#xA;override this.Save : Microsoft.ML.Runtime.Model.ModelSaveContext -&gt; unit" Usage="textLoader.Save ctx" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.Model.ICanSaveModel.Save(Microsoft.ML.Runtime.Model.ModelSaveContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.ModelSaveContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>