<Type Name="Normalize" FullName="Microsoft.ML.Runtime.Data.Normalize">
  <TypeSignature Language="C#" Value="public static class Normalize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Normalize extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.Normalize" />
  <TypeSignature Language="VB.NET" Value="Public Class Normalize" />
  <TypeSignature Language="F#" Value="type Normalize = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This contains entry-point definitions related to <see cref="T:Microsoft.ML.Runtime.Data.NormalizeTransform" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Bin">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput Bin (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.NormalizeTransform.BinArguments input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.EntryPoints.CommonOutputs/TransformOutput Bin(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.NormalizeTransform/BinArguments input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.Normalize.Bin(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.NormalizeTransform.BinArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Bin (env As IHostEnvironment, input As NormalizeTransform.BinArguments) As CommonOutputs.TransformOutput" />
      <MemberSignature Language="F#" Value="static member Bin : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.NormalizeTransform.BinArguments -&gt; Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput" Usage="Microsoft.ML.Runtime.Data.Normalize.Bin (env, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/EntryPoint(Desc="The values are assigned into equidensity bins and a value is mapped to its bin_number/number_of_bins.", Name="Transforms.BinNormalizer", ShortName="Bin", UserName="Binning Normalizer")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.NormalizeTransform+BinArguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IfNeeded">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.EntryPoints.CommonOutputs.MacroOutput&lt;Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput&gt; IfNeeded (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.NormalizeTransform.MinMaxArguments input, Microsoft.ML.Runtime.EntryPoints.EntryPointNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.EntryPoints.CommonOutputs/MacroOutput`1&lt;class Microsoft.ML.Runtime.EntryPoints.CommonOutputs/TransformOutput&gt; IfNeeded(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.NormalizeTransform/MinMaxArguments input, class Microsoft.ML.Runtime.EntryPoints.EntryPointNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.Normalize.IfNeeded(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.NormalizeTransform.MinMaxArguments,Microsoft.ML.Runtime.EntryPoints.EntryPointNode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IfNeeded (env As IHostEnvironment, input As NormalizeTransform.MinMaxArguments, node As EntryPointNode) As CommonOutputs.MacroOutput(Of CommonOutputs.TransformOutput)" />
      <MemberSignature Language="F#" Value="static member IfNeeded : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.NormalizeTransform.MinMaxArguments * Microsoft.ML.Runtime.EntryPoints.EntryPointNode -&gt; Microsoft.ML.Runtime.EntryPoints.CommonOutputs.MacroOutput&lt;Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput&gt;" Usage="Microsoft.ML.Runtime.Data.Normalize.IfNeeded (env, input, node)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/EntryPoint(Desc="Normalize the columns only if needed", Name="Transforms.ConditionalNormalizer", UserName="Normalize If Needed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.CommonOutputs+MacroOutput&lt;Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.NormalizeTransform+MinMaxArguments" />
        <Parameter Name="node" Type="Microsoft.ML.Runtime.EntryPoints.EntryPointNode" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <param name="node">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMeanVar">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput LogMeanVar (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.NormalizeTransform.LogMeanVarArguments input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.EntryPoints.CommonOutputs/TransformOutput LogMeanVar(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.NormalizeTransform/LogMeanVarArguments input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.Normalize.LogMeanVar(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.NormalizeTransform.LogMeanVarArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogMeanVar (env As IHostEnvironment, input As NormalizeTransform.LogMeanVarArguments) As CommonOutputs.TransformOutput" />
      <MemberSignature Language="F#" Value="static member LogMeanVar : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.NormalizeTransform.LogMeanVarArguments -&gt; Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput" Usage="Microsoft.ML.Runtime.Data.Normalize.LogMeanVar (env, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/EntryPoint(Desc="Normalizes the data based on the computed mean and variance of the logarithm of the data.", Name="Transforms.LogMeanVarianceNormalizer", ShortName="LogMeanVar", UserName="LogMeanVar Normalizer")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.NormalizeTransform+LogMeanVarArguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeanVar">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput MeanVar (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.NormalizeTransform.MeanVarArguments input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.EntryPoints.CommonOutputs/TransformOutput MeanVar(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.NormalizeTransform/MeanVarArguments input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.Normalize.MeanVar(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.NormalizeTransform.MeanVarArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MeanVar (env As IHostEnvironment, input As NormalizeTransform.MeanVarArguments) As CommonOutputs.TransformOutput" />
      <MemberSignature Language="F#" Value="static member MeanVar : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.NormalizeTransform.MeanVarArguments -&gt; Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput" Usage="Microsoft.ML.Runtime.Data.Normalize.MeanVar (env, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/EntryPoint(Desc="Normalizes the data based on the computed mean and variance of the data.", Name="Transforms.MeanVarianceNormalizer", ShortName="MeanVar", UserName="MeanVar Normalizer")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.NormalizeTransform+MeanVarArguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinMax">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput MinMax (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.NormalizeTransform.MinMaxArguments input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.EntryPoints.CommonOutputs/TransformOutput MinMax(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.NormalizeTransform/MinMaxArguments input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.Normalize.MinMax(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.NormalizeTransform.MinMaxArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MinMax (env As IHostEnvironment, input As NormalizeTransform.MinMaxArguments) As CommonOutputs.TransformOutput" />
      <MemberSignature Language="F#" Value="static member MinMax : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.NormalizeTransform.MinMaxArguments -&gt; Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput" Usage="Microsoft.ML.Runtime.Data.Normalize.MinMax (env, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/EntryPoint(Desc="Normalizes the data based on the observed minimum and maximum values of the data.", Name="Transforms.MinMaxNormalizer", ShortName="MinMax", UserName="Min-Max Normalizer")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.NormalizeTransform+MinMaxArguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupervisedBin">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput SupervisedBin (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.NormalizeTransform.SupervisedBinArguments input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.EntryPoints.CommonOutputs/TransformOutput SupervisedBin(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.NormalizeTransform/SupervisedBinArguments input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.Normalize.SupervisedBin(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.NormalizeTransform.SupervisedBinArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SupervisedBin (env As IHostEnvironment, input As NormalizeTransform.SupervisedBinArguments) As CommonOutputs.TransformOutput" />
      <MemberSignature Language="F#" Value="static member SupervisedBin : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.NormalizeTransform.SupervisedBinArguments -&gt; Microsoft.ML.Runtime.EntryPoints.CommonOutputs.TransformOutput" Usage="Microsoft.ML.Runtime.Data.Normalize.SupervisedBin (env, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/EntryPoint(Desc="Similar to BinNormalizer, but calculates bins based on correlation with the label column, not equi-density. The new value is bin_number / number_of_bins.", Name="Transforms.SupervisedBinNormalizer", ShortName="SupBin", UserName="Supervised Binning Normalizer")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.NormalizeTransform+SupervisedBinArguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>