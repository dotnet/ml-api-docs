<Type Name="TrivialReaderEstimator&lt;TSource,TReader&gt;" FullName="Microsoft.ML.Runtime.Data.TrivialReaderEstimator&lt;TSource,TReader&gt;">
  <TypeSignature Language="C#" Value="public sealed class TrivialReaderEstimator&lt;TSource,TReader&gt; : Microsoft.ML.Core.Data.IDataReaderEstimator&lt;TSource,TReader&gt; where TReader : IDataReader&lt;TSource&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TrivialReaderEstimator`2&lt;TSource, (class Microsoft.ML.Core.Data.IDataReader`1&lt;!TSource&gt;) TReader&gt; extends System.Object implements class Microsoft.ML.Core.Data.IDataReaderEstimator`2&lt;!TSource, !TReader&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.TrivialReaderEstimator`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TrivialReaderEstimator(Of TSource, TReader)&#xA;Implements IDataReaderEstimator(Of TSource, TReader)" />
  <TypeSignature Language="F#" Value="type TrivialReaderEstimator&lt;'Source, 'Reader (requires 'Reader :&gt; IDataReader&lt;'Source&gt;)&gt; = class&#xA;    interface IDataReaderEstimator&lt;'Source, 'Reader (requires 'Reader :&gt; IDataReader&lt;'Source&gt;)&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSource" />
    <TypeParameter Name="TReader">
      <Constraints>
        <InterfaceName>Microsoft.ML.Core.Data.IDataReader&lt;TSource&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Core.Data.IDataReaderEstimator&lt;TSource,TReader&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TSource">To be added.</typeparam>
    <typeparam name="TReader">To be added.</typeparam>
    <summary>
            The trivial wrapper for a <see cref="T:Microsoft.ML.Core.Data.IDataReader`1" /> that acts as an estimator and ignores the source.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TrivialReaderEstimator (TReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!TReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TrivialReaderEstimator`2.#ctor(`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As TReader)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.TrivialReaderEstimator&lt;'Source, 'Reader (requires 'Reader :&gt; Microsoft.ML.Core.Data.IDataReader&lt;'Source&gt;)&gt; : 'Reader -&gt; Microsoft.ML.Runtime.Data.TrivialReaderEstimator&lt;'Source, 'Reader (requires 'Reader :&gt; Microsoft.ML.Core.Data.IDataReader&lt;'Source&gt;)&gt;" Usage="new Microsoft.ML.Runtime.Data.TrivialReaderEstimator&lt;'Source, 'Reader (requires 'Reader :&gt; Microsoft.ML.Core.Data.IDataReader&lt;'Source&gt;)&gt; reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="TReader" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fit">
      <MemberSignature Language="C#" Value="public TReader Fit (TSource input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TReader Fit(!TSource input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TrivialReaderEstimator`2.Fit(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fit (input As TSource) As TReader" />
      <MemberSignature Language="F#" Value="abstract member Fit : 'Source -&gt; 'Reader&#xA;override this.Fit : 'Source -&gt; 'Reader" Usage="trivialReaderEstimator.Fit input" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IDataReaderEstimator`2.Fit(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="TSource" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Core.Data.SchemaShape GetOutputSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Core.Data.SchemaShape GetOutputSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TrivialReaderEstimator`2.GetOutputSchema" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutputSchema () As SchemaShape" />
      <MemberSignature Language="F#" Value="abstract member GetOutputSchema : unit -&gt; Microsoft.ML.Core.Data.SchemaShape&#xA;override this.GetOutputSchema : unit -&gt; Microsoft.ML.Core.Data.SchemaShape" Usage="trivialReaderEstimator.GetOutputSchema " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IDataReaderEstimator`2.GetOutputSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>