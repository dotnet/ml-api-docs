<Type Name="TermTransform+TermMap" FullName="Microsoft.ML.Runtime.Data.TermTransform+TermMap">
  <TypeSignature Language="C#" Value="public abstract class TermTransform.TermMap" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi abstract beforefieldinit TermTransform/TermMap extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.TermTransform.TermMap" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TermTransform.TermMap" />
  <TypeSignature Language="F#" Value="type TermTransform.TermMap = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             A map is an object capable of creating the association from an input type, to an output
             type. The input type, whatever it is, must have <see cref="F:Microsoft.ML.Runtime.Data.TermTransform.TermMap.ItemType" /> as its input item
             type, and will produce either <see cref="F:Microsoft.ML.Runtime.Data.TermTransform.TermMap.OutputType" />, or a vector type with that output
             type if the input was a vector.
            
             Note that instances of this class can be shared among multiple <see cref="T:Microsoft.ML.Runtime.Data.TermTransform" />
             instances. To associate this with a particular transform, use the <see cref="M:Microsoft.ML.Runtime.Data.TermTransform.Bind(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.ISchema,Microsoft.ML.Runtime.Data.TermTransform.TermMap,Microsoft.ML.Runtime.Data.TermTransform.ColInfo[],System.Boolean[],System.Int32)" /> method.
            
             These are the immutable and serializable analogs to the <see cref="T:Microsoft.ML.Runtime.Data.TermTransform.Builder" /> used in
             training.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TermMap (Microsoft.ML.Runtime.Data.PrimitiveType type, int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.Data.PrimitiveType type, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TermTransform.TermMap.#ctor(Microsoft.ML.Runtime.Data.PrimitiveType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (type As PrimitiveType, count As Integer)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Data.TermTransform.TermMap : Microsoft.ML.Runtime.Data.PrimitiveType * int -&gt; Microsoft.ML.Runtime.Data.TermTransform.TermMap" Usage="new Microsoft.ML.Runtime.Data.TermTransform.TermMap (type, count)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.ML.Runtime.Data.PrimitiveType" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public readonly int Count;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly int32 Count" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Data.TermTransform.TermMap.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Count As Integer " />
      <MemberSignature Language="F#" Value="val mutable Count : int" Usage="Microsoft.ML.Runtime.Data.TermTransform.TermMap.Count" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The number of items in the map.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public readonly Microsoft.ML.Runtime.Data.PrimitiveType ItemType;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly class Microsoft.ML.Runtime.Data.PrimitiveType ItemType" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Data.TermTransform.TermMap.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly ItemType As PrimitiveType " />
      <MemberSignature Language="F#" Value="val mutable ItemType : Microsoft.ML.Runtime.Data.PrimitiveType" Usage="Microsoft.ML.Runtime.Data.TermTransform.TermMap.ItemType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.PrimitiveType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The item type of the input type, that is, either the input type or,
            if a vector, the item type of that type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputType">
      <MemberSignature Language="C#" Value="public readonly Microsoft.ML.Runtime.Data.KeyType OutputType;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly class Microsoft.ML.Runtime.Data.KeyType OutputType" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Data.TermTransform.TermMap.OutputType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly OutputType As KeyType " />
      <MemberSignature Language="F#" Value="val mutable OutputType : Microsoft.ML.Runtime.Data.KeyType" Usage="Microsoft.ML.Runtime.Data.TermTransform.TermMap.OutputType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.KeyType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The output item type. This will always be of known cardinality. Its count is always
            equal to <see cref="F:Microsoft.ML.Runtime.Data.TermTransform.TermMap.Count" />, unless <see cref="F:Microsoft.ML.Runtime.Data.TermTransform.TermMap.Count" /> is 0 in which case this has
            key count of 1, since a count of 0 would indicate an unbound key. If we ever improve
            key types so they are capable of distinguishing between the set they index being
            empty vs. of unknown or unbound cardinality, this should change.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTextTerms">
      <MemberSignature Language="C#" Value="public abstract void WriteTextTerms (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTextTerms(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.TermTransform.TermMap.WriteTextTerms(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteTextTerms (writer As TextWriter)" />
      <MemberSignature Language="F#" Value="abstract member WriteTextTerms : System.IO.TextWriter -&gt; unit" Usage="termMap.WriteTextTerms writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>