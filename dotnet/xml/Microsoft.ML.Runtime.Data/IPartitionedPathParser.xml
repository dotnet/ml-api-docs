<Type Name="IPartitionedPathParser" FullName="Microsoft.ML.Runtime.Data.IPartitionedPathParser">
  <TypeSignature Language="C#" Value="public interface IPartitionedPathParser" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPartitionedPathParser" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.IPartitionedPathParser" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPartitionedPathParser" />
  <TypeSignature Language="F#" Value="type IPartitionedPathParser = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Supports extracting column names and values from a path string.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ParseColumns">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.Data.PartitionedFileLoader.Column&gt; ParseColumns (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.ML.Runtime.Data.PartitionedFileLoader/Column&gt; ParseColumns(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.IPartitionedPathParser.ParseColumns(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ParseColumns (path As String) As IEnumerable(Of PartitionedFileLoader.Column)" />
      <MemberSignature Language="F#" Value="abstract member ParseColumns : string -&gt; seq&lt;Microsoft.ML.Runtime.Data.PartitionedFileLoader.Column&gt;" Usage="iPartitionedPathParser.ParseColumns path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.Data.PartitionedFileLoader+Column&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The file path.</param>
        <summary>
            Extract the column definitions from a file path.
            </summary>
        <returns>The resulting column definitions.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Thrown when parsing fails.</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; ParseValues (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; ParseValues(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.IPartitionedPathParser.ParseValues(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ParseValues (path As String) As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member ParseValues : string -&gt; seq&lt;string&gt;" Usage="iPartitionedPathParser.ParseValues path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The file path.</param>
        <summary>
            Extract the column values from a file path.
            </summary>
        <returns>The resulting column values.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Thrown when parsing fails.</exception>
      </Docs>
    </Member>
  </Members>
</Type>