<Type Name="IMessageDispatcher" FullName="Microsoft.ML.Runtime.Data.IMessageDispatcher">
  <TypeSignature Language="C#" Value="public interface IMessageDispatcher : Microsoft.ML.Runtime.IHostEnvironment" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMessageDispatcher implements class Microsoft.ML.Runtime.IChannelProvider, class Microsoft.ML.Runtime.IExceptionContext, class Microsoft.ML.Runtime.IHostEnvironment, class Microsoft.ML.Runtime.IProgressChannelProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Data.IMessageDispatcher" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMessageDispatcher&#xA;Implements IHostEnvironment" />
  <TypeSignature Language="F#" Value="type IMessageDispatcher = interface&#xA;    interface IHostEnvironment&#xA;    interface IChannelProvider&#xA;    interface IExceptionContext&#xA;    interface IProgressChannelProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMessageDispatcher : Microsoft::ML::Runtime::IHostEnvironment" />
  <TypeSignature Language="C++ CX" Value="public interface class IMessageDispatcher : Microsoft::ML::Runtime::IHostEnvironment" />
  <TypeSignature Language="C++ WINRT" Value="__interface IMessageDispatcher : Microsoft::ML::Runtime::IHostEnvironment" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.IHostEnvironment</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A <see cref="T:Microsoft.ML.Runtime.IHostEnvironment" /> that is also a channel listener can attach
            listeners for messages, as sent through <see cref="M:Microsoft.ML.Runtime.IChannelProvider.StartPipe``1(System.String)" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddListener&lt;TMessage&gt;">
      <MemberSignature Language="C#" Value="public void AddListener&lt;TMessage&gt; (Action&lt;Microsoft.ML.Runtime.Data.IMessageSource,TMessage&gt; listenerFunc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddListener&lt;TMessage&gt;(class System.Action`2&lt;class Microsoft.ML.Runtime.Data.IMessageSource, !!TMessage&gt; listenerFunc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.IMessageDispatcher.AddListener``1(System.Action{Microsoft.ML.Runtime.Data.IMessageSource,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddListener(Of TMessage) (listenerFunc As Action(Of IMessageSource, TMessage))" />
      <MemberSignature Language="F#" Value="abstract member AddListener : Action&lt;Microsoft.ML.Runtime.Data.IMessageSource, 'Message&gt; -&gt; unit" Usage="iMessageDispatcher.AddListener listenerFunc" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TMessage&gt;&#xA; void AddListener(Action&lt;Microsoft::ML::Runtime::Data::IMessageSource ^, TMessage&gt; ^ listenerFunc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TMessage" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="listenerFunc" Type="System.Action&lt;Microsoft.ML.Runtime.Data.IMessageSource,TMessage&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TMessage">The message type</typeparam>
        <param name="listenerFunc">The action to perform when a message of the
            appropriate type is received.</param>
        <summary>
            Listen on this environment to messages of a particular type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveListener&lt;TMessage&gt;">
      <MemberSignature Language="C#" Value="public void RemoveListener&lt;TMessage&gt; (Action&lt;Microsoft.ML.Runtime.Data.IMessageSource,TMessage&gt; listenerFunc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveListener&lt;TMessage&gt;(class System.Action`2&lt;class Microsoft.ML.Runtime.Data.IMessageSource, !!TMessage&gt; listenerFunc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Data.IMessageDispatcher.RemoveListener``1(System.Action{Microsoft.ML.Runtime.Data.IMessageSource,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveListener(Of TMessage) (listenerFunc As Action(Of IMessageSource, TMessage))" />
      <MemberSignature Language="F#" Value="abstract member RemoveListener : Action&lt;Microsoft.ML.Runtime.Data.IMessageSource, 'Message&gt; -&gt; unit" Usage="iMessageDispatcher.RemoveListener listenerFunc" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TMessage&gt;&#xA; void RemoveListener(Action&lt;Microsoft::ML::Runtime::Data::IMessageSource ^, TMessage&gt; ^ listenerFunc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TMessage" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="listenerFunc" Type="System.Action&lt;Microsoft.ML.Runtime.Data.IMessageSource,TMessage&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TMessage">The message type</typeparam>
        <param name="listenerFunc">The previous listener function that is now being removed.</param>
        <summary>
            Removes a previously added listener.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>