<Type Name="StructuredDataViewType" FullName="Microsoft.Data.DataView.StructuredDataViewType">
  <TypeSignature Language="C#" Value="public abstract class StructuredDataViewType : Microsoft.Data.DataView.DataViewType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StructuredDataViewType extends Microsoft.Data.DataView.DataViewType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Data.DataView.StructuredDataViewType" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StructuredDataViewType&#xA;Inherits DataViewType" />
  <TypeSignature Language="F#" Value="type StructuredDataViewType = class&#xA;    inherit DataViewType" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Data.DataView</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Data.DataView.DataViewType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The abstract base class for all non-primitive types.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StructuredDataViewType (Type rawType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Type rawType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Data.DataView.StructuredDataViewType.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (rawType As Type)" />
      <MemberSignature Language="F#" Value="new Microsoft.Data.DataView.StructuredDataViewType : Type -&gt; Microsoft.Data.DataView.StructuredDataViewType" Usage="new Microsoft.Data.DataView.StructuredDataViewType rawType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Data.DataView</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="rawType">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>