<Type Name="DataViewRowId" FullName="Microsoft.Data.DataView.DataViewRowId">
  <TypeSignature Language="C#" Value="public struct DataViewRowId : IComparable&lt;Microsoft.Data.DataView.DataViewRowId&gt;, IEquatable&lt;Microsoft.Data.DataView.DataViewRowId&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit DataViewRowId extends System.ValueType implements class System.IComparable`1&lt;valuetype Microsoft.Data.DataView.DataViewRowId&gt;, class System.IEquatable`1&lt;valuetype Microsoft.Data.DataView.DataViewRowId&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Data.DataView.DataViewRowId" />
  <TypeSignature Language="VB.NET" Value="Public Structure DataViewRowId&#xA;Implements IComparable(Of DataViewRowId), IEquatable(Of DataViewRowId)" />
  <TypeSignature Language="F#" Value="type DataViewRowId = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Data.DataView</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable&lt;Microsoft.Data.DataView.DataViewRowId&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.Data.DataView.DataViewRowId&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A structure serving as the identifier of a row of <see cref="T:Microsoft.Data.DataView.IDataView" />.
            For datasets with millions of records, those IDs need to be unique, therefore the need for such a large structure to hold the values.
            Those Ids are derived from other Ids of the previous components of the pipelines, and dividing the structure in two: high order and low order of bits,
            and reduces the changes of those collisions even further.
            </summary>
    <remarks>To be added.</remarks>
    <altmember cref="M:Microsoft.Data.DataView.DataViewRow.GetIdGetter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataViewRowId (ulong low, ulong high);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int64 low, unsigned int64 high) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Data.DataView.DataViewRowId.#ctor(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (low As ULong, high As ULong)" />
      <MemberSignature Language="F#" Value="new Microsoft.Data.DataView.DataViewRowId : uint64 * uint64 -&gt; Microsoft.Data.DataView.DataViewRowId" Usage="new Microsoft.Data.DataView.DataViewRowId (low, high)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Data.DataView</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="low" Type="System.UInt64" />
        <Parameter Name="high" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="low">The low order <langword>ulong</langword>.</param>
        <param name="high">The high order <langword>ulong</langword>.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.Data.DataView.DataViewRowId" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public Microsoft.Data.DataView.DataViewRowId Combine (Microsoft.Data.DataView.DataViewRowId other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Data.DataView.DataViewRowId Combine(valuetype Microsoft.Data.DataView.DataViewRowId other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Data.DataView.DataViewRowId.Combine(Microsoft.Data.DataView.DataViewRowId)" />
      <MemberSignature Language="VB.NET" Value="Public Function Combine (other As DataViewRowId) As DataViewRowId" />
      <MemberSignature Language="F#" Value="member this.Combine : Microsoft.Data.DataView.DataViewRowId -&gt; Microsoft.Data.DataView.DataViewRowId" Usage="dataViewRowId.Combine other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Data.DataView</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Data.DataView.DataViewRowId</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Data.DataView.DataViewRowId" />
      </Parameters>
      <Docs>
        <param name="other"></param>
        <summary>
            An operation that treats the value as an unmixed Murmur3 128-bit hash state,
            and returns the hash state that would result if we took <paramref name="other" />,
            scrambled it using <see cref="M:Microsoft.Data.DataView.DataViewRowId.Fork" />, then hashed the result of that.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (Microsoft.Data.DataView.DataViewRowId other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype Microsoft.Data.DataView.DataViewRowId other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Data.DataView.DataViewRowId.CompareTo(Microsoft.Data.DataView.DataViewRowId)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As DataViewRowId) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : Microsoft.Data.DataView.DataViewRowId -&gt; int&#xA;override this.CompareTo : Microsoft.Data.DataView.DataViewRowId -&gt; int" Usage="dataViewRowId.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Data.DataView</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Data.DataView.DataViewRowId" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.Data.DataView.DataViewRowId other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Microsoft.Data.DataView.DataViewRowId other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Data.DataView.DataViewRowId.Equals(Microsoft.Data.DataView.DataViewRowId)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As DataViewRowId) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.Data.DataView.DataViewRowId -&gt; bool" Usage="dataViewRowId.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Data.DataView</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Data.DataView.DataViewRowId" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Data.DataView.DataViewRowId.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dataViewRowId.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Data.DataView</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fork">
      <MemberSignature Language="C#" Value="public Microsoft.Data.DataView.DataViewRowId Fork ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Data.DataView.DataViewRowId Fork() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Data.DataView.DataViewRowId.Fork" />
      <MemberSignature Language="VB.NET" Value="Public Function Fork () As DataViewRowId" />
      <MemberSignature Language="F#" Value="member this.Fork : unit -&gt; Microsoft.Data.DataView.DataViewRowId" Usage="dataViewRowId.Fork " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Data.DataView</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Data.DataView.DataViewRowId</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            An operation that treats the value as an unmixed Murmur3 128-bit hash state,
            and returns the hash state that would result if we hashed an addition 16 bytes
            that were all zeros, except for the last bit which is one.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Data.DataView.DataViewRowId.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dataViewRowId.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Data.DataView</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="High">
      <MemberSignature Language="C#" Value="public readonly ulong High;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly unsigned int64 High" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Data.DataView.DataViewRowId.High" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly High As ULong " />
      <MemberSignature Language="F#" Value="val mutable High : uint64" Usage="Microsoft.Data.DataView.DataViewRowId.High" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Data.DataView</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The high order bits. Corresponds to H2 in the Murmur algorithms.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Low">
      <MemberSignature Language="C#" Value="public readonly ulong Low;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly unsigned int64 Low" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Data.DataView.DataViewRowId.Low" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Low As ULong " />
      <MemberSignature Language="F#" Value="val mutable Low : uint64" Usage="Microsoft.Data.DataView.DataViewRowId.Low" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Data.DataView</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The low order bits. Corresponds to H1 in the Murmur algorithms.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public Microsoft.Data.DataView.DataViewRowId Next ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Data.DataView.DataViewRowId Next() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Data.DataView.DataViewRowId.Next" />
      <MemberSignature Language="VB.NET" Value="Public Function Next () As DataViewRowId" />
      <MemberSignature Language="F#" Value="member this.Next : unit -&gt; Microsoft.Data.DataView.DataViewRowId" Usage="dataViewRowId.Next " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Data.DataView</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Data.DataView.DataViewRowId</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            An operation that treats the value as an unmixed Murmur3 128-bit hash state,
            and returns the hash state that would result if we hashed an addition 16 bytes
            that were all zeros.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Data.DataView.DataViewRowId.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dataViewRowId.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Data.DataView</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>