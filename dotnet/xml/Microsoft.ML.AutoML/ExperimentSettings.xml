<Type Name="ExperimentSettings" FullName="Microsoft.ML.AutoML.ExperimentSettings">
  <TypeSignature Language="C#" Value="public abstract class ExperimentSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExperimentSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.AutoML.ExperimentSettings" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExperimentSettings" />
  <TypeSignature Language="F#" Value="type ExperimentSettings = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.AutoML</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Base class for experiment settings. All task-specific AutoML experiment settings
            (like <see cref="T:Microsoft.ML.AutoML.BinaryExperimentSettings" />) inherit from this class.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExperimentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.AutoML.ExperimentSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.AutoML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.AutoML.ExperimentSettings" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheBeforeTrainer">
      <MemberSignature Language="C#" Value="public Microsoft.ML.AutoML.CacheBeforeTrainer CacheBeforeTrainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.AutoML.CacheBeforeTrainer CacheBeforeTrainer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.AutoML.ExperimentSettings.CacheBeforeTrainer" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheBeforeTrainer As CacheBeforeTrainer" />
      <MemberSignature Language="F#" Value="member this.CacheBeforeTrainer : Microsoft.ML.AutoML.CacheBeforeTrainer with get, set" Usage="Microsoft.ML.AutoML.ExperimentSettings.CacheBeforeTrainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.AutoML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.AutoML.CacheBeforeTrainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether AutoML should cache before ML.NET trainers.
            See <see cref="P:Microsoft.ML.TrainerInfo.WantCaching" /> for more information on caching.
            </summary>
        <value>The default value is <see cref="F:Microsoft.ML.AutoML.CacheBeforeTrainer.Auto" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheDirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CacheDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo CacheDirectory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.AutoML.ExperimentSettings.CacheDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheDirectory As DirectoryInfo" />
      <MemberSignature Language="F#" Value="member this.CacheDirectory : System.IO.DirectoryInfo with get, set" Usage="Microsoft.ML.AutoML.ExperimentSettings.CacheDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.AutoML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This is a pointer to a directory where all models trained during the AutoML experiment will be saved.
            If <see langword="null" />, models will be kept in memory instead of written to disk.
            (Please note: for an experiment with high runtime operating on a large dataset, opting to keep models in
            memory could cause a system to run out of memory.)
            </summary>
        <value>The default value is the directory named "Microsoft.ML.AutoML" in the current user's temporary folder.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.AutoML.ExperimentSettings.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public Property CancellationToken As CancellationToken" />
      <MemberSignature Language="F#" Value="member this.CancellationToken : System.Threading.CancellationToken with get, set" Usage="Microsoft.ML.AutoML.ExperimentSettings.CancellationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.AutoML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Cancellation token for the AutoML experiment. It propagates the notification
            that the experiment should be canceled.
            </summary>
        <value>To be added.</value>
        <remarks>
            An experiment may not immediately stop after cancellation.
            This is because once AutoML starts training an ML.NET model, AutoML lets the
            model train to completion. For instance, if the first model
            AutoML trains takes 4 hours, and the second model trained takes 5 hours,
            but cancellation is requested after 6 hours,
            the experiment will stop after 4 + 5 = 9 hours (not 6 hours).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxExperimentTimeInSeconds">
      <MemberSignature Language="C#" Value="public uint MaxExperimentTimeInSeconds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MaxExperimentTimeInSeconds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.AutoML.ExperimentSettings.MaxExperimentTimeInSeconds" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxExperimentTimeInSeconds As UInteger" />
      <MemberSignature Language="F#" Value="member this.MaxExperimentTimeInSeconds : uint32 with get, set" Usage="Microsoft.ML.AutoML.ExperimentSettings.MaxExperimentTimeInSeconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.AutoML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Maximum time in seconds the experiment is allowed to run.
            </summary>
        <value>The default value is 86,400, the number of seconds in one day.</value>
        <remarks>
            An experiment may run for longer than <see name="MaxExperimentTimeInSeconds" />.
            This is because once AutoML starts training an ML.NET model, AutoML lets the
            model train to completion. For instance, if the first model
            AutoML trains takes 4 hours, and the second model trained takes 5 hours,
            but <see name="MaxExperimentTimeInSeconds" /> was the number of seconds in 6 hours,
            the experiment will run for 4 + 5 = 9 hours (not 6 hours).
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
