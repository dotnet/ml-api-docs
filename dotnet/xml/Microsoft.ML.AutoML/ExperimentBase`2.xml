<Type Name="ExperimentBase&lt;TMetrics,TExperimentSettings&gt;" FullName="Microsoft.ML.AutoML.ExperimentBase&lt;TMetrics,TExperimentSettings&gt;">
  <TypeSignature Language="C#" Value="public abstract class ExperimentBase&lt;TMetrics,TExperimentSettings&gt; where TMetrics : class where TExperimentSettings : ExperimentSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExperimentBase`2&lt;class TMetrics, (class Microsoft.ML.AutoML.ExperimentSettings) TExperimentSettings&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.AutoML.ExperimentBase`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExperimentBase(Of TMetrics, TExperimentSettings)" />
  <TypeSignature Language="F#" Value="type ExperimentBase&lt;'Metrics, 'ExperimentSettings (requires 'Metrics : null and 'ExperimentSettings :&gt; ExperimentSettings)&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.AutoML</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TMetrics">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TExperimentSettings">
      <Constraints>
        <BaseTypeName>Microsoft.ML.AutoML.ExperimentSettings</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TMetrics">Metrics type used by task-specific AutoML experiments.</typeparam>
    <typeparam name="TExperimentSettings">Experiment settings type.</typeparam>
    <summary>
            AutoML experiment base class. All task-specific AutoML experiments
            (like <see cref="T:Microsoft.ML.AutoML.BinaryClassificationExperiment" />) inherit from this class.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public Microsoft.ML.AutoML.ExperimentResult&lt;TMetrics&gt; Execute (Microsoft.ML.IDataView trainData, Microsoft.ML.AutoML.ColumnInformation columnInformation, Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt; preFeaturizer = default, IProgress&lt;Microsoft.ML.AutoML.RunDetail&lt;TMetrics&gt;&gt; progressHandler = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.AutoML.ExperimentResult`1&lt;!TMetrics&gt; Execute(class Microsoft.ML.IDataView trainData, class Microsoft.ML.AutoML.ColumnInformation columnInformation, class Microsoft.ML.IEstimator`1&lt;class Microsoft.ML.ITransformer&gt; preFeaturizer, class System.IProgress`1&lt;class Microsoft.ML.AutoML.RunDetail`1&lt;!TMetrics&gt;&gt; progressHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.AutoML.ExperimentBase`2.Execute(Microsoft.ML.IDataView,Microsoft.ML.AutoML.ColumnInformation,Microsoft.ML.IEstimator{Microsoft.ML.ITransformer},System.IProgress{Microsoft.ML.AutoML.RunDetail{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute (trainData As IDataView, columnInformation As ColumnInformation, Optional preFeaturizer As IEstimator(Of ITransformer) = null, Optional progressHandler As IProgress(Of RunDetail(Of TMetrics)) = null) As ExperimentResult(Of TMetrics)" />
      <MemberSignature Language="F#" Value="member this.Execute : Microsoft.ML.IDataView * Microsoft.ML.AutoML.ColumnInformation * Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt; * IProgress&lt;Microsoft.ML.AutoML.RunDetail&lt;'Metrics&gt;&gt; -&gt; Microsoft.ML.AutoML.ExperimentResult&lt;'Metrics (requires 'Metrics : null)&gt;" Usage="experimentBase.Execute (trainData, columnInformation, preFeaturizer, progressHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.AutoML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.AutoML.ExperimentResult&lt;TMetrics&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainData" Type="Microsoft.ML.IDataView" />
        <Parameter Name="columnInformation" Type="Microsoft.ML.AutoML.ColumnInformation" />
        <Parameter Name="preFeaturizer" Type="Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt;" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Microsoft.ML.AutoML.RunDetail&lt;TMetrics&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="trainData">The training data to be used by the AutoML experiment.</param>
        <param name="columnInformation">Column information for the dataset.</param>
        <param name="preFeaturizer">Pre-featurizer that AutoML will apply to the data during an
            experiment. (The pre-featurizer will be fit only on the training data split to produce a
            trained transform. Then, the trained transform will be applied to both the training
            data split and corresponding validation data split.)</param>
        <param name="progressHandler">A user-defined object that implements
            the <see cref="T:System.IProgress`1" /> interface. AutoML will invoke the method
            <see cref="M:System.IProgress`1.Report(`0)" /> after each model it produces during the
            course of the experiment.
            </param>
        <summary>
            Executes an AutoML experiment.
            </summary>
        <returns>The experiment result.</returns>
        <remarks>
            Depending on the size of your data, the AutoML experiment could take a long time to execute.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public Microsoft.ML.AutoML.ExperimentResult&lt;TMetrics&gt; Execute (Microsoft.ML.IDataView trainData, Microsoft.ML.IDataView validationData, Microsoft.ML.AutoML.ColumnInformation columnInformation, Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt; preFeaturizer = default, IProgress&lt;Microsoft.ML.AutoML.RunDetail&lt;TMetrics&gt;&gt; progressHandler = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.AutoML.ExperimentResult`1&lt;!TMetrics&gt; Execute(class Microsoft.ML.IDataView trainData, class Microsoft.ML.IDataView validationData, class Microsoft.ML.AutoML.ColumnInformation columnInformation, class Microsoft.ML.IEstimator`1&lt;class Microsoft.ML.ITransformer&gt; preFeaturizer, class System.IProgress`1&lt;class Microsoft.ML.AutoML.RunDetail`1&lt;!TMetrics&gt;&gt; progressHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.AutoML.ExperimentBase`2.Execute(Microsoft.ML.IDataView,Microsoft.ML.IDataView,Microsoft.ML.AutoML.ColumnInformation,Microsoft.ML.IEstimator{Microsoft.ML.ITransformer},System.IProgress{Microsoft.ML.AutoML.RunDetail{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute (trainData As IDataView, validationData As IDataView, columnInformation As ColumnInformation, Optional preFeaturizer As IEstimator(Of ITransformer) = null, Optional progressHandler As IProgress(Of RunDetail(Of TMetrics)) = null) As ExperimentResult(Of TMetrics)" />
      <MemberSignature Language="F#" Value="member this.Execute : Microsoft.ML.IDataView * Microsoft.ML.IDataView * Microsoft.ML.AutoML.ColumnInformation * Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt; * IProgress&lt;Microsoft.ML.AutoML.RunDetail&lt;'Metrics&gt;&gt; -&gt; Microsoft.ML.AutoML.ExperimentResult&lt;'Metrics (requires 'Metrics : null)&gt;" Usage="experimentBase.Execute (trainData, validationData, columnInformation, preFeaturizer, progressHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.AutoML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.AutoML.ExperimentResult&lt;TMetrics&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainData" Type="Microsoft.ML.IDataView" />
        <Parameter Name="validationData" Type="Microsoft.ML.IDataView" />
        <Parameter Name="columnInformation" Type="Microsoft.ML.AutoML.ColumnInformation" />
        <Parameter Name="preFeaturizer" Type="Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt;" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Microsoft.ML.AutoML.RunDetail&lt;TMetrics&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="trainData">The training data to be used by the AutoML experiment.</param>
        <param name="validationData">The validation data to be used by the AutoML experiment.</param>
        <param name="columnInformation">Column information for the dataset.</param>
        <param name="preFeaturizer">Pre-featurizer that AutoML will apply to the data during an
            experiment. (The pre-featurizer will be fit only on the training data split to produce a
            trained transform. Then, the trained transform will be applied to both the training
            data split and corresponding validation data split.)</param>
        <param name="progressHandler">A user-defined object that implements
            the <see cref="T:System.IProgress`1" /> interface. AutoML will invoke the method
            <see cref="M:System.IProgress`1.Report(`0)" /> after each model it produces during the
            course of the experiment.
            </param>
        <summary>
            Executes an AutoML experiment.
            </summary>
        <returns>The experiment result.</returns>
        <remarks>
            Depending on the size of your data, the AutoML experiment could take a long time to execute.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public Microsoft.ML.AutoML.ExperimentResult&lt;TMetrics&gt; Execute (Microsoft.ML.IDataView trainData, Microsoft.ML.IDataView validationData, string labelColumnName = &quot;Label&quot;, Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt; preFeaturizer = default, IProgress&lt;Microsoft.ML.AutoML.RunDetail&lt;TMetrics&gt;&gt; progressHandler = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.AutoML.ExperimentResult`1&lt;!TMetrics&gt; Execute(class Microsoft.ML.IDataView trainData, class Microsoft.ML.IDataView validationData, string labelColumnName, class Microsoft.ML.IEstimator`1&lt;class Microsoft.ML.ITransformer&gt; preFeaturizer, class System.IProgress`1&lt;class Microsoft.ML.AutoML.RunDetail`1&lt;!TMetrics&gt;&gt; progressHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.AutoML.ExperimentBase`2.Execute(Microsoft.ML.IDataView,Microsoft.ML.IDataView,System.String,Microsoft.ML.IEstimator{Microsoft.ML.ITransformer},System.IProgress{Microsoft.ML.AutoML.RunDetail{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute (trainData As IDataView, validationData As IDataView, Optional labelColumnName As String = &quot;Label&quot;, Optional preFeaturizer As IEstimator(Of ITransformer) = null, Optional progressHandler As IProgress(Of RunDetail(Of TMetrics)) = null) As ExperimentResult(Of TMetrics)" />
      <MemberSignature Language="F#" Value="member this.Execute : Microsoft.ML.IDataView * Microsoft.ML.IDataView * string * Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt; * IProgress&lt;Microsoft.ML.AutoML.RunDetail&lt;'Metrics&gt;&gt; -&gt; Microsoft.ML.AutoML.ExperimentResult&lt;'Metrics (requires 'Metrics : null)&gt;" Usage="experimentBase.Execute (trainData, validationData, labelColumnName, preFeaturizer, progressHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.AutoML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.AutoML.ExperimentResult&lt;TMetrics&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainData" Type="Microsoft.ML.IDataView" />
        <Parameter Name="validationData" Type="Microsoft.ML.IDataView" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="preFeaturizer" Type="Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt;" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Microsoft.ML.AutoML.RunDetail&lt;TMetrics&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="trainData">The training data to be used by the AutoML experiment.</param>
        <param name="validationData">The validation data to be used by the AutoML experiment.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="preFeaturizer">Pre-featurizer that AutoML will apply to the data during an
            experiment. (The pre-featurizer will be fit only on the training data split to produce a
            trained transform. Then, the trained transform will be applied to both the training
            data split and corresponding validation data split.)</param>
        <param name="progressHandler">A user-defined object that implements
            the <see cref="T:System.IProgress`1" /> interface. AutoML will invoke the method
            <see cref="M:System.IProgress`1.Report(`0)" /> after each model it produces during the
            course of the experiment.
            </param>
        <summary>
            Executes an AutoML experiment.
            </summary>
        <returns>The experiment result.</returns>
        <remarks>
            Depending on the size of your data, the AutoML experiment could take a long time to execute.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public Microsoft.ML.AutoML.ExperimentResult&lt;TMetrics&gt; Execute (Microsoft.ML.IDataView trainData, string labelColumnName = &quot;Label&quot;, string samplingKeyColumn = default, Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt; preFeaturizer = default, IProgress&lt;Microsoft.ML.AutoML.RunDetail&lt;TMetrics&gt;&gt; progressHandler = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.AutoML.ExperimentResult`1&lt;!TMetrics&gt; Execute(class Microsoft.ML.IDataView trainData, string labelColumnName, string samplingKeyColumn, class Microsoft.ML.IEstimator`1&lt;class Microsoft.ML.ITransformer&gt; preFeaturizer, class System.IProgress`1&lt;class Microsoft.ML.AutoML.RunDetail`1&lt;!TMetrics&gt;&gt; progressHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.AutoML.ExperimentBase`2.Execute(Microsoft.ML.IDataView,System.String,System.String,Microsoft.ML.IEstimator{Microsoft.ML.ITransformer},System.IProgress{Microsoft.ML.AutoML.RunDetail{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute (trainData As IDataView, Optional labelColumnName As String = &quot;Label&quot;, Optional samplingKeyColumn As String = null, Optional preFeaturizer As IEstimator(Of ITransformer) = null, Optional progressHandler As IProgress(Of RunDetail(Of TMetrics)) = null) As ExperimentResult(Of TMetrics)" />
      <MemberSignature Language="F#" Value="member this.Execute : Microsoft.ML.IDataView * string * string * Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt; * IProgress&lt;Microsoft.ML.AutoML.RunDetail&lt;'Metrics&gt;&gt; -&gt; Microsoft.ML.AutoML.ExperimentResult&lt;'Metrics (requires 'Metrics : null)&gt;" Usage="experimentBase.Execute (trainData, labelColumnName, samplingKeyColumn, preFeaturizer, progressHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.AutoML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.AutoML.ExperimentResult&lt;TMetrics&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainData" Type="Microsoft.ML.IDataView" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="samplingKeyColumn" Type="System.String" />
        <Parameter Name="preFeaturizer" Type="Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt;" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Microsoft.ML.AutoML.RunDetail&lt;TMetrics&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="trainData">The training data used by the AutoML experiment.</param>
        <param name="labelColumnName">The dataset column used as the label.</param>
        <param name="samplingKeyColumn">The dataset column used as the sampling key column.
            See <see cref="P:Microsoft.ML.AutoML.ColumnInformation.SamplingKeyColumnName" /> for more information.</param>
        <param name="preFeaturizer">Pre-featurizer that AutoML will apply to the data during an
            experiment. (The pre-featurizer will be fit only on the training data split to produce a
            trained transform. Then, the trained transform will be applied to both the training
            data split and corresponding validation data split.)</param>
        <param name="progressHandler">A user-defined object that implements
            the <see cref="T:System.IProgress`1" /> interface. AutoML will invoke the method
            <see cref="M:System.IProgress`1.Report(`0)" /> after each model it produces during the
            course of the experiment.
            </param>
        <summary>
            Executes an AutoML experiment.
            </summary>
        <returns>The experiment result.</returns>
        <remarks>
            Depending on the size of your data, the AutoML experiment could take a long time to execute.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public Microsoft.ML.AutoML.CrossValidationExperimentResult&lt;TMetrics&gt; Execute (Microsoft.ML.IDataView trainData, uint numberOfCVFolds, Microsoft.ML.AutoML.ColumnInformation columnInformation = default, Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt; preFeaturizer = default, IProgress&lt;Microsoft.ML.AutoML.CrossValidationRunDetail&lt;TMetrics&gt;&gt; progressHandler = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.AutoML.CrossValidationExperimentResult`1&lt;!TMetrics&gt; Execute(class Microsoft.ML.IDataView trainData, unsigned int32 numberOfCVFolds, class Microsoft.ML.AutoML.ColumnInformation columnInformation, class Microsoft.ML.IEstimator`1&lt;class Microsoft.ML.ITransformer&gt; preFeaturizer, class System.IProgress`1&lt;class Microsoft.ML.AutoML.CrossValidationRunDetail`1&lt;!TMetrics&gt;&gt; progressHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.AutoML.ExperimentBase`2.Execute(Microsoft.ML.IDataView,System.UInt32,Microsoft.ML.AutoML.ColumnInformation,Microsoft.ML.IEstimator{Microsoft.ML.ITransformer},System.IProgress{Microsoft.ML.AutoML.CrossValidationRunDetail{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute (trainData As IDataView, numberOfCVFolds As UInteger, Optional columnInformation As ColumnInformation = null, Optional preFeaturizer As IEstimator(Of ITransformer) = null, Optional progressHandler As IProgress(Of CrossValidationRunDetail(Of TMetrics)) = null) As CrossValidationExperimentResult(Of TMetrics)" />
      <MemberSignature Language="F#" Value="member this.Execute : Microsoft.ML.IDataView * uint32 * Microsoft.ML.AutoML.ColumnInformation * Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt; * IProgress&lt;Microsoft.ML.AutoML.CrossValidationRunDetail&lt;'Metrics&gt;&gt; -&gt; Microsoft.ML.AutoML.CrossValidationExperimentResult&lt;'Metrics (requires 'Metrics : null)&gt;" Usage="experimentBase.Execute (trainData, numberOfCVFolds, columnInformation, preFeaturizer, progressHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.AutoML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.AutoML.CrossValidationExperimentResult&lt;TMetrics&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainData" Type="Microsoft.ML.IDataView" />
        <Parameter Name="numberOfCVFolds" Type="System.UInt32" />
        <Parameter Name="columnInformation" Type="Microsoft.ML.AutoML.ColumnInformation" />
        <Parameter Name="preFeaturizer" Type="Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt;" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Microsoft.ML.AutoML.CrossValidationRunDetail&lt;TMetrics&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="trainData">The training data to be used by the AutoML experiment.</param>
        <param name="numberOfCVFolds">The number of cross validation folds into which the training data should be divided when fitting a model.</param>
        <param name="columnInformation">Column information for the dataset.</param>
        <param name="preFeaturizer">Pre-featurizer that AutoML will apply to the data during an
            experiment. (The pre-featurizer will be fit only on the training data split to produce a
            trained transform. Then, the trained transform will be applied to both the training
            data split and corresponding validation data split.)</param>
        <param name="progressHandler">A user-defined object that implements
            the <see cref="T:System.IProgress`1" /> interface. AutoML will invoke the method
            <see cref="M:System.IProgress`1.Report(`0)" /> after each model it produces during the
            course of the experiment.
            </param>
        <summary>
            Executes an AutoML experiment.
            </summary>
        <returns>The cross validation experiment result.</returns>
        <remarks>
            Depending on the size of your data, the AutoML experiment could take a long time to execute.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public Microsoft.ML.AutoML.CrossValidationExperimentResult&lt;TMetrics&gt; Execute (Microsoft.ML.IDataView trainData, uint numberOfCVFolds, string labelColumnName = &quot;Label&quot;, string samplingKeyColumn = default, Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt; preFeaturizer = default, Progress&lt;Microsoft.ML.AutoML.CrossValidationRunDetail&lt;TMetrics&gt;&gt; progressHandler = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.AutoML.CrossValidationExperimentResult`1&lt;!TMetrics&gt; Execute(class Microsoft.ML.IDataView trainData, unsigned int32 numberOfCVFolds, string labelColumnName, string samplingKeyColumn, class Microsoft.ML.IEstimator`1&lt;class Microsoft.ML.ITransformer&gt; preFeaturizer, class System.Progress`1&lt;class Microsoft.ML.AutoML.CrossValidationRunDetail`1&lt;!TMetrics&gt;&gt; progressHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.AutoML.ExperimentBase`2.Execute(Microsoft.ML.IDataView,System.UInt32,System.String,System.String,Microsoft.ML.IEstimator{Microsoft.ML.ITransformer},System.Progress{Microsoft.ML.AutoML.CrossValidationRunDetail{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute (trainData As IDataView, numberOfCVFolds As UInteger, Optional labelColumnName As String = &quot;Label&quot;, Optional samplingKeyColumn As String = null, Optional preFeaturizer As IEstimator(Of ITransformer) = null, Optional progressHandler As Progress(Of CrossValidationRunDetail(Of TMetrics)) = null) As CrossValidationExperimentResult(Of TMetrics)" />
      <MemberSignature Language="F#" Value="member this.Execute : Microsoft.ML.IDataView * uint32 * string * string * Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt; * Progress&lt;Microsoft.ML.AutoML.CrossValidationRunDetail&lt;'Metrics&gt;&gt; -&gt; Microsoft.ML.AutoML.CrossValidationExperimentResult&lt;'Metrics (requires 'Metrics : null)&gt;" Usage="experimentBase.Execute (trainData, numberOfCVFolds, labelColumnName, samplingKeyColumn, preFeaturizer, progressHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.AutoML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.AutoML.CrossValidationExperimentResult&lt;TMetrics&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainData" Type="Microsoft.ML.IDataView" />
        <Parameter Name="numberOfCVFolds" Type="System.UInt32" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="samplingKeyColumn" Type="System.String" />
        <Parameter Name="preFeaturizer" Type="Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt;" />
        <Parameter Name="progressHandler" Type="System.Progress&lt;Microsoft.ML.AutoML.CrossValidationRunDetail&lt;TMetrics&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="trainData">The training data to be used by the AutoML experiment.</param>
        <param name="numberOfCVFolds">The number of cross validation folds into which the training data should be divided when fitting a model.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="samplingKeyColumn">The name of the sampling key column.</param>
        <param name="preFeaturizer">Pre-featurizer that AutoML will apply to the data during an
            experiment. (The pre-featurizer will be fit only on the training data split to produce a
            trained transform. Then, the trained transform will be applied to both the training
            data split and corresponding validation data split.)</param>
        <param name="progressHandler">A user-defined object that implements
            the <see cref="T:System.IProgress`1" /> interface. AutoML will invoke the method
            <see cref="M:System.IProgress`1.Report(`0)" /> after each model it produces during the
            course of the experiment.
            </param>
        <summary>
            Executes an AutoML experiment.
            </summary>
        <returns>The cross validation experiment result.</returns>
        <remarks>
            Depending on the size of your data, the AutoML experiment could take a long time to execute.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
