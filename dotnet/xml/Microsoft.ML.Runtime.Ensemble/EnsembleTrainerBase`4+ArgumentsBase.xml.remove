<Type Name="EnsembleTrainerBase&lt;TOutput,TPredictor,TSelector,TCombiner&gt;+ArgumentsBase" FullName="Microsoft.ML.Runtime.Ensemble.EnsembleTrainerBase&lt;TOutput,TPredictor,TSelector,TCombiner&gt;+ArgumentsBase">
  <TypeSignature Language="C#" Value="public abstract class EnsembleTrainerBase&lt;TOutput,TPredictor,TSelector,TCombiner&gt;.ArgumentsBase : Microsoft.ML.Runtime.EntryPoints.LearnerInputBaseWithLabel where TPredictor : class, IPredictorProducing&lt;TOutput&gt; where TSelector : class, ISubModelSelector&lt;TOutput&gt; where TCombiner : class, IOutputCombiner&lt;TOutput&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi abstract beforefieldinit EnsembleTrainerBase`4/ArgumentsBase&lt;TOutput, class (class Microsoft.ML.Runtime.IPredictorProducing`1&lt;!TOutput&gt;) TPredictor, class (class Microsoft.ML.Runtime.Ensemble.Selector.ISubModelSelector`1&lt;!TOutput&gt;) TSelector, class (class Microsoft.ML.Runtime.Ensemble.OutputCombiners.IOutputCombiner`1&lt;!TOutput&gt;) TCombiner&gt; extends Microsoft.ML.Runtime.EntryPoints.LearnerInputBaseWithLabel" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Ensemble.EnsembleTrainerBase`4.ArgumentsBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EnsembleTrainerBase(Of TOutput, TPredictor, TSelector, TCombiner).ArgumentsBase&#xA;Inherits LearnerInputBaseWithLabel" />
  <TypeSignature Language="F#" Value="type EnsembleTrainerBase&lt;'Output, 'Predictor, 'Selector, 'Combiner (requires 'Predictor : null and 'Predictor :&gt; IPredictorProducing&lt;'Output&gt; and 'Selector : null and 'Selector :&gt; ISubModelSelector&lt;'Output&gt; and 'Combiner : null and 'Combiner :&gt; IOutputCombiner&lt;'Output&gt;)&gt;.ArgumentsBase = class&#xA;    inherit LearnerInputBaseWithLabel" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Ensemble</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TOutput" />
    <TypeParameter Name="TPredictor">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
        <InterfaceName>Microsoft.ML.Runtime.IPredictorProducing&lt;TOutput&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TSelector">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
        <InterfaceName>Microsoft.ML.Runtime.Ensemble.Selector.ISubModelSelector&lt;TOutput&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TCombiner">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
        <InterfaceName>Microsoft.ML.Runtime.Ensemble.OutputCombiners.IOutputCombiner&lt;TOutput&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.EntryPoints.LearnerInputBaseWithLabel</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ArgumentsBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Ensemble.EnsembleTrainerBase`4.ArgumentsBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Ensemble</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchSize">
      <MemberSignature Language="C#" Value="public int BatchSize;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 BatchSize" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Ensemble.EnsembleTrainerBase`4.ArgumentsBase.BatchSize" />
      <MemberSignature Language="VB.NET" Value="Public BatchSize As Integer " />
      <MemberSignature Language="F#" Value="val mutable BatchSize : int" Usage="Microsoft.ML.Runtime.Ensemble.EnsembleTrainerBase&lt;'Output, 'Predictor, 'Selector, 'Combiner (requires 'Predictor : null and 'Predictor :&gt; Microsoft.ML.Runtime.IPredictorProducing&lt;'Output&gt; and 'Selector : null and 'Selector :&gt; Microsoft.ML.Runtime.Ensemble.Selector.ISubModelSelector&lt;'Output&gt; and 'Combiner : null and 'Combiner :&gt; Microsoft.ML.Runtime.Ensemble.OutputCombiners.IOutputCombiner&lt;'Output&gt;)&gt;.ArgumentsBase.BatchSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Ensemble</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.CommandLine.Argument(Microsoft.ML.Runtime.CommandLine.ArgumentType.AtMostOnce, HelpText="Batch size", ShortName="bs", SortOrder=107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.Internal.Internallearn.TGUI(Description="Number of instances to be loaded in memory to create an ensemble out of it. All the instances will be loaded if the value is -1.", Label="Batch Size")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumModels">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; NumModels;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Nullable`1&lt;int32&gt; NumModels" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Ensemble.EnsembleTrainerBase`4.ArgumentsBase.NumModels" />
      <MemberSignature Language="VB.NET" Value="Public NumModels As Nullable(Of Integer) " />
      <MemberSignature Language="F#" Value="val mutable NumModels : Nullable&lt;int&gt;" Usage="Microsoft.ML.Runtime.Ensemble.EnsembleTrainerBase&lt;'Output, 'Predictor, 'Selector, 'Combiner (requires 'Predictor : null and 'Predictor :&gt; Microsoft.ML.Runtime.IPredictorProducing&lt;'Output&gt; and 'Selector : null and 'Selector :&gt; Microsoft.ML.Runtime.Ensemble.Selector.ISubModelSelector&lt;'Output&gt; and 'Combiner : null and 'Combiner :&gt; Microsoft.ML.Runtime.Ensemble.OutputCombiners.IOutputCombiner&lt;'Output&gt;)&gt;.ArgumentsBase.NumModels" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Ensemble</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.CommandLine.Argument(Microsoft.ML.Runtime.CommandLine.ArgumentType.AtMostOnce, HelpText="Number of models per batch. If not specified, will default to 50 if there is only one base predictor, or the number of base predictors otherwise.", ShortName="nm", SortOrder=3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.Internal.Internallearn.TGUI(Label="Number of Models per batch")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SamplingType">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Ensemble.Selector.ISupportSubsetSelectorFactory SamplingType;" />
      <MemberSignature Language="ILAsm" Value=".field public class Microsoft.ML.Runtime.Ensemble.Selector.ISupportSubsetSelectorFactory SamplingType" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Ensemble.EnsembleTrainerBase`4.ArgumentsBase.SamplingType" />
      <MemberSignature Language="VB.NET" Value="Public SamplingType As ISupportSubsetSelectorFactory " />
      <MemberSignature Language="F#" Value="val mutable SamplingType : Microsoft.ML.Runtime.Ensemble.Selector.ISupportSubsetSelectorFactory" Usage="Microsoft.ML.Runtime.Ensemble.EnsembleTrainerBase&lt;'Output, 'Predictor, 'Selector, 'Combiner (requires 'Predictor : null and 'Predictor :&gt; Microsoft.ML.Runtime.IPredictorProducing&lt;'Output&gt; and 'Selector : null and 'Selector :&gt; Microsoft.ML.Runtime.Ensemble.Selector.ISubModelSelector&lt;'Output&gt; and 'Combiner : null and 'Combiner :&gt; Microsoft.ML.Runtime.Ensemble.OutputCombiners.IOutputCombiner&lt;'Output&gt;)&gt;.ArgumentsBase.SamplingType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Ensemble</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.CommandLine.Argument(Microsoft.ML.Runtime.CommandLine.ArgumentType.LastOccurenceWins, HelpText="Sampling Type", ShortName="st", SortOrder=2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.Internal.Internallearn.TGUI(Description="Subset Selection Algorithm to induce the base learner.Sub-settings can be used to select the features", Label="Sampling Type")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Ensemble.Selector.ISupportSubsetSelectorFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowMetrics">
      <MemberSignature Language="C#" Value="public bool ShowMetrics;" />
      <MemberSignature Language="ILAsm" Value=".field public bool ShowMetrics" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Ensemble.EnsembleTrainerBase`4.ArgumentsBase.ShowMetrics" />
      <MemberSignature Language="VB.NET" Value="Public ShowMetrics As Boolean " />
      <MemberSignature Language="F#" Value="val mutable ShowMetrics : bool" Usage="Microsoft.ML.Runtime.Ensemble.EnsembleTrainerBase&lt;'Output, 'Predictor, 'Selector, 'Combiner (requires 'Predictor : null and 'Predictor :&gt; Microsoft.ML.Runtime.IPredictorProducing&lt;'Output&gt; and 'Selector : null and 'Selector :&gt; Microsoft.ML.Runtime.Ensemble.Selector.ISubModelSelector&lt;'Output&gt; and 'Combiner : null and 'Combiner :&gt; Microsoft.ML.Runtime.Ensemble.OutputCombiners.IOutputCombiner&lt;'Output&gt;)&gt;.ArgumentsBase.ShowMetrics" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Ensemble</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.CommandLine.Argument(Microsoft.ML.Runtime.CommandLine.ArgumentType.AtMostOnce, HelpText="True, if metrics for each model need to be evaluated and shown in comparison table. This is done by using validation set if available or the training set", ShortName="sm", SortOrder=108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.Internal.Internallearn.TGUI(Label="Show Sub-Model Metrics")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainParallel">
      <MemberSignature Language="C#" Value="public bool TrainParallel;" />
      <MemberSignature Language="ILAsm" Value=".field public bool TrainParallel" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Ensemble.EnsembleTrainerBase`4.ArgumentsBase.TrainParallel" />
      <MemberSignature Language="VB.NET" Value="Public TrainParallel As Boolean " />
      <MemberSignature Language="F#" Value="val mutable TrainParallel : bool" Usage="Microsoft.ML.Runtime.Ensemble.EnsembleTrainerBase&lt;'Output, 'Predictor, 'Selector, 'Combiner (requires 'Predictor : null and 'Predictor :&gt; Microsoft.ML.Runtime.IPredictorProducing&lt;'Output&gt; and 'Selector : null and 'Selector :&gt; Microsoft.ML.Runtime.Ensemble.Selector.ISubModelSelector&lt;'Output&gt; and 'Combiner : null and 'Combiner :&gt; Microsoft.ML.Runtime.Ensemble.OutputCombiners.IOutputCombiner&lt;'Output&gt;)&gt;.ArgumentsBase.TrainParallel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Ensemble</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.CommandLine.Argument(Microsoft.ML.Runtime.CommandLine.ArgumentType.AtMostOnce, HelpText="All the base learners will run asynchronously if the value is true", ShortName="tp", SortOrder=106)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.Internal.Internallearn.TGUI(Description="All the base learners will run asynchronously if the value is true", Label="Train parallel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
