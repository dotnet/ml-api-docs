<Type Name="TransformerChain" FullName="Microsoft.ML.Data.TransformerChain">
  <TypeSignature Language="C#" Value="public static class TransformerChain" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TransformerChain extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Data.TransformerChain" />
  <TypeSignature Language="VB.NET" Value="Public Module TransformerChain" />
  <TypeSignature Language="F#" Value="type TransformerChain = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Saving/loading routines for transformer chains.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="LoaderSignature">
      <MemberSignature Language="C#" Value="public const string LoaderSignature;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string LoaderSignature" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Data.TransformerChain.LoaderSignature" />
      <MemberSignature Language="VB.NET" Value="Public Const LoaderSignature As String " />
      <MemberSignature Language="F#" Value="val mutable LoaderSignature : string" Usage="Microsoft.ML.Data.TransformerChain.LoaderSignature" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Data.TransformerChain&lt;Microsoft.ML.ITransformer&gt; LoadFrom (Microsoft.ML.IHostEnvironment env, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Data.TransformerChain`1&lt;class Microsoft.ML.ITransformer&gt; LoadFrom(class Microsoft.ML.IHostEnvironment env, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.TransformerChain.LoadFrom(Microsoft.ML.IHostEnvironment,System.IO.Stream)" />
      <MemberSignature Language="F#" Value="static member LoadFrom : Microsoft.ML.IHostEnvironment * System.IO.Stream -&gt; Microsoft.ML.Data.TransformerChain&lt;Microsoft.ML.ITransformer&gt;" Usage="Microsoft.ML.Data.TransformerChain.LoadFrom (env, stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.TransformerChain&lt;Microsoft.ML.ITransformer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="stream">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveTo">
      <MemberSignature Language="C#" Value="public static void SaveTo (this Microsoft.ML.ITransformer transformer, Microsoft.ML.IHostEnvironment env, System.IO.Stream outputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SaveTo(class Microsoft.ML.ITransformer transformer, class Microsoft.ML.IHostEnvironment env, class System.IO.Stream outputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.TransformerChain.SaveTo(Microsoft.ML.ITransformer,Microsoft.ML.IHostEnvironment,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SaveTo (transformer As ITransformer, env As IHostEnvironment, outputStream As Stream)" />
      <MemberSignature Language="F#" Value="static member SaveTo : Microsoft.ML.ITransformer * Microsoft.ML.IHostEnvironment * System.IO.Stream -&gt; unit" Usage="Microsoft.ML.Data.TransformerChain.SaveTo (transformer, env, outputStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformer" Type="Microsoft.ML.ITransformer" RefType="this" />
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="outputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="transformer">To be added.</param>
        <param name="env">To be added.</param>
        <param name="outputStream">To be added.</param>
        <summary>
            Save any transformer to a stream by wrapping it into a transformer chain.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>