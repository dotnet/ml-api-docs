<Type Name="MetadataBuilder" FullName="Microsoft.ML.Data.MetadataBuilder">
  <TypeSignature Language="C#" Value="public sealed class MetadataBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MetadataBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Data.MetadataBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MetadataBuilder" />
  <TypeSignature Language="F#" Value="type MetadataBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The class that incrementally builds a <see cref="T:Microsoft.ML.Data.Schema.Metadata" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.MetadataBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Data.Schema.Metadata metadata, Func&lt;string,bool&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Data.Schema/Metadata metadata, class System.Func`2&lt;string, bool&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.MetadataBuilder.Add(Microsoft.ML.Data.Schema.Metadata,System.Func{System.String,System.Boolean})" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Data.Schema.Metadata * Func&lt;string, bool&gt; -&gt; unit" Usage="metadataBuilder.Add (metadata, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="Microsoft.ML.Data.Schema+Metadata" />
        <Parameter Name="selector" Type="System.Func&lt;System.String,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="metadata">The metadata row to take values from.</param>
        <param name="selector">The predicate describing which metadata columns to keep.</param>
        <summary>
            Add some columns from <paramref name="metadata" /> into our new metadata, by applying <paramref name="selector" />
            to all the names.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, Microsoft.ML.Data.ColumnType type, Delegate getter, Microsoft.ML.Data.Schema.Metadata metadata = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, class Microsoft.ML.Data.ColumnType type, class System.Delegate getter, class Microsoft.ML.Data.Schema/Metadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.MetadataBuilder.Add(System.String,Microsoft.ML.Data.ColumnType,System.Delegate,Microsoft.ML.Data.Schema.Metadata)" />
      <MemberSignature Language="F#" Value="member this.Add : string * Microsoft.ML.Data.ColumnType * Delegate * Microsoft.ML.Data.Schema.Metadata -&gt; unit" Usage="metadataBuilder.Add (name, type, getter, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="Microsoft.ML.Data.ColumnType" />
        <Parameter Name="getter" Type="System.Delegate" />
        <Parameter Name="metadata" Type="Microsoft.ML.Data.Schema+Metadata" />
      </Parameters>
      <Docs>
        <param name="name">The metadata name.</param>
        <param name="type">The metadata type.</param>
        <param name="getter">The getter delegate that provides the value. Note that the type of the getter is still checked
            inside this method.</param>
        <param name="metadata">Metadata of the input column. Note that metadata on a metadata column is somewhat rare
            except for certain types (for example, slot names for a vector, key values for something of key type).</param>
        <summary>
            Add one metadata column, weakly-typed version.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public void Add&lt;TValue&gt; (string name, Microsoft.ML.Data.ColumnType type, Microsoft.ML.Data.ValueGetter&lt;TValue&gt; getter, Microsoft.ML.Data.Schema.Metadata metadata = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add&lt;TValue&gt;(string name, class Microsoft.ML.Data.ColumnType type, class Microsoft.ML.Data.ValueGetter`1&lt;!!TValue&gt; getter, class Microsoft.ML.Data.Schema/Metadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.MetadataBuilder.Add``1(System.String,Microsoft.ML.Data.ColumnType,Microsoft.ML.Data.ValueGetter{``0},Microsoft.ML.Data.Schema.Metadata)" />
      <MemberSignature Language="F#" Value="member this.Add : string * Microsoft.ML.Data.ColumnType * Microsoft.ML.Data.ValueGetter&lt;'Value&gt; * Microsoft.ML.Data.Schema.Metadata -&gt; unit" Usage="metadataBuilder.Add (name, type, getter, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="Microsoft.ML.Data.ColumnType" />
        <Parameter Name="getter" Type="Microsoft.ML.Data.ValueGetter&lt;TValue&gt;" />
        <Parameter Name="metadata" Type="Microsoft.ML.Data.Schema+Metadata" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of the value.</typeparam>
        <param name="name">The metadata name.</param>
        <param name="type">The metadata type.</param>
        <param name="getter">The getter delegate.</param>
        <param name="metadata">Metadata of the input column. Note that metadata on a metadata column is somewhat rare
            except for certain types (for example, slot names for a vector, key values for something of key type).</param>
        <summary>
            Add one metadata column, strongly-typed version.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyValues&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public void AddKeyValues&lt;TValue&gt; (int size, Microsoft.ML.Data.PrimitiveType valueType, Microsoft.ML.Data.ValueGetter&lt;Microsoft.ML.Data.VBuffer&lt;TValue&gt;&gt; getter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddKeyValues&lt;TValue&gt;(int32 size, class Microsoft.ML.Data.PrimitiveType valueType, class Microsoft.ML.Data.ValueGetter`1&lt;valuetype Microsoft.ML.Data.VBuffer`1&lt;!!TValue&gt;&gt; getter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.MetadataBuilder.AddKeyValues``1(System.Int32,Microsoft.ML.Data.PrimitiveType,Microsoft.ML.Data.ValueGetter{Microsoft.ML.Data.VBuffer{``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddKeyValues(Of TValue) (size As Integer, valueType As PrimitiveType, getter As ValueGetter(Of VBuffer(Of TValue)))" />
      <MemberSignature Language="F#" Value="member this.AddKeyValues : int * Microsoft.ML.Data.PrimitiveType * Microsoft.ML.Data.ValueGetter&lt;Microsoft.ML.Data.VBuffer&lt;'Value&gt;&gt; -&gt; unit" Usage="metadataBuilder.AddKeyValues (size, valueType, getter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="valueType" Type="Microsoft.ML.Data.PrimitiveType" />
        <Parameter Name="getter" Type="Microsoft.ML.Data.ValueGetter&lt;Microsoft.ML.Data.VBuffer&lt;TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The value type of key values.</typeparam>
        <param name="size">The size of key values vector.</param>
        <param name="valueType">The value type of key values. Its raw type must match <typeparamref name="TValue" />.</param>
        <param name="getter">The getter delegate for the key values.</param>
        <summary>
            Add key values metadata.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPrimitiveValue&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public void AddPrimitiveValue&lt;TValue&gt; (string name, Microsoft.ML.Data.PrimitiveType type, TValue value, Microsoft.ML.Data.Schema.Metadata metadata = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPrimitiveValue&lt;TValue&gt;(string name, class Microsoft.ML.Data.PrimitiveType type, !!TValue value, class Microsoft.ML.Data.Schema/Metadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.MetadataBuilder.AddPrimitiveValue``1(System.String,Microsoft.ML.Data.PrimitiveType,``0,Microsoft.ML.Data.Schema.Metadata)" />
      <MemberSignature Language="F#" Value="member this.AddPrimitiveValue : string * Microsoft.ML.Data.PrimitiveType * 'Value * Microsoft.ML.Data.Schema.Metadata -&gt; unit" Usage="metadataBuilder.AddPrimitiveValue (name, type, value, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="Microsoft.ML.Data.PrimitiveType" />
        <Parameter Name="value" Type="TValue" />
        <Parameter Name="metadata" Type="Microsoft.ML.Data.Schema+Metadata" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">To be added.</typeparam>
        <param name="name">The metadata name.</param>
        <param name="type">The metadata type.</param>
        <param name="value">The value of the metadata.</param>
        <param name="metadata">Metadata of the input column. Note that metadata on a metadata column is somewhat rare
            except for certain types (for example, slot names for a vector, key values for something of key type).</param>
        <summary>
            Add one metadata column for a primitive value type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSlotNames">
      <MemberSignature Language="C#" Value="public void AddSlotNames (int size, Microsoft.ML.Data.ValueGetter&lt;Microsoft.ML.Data.VBuffer&lt;ReadOnlyMemory&lt;char&gt;&gt;&gt; getter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSlotNames(int32 size, class Microsoft.ML.Data.ValueGetter`1&lt;valuetype Microsoft.ML.Data.VBuffer`1&lt;valuetype System.ReadOnlyMemory`1&lt;char&gt;&gt;&gt; getter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.MetadataBuilder.AddSlotNames(System.Int32,Microsoft.ML.Data.ValueGetter{Microsoft.ML.Data.VBuffer{System.ReadOnlyMemory{System.Char}}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSlotNames (size As Integer, getter As ValueGetter(Of VBuffer(Of ReadOnlyMemory(Of Char))))" />
      <MemberSignature Language="F#" Value="member this.AddSlotNames : int * Microsoft.ML.Data.ValueGetter&lt;Microsoft.ML.Data.VBuffer&lt;ReadOnlyMemory&lt;char&gt;&gt;&gt; -&gt; unit" Usage="metadataBuilder.AddSlotNames (size, getter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="getter" Type="Microsoft.ML.Data.ValueGetter&lt;Microsoft.ML.Data.VBuffer&lt;System.ReadOnlyMemory&lt;System.Char&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="size">The size of the slot names vector.</param>
        <param name="getter">The getter delegate for the slot names.</param>
        <summary>
            Add slot names metadata.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadata">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.Schema.Metadata GetMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Data.Schema/Metadata GetMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.MetadataBuilder.GetMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadata () As Schema.Metadata" />
      <MemberSignature Language="F#" Value="member this.GetMetadata : unit -&gt; Microsoft.ML.Data.Schema.Metadata" Usage="metadataBuilder.GetMetadata " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.Schema+Metadata</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Produce the metadata row that the builder has so far.
            Can be called multiple times.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
