<Type Name="ColumnBindings" FullName="Microsoft.ML.Data.ColumnBindings">
  <TypeSignature Language="C#" Value="public sealed class ColumnBindings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ColumnBindings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Data.ColumnBindings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ColumnBindings" />
  <TypeSignature Language="F#" Value="type ColumnBindings = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Class that encapsulates passing input columns through (with possibly different indices) and adding
            additional columns. If an added column has the same name as a non-hidden input column, it hides
            the input column, and is placed immediately after the input column. Otherwise, the added column is placed
            at the end.
            This class is intended to simplify predicate propagation for this case.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnBindings (Microsoft.ML.Data.Schema input, Microsoft.ML.Data.Schema.DetachedColumn[] addedColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Data.Schema input, valuetype Microsoft.ML.Data.Schema/DetachedColumn[] addedColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.ColumnBindings.#ctor(Microsoft.ML.Data.Schema,Microsoft.ML.Data.Schema.DetachedColumn[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (input As Schema, addedColumns As Schema.DetachedColumn())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Data.ColumnBindings : Microsoft.ML.Data.Schema * Microsoft.ML.Data.Schema.DetachedColumn[] -&gt; Microsoft.ML.Data.ColumnBindings" Usage="new Microsoft.ML.Data.ColumnBindings (input, addedColumns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Data.Schema" />
        <Parameter Name="addedColumns" Type="Microsoft.ML.Data.Schema+DetachedColumn[]" />
      </Parameters>
      <Docs>
        <param name="input">The input schema that we're adding columns to.</param>
        <param name="addedColumns">The columns being added.</param>
        <summary>
            Create a new instance of <see cref="T:Microsoft.ML.Data.ColumnBindings" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddedColumnIndices">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;int&gt; AddedColumnIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;int32&gt; AddedColumnIndices" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.ColumnBindings.AddedColumnIndices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddedColumnIndices As IReadOnlyList(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.AddedColumnIndices : System.Collections.Generic.IReadOnlyList&lt;int&gt;" Usage="Microsoft.ML.Data.ColumnBindings.AddedColumnIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The indices of added columns in the <see cref="P:Microsoft.ML.Data.ColumnBindings.Schema" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveInput">
      <MemberSignature Language="C#" Value="public bool[] GetActiveInput (Func&lt;int,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool[] GetActiveInput(class System.Func`2&lt;int32, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.ColumnBindings.GetActiveInput(System.Func{System.Int32,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActiveInput (predicate As Func(Of Integer, Boolean)) As Boolean()" />
      <MemberSignature Language="F#" Value="member this.GetActiveInput : Func&lt;int, bool&gt; -&gt; bool[]" Usage="columnBindings.GetActiveInput predicate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Func&lt;System.Int32,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="predicate">To be added.</param>
        <summary>
            The given predicate maps from output column index to whether the column is active.
            This builds an array of bools of length Input.ColumnCount containing the results of calling
            predicate on the output column index corresponding to each input column index.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.Schema InputSchema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Data.Schema InputSchema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.ColumnBindings.InputSchema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputSchema As Schema" />
      <MemberSignature Language="F#" Value="member this.InputSchema : Microsoft.ML.Data.Schema" Usage="Microsoft.ML.Data.ColumnBindings.InputSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.Schema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The input schema.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapColumnIndex">
      <MemberSignature Language="C#" Value="public int MapColumnIndex (out bool isSrcColumn, int col);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 MapColumnIndex([out] bool&amp; isSrcColumn, int32 col) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.ColumnBindings.MapColumnIndex(System.Boolean@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapColumnIndex (ByRef isSrcColumn As Boolean, col As Integer) As Integer" />
      <MemberSignature Language="F#" Value="member this.MapColumnIndex :  * int -&gt; int" Usage="columnBindings.MapColumnIndex (isSrcColumn, col)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isSrcColumn" Type="System.Boolean" RefType="out" />
        <Parameter Name="col" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="isSrcColumn">Whether the return index is for a source column</param>
        <param name="col">The column index for this schema</param>
        <summary>
            This maps a column index for this schema to either a source column index (when
            <paramref name="isSrcColumn" /> is true), or to an "iinfo" index of an added column
            (when <paramref name="isSrcColumn" /> is false).
            </summary>
        <returns>The index (either source index or iinfo index)</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.Schema Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Data.Schema Schema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.ColumnBindings.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As Schema" />
      <MemberSignature Language="F#" Value="member this.Schema : Microsoft.ML.Data.Schema" Usage="Microsoft.ML.Data.ColumnBindings.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.Schema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The merged schema.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
