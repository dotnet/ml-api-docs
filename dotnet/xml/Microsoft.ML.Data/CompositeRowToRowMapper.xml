<Type Name="CompositeRowToRowMapper" FullName="Microsoft.ML.Data.CompositeRowToRowMapper">
  <TypeSignature Language="C#" Value="public sealed class CompositeRowToRowMapper : Microsoft.ML.Data.IRowToRowMapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompositeRowToRowMapper extends System.Object implements class Microsoft.ML.Data.IRowToRowMapper" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Data.CompositeRowToRowMapper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompositeRowToRowMapper&#xA;Implements IRowToRowMapper" />
  <TypeSignature Language="F#" Value="type CompositeRowToRowMapper = class&#xA;    interface IRowToRowMapper" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Data.IRowToRowMapper</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A row-to-row mapper that is the result of a chained application of multiple mappers.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeRowToRowMapper (Microsoft.ML.Data.Schema inputSchema, Microsoft.ML.Data.IRowToRowMapper[] mappers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Data.Schema inputSchema, class Microsoft.ML.Data.IRowToRowMapper[] mappers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.CompositeRowToRowMapper.#ctor(Microsoft.ML.Data.Schema,Microsoft.ML.Data.IRowToRowMapper[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (inputSchema As Schema, mappers As IRowToRowMapper())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Data.CompositeRowToRowMapper : Microsoft.ML.Data.Schema * Microsoft.ML.Data.IRowToRowMapper[] -&gt; Microsoft.ML.Data.CompositeRowToRowMapper" Usage="new Microsoft.ML.Data.CompositeRowToRowMapper (inputSchema, mappers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Data.Schema" />
        <Parameter Name="mappers" Type="Microsoft.ML.Data.IRowToRowMapper[]" />
      </Parameters>
      <Docs>
        <param name="inputSchema">The input schema.</param>
        <param name="mappers">The sequence of mappers to wrap. An empty or <c>null</c> argument
            is legal, and counts as being a no-op application.</param>
        <summary>
            Out of a series of mappers, construct a seemingly unitary mapper that is able to apply them in sequence.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDependencies">
      <MemberSignature Language="C#" Value="public Func&lt;int,bool&gt; GetDependencies (Func&lt;int,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Func`2&lt;int32, bool&gt; GetDependencies(class System.Func`2&lt;int32, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.CompositeRowToRowMapper.GetDependencies(System.Func{System.Int32,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDependencies (predicate As Func(Of Integer, Boolean)) As Func(Of Integer, Boolean)" />
      <MemberSignature Language="F#" Value="abstract member GetDependencies : Func&lt;int, bool&gt; -&gt; Func&lt;int, bool&gt;&#xA;override this.GetDependencies : Func&lt;int, bool&gt; -&gt; Func&lt;int, bool&gt;" Usage="compositeRowToRowMapper.GetDependencies predicate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Data.IRowToRowMapper.GetDependencies(System.Func{System.Int32,System.Boolean})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Int32,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Func&lt;System.Int32,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="predicate">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRow">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.Row GetRow (Microsoft.ML.Data.Row input, Func&lt;int,bool&gt; active);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Data.Row GetRow(class Microsoft.ML.Data.Row input, class System.Func`2&lt;int32, bool&gt; active) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.CompositeRowToRowMapper.GetRow(Microsoft.ML.Data.Row,System.Func{System.Int32,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRow (input As Row, active As Func(Of Integer, Boolean)) As Row" />
      <MemberSignature Language="F#" Value="abstract member GetRow : Microsoft.ML.Data.Row * Func&lt;int, bool&gt; -&gt; Microsoft.ML.Data.Row&#xA;override this.GetRow : Microsoft.ML.Data.Row * Func&lt;int, bool&gt; -&gt; Microsoft.ML.Data.Row" Usage="compositeRowToRowMapper.GetRow (input, active)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Data.IRowToRowMapper.GetRow(Microsoft.ML.Data.Row,System.Func{System.Int32,System.Boolean})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.Row</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Data.Row" />
        <Parameter Name="active" Type="System.Func&lt;System.Int32,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="active">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.Schema InputSchema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Data.Schema InputSchema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.CompositeRowToRowMapper.InputSchema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputSchema As Schema" />
      <MemberSignature Language="F#" Value="member this.InputSchema : Microsoft.ML.Data.Schema" Usage="Microsoft.ML.Data.CompositeRowToRowMapper.InputSchema" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Data.IRowToRowMapper.InputSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.Schema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.Schema OutputSchema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Data.Schema OutputSchema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.CompositeRowToRowMapper.OutputSchema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputSchema As Schema" />
      <MemberSignature Language="F#" Value="member this.OutputSchema : Microsoft.ML.Data.Schema" Usage="Microsoft.ML.Data.CompositeRowToRowMapper.OutputSchema" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Data.IRowToRowMapper.OutputSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.Schema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>