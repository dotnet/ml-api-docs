<Type Name="PerGroupTransformBase&lt;TLabel,TScore,TState&gt;" FullName="Microsoft.ML.Data.PerGroupTransformBase&lt;TLabel,TScore,TState&gt;">
  <TypeSignature Language="C#" Value="public abstract class PerGroupTransformBase&lt;TLabel,TScore,TState&gt; : Microsoft.ML.Data.IDataTransform, Microsoft.ML.Data.IDataView where TState : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PerGroupTransformBase`3&lt;TLabel, TScore, class TState&gt; extends System.Object implements class Microsoft.ML.Data.IDataTransform, class Microsoft.ML.Data.IDataView, class Microsoft.ML.Model.ICanSaveModel" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Data.PerGroupTransformBase`3" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PerGroupTransformBase(Of TLabel, TScore, TState)&#xA;Implements IDataTransform, IDataView" />
  <TypeSignature Language="F#" Value="type PerGroupTransformBase&lt;'Label, 'Score, 'State (requires 'State : null)&gt; = class&#xA;    interface IDataTransform&#xA;    interface IDataView&#xA;    interface ICanSaveModel" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TLabel" />
    <TypeParameter Name="TScore" />
    <TypeParameter Name="TState">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Data.IDataTransform</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Data.IDataView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Model.ICanSaveModel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TLabel">The type of the values in the first input column</typeparam>
    <typeparam name="TScore">The type of the values in the second input column</typeparam>
    <typeparam name="TState">Each class deriving from this transform should implement a state class that knows
            how to return the current group's output column values.</typeparam>
    <summary>
            This is a base implementation for a transform that in order to compute its output columns, needs to look
            at an entire group of consecutive input examples. For each example in the group, it looks at the value of
            two input columns and after seeing the entire group it computes the output column values. The output values
            are the same for every example in the same group.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PerGroupTransformBase (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Model.ModelLoadContext ctx, Microsoft.ML.Data.IDataView input, string registrationName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Model.ModelLoadContext ctx, class Microsoft.ML.Data.IDataView input, string registrationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.PerGroupTransformBase`3.#ctor(Microsoft.ML.IHostEnvironment,Microsoft.ML.Model.ModelLoadContext,Microsoft.ML.Data.IDataView,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (env As IHostEnvironment, ctx As ModelLoadContext, input As IDataView, registrationName As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Data.PerGroupTransformBase&lt;'Label, 'Score, 'State (requires 'State : null)&gt; : Microsoft.ML.IHostEnvironment * Microsoft.ML.Model.ModelLoadContext * Microsoft.ML.Data.IDataView * string -&gt; Microsoft.ML.Data.PerGroupTransformBase&lt;'Label, 'Score, 'State (requires 'State : null)&gt;" Usage="new Microsoft.ML.Data.PerGroupTransformBase&lt;'Label, 'Score, 'State (requires 'State : null)&gt; (env, ctx, input, registrationName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="ctx" Type="Microsoft.ML.Model.ModelLoadContext" />
        <Parameter Name="input" Type="Microsoft.ML.Data.IDataView" />
        <Parameter Name="registrationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="ctx">To be added.</param>
        <param name="input">To be added.</param>
        <param name="registrationName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PerGroupTransformBase (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Data.IDataView input, string labelCol, string scoreCol, string groupCol, string registrationName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Data.IDataView input, string labelCol, string scoreCol, string groupCol, string registrationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.PerGroupTransformBase`3.#ctor(Microsoft.ML.IHostEnvironment,Microsoft.ML.Data.IDataView,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (env As IHostEnvironment, input As IDataView, labelCol As String, scoreCol As String, groupCol As String, registrationName As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Data.PerGroupTransformBase&lt;'Label, 'Score, 'State (requires 'State : null)&gt; : Microsoft.ML.IHostEnvironment * Microsoft.ML.Data.IDataView * string * string * string * string -&gt; Microsoft.ML.Data.PerGroupTransformBase&lt;'Label, 'Score, 'State (requires 'State : null)&gt;" Usage="new Microsoft.ML.Data.PerGroupTransformBase&lt;'Label, 'Score, 'State (requires 'State : null)&gt; (env, input, labelCol, scoreCol, groupCol, registrationName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Data.IDataView" />
        <Parameter Name="labelCol" Type="System.String" />
        <Parameter Name="scoreCol" Type="System.String" />
        <Parameter Name="groupCol" Type="System.String" />
        <Parameter Name="registrationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <param name="labelCol">To be added.</param>
        <param name="scoreCol">To be added.</param>
        <param name="groupCol">To be added.</param>
        <param name="registrationName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanShuffle">
      <MemberSignature Language="C#" Value="public bool CanShuffle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanShuffle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.PerGroupTransformBase`3.CanShuffle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanShuffle As Boolean" />
      <MemberSignature Language="F#" Value="member this.CanShuffle : bool" Usage="Microsoft.ML.Data.PerGroupTransformBase&lt;'Label, 'Score, 'State (requires 'State : null)&gt;.CanShuffle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Data.IDataView.CanShuffle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGetters">
      <MemberSignature Language="C#" Value="protected abstract Delegate[] CreateGetters (TState state, Func&lt;int,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Delegate[] CreateGetters(!TState state, class System.Func`2&lt;int32, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.PerGroupTransformBase`3.CreateGetters(`2,System.Func{System.Int32,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateGetters (state As TState, predicate As Func(Of Integer, Boolean)) As Delegate()" />
      <MemberSignature Language="F#" Value="abstract member CreateGetters : 'State * Func&lt;int, bool&gt; -&gt; Delegate[]" Usage="perGroupTransformBase.CreateGetters (state, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="TState" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Int32,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="state">The state object, containing the current group's output values.</param>
        <param name="predicate">Which output columns are active.</param>
        <summary>
            Creates the getters for the transform's output columns. It can be assumed that when the getters are called, the state
            object contains the current values of the output columns.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabelGetter">
      <MemberSignature Language="C#" Value="protected abstract Microsoft.ML.Data.ValueGetter&lt;TLabel&gt; GetLabelGetter (Microsoft.ML.Data.Row row);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.ML.Data.ValueGetter`1&lt;!TLabel&gt; GetLabelGetter(class Microsoft.ML.Data.Row row) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.PerGroupTransformBase`3.GetLabelGetter(Microsoft.ML.Data.Row)" />
      <MemberSignature Language="F#" Value="abstract member GetLabelGetter : Microsoft.ML.Data.Row -&gt; Microsoft.ML.Data.ValueGetter&lt;'Label&gt;" Usage="perGroupTransformBase.GetLabelGetter row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.ValueGetter&lt;TLabel&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="Microsoft.ML.Data.Row" />
      </Parameters>
      <Docs>
        <param name="row">To be added.</param>
        <summary>
            Get the getter for the first input column.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowCount">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; GetRowCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;int64&gt; GetRowCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.PerGroupTransformBase`3.GetRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowCount () As Nullable(Of Long)" />
      <MemberSignature Language="F#" Value="abstract member GetRowCount : unit -&gt; Nullable&lt;int64&gt;&#xA;override this.GetRowCount : unit -&gt; Nullable&lt;int64&gt;" Usage="perGroupTransformBase.GetRowCount " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Data.IDataView.GetRowCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowCursor">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.RowCursor GetRowCursor (Func&lt;int,bool&gt; predicate, Random rand = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Data.RowCursor GetRowCursor(class System.Func`2&lt;int32, bool&gt; predicate, class System.Random rand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.PerGroupTransformBase`3.GetRowCursor(System.Func{System.Int32,System.Boolean},System.Random)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowCursor (predicate As Func(Of Integer, Boolean), Optional rand As Random = null) As RowCursor" />
      <MemberSignature Language="F#" Value="abstract member GetRowCursor : Func&lt;int, bool&gt; * Random -&gt; Microsoft.ML.Data.RowCursor&#xA;override this.GetRowCursor : Func&lt;int, bool&gt; * Random -&gt; Microsoft.ML.Data.RowCursor" Usage="perGroupTransformBase.GetRowCursor (predicate, rand)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Data.IDataView.GetRowCursor(System.Func{System.Int32,System.Boolean},System.Random)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.RowCursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Func&lt;System.Int32,System.Boolean&gt;" />
        <Parameter Name="rand" Type="System.Random" />
      </Parameters>
      <Docs>
        <param name="predicate">To be added.</param>
        <param name="rand">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowCursorSet">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.RowCursor[] GetRowCursorSet (Func&lt;int,bool&gt; predicate, int n, Random rand = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Data.RowCursor[] GetRowCursorSet(class System.Func`2&lt;int32, bool&gt; predicate, int32 n, class System.Random rand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.PerGroupTransformBase`3.GetRowCursorSet(System.Func{System.Int32,System.Boolean},System.Int32,System.Random)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowCursorSet (predicate As Func(Of Integer, Boolean), n As Integer, Optional rand As Random = null) As RowCursor()" />
      <MemberSignature Language="F#" Value="abstract member GetRowCursorSet : Func&lt;int, bool&gt; * int * Random -&gt; Microsoft.ML.Data.RowCursor[]&#xA;override this.GetRowCursorSet : Func&lt;int, bool&gt; * int * Random -&gt; Microsoft.ML.Data.RowCursor[]" Usage="perGroupTransformBase.GetRowCursorSet (predicate, n, rand)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Data.IDataView.GetRowCursorSet(System.Func{System.Int32,System.Boolean},System.Int32,System.Random)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.RowCursor[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Func&lt;System.Int32,System.Boolean&gt;" />
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="rand" Type="System.Random" />
      </Parameters>
      <Docs>
        <param name="predicate">To be added.</param>
        <param name="n">To be added.</param>
        <param name="rand">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScoreGetter">
      <MemberSignature Language="C#" Value="protected abstract Microsoft.ML.Data.ValueGetter&lt;TScore&gt; GetScoreGetter (Microsoft.ML.Data.Row row);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.ML.Data.ValueGetter`1&lt;!TScore&gt; GetScoreGetter(class Microsoft.ML.Data.Row row) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.PerGroupTransformBase`3.GetScoreGetter(Microsoft.ML.Data.Row)" />
      <MemberSignature Language="F#" Value="abstract member GetScoreGetter : Microsoft.ML.Data.Row -&gt; Microsoft.ML.Data.ValueGetter&lt;'Score&gt;" Usage="perGroupTransformBase.GetScoreGetter row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.ValueGetter&lt;TScore&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="Microsoft.ML.Data.Row" />
      </Parameters>
      <Docs>
        <param name="row">To be added.</param>
        <summary>
            Get the getter for the second input column.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupCol">
      <MemberSignature Language="C#" Value="protected readonly string GroupCol;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly string GroupCol" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Data.PerGroupTransformBase`3.GroupCol" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly GroupCol As String " />
      <MemberSignature Language="F#" Value="val mutable GroupCol : string" Usage="Microsoft.ML.Data.PerGroupTransformBase&lt;'Label, 'Score, 'State (requires 'State : null)&gt;.GroupCol" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="protected readonly Microsoft.ML.IHost Host;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class Microsoft.ML.IHost Host" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Data.PerGroupTransformBase`3.Host" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Host As IHost " />
      <MemberSignature Language="F#" Value="val mutable Host : Microsoft.ML.IHost" Usage="Microsoft.ML.Data.PerGroupTransformBase&lt;'Label, 'Score, 'State (requires 'State : null)&gt;.Host" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.IHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeState">
      <MemberSignature Language="C#" Value="protected abstract TState InitializeState (Microsoft.ML.Data.Row input);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TState InitializeState(class Microsoft.ML.Data.Row input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.PerGroupTransformBase`3.InitializeState(Microsoft.ML.Data.Row)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function InitializeState (input As Row) As TState" />
      <MemberSignature Language="F#" Value="abstract member InitializeState : Microsoft.ML.Data.Row -&gt; 'State" Usage="perGroupTransformBase.InitializeState input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Data.Row" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>
            Return a new state object.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelCol">
      <MemberSignature Language="C#" Value="protected readonly string LabelCol;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly string LabelCol" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Data.PerGroupTransformBase`3.LabelCol" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly LabelCol As String " />
      <MemberSignature Language="F#" Value="val mutable LabelCol : string" Usage="Microsoft.ML.Data.PerGroupTransformBase&lt;'Label, 'Score, 'State (requires 'State : null)&gt;.LabelCol" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.ML.Data.IDataView.Schema">
      <MemberSignature Language="C#" Value="Microsoft.ML.Data.Schema Microsoft.ML.Data.IDataView.Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Data.Schema Microsoft.ML.Data.IDataView.Schema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.PerGroupTransformBase`3.Microsoft#ML#Data#IDataView#Schema" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Schema As Schema Implements IDataView.Schema" />
      <MemberSignature Language="F#" Usage="Microsoft.ML.Data.IDataView.Schema" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Data.IDataView.Schema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.Schema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.Schema OutputSchema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Data.Schema OutputSchema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.PerGroupTransformBase`3.OutputSchema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputSchema As Schema" />
      <MemberSignature Language="F#" Value="member this.OutputSchema : Microsoft.ML.Data.Schema" Usage="Microsoft.ML.Data.PerGroupTransformBase&lt;'Label, 'Score, 'State (requires 'State : null)&gt;.OutputSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.Schema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessExample">
      <MemberSignature Language="C#" Value="protected abstract void ProcessExample (TState state, TLabel label, TScore score);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ProcessExample(!TState state, !TLabel label, !TScore score) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.PerGroupTransformBase`3.ProcessExample(`2,`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub ProcessExample (state As TState, label As TLabel, score As TScore)" />
      <MemberSignature Language="F#" Value="abstract member ProcessExample : 'State * 'Label * 'Score -&gt; unit" Usage="perGroupTransformBase.ProcessExample (state, label, score)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="TState" />
        <Parameter Name="label" Type="TLabel" />
        <Parameter Name="score" Type="TScore" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <param name="label">To be added.</param>
        <param name="score">To be added.</param>
        <summary>
            Update the state object with one example.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (Microsoft.ML.Model.ModelSaveContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class Microsoft.ML.Model.ModelSaveContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.PerGroupTransformBase`3.Save(Microsoft.ML.Model.ModelSaveContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (ctx As ModelSaveContext)" />
      <MemberSignature Language="F#" Value="abstract member Save : Microsoft.ML.Model.ModelSaveContext -&gt; unit&#xA;override this.Save : Microsoft.ML.Model.ModelSaveContext -&gt; unit" Usage="perGroupTransformBase.Save ctx" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Model.ICanSaveModel.Save(Microsoft.ML.Model.ModelSaveContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Model.ModelSaveContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScoreCol">
      <MemberSignature Language="C#" Value="protected readonly string ScoreCol;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly string ScoreCol" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Data.PerGroupTransformBase`3.ScoreCol" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly ScoreCol As String " />
      <MemberSignature Language="F#" Value="val mutable ScoreCol : string" Usage="Microsoft.ML.Data.PerGroupTransformBase&lt;'Label, 'Score, 'State (requires 'State : null)&gt;.ScoreCol" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.IDataView Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Data.IDataView Source" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.PerGroupTransformBase`3.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As IDataView" />
      <MemberSignature Language="F#" Value="member this.Source : Microsoft.ML.Data.IDataView" Usage="Microsoft.ML.Data.PerGroupTransformBase&lt;'Label, 'Score, 'State (requires 'State : null)&gt;.Source" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Data.IDataTransform.Source</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.IDataView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateState">
      <MemberSignature Language="C#" Value="protected abstract void UpdateState (TState state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UpdateState(!TState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.PerGroupTransformBase`3.UpdateState(`2)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub UpdateState (state As TState)" />
      <MemberSignature Language="F#" Value="abstract member UpdateState : 'State -&gt; unit" Usage="perGroupTransformBase.UpdateState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="TState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>
            This method is called after processing a whole group of examples. In this method the
            state object should compute the output values for the group just seen.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>