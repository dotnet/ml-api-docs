<Type Name="RowCursor" FullName="Microsoft.ML.Data.RowCursor">
  <TypeSignature Language="C#" Value="public abstract class RowCursor : Microsoft.ML.Data.Row" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RowCursor extends Microsoft.ML.Data.Row" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Data.RowCursor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RowCursor&#xA;Inherits Row" />
  <TypeSignature Language="F#" Value="type RowCursor = class&#xA;    inherit Row" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Data.Row</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The basic cursor base class to cursor through rows of an <see cref="T:Microsoft.ML.Data.IDataView" />. Note that
            this is also an <see cref="T:Microsoft.ML.Data.Row" />. The <see cref="P:Microsoft.ML.Data.Row.Position" /> is incremented by <see cref="M:Microsoft.ML.Data.RowCursor.MoveNext" />
            and <see cref="M:Microsoft.ML.Data.RowCursor.MoveMany(System.Int64)" />. When the cursor state is <see cref="F:Microsoft.ML.Data.CursorState.NotStarted" /> or
            <see cref="F:Microsoft.ML.Data.CursorState.Done" />, <see cref="P:Microsoft.ML.Data.Row.Position" /> is <c>-1</c>. Otherwise,
            <see cref="P:Microsoft.ML.Data.Row.Position" /> &gt;= 0.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RowCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.RowCursor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRootCursor">
      <MemberSignature Language="C#" Value="public abstract Microsoft.ML.Data.RowCursor GetRootCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Data.RowCursor GetRootCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.RowCursor.GetRootCursor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRootCursor () As RowCursor" />
      <MemberSignature Language="F#" Value="abstract member GetRootCursor : unit -&gt; Microsoft.ML.Data.RowCursor" Usage="rowCursor.GetRootCursor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.RowCursor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a cursor that can be used for invoking <see cref="P:Microsoft.ML.Data.Row.Position" />, <see cref="P:Microsoft.ML.Data.RowCursor.State" />,
            <see cref="M:Microsoft.ML.Data.RowCursor.MoveNext" />, and <see cref="M:Microsoft.ML.Data.RowCursor.MoveMany(System.Int64)" />, with results identical to calling those
            on this cursor. Generally, if the root cursor is not the same as this cursor, using the
            root cursor will be faster. As an aside, note that this is not necessarily the case of
            values from <see cref="M:Microsoft.ML.Data.Row.GetIdGetter" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveMany">
      <MemberSignature Language="C#" Value="public abstract bool MoveMany (long count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveMany(int64 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.RowCursor.MoveMany(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveMany (count As Long) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member MoveMany : int64 -&gt; bool" Usage="rowCursor.MoveMany count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="count">To be added.</param>
        <summary>
            Logically equivalent to calling <see cref="M:Microsoft.ML.Data.RowCursor.MoveNext" /> the given number of times. The
            <paramref name="count" /> parameter must be positive. Note that cursor implementations may be
            able to optimize this.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public abstract bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.RowCursor.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveNext () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool" Usage="rowCursor.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Advance to the next row. When the cursor is first created, this method should be called to
            move to the first row. Returns <c>false</c> if there are no more rows.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public abstract Microsoft.ML.Data.CursorState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Data.CursorState State" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.RowCursor.State" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property State As CursorState" />
      <MemberSignature Language="F#" Value="member this.State : Microsoft.ML.Data.CursorState" Usage="Microsoft.ML.Data.RowCursor.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.CursorState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the state of the cursor. Before the first call to <see cref="M:Microsoft.ML.Data.RowCursor.MoveNext" /> or
            <see cref="M:Microsoft.ML.Data.RowCursor.MoveMany(System.Int64)" /> this should be <see cref="F:Microsoft.ML.Data.CursorState.NotStarted" />. After
            any call those move functions that returns <see langword="true" />, this should return
            <see cref="F:Microsoft.ML.Data.CursorState.Good" />,
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
