<Type Name="ConfusionMatrix" FullName="Microsoft.ML.Data.ConfusionMatrix">
  <TypeSignature Language="C#" Value="public sealed class ConfusionMatrix" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConfusionMatrix extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Data.ConfusionMatrix" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConfusionMatrix" />
  <TypeSignature Language="F#" Value="type ConfusionMatrix = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents the <a href="https://en.wikipedia.org/wiki/Confusion_matrix">confusion matrix</a> of the classification results.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Counts">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.IReadOnlyList&lt;double&gt;&gt; Counts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;float64&gt;&gt; Counts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.ConfusionMatrix.Counts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Counts As IReadOnlyList(Of IReadOnlyList(Of Double))" />
      <MemberSignature Language="F#" Value="member this.Counts : System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.IReadOnlyList&lt;double&gt;&gt;" Usage="Microsoft.ML.Data.ConfusionMatrix.Counts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.IReadOnlyList&lt;System.Double&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The confusion matrix counts for the combinations actual class/predicted class.
            The actual classes are in the rows of the table (stored in the outer <see cref="T:System.Collections.Generic.IReadOnlyList`1" />), and the predicted classes
             in the columns(stored in the inner <see cref="T:System.Collections.Generic.IReadOnlyList`1" />).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCountForClassPair">
      <MemberSignature Language="C#" Value="public double GetCountForClassPair (int predictedClassIndicatorIndex, int actualClassIndicatorIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCountForClassPair(int32 predictedClassIndicatorIndex, int32 actualClassIndicatorIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.ConfusionMatrix.GetCountForClassPair(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCountForClassPair (predictedClassIndicatorIndex As Integer, actualClassIndicatorIndex As Integer) As Double" />
      <MemberSignature Language="F#" Value="member this.GetCountForClassPair : int * int -&gt; double" Usage="confusionMatrix.GetCountForClassPair (predictedClassIndicatorIndex, actualClassIndicatorIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predictedClassIndicatorIndex" Type="System.Int32" />
        <Parameter Name="actualClassIndicatorIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="predictedClassIndicatorIndex">The index of the predicted label indicator, in the <see cref="F:Microsoft.ML.Data.ConfusionMatrix.PredictedClassesIndicators" />.</param>
        <param name="actualClassIndicatorIndex">The index of the actual label indicator, in the <see cref="F:Microsoft.ML.Data.ConfusionMatrix.PredictedClassesIndicators" />.</param>
        <summary>
            Gets the confusion table count for the pair <paramref name="predictedClassIndicatorIndex" />/<paramref name="actualClassIndicatorIndex" />.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormattedConfusionTable">
      <MemberSignature Language="C#" Value="public string GetFormattedConfusionTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetFormattedConfusionTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.ConfusionMatrix.GetFormattedConfusionTable" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormattedConfusionTable () As String" />
      <MemberSignature Language="F#" Value="member this.GetFormattedConfusionTable : unit -&gt; string" Usage="confusionMatrix.GetFormattedConfusionTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a human readable representation of the confusion table.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfClasses">
      <MemberSignature Language="C#" Value="public int NumberOfClasses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfClasses" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.ConfusionMatrix.NumberOfClasses" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumberOfClasses As Integer" />
      <MemberSignature Language="F#" Value="member this.NumberOfClasses : int" Usage="Microsoft.ML.Data.ConfusionMatrix.NumberOfClasses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The indicators of the predicted classes.
            It might be the classes names, or just indices of the predicted classes, if the name mapping is missing.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerClassPrecision">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;double&gt; PerClassPrecision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;float64&gt; PerClassPrecision" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.ConfusionMatrix.PerClassPrecision" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PerClassPrecision As IReadOnlyList(Of Double)" />
      <MemberSignature Language="F#" Value="member this.PerClassPrecision : System.Collections.Generic.IReadOnlyList&lt;double&gt;" Usage="Microsoft.ML.Data.ConfusionMatrix.PerClassPrecision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The calculated value of <a href="https://en.wikipedia.org/wiki/Precision_and_recall#Precision">precision</a> for each class.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerClassRecall">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;double&gt; PerClassRecall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;float64&gt; PerClassRecall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.ConfusionMatrix.PerClassRecall" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PerClassRecall As IReadOnlyList(Of Double)" />
      <MemberSignature Language="F#" Value="member this.PerClassRecall : System.Collections.Generic.IReadOnlyList&lt;double&gt;" Usage="Microsoft.ML.Data.ConfusionMatrix.PerClassRecall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The calculated value of <a href="https://en.wikipedia.org/wiki/Precision_and_recall#Recall">recall</a> for each class.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
