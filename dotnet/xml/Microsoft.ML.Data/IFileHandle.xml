<Type Name="IFileHandle" FullName="Microsoft.ML.Data.IFileHandle">
  <TypeSignature Language="C#" Value="public interface IFileHandle : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFileHandle implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Data.IFileHandle" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFileHandle&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type IFileHandle = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A file handle.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.IFileHandle.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="Microsoft.ML.Data.IFileHandle.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns whether OpenReadStream is expected to succeed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.IFileHandle.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="Microsoft.ML.Data.IFileHandle.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns whether CreateWriteStream is expected to succeed. Typically, once
            CreateWriteStream has been called once, this will forever more return false.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWriteStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream CreateWriteStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream CreateWriteStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.IFileHandle.CreateWriteStream" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWriteStream () As Stream" />
      <MemberSignature Language="F#" Value="abstract member CreateWriteStream : unit -&gt; System.IO.Stream" Usage="iFileHandle.CreateWriteStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Create a writable stream for this file handle.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenReadStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenReadStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream OpenReadStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.IFileHandle.OpenReadStream" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenReadStream () As Stream" />
      <MemberSignature Language="F#" Value="abstract member OpenReadStream : unit -&gt; System.IO.Stream" Usage="iFileHandle.OpenReadStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Open a readable stream for this file handle.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>