<Type Name="SingleFeaturePredictionTransformerBase&lt;TModel&gt;" FullName="Microsoft.ML.Data.SingleFeaturePredictionTransformerBase&lt;TModel&gt;">
  <TypeSignature Language="C#" Value="public abstract class SingleFeaturePredictionTransformerBase&lt;TModel&gt; : Microsoft.ML.Data.PredictionTransformerBase&lt;TModel&gt;, Microsoft.ML.IPredictionTransformer&lt;TModel&gt;, Microsoft.ML.ISingleFeaturePredictionTransformer&lt;TModel&gt;, Microsoft.ML.ITransformer where TModel : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SingleFeaturePredictionTransformerBase`1&lt;class TModel&gt; extends Microsoft.ML.Data.PredictionTransformerBase`1&lt;!TModel&gt; implements class Microsoft.ML.ICanSaveModel, class Microsoft.ML.IPredictionTransformer`1&lt;!TModel&gt;, class Microsoft.ML.ISingleFeaturePredictionTransformer`1&lt;!TModel&gt;, class Microsoft.ML.ITransformer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Data.SingleFeaturePredictionTransformerBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SingleFeaturePredictionTransformerBase(Of TModel)&#xA;Inherits PredictionTransformerBase(Of TModel)&#xA;Implements IPredictionTransformer(Of TModel), ISingleFeaturePredictionTransformer(Of TModel), ITransformer" />
  <TypeSignature Language="F#" Value="type SingleFeaturePredictionTransformerBase&lt;'Model (requires 'Model : null)&gt; = class&#xA;    inherit PredictionTransformerBase&lt;'Model (requires 'Model : null)&gt;&#xA;    interface ISingleFeaturePredictionTransformer&lt;'Model (requires 'Model : null)&gt;&#xA;    interface IPredictionTransformer&lt;'Model (requires 'Model : null)&gt;&#xA;    interface ITransformer&#xA;    interface ICanSaveModel" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TModel">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.Data.PredictionTransformerBase&lt;TModel&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TModel">TModel</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.ICanSaveModel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.IPredictionTransformer&lt;TModel&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.ISingleFeaturePredictionTransformer&lt;TModel&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.ITransformer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TModel">The model used to transform the data.</typeparam>
    <summary>
            The base class for all the transformers implementing the <see cref="T:Microsoft.ML.ISingleFeaturePredictionTransformer`1" />.
            Those are all the transformers that work with one feature column.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FeatureColumnName">
      <MemberSignature Language="C#" Value="public string FeatureColumnName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FeatureColumnName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.SingleFeaturePredictionTransformerBase`1.FeatureColumnName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FeatureColumnName As String" />
      <MemberSignature Language="F#" Value="member this.FeatureColumnName : string" Usage="Microsoft.ML.Data.SingleFeaturePredictionTransformerBase&lt;'Model (requires 'Model : null)&gt;.FeatureColumnName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.ISingleFeaturePredictionTransformer`1.FeatureColumnName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the feature column used by the prediction transformer.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureColumnType">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.DataViewType FeatureColumnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Data.DataViewType FeatureColumnType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.SingleFeaturePredictionTransformerBase`1.FeatureColumnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FeatureColumnType As DataViewType" />
      <MemberSignature Language="F#" Value="member this.FeatureColumnType : Microsoft.ML.Data.DataViewType" Usage="Microsoft.ML.Data.SingleFeaturePredictionTransformerBase&lt;'Model (requires 'Model : null)&gt;.FeatureColumnType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.ISingleFeaturePredictionTransformer`1.FeatureColumnType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.DataViewType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The type of the prediction transformer
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public override sealed Microsoft.ML.DataViewSchema GetOutputSchema (Microsoft.ML.DataViewSchema inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.ML.DataViewSchema GetOutputSchema(class Microsoft.ML.DataViewSchema inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.SingleFeaturePredictionTransformerBase`1.GetOutputSchema(Microsoft.ML.DataViewSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function GetOutputSchema (inputSchema As DataViewSchema) As DataViewSchema" />
      <MemberSignature Language="F#" Value="override this.GetOutputSchema : Microsoft.ML.DataViewSchema -&gt; Microsoft.ML.DataViewSchema" Usage="singleFeaturePredictionTransformerBase.GetOutputSchema inputSchema" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.ITransformer.GetOutputSchema(Microsoft.ML.DataViewSchema)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.DataViewSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.DataViewSchema" />
      </Parameters>
      <Docs>
        <param name="inputSchema">The input schema to attempt to map.</param>
        <summary>
             Schema propagation for this prediction transformer.
            </summary>
        <returns>The output schema of the data, given an input schema like <paramref name="inputSchema" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>