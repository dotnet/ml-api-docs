<Type Name="MulticlassClassificationMetrics" FullName="Microsoft.ML.Data.MulticlassClassificationMetrics">
  <TypeSignature Language="C#" Value="public sealed class MulticlassClassificationMetrics" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MulticlassClassificationMetrics extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Data.MulticlassClassificationMetrics" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MulticlassClassificationMetrics" />
  <TypeSignature Language="F#" Value="type MulticlassClassificationMetrics = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Evaluation results for multi-class classification trainers.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="LogLoss">
      <MemberSignature Language="C#" Value="public double LogLoss { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LogLoss" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.MulticlassClassificationMetrics.LogLoss" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogLoss As Double" />
      <MemberSignature Language="F#" Value="member this.LogLoss : double" Usage="Microsoft.ML.Data.MulticlassClassificationMetrics.LogLoss" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the average log-loss of the classifier.
            </summary>
        <value>To be added.</value>
        <remarks>
            The log-loss metric, is computed as follows:
            LL = - (1/m) * sum( log(p[i]))
            where m is the number of instances in the test set.
            p[i] is the probability returned by the classifier if the instance belongs to class 1,
            and 1 minus the probability returned by the classifier if the instance belongs to class 0.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogLossReduction">
      <MemberSignature Language="C#" Value="public double LogLossReduction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LogLossReduction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.MulticlassClassificationMetrics.LogLossReduction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogLossReduction As Double" />
      <MemberSignature Language="F#" Value="member this.LogLossReduction : double" Usage="Microsoft.ML.Data.MulticlassClassificationMetrics.LogLossReduction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the log-loss reduction (also known as relative log-loss, or reduction in information gain - RIG)
            of the classifier.
            </summary>
        <value>To be added.</value>
        <remarks>
            The log-loss reduction is scaled relative to a classifier that predicts the prior for every example:
            (LL(prior) - LL(classifier)) / LL(prior)
            This metric can be interpreted as the advantage of the classifier over a random prediction.
            For example, if the RIG equals 20, it can be interpreted as "the probability of a correct prediction is
            20% better than random guessing".
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MacroAccuracy">
      <MemberSignature Language="C#" Value="public double MacroAccuracy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MacroAccuracy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.MulticlassClassificationMetrics.MacroAccuracy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MacroAccuracy As Double" />
      <MemberSignature Language="F#" Value="member this.MacroAccuracy : double" Usage="Microsoft.ML.Data.MulticlassClassificationMetrics.MacroAccuracy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets the macro-average accuracy of the model.
             </summary>
        <value>To be added.</value>
        <remarks>
             The macro-average is the average accuracy at the class level. The accuracy for each class is computed
             and the macro-accuracy is the average of these accuracies.
            
             The macro-average metric gives the same weight to each class, no matter how many instances from
             that class the dataset contains.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="MicroAccuracy">
      <MemberSignature Language="C#" Value="public double MicroAccuracy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MicroAccuracy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.MulticlassClassificationMetrics.MicroAccuracy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MicroAccuracy As Double" />
      <MemberSignature Language="F#" Value="member this.MicroAccuracy : double" Usage="Microsoft.ML.Data.MulticlassClassificationMetrics.MicroAccuracy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the micro-average accuracy of the model.
            </summary>
        <value>To be added.</value>
        <remarks>
            The micro-average is the fraction of instances predicted correctly.
            The micro-average does not take class membership into account.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerClassLogLoss">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;double&gt; PerClassLogLoss { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;float64&gt; PerClassLogLoss" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.MulticlassClassificationMetrics.PerClassLogLoss" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PerClassLogLoss As IReadOnlyList(Of Double)" />
      <MemberSignature Language="F#" Value="member this.PerClassLogLoss : System.Collections.Generic.IReadOnlyList&lt;double&gt;" Usage="Microsoft.ML.Data.MulticlassClassificationMetrics.PerClassLogLoss" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the log-loss of the classifier for each class.
            </summary>
        <value>To be added.</value>
        <remarks>
            The log-loss metric, is computed as follows:
            LL = - (1/m) * sum( log(p[i]))
            where m is the number of instances in the test set.
            p[i] is the probability returned by the classifier if the instance belongs to the class,
            and 1 minus the probability returned by the classifier if the instance does not belong to the class.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopKAccuracy">
      <MemberSignature Language="C#" Value="public double TopKAccuracy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TopKAccuracy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.MulticlassClassificationMetrics.TopKAccuracy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopKAccuracy As Double" />
      <MemberSignature Language="F#" Value="member this.TopKAccuracy : double" Usage="Microsoft.ML.Data.MulticlassClassificationMetrics.TopKAccuracy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If <see cref="P:Microsoft.ML.Data.MulticlassClassificationMetrics.TopKPredictionCount" /> is positive, this is the relative number of examples where
            the true label is one of the top-k predicted labels by the predictor.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopKPredictionCount">
      <MemberSignature Language="C#" Value="public int TopKPredictionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TopKPredictionCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.MulticlassClassificationMetrics.TopKPredictionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopKPredictionCount As Integer" />
      <MemberSignature Language="F#" Value="member this.TopKPredictionCount : int" Usage="Microsoft.ML.Data.MulticlassClassificationMetrics.TopKPredictionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If positive, this indicates the K in <see cref="P:Microsoft.ML.Data.MulticlassClassificationMetrics.TopKAccuracy" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>