<Type Name="CacheDataView" FullName="Microsoft.ML.Data.CacheDataView">
  <TypeSignature Language="C#" Value="public sealed class CacheDataView : Microsoft.ML.Data.IDataView, Microsoft.ML.Data.IRowSeekable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CacheDataView extends System.Object implements class Microsoft.ML.Data.IDataView, class Microsoft.ML.Data.IRowSeekable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Data.CacheDataView" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CacheDataView&#xA;Implements IDataView, IRowSeekable" />
  <TypeSignature Language="F#" Value="type CacheDataView = class&#xA;    interface IDataView&#xA;    interface IRowSeekable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Data.IDataView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Data.IRowSeekable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            This is a dataview that wraps another dataview, and does on-demand caching of the
            input columns. When constructed, it caches no data. Whenever a cursor is constructed
            that requests a column that has not yet been cached, any requested uncached columns
            become cached through a background thread worker. A user can provide a hint to the
            constructor to indicate that some columns should be pre-cached. A cursor over this
            dataview will block when moved to a row until such time as all requested columns
            have that row in cache.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDataView (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Data.IDataView input, int[] prefetch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Data.IDataView input, int32[] prefetch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.CacheDataView.#ctor(Microsoft.ML.IHostEnvironment,Microsoft.ML.Data.IDataView,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, input As IDataView, prefetch As Integer())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Data.CacheDataView : Microsoft.ML.IHostEnvironment * Microsoft.ML.Data.IDataView * int[] -&gt; Microsoft.ML.Data.CacheDataView" Usage="new Microsoft.ML.Data.CacheDataView (env, input, prefetch)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Data.IDataView" />
        <Parameter Name="prefetch" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="env">The host environment</param>
        <param name="input">The input dataview to cache. Note that if we do not know
            how to cache some columns, these columns will not appear in this dataview.</param>
        <param name="prefetch">A list of column indices the cacher should frontload,
            prior to any cursors being requested. This can be null to indicate no
            prefetching.</param>
        <summary>
            Constructs an on demand cache for the input.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanShuffle">
      <MemberSignature Language="C#" Value="public bool CanShuffle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanShuffle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.CacheDataView.CanShuffle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanShuffle As Boolean" />
      <MemberSignature Language="F#" Value="member this.CanShuffle : bool" Usage="Microsoft.ML.Data.CacheDataView.CanShuffle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Data.IDataView.CanShuffle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowCount">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; GetRowCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;int64&gt; GetRowCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.CacheDataView.GetRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowCount () As Nullable(Of Long)" />
      <MemberSignature Language="F#" Value="abstract member GetRowCount : unit -&gt; Nullable&lt;int64&gt;&#xA;override this.GetRowCount : unit -&gt; Nullable&lt;int64&gt;" Usage="cacheDataView.GetRowCount " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Data.IDataView.GetRowCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Return the number of rows if available.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowCursor">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.RowCursor GetRowCursor (Func&lt;int,bool&gt; predicate, Random rand = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Data.RowCursor GetRowCursor(class System.Func`2&lt;int32, bool&gt; predicate, class System.Random rand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.CacheDataView.GetRowCursor(System.Func{System.Int32,System.Boolean},System.Random)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowCursor (predicate As Func(Of Integer, Boolean), Optional rand As Random = null) As RowCursor" />
      <MemberSignature Language="F#" Value="abstract member GetRowCursor : Func&lt;int, bool&gt; * Random -&gt; Microsoft.ML.Data.RowCursor&#xA;override this.GetRowCursor : Func&lt;int, bool&gt; * Random -&gt; Microsoft.ML.Data.RowCursor" Usage="cacheDataView.GetRowCursor (predicate, rand)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Data.IDataView.GetRowCursor(System.Func{System.Int32,System.Boolean},System.Random)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.RowCursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Func&lt;System.Int32,System.Boolean&gt;" />
        <Parameter Name="rand" Type="System.Random" />
      </Parameters>
      <Docs>
        <param name="predicate">To be added.</param>
        <param name="rand">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowCursorSet">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.RowCursor[] GetRowCursorSet (Func&lt;int,bool&gt; predicate, int n, Random rand = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Data.RowCursor[] GetRowCursorSet(class System.Func`2&lt;int32, bool&gt; predicate, int32 n, class System.Random rand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.CacheDataView.GetRowCursorSet(System.Func{System.Int32,System.Boolean},System.Int32,System.Random)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowCursorSet (predicate As Func(Of Integer, Boolean), n As Integer, Optional rand As Random = null) As RowCursor()" />
      <MemberSignature Language="F#" Value="abstract member GetRowCursorSet : Func&lt;int, bool&gt; * int * Random -&gt; Microsoft.ML.Data.RowCursor[]&#xA;override this.GetRowCursorSet : Func&lt;int, bool&gt; * int * Random -&gt; Microsoft.ML.Data.RowCursor[]" Usage="cacheDataView.GetRowCursorSet (predicate, n, rand)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Data.IDataView.GetRowCursorSet(System.Func{System.Int32,System.Boolean},System.Int32,System.Random)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.RowCursor[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Func&lt;System.Int32,System.Boolean&gt;" />
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="rand" Type="System.Random" />
      </Parameters>
      <Docs>
        <param name="predicate">To be added.</param>
        <param name="n">To be added.</param>
        <param name="rand">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSeeker">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.RowSeeker GetSeeker (Func&lt;int,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Data.RowSeeker GetSeeker(class System.Func`2&lt;int32, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.CacheDataView.GetSeeker(System.Func{System.Int32,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSeeker (predicate As Func(Of Integer, Boolean)) As RowSeeker" />
      <MemberSignature Language="F#" Value="abstract member GetSeeker : Func&lt;int, bool&gt; -&gt; Microsoft.ML.Data.RowSeeker&#xA;override this.GetSeeker : Func&lt;int, bool&gt; -&gt; Microsoft.ML.Data.RowSeeker" Usage="cacheDataView.GetSeeker predicate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Data.IRowSeekable.GetSeeker(System.Func{System.Int32,System.Boolean})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.RowSeeker</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Func&lt;System.Int32,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="predicate">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapInputToCacheColumnIndex">
      <MemberSignature Language="C#" Value="public int MapInputToCacheColumnIndex (int inputIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 MapInputToCacheColumnIndex(int32 inputIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.CacheDataView.MapInputToCacheColumnIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapInputToCacheColumnIndex (inputIndex As Integer) As Integer" />
      <MemberSignature Language="F#" Value="member this.MapInputToCacheColumnIndex : int -&gt; int" Usage="cacheDataView.MapInputToCacheColumnIndex inputIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputIndex">An input data column index</param>
        <summary>
            While in typical cases the cache data view will know how to cache all columns,
            the cache data view may not know how to cache certain custom types. User code
            may require a mapping from input data view to cache data view column index space.
            </summary>
        <returns>The column index of the corresponding column in the cache data view
            if this was cachable, or else -1 if the column was not cachable</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.Schema Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Data.Schema Schema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.CacheDataView.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As Schema" />
      <MemberSignature Language="F#" Value="member this.Schema : Microsoft.ML.Data.Schema" Usage="Microsoft.ML.Data.CacheDataView.Schema" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Data.IDataView.Schema</InterfaceMember>
        <InterfaceMember>P:Microsoft.ML.Data.IRowSeekable.Schema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.Schema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>