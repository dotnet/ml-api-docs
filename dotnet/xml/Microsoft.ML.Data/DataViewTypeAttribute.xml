<Type Name="DataViewTypeAttribute" FullName="Microsoft.ML.Data.DataViewTypeAttribute">
  <TypeSignature Language="C#" Value="public abstract class DataViewTypeAttribute : Attribute, IEquatable&lt;Microsoft.ML.Data.DataViewTypeAttribute&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataViewTypeAttribute extends System.Attribute implements class System.IEquatable`1&lt;class Microsoft.ML.Data.DataViewTypeAttribute&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Data.DataViewTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataViewTypeAttribute&#xA;Inherits Attribute&#xA;Implements IEquatable(Of DataViewTypeAttribute)" />
  <TypeSignature Language="F#" Value="type DataViewTypeAttribute = class&#xA;    inherit Attribute&#xA;    interface IEquatable&lt;DataViewTypeAttribute&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.DataView</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.ML.Data.DataViewTypeAttribute&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:Microsoft.ML.Data.DataViewTypeAttribute" /> should be used to decorated class properties and fields, if that class' instances will be loaded as ML.NET <see cref="T:Microsoft.ML.IDataView" />.
            The function <see cref="M:Microsoft.ML.Data.DataViewTypeAttribute.Register" /> will be called to register a <see cref="T:Microsoft.ML.Data.DataViewType" /> for a <see cref="T:System.Type" /> with its <see cref="T:System.Attribute" />s.
            Whenever a value typed to the registered <see cref="T:System.Type" /> and its <see cref="T:System.Attribute" />s, that value's type (i.e., a <see cref="P:Microsoft.ML.DataViewSchema.Column.Type" />)
            in <see cref="T:Microsoft.ML.IDataView" /> would be the associated <see cref="T:Microsoft.ML.Data.DataViewType" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataViewTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.DataViewTypeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.DataView</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public abstract bool Equals (Microsoft.ML.Data.DataViewTypeAttribute other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Microsoft.ML.Data.DataViewTypeAttribute other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.DataViewTypeAttribute.Equals(Microsoft.ML.Data.DataViewTypeAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Equals (other As DataViewTypeAttribute) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.ML.Data.DataViewTypeAttribute -&gt; bool" Usage="dataViewTypeAttribute.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.DataView</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.ML.Data.DataViewTypeAttribute" />
      </Parameters>
      <Docs>
        <param name="other">Another <see cref="T:Microsoft.ML.Data.DataViewTypeAttribute" /> to be compared with <see langword="this" />.</param>
        <summary>
            Return <see langword="true" /> if <see langword="this" /> is equivalent to <paramref name="other" /> and <see langword="false" /> otherwise.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public abstract void Register ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Register() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.DataViewTypeAttribute.Register" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Register ()" />
      <MemberSignature Language="F#" Value="abstract member Register : unit -&gt; unit" Usage="dataViewTypeAttribute.Register " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.DataView</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            A function implicitly invoked by ML.NET when processing a custom type. It binds a DataViewType to a custom type plus its attributes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>