<Type Name="ColumnConcatenatingTransformer+ColumnInfo" FullName="Microsoft.ML.Data.ColumnConcatenatingTransformer+ColumnInfo">
  <TypeSignature Language="C#" Value="public sealed class ColumnConcatenatingTransformer.ColumnInfo" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit ColumnConcatenatingTransformer/ColumnInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Data.ColumnConcatenatingTransformer.ColumnInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ColumnConcatenatingTransformer.ColumnInfo" />
  <TypeSignature Language="F#" Value="type ColumnConcatenatingTransformer.ColumnInfo = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnInfo (string name, System.Collections.Generic.IEnumerable&lt;ValueTuple&lt;string,string&gt;&gt; inputColumnNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.ValueTuple`2&lt;string, string&gt;&gt; inputColumnNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.ColumnConcatenatingTransformer.ColumnInfo.#ctor(System.String,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, inputColumnNames As IEnumerable(Of ValueTuple(Of String, String)))" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Data.ColumnConcatenatingTransformer.ColumnInfo : string * seq&lt;ValueTuple&lt;string, string&gt;&gt; -&gt; Microsoft.ML.Data.ColumnConcatenatingTransformer.ColumnInfo" Usage="new Microsoft.ML.Data.ColumnConcatenatingTransformer.ColumnInfo (name, inputColumnNames)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="inputColumnNames" Type="System.Collections.Generic.IEnumerable&lt;System.ValueTuple&lt;System.String,System.String&gt;&gt;" Index="1" FrameworkAlternate="ml-dotnet">
          <Attributes>
            <Attribute>
              <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "name", "alias" })</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="inputColumnNames">To be added.</param>
        <summary>
            This denotes a concatenation of input columns into one column called <paramref name="name" />.
            For each input column, an 'alias' can be specified, to be used in constructing the resulting slot names.
            If the alias is not specified, it defaults to be column name.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnInfo (string name, params string[] inputColumnNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string[] inputColumnNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.ColumnConcatenatingTransformer.ColumnInfo.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, ParamArray inputColumnNames As String())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Data.ColumnConcatenatingTransformer.ColumnInfo : string * string[] -&gt; Microsoft.ML.Data.ColumnConcatenatingTransformer.ColumnInfo" Usage="new Microsoft.ML.Data.ColumnConcatenatingTransformer.ColumnInfo (name, inputColumnNames)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="inputColumnNames" Type="System.String[]" Index="1" FrameworkAlternate="ml-dotnet">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="inputColumnNames">To be added.</param>
        <summary>
            This denotes a concatenation of all <paramref name="inputColumnNames" /> into column called <paramref name="name" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public readonly string Name;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly string Name" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Data.ColumnConcatenatingTransformer.ColumnInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Name As String " />
      <MemberSignature Language="F#" Value="val mutable Name : string" Usage="Microsoft.ML.Data.ColumnConcatenatingTransformer.ColumnInfo.Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (Microsoft.ML.Model.ModelSaveContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class Microsoft.ML.Model.ModelSaveContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.ColumnConcatenatingTransformer.ColumnInfo.Save(Microsoft.ML.Model.ModelSaveContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (ctx As ModelSaveContext)" />
      <MemberSignature Language="F#" Value="member this.Save : Microsoft.ML.Model.ModelSaveContext -&gt; unit" Usage="columnInfo.Save ctx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Model.ModelSaveContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sources">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;ValueTuple&lt;string,string&gt;&gt; Sources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;valuetype System.ValueTuple`2&lt;string, string&gt;&gt; Sources" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.ColumnConcatenatingTransformer.ColumnInfo.Sources" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sources As IReadOnlyList(Of ValueTuple(Of String, String))" />
      <MemberSignature Language="F#" Value="member this.Sources : System.Collections.Generic.IReadOnlyList&lt;ValueTuple&lt;string, string&gt;&gt;" Usage="Microsoft.ML.Data.ColumnConcatenatingTransformer.ColumnInfo.Sources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "name", "alias" })</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.ValueTuple&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
