<Type Name="SourceNameColumnBase" FullName="Microsoft.ML.Data.SourceNameColumnBase">
  <TypeSignature Language="C#" Value="public abstract class SourceNameColumnBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SourceNameColumnBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Data.SourceNameColumnBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SourceNameColumnBase" />
  <TypeSignature Language="F#" Value="type SourceNameColumnBase = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name;" />
      <MemberSignature Language="ILAsm" Value=".field public string Name" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Data.SourceNameColumnBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Name As String " />
      <MemberSignature Language="F#" Value="val mutable Name : string" Usage="Microsoft.ML.Data.SourceNameColumnBase.Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Name of the new column", ShortName="name")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source;" />
      <MemberSignature Language="ILAsm" Value=".field public string Source" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Data.SourceNameColumnBase.Source" />
      <MemberSignature Language="VB.NET" Value="Public Source As String " />
      <MemberSignature Language="F#" Value="val mutable Source : string" Usage="Microsoft.ML.Data.SourceNameColumnBase.Source" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Name of the source column", ShortName="src")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrySanitize">
      <MemberSignature Language="C#" Value="public bool TrySanitize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySanitize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.SourceNameColumnBase.TrySanitize" />
      <MemberSignature Language="VB.NET" Value="Public Function TrySanitize () As Boolean" />
      <MemberSignature Language="F#" Value="member this.TrySanitize : unit -&gt; bool" Usage="sourceNameColumnBase.TrySanitize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            If both of name and source are null or white-space, return false.
            Otherwise, if one is null or white-space, assign that one the other's value.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
