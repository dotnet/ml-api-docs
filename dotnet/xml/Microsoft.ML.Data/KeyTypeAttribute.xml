<Type Name="KeyTypeAttribute" FullName="Microsoft.ML.Data.KeyTypeAttribute">
  <TypeSignature Language="C#" Value="public sealed class KeyTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit KeyTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Data.KeyTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class KeyTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="F#" Value="type KeyTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Allow member to be marked as a <see cref="T:Microsoft.ML.Data.KeyDataViewType" />.
            </summary>
    <remarks>
            Can be applied only for member of following types: <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, <see cref="T:System.UInt64" /></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.KeyTypeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Marks member as <see cref="T:Microsoft.ML.Data.KeyDataViewType" />.
            </summary>
        <remarks>
            Cardinality of <see cref="T:Microsoft.ML.Data.KeyDataViewType" /> would be maximum legal value of member type.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyTypeAttribute (ulong count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int64 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.KeyTypeAttribute.#ctor(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (count As ULong)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Data.KeyTypeAttribute : uint64 -&gt; Microsoft.ML.Data.KeyTypeAttribute" Usage="new Microsoft.ML.Data.KeyTypeAttribute count" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="count" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="count">Cardinality of <see cref="T:Microsoft.ML.Data.KeyDataViewType" />.</param>
        <summary>
            Marks member as <see cref="T:Microsoft.ML.Data.KeyDataViewType" /> and specifies <see cref="T:Microsoft.ML.Data.KeyDataViewType" /> cardinality.
            In case of the attribute being used with int types, the <paramref name="count" /> should be set to one more than
            the maximum value to account for counting starting at 1 (0 is reserved for the missing KeyType). E.g the cardinality of the
            0-9 range is 10.
            If the values are outside of the specified cardinality they will be mapped to the missing value representation: 0.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
