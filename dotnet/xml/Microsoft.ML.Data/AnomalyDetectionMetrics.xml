<Type Name="AnomalyDetectionMetrics" FullName="Microsoft.ML.Data.AnomalyDetectionMetrics">
  <TypeSignature Language="C#" Value="public sealed class AnomalyDetectionMetrics" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AnomalyDetectionMetrics extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Data.AnomalyDetectionMetrics" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AnomalyDetectionMetrics" />
  <TypeSignature Language="F#" Value="type AnomalyDetectionMetrics = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Evaluation results for anomaly detection(unsupervised learning algorithm).
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AreaUnderRocCurve">
      <MemberSignature Language="C#" Value="public double AreaUnderRocCurve { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 AreaUnderRocCurve" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.AnomalyDetectionMetrics.AreaUnderRocCurve" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreaUnderRocCurve As Double" />
      <MemberSignature Language="F#" Value="member this.AreaUnderRocCurve : double" Usage="Microsoft.ML.Data.AnomalyDetectionMetrics.AreaUnderRocCurve" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the area under the ROC curve.
            </summary>
        <value>To be added.</value>
        <remarks>
            The area under the ROC curve is equal to the probability that the algorithm ranks
            a randomly chosen positive instance higher than a randomly chosen negative one
            (assuming 'positive' ranks higher than 'negative').
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectionRateAtFalsePositiveCount">
      <MemberSignature Language="C#" Value="public double DetectionRateAtFalsePositiveCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DetectionRateAtFalsePositiveCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.AnomalyDetectionMetrics.DetectionRateAtFalsePositiveCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DetectionRateAtFalsePositiveCount As Double" />
      <MemberSignature Language="F#" Value="member this.DetectionRateAtFalsePositiveCount : double" Usage="Microsoft.ML.Data.AnomalyDetectionMetrics.DetectionRateAtFalsePositiveCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Detection rate at K false positives.
            </summary>
        <value>To be added.</value>
        <remarks>
            This is computed as follows:
            1.Sort the test examples by the output of the anomaly detector in descending order of scores.
            2.Among the top K False Positives,  compute ratio :  (True Positive @ K)  / (Total anomalies in test data)
            Example confusion matrix for anomaly detection:
                                       Anomalies (in test data)  | Non-Anomalies (in test data)
             Predicted Anomalies     :         TP                |           FP
             Predicted Non-Anomalies :         FN                |           TN
             </remarks>
      </Docs>
    </Member>
  </Members>
</Type>