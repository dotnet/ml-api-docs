<Type Name="SchemaAnnotationsExtensions" FullName="Microsoft.ML.Data.SchemaAnnotationsExtensions">
  <TypeSignature Language="C#" Value="public static class SchemaAnnotationsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SchemaAnnotationsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Data.SchemaAnnotationsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SchemaAnnotationsExtensions" />
  <TypeSignature Language="F#" Value="type SchemaAnnotationsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods to facilitate easy consumption of popular contents of <see cref="P:Microsoft.Data.DataView.DataViewSchema.Column.Annotations" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetKeyValues&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static void GetKeyValues&lt;TValue&gt; (this Microsoft.Data.DataView.DataViewSchema.Column column, ref Microsoft.ML.Data.VBuffer&lt;TValue&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetKeyValues&lt;TValue&gt;(valuetype Microsoft.Data.DataView.DataViewSchema/Column column, valuetype Microsoft.ML.Data.VBuffer`1&lt;!!TValue&gt;&amp; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.SchemaAnnotationsExtensions.GetKeyValues``1(Microsoft.Data.DataView.DataViewSchema.Column,Microsoft.ML.Data.VBuffer{``0}@)" />
      <MemberSignature Language="F#" Value="static member GetKeyValues : Microsoft.Data.DataView.DataViewSchema.Column *  -&gt; unit" Usage="Microsoft.ML.Data.SchemaAnnotationsExtensions.GetKeyValues (column, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.Data.DataView.DataViewSchema+Column" RefType="this" />
        <Parameter Name="keyValues" Type="Microsoft.ML.Data.VBuffer&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of the key values.</typeparam>
        <param name="column">The column whose <see cref="P:Microsoft.Data.DataView.DataViewSchema.Column.Annotations" /> will be queried.</param>
        <param name="keyValues">The <see cref="T:Microsoft.ML.Data.VBuffer`1" /> into which the key values will be stored.</param>
        <summary>
            Stores the key values of the input colum into the provided buffer, if this is of key type and whose
            key values are of <see cref="P:Microsoft.ML.Data.VectorType.ItemType" /> whose <see cref="P:Microsoft.Data.DataView.DataViewType.RawType" /> matches
            <typeparamref name="TValue" />. If there is no matching key valued annotation this will throw an exception.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSlotNames">
      <MemberSignature Language="C#" Value="public static void GetSlotNames (this Microsoft.Data.DataView.DataViewSchema.Column column, ref Microsoft.ML.Data.VBuffer&lt;ReadOnlyMemory&lt;char&gt;&gt; slotNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetSlotNames(valuetype Microsoft.Data.DataView.DataViewSchema/Column column, valuetype Microsoft.ML.Data.VBuffer`1&lt;valuetype System.ReadOnlyMemory`1&lt;char&gt;&gt;&amp; slotNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.SchemaAnnotationsExtensions.GetSlotNames(Microsoft.Data.DataView.DataViewSchema.Column,Microsoft.ML.Data.VBuffer{System.ReadOnlyMemory{System.Char}}@)" />
      <MemberSignature Language="F#" Value="static member GetSlotNames : Microsoft.Data.DataView.DataViewSchema.Column *  -&gt; unit" Usage="Microsoft.ML.Data.SchemaAnnotationsExtensions.GetSlotNames (column, slotNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.Data.DataView.DataViewSchema+Column" RefType="this" />
        <Parameter Name="slotNames" Type="Microsoft.ML.Data.VBuffer&lt;System.ReadOnlyMemory&lt;System.Char&gt;&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="column">The column whose <see cref="P:Microsoft.Data.DataView.DataViewSchema.Column.Annotations" /> will be queried.</param>
        <param name="slotNames">The <see cref="T:Microsoft.ML.Data.VBuffer`1" /> into which the slot names will be stored.</param>
        <summary>
            Stores the slots names of the input column into the provided buffer, if there are slot names.
            Otherwise it will throw an exception.
            </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.ML.Data.SchemaAnnotationsExtensions.HasSlotNames(Microsoft.Data.DataView.DataViewSchema.Column)" />
      </Docs>
    </Member>
    <Member MemberName="HasKeyValues">
      <MemberSignature Language="C#" Value="public static bool HasKeyValues (this Microsoft.Data.DataView.DataViewSchema.Column column, Microsoft.Data.DataView.PrimitiveDataViewType keyValueItemType = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasKeyValues(valuetype Microsoft.Data.DataView.DataViewSchema/Column column, class Microsoft.Data.DataView.PrimitiveDataViewType keyValueItemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.SchemaAnnotationsExtensions.HasKeyValues(Microsoft.Data.DataView.DataViewSchema.Column,Microsoft.Data.DataView.PrimitiveDataViewType)" />
      <MemberSignature Language="F#" Value="static member HasKeyValues : Microsoft.Data.DataView.DataViewSchema.Column * Microsoft.Data.DataView.PrimitiveDataViewType -&gt; bool" Usage="Microsoft.ML.Data.SchemaAnnotationsExtensions.HasKeyValues (column, keyValueItemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.Data.DataView.DataViewSchema+Column" RefType="this" />
        <Parameter Name="keyValueItemType" Type="Microsoft.Data.DataView.PrimitiveDataViewType" />
      </Parameters>
      <Docs>
        <param name="column">The column whose <see cref="P:Microsoft.Data.DataView.DataViewSchema.Column.Annotations" /> will be queried.</param>
        <param name="keyValueItemType">The type of the individual key-values to query. A common,
            though not universal, type to provide is <see cref="P:Microsoft.Data.DataView.TextDataViewType.Instance" />, so if left unspecified
            this will be assumed to have the value <see cref="P:Microsoft.Data.DataView.TextDataViewType.Instance" />.</param>
        <summary>
            Returns <see langword="true" /> if the input column is of <see cref="T:Microsoft.ML.Data.VectorType" />, and that has
            <c>SlotNames</c> annotation of a <see cref="T:Microsoft.ML.Data.VectorType" /> whose <see cref="P:Microsoft.ML.Data.VectorType.ItemType" />
            is of <see cref="T:Microsoft.Data.DataView.TextDataViewType" />, and further whose <see cref="P:Microsoft.ML.Data.VectorType.Size" /> matches
            this input vector size.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.ML.Data.SchemaAnnotationsExtensions.GetKeyValues``1(Microsoft.Data.DataView.DataViewSchema.Column,Microsoft.ML.Data.VBuffer{``0}@)" />
      </Docs>
    </Member>
    <Member MemberName="HasSlotNames">
      <MemberSignature Language="C#" Value="public static bool HasSlotNames (this Microsoft.Data.DataView.DataViewSchema.Column column);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasSlotNames(valuetype Microsoft.Data.DataView.DataViewSchema/Column column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.SchemaAnnotationsExtensions.HasSlotNames(Microsoft.Data.DataView.DataViewSchema.Column)" />
      <MemberSignature Language="F#" Value="static member HasSlotNames : Microsoft.Data.DataView.DataViewSchema.Column -&gt; bool" Usage="Microsoft.ML.Data.SchemaAnnotationsExtensions.HasSlotNames column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.Data.DataView.DataViewSchema+Column" RefType="this" />
      </Parameters>
      <Docs>
        <param name="column">The column whose <see cref="P:Microsoft.Data.DataView.DataViewSchema.Column.Annotations" /> will be queried.</param>
        <summary>
            Returns <see langword="true" /> if the input column is of <see cref="T:Microsoft.ML.Data.VectorType" />, and that has
            <c>SlotNames</c> annotation of a <see cref="T:Microsoft.ML.Data.VectorType" /> whose <see cref="P:Microsoft.ML.Data.VectorType.ItemType" />
            is of <see cref="T:Microsoft.Data.DataView.TextDataViewType" />, and further whose <see cref="P:Microsoft.ML.Data.VectorType.Size" /> matches
            this input vector size.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.ML.Data.SchemaAnnotationsExtensions.GetSlotNames(Microsoft.Data.DataView.DataViewSchema.Column,Microsoft.ML.Data.VBuffer{System.ReadOnlyMemory{System.Char}}@)" />
      </Docs>
    </Member>
    <Member MemberName="IsNormalized">
      <MemberSignature Language="C#" Value="public static bool IsNormalized (this Microsoft.Data.DataView.DataViewSchema.Column column);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNormalized(valuetype Microsoft.Data.DataView.DataViewSchema/Column column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.SchemaAnnotationsExtensions.IsNormalized(Microsoft.Data.DataView.DataViewSchema.Column)" />
      <MemberSignature Language="F#" Value="static member IsNormalized : Microsoft.Data.DataView.DataViewSchema.Column -&gt; bool" Usage="Microsoft.ML.Data.SchemaAnnotationsExtensions.IsNormalized column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.Data.DataView.DataViewSchema+Column" RefType="this" />
      </Parameters>
      <Docs>
        <param name="column">To be added.</param>
        <summary>
            Returns <see langword="true" /> if and only if <paramref name="column" /> has <c>IsNormalized</c> annotation
            set to <see langword="true" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>