<Type Name="SchemaDefinition" FullName="Microsoft.ML.Data.SchemaDefinition">
  <TypeSignature Language="C#" Value="public sealed class SchemaDefinition : System.Collections.Generic.List&lt;Microsoft.ML.Data.SchemaDefinition.Column&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SchemaDefinition extends System.Collections.Generic.List`1&lt;class Microsoft.ML.Data.SchemaDefinition/Column&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Data.SchemaDefinition" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SchemaDefinition&#xA;Inherits List(Of SchemaDefinition.Column)" />
  <TypeSignature Language="F#" Value="type SchemaDefinition = class&#xA;    inherit List&lt;SchemaDefinition.Column&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Generic.List&lt;Microsoft.ML.Data.SchemaDefinition+Column&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Microsoft.ML.Data.SchemaDefinition+Column</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This class defines a schema of a typed data view.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Data.SchemaDefinition Create (Type userType, Microsoft.ML.Data.SchemaDefinition.Direction direction = Microsoft.ML.Data.SchemaDefinition+Direction.Both);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Data.SchemaDefinition Create(class System.Type userType, valuetype Microsoft.ML.Data.SchemaDefinition/Direction direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.SchemaDefinition.Create(System.Type,Microsoft.ML.Data.SchemaDefinition.Direction)" />
      <MemberSignature Language="F#" Value="static member Create : Type * Microsoft.ML.Data.SchemaDefinition.Direction -&gt; Microsoft.ML.Data.SchemaDefinition" Usage="Microsoft.ML.Data.SchemaDefinition.Create (userType, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.SchemaDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userType" Type="System.Type" />
        <Parameter Name="direction" Type="Microsoft.ML.Data.SchemaDefinition+Direction" />
      </Parameters>
      <Docs>
        <param name="userType">The type to base the schema on.</param>
        <param name="direction">Accept fields and properties based on their direction.</param>
        <summary>
            Create a schema definition by enumerating all public fields of the given type.
            </summary>
        <returns>The generated schema definition.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.SchemaDefinition.Column this[string columnName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Data.SchemaDefinition/Column Item(string)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Data.SchemaDefinition.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnName As String) As SchemaDefinition.Column" />
      <MemberSignature Language="F#" Value="member this.Item(string) : Microsoft.ML.Data.SchemaDefinition.Column with get, set" Usage="Microsoft.ML.Data.SchemaDefinition.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.SchemaDefinition+Column</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">To be added.</param>
        <summary>
            Get or set the column definition by column name.
            If there's no such column:
            - get returns null,
            - set adds a new column.
            If there's more than one column with the same name:
            - get returns the first column,
            - set replaces the first column.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>