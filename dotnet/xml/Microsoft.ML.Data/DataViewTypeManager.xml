<Type Name="DataViewTypeManager" FullName="Microsoft.ML.Data.DataViewTypeManager">
  <TypeSignature Language="C#" Value="public static class DataViewTypeManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataViewTypeManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Data.DataViewTypeManager" />
  <TypeSignature Language="VB.NET" Value="Public Class DataViewTypeManager" />
  <TypeSignature Language="F#" Value="type DataViewTypeManager = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A singleton class for managing the map between ML.NET <see cref="T:Microsoft.ML.Data.DataViewType" /> and C# <see cref="T:System.Type" />.
            To support custom column type in <see cref="T:Microsoft.ML.IDataView" />, the column's underlying type (e.g., a C# class's type)
            should be registered with a class derived from <see cref="T:Microsoft.ML.Data.DataViewType" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static void Register (Microsoft.ML.Data.DataViewType dataViewType, Type type, Microsoft.ML.Data.DataViewTypeAttribute typeAttribute = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register(class Microsoft.ML.Data.DataViewType dataViewType, class System.Type type, class Microsoft.ML.Data.DataViewTypeAttribute typeAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.DataViewTypeManager.Register(Microsoft.ML.Data.DataViewType,System.Type,Microsoft.ML.Data.DataViewTypeAttribute)" />
      <MemberSignature Language="F#" Value="static member Register : Microsoft.ML.Data.DataViewType * Type * Microsoft.ML.Data.DataViewTypeAttribute -&gt; unit" Usage="Microsoft.ML.Data.DataViewTypeManager.Register (dataViewType, type, typeAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataViewType" Type="Microsoft.ML.Data.DataViewType" Index="0" FrameworkAlternate="ml-dotnet;ml-dotnet-1.4.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="ml-dotnet;ml-dotnet-1.4.0" />
        <Parameter Name="typeAttribute" Type="Microsoft.ML.Data.DataViewTypeAttribute" Index="2" FrameworkAlternate="ml-dotnet;ml-dotnet-1.4.0" />
      </Parameters>
      <Docs>
        <param name="dataViewType">The corresponding type of <paramref name="type" /> in ML.NET's type system.</param>
        <param name="type">Native type in C#.</param>
        <param name="typeAttribute">The <see cref="T:Microsoft.ML.Data.DataViewTypeAttribute" /> attached to <paramref name="type" />.</param>
        <summary>
            This function tells that <paramref name="dataViewType" /> should be representation of data in <paramref name="type" /> in
            ML.NET's type system. The registered <paramref name="type" /> must be a standard C# object's type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static void Register (Microsoft.ML.Data.DataViewType dataViewType, Type type, System.Collections.Generic.IEnumerable&lt;Attribute&gt; typeAttributes);" FrameworkAlternate="ml-dotnet;ml-dotnet-1.4.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register(class Microsoft.ML.Data.DataViewType dataViewType, class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; typeAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.DataViewTypeManager.Register(Microsoft.ML.Data.DataViewType,System.Type,System.Collections.Generic.IEnumerable{System.Attribute})" />
      <MemberSignature Language="F#" Value="static member Register : Microsoft.ML.Data.DataViewType * Type * seq&lt;Attribute&gt; -&gt; unit" Usage="Microsoft.ML.Data.DataViewTypeManager.Register (dataViewType, type, typeAttributes)" />
      <MemberSignature Language="C#" Value="public static void Register (Microsoft.ML.Data.DataViewType dataViewType, Type type, System.Collections.Generic.IEnumerable&lt;Attribute&gt; typeAttributes = null);" FrameworkAlternate="ml-dotnet-1.1.0;ml-dotnet-1.2.0;ml-dotnet-1.3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet;ml-dotnet-1.4.0">
          <AttributeName>System.Obsolete("This API is depricated, please use the new form of Register which takes in a single DataViewTypeAttribute instead.", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataViewType" Type="Microsoft.ML.Data.DataViewType" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="typeAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
      </Parameters>
      <Docs>
        <param name="dataViewType">The corresponding type of <paramref name="type" /> in ML.NET's type system.</param>
        <param name="type">Native type in C#.</param>
        <param name="typeAttributes">The <see cref="T:System.Attribute" />s attached to <paramref name="type" />.</param>
        <summary>
            This function tells that <paramref name="dataViewType" /> should be representation of data in <paramref name="type" /> in
            ML.NET's type system. The registered <paramref name="type" /> must be a standard C# object's type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
