<Type Name="LambdaFilter" FullName="Microsoft.ML.Data.LambdaFilter">
  <TypeSignature Language="C#" Value="public static class LambdaFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LambdaFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Data.LambdaFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class LambdaFilter" />
  <TypeSignature Language="F#" Value="type LambdaFilter = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This applies the user provided RefPredicate to a column and drops rows that map to false. It automatically
            injects a standard conversion from the actual type of the source column to typeSrc (if needed).
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create&lt;TSrc&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Data.IDataView Create&lt;TSrc&gt; (Microsoft.ML.IHostEnvironment env, string name, Microsoft.ML.Data.IDataView input, string src, Microsoft.ML.Data.ColumnType typeSrc, Microsoft.ML.Data.InPredicate&lt;TSrc&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Data.IDataView Create&lt;TSrc&gt;(class Microsoft.ML.IHostEnvironment env, string name, class Microsoft.ML.Data.IDataView input, string src, class Microsoft.ML.Data.ColumnType typeSrc, class Microsoft.ML.Data.InPredicate`1&lt;!!TSrc&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.LambdaFilter.Create``1(Microsoft.ML.IHostEnvironment,System.String,Microsoft.ML.Data.IDataView,System.String,Microsoft.ML.Data.ColumnType,Microsoft.ML.Data.InPredicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of TSrc) (env As IHostEnvironment, name As String, input As IDataView, src As String, typeSrc As ColumnType, predicate As InPredicate(Of TSrc)) As IDataView" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.ML.IHostEnvironment * string * Microsoft.ML.Data.IDataView * string * Microsoft.ML.Data.ColumnType * Microsoft.ML.Data.InPredicate&lt;'Src&gt; -&gt; Microsoft.ML.Data.IDataView" Usage="Microsoft.ML.Data.LambdaFilter.Create (env, name, input, src, typeSrc, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.IDataView</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSrc" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="input" Type="Microsoft.ML.Data.IDataView" />
        <Parameter Name="src" Type="System.String" />
        <Parameter Name="typeSrc" Type="Microsoft.ML.Data.ColumnType" />
        <Parameter Name="predicate" Type="Microsoft.ML.Data.InPredicate&lt;TSrc&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSrc">To be added.</typeparam>
        <param name="env">To be added.</param>
        <param name="name">To be added.</param>
        <param name="input">To be added.</param>
        <param name="src">To be added.</param>
        <param name="typeSrc">To be added.</param>
        <param name="predicate">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>