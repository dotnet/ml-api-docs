<Type Name="RowToRowEvaluatorBase&lt;TAgg&gt;" FullName="Microsoft.ML.Data.RowToRowEvaluatorBase&lt;TAgg&gt;">
  <TypeSignature Language="C#" Value="public abstract class RowToRowEvaluatorBase&lt;TAgg&gt; : Microsoft.ML.Data.EvaluatorBase&lt;TAgg&gt; where TAgg : EvaluatorBase&lt;TAgg&gt;.AggregatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RowToRowEvaluatorBase`1&lt;(class Microsoft.ML.Data.EvaluatorBase`1/AggregatorBase&lt;!TAgg&gt;) TAgg&gt; extends Microsoft.ML.Data.EvaluatorBase`1&lt;!TAgg&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Data.RowToRowEvaluatorBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RowToRowEvaluatorBase(Of TAgg)&#xA;Inherits EvaluatorBase(Of TAgg)" />
  <TypeSignature Language="F#" Value="type RowToRowEvaluatorBase&lt;'Agg (requires 'Agg :&gt; EvaluatorBase&lt;'Agg&gt;.AggregatorBase)&gt; = class&#xA;    inherit EvaluatorBase&lt;'Agg (requires 'Agg :&gt; EvaluatorBase&lt;'Agg&gt;.AggregatorBase)&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TAgg">
      <Constraints>
        <BaseTypeName>Microsoft.ML.Data.EvaluatorBase&lt;TAgg&gt;+AggregatorBase</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.Data.EvaluatorBase&lt;TAgg&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TAgg">TAgg</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TAgg">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members />
</Type>