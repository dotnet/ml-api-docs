<Type Name="MatrixTransposeOps" FullName="Microsoft.ML.Runtime.Internal.Utilities.MatrixTransposeOps">
  <TypeSignature Language="C#" Value="public static class MatrixTransposeOps" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MatrixTransposeOps extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Internal.Utilities.MatrixTransposeOps" />
  <TypeSignature Language="VB.NET" Value="Public Class MatrixTransposeOps" />
  <TypeSignature Language="F#" Value="type MatrixTransposeOps = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Transpose">
      <MemberSignature Language="C#" Value="public static void Transpose (double* src, double* dst, int m, int n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transpose(float64* src, float64* dst, int32 m, int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MatrixTransposeOps.Transpose(System.Double*,System.Double*,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Transpose : nativeptr&lt;double&gt; * nativeptr&lt;double&gt; * int * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.MatrixTransposeOps.Transpose (src, dst, m, n)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Double*" />
        <Parameter Name="dst" Type="System.Double*" />
        <Parameter Name="m" Type="System.Int32" />
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="src"></param>
        <param name="dst">Where to write the transpose. Note that dst cannot be the same as src.</param>
        <param name="m"></param>
        <param name="n"></param>
        <summary>
            Swap the first m*n elements within a given array so that, for any
            non-negative i and j less than m and n respectively, b[i*n+j] == a[j*m+i]
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transpose">
      <MemberSignature Language="C#" Value="public static void Transpose (float* src, float* dst, int m, int n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transpose(float32* src, float32* dst, int32 m, int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MatrixTransposeOps.Transpose(System.Single*,System.Single*,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Transpose : nativeptr&lt;single&gt; * nativeptr&lt;single&gt; * int * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.MatrixTransposeOps.Transpose (src, dst, m, n)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Single*" />
        <Parameter Name="dst" Type="System.Single*" />
        <Parameter Name="m" Type="System.Int32" />
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="src"></param>
        <param name="dst">Where to write the transpose. Note that dst cannot be the same as src.</param>
        <param name="m"></param>
        <param name="n"></param>
        <summary>
            Swap the first m*n elements within a given array so that, for any
            non-negative i and j less than m and n respectively, b[i*n+j] == a[j*m+i]
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transpose&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Transpose&lt;T&gt; (T[] src, T[] dst, int m, int n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transpose&lt;T&gt;(!!T[] src, !!T[] dst, int32 m, int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MatrixTransposeOps.Transpose``1(``0[],``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Transpose(Of T) (src As T(), dst As T(), m As Integer, n As Integer)" />
      <MemberSignature Language="F#" Value="static member Transpose : 'T[] * 'T[] * int * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.MatrixTransposeOps.Transpose (src, dst, m, n)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="src" Type="T[]" />
        <Parameter Name="dst" Type="T[]" />
        <Parameter Name="m" Type="System.Int32" />
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">Elements of the array are this type</typeparam>
        <param name="src">The source elements of the transpose. Must contain at least m*n elements.</param>
        <param name="dst">Where to write the transpose. Note that dst cannot be the same as src. Must contain at least m*n elements.</param>
        <param name="m">The major index.</param>
        <param name="n">The minor index. Elements are currently stored in "m" blocks of "n" items.</param>
        <summary>
            Swap the first m*n elements within a given array so that, for any
            non-negative i and j less than m and n respectively, dst[i*n+j] == src[j*m+i]
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransposeSingleThread&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void TransposeSingleThread&lt;T&gt; (T[] src, T[] dst, int m, int n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TransposeSingleThread&lt;T&gt;(!!T[] src, !!T[] dst, int32 m, int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.MatrixTransposeOps.TransposeSingleThread``1(``0[],``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TransposeSingleThread(Of T) (src As T(), dst As T(), m As Integer, n As Integer)" />
      <MemberSignature Language="F#" Value="static member TransposeSingleThread : 'T[] * 'T[] * int * int -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.Utilities.MatrixTransposeOps.TransposeSingleThread (src, dst, m, n)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="src" Type="T[]" />
        <Parameter Name="dst" Type="T[]" />
        <Parameter Name="m" Type="System.Int32" />
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">Elements of the array are this type</typeparam>
        <param name="src"></param>
        <param name="dst">Where to write the transpose. Note that dst cannot be the same as src.</param>
        <param name="m"></param>
        <param name="n"></param>
        <summary>
            Swap the first m*n elements within a given array so that, for any
            non-negative i and j less than m and n respectively, dst[i*n+j] == src[j*m+i].
            This variant of the function is single threaded, and useful in that
            case where the workflow is otherwise single threaded.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>