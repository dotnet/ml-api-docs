<Type Name="HashArray&lt;TItem&gt;" FullName="Microsoft.ML.Runtime.Internal.Utilities.HashArray&lt;TItem&gt;">
  <TypeSignature Language="C#" Value="public sealed class HashArray&lt;TItem&gt; where TItem : IEquatable&lt;TItem&gt;, IComparable&lt;TItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HashArray`1&lt;(class System.IEquatable`1&lt;!TItem&gt;, class System.IComparable`1&lt;!TItem&gt;) TItem&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Internal.Utilities.HashArray`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HashArray(Of TItem)" />
  <TypeSignature Language="F#" Value="type HashArray&lt;'Item (requires 'Item :&gt; IEquatable&lt;'Item&gt; and 'Item :&gt; IComparable&lt;'Item&gt;)&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TItem">
      <Constraints>
        <InterfaceName>System.IEquatable&lt;TItem&gt;</InterfaceName>
        <InterfaceName>System.IComparable&lt;TItem&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TItem">To be added.</typeparam>
    <summary>
            A Hash Array that implements both val -&gt; index lookup and index -&gt; val lookup.
            Also implements memory efficient sorting.
            Note: Supports adding and looking up of items but does not support removal of items.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HashArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.HashArray`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (TItem val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(!TItem val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.HashArray`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (val As TItem) As Integer" />
      <MemberSignature Language="F#" Value="member this.Add : 'Item -&gt; int" Usage="hashArray.Add val" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="val">To be added.</param>
        <summary>
            Make sure the given value has an equivalent TItem in the hashArray
            and return the index of the value.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (TItem[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!TItem[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.HashArray`1.CopyTo(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As TItem())" />
      <MemberSignature Language="F#" Value="member this.CopyTo : 'Item[] -&gt; unit" Usage="hashArray.CopyTo array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="TItem[]" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <summary>
            Copies all items to the passed in array. Requires the passed in array to be at least the
            same length as Count.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Internal.Utilities.HashArray`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.ML.Runtime.Internal.Utilities.HashArray&lt;'Item (requires 'Item :&gt; System.IEquatable&lt;'Item&gt; and 'Item :&gt; System.IComparable&lt;'Item&gt;)&gt;.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public TItem GetItem (int it);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TItem GetItem(int32 it) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.HashArray`1.GetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (it As Integer) As TItem" />
      <MemberSignature Language="F#" Value="member this.GetItem : int -&gt; 'Item" Usage="hashArray.GetItem it" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="it" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="it">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.HashArray`1.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort ()" />
      <MemberSignature Language="F#" Value="member this.Sort : unit -&gt; unit" Usage="hashArray.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (TItem val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAdd(!TItem val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.HashArray`1.TryAdd(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (val As TItem) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryAdd : 'Item -&gt; bool" Usage="hashArray.TryAdd val" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="val">To be added.</param>
        <summary>
            Make sure the given value has an equivalent TItem in the hashArray
            and return the index of the value.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetIndex">
      <MemberSignature Language="C#" Value="public bool TryGetIndex (TItem val, out int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetIndex(!TItem val, [out] int32&amp; index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.HashArray`1.TryGetIndex(`0,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetIndex (val As TItem, ByRef index As Integer) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryGetIndex : 'Item *  -&gt; bool" Usage="hashArray.TryGetIndex (val, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="TItem" />
        <Parameter Name="index" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="val">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
            Find the index of the given val in the hash array.
            Returns a bool representing if val is present.
            Index outputs the index that the val is at in the array, -1 otherwise.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>