<Type Name="SupervisedBinFinder" FullName="Microsoft.ML.Runtime.Internal.Utilities.SupervisedBinFinder">
  <TypeSignature Language="C#" Value="public sealed class SupervisedBinFinder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SupervisedBinFinder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Internal.Utilities.SupervisedBinFinder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SupervisedBinFinder" />
  <TypeSignature Language="F#" Value="type SupervisedBinFinder = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class SupervisedBinFinder sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class SupervisedBinFinder sealed" />
  <TypeSignature Language="C++ WINRT" Value="class SupervisedBinFinder sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This class performs discretization of (value, label) pairs into bins in a way that minimizes 
            the target function "minimum description length".
            The algorithm is outlineed in an article
            "Multi-Interval Discretization of Continuous-Valued Attributes for Classification Learning"
            [Fayyad, Usama M.; Irani, Keki B. (1993)] http://ijcai.org/Past%20Proceedings/IJCAI-93-VOL2/PDF/022.pdf
            
            The class can be used several times sequentially, it is stateful and not thread-safe.
            Both Single and Double precision processing is implemented, and is identical.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SupervisedBinFinder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.SupervisedBinFinder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SupervisedBinFinder();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; SupervisedBinFinder();" />
      <MemberSignature Language="C++ WINRT" Value=" SupervisedBinFinder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindBins">
      <MemberSignature Language="C#" Value="public double[] FindBins (int maxBins, int minBinSize, int nLabels, System.Collections.Generic.IList&lt;double&gt; values, System.Collections.Generic.IList&lt;int&gt; labels);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64[] FindBins(int32 maxBins, int32 minBinSize, int32 nLabels, class System.Collections.Generic.IList`1&lt;float64&gt; values, class System.Collections.Generic.IList`1&lt;int32&gt; labels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.SupervisedBinFinder.FindBins(System.Int32,System.Int32,System.Int32,System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindBins (maxBins As Integer, minBinSize As Integer, nLabels As Integer, values As IList(Of Double), labels As IList(Of Integer)) As Double()" />
      <MemberSignature Language="F#" Value="member this.FindBins : int * int * int * System.Collections.Generic.IList&lt;double&gt; * System.Collections.Generic.IList&lt;int&gt; -&gt; double[]" Usage="supervisedBinFinder.FindBins (maxBins, minBinSize, nLabels, values, labels)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ FindBins(int maxBins, int minBinSize, int nLabels, System::Collections::Generic::IList&lt;double&gt; ^ values, System::Collections::Generic::IList&lt;int&gt; ^ labels);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxBins" Type="System.Int32" />
        <Parameter Name="minBinSize" Type="System.Int32" />
        <Parameter Name="nLabels" Type="System.Int32" />
        <Parameter Name="values" Type="System.Collections.Generic.IList&lt;System.Double&gt;" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="maxBins">Maximum number of bins</param>
        <param name="minBinSize">Minimum number of values per bin (stopping condition for greedy bin splitting)</param>
        <param name="nLabels">Cardinality of the labels</param>
        <param name="values">The feature values</param>
        <param name="labels">The corresponding label values</param>
        <summary>
            Finds the bins for Double values (and integer labels)
            </summary>
        <returns>An array of split points, no more than <paramref name="maxBins" /> total (but maybe less), ending with PositiveInfinity</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindBins">
      <MemberSignature Language="C#" Value="public float[] FindBins (int maxBins, int minBinSize, int nLabels, System.Collections.Generic.IList&lt;float&gt; values, System.Collections.Generic.IList&lt;int&gt; labels);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32[] FindBins(int32 maxBins, int32 minBinSize, int32 nLabels, class System.Collections.Generic.IList`1&lt;float32&gt; values, class System.Collections.Generic.IList`1&lt;int32&gt; labels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.SupervisedBinFinder.FindBins(System.Int32,System.Int32,System.Int32,System.Collections.Generic.IList{System.Single},System.Collections.Generic.IList{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindBins (maxBins As Integer, minBinSize As Integer, nLabels As Integer, values As IList(Of Single), labels As IList(Of Integer)) As Single()" />
      <MemberSignature Language="F#" Value="member this.FindBins : int * int * int * System.Collections.Generic.IList&lt;single&gt; * System.Collections.Generic.IList&lt;int&gt; -&gt; single[]" Usage="supervisedBinFinder.FindBins (maxBins, minBinSize, nLabels, values, labels)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;float&gt; ^ FindBins(int maxBins, int minBinSize, int nLabels, System::Collections::Generic::IList&lt;float&gt; ^ values, System::Collections::Generic::IList&lt;int&gt; ^ labels);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxBins" Type="System.Int32" />
        <Parameter Name="minBinSize" Type="System.Int32" />
        <Parameter Name="nLabels" Type="System.Int32" />
        <Parameter Name="values" Type="System.Collections.Generic.IList&lt;System.Single&gt;" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="maxBins">Maximum number of bins</param>
        <param name="minBinSize">Minimum number of values per bin (stopping condition for greedy bin splitting)</param>
        <param name="nLabels">Cardinality of the labels</param>
        <param name="values">The feature values</param>
        <param name="labels">The corresponding label values</param>
        <summary>
            Finds the bins for Single values (and integer labels)
            </summary>
        <returns>An array of split points, no more than <paramref name="maxBins" /> total (but maybe less), ending with PositiveInfinity</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>