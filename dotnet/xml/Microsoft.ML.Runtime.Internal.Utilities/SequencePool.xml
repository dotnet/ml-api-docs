<Type Name="SequencePool" FullName="Microsoft.ML.Runtime.Internal.Utilities.SequencePool">
  <TypeSignature Language="C#" Value="public sealed class SequencePool" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SequencePool extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Internal.Utilities.SequencePool" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SequencePool" />
  <TypeSignature Language="F#" Value="type SequencePool = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class SequencePool sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class SequencePool sealed" />
  <TypeSignature Language="C++ WINRT" Value="class SequencePool sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A dictionary of uint sequences of variable length. Stores the sequences as
            byte sequences encoded with LEB128. Empty sequences (or null) are also valid.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SequencePool ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.SequencePool.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SequencePool();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; SequencePool();" />
      <MemberSignature Language="C++ WINRT" Value=" SequencePool();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SequencePool (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.SequencePool.#ctor(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As BinaryReader)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Internal.Utilities.SequencePool : System.IO.BinaryReader -&gt; Microsoft.ML.Runtime.Internal.Utilities.SequencePool" Usage="new Microsoft.ML.Runtime.Internal.Utilities.SequencePool reader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SequencePool(System::IO::BinaryReader ^ reader);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Internal.Utilities.SequencePool.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.ML.Runtime.Internal.Utilities.SequencePool.Count" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public int Get (uint[] sequence, int min, int lim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Get(unsigned int32[] sequence, int32 min, int32 lim) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.SequencePool.Get(System.UInt32[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (sequence As UInteger(), min As Integer, lim As Integer) As Integer" />
      <MemberSignature Language="F#" Value="member this.Get : uint32[] * int * int -&gt; int" Usage="sequencePool.Get (sequence, min, lim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Get(cli::array &lt;System::UInt32&gt; ^ sequence, int min, int lim);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int Get(Platform::Array &lt;unsigned int&gt; ^ sequence, int min, int lim);" />
      <MemberSignature Language="C++ WINRT" Value="int Get(std::Array &lt;unsigned int&gt; const &amp; sequence, int min, int lim);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.UInt32[]" />
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="lim" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sequence">An integer sequence</param>
        <param name="min">The starting index of the sequence to find in the pool</param>
        <param name="lim">The length of the sequence to find in the pool</param>
        <summary>
            Find the given sequence in the pool. If not found, returns -1.
            </summary>
        <returns>The ID of the sequence if it is found, -1 otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetById">
      <MemberSignature Language="C#" Value="public int GetById (int id, ref uint[] sequence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetById(int32 id, unsigned int32[]&amp; sequence) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.SequencePool.GetById(System.Int32,System.UInt32[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetById (id As Integer, ByRef sequence As UInteger()) As Integer" />
      <MemberSignature Language="F#" Value="member this.GetById : int *  -&gt; int" Usage="sequencePool.GetById (id, sequence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetById(int id, cli::array &lt;System::UInt32&gt; ^ % sequence);" />
      <MemberSignature Language="C++ WINRT" Value="int GetById(int id, std::Array &lt;unsigned int&gt; const &amp; &amp; sequence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="sequence" Type="System.UInt32[]&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <param name="sequence">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.SequencePool.Save(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As BinaryWriter)" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.BinaryWriter -&gt; unit" Usage="sequencePool.Save writer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::BinaryWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (uint[] sequence, int min, int lim, out int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAdd(unsigned int32[] sequence, int32 min, int32 lim, [out] int32&amp; id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.Utilities.SequencePool.TryAdd(System.UInt32[],System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (sequence As UInteger(), min As Integer, lim As Integer, ByRef id As Integer) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryAdd : uint32[] * int * int *  -&gt; bool" Usage="sequencePool.TryAdd (sequence, min, lim, id)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(cli::array &lt;System::UInt32&gt; ^ sequence, int min, int lim, [Runtime::InteropServices::Out] int % id);" />
      <MemberSignature Language="C++ WINRT" Value="bool TryAdd(std::Array &lt;unsigned int&gt; const &amp; sequence, int min, int lim, [Runtime::InteropServices::Out] int &amp; id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.UInt32[]" />
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="lim" Type="System.Int32" />
        <Parameter Name="id" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sequence">The array containing the sequence to add to the pool.</param>
        <param name="min">The location in the array of the first sequence element.</param>
        <param name="lim">The exclusive end of the sequence.</param>
        <param name="id">To be populated with the id of the added sequence.</param>
        <summary>
            Returns true if the sequence was added, or false if it was already in the pool.
            </summary>
        <returns>True if the sequence was added, false if the sequence was already present in the pool.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>