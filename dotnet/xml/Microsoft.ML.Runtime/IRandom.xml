<Type Name="IRandom" FullName="Microsoft.ML.Runtime.IRandom">
  <TypeSignature Language="C#" Value="public interface IRandom" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRandom" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.IRandom" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRandom" />
  <TypeSignature Language="F#" Value="type IRandom = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public int Next ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.IRandom.Next" />
      <MemberSignature Language="VB.NET" Value="Public Function Next () As Integer" />
      <MemberSignature Language="F#" Value="abstract member Next : unit -&gt; int" Usage="iRandom.Next " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Generates an int in the range [0, int.MaxValue]. Note that this differs
            from the contract for System.Random.Next, which claims to never return
            int.MaxValue.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public int Next (int limit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next(int32 limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.IRandom.Next(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Next (limit As Integer) As Integer" />
      <MemberSignature Language="F#" Value="abstract member Next : int -&gt; int" Usage="iRandom.Next limit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="limit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="limit">To be added.</param>
        <summary>
            Generates an int in the range [0, limit), unless limit == 0, in which case this advances the generator
            and returns 0.
            Throws if limit is less than 0.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextDouble">
      <MemberSignature Language="C#" Value="public double NextDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NextDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.IRandom.NextDouble" />
      <MemberSignature Language="VB.NET" Value="Public Function NextDouble () As Double" />
      <MemberSignature Language="F#" Value="abstract member NextDouble : unit -&gt; double" Usage="iRandom.NextDouble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Generates a Double in the range [0, 1).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSigned">
      <MemberSignature Language="C#" Value="public int NextSigned ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 NextSigned() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.IRandom.NextSigned" />
      <MemberSignature Language="VB.NET" Value="Public Function NextSigned () As Integer" />
      <MemberSignature Language="F#" Value="abstract member NextSigned : unit -&gt; int" Usage="iRandom.NextSigned " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Generates an int in the range [int.MinValue, int.MaxValue].
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSingle">
      <MemberSignature Language="C#" Value="public float NextSingle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 NextSingle() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.IRandom.NextSingle" />
      <MemberSignature Language="VB.NET" Value="Public Function NextSingle () As Single" />
      <MemberSignature Language="F#" Value="abstract member NextSingle : unit -&gt; single" Usage="iRandom.NextSingle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Generates a Single in the range [0, 1).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>