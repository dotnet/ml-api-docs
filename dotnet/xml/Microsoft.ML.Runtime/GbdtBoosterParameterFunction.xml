<Type Name="GbdtBoosterParameterFunction" FullName="Microsoft.ML.Runtime.GbdtBoosterParameterFunction">
  <TypeSignature Language="C#" Value="public sealed class GbdtBoosterParameterFunction : Microsoft.ML.Runtime.BoosterParameterFunction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GbdtBoosterParameterFunction extends Microsoft.ML.Runtime.BoosterParameterFunction" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.GbdtBoosterParameterFunction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GbdtBoosterParameterFunction&#xA;Inherits BoosterParameterFunction" />
  <TypeSignature Language="F#" Value="type GbdtBoosterParameterFunction = class&#xA;    inherit BoosterParameterFunction" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.BoosterParameterFunction</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Traditional Gradient Boosting Decision Tree.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GbdtBoosterParameterFunction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.GbdtBoosterParameterFunction.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureFraction">
      <MemberSignature Language="C#" Value="public double FeatureFraction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 FeatureFraction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.GbdtBoosterParameterFunction.FeatureFraction" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureFraction As Double" />
      <MemberSignature Language="F#" Value="member this.FeatureFraction : double with get, set" Usage="Microsoft.ML.Runtime.GbdtBoosterParameterFunction.FeatureFraction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/Range(Inf=Mono.Cecil.CustomAttributeArgument, Max=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Subsample ratio of columns when constructing each tree. Range: (0,1].
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDepth">
      <MemberSignature Language="C#" Value="public int MaxDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDepth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.GbdtBoosterParameterFunction.MaxDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDepth As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxDepth : int with get, set" Usage="Microsoft.ML.Runtime.GbdtBoosterParameterFunction.MaxDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/Range(Max=Mono.Cecil.CustomAttributeArgument, Min=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Maximum depth of a tree. 0 means no limit. However, tree still grows by best-first.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinChildWeight">
      <MemberSignature Language="C#" Value="public double MinChildWeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinChildWeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.GbdtBoosterParameterFunction.MinChildWeight" />
      <MemberSignature Language="VB.NET" Value="Public Property MinChildWeight As Double" />
      <MemberSignature Language="F#" Value="member this.MinChildWeight : double with get, set" Usage="Microsoft.ML.Runtime.GbdtBoosterParameterFunction.MinChildWeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/Range(Min=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Minimum sum of instance weight(hessian) needed in a child. If the tree partition step results in a leaf node with the sum of instance weight less than min_child_weight, then the building process will give up further partitioning. In linear regression mode, this simply corresponds to minimum number of instances needed to be in each node. The larger, the more conservative the algorithm will be.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSplitGain">
      <MemberSignature Language="C#" Value="public double MinSplitGain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinSplitGain" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.GbdtBoosterParameterFunction.MinSplitGain" />
      <MemberSignature Language="VB.NET" Value="Public Property MinSplitGain As Double" />
      <MemberSignature Language="F#" Value="member this.MinSplitGain : double with get, set" Usage="Microsoft.ML.Runtime.GbdtBoosterParameterFunction.MinSplitGain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/Range(Min=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Minimum loss reduction required to make a further partition on a leaf node of the tree. the larger, the more conservative the algorithm will be.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegAlpha">
      <MemberSignature Language="C#" Value="public double RegAlpha { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RegAlpha" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.GbdtBoosterParameterFunction.RegAlpha" />
      <MemberSignature Language="VB.NET" Value="Public Property RegAlpha As Double" />
      <MemberSignature Language="F#" Value="member this.RegAlpha : double with get, set" Usage="Microsoft.ML.Runtime.GbdtBoosterParameterFunction.RegAlpha" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/Range(Min=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableDiscreteParam("RegAlpha", new System.Object[] { Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument }, false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            L1 regularization term on weights, increase this value will make model more conservative.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegLambda">
      <MemberSignature Language="C#" Value="public double RegLambda { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RegLambda" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.GbdtBoosterParameterFunction.RegLambda" />
      <MemberSignature Language="VB.NET" Value="Public Property RegLambda As Double" />
      <MemberSignature Language="F#" Value="member this.RegLambda : double with get, set" Usage="Microsoft.ML.Runtime.GbdtBoosterParameterFunction.RegLambda" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/Range(Min=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/SweepableDiscreteParam("RegLambda", new System.Object[] { Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument }, false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            L2 regularization term on weights, increasing this value will make model more conservative.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScalePosWeight">
      <MemberSignature Language="C#" Value="public double ScalePosWeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ScalePosWeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.GbdtBoosterParameterFunction.ScalePosWeight" />
      <MemberSignature Language="VB.NET" Value="Public Property ScalePosWeight As Double" />
      <MemberSignature Language="F#" Value="member this.ScalePosWeight : double with get, set" Usage="Microsoft.ML.Runtime.GbdtBoosterParameterFunction.ScalePosWeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Control the balance of positive and negative weights, useful for unbalanced classes. A typical value to consider: sum(negative cases) / sum(positive cases).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subsample">
      <MemberSignature Language="C#" Value="public double Subsample { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Subsample" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.GbdtBoosterParameterFunction.Subsample" />
      <MemberSignature Language="VB.NET" Value="Public Property Subsample As Double" />
      <MemberSignature Language="F#" Value="member this.Subsample : double with get, set" Usage="Microsoft.ML.Runtime.GbdtBoosterParameterFunction.Subsample" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/Range(Inf=Mono.Cecil.CustomAttributeArgument, Max=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Subsample ratio of the training instance. Setting it to 0.5 means that LightGBM randomly collected half of the data instances to grow trees and this will prevent overfitting. Range: (0,1].
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubsampleFreq">
      <MemberSignature Language="C#" Value="public int SubsampleFreq { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubsampleFreq" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.GbdtBoosterParameterFunction.SubsampleFreq" />
      <MemberSignature Language="VB.NET" Value="Public Property SubsampleFreq As Integer" />
      <MemberSignature Language="F#" Value="member this.SubsampleFreq : int with get, set" Usage="Microsoft.ML.Runtime.GbdtBoosterParameterFunction.SubsampleFreq" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.Runtime.EntryPoints.TlcModule/Range(Max=Mono.Cecil.CustomAttributeArgument, Min=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Subsample frequency. 0 means no subsample. If subsampleFreq &gt; 0, it will use a subset(ratio=subsample) to train. And the subset will be updated on every Subsample iteratinos.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnbalancedSets">
      <MemberSignature Language="C#" Value="public bool UnbalancedSets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnbalancedSets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.GbdtBoosterParameterFunction.UnbalancedSets" />
      <MemberSignature Language="VB.NET" Value="Public Property UnbalancedSets As Boolean" />
      <MemberSignature Language="F#" Value="member this.UnbalancedSets : bool with get, set" Usage="Microsoft.ML.Runtime.GbdtBoosterParameterFunction.UnbalancedSets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Use for binary classification when classes are not balanced.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>