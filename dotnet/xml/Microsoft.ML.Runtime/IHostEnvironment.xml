<Type Name="IHostEnvironment" FullName="Microsoft.ML.Runtime.IHostEnvironment">
  <TypeSignature Language="C#" Value="public interface IHostEnvironment : Microsoft.ML.Runtime.IChannelProvider, Microsoft.ML.Runtime.IProgressChannelProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHostEnvironment implements class Microsoft.ML.Runtime.IChannelProvider, class Microsoft.ML.Runtime.IExceptionContext, class Microsoft.ML.Runtime.IProgressChannelProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.IHostEnvironment" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHostEnvironment&#xA;Implements IChannelProvider, IProgressChannelProvider" />
  <TypeSignature Language="F#" Value="type IHostEnvironment = interface&#xA;    interface IChannelProvider&#xA;    interface IExceptionContext&#xA;    interface IProgressChannelProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.IChannelProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.IExceptionContext</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.IProgressChannelProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            The host environment interface creates hosts for components. Note that the methods of
            this interface should be called from the main thread for the environment. To get an environment
            to service another thread, call Fork and pass the return result to that thread.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ComponentCatalog">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.ComponentCatalog ComponentCatalog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.ComponentCatalog ComponentCatalog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.IHostEnvironment.ComponentCatalog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ComponentCatalog As ComponentCatalog" />
      <MemberSignature Language="F#" Value="member this.ComponentCatalog : Microsoft.ML.Runtime.ComponentCatalog" Usage="Microsoft.ML.Runtime.IHostEnvironment.ComponentCatalog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.ComponentCatalog</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The catalog of loadable components (<see cref="T:Microsoft.ML.LoadableClassAttribute" />) that are available in this host.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.IHost Register (string name, Nullable&lt;int&gt; seed = null, Nullable&lt;bool&gt; verbose = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.IHost Register(string name, valuetype System.Nullable`1&lt;int32&gt; seed, valuetype System.Nullable`1&lt;bool&gt; verbose) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.IHostEnvironment.Register(System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Function Register (name As String, Optional seed As Nullable(Of Integer) = null, Optional verbose As Nullable(Of Boolean) = null) As IHost" />
      <MemberSignature Language="F#" Value="abstract member Register : string * Nullable&lt;int&gt; * Nullable&lt;bool&gt; -&gt; Microsoft.ML.Runtime.IHost" Usage="iHostEnvironment.Register (name, seed, verbose)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IHost</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="seed" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="verbose" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="seed">To be added.</param>
        <param name="verbose">To be added.</param>
        <summary>
            Create a host with the given registration name.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>