<Type Name="TrainerExtensions" FullName="Microsoft.ML.Runtime.TrainerExtensions">
  <TypeSignature Language="C#" Value="public static class TrainerExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TrainerExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.TrainerExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module TrainerExtensions" />
  <TypeSignature Language="F#" Value="type TrainerExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Train">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.IPredictor Train (this Microsoft.ML.Runtime.ITrainer trainer, Microsoft.ML.Runtime.Data.RoleMappedData trainData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.IPredictor Train(class Microsoft.ML.Runtime.ITrainer trainer, class Microsoft.ML.Runtime.Data.RoleMappedData trainData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TrainerExtensions.Train(Microsoft.ML.Runtime.ITrainer,Microsoft.ML.Runtime.Data.RoleMappedData)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Train (trainer As ITrainer, trainData As RoleMappedData) As IPredictor" />
      <MemberSignature Language="F#" Value="static member Train : Microsoft.ML.Runtime.ITrainer * Microsoft.ML.Runtime.Data.RoleMappedData -&gt; Microsoft.ML.Runtime.IPredictor" Usage="Microsoft.ML.Runtime.TrainerExtensions.Train (trainer, trainData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IPredictor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainer" Type="Microsoft.ML.Runtime.ITrainer" RefType="this" />
        <Parameter Name="trainData" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
      </Parameters>
      <Docs>
        <param name="trainer">The trainer</param>
        <param name="trainData">The training data.</param>
        <summary>
            Convenience train extension for the case where one has only a training set with no auxiliary information.
            Equivalent to calling <see cref="M:Microsoft.ML.Runtime.ITrainer.Train(Microsoft.ML.Runtime.TrainContext)" />
            on a <see cref="T:Microsoft.ML.Runtime.TrainContext" /> constructed with <paramref name="trainData" />.
            </summary>
        <returns>The trained predictor</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Train&lt;TPredictor&gt;">
      <MemberSignature Language="C#" Value="public static TPredictor Train&lt;TPredictor&gt; (this Microsoft.ML.Runtime.ITrainer&lt;TPredictor&gt; trainer, Microsoft.ML.Runtime.Data.RoleMappedData trainData) where TPredictor : Microsoft.ML.Runtime.IPredictor;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TPredictor Train&lt;(class Microsoft.ML.Runtime.IPredictor) TPredictor&gt;(class Microsoft.ML.Runtime.ITrainer`1&lt;!!TPredictor&gt; trainer, class Microsoft.ML.Runtime.Data.RoleMappedData trainData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TrainerExtensions.Train``1(Microsoft.ML.Runtime.ITrainer{``0},Microsoft.ML.Runtime.Data.RoleMappedData)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Train(Of TPredictor As IPredictor) (trainer As ITrainer(Of TPredictor), trainData As RoleMappedData) As TPredictor" />
      <MemberSignature Language="F#" Value="static member Train : Microsoft.ML.Runtime.ITrainer&lt;'Predictor (requires 'Predictor :&gt; Microsoft.ML.Runtime.IPredictor)&gt; * Microsoft.ML.Runtime.Data.RoleMappedData -&gt; 'Predictor (requires 'Predictor :&gt; Microsoft.ML.Runtime.IPredictor)" Usage="Microsoft.ML.Runtime.TrainerExtensions.Train (trainer, trainData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TPredictor</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TPredictor">
          <Constraints>
            <InterfaceName>Microsoft.ML.Runtime.IPredictor</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="trainer" Type="Microsoft.ML.Runtime.ITrainer&lt;TPredictor&gt;" RefType="this" />
        <Parameter Name="trainData" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
      </Parameters>
      <Docs>
        <typeparam name="TPredictor">To be added.</typeparam>
        <param name="trainer">The trainer</param>
        <param name="trainData">The training data.</param>
        <summary>
            Convenience train extension for the case where one has only a training set with no auxiliary information.
            Equivalent to calling <see cref="M:Microsoft.ML.Runtime.ITrainer`1.Train(Microsoft.ML.Runtime.TrainContext)" />
            on a <see cref="T:Microsoft.ML.Runtime.TrainContext" /> constructed with <paramref name="trainData" />.
            </summary>
        <returns>The trained predictor</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>