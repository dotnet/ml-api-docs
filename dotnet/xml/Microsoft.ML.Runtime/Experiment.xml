<Type Name="Experiment" FullName="Microsoft.ML.Runtime.Experiment">
  <TypeSignature Language="C#" Value="public sealed class Experiment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Experiment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Experiment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Experiment" />
  <TypeSignature Language="F#" Value="type Experiment = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Newtonsoft.Json.JsonConverter(typeof(Microsoft.ML.Runtime.ExperimentSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            This class represents an entry point graph.
            The nodes in the graph represent entry point calls and
            the edges of the graph are variables that help connect the nodes.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Experiment (Microsoft.ML.Runtime.IHostEnvironment env);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.#ctor(Microsoft.ML.Runtime.IHostEnvironment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Experiment : Microsoft.ML.Runtime.IHostEnvironment -&gt; Microsoft.ML.Runtime.Experiment" Usage="new Microsoft.ML.Runtime.Experiment env" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.IDataViewArrayConverter.Output Add (Microsoft.ML.Data.IDataViewArrayConverter input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Data.IDataViewArrayConverter/Output Add(class Microsoft.ML.Data.IDataViewArrayConverter input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Data.IDataViewArrayConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As IDataViewArrayConverter) As IDataViewArrayConverter.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Data.IDataViewArrayConverter -&gt; Microsoft.ML.Data.IDataViewArrayConverter.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.IDataViewArrayConverter+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Data.IDataViewArrayConverter" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.PredictorModelArrayConverter.Output Add (Microsoft.ML.Data.PredictorModelArrayConverter input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Data.PredictorModelArrayConverter/Output Add(class Microsoft.ML.Data.PredictorModelArrayConverter input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Data.PredictorModelArrayConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As PredictorModelArrayConverter) As PredictorModelArrayConverter.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Data.PredictorModelArrayConverter -&gt; Microsoft.ML.Data.PredictorModelArrayConverter.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.PredictorModelArrayConverter+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Data.PredictorModelArrayConverter" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.TextLoader.Output Add (Microsoft.ML.Data.TextLoader input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Data.TextLoader/Output Add(class Microsoft.ML.Data.TextLoader input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Data.TextLoader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As TextLoader) As TextLoader.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Data.TextLoader -&gt; Microsoft.ML.Data.TextLoader.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.TextLoader+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Data.TextLoader" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.AnomalyDetectionEvaluator.Output Add (Microsoft.ML.Models.AnomalyDetectionEvaluator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Models.AnomalyDetectionEvaluator/Output Add(class Microsoft.ML.Models.AnomalyDetectionEvaluator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.AnomalyDetectionEvaluator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As AnomalyDetectionEvaluator) As AnomalyDetectionEvaluator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.AnomalyDetectionEvaluator -&gt; Microsoft.ML.Models.AnomalyDetectionEvaluator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.AnomalyDetectionEvaluator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.AnomalyDetectionEvaluator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.BinaryClassificationEvaluator.Output Add (Microsoft.ML.Models.BinaryClassificationEvaluator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Models.BinaryClassificationEvaluator/Output Add(class Microsoft.ML.Models.BinaryClassificationEvaluator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.BinaryClassificationEvaluator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As BinaryClassificationEvaluator) As BinaryClassificationEvaluator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.BinaryClassificationEvaluator -&gt; Microsoft.ML.Models.BinaryClassificationEvaluator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.BinaryClassificationEvaluator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.BinaryClassificationEvaluator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.BinaryCrossValidator.Output Add (Microsoft.ML.Models.BinaryCrossValidator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Models.BinaryCrossValidator/Output Add(class Microsoft.ML.Models.BinaryCrossValidator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.BinaryCrossValidator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As BinaryCrossValidator) As BinaryCrossValidator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.BinaryCrossValidator -&gt; Microsoft.ML.Models.BinaryCrossValidator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.BinaryCrossValidator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.BinaryCrossValidator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.ClusterEvaluator.Output Add (Microsoft.ML.Models.ClusterEvaluator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Models.ClusterEvaluator/Output Add(class Microsoft.ML.Models.ClusterEvaluator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.ClusterEvaluator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As ClusterEvaluator) As ClusterEvaluator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.ClusterEvaluator -&gt; Microsoft.ML.Models.ClusterEvaluator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.ClusterEvaluator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.ClusterEvaluator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.CrossValidator.Output Add (Microsoft.ML.Models.CrossValidator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Models.CrossValidator/Output Add(class Microsoft.ML.Models.CrossValidator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.CrossValidator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As CrossValidator) As CrossValidator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.CrossValidator -&gt; Microsoft.ML.Models.CrossValidator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.CrossValidator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.CrossValidator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.CrossValidatorDatasetSplitter.Output Add (Microsoft.ML.Models.CrossValidatorDatasetSplitter input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Models.CrossValidatorDatasetSplitter/Output Add(class Microsoft.ML.Models.CrossValidatorDatasetSplitter input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.CrossValidatorDatasetSplitter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As CrossValidatorDatasetSplitter) As CrossValidatorDatasetSplitter.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.CrossValidatorDatasetSplitter -&gt; Microsoft.ML.Models.CrossValidatorDatasetSplitter.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.CrossValidatorDatasetSplitter+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.CrossValidatorDatasetSplitter" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.DatasetTransformer.Output Add (Microsoft.ML.Models.DatasetTransformer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Models.DatasetTransformer/Output Add(class Microsoft.ML.Models.DatasetTransformer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.DatasetTransformer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As DatasetTransformer) As DatasetTransformer.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.DatasetTransformer -&gt; Microsoft.ML.Models.DatasetTransformer.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.DatasetTransformer+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.DatasetTransformer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.FixedPlattCalibrator.Output Add (Microsoft.ML.Models.FixedPlattCalibrator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Models.FixedPlattCalibrator/Output Add(class Microsoft.ML.Models.FixedPlattCalibrator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.FixedPlattCalibrator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As FixedPlattCalibrator) As FixedPlattCalibrator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.FixedPlattCalibrator -&gt; Microsoft.ML.Models.FixedPlattCalibrator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.FixedPlattCalibrator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.FixedPlattCalibrator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.MultiClassClassificationEvaluator.Output Add (Microsoft.ML.Models.MultiClassClassificationEvaluator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Models.MultiClassClassificationEvaluator/Output Add(class Microsoft.ML.Models.MultiClassClassificationEvaluator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.MultiClassClassificationEvaluator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As MultiClassClassificationEvaluator) As MultiClassClassificationEvaluator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.MultiClassClassificationEvaluator -&gt; Microsoft.ML.Models.MultiClassClassificationEvaluator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.MultiClassClassificationEvaluator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.MultiClassClassificationEvaluator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.MultiOutputRegressorEvaluator.Output Add (Microsoft.ML.Models.MultiOutputRegressorEvaluator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Models.MultiOutputRegressorEvaluator/Output Add(class Microsoft.ML.Models.MultiOutputRegressorEvaluator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.MultiOutputRegressorEvaluator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As MultiOutputRegressorEvaluator) As MultiOutputRegressorEvaluator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.MultiOutputRegressorEvaluator -&gt; Microsoft.ML.Models.MultiOutputRegressorEvaluator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.MultiOutputRegressorEvaluator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.MultiOutputRegressorEvaluator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.NaiveCalibrator.Output Add (Microsoft.ML.Models.NaiveCalibrator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Models.NaiveCalibrator/Output Add(class Microsoft.ML.Models.NaiveCalibrator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.NaiveCalibrator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As NaiveCalibrator) As NaiveCalibrator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.NaiveCalibrator -&gt; Microsoft.ML.Models.NaiveCalibrator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.NaiveCalibrator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.NaiveCalibrator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.OneVersusAll.Output Add (Microsoft.ML.Models.OneVersusAll input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Models.OneVersusAll/Output Add(class Microsoft.ML.Models.OneVersusAll input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.OneVersusAll)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As OneVersusAll) As OneVersusAll.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.OneVersusAll -&gt; Microsoft.ML.Models.OneVersusAll.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.OneVersusAll+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.OneVersusAll" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.OvaModelCombiner.Output Add (Microsoft.ML.Models.OvaModelCombiner input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Models.OvaModelCombiner/Output Add(class Microsoft.ML.Models.OvaModelCombiner input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.OvaModelCombiner)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As OvaModelCombiner) As OvaModelCombiner.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.OvaModelCombiner -&gt; Microsoft.ML.Models.OvaModelCombiner.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.OvaModelCombiner+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.OvaModelCombiner" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.PAVCalibrator.Output Add (Microsoft.ML.Models.PAVCalibrator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Models.PAVCalibrator/Output Add(class Microsoft.ML.Models.PAVCalibrator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.PAVCalibrator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As PAVCalibrator) As PAVCalibrator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.PAVCalibrator -&gt; Microsoft.ML.Models.PAVCalibrator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.PAVCalibrator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.PAVCalibrator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.PlattCalibrator.Output Add (Microsoft.ML.Models.PlattCalibrator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Models.PlattCalibrator/Output Add(class Microsoft.ML.Models.PlattCalibrator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.PlattCalibrator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As PlattCalibrator) As PlattCalibrator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.PlattCalibrator -&gt; Microsoft.ML.Models.PlattCalibrator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.PlattCalibrator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.PlattCalibrator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.QuantileRegressorEvaluator.Output Add (Microsoft.ML.Models.QuantileRegressorEvaluator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Models.QuantileRegressorEvaluator/Output Add(class Microsoft.ML.Models.QuantileRegressorEvaluator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.QuantileRegressorEvaluator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As QuantileRegressorEvaluator) As QuantileRegressorEvaluator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.QuantileRegressorEvaluator -&gt; Microsoft.ML.Models.QuantileRegressorEvaluator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.QuantileRegressorEvaluator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.QuantileRegressorEvaluator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.RankerEvaluator.Output Add (Microsoft.ML.Models.RankerEvaluator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Models.RankerEvaluator/Output Add(class Microsoft.ML.Models.RankerEvaluator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.RankerEvaluator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As RankerEvaluator) As RankerEvaluator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.RankerEvaluator -&gt; Microsoft.ML.Models.RankerEvaluator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.RankerEvaluator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.RankerEvaluator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.RegressorEvaluator.Output Add (Microsoft.ML.Models.RegressorEvaluator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Models.RegressorEvaluator/Output Add(class Microsoft.ML.Models.RegressorEvaluator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.RegressorEvaluator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As RegressorEvaluator) As RegressorEvaluator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.RegressorEvaluator -&gt; Microsoft.ML.Models.RegressorEvaluator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.RegressorEvaluator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.RegressorEvaluator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.Summarizer.Output Add (Microsoft.ML.Models.Summarizer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Models.Summarizer/Output Add(class Microsoft.ML.Models.Summarizer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.Summarizer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As Summarizer) As Summarizer.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.Summarizer -&gt; Microsoft.ML.Models.Summarizer.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.Summarizer+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.Summarizer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.TrainTestBinaryEvaluator.Output Add (Microsoft.ML.Models.TrainTestBinaryEvaluator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Models.TrainTestBinaryEvaluator/Output Add(class Microsoft.ML.Models.TrainTestBinaryEvaluator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.TrainTestBinaryEvaluator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As TrainTestBinaryEvaluator) As TrainTestBinaryEvaluator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.TrainTestBinaryEvaluator -&gt; Microsoft.ML.Models.TrainTestBinaryEvaluator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.TrainTestBinaryEvaluator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.TrainTestBinaryEvaluator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Models.TrainTestEvaluator.Output Add (Microsoft.ML.Models.TrainTestEvaluator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Models.TrainTestEvaluator/Output Add(class Microsoft.ML.Models.TrainTestEvaluator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.TrainTestEvaluator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As TrainTestEvaluator) As TrainTestEvaluator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.TrainTestEvaluator -&gt; Microsoft.ML.Models.TrainTestEvaluator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Models.TrainTestEvaluator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.TrainTestEvaluator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPointTrainerOutput Add (Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITrainerInput input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.EntryPointTrainerOutput Add(class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITrainerInput input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITrainerInput)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As CommonInputs.ITrainerInput) As EntryPointTrainerOutput" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITrainerInput -&gt; Microsoft.ML.Runtime.EntryPointTrainerOutput" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPointTrainerOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Runtime.EntryPoints.CommonInputs+ITrainerInput" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPointTransformOutput Add (Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITransformInput input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.EntryPointTransformOutput Add(class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITransformInput input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITransformInput)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As CommonInputs.ITransformInput) As EntryPointTransformOutput" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITransformInput -&gt; Microsoft.ML.Runtime.EntryPointTransformOutput" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPointTransformOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Runtime.EntryPoints.CommonInputs+ITransformInput" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.AveragedPerceptronBinaryClassifier.Output Add (Microsoft.ML.Trainers.AveragedPerceptronBinaryClassifier input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Trainers.AveragedPerceptronBinaryClassifier/Output Add(class Microsoft.ML.Trainers.AveragedPerceptronBinaryClassifier input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.AveragedPerceptronBinaryClassifier)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As AveragedPerceptronBinaryClassifier) As AveragedPerceptronBinaryClassifier.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.AveragedPerceptronBinaryClassifier -&gt; Microsoft.ML.Trainers.AveragedPerceptronBinaryClassifier.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.AveragedPerceptronBinaryClassifier+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.AveragedPerceptronBinaryClassifier" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.BinaryLogisticRegressor.Output Add (Microsoft.ML.Trainers.BinaryLogisticRegressor input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Trainers.BinaryLogisticRegressor/Output Add(class Microsoft.ML.Trainers.BinaryLogisticRegressor input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.BinaryLogisticRegressor)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As BinaryLogisticRegressor) As BinaryLogisticRegressor.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.BinaryLogisticRegressor -&gt; Microsoft.ML.Trainers.BinaryLogisticRegressor.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.BinaryLogisticRegressor+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.BinaryLogisticRegressor" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.FastForestBinaryClassifier.Output Add (Microsoft.ML.Trainers.FastForestBinaryClassifier input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Trainers.FastForestBinaryClassifier/Output Add(class Microsoft.ML.Trainers.FastForestBinaryClassifier input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.FastForestBinaryClassifier)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As FastForestBinaryClassifier) As FastForestBinaryClassifier.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.FastForestBinaryClassifier -&gt; Microsoft.ML.Trainers.FastForestBinaryClassifier.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.FastForestBinaryClassifier+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.FastForestBinaryClassifier" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.FastForestRegressor.Output Add (Microsoft.ML.Trainers.FastForestRegressor input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Trainers.FastForestRegressor/Output Add(class Microsoft.ML.Trainers.FastForestRegressor input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.FastForestRegressor)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As FastForestRegressor) As FastForestRegressor.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.FastForestRegressor -&gt; Microsoft.ML.Trainers.FastForestRegressor.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.FastForestRegressor+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.FastForestRegressor" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.FastTreeBinaryClassifier.Output Add (Microsoft.ML.Trainers.FastTreeBinaryClassifier input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Trainers.FastTreeBinaryClassifier/Output Add(class Microsoft.ML.Trainers.FastTreeBinaryClassifier input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.FastTreeBinaryClassifier)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As FastTreeBinaryClassifier) As FastTreeBinaryClassifier.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.FastTreeBinaryClassifier -&gt; Microsoft.ML.Trainers.FastTreeBinaryClassifier.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.FastTreeBinaryClassifier+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.FastTreeBinaryClassifier" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.FastTreeRanker.Output Add (Microsoft.ML.Trainers.FastTreeRanker input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Trainers.FastTreeRanker/Output Add(class Microsoft.ML.Trainers.FastTreeRanker input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.FastTreeRanker)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As FastTreeRanker) As FastTreeRanker.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.FastTreeRanker -&gt; Microsoft.ML.Trainers.FastTreeRanker.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.FastTreeRanker+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.FastTreeRanker" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.FastTreeRegressor.Output Add (Microsoft.ML.Trainers.FastTreeRegressor input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Trainers.FastTreeRegressor/Output Add(class Microsoft.ML.Trainers.FastTreeRegressor input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.FastTreeRegressor)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As FastTreeRegressor) As FastTreeRegressor.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.FastTreeRegressor -&gt; Microsoft.ML.Trainers.FastTreeRegressor.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.FastTreeRegressor+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.FastTreeRegressor" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.FastTreeTweedieRegressor.Output Add (Microsoft.ML.Trainers.FastTreeTweedieRegressor input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Trainers.FastTreeTweedieRegressor/Output Add(class Microsoft.ML.Trainers.FastTreeTweedieRegressor input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.FastTreeTweedieRegressor)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As FastTreeTweedieRegressor) As FastTreeTweedieRegressor.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.FastTreeTweedieRegressor -&gt; Microsoft.ML.Trainers.FastTreeTweedieRegressor.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.FastTreeTweedieRegressor+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.FastTreeTweedieRegressor" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.Output Add (Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier/Output Add(class Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As GeneralizedAdditiveModelBinaryClassifier) As GeneralizedAdditiveModelBinaryClassifier.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier -&gt; Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.GeneralizedAdditiveModelRegressor.Output Add (Microsoft.ML.Trainers.GeneralizedAdditiveModelRegressor input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Trainers.GeneralizedAdditiveModelRegressor/Output Add(class Microsoft.ML.Trainers.GeneralizedAdditiveModelRegressor input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.GeneralizedAdditiveModelRegressor)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As GeneralizedAdditiveModelRegressor) As GeneralizedAdditiveModelRegressor.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.GeneralizedAdditiveModelRegressor -&gt; Microsoft.ML.Trainers.GeneralizedAdditiveModelRegressor.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.GeneralizedAdditiveModelRegressor+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.GeneralizedAdditiveModelRegressor" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.LinearSvmBinaryClassifier.Output Add (Microsoft.ML.Trainers.LinearSvmBinaryClassifier input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Trainers.LinearSvmBinaryClassifier/Output Add(class Microsoft.ML.Trainers.LinearSvmBinaryClassifier input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.LinearSvmBinaryClassifier)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As LinearSvmBinaryClassifier) As LinearSvmBinaryClassifier.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.LinearSvmBinaryClassifier -&gt; Microsoft.ML.Trainers.LinearSvmBinaryClassifier.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.LinearSvmBinaryClassifier+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.LinearSvmBinaryClassifier" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.LogisticRegressor.Output Add (Microsoft.ML.Trainers.LogisticRegressor input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Trainers.LogisticRegressor/Output Add(class Microsoft.ML.Trainers.LogisticRegressor input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.LogisticRegressor)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As LogisticRegressor) As LogisticRegressor.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.LogisticRegressor -&gt; Microsoft.ML.Trainers.LogisticRegressor.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.LogisticRegressor+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.LogisticRegressor" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.NaiveBayesClassifier.Output Add (Microsoft.ML.Trainers.NaiveBayesClassifier input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Trainers.NaiveBayesClassifier/Output Add(class Microsoft.ML.Trainers.NaiveBayesClassifier input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.NaiveBayesClassifier)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As NaiveBayesClassifier) As NaiveBayesClassifier.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.NaiveBayesClassifier -&gt; Microsoft.ML.Trainers.NaiveBayesClassifier.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.NaiveBayesClassifier+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.NaiveBayesClassifier" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.OnlineGradientDescentRegressor.Output Add (Microsoft.ML.Trainers.OnlineGradientDescentRegressor input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Trainers.OnlineGradientDescentRegressor/Output Add(class Microsoft.ML.Trainers.OnlineGradientDescentRegressor input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.OnlineGradientDescentRegressor)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As OnlineGradientDescentRegressor) As OnlineGradientDescentRegressor.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.OnlineGradientDescentRegressor -&gt; Microsoft.ML.Trainers.OnlineGradientDescentRegressor.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.OnlineGradientDescentRegressor+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.OnlineGradientDescentRegressor" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.OrdinaryLeastSquaresRegressor.Output Add (Microsoft.ML.Trainers.OrdinaryLeastSquaresRegressor input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Trainers.OrdinaryLeastSquaresRegressor/Output Add(class Microsoft.ML.Trainers.OrdinaryLeastSquaresRegressor input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.OrdinaryLeastSquaresRegressor)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As OrdinaryLeastSquaresRegressor) As OrdinaryLeastSquaresRegressor.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.OrdinaryLeastSquaresRegressor -&gt; Microsoft.ML.Trainers.OrdinaryLeastSquaresRegressor.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.OrdinaryLeastSquaresRegressor+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.OrdinaryLeastSquaresRegressor" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.PoissonRegressor.Output Add (Microsoft.ML.Trainers.PoissonRegressor input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Trainers.PoissonRegressor/Output Add(class Microsoft.ML.Trainers.PoissonRegressor input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.PoissonRegressor)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As PoissonRegressor) As PoissonRegressor.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.PoissonRegressor -&gt; Microsoft.ML.Trainers.PoissonRegressor.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.PoissonRegressor+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.PoissonRegressor" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.StochasticDualCoordinateAscentBinaryClassifier.Output Add (Microsoft.ML.Trainers.StochasticDualCoordinateAscentBinaryClassifier input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Trainers.StochasticDualCoordinateAscentBinaryClassifier/Output Add(class Microsoft.ML.Trainers.StochasticDualCoordinateAscentBinaryClassifier input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.StochasticDualCoordinateAscentBinaryClassifier)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As StochasticDualCoordinateAscentBinaryClassifier) As StochasticDualCoordinateAscentBinaryClassifier.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.StochasticDualCoordinateAscentBinaryClassifier -&gt; Microsoft.ML.Trainers.StochasticDualCoordinateAscentBinaryClassifier.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.StochasticDualCoordinateAscentBinaryClassifier+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.StochasticDualCoordinateAscentBinaryClassifier" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.StochasticDualCoordinateAscentClassifier.Output Add (Microsoft.ML.Trainers.StochasticDualCoordinateAscentClassifier input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Trainers.StochasticDualCoordinateAscentClassifier/Output Add(class Microsoft.ML.Trainers.StochasticDualCoordinateAscentClassifier input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.StochasticDualCoordinateAscentClassifier)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As StochasticDualCoordinateAscentClassifier) As StochasticDualCoordinateAscentClassifier.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.StochasticDualCoordinateAscentClassifier -&gt; Microsoft.ML.Trainers.StochasticDualCoordinateAscentClassifier.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.StochasticDualCoordinateAscentClassifier+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.StochasticDualCoordinateAscentClassifier" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.StochasticDualCoordinateAscentRegressor.Output Add (Microsoft.ML.Trainers.StochasticDualCoordinateAscentRegressor input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Trainers.StochasticDualCoordinateAscentRegressor/Output Add(class Microsoft.ML.Trainers.StochasticDualCoordinateAscentRegressor input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.StochasticDualCoordinateAscentRegressor)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As StochasticDualCoordinateAscentRegressor) As StochasticDualCoordinateAscentRegressor.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.StochasticDualCoordinateAscentRegressor -&gt; Microsoft.ML.Trainers.StochasticDualCoordinateAscentRegressor.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.StochasticDualCoordinateAscentRegressor+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.StochasticDualCoordinateAscentRegressor" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.StochasticGradientDescentBinaryClassifier.Output Add (Microsoft.ML.Trainers.StochasticGradientDescentBinaryClassifier input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Trainers.StochasticGradientDescentBinaryClassifier/Output Add(class Microsoft.ML.Trainers.StochasticGradientDescentBinaryClassifier input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.StochasticGradientDescentBinaryClassifier)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As StochasticGradientDescentBinaryClassifier) As StochasticGradientDescentBinaryClassifier.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.StochasticGradientDescentBinaryClassifier -&gt; Microsoft.ML.Trainers.StochasticGradientDescentBinaryClassifier.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.StochasticGradientDescentBinaryClassifier+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.StochasticGradientDescentBinaryClassifier" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.ApproximateBootstrapSampler.Output Add (Microsoft.ML.Transforms.ApproximateBootstrapSampler input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.ApproximateBootstrapSampler/Output Add(class Microsoft.ML.Transforms.ApproximateBootstrapSampler input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.ApproximateBootstrapSampler)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As ApproximateBootstrapSampler) As ApproximateBootstrapSampler.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.ApproximateBootstrapSampler -&gt; Microsoft.ML.Transforms.ApproximateBootstrapSampler.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.ApproximateBootstrapSampler+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.ApproximateBootstrapSampler" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.BinaryPredictionScoreColumnsRenamer.Output Add (Microsoft.ML.Transforms.BinaryPredictionScoreColumnsRenamer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.BinaryPredictionScoreColumnsRenamer/Output Add(class Microsoft.ML.Transforms.BinaryPredictionScoreColumnsRenamer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.BinaryPredictionScoreColumnsRenamer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As BinaryPredictionScoreColumnsRenamer) As BinaryPredictionScoreColumnsRenamer.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.BinaryPredictionScoreColumnsRenamer -&gt; Microsoft.ML.Transforms.BinaryPredictionScoreColumnsRenamer.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.BinaryPredictionScoreColumnsRenamer+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.BinaryPredictionScoreColumnsRenamer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.BinNormalizer.Output Add (Microsoft.ML.Transforms.BinNormalizer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.BinNormalizer/Output Add(class Microsoft.ML.Transforms.BinNormalizer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.BinNormalizer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As BinNormalizer) As BinNormalizer.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.BinNormalizer -&gt; Microsoft.ML.Transforms.BinNormalizer.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.BinNormalizer+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.BinNormalizer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.CategoricalHashOneHotVectorizer.Output Add (Microsoft.ML.Transforms.CategoricalHashOneHotVectorizer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.CategoricalHashOneHotVectorizer/Output Add(class Microsoft.ML.Transforms.CategoricalHashOneHotVectorizer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.CategoricalHashOneHotVectorizer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As CategoricalHashOneHotVectorizer) As CategoricalHashOneHotVectorizer.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.CategoricalHashOneHotVectorizer -&gt; Microsoft.ML.Transforms.CategoricalHashOneHotVectorizer.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.CategoricalHashOneHotVectorizer+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.CategoricalHashOneHotVectorizer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.CategoricalOneHotVectorizer.Output Add (Microsoft.ML.Transforms.CategoricalOneHotVectorizer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.CategoricalOneHotVectorizer/Output Add(class Microsoft.ML.Transforms.CategoricalOneHotVectorizer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.CategoricalOneHotVectorizer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As CategoricalOneHotVectorizer) As CategoricalOneHotVectorizer.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.CategoricalOneHotVectorizer -&gt; Microsoft.ML.Transforms.CategoricalOneHotVectorizer.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.CategoricalOneHotVectorizer+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.CategoricalOneHotVectorizer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.CharacterTokenizer.Output Add (Microsoft.ML.Transforms.CharacterTokenizer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.CharacterTokenizer/Output Add(class Microsoft.ML.Transforms.CharacterTokenizer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.CharacterTokenizer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As CharacterTokenizer) As CharacterTokenizer.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.CharacterTokenizer -&gt; Microsoft.ML.Transforms.CharacterTokenizer.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.CharacterTokenizer+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.CharacterTokenizer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.ColumnConcatenator.Output Add (Microsoft.ML.Transforms.ColumnConcatenator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.ColumnConcatenator/Output Add(class Microsoft.ML.Transforms.ColumnConcatenator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.ColumnConcatenator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As ColumnConcatenator) As ColumnConcatenator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.ColumnConcatenator -&gt; Microsoft.ML.Transforms.ColumnConcatenator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.ColumnConcatenator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.ColumnConcatenator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.ColumnCopier.Output Add (Microsoft.ML.Transforms.ColumnCopier input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.ColumnCopier/Output Add(class Microsoft.ML.Transforms.ColumnCopier input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.ColumnCopier)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As ColumnCopier) As ColumnCopier.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.ColumnCopier -&gt; Microsoft.ML.Transforms.ColumnCopier.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.ColumnCopier+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.ColumnCopier" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.ColumnDropper.Output Add (Microsoft.ML.Transforms.ColumnDropper input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.ColumnDropper/Output Add(class Microsoft.ML.Transforms.ColumnDropper input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.ColumnDropper)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As ColumnDropper) As ColumnDropper.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.ColumnDropper -&gt; Microsoft.ML.Transforms.ColumnDropper.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.ColumnDropper+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.ColumnDropper" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.ColumnSelector.Output Add (Microsoft.ML.Transforms.ColumnSelector input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.ColumnSelector/Output Add(class Microsoft.ML.Transforms.ColumnSelector input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.ColumnSelector)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As ColumnSelector) As ColumnSelector.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.ColumnSelector -&gt; Microsoft.ML.Transforms.ColumnSelector.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.ColumnSelector+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.ColumnSelector" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.ColumnTypeConverter.Output Add (Microsoft.ML.Transforms.ColumnTypeConverter input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.ColumnTypeConverter/Output Add(class Microsoft.ML.Transforms.ColumnTypeConverter input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.ColumnTypeConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As ColumnTypeConverter) As ColumnTypeConverter.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.ColumnTypeConverter -&gt; Microsoft.ML.Transforms.ColumnTypeConverter.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.ColumnTypeConverter+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.ColumnTypeConverter" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.CombinerByContiguousGroupId.Output Add (Microsoft.ML.Transforms.CombinerByContiguousGroupId input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.CombinerByContiguousGroupId/Output Add(class Microsoft.ML.Transforms.CombinerByContiguousGroupId input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.CombinerByContiguousGroupId)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As CombinerByContiguousGroupId) As CombinerByContiguousGroupId.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.CombinerByContiguousGroupId -&gt; Microsoft.ML.Transforms.CombinerByContiguousGroupId.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.CombinerByContiguousGroupId+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.CombinerByContiguousGroupId" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.ConditionalNormalizer.Output Add (Microsoft.ML.Transforms.ConditionalNormalizer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.ConditionalNormalizer/Output Add(class Microsoft.ML.Transforms.ConditionalNormalizer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.ConditionalNormalizer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As ConditionalNormalizer) As ConditionalNormalizer.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.ConditionalNormalizer -&gt; Microsoft.ML.Transforms.ConditionalNormalizer.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.ConditionalNormalizer+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.ConditionalNormalizer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.DataCache.Output Add (Microsoft.ML.Transforms.DataCache input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.DataCache/Output Add(class Microsoft.ML.Transforms.DataCache input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.DataCache)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As DataCache) As DataCache.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.DataCache -&gt; Microsoft.ML.Transforms.DataCache.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.DataCache+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.DataCache" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.DatasetScorer.Output Add (Microsoft.ML.Transforms.DatasetScorer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.DatasetScorer/Output Add(class Microsoft.ML.Transforms.DatasetScorer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.DatasetScorer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As DatasetScorer) As DatasetScorer.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.DatasetScorer -&gt; Microsoft.ML.Transforms.DatasetScorer.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.DatasetScorer+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.DatasetScorer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.Dictionarizer.Output Add (Microsoft.ML.Transforms.Dictionarizer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.Dictionarizer/Output Add(class Microsoft.ML.Transforms.Dictionarizer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.Dictionarizer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As Dictionarizer) As Dictionarizer.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.Dictionarizer -&gt; Microsoft.ML.Transforms.Dictionarizer.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Dictionarizer+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.Dictionarizer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.FeatureCombiner.Output Add (Microsoft.ML.Transforms.FeatureCombiner input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.FeatureCombiner/Output Add(class Microsoft.ML.Transforms.FeatureCombiner input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.FeatureCombiner)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As FeatureCombiner) As FeatureCombiner.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.FeatureCombiner -&gt; Microsoft.ML.Transforms.FeatureCombiner.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.FeatureCombiner+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.FeatureCombiner" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.FeatureSelectorByCount.Output Add (Microsoft.ML.Transforms.FeatureSelectorByCount input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.FeatureSelectorByCount/Output Add(class Microsoft.ML.Transforms.FeatureSelectorByCount input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.FeatureSelectorByCount)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As FeatureSelectorByCount) As FeatureSelectorByCount.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.FeatureSelectorByCount -&gt; Microsoft.ML.Transforms.FeatureSelectorByCount.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.FeatureSelectorByCount+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.FeatureSelectorByCount" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.FeatureSelectorByMutualInformation.Output Add (Microsoft.ML.Transforms.FeatureSelectorByMutualInformation input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.FeatureSelectorByMutualInformation/Output Add(class Microsoft.ML.Transforms.FeatureSelectorByMutualInformation input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.FeatureSelectorByMutualInformation)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As FeatureSelectorByMutualInformation) As FeatureSelectorByMutualInformation.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.FeatureSelectorByMutualInformation -&gt; Microsoft.ML.Transforms.FeatureSelectorByMutualInformation.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.FeatureSelectorByMutualInformation+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.FeatureSelectorByMutualInformation" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.GlobalContrastNormalizer.Output Add (Microsoft.ML.Transforms.GlobalContrastNormalizer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.GlobalContrastNormalizer/Output Add(class Microsoft.ML.Transforms.GlobalContrastNormalizer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.GlobalContrastNormalizer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As GlobalContrastNormalizer) As GlobalContrastNormalizer.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.GlobalContrastNormalizer -&gt; Microsoft.ML.Transforms.GlobalContrastNormalizer.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.GlobalContrastNormalizer+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.GlobalContrastNormalizer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.HashConverter.Output Add (Microsoft.ML.Transforms.HashConverter input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.HashConverter/Output Add(class Microsoft.ML.Transforms.HashConverter input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.HashConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As HashConverter) As HashConverter.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.HashConverter -&gt; Microsoft.ML.Transforms.HashConverter.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.HashConverter+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.HashConverter" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.KeyToTextConverter.Output Add (Microsoft.ML.Transforms.KeyToTextConverter input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.KeyToTextConverter/Output Add(class Microsoft.ML.Transforms.KeyToTextConverter input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.KeyToTextConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As KeyToTextConverter) As KeyToTextConverter.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.KeyToTextConverter -&gt; Microsoft.ML.Transforms.KeyToTextConverter.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.KeyToTextConverter+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.KeyToTextConverter" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.LabelColumnKeyBooleanConverter.Output Add (Microsoft.ML.Transforms.LabelColumnKeyBooleanConverter input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.LabelColumnKeyBooleanConverter/Output Add(class Microsoft.ML.Transforms.LabelColumnKeyBooleanConverter input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.LabelColumnKeyBooleanConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As LabelColumnKeyBooleanConverter) As LabelColumnKeyBooleanConverter.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.LabelColumnKeyBooleanConverter -&gt; Microsoft.ML.Transforms.LabelColumnKeyBooleanConverter.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.LabelColumnKeyBooleanConverter+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.LabelColumnKeyBooleanConverter" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.LabelIndicator.Output Add (Microsoft.ML.Transforms.LabelIndicator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.LabelIndicator/Output Add(class Microsoft.ML.Transforms.LabelIndicator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.LabelIndicator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As LabelIndicator) As LabelIndicator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.LabelIndicator -&gt; Microsoft.ML.Transforms.LabelIndicator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.LabelIndicator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.LabelIndicator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.LabelToFloatConverter.Output Add (Microsoft.ML.Transforms.LabelToFloatConverter input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.LabelToFloatConverter/Output Add(class Microsoft.ML.Transforms.LabelToFloatConverter input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.LabelToFloatConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As LabelToFloatConverter) As LabelToFloatConverter.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.LabelToFloatConverter -&gt; Microsoft.ML.Transforms.LabelToFloatConverter.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.LabelToFloatConverter+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.LabelToFloatConverter" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.LogMeanVarianceNormalizer.Output Add (Microsoft.ML.Transforms.LogMeanVarianceNormalizer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.LogMeanVarianceNormalizer/Output Add(class Microsoft.ML.Transforms.LogMeanVarianceNormalizer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.LogMeanVarianceNormalizer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As LogMeanVarianceNormalizer) As LogMeanVarianceNormalizer.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.LogMeanVarianceNormalizer -&gt; Microsoft.ML.Transforms.LogMeanVarianceNormalizer.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.LogMeanVarianceNormalizer+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.LogMeanVarianceNormalizer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.LpNormalizer.Output Add (Microsoft.ML.Transforms.LpNormalizer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.LpNormalizer/Output Add(class Microsoft.ML.Transforms.LpNormalizer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.LpNormalizer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As LpNormalizer) As LpNormalizer.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.LpNormalizer -&gt; Microsoft.ML.Transforms.LpNormalizer.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.LpNormalizer+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.LpNormalizer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.ManyHeterogeneousModelCombiner.Output Add (Microsoft.ML.Transforms.ManyHeterogeneousModelCombiner input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.ManyHeterogeneousModelCombiner/Output Add(class Microsoft.ML.Transforms.ManyHeterogeneousModelCombiner input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.ManyHeterogeneousModelCombiner)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As ManyHeterogeneousModelCombiner) As ManyHeterogeneousModelCombiner.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.ManyHeterogeneousModelCombiner -&gt; Microsoft.ML.Transforms.ManyHeterogeneousModelCombiner.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.ManyHeterogeneousModelCombiner+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.ManyHeterogeneousModelCombiner" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.MeanVarianceNormalizer.Output Add (Microsoft.ML.Transforms.MeanVarianceNormalizer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.MeanVarianceNormalizer/Output Add(class Microsoft.ML.Transforms.MeanVarianceNormalizer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.MeanVarianceNormalizer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As MeanVarianceNormalizer) As MeanVarianceNormalizer.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.MeanVarianceNormalizer -&gt; Microsoft.ML.Transforms.MeanVarianceNormalizer.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.MeanVarianceNormalizer+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.MeanVarianceNormalizer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.MinMaxNormalizer.Output Add (Microsoft.ML.Transforms.MinMaxNormalizer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.MinMaxNormalizer/Output Add(class Microsoft.ML.Transforms.MinMaxNormalizer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.MinMaxNormalizer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As MinMaxNormalizer) As MinMaxNormalizer.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.MinMaxNormalizer -&gt; Microsoft.ML.Transforms.MinMaxNormalizer.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.MinMaxNormalizer+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.MinMaxNormalizer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.MissingValueHandler.Output Add (Microsoft.ML.Transforms.MissingValueHandler input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.MissingValueHandler/Output Add(class Microsoft.ML.Transforms.MissingValueHandler input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.MissingValueHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As MissingValueHandler) As MissingValueHandler.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.MissingValueHandler -&gt; Microsoft.ML.Transforms.MissingValueHandler.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.MissingValueHandler+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.MissingValueHandler" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.MissingValueIndicator.Output Add (Microsoft.ML.Transforms.MissingValueIndicator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.MissingValueIndicator/Output Add(class Microsoft.ML.Transforms.MissingValueIndicator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.MissingValueIndicator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As MissingValueIndicator) As MissingValueIndicator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.MissingValueIndicator -&gt; Microsoft.ML.Transforms.MissingValueIndicator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.MissingValueIndicator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.MissingValueIndicator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.MissingValuesDropper.Output Add (Microsoft.ML.Transforms.MissingValuesDropper input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.MissingValuesDropper/Output Add(class Microsoft.ML.Transforms.MissingValuesDropper input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.MissingValuesDropper)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As MissingValuesDropper) As MissingValuesDropper.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.MissingValuesDropper -&gt; Microsoft.ML.Transforms.MissingValuesDropper.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.MissingValuesDropper+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.MissingValuesDropper" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.MissingValuesRowDropper.Output Add (Microsoft.ML.Transforms.MissingValuesRowDropper input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.MissingValuesRowDropper/Output Add(class Microsoft.ML.Transforms.MissingValuesRowDropper input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.MissingValuesRowDropper)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As MissingValuesRowDropper) As MissingValuesRowDropper.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.MissingValuesRowDropper -&gt; Microsoft.ML.Transforms.MissingValuesRowDropper.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.MissingValuesRowDropper+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.MissingValuesRowDropper" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.MissingValueSubstitutor.Output Add (Microsoft.ML.Transforms.MissingValueSubstitutor input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.MissingValueSubstitutor/Output Add(class Microsoft.ML.Transforms.MissingValueSubstitutor input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.MissingValueSubstitutor)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As MissingValueSubstitutor) As MissingValueSubstitutor.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.MissingValueSubstitutor -&gt; Microsoft.ML.Transforms.MissingValueSubstitutor.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.MissingValueSubstitutor+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.MissingValueSubstitutor" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.ModelCombiner.Output Add (Microsoft.ML.Transforms.ModelCombiner input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.ModelCombiner/Output Add(class Microsoft.ML.Transforms.ModelCombiner input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.ModelCombiner)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As ModelCombiner) As ModelCombiner.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.ModelCombiner -&gt; Microsoft.ML.Transforms.ModelCombiner.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.ModelCombiner+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.ModelCombiner" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.NGramTranslator.Output Add (Microsoft.ML.Transforms.NGramTranslator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.NGramTranslator/Output Add(class Microsoft.ML.Transforms.NGramTranslator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.NGramTranslator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As NGramTranslator) As NGramTranslator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.NGramTranslator -&gt; Microsoft.ML.Transforms.NGramTranslator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.NGramTranslator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.NGramTranslator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.NoOperation.Output Add (Microsoft.ML.Transforms.NoOperation input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.NoOperation/Output Add(class Microsoft.ML.Transforms.NoOperation input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.NoOperation)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As NoOperation) As NoOperation.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.NoOperation -&gt; Microsoft.ML.Transforms.NoOperation.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.NoOperation+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.NoOperation" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.OptionalColumnCreator.Output Add (Microsoft.ML.Transforms.OptionalColumnCreator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.OptionalColumnCreator/Output Add(class Microsoft.ML.Transforms.OptionalColumnCreator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.OptionalColumnCreator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As OptionalColumnCreator) As OptionalColumnCreator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.OptionalColumnCreator -&gt; Microsoft.ML.Transforms.OptionalColumnCreator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.OptionalColumnCreator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.OptionalColumnCreator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.PredictedLabelColumnOriginalValueConverter.Output Add (Microsoft.ML.Transforms.PredictedLabelColumnOriginalValueConverter input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.PredictedLabelColumnOriginalValueConverter/Output Add(class Microsoft.ML.Transforms.PredictedLabelColumnOriginalValueConverter input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.PredictedLabelColumnOriginalValueConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As PredictedLabelColumnOriginalValueConverter) As PredictedLabelColumnOriginalValueConverter.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.PredictedLabelColumnOriginalValueConverter -&gt; Microsoft.ML.Transforms.PredictedLabelColumnOriginalValueConverter.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.PredictedLabelColumnOriginalValueConverter+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.PredictedLabelColumnOriginalValueConverter" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.RandomNumberGenerator.Output Add (Microsoft.ML.Transforms.RandomNumberGenerator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.RandomNumberGenerator/Output Add(class Microsoft.ML.Transforms.RandomNumberGenerator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.RandomNumberGenerator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As RandomNumberGenerator) As RandomNumberGenerator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.RandomNumberGenerator -&gt; Microsoft.ML.Transforms.RandomNumberGenerator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.RandomNumberGenerator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.RandomNumberGenerator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.RowRangeFilter.Output Add (Microsoft.ML.Transforms.RowRangeFilter input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.RowRangeFilter/Output Add(class Microsoft.ML.Transforms.RowRangeFilter input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.RowRangeFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As RowRangeFilter) As RowRangeFilter.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.RowRangeFilter -&gt; Microsoft.ML.Transforms.RowRangeFilter.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.RowRangeFilter+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.RowRangeFilter" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.RowSkipAndTakeFilter.Output Add (Microsoft.ML.Transforms.RowSkipAndTakeFilter input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.RowSkipAndTakeFilter/Output Add(class Microsoft.ML.Transforms.RowSkipAndTakeFilter input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.RowSkipAndTakeFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As RowSkipAndTakeFilter) As RowSkipAndTakeFilter.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.RowSkipAndTakeFilter -&gt; Microsoft.ML.Transforms.RowSkipAndTakeFilter.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.RowSkipAndTakeFilter+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.RowSkipAndTakeFilter" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.RowSkipFilter.Output Add (Microsoft.ML.Transforms.RowSkipFilter input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.RowSkipFilter/Output Add(class Microsoft.ML.Transforms.RowSkipFilter input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.RowSkipFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As RowSkipFilter) As RowSkipFilter.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.RowSkipFilter -&gt; Microsoft.ML.Transforms.RowSkipFilter.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.RowSkipFilter+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.RowSkipFilter" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.RowTakeFilter.Output Add (Microsoft.ML.Transforms.RowTakeFilter input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.RowTakeFilter/Output Add(class Microsoft.ML.Transforms.RowTakeFilter input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.RowTakeFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As RowTakeFilter) As RowTakeFilter.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.RowTakeFilter -&gt; Microsoft.ML.Transforms.RowTakeFilter.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.RowTakeFilter+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.RowTakeFilter" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.ScoreColumnSelector.Output Add (Microsoft.ML.Transforms.ScoreColumnSelector input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.ScoreColumnSelector/Output Add(class Microsoft.ML.Transforms.ScoreColumnSelector input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.ScoreColumnSelector)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As ScoreColumnSelector) As ScoreColumnSelector.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.ScoreColumnSelector -&gt; Microsoft.ML.Transforms.ScoreColumnSelector.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.ScoreColumnSelector+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.ScoreColumnSelector" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.Scorer.Output Add (Microsoft.ML.Transforms.Scorer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.Scorer/Output Add(class Microsoft.ML.Transforms.Scorer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.Scorer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As Scorer) As Scorer.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.Scorer -&gt; Microsoft.ML.Transforms.Scorer.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Scorer+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.Scorer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.Segregator.Output Add (Microsoft.ML.Transforms.Segregator input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.Segregator/Output Add(class Microsoft.ML.Transforms.Segregator input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.Segregator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As Segregator) As Segregator.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.Segregator -&gt; Microsoft.ML.Transforms.Segregator.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Segregator+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.Segregator" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.SentimentAnalyzer.Output Add (Microsoft.ML.Transforms.SentimentAnalyzer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.SentimentAnalyzer/Output Add(class Microsoft.ML.Transforms.SentimentAnalyzer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.SentimentAnalyzer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As SentimentAnalyzer) As SentimentAnalyzer.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.SentimentAnalyzer -&gt; Microsoft.ML.Transforms.SentimentAnalyzer.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.SentimentAnalyzer+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.SentimentAnalyzer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.SupervisedBinNormalizer.Output Add (Microsoft.ML.Transforms.SupervisedBinNormalizer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.SupervisedBinNormalizer/Output Add(class Microsoft.ML.Transforms.SupervisedBinNormalizer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.SupervisedBinNormalizer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As SupervisedBinNormalizer) As SupervisedBinNormalizer.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.SupervisedBinNormalizer -&gt; Microsoft.ML.Transforms.SupervisedBinNormalizer.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.SupervisedBinNormalizer+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.SupervisedBinNormalizer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.TextFeaturizer.Output Add (Microsoft.ML.Transforms.TextFeaturizer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.TextFeaturizer/Output Add(class Microsoft.ML.Transforms.TextFeaturizer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.TextFeaturizer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As TextFeaturizer) As TextFeaturizer.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.TextFeaturizer -&gt; Microsoft.ML.Transforms.TextFeaturizer.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.TextFeaturizer+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.TextFeaturizer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.TextToKeyConverter.Output Add (Microsoft.ML.Transforms.TextToKeyConverter input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.TextToKeyConverter/Output Add(class Microsoft.ML.Transforms.TextToKeyConverter input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.TextToKeyConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As TextToKeyConverter) As TextToKeyConverter.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.TextToKeyConverter -&gt; Microsoft.ML.Transforms.TextToKeyConverter.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.TextToKeyConverter+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.TextToKeyConverter" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.TrainTestDatasetSplitter.Output Add (Microsoft.ML.Transforms.TrainTestDatasetSplitter input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.TrainTestDatasetSplitter/Output Add(class Microsoft.ML.Transforms.TrainTestDatasetSplitter input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.TrainTestDatasetSplitter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As TrainTestDatasetSplitter) As TrainTestDatasetSplitter.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.TrainTestDatasetSplitter -&gt; Microsoft.ML.Transforms.TrainTestDatasetSplitter.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.TrainTestDatasetSplitter+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.TrainTestDatasetSplitter" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.TreeLeafFeaturizer.Output Add (Microsoft.ML.Transforms.TreeLeafFeaturizer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.TreeLeafFeaturizer/Output Add(class Microsoft.ML.Transforms.TreeLeafFeaturizer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.TreeLeafFeaturizer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As TreeLeafFeaturizer) As TreeLeafFeaturizer.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.TreeLeafFeaturizer -&gt; Microsoft.ML.Transforms.TreeLeafFeaturizer.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.TreeLeafFeaturizer+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.TreeLeafFeaturizer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.TwoHeterogeneousModelCombiner.Output Add (Microsoft.ML.Transforms.TwoHeterogeneousModelCombiner input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.TwoHeterogeneousModelCombiner/Output Add(class Microsoft.ML.Transforms.TwoHeterogeneousModelCombiner input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.TwoHeterogeneousModelCombiner)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As TwoHeterogeneousModelCombiner) As TwoHeterogeneousModelCombiner.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.TwoHeterogeneousModelCombiner -&gt; Microsoft.ML.Transforms.TwoHeterogeneousModelCombiner.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.TwoHeterogeneousModelCombiner+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.TwoHeterogeneousModelCombiner" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.WordTokenizer.Output Add (Microsoft.ML.Transforms.WordTokenizer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.WordTokenizer/Output Add(class Microsoft.ML.Transforms.WordTokenizer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.WordTokenizer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As WordTokenizer) As WordTokenizer.Output" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.WordTokenizer -&gt; Microsoft.ML.Transforms.WordTokenizer.Output" Usage="experiment.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.WordTokenizer+Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.WordTokenizer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Data.IDataViewArrayConverter input, Microsoft.ML.Data.IDataViewArrayConverter.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Data.IDataViewArrayConverter input, class Microsoft.ML.Data.IDataViewArrayConverter/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Data.IDataViewArrayConverter,Microsoft.ML.Data.IDataViewArrayConverter.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Data.IDataViewArrayConverter * Microsoft.ML.Data.IDataViewArrayConverter.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Data.IDataViewArrayConverter" />
        <Parameter Name="output" Type="Microsoft.ML.Data.IDataViewArrayConverter+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Data.PredictorModelArrayConverter input, Microsoft.ML.Data.PredictorModelArrayConverter.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Data.PredictorModelArrayConverter input, class Microsoft.ML.Data.PredictorModelArrayConverter/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Data.PredictorModelArrayConverter,Microsoft.ML.Data.PredictorModelArrayConverter.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Data.PredictorModelArrayConverter * Microsoft.ML.Data.PredictorModelArrayConverter.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Data.PredictorModelArrayConverter" />
        <Parameter Name="output" Type="Microsoft.ML.Data.PredictorModelArrayConverter+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Data.TextLoader input, Microsoft.ML.Data.TextLoader.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Data.TextLoader input, class Microsoft.ML.Data.TextLoader/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Data.TextLoader,Microsoft.ML.Data.TextLoader.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Data.TextLoader * Microsoft.ML.Data.TextLoader.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Data.TextLoader" />
        <Parameter Name="output" Type="Microsoft.ML.Data.TextLoader+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Models.AnomalyDetectionEvaluator input, Microsoft.ML.Models.AnomalyDetectionEvaluator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Models.AnomalyDetectionEvaluator input, class Microsoft.ML.Models.AnomalyDetectionEvaluator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.AnomalyDetectionEvaluator,Microsoft.ML.Models.AnomalyDetectionEvaluator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.AnomalyDetectionEvaluator * Microsoft.ML.Models.AnomalyDetectionEvaluator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.AnomalyDetectionEvaluator" />
        <Parameter Name="output" Type="Microsoft.ML.Models.AnomalyDetectionEvaluator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Models.BinaryClassificationEvaluator input, Microsoft.ML.Models.BinaryClassificationEvaluator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Models.BinaryClassificationEvaluator input, class Microsoft.ML.Models.BinaryClassificationEvaluator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.BinaryClassificationEvaluator,Microsoft.ML.Models.BinaryClassificationEvaluator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.BinaryClassificationEvaluator * Microsoft.ML.Models.BinaryClassificationEvaluator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.BinaryClassificationEvaluator" />
        <Parameter Name="output" Type="Microsoft.ML.Models.BinaryClassificationEvaluator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Models.BinaryCrossValidator input, Microsoft.ML.Models.BinaryCrossValidator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Models.BinaryCrossValidator input, class Microsoft.ML.Models.BinaryCrossValidator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.BinaryCrossValidator,Microsoft.ML.Models.BinaryCrossValidator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.BinaryCrossValidator * Microsoft.ML.Models.BinaryCrossValidator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.BinaryCrossValidator" />
        <Parameter Name="output" Type="Microsoft.ML.Models.BinaryCrossValidator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Models.ClusterEvaluator input, Microsoft.ML.Models.ClusterEvaluator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Models.ClusterEvaluator input, class Microsoft.ML.Models.ClusterEvaluator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.ClusterEvaluator,Microsoft.ML.Models.ClusterEvaluator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.ClusterEvaluator * Microsoft.ML.Models.ClusterEvaluator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.ClusterEvaluator" />
        <Parameter Name="output" Type="Microsoft.ML.Models.ClusterEvaluator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Models.CrossValidator input, Microsoft.ML.Models.CrossValidator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Models.CrossValidator input, class Microsoft.ML.Models.CrossValidator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.CrossValidator,Microsoft.ML.Models.CrossValidator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.CrossValidator * Microsoft.ML.Models.CrossValidator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.CrossValidator" />
        <Parameter Name="output" Type="Microsoft.ML.Models.CrossValidator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Models.CrossValidatorDatasetSplitter input, Microsoft.ML.Models.CrossValidatorDatasetSplitter.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Models.CrossValidatorDatasetSplitter input, class Microsoft.ML.Models.CrossValidatorDatasetSplitter/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.CrossValidatorDatasetSplitter,Microsoft.ML.Models.CrossValidatorDatasetSplitter.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.CrossValidatorDatasetSplitter * Microsoft.ML.Models.CrossValidatorDatasetSplitter.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.CrossValidatorDatasetSplitter" />
        <Parameter Name="output" Type="Microsoft.ML.Models.CrossValidatorDatasetSplitter+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Models.DatasetTransformer input, Microsoft.ML.Models.DatasetTransformer.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Models.DatasetTransformer input, class Microsoft.ML.Models.DatasetTransformer/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.DatasetTransformer,Microsoft.ML.Models.DatasetTransformer.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.DatasetTransformer * Microsoft.ML.Models.DatasetTransformer.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.DatasetTransformer" />
        <Parameter Name="output" Type="Microsoft.ML.Models.DatasetTransformer+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Models.FixedPlattCalibrator input, Microsoft.ML.Models.FixedPlattCalibrator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Models.FixedPlattCalibrator input, class Microsoft.ML.Models.FixedPlattCalibrator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.FixedPlattCalibrator,Microsoft.ML.Models.FixedPlattCalibrator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.FixedPlattCalibrator * Microsoft.ML.Models.FixedPlattCalibrator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.FixedPlattCalibrator" />
        <Parameter Name="output" Type="Microsoft.ML.Models.FixedPlattCalibrator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Models.MultiClassClassificationEvaluator input, Microsoft.ML.Models.MultiClassClassificationEvaluator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Models.MultiClassClassificationEvaluator input, class Microsoft.ML.Models.MultiClassClassificationEvaluator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.MultiClassClassificationEvaluator,Microsoft.ML.Models.MultiClassClassificationEvaluator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.MultiClassClassificationEvaluator * Microsoft.ML.Models.MultiClassClassificationEvaluator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.MultiClassClassificationEvaluator" />
        <Parameter Name="output" Type="Microsoft.ML.Models.MultiClassClassificationEvaluator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Models.MultiOutputRegressorEvaluator input, Microsoft.ML.Models.MultiOutputRegressorEvaluator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Models.MultiOutputRegressorEvaluator input, class Microsoft.ML.Models.MultiOutputRegressorEvaluator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.MultiOutputRegressorEvaluator,Microsoft.ML.Models.MultiOutputRegressorEvaluator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.MultiOutputRegressorEvaluator * Microsoft.ML.Models.MultiOutputRegressorEvaluator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.MultiOutputRegressorEvaluator" />
        <Parameter Name="output" Type="Microsoft.ML.Models.MultiOutputRegressorEvaluator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Models.NaiveCalibrator input, Microsoft.ML.Models.NaiveCalibrator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Models.NaiveCalibrator input, class Microsoft.ML.Models.NaiveCalibrator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.NaiveCalibrator,Microsoft.ML.Models.NaiveCalibrator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.NaiveCalibrator * Microsoft.ML.Models.NaiveCalibrator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.NaiveCalibrator" />
        <Parameter Name="output" Type="Microsoft.ML.Models.NaiveCalibrator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Models.OneVersusAll input, Microsoft.ML.Models.OneVersusAll.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Models.OneVersusAll input, class Microsoft.ML.Models.OneVersusAll/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.OneVersusAll,Microsoft.ML.Models.OneVersusAll.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.OneVersusAll * Microsoft.ML.Models.OneVersusAll.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.OneVersusAll" />
        <Parameter Name="output" Type="Microsoft.ML.Models.OneVersusAll+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Models.OvaModelCombiner input, Microsoft.ML.Models.OvaModelCombiner.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Models.OvaModelCombiner input, class Microsoft.ML.Models.OvaModelCombiner/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.OvaModelCombiner,Microsoft.ML.Models.OvaModelCombiner.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.OvaModelCombiner * Microsoft.ML.Models.OvaModelCombiner.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.OvaModelCombiner" />
        <Parameter Name="output" Type="Microsoft.ML.Models.OvaModelCombiner+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Models.PAVCalibrator input, Microsoft.ML.Models.PAVCalibrator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Models.PAVCalibrator input, class Microsoft.ML.Models.PAVCalibrator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.PAVCalibrator,Microsoft.ML.Models.PAVCalibrator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.PAVCalibrator * Microsoft.ML.Models.PAVCalibrator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.PAVCalibrator" />
        <Parameter Name="output" Type="Microsoft.ML.Models.PAVCalibrator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Models.PlattCalibrator input, Microsoft.ML.Models.PlattCalibrator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Models.PlattCalibrator input, class Microsoft.ML.Models.PlattCalibrator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.PlattCalibrator,Microsoft.ML.Models.PlattCalibrator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.PlattCalibrator * Microsoft.ML.Models.PlattCalibrator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.PlattCalibrator" />
        <Parameter Name="output" Type="Microsoft.ML.Models.PlattCalibrator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Models.QuantileRegressorEvaluator input, Microsoft.ML.Models.QuantileRegressorEvaluator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Models.QuantileRegressorEvaluator input, class Microsoft.ML.Models.QuantileRegressorEvaluator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.QuantileRegressorEvaluator,Microsoft.ML.Models.QuantileRegressorEvaluator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.QuantileRegressorEvaluator * Microsoft.ML.Models.QuantileRegressorEvaluator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.QuantileRegressorEvaluator" />
        <Parameter Name="output" Type="Microsoft.ML.Models.QuantileRegressorEvaluator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Models.RankerEvaluator input, Microsoft.ML.Models.RankerEvaluator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Models.RankerEvaluator input, class Microsoft.ML.Models.RankerEvaluator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.RankerEvaluator,Microsoft.ML.Models.RankerEvaluator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.RankerEvaluator * Microsoft.ML.Models.RankerEvaluator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.RankerEvaluator" />
        <Parameter Name="output" Type="Microsoft.ML.Models.RankerEvaluator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Models.RegressorEvaluator input, Microsoft.ML.Models.RegressorEvaluator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Models.RegressorEvaluator input, class Microsoft.ML.Models.RegressorEvaluator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.RegressorEvaluator,Microsoft.ML.Models.RegressorEvaluator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.RegressorEvaluator * Microsoft.ML.Models.RegressorEvaluator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.RegressorEvaluator" />
        <Parameter Name="output" Type="Microsoft.ML.Models.RegressorEvaluator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Models.Summarizer input, Microsoft.ML.Models.Summarizer.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Models.Summarizer input, class Microsoft.ML.Models.Summarizer/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.Summarizer,Microsoft.ML.Models.Summarizer.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.Summarizer * Microsoft.ML.Models.Summarizer.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.Summarizer" />
        <Parameter Name="output" Type="Microsoft.ML.Models.Summarizer+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Models.TrainTestBinaryEvaluator input, Microsoft.ML.Models.TrainTestBinaryEvaluator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Models.TrainTestBinaryEvaluator input, class Microsoft.ML.Models.TrainTestBinaryEvaluator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.TrainTestBinaryEvaluator,Microsoft.ML.Models.TrainTestBinaryEvaluator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.TrainTestBinaryEvaluator * Microsoft.ML.Models.TrainTestBinaryEvaluator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.TrainTestBinaryEvaluator" />
        <Parameter Name="output" Type="Microsoft.ML.Models.TrainTestBinaryEvaluator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Models.TrainTestEvaluator input, Microsoft.ML.Models.TrainTestEvaluator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Models.TrainTestEvaluator input, class Microsoft.ML.Models.TrainTestEvaluator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Models.TrainTestEvaluator,Microsoft.ML.Models.TrainTestEvaluator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Models.TrainTestEvaluator * Microsoft.ML.Models.TrainTestEvaluator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Models.TrainTestEvaluator" />
        <Parameter Name="output" Type="Microsoft.ML.Models.TrainTestEvaluator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.CommonOutputs.IEvaluatorOutput Add (Microsoft.ML.Runtime.EntryPoints.CommonInputs.IEvaluatorInput input, Microsoft.ML.Runtime.EntryPoints.CommonOutputs.IEvaluatorOutput output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.EntryPoints.CommonOutputs/IEvaluatorOutput Add(class Microsoft.ML.Runtime.EntryPoints.CommonInputs/IEvaluatorInput input, class Microsoft.ML.Runtime.EntryPoints.CommonOutputs/IEvaluatorOutput output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Runtime.EntryPoints.CommonInputs.IEvaluatorInput,Microsoft.ML.Runtime.EntryPoints.CommonOutputs.IEvaluatorOutput)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As CommonInputs.IEvaluatorInput, output As CommonOutputs.IEvaluatorOutput) As CommonOutputs.IEvaluatorOutput" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Runtime.EntryPoints.CommonInputs.IEvaluatorInput * Microsoft.ML.Runtime.EntryPoints.CommonOutputs.IEvaluatorOutput -&gt; Microsoft.ML.Runtime.EntryPoints.CommonOutputs.IEvaluatorOutput" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.CommonOutputs+IEvaluatorOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Runtime.EntryPoints.CommonInputs+IEvaluatorInput" />
        <Parameter Name="output" Type="Microsoft.ML.Runtime.EntryPoints.CommonOutputs+IEvaluatorOutput" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Trainers.AveragedPerceptronBinaryClassifier input, Microsoft.ML.Trainers.AveragedPerceptronBinaryClassifier.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Trainers.AveragedPerceptronBinaryClassifier input, class Microsoft.ML.Trainers.AveragedPerceptronBinaryClassifier/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.AveragedPerceptronBinaryClassifier,Microsoft.ML.Trainers.AveragedPerceptronBinaryClassifier.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.AveragedPerceptronBinaryClassifier * Microsoft.ML.Trainers.AveragedPerceptronBinaryClassifier.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.AveragedPerceptronBinaryClassifier" />
        <Parameter Name="output" Type="Microsoft.ML.Trainers.AveragedPerceptronBinaryClassifier+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Trainers.BinaryLogisticRegressor input, Microsoft.ML.Trainers.BinaryLogisticRegressor.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Trainers.BinaryLogisticRegressor input, class Microsoft.ML.Trainers.BinaryLogisticRegressor/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.BinaryLogisticRegressor,Microsoft.ML.Trainers.BinaryLogisticRegressor.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.BinaryLogisticRegressor * Microsoft.ML.Trainers.BinaryLogisticRegressor.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.BinaryLogisticRegressor" />
        <Parameter Name="output" Type="Microsoft.ML.Trainers.BinaryLogisticRegressor+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Trainers.FastForestBinaryClassifier input, Microsoft.ML.Trainers.FastForestBinaryClassifier.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Trainers.FastForestBinaryClassifier input, class Microsoft.ML.Trainers.FastForestBinaryClassifier/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.FastForestBinaryClassifier,Microsoft.ML.Trainers.FastForestBinaryClassifier.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.FastForestBinaryClassifier * Microsoft.ML.Trainers.FastForestBinaryClassifier.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.FastForestBinaryClassifier" />
        <Parameter Name="output" Type="Microsoft.ML.Trainers.FastForestBinaryClassifier+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Trainers.FastForestRegressor input, Microsoft.ML.Trainers.FastForestRegressor.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Trainers.FastForestRegressor input, class Microsoft.ML.Trainers.FastForestRegressor/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.FastForestRegressor,Microsoft.ML.Trainers.FastForestRegressor.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.FastForestRegressor * Microsoft.ML.Trainers.FastForestRegressor.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.FastForestRegressor" />
        <Parameter Name="output" Type="Microsoft.ML.Trainers.FastForestRegressor+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Trainers.FastTreeBinaryClassifier input, Microsoft.ML.Trainers.FastTreeBinaryClassifier.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Trainers.FastTreeBinaryClassifier input, class Microsoft.ML.Trainers.FastTreeBinaryClassifier/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.FastTreeBinaryClassifier,Microsoft.ML.Trainers.FastTreeBinaryClassifier.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.FastTreeBinaryClassifier * Microsoft.ML.Trainers.FastTreeBinaryClassifier.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.FastTreeBinaryClassifier" />
        <Parameter Name="output" Type="Microsoft.ML.Trainers.FastTreeBinaryClassifier+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Trainers.FastTreeRanker input, Microsoft.ML.Trainers.FastTreeRanker.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Trainers.FastTreeRanker input, class Microsoft.ML.Trainers.FastTreeRanker/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.FastTreeRanker,Microsoft.ML.Trainers.FastTreeRanker.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.FastTreeRanker * Microsoft.ML.Trainers.FastTreeRanker.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.FastTreeRanker" />
        <Parameter Name="output" Type="Microsoft.ML.Trainers.FastTreeRanker+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Trainers.FastTreeRegressor input, Microsoft.ML.Trainers.FastTreeRegressor.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Trainers.FastTreeRegressor input, class Microsoft.ML.Trainers.FastTreeRegressor/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.FastTreeRegressor,Microsoft.ML.Trainers.FastTreeRegressor.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.FastTreeRegressor * Microsoft.ML.Trainers.FastTreeRegressor.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.FastTreeRegressor" />
        <Parameter Name="output" Type="Microsoft.ML.Trainers.FastTreeRegressor+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Trainers.FastTreeTweedieRegressor input, Microsoft.ML.Trainers.FastTreeTweedieRegressor.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Trainers.FastTreeTweedieRegressor input, class Microsoft.ML.Trainers.FastTreeTweedieRegressor/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.FastTreeTweedieRegressor,Microsoft.ML.Trainers.FastTreeTweedieRegressor.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.FastTreeTweedieRegressor * Microsoft.ML.Trainers.FastTreeTweedieRegressor.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.FastTreeTweedieRegressor" />
        <Parameter Name="output" Type="Microsoft.ML.Trainers.FastTreeTweedieRegressor+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier input, Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier input, class Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier,Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier * Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier" />
        <Parameter Name="output" Type="Microsoft.ML.Trainers.GeneralizedAdditiveModelBinaryClassifier+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Trainers.GeneralizedAdditiveModelRegressor input, Microsoft.ML.Trainers.GeneralizedAdditiveModelRegressor.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Trainers.GeneralizedAdditiveModelRegressor input, class Microsoft.ML.Trainers.GeneralizedAdditiveModelRegressor/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.GeneralizedAdditiveModelRegressor,Microsoft.ML.Trainers.GeneralizedAdditiveModelRegressor.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.GeneralizedAdditiveModelRegressor * Microsoft.ML.Trainers.GeneralizedAdditiveModelRegressor.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.GeneralizedAdditiveModelRegressor" />
        <Parameter Name="output" Type="Microsoft.ML.Trainers.GeneralizedAdditiveModelRegressor+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Trainers.LinearSvmBinaryClassifier input, Microsoft.ML.Trainers.LinearSvmBinaryClassifier.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Trainers.LinearSvmBinaryClassifier input, class Microsoft.ML.Trainers.LinearSvmBinaryClassifier/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.LinearSvmBinaryClassifier,Microsoft.ML.Trainers.LinearSvmBinaryClassifier.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.LinearSvmBinaryClassifier * Microsoft.ML.Trainers.LinearSvmBinaryClassifier.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.LinearSvmBinaryClassifier" />
        <Parameter Name="output" Type="Microsoft.ML.Trainers.LinearSvmBinaryClassifier+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Trainers.LogisticRegressor input, Microsoft.ML.Trainers.LogisticRegressor.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Trainers.LogisticRegressor input, class Microsoft.ML.Trainers.LogisticRegressor/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.LogisticRegressor,Microsoft.ML.Trainers.LogisticRegressor.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.LogisticRegressor * Microsoft.ML.Trainers.LogisticRegressor.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.LogisticRegressor" />
        <Parameter Name="output" Type="Microsoft.ML.Trainers.LogisticRegressor+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Trainers.NaiveBayesClassifier input, Microsoft.ML.Trainers.NaiveBayesClassifier.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Trainers.NaiveBayesClassifier input, class Microsoft.ML.Trainers.NaiveBayesClassifier/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.NaiveBayesClassifier,Microsoft.ML.Trainers.NaiveBayesClassifier.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.NaiveBayesClassifier * Microsoft.ML.Trainers.NaiveBayesClassifier.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.NaiveBayesClassifier" />
        <Parameter Name="output" Type="Microsoft.ML.Trainers.NaiveBayesClassifier+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Trainers.OnlineGradientDescentRegressor input, Microsoft.ML.Trainers.OnlineGradientDescentRegressor.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Trainers.OnlineGradientDescentRegressor input, class Microsoft.ML.Trainers.OnlineGradientDescentRegressor/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.OnlineGradientDescentRegressor,Microsoft.ML.Trainers.OnlineGradientDescentRegressor.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.OnlineGradientDescentRegressor * Microsoft.ML.Trainers.OnlineGradientDescentRegressor.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.OnlineGradientDescentRegressor" />
        <Parameter Name="output" Type="Microsoft.ML.Trainers.OnlineGradientDescentRegressor+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Trainers.OrdinaryLeastSquaresRegressor input, Microsoft.ML.Trainers.OrdinaryLeastSquaresRegressor.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Trainers.OrdinaryLeastSquaresRegressor input, class Microsoft.ML.Trainers.OrdinaryLeastSquaresRegressor/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.OrdinaryLeastSquaresRegressor,Microsoft.ML.Trainers.OrdinaryLeastSquaresRegressor.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.OrdinaryLeastSquaresRegressor * Microsoft.ML.Trainers.OrdinaryLeastSquaresRegressor.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.OrdinaryLeastSquaresRegressor" />
        <Parameter Name="output" Type="Microsoft.ML.Trainers.OrdinaryLeastSquaresRegressor+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Trainers.PoissonRegressor input, Microsoft.ML.Trainers.PoissonRegressor.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Trainers.PoissonRegressor input, class Microsoft.ML.Trainers.PoissonRegressor/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.PoissonRegressor,Microsoft.ML.Trainers.PoissonRegressor.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.PoissonRegressor * Microsoft.ML.Trainers.PoissonRegressor.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.PoissonRegressor" />
        <Parameter Name="output" Type="Microsoft.ML.Trainers.PoissonRegressor+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Trainers.StochasticDualCoordinateAscentBinaryClassifier input, Microsoft.ML.Trainers.StochasticDualCoordinateAscentBinaryClassifier.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Trainers.StochasticDualCoordinateAscentBinaryClassifier input, class Microsoft.ML.Trainers.StochasticDualCoordinateAscentBinaryClassifier/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.StochasticDualCoordinateAscentBinaryClassifier,Microsoft.ML.Trainers.StochasticDualCoordinateAscentBinaryClassifier.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.StochasticDualCoordinateAscentBinaryClassifier * Microsoft.ML.Trainers.StochasticDualCoordinateAscentBinaryClassifier.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.StochasticDualCoordinateAscentBinaryClassifier" />
        <Parameter Name="output" Type="Microsoft.ML.Trainers.StochasticDualCoordinateAscentBinaryClassifier+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Trainers.StochasticDualCoordinateAscentClassifier input, Microsoft.ML.Trainers.StochasticDualCoordinateAscentClassifier.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Trainers.StochasticDualCoordinateAscentClassifier input, class Microsoft.ML.Trainers.StochasticDualCoordinateAscentClassifier/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.StochasticDualCoordinateAscentClassifier,Microsoft.ML.Trainers.StochasticDualCoordinateAscentClassifier.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.StochasticDualCoordinateAscentClassifier * Microsoft.ML.Trainers.StochasticDualCoordinateAscentClassifier.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.StochasticDualCoordinateAscentClassifier" />
        <Parameter Name="output" Type="Microsoft.ML.Trainers.StochasticDualCoordinateAscentClassifier+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Trainers.StochasticDualCoordinateAscentRegressor input, Microsoft.ML.Trainers.StochasticDualCoordinateAscentRegressor.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Trainers.StochasticDualCoordinateAscentRegressor input, class Microsoft.ML.Trainers.StochasticDualCoordinateAscentRegressor/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.StochasticDualCoordinateAscentRegressor,Microsoft.ML.Trainers.StochasticDualCoordinateAscentRegressor.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.StochasticDualCoordinateAscentRegressor * Microsoft.ML.Trainers.StochasticDualCoordinateAscentRegressor.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.StochasticDualCoordinateAscentRegressor" />
        <Parameter Name="output" Type="Microsoft.ML.Trainers.StochasticDualCoordinateAscentRegressor+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Trainers.StochasticGradientDescentBinaryClassifier input, Microsoft.ML.Trainers.StochasticGradientDescentBinaryClassifier.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Trainers.StochasticGradientDescentBinaryClassifier input, class Microsoft.ML.Trainers.StochasticGradientDescentBinaryClassifier/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Trainers.StochasticGradientDescentBinaryClassifier,Microsoft.ML.Trainers.StochasticGradientDescentBinaryClassifier.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Trainers.StochasticGradientDescentBinaryClassifier * Microsoft.ML.Trainers.StochasticGradientDescentBinaryClassifier.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Trainers.StochasticGradientDescentBinaryClassifier" />
        <Parameter Name="output" Type="Microsoft.ML.Trainers.StochasticGradientDescentBinaryClassifier+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.ApproximateBootstrapSampler input, Microsoft.ML.Transforms.ApproximateBootstrapSampler.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.ApproximateBootstrapSampler input, class Microsoft.ML.Transforms.ApproximateBootstrapSampler/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.ApproximateBootstrapSampler,Microsoft.ML.Transforms.ApproximateBootstrapSampler.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.ApproximateBootstrapSampler * Microsoft.ML.Transforms.ApproximateBootstrapSampler.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.ApproximateBootstrapSampler" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.ApproximateBootstrapSampler+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.BinaryPredictionScoreColumnsRenamer input, Microsoft.ML.Transforms.BinaryPredictionScoreColumnsRenamer.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.BinaryPredictionScoreColumnsRenamer input, class Microsoft.ML.Transforms.BinaryPredictionScoreColumnsRenamer/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.BinaryPredictionScoreColumnsRenamer,Microsoft.ML.Transforms.BinaryPredictionScoreColumnsRenamer.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.BinaryPredictionScoreColumnsRenamer * Microsoft.ML.Transforms.BinaryPredictionScoreColumnsRenamer.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.BinaryPredictionScoreColumnsRenamer" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.BinaryPredictionScoreColumnsRenamer+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.BinNormalizer input, Microsoft.ML.Transforms.BinNormalizer.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.BinNormalizer input, class Microsoft.ML.Transforms.BinNormalizer/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.BinNormalizer,Microsoft.ML.Transforms.BinNormalizer.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.BinNormalizer * Microsoft.ML.Transforms.BinNormalizer.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.BinNormalizer" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.BinNormalizer+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.CategoricalHashOneHotVectorizer input, Microsoft.ML.Transforms.CategoricalHashOneHotVectorizer.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.CategoricalHashOneHotVectorizer input, class Microsoft.ML.Transforms.CategoricalHashOneHotVectorizer/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.CategoricalHashOneHotVectorizer,Microsoft.ML.Transforms.CategoricalHashOneHotVectorizer.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.CategoricalHashOneHotVectorizer * Microsoft.ML.Transforms.CategoricalHashOneHotVectorizer.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.CategoricalHashOneHotVectorizer" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.CategoricalHashOneHotVectorizer+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.CategoricalOneHotVectorizer input, Microsoft.ML.Transforms.CategoricalOneHotVectorizer.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.CategoricalOneHotVectorizer input, class Microsoft.ML.Transforms.CategoricalOneHotVectorizer/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.CategoricalOneHotVectorizer,Microsoft.ML.Transforms.CategoricalOneHotVectorizer.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.CategoricalOneHotVectorizer * Microsoft.ML.Transforms.CategoricalOneHotVectorizer.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.CategoricalOneHotVectorizer" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.CategoricalOneHotVectorizer+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.CharacterTokenizer input, Microsoft.ML.Transforms.CharacterTokenizer.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.CharacterTokenizer input, class Microsoft.ML.Transforms.CharacterTokenizer/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.CharacterTokenizer,Microsoft.ML.Transforms.CharacterTokenizer.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.CharacterTokenizer * Microsoft.ML.Transforms.CharacterTokenizer.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.CharacterTokenizer" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.CharacterTokenizer+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.ColumnConcatenator input, Microsoft.ML.Transforms.ColumnConcatenator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.ColumnConcatenator input, class Microsoft.ML.Transforms.ColumnConcatenator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.ColumnConcatenator,Microsoft.ML.Transforms.ColumnConcatenator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.ColumnConcatenator * Microsoft.ML.Transforms.ColumnConcatenator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.ColumnConcatenator" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.ColumnConcatenator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.ColumnCopier input, Microsoft.ML.Transforms.ColumnCopier.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.ColumnCopier input, class Microsoft.ML.Transforms.ColumnCopier/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.ColumnCopier,Microsoft.ML.Transforms.ColumnCopier.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.ColumnCopier * Microsoft.ML.Transforms.ColumnCopier.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.ColumnCopier" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.ColumnCopier+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.ColumnDropper input, Microsoft.ML.Transforms.ColumnDropper.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.ColumnDropper input, class Microsoft.ML.Transforms.ColumnDropper/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.ColumnDropper,Microsoft.ML.Transforms.ColumnDropper.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.ColumnDropper * Microsoft.ML.Transforms.ColumnDropper.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.ColumnDropper" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.ColumnDropper+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.ColumnSelector input, Microsoft.ML.Transforms.ColumnSelector.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.ColumnSelector input, class Microsoft.ML.Transforms.ColumnSelector/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.ColumnSelector,Microsoft.ML.Transforms.ColumnSelector.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.ColumnSelector * Microsoft.ML.Transforms.ColumnSelector.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.ColumnSelector" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.ColumnSelector+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.ColumnTypeConverter input, Microsoft.ML.Transforms.ColumnTypeConverter.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.ColumnTypeConverter input, class Microsoft.ML.Transforms.ColumnTypeConverter/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.ColumnTypeConverter,Microsoft.ML.Transforms.ColumnTypeConverter.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.ColumnTypeConverter * Microsoft.ML.Transforms.ColumnTypeConverter.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.ColumnTypeConverter" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.ColumnTypeConverter+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.CombinerByContiguousGroupId input, Microsoft.ML.Transforms.CombinerByContiguousGroupId.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.CombinerByContiguousGroupId input, class Microsoft.ML.Transforms.CombinerByContiguousGroupId/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.CombinerByContiguousGroupId,Microsoft.ML.Transforms.CombinerByContiguousGroupId.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.CombinerByContiguousGroupId * Microsoft.ML.Transforms.CombinerByContiguousGroupId.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.CombinerByContiguousGroupId" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.CombinerByContiguousGroupId+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.ConditionalNormalizer input, Microsoft.ML.Transforms.ConditionalNormalizer.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.ConditionalNormalizer input, class Microsoft.ML.Transforms.ConditionalNormalizer/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.ConditionalNormalizer,Microsoft.ML.Transforms.ConditionalNormalizer.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.ConditionalNormalizer * Microsoft.ML.Transforms.ConditionalNormalizer.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.ConditionalNormalizer" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.ConditionalNormalizer+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.DataCache input, Microsoft.ML.Transforms.DataCache.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.DataCache input, class Microsoft.ML.Transforms.DataCache/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.DataCache,Microsoft.ML.Transforms.DataCache.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.DataCache * Microsoft.ML.Transforms.DataCache.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.DataCache" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.DataCache+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.DatasetScorer input, Microsoft.ML.Transforms.DatasetScorer.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.DatasetScorer input, class Microsoft.ML.Transforms.DatasetScorer/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.DatasetScorer,Microsoft.ML.Transforms.DatasetScorer.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.DatasetScorer * Microsoft.ML.Transforms.DatasetScorer.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.DatasetScorer" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.DatasetScorer+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.Dictionarizer input, Microsoft.ML.Transforms.Dictionarizer.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.Dictionarizer input, class Microsoft.ML.Transforms.Dictionarizer/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.Dictionarizer,Microsoft.ML.Transforms.Dictionarizer.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.Dictionarizer * Microsoft.ML.Transforms.Dictionarizer.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.Dictionarizer" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.Dictionarizer+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.FeatureCombiner input, Microsoft.ML.Transforms.FeatureCombiner.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.FeatureCombiner input, class Microsoft.ML.Transforms.FeatureCombiner/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.FeatureCombiner,Microsoft.ML.Transforms.FeatureCombiner.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.FeatureCombiner * Microsoft.ML.Transforms.FeatureCombiner.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.FeatureCombiner" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.FeatureCombiner+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.FeatureSelectorByCount input, Microsoft.ML.Transforms.FeatureSelectorByCount.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.FeatureSelectorByCount input, class Microsoft.ML.Transforms.FeatureSelectorByCount/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.FeatureSelectorByCount,Microsoft.ML.Transforms.FeatureSelectorByCount.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.FeatureSelectorByCount * Microsoft.ML.Transforms.FeatureSelectorByCount.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.FeatureSelectorByCount" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.FeatureSelectorByCount+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.FeatureSelectorByMutualInformation input, Microsoft.ML.Transforms.FeatureSelectorByMutualInformation.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.FeatureSelectorByMutualInformation input, class Microsoft.ML.Transforms.FeatureSelectorByMutualInformation/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.FeatureSelectorByMutualInformation,Microsoft.ML.Transforms.FeatureSelectorByMutualInformation.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.FeatureSelectorByMutualInformation * Microsoft.ML.Transforms.FeatureSelectorByMutualInformation.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.FeatureSelectorByMutualInformation" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.FeatureSelectorByMutualInformation+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.GlobalContrastNormalizer input, Microsoft.ML.Transforms.GlobalContrastNormalizer.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.GlobalContrastNormalizer input, class Microsoft.ML.Transforms.GlobalContrastNormalizer/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.GlobalContrastNormalizer,Microsoft.ML.Transforms.GlobalContrastNormalizer.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.GlobalContrastNormalizer * Microsoft.ML.Transforms.GlobalContrastNormalizer.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.GlobalContrastNormalizer" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.GlobalContrastNormalizer+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.HashConverter input, Microsoft.ML.Transforms.HashConverter.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.HashConverter input, class Microsoft.ML.Transforms.HashConverter/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.HashConverter,Microsoft.ML.Transforms.HashConverter.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.HashConverter * Microsoft.ML.Transforms.HashConverter.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.HashConverter" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.HashConverter+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.KeyToTextConverter input, Microsoft.ML.Transforms.KeyToTextConverter.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.KeyToTextConverter input, class Microsoft.ML.Transforms.KeyToTextConverter/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.KeyToTextConverter,Microsoft.ML.Transforms.KeyToTextConverter.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.KeyToTextConverter * Microsoft.ML.Transforms.KeyToTextConverter.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.KeyToTextConverter" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.KeyToTextConverter+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.LabelColumnKeyBooleanConverter input, Microsoft.ML.Transforms.LabelColumnKeyBooleanConverter.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.LabelColumnKeyBooleanConverter input, class Microsoft.ML.Transforms.LabelColumnKeyBooleanConverter/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.LabelColumnKeyBooleanConverter,Microsoft.ML.Transforms.LabelColumnKeyBooleanConverter.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.LabelColumnKeyBooleanConverter * Microsoft.ML.Transforms.LabelColumnKeyBooleanConverter.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.LabelColumnKeyBooleanConverter" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.LabelColumnKeyBooleanConverter+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.LabelIndicator input, Microsoft.ML.Transforms.LabelIndicator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.LabelIndicator input, class Microsoft.ML.Transforms.LabelIndicator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.LabelIndicator,Microsoft.ML.Transforms.LabelIndicator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.LabelIndicator * Microsoft.ML.Transforms.LabelIndicator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.LabelIndicator" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.LabelIndicator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.LabelToFloatConverter input, Microsoft.ML.Transforms.LabelToFloatConverter.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.LabelToFloatConverter input, class Microsoft.ML.Transforms.LabelToFloatConverter/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.LabelToFloatConverter,Microsoft.ML.Transforms.LabelToFloatConverter.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.LabelToFloatConverter * Microsoft.ML.Transforms.LabelToFloatConverter.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.LabelToFloatConverter" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.LabelToFloatConverter+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.LogMeanVarianceNormalizer input, Microsoft.ML.Transforms.LogMeanVarianceNormalizer.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.LogMeanVarianceNormalizer input, class Microsoft.ML.Transforms.LogMeanVarianceNormalizer/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.LogMeanVarianceNormalizer,Microsoft.ML.Transforms.LogMeanVarianceNormalizer.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.LogMeanVarianceNormalizer * Microsoft.ML.Transforms.LogMeanVarianceNormalizer.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.LogMeanVarianceNormalizer" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.LogMeanVarianceNormalizer+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.LpNormalizer input, Microsoft.ML.Transforms.LpNormalizer.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.LpNormalizer input, class Microsoft.ML.Transforms.LpNormalizer/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.LpNormalizer,Microsoft.ML.Transforms.LpNormalizer.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.LpNormalizer * Microsoft.ML.Transforms.LpNormalizer.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.LpNormalizer" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.LpNormalizer+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.ManyHeterogeneousModelCombiner input, Microsoft.ML.Transforms.ManyHeterogeneousModelCombiner.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.ManyHeterogeneousModelCombiner input, class Microsoft.ML.Transforms.ManyHeterogeneousModelCombiner/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.ManyHeterogeneousModelCombiner,Microsoft.ML.Transforms.ManyHeterogeneousModelCombiner.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.ManyHeterogeneousModelCombiner * Microsoft.ML.Transforms.ManyHeterogeneousModelCombiner.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.ManyHeterogeneousModelCombiner" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.ManyHeterogeneousModelCombiner+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.MeanVarianceNormalizer input, Microsoft.ML.Transforms.MeanVarianceNormalizer.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.MeanVarianceNormalizer input, class Microsoft.ML.Transforms.MeanVarianceNormalizer/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.MeanVarianceNormalizer,Microsoft.ML.Transforms.MeanVarianceNormalizer.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.MeanVarianceNormalizer * Microsoft.ML.Transforms.MeanVarianceNormalizer.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.MeanVarianceNormalizer" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.MeanVarianceNormalizer+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.MinMaxNormalizer input, Microsoft.ML.Transforms.MinMaxNormalizer.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.MinMaxNormalizer input, class Microsoft.ML.Transforms.MinMaxNormalizer/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.MinMaxNormalizer,Microsoft.ML.Transforms.MinMaxNormalizer.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.MinMaxNormalizer * Microsoft.ML.Transforms.MinMaxNormalizer.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.MinMaxNormalizer" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.MinMaxNormalizer+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.MissingValueHandler input, Microsoft.ML.Transforms.MissingValueHandler.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.MissingValueHandler input, class Microsoft.ML.Transforms.MissingValueHandler/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.MissingValueHandler,Microsoft.ML.Transforms.MissingValueHandler.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.MissingValueHandler * Microsoft.ML.Transforms.MissingValueHandler.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.MissingValueHandler" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.MissingValueHandler+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.MissingValueIndicator input, Microsoft.ML.Transforms.MissingValueIndicator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.MissingValueIndicator input, class Microsoft.ML.Transforms.MissingValueIndicator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.MissingValueIndicator,Microsoft.ML.Transforms.MissingValueIndicator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.MissingValueIndicator * Microsoft.ML.Transforms.MissingValueIndicator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.MissingValueIndicator" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.MissingValueIndicator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.MissingValuesDropper input, Microsoft.ML.Transforms.MissingValuesDropper.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.MissingValuesDropper input, class Microsoft.ML.Transforms.MissingValuesDropper/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.MissingValuesDropper,Microsoft.ML.Transforms.MissingValuesDropper.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.MissingValuesDropper * Microsoft.ML.Transforms.MissingValuesDropper.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.MissingValuesDropper" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.MissingValuesDropper+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.MissingValuesRowDropper input, Microsoft.ML.Transforms.MissingValuesRowDropper.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.MissingValuesRowDropper input, class Microsoft.ML.Transforms.MissingValuesRowDropper/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.MissingValuesRowDropper,Microsoft.ML.Transforms.MissingValuesRowDropper.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.MissingValuesRowDropper * Microsoft.ML.Transforms.MissingValuesRowDropper.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.MissingValuesRowDropper" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.MissingValuesRowDropper+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.MissingValueSubstitutor input, Microsoft.ML.Transforms.MissingValueSubstitutor.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.MissingValueSubstitutor input, class Microsoft.ML.Transforms.MissingValueSubstitutor/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.MissingValueSubstitutor,Microsoft.ML.Transforms.MissingValueSubstitutor.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.MissingValueSubstitutor * Microsoft.ML.Transforms.MissingValueSubstitutor.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.MissingValueSubstitutor" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.MissingValueSubstitutor+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.ModelCombiner input, Microsoft.ML.Transforms.ModelCombiner.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.ModelCombiner input, class Microsoft.ML.Transforms.ModelCombiner/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.ModelCombiner,Microsoft.ML.Transforms.ModelCombiner.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.ModelCombiner * Microsoft.ML.Transforms.ModelCombiner.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.ModelCombiner" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.ModelCombiner+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.NGramTranslator input, Microsoft.ML.Transforms.NGramTranslator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.NGramTranslator input, class Microsoft.ML.Transforms.NGramTranslator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.NGramTranslator,Microsoft.ML.Transforms.NGramTranslator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.NGramTranslator * Microsoft.ML.Transforms.NGramTranslator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.NGramTranslator" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.NGramTranslator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.NoOperation input, Microsoft.ML.Transforms.NoOperation.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.NoOperation input, class Microsoft.ML.Transforms.NoOperation/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.NoOperation,Microsoft.ML.Transforms.NoOperation.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.NoOperation * Microsoft.ML.Transforms.NoOperation.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.NoOperation" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.NoOperation+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.OptionalColumnCreator input, Microsoft.ML.Transforms.OptionalColumnCreator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.OptionalColumnCreator input, class Microsoft.ML.Transforms.OptionalColumnCreator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.OptionalColumnCreator,Microsoft.ML.Transforms.OptionalColumnCreator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.OptionalColumnCreator * Microsoft.ML.Transforms.OptionalColumnCreator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.OptionalColumnCreator" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.OptionalColumnCreator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.PredictedLabelColumnOriginalValueConverter input, Microsoft.ML.Transforms.PredictedLabelColumnOriginalValueConverter.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.PredictedLabelColumnOriginalValueConverter input, class Microsoft.ML.Transforms.PredictedLabelColumnOriginalValueConverter/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.PredictedLabelColumnOriginalValueConverter,Microsoft.ML.Transforms.PredictedLabelColumnOriginalValueConverter.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.PredictedLabelColumnOriginalValueConverter * Microsoft.ML.Transforms.PredictedLabelColumnOriginalValueConverter.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.PredictedLabelColumnOriginalValueConverter" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.PredictedLabelColumnOriginalValueConverter+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.RandomNumberGenerator input, Microsoft.ML.Transforms.RandomNumberGenerator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.RandomNumberGenerator input, class Microsoft.ML.Transforms.RandomNumberGenerator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.RandomNumberGenerator,Microsoft.ML.Transforms.RandomNumberGenerator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.RandomNumberGenerator * Microsoft.ML.Transforms.RandomNumberGenerator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.RandomNumberGenerator" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.RandomNumberGenerator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.RowRangeFilter input, Microsoft.ML.Transforms.RowRangeFilter.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.RowRangeFilter input, class Microsoft.ML.Transforms.RowRangeFilter/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.RowRangeFilter,Microsoft.ML.Transforms.RowRangeFilter.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.RowRangeFilter * Microsoft.ML.Transforms.RowRangeFilter.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.RowRangeFilter" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.RowRangeFilter+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.RowSkipAndTakeFilter input, Microsoft.ML.Transforms.RowSkipAndTakeFilter.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.RowSkipAndTakeFilter input, class Microsoft.ML.Transforms.RowSkipAndTakeFilter/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.RowSkipAndTakeFilter,Microsoft.ML.Transforms.RowSkipAndTakeFilter.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.RowSkipAndTakeFilter * Microsoft.ML.Transforms.RowSkipAndTakeFilter.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.RowSkipAndTakeFilter" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.RowSkipAndTakeFilter+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.RowSkipFilter input, Microsoft.ML.Transforms.RowSkipFilter.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.RowSkipFilter input, class Microsoft.ML.Transforms.RowSkipFilter/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.RowSkipFilter,Microsoft.ML.Transforms.RowSkipFilter.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.RowSkipFilter * Microsoft.ML.Transforms.RowSkipFilter.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.RowSkipFilter" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.RowSkipFilter+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.RowTakeFilter input, Microsoft.ML.Transforms.RowTakeFilter.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.RowTakeFilter input, class Microsoft.ML.Transforms.RowTakeFilter/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.RowTakeFilter,Microsoft.ML.Transforms.RowTakeFilter.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.RowTakeFilter * Microsoft.ML.Transforms.RowTakeFilter.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.RowTakeFilter" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.RowTakeFilter+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.ScoreColumnSelector input, Microsoft.ML.Transforms.ScoreColumnSelector.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.ScoreColumnSelector input, class Microsoft.ML.Transforms.ScoreColumnSelector/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.ScoreColumnSelector,Microsoft.ML.Transforms.ScoreColumnSelector.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.ScoreColumnSelector * Microsoft.ML.Transforms.ScoreColumnSelector.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.ScoreColumnSelector" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.ScoreColumnSelector+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.Scorer input, Microsoft.ML.Transforms.Scorer.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.Scorer input, class Microsoft.ML.Transforms.Scorer/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.Scorer,Microsoft.ML.Transforms.Scorer.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.Scorer * Microsoft.ML.Transforms.Scorer.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.Scorer" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.Scorer+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.Segregator input, Microsoft.ML.Transforms.Segregator.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.Segregator input, class Microsoft.ML.Transforms.Segregator/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.Segregator,Microsoft.ML.Transforms.Segregator.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.Segregator * Microsoft.ML.Transforms.Segregator.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.Segregator" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.Segregator+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.SentimentAnalyzer input, Microsoft.ML.Transforms.SentimentAnalyzer.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.SentimentAnalyzer input, class Microsoft.ML.Transforms.SentimentAnalyzer/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.SentimentAnalyzer,Microsoft.ML.Transforms.SentimentAnalyzer.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.SentimentAnalyzer * Microsoft.ML.Transforms.SentimentAnalyzer.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.SentimentAnalyzer" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.SentimentAnalyzer+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.SupervisedBinNormalizer input, Microsoft.ML.Transforms.SupervisedBinNormalizer.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.SupervisedBinNormalizer input, class Microsoft.ML.Transforms.SupervisedBinNormalizer/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.SupervisedBinNormalizer,Microsoft.ML.Transforms.SupervisedBinNormalizer.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.SupervisedBinNormalizer * Microsoft.ML.Transforms.SupervisedBinNormalizer.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.SupervisedBinNormalizer" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.SupervisedBinNormalizer+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.TextFeaturizer input, Microsoft.ML.Transforms.TextFeaturizer.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.TextFeaturizer input, class Microsoft.ML.Transforms.TextFeaturizer/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.TextFeaturizer,Microsoft.ML.Transforms.TextFeaturizer.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.TextFeaturizer * Microsoft.ML.Transforms.TextFeaturizer.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.TextFeaturizer" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.TextFeaturizer+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.TextToKeyConverter input, Microsoft.ML.Transforms.TextToKeyConverter.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.TextToKeyConverter input, class Microsoft.ML.Transforms.TextToKeyConverter/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.TextToKeyConverter,Microsoft.ML.Transforms.TextToKeyConverter.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.TextToKeyConverter * Microsoft.ML.Transforms.TextToKeyConverter.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.TextToKeyConverter" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.TextToKeyConverter+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.TrainTestDatasetSplitter input, Microsoft.ML.Transforms.TrainTestDatasetSplitter.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.TrainTestDatasetSplitter input, class Microsoft.ML.Transforms.TrainTestDatasetSplitter/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.TrainTestDatasetSplitter,Microsoft.ML.Transforms.TrainTestDatasetSplitter.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.TrainTestDatasetSplitter * Microsoft.ML.Transforms.TrainTestDatasetSplitter.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.TrainTestDatasetSplitter" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.TrainTestDatasetSplitter+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.TreeLeafFeaturizer input, Microsoft.ML.Transforms.TreeLeafFeaturizer.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.TreeLeafFeaturizer input, class Microsoft.ML.Transforms.TreeLeafFeaturizer/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.TreeLeafFeaturizer,Microsoft.ML.Transforms.TreeLeafFeaturizer.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.TreeLeafFeaturizer * Microsoft.ML.Transforms.TreeLeafFeaturizer.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.TreeLeafFeaturizer" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.TreeLeafFeaturizer+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.TwoHeterogeneousModelCombiner input, Microsoft.ML.Transforms.TwoHeterogeneousModelCombiner.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.TwoHeterogeneousModelCombiner input, class Microsoft.ML.Transforms.TwoHeterogeneousModelCombiner/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.TwoHeterogeneousModelCombiner,Microsoft.ML.Transforms.TwoHeterogeneousModelCombiner.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.TwoHeterogeneousModelCombiner * Microsoft.ML.Transforms.TwoHeterogeneousModelCombiner.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.TwoHeterogeneousModelCombiner" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.TwoHeterogeneousModelCombiner+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.ML.Transforms.WordTokenizer input, Microsoft.ML.Transforms.WordTokenizer.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.ML.Transforms.WordTokenizer input, class Microsoft.ML.Transforms.WordTokenizer/Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Add(Microsoft.ML.Transforms.WordTokenizer,Microsoft.ML.Transforms.WordTokenizer.Output)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.ML.Transforms.WordTokenizer * Microsoft.ML.Transforms.WordTokenizer.Output -&gt; unit" Usage="experiment.Add (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Transforms.WordTokenizer" />
        <Parameter Name="output" Type="Microsoft.ML.Transforms.WordTokenizer+Output" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public void Compile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Compile() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Compile" />
      <MemberSignature Language="VB.NET" Value="Public Sub Compile ()" />
      <MemberSignature Language="F#" Value="member this.Compile : unit -&gt; unit" Usage="experiment.Compile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Parses the nodes to determine the validity of the graph and
            to determine the inputs and outputs of the graph.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNodes">
      <MemberSignature Language="C#" Value="public Newtonsoft.Json.Linq.JArray GetNodes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Newtonsoft.Json.Linq.JArray GetNodes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.GetNodes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodes () As JArray" />
      <MemberSignature Language="F#" Value="member this.GetNodes : unit -&gt; Newtonsoft.Json.Linq.JArray" Usage="experiment.GetNodes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JArray</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public TOutput GetOutput&lt;TOutput&gt; (Microsoft.ML.Runtime.EntryPoints.Var&lt;TOutput&gt; var) where TOutput : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TOutput GetOutput&lt;class TOutput&gt;(class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;!!TOutput&gt; var) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.GetOutput``1(Microsoft.ML.Runtime.EntryPoints.Var{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutput(Of TOutput As Class) (var As Var(Of TOutput)) As TOutput" />
      <MemberSignature Language="F#" Value="member this.GetOutput : Microsoft.ML.Runtime.EntryPoints.Var&lt;'Output (requires 'Output : null)&gt; -&gt; 'Output (requires 'Output : null)" Usage="experiment.GetOutput var" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="var" Type="Microsoft.ML.Runtime.EntryPoints.Var&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">To be added.</typeparam>
        <param name="var">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="experiment.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.Run" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run ()" />
      <MemberSignature Language="F#" Value="member this.Run : unit -&gt; unit" Usage="experiment.Run " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInput&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public void SetInput&lt;TInput&gt; (Microsoft.ML.Runtime.EntryPoints.Var&lt;TInput&gt; variable, TInput input) where TInput : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetInput&lt;class TInput&gt;(class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;!!TInput&gt; variable, !!TInput input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.SetInput``1(Microsoft.ML.Runtime.EntryPoints.Var{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetInput(Of TInput As Class) (variable As Var(Of TInput), input As TInput)" />
      <MemberSignature Language="F#" Value="member this.SetInput : Microsoft.ML.Runtime.EntryPoints.Var&lt;'Input (requires 'Input : null)&gt; * 'Input -&gt; unit (requires 'Input : null)" Usage="experiment.SetInput (variable, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="variable" Type="Microsoft.ML.Runtime.EntryPoints.Var&lt;TInput&gt;" />
        <Parameter Name="input" Type="TInput" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">To be added.</typeparam>
        <param name="variable">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInput&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public void SetInput&lt;TInput&gt; (string varName, TInput input) where TInput : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetInput&lt;class TInput&gt;(string varName, !!TInput input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.SetInput``1(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetInput(Of TInput As Class) (varName As String, input As TInput)" />
      <MemberSignature Language="F#" Value="member this.SetInput : string * 'Input -&gt; unit (requires 'Input : null)" Usage="experiment.SetInput (varName, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="varName" Type="System.String" />
        <Parameter Name="input" Type="TInput" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">To be added.</typeparam>
        <param name="varName">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInput&lt;TInput,TInput2&gt;">
      <MemberSignature Language="C#" Value="public void SetInput&lt;TInput,TInput2&gt; (Microsoft.ML.Runtime.EntryPoints.ArrayVar&lt;TInput&gt; variable, TInput2[] input) where TInput : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetInput&lt;class TInput, TInput2&gt;(class Microsoft.ML.Runtime.EntryPoints.ArrayVar`1&lt;!!TInput&gt; variable, !!TInput2[] input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.SetInput``2(Microsoft.ML.Runtime.EntryPoints.ArrayVar{``0},``1[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetInput(Of TInput As Class, TInput2 As Class) (variable As ArrayVar(Of TInput), input As TInput2())" />
      <MemberSignature Language="F#" Value="member this.SetInput : Microsoft.ML.Runtime.EntryPoints.ArrayVar&lt;'Input (requires 'Input : null)&gt; * 'TInput2[] -&gt; unit (requires 'Input : null)" Usage="experiment.SetInput (variable, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TInput2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="variable" Type="Microsoft.ML.Runtime.EntryPoints.ArrayVar&lt;TInput&gt;" />
        <Parameter Name="input" Type="TInput2[]" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">To be added.</typeparam>
        <typeparam name="TInput2">To be added.</typeparam>
        <param name="variable">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToJsonString">
      <MemberSignature Language="C#" Value="public string ToJsonString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToJsonString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Experiment.ToJsonString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToJsonString () As String" />
      <MemberSignature Language="F#" Value="member this.ToJsonString : unit -&gt; string" Usage="experiment.ToJsonString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>