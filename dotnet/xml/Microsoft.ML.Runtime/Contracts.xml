<Type Name="Contracts" FullName="Microsoft.ML.Runtime.Contracts">
  <TypeSignature Language="C#" Value="public static class Contracts" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Contracts extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Contracts" />
  <TypeSignature Language="VB.NET" Value="Public Module Contracts" />
  <TypeSignature Language="F#" Value="type Contracts = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool f) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Assert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert (f As Boolean)" />
      <MemberSignature Language="F#" Value="static member Assert : bool -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.Assert f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Assert(Microsoft.ML.Runtime.IExceptionContext,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Assert (ctx As IExceptionContext, f As Boolean)" />
      <MemberSignature Language="F#" Value="static member Assert : Microsoft.ML.Runtime.IExceptionContext * bool -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.Assert (ctx, f)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="f" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="f">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool f, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool f, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Assert(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert (f As Boolean, msg As String)" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.Assert (f, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Boolean" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Assert(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Assert (ctx As IExceptionContext, f As Boolean, msg As String)" />
      <MemberSignature Language="F#" Value="static member Assert : Microsoft.ML.Runtime.IExceptionContext * bool * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.Assert (ctx, f, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="f" Type="System.Boolean" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="f">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertNonEmpty">
      <MemberSignature Language="C#" Value="public static void AssertNonEmpty (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertNonEmpty(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertNonEmpty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertNonEmpty (s As String)" />
      <MemberSignature Language="F#" Value="static member AssertNonEmpty : string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.AssertNonEmpty s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertNonEmpty">
      <MemberSignature Language="C#" Value="public static void AssertNonEmpty (this Microsoft.ML.Runtime.IExceptionContext ctx, string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertNonEmpty(class Microsoft.ML.Runtime.IExceptionContext ctx, string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertNonEmpty(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AssertNonEmpty (ctx As IExceptionContext, s As String)" />
      <MemberSignature Language="F#" Value="static member AssertNonEmpty : Microsoft.ML.Runtime.IExceptionContext * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.AssertNonEmpty (ctx, s)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertNonEmpty">
      <MemberSignature Language="C#" Value="public static void AssertNonEmpty (string s, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertNonEmpty(string s, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertNonEmpty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertNonEmpty (s As String, msg As String)" />
      <MemberSignature Language="F#" Value="static member AssertNonEmpty : string * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.AssertNonEmpty (s, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertNonEmpty">
      <MemberSignature Language="C#" Value="public static void AssertNonEmpty (this Microsoft.ML.Runtime.IExceptionContext ctx, string s, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertNonEmpty(class Microsoft.ML.Runtime.IExceptionContext ctx, string s, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertNonEmpty(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AssertNonEmpty (ctx As IExceptionContext, s As String, msg As String)" />
      <MemberSignature Language="F#" Value="static member AssertNonEmpty : Microsoft.ML.Runtime.IExceptionContext * string * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.AssertNonEmpty (ctx, s, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="s">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertNonEmpty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void AssertNonEmpty&lt;T&gt; (System.Collections.Generic.ICollection&lt;T&gt; args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertNonEmpty&lt;T&gt;(class System.Collections.Generic.ICollection`1&lt;!!T&gt; args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertNonEmpty``1(System.Collections.Generic.ICollection{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertNonEmpty(Of T) (args As ICollection(Of T))" />
      <MemberSignature Language="F#" Value="static member AssertNonEmpty : System.Collections.Generic.ICollection&lt;'T&gt; -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.AssertNonEmpty args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="args" Type="System.Collections.Generic.ICollection&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertNonEmpty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void AssertNonEmpty&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, System.Collections.Generic.ICollection&lt;T&gt; args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertNonEmpty&lt;T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, class System.Collections.Generic.ICollection`1&lt;!!T&gt; args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertNonEmpty``1(Microsoft.ML.Runtime.IExceptionContext,System.Collections.Generic.ICollection{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AssertNonEmpty(Of T) (ctx As IExceptionContext, args As ICollection(Of T))" />
      <MemberSignature Language="F#" Value="static member AssertNonEmpty : Microsoft.ML.Runtime.IExceptionContext * System.Collections.Generic.ICollection&lt;'T&gt; -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.AssertNonEmpty (ctx, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="args" Type="System.Collections.Generic.ICollection&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="ctx">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertNonEmpty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void AssertNonEmpty&lt;T&gt; (System.Collections.Generic.ICollection&lt;T&gt; args, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertNonEmpty&lt;T&gt;(class System.Collections.Generic.ICollection`1&lt;!!T&gt; args, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertNonEmpty``1(System.Collections.Generic.ICollection{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertNonEmpty(Of T) (args As ICollection(Of T), msg As String)" />
      <MemberSignature Language="F#" Value="static member AssertNonEmpty : System.Collections.Generic.ICollection&lt;'T&gt; * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.AssertNonEmpty (args, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="args" Type="System.Collections.Generic.ICollection&lt;T&gt;" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="args">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertNonEmpty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void AssertNonEmpty&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, System.Collections.Generic.ICollection&lt;T&gt; args, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertNonEmpty&lt;T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, class System.Collections.Generic.ICollection`1&lt;!!T&gt; args, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertNonEmpty``1(Microsoft.ML.Runtime.IExceptionContext,System.Collections.Generic.ICollection{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AssertNonEmpty(Of T) (ctx As IExceptionContext, args As ICollection(Of T), msg As String)" />
      <MemberSignature Language="F#" Value="static member AssertNonEmpty : Microsoft.ML.Runtime.IExceptionContext * System.Collections.Generic.ICollection&lt;'T&gt; * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.AssertNonEmpty (ctx, args, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="args" Type="System.Collections.Generic.ICollection&lt;T&gt;" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="ctx">To be added.</param>
        <param name="args">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertNonWhiteSpace">
      <MemberSignature Language="C#" Value="public static void AssertNonWhiteSpace (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertNonWhiteSpace(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertNonWhiteSpace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertNonWhiteSpace (s As String)" />
      <MemberSignature Language="F#" Value="static member AssertNonWhiteSpace : string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.AssertNonWhiteSpace s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertNonWhiteSpace">
      <MemberSignature Language="C#" Value="public static void AssertNonWhiteSpace (this Microsoft.ML.Runtime.IExceptionContext ctx, string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertNonWhiteSpace(class Microsoft.ML.Runtime.IExceptionContext ctx, string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertNonWhiteSpace(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AssertNonWhiteSpace (ctx As IExceptionContext, s As String)" />
      <MemberSignature Language="F#" Value="static member AssertNonWhiteSpace : Microsoft.ML.Runtime.IExceptionContext * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.AssertNonWhiteSpace (ctx, s)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertNonWhiteSpace">
      <MemberSignature Language="C#" Value="public static void AssertNonWhiteSpace (string s, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertNonWhiteSpace(string s, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertNonWhiteSpace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertNonWhiteSpace (s As String, msg As String)" />
      <MemberSignature Language="F#" Value="static member AssertNonWhiteSpace : string * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.AssertNonWhiteSpace (s, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertNonWhiteSpace">
      <MemberSignature Language="C#" Value="public static void AssertNonWhiteSpace (this Microsoft.ML.Runtime.IExceptionContext ctx, string s, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertNonWhiteSpace(class Microsoft.ML.Runtime.IExceptionContext ctx, string s, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertNonWhiteSpace(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AssertNonWhiteSpace (ctx As IExceptionContext, s As String, msg As String)" />
      <MemberSignature Language="F#" Value="static member AssertNonWhiteSpace : Microsoft.ML.Runtime.IExceptionContext * string * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.AssertNonWhiteSpace (ctx, s, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="s">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void AssertValue&lt;T&gt; (T val) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertValue&lt;class T&gt;(!!T val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertValue``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertValue(Of T As Class) (val As T)" />
      <MemberSignature Language="F#" Value="static member AssertValue : 'T -&gt; unit (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.AssertValue val" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="val" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="val">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void AssertValue&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T val) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertValue&lt;class T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertValue``1(Microsoft.ML.Runtime.IExceptionContext,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AssertValue(Of T As Class) (ctx As IExceptionContext, val As T)" />
      <MemberSignature Language="F#" Value="static member AssertValue : Microsoft.ML.Runtime.IExceptionContext * 'T -&gt; unit (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.AssertValue (ctx, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="val" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="ctx">To be added.</param>
        <param name="val">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void AssertValue&lt;T&gt; (T val, string paramName) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertValue&lt;class T&gt;(!!T val, string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertValue``1(``0,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertValue(Of T As Class) (val As T, paramName As String)" />
      <MemberSignature Language="F#" Value="static member AssertValue : 'T * string -&gt; unit (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.AssertValue (val, paramName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="val" Type="T" />
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="val">To be added.</param>
        <param name="paramName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void AssertValue&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T val, string paramName) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertValue&lt;class T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T val, string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertValue``1(Microsoft.ML.Runtime.IExceptionContext,``0,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AssertValue(Of T As Class) (ctx As IExceptionContext, val As T, paramName As String)" />
      <MemberSignature Language="F#" Value="static member AssertValue : Microsoft.ML.Runtime.IExceptionContext * 'T * string -&gt; unit (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.AssertValue (ctx, val, paramName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="val" Type="T" />
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="ctx">To be added.</param>
        <param name="val">To be added.</param>
        <param name="paramName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void AssertValue&lt;T&gt; (T val, string name, string msg) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertValue&lt;class T&gt;(!!T val, string name, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertValue``1(``0,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertValue(Of T As Class) (val As T, name As String, msg As String)" />
      <MemberSignature Language="F#" Value="static member AssertValue : 'T * string * string -&gt; unit (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.AssertValue (val, name, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="val" Type="T" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="val">To be added.</param>
        <param name="name">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void AssertValue&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T val, string name, string msg) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertValue&lt;class T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T val, string name, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertValue``1(Microsoft.ML.Runtime.IExceptionContext,``0,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AssertValue(Of T As Class) (ctx As IExceptionContext, val As T, name As String, msg As String)" />
      <MemberSignature Language="F#" Value="static member AssertValue : Microsoft.ML.Runtime.IExceptionContext * 'T * string * string -&gt; unit (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.AssertValue (ctx, val, name, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="val" Type="T" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="ctx">To be added.</param>
        <param name="val">To be added.</param>
        <param name="name">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertValueOrNull&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void AssertValueOrNull&lt;T&gt; (T val) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertValueOrNull&lt;class T&gt;(!!T val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertValueOrNull``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertValueOrNull(Of T As Class) (val As T)" />
      <MemberSignature Language="F#" Value="static member AssertValueOrNull : 'T -&gt; unit (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.AssertValueOrNull val" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("INVARIANT_CHECKS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="val" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="val">To be added.</param>
        <summary>
            This documents that the parameter can legally be null.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertValueOrNull&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void AssertValueOrNull&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T val) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssertValueOrNull&lt;class T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.AssertValueOrNull``1(Microsoft.ML.Runtime.IExceptionContext,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AssertValueOrNull(Of T As Class) (ctx As IExceptionContext, val As T)" />
      <MemberSignature Language="F#" Value="static member AssertValueOrNull : Microsoft.ML.Runtime.IExceptionContext * 'T -&gt; unit (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.AssertValueOrNull (ctx, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("INVARIANT_CHECKS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="val" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="ctx">To be added.</param>
        <param name="val">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Check">
      <MemberSignature Language="C#" Value="public static void Check (bool f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Check(bool f) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Check(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Check (f As Boolean)" />
      <MemberSignature Language="F#" Value="static member Check : bool -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.Check f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Check">
      <MemberSignature Language="C#" Value="public static void Check (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Check(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Check(Microsoft.ML.Runtime.IExceptionContext,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Check (ctx As IExceptionContext, f As Boolean)" />
      <MemberSignature Language="F#" Value="static member Check : Microsoft.ML.Runtime.IExceptionContext * bool -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.Check (ctx, f)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="f" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="f">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Check">
      <MemberSignature Language="C#" Value="public static void Check (bool f, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Check(bool f, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Check(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Check (f As Boolean, msg As String)" />
      <MemberSignature Language="F#" Value="static member Check : bool * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.Check (f, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Boolean" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Check">
      <MemberSignature Language="C#" Value="public static void Check (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Check(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Check(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Check (ctx As IExceptionContext, f As Boolean, msg As String)" />
      <MemberSignature Language="F#" Value="static member Check : Microsoft.ML.Runtime.IExceptionContext * bool * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.Check (ctx, f, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="f" Type="System.Boolean" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="f">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAlive">
      <MemberSignature Language="C#" Value="public static void CheckAlive (this Microsoft.ML.Runtime.IHostEnvironment env);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckAlive(class Microsoft.ML.Runtime.IHostEnvironment env) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckAlive(Microsoft.ML.Runtime.IHostEnvironment)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckAlive (env As IHostEnvironment)" />
      <MemberSignature Language="F#" Value="static member CheckAlive : Microsoft.ML.Runtime.IHostEnvironment -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckAlive env" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" RefType="this" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <summary>
            Check state of the host and throw exception if host marked to stop all exection.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckDecode">
      <MemberSignature Language="C#" Value="public static void CheckDecode (bool f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckDecode(bool f) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckDecode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckDecode (f As Boolean)" />
      <MemberSignature Language="F#" Value="static member CheckDecode : bool -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckDecode f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckDecode">
      <MemberSignature Language="C#" Value="public static void CheckDecode (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckDecode(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckDecode(Microsoft.ML.Runtime.IExceptionContext,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckDecode (ctx As IExceptionContext, f As Boolean)" />
      <MemberSignature Language="F#" Value="static member CheckDecode : Microsoft.ML.Runtime.IExceptionContext * bool -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckDecode (ctx, f)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="f" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="f">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckDecode">
      <MemberSignature Language="C#" Value="public static void CheckDecode (bool f, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckDecode(bool f, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckDecode(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckDecode (f As Boolean, msg As String)" />
      <MemberSignature Language="F#" Value="static member CheckDecode : bool * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckDecode (f, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Boolean" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckDecode">
      <MemberSignature Language="C#" Value="public static void CheckDecode (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckDecode(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckDecode(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckDecode (ctx As IExceptionContext, f As Boolean, msg As String)" />
      <MemberSignature Language="F#" Value="static member CheckDecode : Microsoft.ML.Runtime.IExceptionContext * bool * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckDecode (ctx, f, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="f" Type="System.Boolean" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="f">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckIO">
      <MemberSignature Language="C#" Value="public static void CheckIO (bool f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckIO(bool f) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckIO(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckIO (f As Boolean)" />
      <MemberSignature Language="F#" Value="static member CheckIO : bool -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckIO f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckIO">
      <MemberSignature Language="C#" Value="public static void CheckIO (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckIO(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckIO(Microsoft.ML.Runtime.IExceptionContext,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckIO (ctx As IExceptionContext, f As Boolean)" />
      <MemberSignature Language="F#" Value="static member CheckIO : Microsoft.ML.Runtime.IExceptionContext * bool -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckIO (ctx, f)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="f" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="f">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckIO">
      <MemberSignature Language="C#" Value="public static void CheckIO (bool f, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckIO(bool f, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckIO(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckIO (f As Boolean, msg As String)" />
      <MemberSignature Language="F#" Value="static member CheckIO : bool * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckIO (f, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Boolean" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckIO">
      <MemberSignature Language="C#" Value="public static void CheckIO (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckIO(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckIO(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckIO (ctx As IExceptionContext, f As Boolean, msg As String)" />
      <MemberSignature Language="F#" Value="static member CheckIO : Microsoft.ML.Runtime.IExceptionContext * bool * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckIO (ctx, f, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="f" Type="System.Boolean" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="f">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNonEmpty">
      <MemberSignature Language="C#" Value="public static string CheckNonEmpty (string s, string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CheckNonEmpty(string s, string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckNonEmpty (s As String, paramName As String) As String" />
      <MemberSignature Language="F#" Value="static member CheckNonEmpty : string * string -&gt; string" Usage="Microsoft.ML.Runtime.Contracts.CheckNonEmpty (s, paramName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="paramName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNonEmpty">
      <MemberSignature Language="C#" Value="public static string CheckNonEmpty (this Microsoft.ML.Runtime.IExceptionContext ctx, string s, string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CheckNonEmpty(class Microsoft.ML.Runtime.IExceptionContext ctx, string s, string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNonEmpty (ctx As IExceptionContext, s As String, paramName As String) As String" />
      <MemberSignature Language="F#" Value="static member CheckNonEmpty : Microsoft.ML.Runtime.IExceptionContext * string * string -&gt; string" Usage="Microsoft.ML.Runtime.Contracts.CheckNonEmpty (ctx, s, paramName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="s">To be added.</param>
        <param name="paramName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNonEmpty">
      <MemberSignature Language="C#" Value="public static string CheckNonEmpty (string s, string paramName, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CheckNonEmpty(string s, string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckNonEmpty (s As String, paramName As String, msg As String) As String" />
      <MemberSignature Language="F#" Value="static member CheckNonEmpty : string * string * string -&gt; string" Usage="Microsoft.ML.Runtime.Contracts.CheckNonEmpty (s, paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNonEmpty">
      <MemberSignature Language="C#" Value="public static string CheckNonEmpty (this Microsoft.ML.Runtime.IExceptionContext ctx, string s, string paramName, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CheckNonEmpty(class Microsoft.ML.Runtime.IExceptionContext ctx, string s, string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNonEmpty (ctx As IExceptionContext, s As String, paramName As String, msg As String) As String" />
      <MemberSignature Language="F#" Value="static member CheckNonEmpty : Microsoft.ML.Runtime.IExceptionContext * string * string * string -&gt; string" Usage="Microsoft.ML.Runtime.Contracts.CheckNonEmpty (ctx, s, paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="s">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNonEmpty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.ICollection&lt;T&gt; CheckNonEmpty&lt;T&gt; (System.Collections.Generic.ICollection&lt;T&gt; args, string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.ICollection`1&lt;!!T&gt; CheckNonEmpty&lt;T&gt;(class System.Collections.Generic.ICollection`1&lt;!!T&gt; args, string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty``1(System.Collections.Generic.ICollection{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckNonEmpty(Of T) (args As ICollection(Of T), paramName As String) As ICollection(Of T)" />
      <MemberSignature Language="F#" Value="static member CheckNonEmpty : System.Collections.Generic.ICollection&lt;'T&gt; * string -&gt; System.Collections.Generic.ICollection&lt;'T&gt;" Usage="Microsoft.ML.Runtime.Contracts.CheckNonEmpty (args, paramName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="args" Type="System.Collections.Generic.ICollection&lt;T&gt;" />
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="args">To be added.</param>
        <param name="paramName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNonEmpty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] CheckNonEmpty&lt;T&gt; (T[] args, string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] CheckNonEmpty&lt;T&gt;(!!T[] args, string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty``1(``0[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckNonEmpty(Of T) (args As T(), paramName As String) As T()" />
      <MemberSignature Language="F#" Value="static member CheckNonEmpty : 'T[] * string -&gt; 'T[]" Usage="Microsoft.ML.Runtime.Contracts.CheckNonEmpty (args, paramName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="args" Type="T[]" />
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="args">To be added.</param>
        <param name="paramName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNonEmpty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.ICollection&lt;T&gt; CheckNonEmpty&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, System.Collections.Generic.ICollection&lt;T&gt; args, string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.ICollection`1&lt;!!T&gt; CheckNonEmpty&lt;T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, class System.Collections.Generic.ICollection`1&lt;!!T&gt; args, string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty``1(Microsoft.ML.Runtime.IExceptionContext,System.Collections.Generic.ICollection{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNonEmpty(Of T) (ctx As IExceptionContext, args As ICollection(Of T), paramName As String) As ICollection(Of T)" />
      <MemberSignature Language="F#" Value="static member CheckNonEmpty : Microsoft.ML.Runtime.IExceptionContext * System.Collections.Generic.ICollection&lt;'T&gt; * string -&gt; System.Collections.Generic.ICollection&lt;'T&gt;" Usage="Microsoft.ML.Runtime.Contracts.CheckNonEmpty (ctx, args, paramName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="args" Type="System.Collections.Generic.ICollection&lt;T&gt;" />
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="ctx">To be added.</param>
        <param name="args">To be added.</param>
        <param name="paramName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNonEmpty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] CheckNonEmpty&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T[] args, string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] CheckNonEmpty&lt;T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T[] args, string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty``1(Microsoft.ML.Runtime.IExceptionContext,``0[],System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNonEmpty(Of T) (ctx As IExceptionContext, args As T(), paramName As String) As T()" />
      <MemberSignature Language="F#" Value="static member CheckNonEmpty : Microsoft.ML.Runtime.IExceptionContext * 'T[] * string -&gt; 'T[]" Usage="Microsoft.ML.Runtime.Contracts.CheckNonEmpty (ctx, args, paramName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="args" Type="T[]" />
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="ctx">To be added.</param>
        <param name="args">To be added.</param>
        <param name="paramName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNonEmpty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.ICollection&lt;T&gt; CheckNonEmpty&lt;T&gt; (System.Collections.Generic.ICollection&lt;T&gt; args, string paramName, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.ICollection`1&lt;!!T&gt; CheckNonEmpty&lt;T&gt;(class System.Collections.Generic.ICollection`1&lt;!!T&gt; args, string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty``1(System.Collections.Generic.ICollection{``0},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckNonEmpty(Of T) (args As ICollection(Of T), paramName As String, msg As String) As ICollection(Of T)" />
      <MemberSignature Language="F#" Value="static member CheckNonEmpty : System.Collections.Generic.ICollection&lt;'T&gt; * string * string -&gt; System.Collections.Generic.ICollection&lt;'T&gt;" Usage="Microsoft.ML.Runtime.Contracts.CheckNonEmpty (args, paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="args" Type="System.Collections.Generic.ICollection&lt;T&gt;" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="args">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNonEmpty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] CheckNonEmpty&lt;T&gt; (T[] args, string paramName, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] CheckNonEmpty&lt;T&gt;(!!T[] args, string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty``1(``0[],System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckNonEmpty(Of T) (args As T(), paramName As String, msg As String) As T()" />
      <MemberSignature Language="F#" Value="static member CheckNonEmpty : 'T[] * string * string -&gt; 'T[]" Usage="Microsoft.ML.Runtime.Contracts.CheckNonEmpty (args, paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="args" Type="T[]" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="args">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNonEmpty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.ICollection&lt;T&gt; CheckNonEmpty&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, System.Collections.Generic.ICollection&lt;T&gt; args, string paramName, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.ICollection`1&lt;!!T&gt; CheckNonEmpty&lt;T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, class System.Collections.Generic.ICollection`1&lt;!!T&gt; args, string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty``1(Microsoft.ML.Runtime.IExceptionContext,System.Collections.Generic.ICollection{``0},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNonEmpty(Of T) (ctx As IExceptionContext, args As ICollection(Of T), paramName As String, msg As String) As ICollection(Of T)" />
      <MemberSignature Language="F#" Value="static member CheckNonEmpty : Microsoft.ML.Runtime.IExceptionContext * System.Collections.Generic.ICollection&lt;'T&gt; * string * string -&gt; System.Collections.Generic.ICollection&lt;'T&gt;" Usage="Microsoft.ML.Runtime.Contracts.CheckNonEmpty (ctx, args, paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="args" Type="System.Collections.Generic.ICollection&lt;T&gt;" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="ctx">To be added.</param>
        <param name="args">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNonEmpty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] CheckNonEmpty&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T[] args, string paramName, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] CheckNonEmpty&lt;T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T[] args, string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonEmpty``1(Microsoft.ML.Runtime.IExceptionContext,``0[],System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNonEmpty(Of T) (ctx As IExceptionContext, args As T(), paramName As String, msg As String) As T()" />
      <MemberSignature Language="F#" Value="static member CheckNonEmpty : Microsoft.ML.Runtime.IExceptionContext * 'T[] * string * string -&gt; 'T[]" Usage="Microsoft.ML.Runtime.Contracts.CheckNonEmpty (ctx, args, paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="args" Type="T[]" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="ctx">To be added.</param>
        <param name="args">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNonWhiteSpace">
      <MemberSignature Language="C#" Value="public static string CheckNonWhiteSpace (string s, string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CheckNonWhiteSpace(string s, string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonWhiteSpace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckNonWhiteSpace (s As String, paramName As String) As String" />
      <MemberSignature Language="F#" Value="static member CheckNonWhiteSpace : string * string -&gt; string" Usage="Microsoft.ML.Runtime.Contracts.CheckNonWhiteSpace (s, paramName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="paramName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNonWhiteSpace">
      <MemberSignature Language="C#" Value="public static string CheckNonWhiteSpace (this Microsoft.ML.Runtime.IExceptionContext ctx, string s, string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CheckNonWhiteSpace(class Microsoft.ML.Runtime.IExceptionContext ctx, string s, string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonWhiteSpace(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNonWhiteSpace (ctx As IExceptionContext, s As String, paramName As String) As String" />
      <MemberSignature Language="F#" Value="static member CheckNonWhiteSpace : Microsoft.ML.Runtime.IExceptionContext * string * string -&gt; string" Usage="Microsoft.ML.Runtime.Contracts.CheckNonWhiteSpace (ctx, s, paramName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="s">To be added.</param>
        <param name="paramName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNonWhiteSpace">
      <MemberSignature Language="C#" Value="public static string CheckNonWhiteSpace (string s, string paramName, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CheckNonWhiteSpace(string s, string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonWhiteSpace(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckNonWhiteSpace (s As String, paramName As String, msg As String) As String" />
      <MemberSignature Language="F#" Value="static member CheckNonWhiteSpace : string * string * string -&gt; string" Usage="Microsoft.ML.Runtime.Contracts.CheckNonWhiteSpace (s, paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNonWhiteSpace">
      <MemberSignature Language="C#" Value="public static string CheckNonWhiteSpace (this Microsoft.ML.Runtime.IExceptionContext ctx, string s, string paramName, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CheckNonWhiteSpace(class Microsoft.ML.Runtime.IExceptionContext ctx, string s, string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckNonWhiteSpace(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNonWhiteSpace (ctx As IExceptionContext, s As String, paramName As String, msg As String) As String" />
      <MemberSignature Language="F#" Value="static member CheckNonWhiteSpace : Microsoft.ML.Runtime.IExceptionContext * string * string * string -&gt; string" Usage="Microsoft.ML.Runtime.Contracts.CheckNonWhiteSpace (ctx, s, paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="s">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckParam">
      <MemberSignature Language="C#" Value="public static void CheckParam (bool f, string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckParam(bool f, string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckParam(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckParam (f As Boolean, paramName As String)" />
      <MemberSignature Language="F#" Value="static member CheckParam : bool * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckParam (f, paramName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Boolean" />
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <param name="paramName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckParam">
      <MemberSignature Language="C#" Value="public static void CheckParam (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckParam(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckParam(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckParam (ctx As IExceptionContext, f As Boolean, paramName As String)" />
      <MemberSignature Language="F#" Value="static member CheckParam : Microsoft.ML.Runtime.IExceptionContext * bool * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckParam (ctx, f, paramName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="f" Type="System.Boolean" />
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="f">To be added.</param>
        <param name="paramName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckParam">
      <MemberSignature Language="C#" Value="public static void CheckParam (bool f, string paramName, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckParam(bool f, string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckParam(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckParam (f As Boolean, paramName As String, msg As String)" />
      <MemberSignature Language="F#" Value="static member CheckParam : bool * string * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckParam (f, paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Boolean" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckParam">
      <MemberSignature Language="C#" Value="public static void CheckParam (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string paramName, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckParam(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckParam(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckParam (ctx As IExceptionContext, f As Boolean, paramName As String, msg As String)" />
      <MemberSignature Language="F#" Value="static member CheckParam : Microsoft.ML.Runtime.IExceptionContext * bool * string * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckParam (ctx, f, paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="f" Type="System.Boolean" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="f">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckParamValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CheckParamValue&lt;T&gt; (bool f, T value, string paramName, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckParamValue&lt;T&gt;(bool f, !!T value, string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckParamValue``1(System.Boolean,``0,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckParamValue(Of T) (f As Boolean, value As T, paramName As String, msg As String)" />
      <MemberSignature Language="F#" Value="static member CheckParamValue : bool * 'T * string * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckParamValue (f, value, paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="f" Type="System.Boolean" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="f">To be added.</param>
        <param name="value">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckParamValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CheckParamValue&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f, T value, string paramName, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckParamValue&lt;T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f, !!T value, string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckParamValue``1(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,``0,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckParamValue(Of T) (ctx As IExceptionContext, f As Boolean, value As T, paramName As String, msg As String)" />
      <MemberSignature Language="F#" Value="static member CheckParamValue : Microsoft.ML.Runtime.IExceptionContext * bool * 'T * string * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckParamValue (ctx, f, value, paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="f" Type="System.Boolean" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="ctx">To be added.</param>
        <param name="f">To be added.</param>
        <param name="value">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckRef&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T CheckRef&lt;T&gt; (T val, string paramName) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T CheckRef&lt;class T&gt;(!!T val, string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckRef``1(``0,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckRef(Of T As Class) (val As T, paramName As String) As T" />
      <MemberSignature Language="F#" Value="static member CheckRef : 'T * string -&gt; 'T (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.CheckRef (val, paramName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="val" Type="T" />
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="val">To be added.</param>
        <param name="paramName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckRef&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T CheckRef&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T val, string paramName) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T CheckRef&lt;class T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T val, string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckRef``1(Microsoft.ML.Runtime.IExceptionContext,``0,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckRef(Of T As Class) (ctx As IExceptionContext, val As T, paramName As String) As T" />
      <MemberSignature Language="F#" Value="static member CheckRef : Microsoft.ML.Runtime.IExceptionContext * 'T * string -&gt; 'T (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.CheckRef (ctx, val, paramName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="val" Type="T" />
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="ctx">To be added.</param>
        <param name="val">To be added.</param>
        <param name="paramName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckRef&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T CheckRef&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T val, string paramName, string msg) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T CheckRef&lt;class T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T val, string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckRef``1(Microsoft.ML.Runtime.IExceptionContext,``0,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckRef(Of T As Class) (ctx As IExceptionContext, val As T, paramName As String, msg As String) As T" />
      <MemberSignature Language="F#" Value="static member CheckRef : Microsoft.ML.Runtime.IExceptionContext * 'T * string * string -&gt; 'T (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.CheckRef (ctx, val, paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="val" Type="T" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="ctx">To be added.</param>
        <param name="val">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckUserArg">
      <MemberSignature Language="C#" Value="public static void CheckUserArg (bool f, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckUserArg(bool f, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckUserArg(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckUserArg (f As Boolean, name As String)" />
      <MemberSignature Language="F#" Value="static member CheckUserArg : bool * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckUserArg (f, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Boolean" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <param name="name">To be added.</param>
        <summary>
            CheckUserArg / ExceptUserArg should be used when the validation of user-provided arguments failed.
            Typically, this is shortly after the arguments are parsed using CmdParser.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckUserArg">
      <MemberSignature Language="C#" Value="public static void CheckUserArg (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckUserArg(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckUserArg(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckUserArg (ctx As IExceptionContext, f As Boolean, name As String)" />
      <MemberSignature Language="F#" Value="static member CheckUserArg : Microsoft.ML.Runtime.IExceptionContext * bool * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckUserArg (ctx, f, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="f" Type="System.Boolean" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="f">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckUserArg">
      <MemberSignature Language="C#" Value="public static void CheckUserArg (bool f, string name, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckUserArg(bool f, string name, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckUserArg(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckUserArg (f As Boolean, name As String, msg As String)" />
      <MemberSignature Language="F#" Value="static member CheckUserArg : bool * string * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckUserArg (f, name, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Boolean" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <param name="name">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckUserArg">
      <MemberSignature Language="C#" Value="public static void CheckUserArg (this Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string name, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckUserArg(class Microsoft.ML.Runtime.IExceptionContext ctx, bool f, string name, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckUserArg(Microsoft.ML.Runtime.IExceptionContext,System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckUserArg (ctx As IExceptionContext, f As Boolean, name As String, msg As String)" />
      <MemberSignature Language="F#" Value="static member CheckUserArg : Microsoft.ML.Runtime.IExceptionContext * bool * string * string -&gt; unit" Usage="Microsoft.ML.Runtime.Contracts.CheckUserArg (ctx, f, name, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="f" Type="System.Boolean" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="f">To be added.</param>
        <param name="name">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CheckValue&lt;T&gt; (T val, string paramName) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckValue&lt;class T&gt;(!!T val, string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckValue``1(``0,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckValue(Of T As Class) (val As T, paramName As String)" />
      <MemberSignature Language="F#" Value="static member CheckValue : 'T * string -&gt; unit (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.CheckValue (val, paramName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="val" Type="T" />
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="val">To be added.</param>
        <param name="paramName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CheckValue&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T val, string paramName) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckValue&lt;class T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T val, string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckValue``1(Microsoft.ML.Runtime.IExceptionContext,``0,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckValue(Of T As Class) (ctx As IExceptionContext, val As T, paramName As String)" />
      <MemberSignature Language="F#" Value="static member CheckValue : Microsoft.ML.Runtime.IExceptionContext * 'T * string -&gt; unit (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.CheckValue (ctx, val, paramName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="val" Type="T" />
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="ctx">To be added.</param>
        <param name="val">To be added.</param>
        <param name="paramName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T CheckValue&lt;T&gt; (T val, string paramName, string msg) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T CheckValue&lt;class T&gt;(!!T val, string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckValue``1(``0,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckValue(Of T As Class) (val As T, paramName As String, msg As String) As T" />
      <MemberSignature Language="F#" Value="static member CheckValue : 'T * string * string -&gt; 'T (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.CheckValue (val, paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="val" Type="T" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="val">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T CheckValue&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T val, string paramName, string msg) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T CheckValue&lt;class T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T val, string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckValue``1(Microsoft.ML.Runtime.IExceptionContext,``0,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckValue(Of T As Class) (ctx As IExceptionContext, val As T, paramName As String, msg As String) As T" />
      <MemberSignature Language="F#" Value="static member CheckValue : Microsoft.ML.Runtime.IExceptionContext * 'T * string * string -&gt; 'T (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.CheckValue (ctx, val, paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="val" Type="T" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="ctx">To be added.</param>
        <param name="val">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckValueOrNull&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CheckValueOrNull&lt;T&gt; (T val) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckValueOrNull&lt;class T&gt;(!!T val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckValueOrNull``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckValueOrNull(Of T As Class) (val As T)" />
      <MemberSignature Language="F#" Value="static member CheckValueOrNull : 'T -&gt; unit (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.CheckValueOrNull val" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("INVARIANT_CHECKS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="val" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="val">To be added.</param>
        <summary>
            This documents that the parameter can legally be null.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckValueOrNull&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CheckValueOrNull&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T val) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckValueOrNull&lt;class T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.CheckValueOrNull``1(Microsoft.ML.Runtime.IExceptionContext,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckValueOrNull(Of T As Class) (ctx As IExceptionContext, val As T)" />
      <MemberSignature Language="F#" Value="static member CheckValueOrNull : Microsoft.ML.Runtime.IExceptionContext * 'T -&gt; unit (requires 'T : null)" Usage="Microsoft.ML.Runtime.Contracts.CheckValueOrNull (ctx, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("INVARIANT_CHECKS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="val" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="ctx">To be added.</param>
        <param name="val">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public static Exception Except ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception Except() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Except" />
      <MemberSignature Language="VB.NET" Value="Public Function Except () As Exception" />
      <MemberSignature Language="F#" Value="static member Except : unit -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.Except " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Default exception type (currently InvalidOperationException)
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public static Exception Except (this Microsoft.ML.Runtime.IExceptionContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception Except(class Microsoft.ML.Runtime.IExceptionContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Except(Microsoft.ML.Runtime.IExceptionContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except (ctx As IExceptionContext) As Exception" />
      <MemberSignature Language="F#" Value="static member Except : Microsoft.ML.Runtime.IExceptionContext -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.Except ctx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public static Exception Except (string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception Except(string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Except(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Except (msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member Except : string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.Except msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public static Exception Except (this Microsoft.ML.Runtime.IExceptionContext ctx, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception Except(class Microsoft.ML.Runtime.IExceptionContext ctx, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Except(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except (ctx As IExceptionContext, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member Except : Microsoft.ML.Runtime.IExceptionContext * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.Except (ctx, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public static Exception Except (Exception inner, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception Except(class System.Exception inner, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Except(System.Exception,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Except (inner As Exception, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member Except : Exception * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.Except (inner, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inner" Type="System.Exception" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inner">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public static Exception Except (string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception Except(string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Except(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Except (msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member Except : string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.Except (msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public static Exception Except (this Microsoft.ML.Runtime.IExceptionContext ctx, Exception inner, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception Except(class Microsoft.ML.Runtime.IExceptionContext ctx, class System.Exception inner, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Except(Microsoft.ML.Runtime.IExceptionContext,System.Exception,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except (ctx As IExceptionContext, inner As Exception, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member Except : Microsoft.ML.Runtime.IExceptionContext * Exception * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.Except (ctx, inner, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="inner" Type="System.Exception" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="inner">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public static Exception Except (this Microsoft.ML.Runtime.IExceptionContext ctx, string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception Except(class Microsoft.ML.Runtime.IExceptionContext ctx, string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Except(Microsoft.ML.Runtime.IExceptionContext,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except (ctx As IExceptionContext, msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member Except : Microsoft.ML.Runtime.IExceptionContext * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.Except (ctx, msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public static Exception Except (Exception inner, string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception Except(class System.Exception inner, string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Except(System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Except (inner As Exception, msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member Except : Exception * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.Except (inner, msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inner" Type="System.Exception" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="inner">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public static Exception Except (this Microsoft.ML.Runtime.IExceptionContext ctx, Exception inner, string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception Except(class Microsoft.ML.Runtime.IExceptionContext ctx, class System.Exception inner, string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Except(Microsoft.ML.Runtime.IExceptionContext,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except (ctx As IExceptionContext, inner As Exception, msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member Except : Microsoft.ML.Runtime.IExceptionContext * Exception * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.Except (ctx, inner, msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="inner" Type="System.Exception" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="inner">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptDecode">
      <MemberSignature Language="C#" Value="public static Exception ExceptDecode ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptDecode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptDecode" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptDecode () As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptDecode : unit -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptDecode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            For signalling errors in decoding information, whether while reading from a file,
            parsing user input, etc.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptDecode">
      <MemberSignature Language="C#" Value="public static Exception ExceptDecode (this Microsoft.ML.Runtime.IExceptionContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptDecode(class Microsoft.ML.Runtime.IExceptionContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptDecode(Microsoft.ML.Runtime.IExceptionContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptDecode (ctx As IExceptionContext) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptDecode : Microsoft.ML.Runtime.IExceptionContext -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptDecode ctx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptDecode">
      <MemberSignature Language="C#" Value="public static Exception ExceptDecode (string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptDecode(string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptDecode (msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptDecode : string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptDecode msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptDecode">
      <MemberSignature Language="C#" Value="public static Exception ExceptDecode (this Microsoft.ML.Runtime.IExceptionContext ctx, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptDecode(class Microsoft.ML.Runtime.IExceptionContext ctx, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptDecode(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptDecode (ctx As IExceptionContext, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptDecode : Microsoft.ML.Runtime.IExceptionContext * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptDecode (ctx, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptDecode">
      <MemberSignature Language="C#" Value="public static Exception ExceptDecode (Exception inner, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptDecode(class System.Exception inner, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptDecode(System.Exception,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptDecode (inner As Exception, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptDecode : Exception * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptDecode (inner, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inner" Type="System.Exception" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inner">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptDecode">
      <MemberSignature Language="C#" Value="public static Exception ExceptDecode (string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptDecode(string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptDecode(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptDecode (msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptDecode : string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptDecode (msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptDecode">
      <MemberSignature Language="C#" Value="public static Exception ExceptDecode (this Microsoft.ML.Runtime.IExceptionContext ctx, Exception inner, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptDecode(class Microsoft.ML.Runtime.IExceptionContext ctx, class System.Exception inner, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptDecode(Microsoft.ML.Runtime.IExceptionContext,System.Exception,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptDecode (ctx As IExceptionContext, inner As Exception, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptDecode : Microsoft.ML.Runtime.IExceptionContext * Exception * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptDecode (ctx, inner, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="inner" Type="System.Exception" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="inner">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptDecode">
      <MemberSignature Language="C#" Value="public static Exception ExceptDecode (this Microsoft.ML.Runtime.IExceptionContext ctx, string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptDecode(class Microsoft.ML.Runtime.IExceptionContext ctx, string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptDecode(Microsoft.ML.Runtime.IExceptionContext,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptDecode (ctx As IExceptionContext, msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptDecode : Microsoft.ML.Runtime.IExceptionContext * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptDecode (ctx, msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptDecode">
      <MemberSignature Language="C#" Value="public static Exception ExceptDecode (Exception inner, string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptDecode(class System.Exception inner, string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptDecode(System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptDecode (inner As Exception, msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptDecode : Exception * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptDecode (inner, msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inner" Type="System.Exception" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="inner">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptDecode">
      <MemberSignature Language="C#" Value="public static Exception ExceptDecode (this Microsoft.ML.Runtime.IExceptionContext ctx, Exception inner, string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptDecode(class Microsoft.ML.Runtime.IExceptionContext ctx, class System.Exception inner, string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptDecode(Microsoft.ML.Runtime.IExceptionContext,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptDecode (ctx As IExceptionContext, inner As Exception, msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptDecode : Microsoft.ML.Runtime.IExceptionContext * Exception * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptDecode (ctx, inner, msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="inner" Type="System.Exception" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="inner">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptEmpty">
      <MemberSignature Language="C#" Value="public static Exception ExceptEmpty (string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptEmpty(string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptEmpty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptEmpty (paramName As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptEmpty : string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptEmpty paramName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">To be added.</param>
        <summary>
            For signalling null or empty function parameters (strings, arrays, collections, etc).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptEmpty">
      <MemberSignature Language="C#" Value="public static Exception ExceptEmpty (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptEmpty(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptEmpty(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptEmpty (ctx As IExceptionContext, paramName As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptEmpty : Microsoft.ML.Runtime.IExceptionContext * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptEmpty (ctx, paramName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="paramName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptEmpty">
      <MemberSignature Language="C#" Value="public static Exception ExceptEmpty (string paramName, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptEmpty(string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptEmpty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptEmpty (paramName As String, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptEmpty : string * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptEmpty (paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptEmpty">
      <MemberSignature Language="C#" Value="public static Exception ExceptEmpty (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptEmpty(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptEmpty(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptEmpty (ctx As IExceptionContext, paramName As String, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptEmpty : Microsoft.ML.Runtime.IExceptionContext * string * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptEmpty (ctx, paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptEmpty">
      <MemberSignature Language="C#" Value="public static Exception ExceptEmpty (string paramName, string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptEmpty(string paramName, string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptEmpty(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptEmpty (paramName As String, msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptEmpty : string * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptEmpty (paramName, msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptEmpty">
      <MemberSignature Language="C#" Value="public static Exception ExceptEmpty (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptEmpty(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptEmpty(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptEmpty (ctx As IExceptionContext, paramName As String, msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptEmpty : Microsoft.ML.Runtime.IExceptionContext * string * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptEmpty (ctx, paramName, msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptIO">
      <MemberSignature Language="C#" Value="public static Exception ExceptIO ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptIO() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptIO" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptIO () As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptIO : unit -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptIO " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            For signalling IO failures.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptIO">
      <MemberSignature Language="C#" Value="public static Exception ExceptIO (this Microsoft.ML.Runtime.IExceptionContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptIO(class Microsoft.ML.Runtime.IExceptionContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptIO(Microsoft.ML.Runtime.IExceptionContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptIO (ctx As IExceptionContext) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptIO : Microsoft.ML.Runtime.IExceptionContext -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptIO ctx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptIO">
      <MemberSignature Language="C#" Value="public static Exception ExceptIO (string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptIO(string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptIO(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptIO (msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptIO : string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptIO msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptIO">
      <MemberSignature Language="C#" Value="public static Exception ExceptIO (this Microsoft.ML.Runtime.IExceptionContext ctx, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptIO(class Microsoft.ML.Runtime.IExceptionContext ctx, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptIO(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptIO (ctx As IExceptionContext, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptIO : Microsoft.ML.Runtime.IExceptionContext * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptIO (ctx, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptIO">
      <MemberSignature Language="C#" Value="public static Exception ExceptIO (Exception inner, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptIO(class System.Exception inner, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptIO(System.Exception,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptIO (inner As Exception, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptIO : Exception * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptIO (inner, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inner" Type="System.Exception" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inner">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptIO">
      <MemberSignature Language="C#" Value="public static Exception ExceptIO (string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptIO(string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptIO(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptIO (msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptIO : string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptIO (msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptIO">
      <MemberSignature Language="C#" Value="public static Exception ExceptIO (this Microsoft.ML.Runtime.IExceptionContext ctx, Exception inner, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptIO(class Microsoft.ML.Runtime.IExceptionContext ctx, class System.Exception inner, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptIO(Microsoft.ML.Runtime.IExceptionContext,System.Exception,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptIO (ctx As IExceptionContext, inner As Exception, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptIO : Microsoft.ML.Runtime.IExceptionContext * Exception * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptIO (ctx, inner, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="inner" Type="System.Exception" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="inner">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptIO">
      <MemberSignature Language="C#" Value="public static Exception ExceptIO (this Microsoft.ML.Runtime.IExceptionContext ctx, string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptIO(class Microsoft.ML.Runtime.IExceptionContext ctx, string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptIO(Microsoft.ML.Runtime.IExceptionContext,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptIO (ctx As IExceptionContext, msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptIO : Microsoft.ML.Runtime.IExceptionContext * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptIO (ctx, msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptIO">
      <MemberSignature Language="C#" Value="public static Exception ExceptIO (Exception inner, string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptIO(class System.Exception inner, string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptIO(System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptIO (inner As Exception, msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptIO : Exception * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptIO (inner, msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inner" Type="System.Exception" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="inner">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptIO">
      <MemberSignature Language="C#" Value="public static Exception ExceptIO (this Microsoft.ML.Runtime.IExceptionContext ctx, Exception inner, string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptIO(class Microsoft.ML.Runtime.IExceptionContext ctx, class System.Exception inner, string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptIO(Microsoft.ML.Runtime.IExceptionContext,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptIO (ctx As IExceptionContext, inner As Exception, msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptIO : Microsoft.ML.Runtime.IExceptionContext * Exception * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptIO (ctx, inner, msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="inner" Type="System.Exception" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="inner">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptNotImpl">
      <MemberSignature Language="C#" Value="public static Exception ExceptNotImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptNotImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptNotImpl" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptNotImpl () As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptNotImpl : unit -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptNotImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            For signalling functionality that is not YET implemented.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptNotImpl">
      <MemberSignature Language="C#" Value="public static Exception ExceptNotImpl (this Microsoft.ML.Runtime.IExceptionContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptNotImpl(class Microsoft.ML.Runtime.IExceptionContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptNotImpl(Microsoft.ML.Runtime.IExceptionContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptNotImpl (ctx As IExceptionContext) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptNotImpl : Microsoft.ML.Runtime.IExceptionContext -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptNotImpl ctx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptNotImpl">
      <MemberSignature Language="C#" Value="public static Exception ExceptNotImpl (string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptNotImpl(string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptNotImpl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptNotImpl (msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptNotImpl : string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptNotImpl msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptNotImpl">
      <MemberSignature Language="C#" Value="public static Exception ExceptNotImpl (this Microsoft.ML.Runtime.IExceptionContext ctx, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptNotImpl(class Microsoft.ML.Runtime.IExceptionContext ctx, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptNotImpl(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptNotImpl (ctx As IExceptionContext, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptNotImpl : Microsoft.ML.Runtime.IExceptionContext * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptNotImpl (ctx, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptNotImpl">
      <MemberSignature Language="C#" Value="public static Exception ExceptNotImpl (string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptNotImpl(string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptNotImpl(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptNotImpl (msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptNotImpl : string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptNotImpl (msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptNotImpl">
      <MemberSignature Language="C#" Value="public static Exception ExceptNotImpl (this Microsoft.ML.Runtime.IExceptionContext ctx, string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptNotImpl(class Microsoft.ML.Runtime.IExceptionContext ctx, string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptNotImpl(Microsoft.ML.Runtime.IExceptionContext,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptNotImpl (ctx As IExceptionContext, msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptNotImpl : Microsoft.ML.Runtime.IExceptionContext * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptNotImpl (ctx, msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptNotSupp">
      <MemberSignature Language="C#" Value="public static Exception ExceptNotSupp ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptNotSupp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptNotSupp" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptNotSupp () As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptNotSupp : unit -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptNotSupp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            For signalling functionality that is not implemented by design.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptNotSupp">
      <MemberSignature Language="C#" Value="public static Exception ExceptNotSupp (this Microsoft.ML.Runtime.IExceptionContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptNotSupp(class Microsoft.ML.Runtime.IExceptionContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptNotSupp(Microsoft.ML.Runtime.IExceptionContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptNotSupp (ctx As IExceptionContext) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptNotSupp : Microsoft.ML.Runtime.IExceptionContext -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptNotSupp ctx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptNotSupp">
      <MemberSignature Language="C#" Value="public static Exception ExceptNotSupp (string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptNotSupp(string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptNotSupp(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptNotSupp (msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptNotSupp : string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptNotSupp msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptNotSupp">
      <MemberSignature Language="C#" Value="public static Exception ExceptNotSupp (this Microsoft.ML.Runtime.IExceptionContext ctx, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptNotSupp(class Microsoft.ML.Runtime.IExceptionContext ctx, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptNotSupp(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptNotSupp (ctx As IExceptionContext, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptNotSupp : Microsoft.ML.Runtime.IExceptionContext * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptNotSupp (ctx, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptNotSupp">
      <MemberSignature Language="C#" Value="public static Exception ExceptNotSupp (string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptNotSupp(string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptNotSupp(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptNotSupp (msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptNotSupp : string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptNotSupp (msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptNotSupp">
      <MemberSignature Language="C#" Value="public static Exception ExceptNotSupp (this Microsoft.ML.Runtime.IExceptionContext ctx, string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptNotSupp(class Microsoft.ML.Runtime.IExceptionContext ctx, string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptNotSupp(Microsoft.ML.Runtime.IExceptionContext,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptNotSupp (ctx As IExceptionContext, msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptNotSupp : Microsoft.ML.Runtime.IExceptionContext * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptNotSupp (ctx, msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptParam">
      <MemberSignature Language="C#" Value="public static Exception ExceptParam (string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptParam(string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptParam(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptParam (paramName As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptParam : string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptParam paramName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">To be added.</param>
        <summary>
            For signalling bad function parameters.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptParam">
      <MemberSignature Language="C#" Value="public static Exception ExceptParam (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptParam(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptParam(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptParam (ctx As IExceptionContext, paramName As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptParam : Microsoft.ML.Runtime.IExceptionContext * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptParam (ctx, paramName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="paramName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptParam">
      <MemberSignature Language="C#" Value="public static Exception ExceptParam (string paramName, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptParam(string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptParam(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptParam (paramName As String, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptParam : string * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptParam (paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptParam">
      <MemberSignature Language="C#" Value="public static Exception ExceptParam (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptParam(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptParam(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptParam (ctx As IExceptionContext, paramName As String, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptParam : Microsoft.ML.Runtime.IExceptionContext * string * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptParam (ctx, paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptParam">
      <MemberSignature Language="C#" Value="public static Exception ExceptParam (string paramName, string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptParam(string paramName, string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptParam(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptParam (paramName As String, msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptParam : string * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptParam (paramName, msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptParam">
      <MemberSignature Language="C#" Value="public static Exception ExceptParam (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptParam(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptParam(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptParam (ctx As IExceptionContext, paramName As String, msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptParam : Microsoft.ML.Runtime.IExceptionContext * string * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptParam (ctx, paramName, msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptParamValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Exception ExceptParamValue&lt;T&gt; (T value, string paramName, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptParamValue&lt;T&gt;(!!T value, string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptParamValue``1(``0,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptParamValue(Of T) (value As T, paramName As String, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptParamValue : 'T * string * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptParamValue (value, paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="value">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptParamValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Exception ExceptParamValue&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T value, string paramName, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptParamValue&lt;T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T value, string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptParamValue``1(Microsoft.ML.Runtime.IExceptionContext,``0,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptParamValue(Of T) (ctx As IExceptionContext, value As T, paramName As String, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptParamValue : Microsoft.ML.Runtime.IExceptionContext * 'T * string * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptParamValue (ctx, value, paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="ctx">To be added.</param>
        <param name="value">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptParamValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Exception ExceptParamValue&lt;T&gt; (T value, string paramName, string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptParamValue&lt;T&gt;(!!T value, string paramName, string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptParamValue``1(``0,System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptParamValue(Of T) (value As T, paramName As String, msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptParamValue : 'T * string * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptParamValue (value, paramName, msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="value">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptParamValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Exception ExceptParamValue&lt;T&gt; (this Microsoft.ML.Runtime.IExceptionContext ctx, T value, string paramName, string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptParamValue&lt;T&gt;(class Microsoft.ML.Runtime.IExceptionContext ctx, !!T value, string paramName, string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptParamValue``1(Microsoft.ML.Runtime.IExceptionContext,``0,System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptParamValue(Of T) (ctx As IExceptionContext, value As T, paramName As String, msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptParamValue : Microsoft.ML.Runtime.IExceptionContext * 'T * string * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptParamValue (ctx, value, paramName, msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="ctx">To be added.</param>
        <param name="value">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptSchemaMismatch">
      <MemberSignature Language="C#" Value="public static Exception ExceptSchemaMismatch (string paramName, string columnRole, string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptSchemaMismatch(string paramName, string columnRole, string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptSchemaMismatch(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptSchemaMismatch (paramName As String, columnRole As String, columnName As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptSchemaMismatch : string * string * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptSchemaMismatch (paramName, columnRole, columnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="columnRole" Type="System.String" />
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">To be added.</param>
        <param name="columnRole">To be added.</param>
        <param name="columnName">To be added.</param>
        <summary>
            For signalling schema validation issues.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptSchemaMismatch">
      <MemberSignature Language="C#" Value="public static Exception ExceptSchemaMismatch (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string columnRole, string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptSchemaMismatch(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string columnRole, string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptSchemaMismatch(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptSchemaMismatch (ctx As IExceptionContext, paramName As String, columnRole As String, columnName As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptSchemaMismatch : Microsoft.ML.Runtime.IExceptionContext * string * string * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptSchemaMismatch (ctx, paramName, columnRole, columnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="columnRole" Type="System.String" />
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="columnRole">To be added.</param>
        <param name="columnName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptSchemaMismatch">
      <MemberSignature Language="C#" Value="public static Exception ExceptSchemaMismatch (string paramName, string columnRole, string columnName, string expectedType, string actualType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptSchemaMismatch(string paramName, string columnRole, string columnName, string expectedType, string actualType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptSchemaMismatch(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptSchemaMismatch (paramName As String, columnRole As String, columnName As String, expectedType As String, actualType As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptSchemaMismatch : string * string * string * string * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptSchemaMismatch (paramName, columnRole, columnName, expectedType, actualType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="columnRole" Type="System.String" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="expectedType" Type="System.String" />
        <Parameter Name="actualType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">To be added.</param>
        <param name="columnRole">To be added.</param>
        <param name="columnName">To be added.</param>
        <param name="expectedType">To be added.</param>
        <param name="actualType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptSchemaMismatch">
      <MemberSignature Language="C#" Value="public static Exception ExceptSchemaMismatch (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string columnRole, string columnName, string expectedType, string actualType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptSchemaMismatch(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string columnRole, string columnName, string expectedType, string actualType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptSchemaMismatch(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptSchemaMismatch (ctx As IExceptionContext, paramName As String, columnRole As String, columnName As String, expectedType As String, actualType As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptSchemaMismatch : Microsoft.ML.Runtime.IExceptionContext * string * string * string * string * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptSchemaMismatch (ctx, paramName, columnRole, columnName, expectedType, actualType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="columnRole" Type="System.String" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="expectedType" Type="System.String" />
        <Parameter Name="actualType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="columnRole">To be added.</param>
        <param name="columnName">To be added.</param>
        <param name="expectedType">To be added.</param>
        <param name="actualType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptUserArg">
      <MemberSignature Language="C#" Value="public static Exception ExceptUserArg (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptUserArg(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptUserArg(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptUserArg (name As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptUserArg : string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptUserArg name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>
            For signalling bad user input.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptUserArg">
      <MemberSignature Language="C#" Value="public static Exception ExceptUserArg (this Microsoft.ML.Runtime.IExceptionContext ctx, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptUserArg(class Microsoft.ML.Runtime.IExceptionContext ctx, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptUserArg(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptUserArg (ctx As IExceptionContext, name As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptUserArg : Microsoft.ML.Runtime.IExceptionContext * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptUserArg (ctx, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptUserArg">
      <MemberSignature Language="C#" Value="public static Exception ExceptUserArg (string name, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptUserArg(string name, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptUserArg(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptUserArg (name As String, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptUserArg : string * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptUserArg (name, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptUserArg">
      <MemberSignature Language="C#" Value="public static Exception ExceptUserArg (this Microsoft.ML.Runtime.IExceptionContext ctx, string name, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptUserArg(class Microsoft.ML.Runtime.IExceptionContext ctx, string name, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptUserArg(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptUserArg (ctx As IExceptionContext, name As String, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptUserArg : Microsoft.ML.Runtime.IExceptionContext * string * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptUserArg (ctx, name, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="name">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptUserArg">
      <MemberSignature Language="C#" Value="public static Exception ExceptUserArg (string name, string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptUserArg(string name, string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptUserArg(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptUserArg (name As String, msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptUserArg : string * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptUserArg (name, msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptUserArg">
      <MemberSignature Language="C#" Value="public static Exception ExceptUserArg (this Microsoft.ML.Runtime.IExceptionContext ctx, string name, string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptUserArg(class Microsoft.ML.Runtime.IExceptionContext ctx, string name, string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptUserArg(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptUserArg (ctx As IExceptionContext, name As String, msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptUserArg : Microsoft.ML.Runtime.IExceptionContext * string * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptUserArg (ctx, name, msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="name">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptValue">
      <MemberSignature Language="C#" Value="public static Exception ExceptValue (string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptValue(string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptValue (paramName As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptValue : string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptValue paramName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">To be added.</param>
        <summary>
            For signalling null function parameters.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptValue">
      <MemberSignature Language="C#" Value="public static Exception ExceptValue (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptValue(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptValue(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptValue (ctx As IExceptionContext, paramName As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptValue : Microsoft.ML.Runtime.IExceptionContext * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptValue (ctx, paramName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="paramName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptValue">
      <MemberSignature Language="C#" Value="public static Exception ExceptValue (string paramName, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptValue(string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptValue(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptValue (paramName As String, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptValue : string * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptValue (paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptValue">
      <MemberSignature Language="C#" Value="public static Exception ExceptValue (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptValue(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptValue(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptValue (ctx As IExceptionContext, paramName As String, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptValue : Microsoft.ML.Runtime.IExceptionContext * string * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptValue (ctx, paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptValue">
      <MemberSignature Language="C#" Value="public static Exception ExceptValue (string paramName, string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptValue(string paramName, string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptValue(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptValue (paramName As String, msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptValue : string * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptValue (paramName, msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptValue">
      <MemberSignature Language="C#" Value="public static Exception ExceptValue (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptValue(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptValue(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptValue (ctx As IExceptionContext, paramName As String, msg As String, ParamArray args As Object()) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptValue : Microsoft.ML.Runtime.IExceptionContext * string * string * obj[] -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptValue (ctx, paramName, msg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptWhiteSpace">
      <MemberSignature Language="C#" Value="public static Exception ExceptWhiteSpace (string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptWhiteSpace(string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptWhiteSpace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptWhiteSpace (paramName As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptWhiteSpace : string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptWhiteSpace paramName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">To be added.</param>
        <summary>
            For signalling null, empty or white-space function parameters (strings, arrays, collections, etc).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptWhiteSpace">
      <MemberSignature Language="C#" Value="public static Exception ExceptWhiteSpace (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptWhiteSpace(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptWhiteSpace(Microsoft.ML.Runtime.IExceptionContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptWhiteSpace (ctx As IExceptionContext, paramName As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptWhiteSpace : Microsoft.ML.Runtime.IExceptionContext * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptWhiteSpace (ctx, paramName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="paramName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptWhiteSpace">
      <MemberSignature Language="C#" Value="public static Exception ExceptWhiteSpace (string paramName, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptWhiteSpace(string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptWhiteSpace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExceptWhiteSpace (paramName As String, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptWhiteSpace : string * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptWhiteSpace (paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptWhiteSpace">
      <MemberSignature Language="C#" Value="public static Exception ExceptWhiteSpace (this Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ExceptWhiteSpace(class Microsoft.ML.Runtime.IExceptionContext ctx, string paramName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.ExceptWhiteSpace(Microsoft.ML.Runtime.IExceptionContext,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExceptWhiteSpace (ctx As IExceptionContext, paramName As String, msg As String) As Exception" />
      <MemberSignature Language="F#" Value="static member ExceptWhiteSpace : Microsoft.ML.Runtime.IExceptionContext * string * string -&gt; Exception" Usage="Microsoft.ML.Runtime.Contracts.ExceptWhiteSpace (ctx, paramName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="paramName">To be added.</param>
        <param name="msg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarked">
      <MemberSignature Language="C#" Value="public static bool IsMarked (this Exception ex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMarked(class System.Exception ex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.IsMarked(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsMarked (ex As Exception) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsMarked : Exception -&gt; bool" Usage="Microsoft.ML.Runtime.Contracts.IsMarked ex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" RefType="this" />
      </Parameters>
      <Docs>
        <param name="ex">To be added.</param>
        <summary>
            Indicates whether the exception was "marked" the Contracts code.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarkedKey">
      <MemberSignature Language="C#" Value="public const string IsMarkedKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IsMarkedKey" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Contracts.IsMarkedKey" />
      <MemberSignature Language="VB.NET" Value="Public Const IsMarkedKey As String " />
      <MemberSignature Language="F#" Value="val mutable IsMarkedKey : string" Usage="Microsoft.ML.Runtime.Contracts.IsMarkedKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mark&lt;TException&gt;">
      <MemberSignature Language="C#" Value="public static TException Mark&lt;TException&gt; (TException ex) where TException : Exception;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TException Mark&lt;(class System.Exception) TException&gt;(!!TException ex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Mark``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mark(Of TException As Exception) (ex As TException) As TException" />
      <MemberSignature Language="F#" Value="static member Mark : 'Exception -&gt; 'Exception (requires 'Exception :&gt; Exception)" Usage="Microsoft.ML.Runtime.Contracts.Mark ex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TException</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TException">
          <Constraints>
            <BaseTypeName>System.Exception</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="ex" Type="TException" />
      </Parameters>
      <Docs>
        <typeparam name="TException">To be added.</typeparam>
        <param name="ex">To be added.</param>
        <summary>
            Mark the exception by setting <see cref="F:Microsoft.ML.Runtime.Contracts.IsMarkedKey" /> in the exception
            <see cref="P:System.Exception.Data" /> to 1.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkSensitive&lt;TException&gt;">
      <MemberSignature Language="C#" Value="public static TException MarkSensitive&lt;TException&gt; (this TException ex, Microsoft.ML.Runtime.MessageSensitivity sensitivity) where TException : Exception;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TException MarkSensitive&lt;(class System.Exception) TException&gt;(!!TException ex, valuetype Microsoft.ML.Runtime.MessageSensitivity sensitivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.MarkSensitive``1(``0,Microsoft.ML.Runtime.MessageSensitivity)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function MarkSensitive(Of TException As Exception) (ex As TException, sensitivity As MessageSensitivity) As TException" />
      <MemberSignature Language="F#" Value="static member MarkSensitive : 'Exception * Microsoft.ML.Runtime.MessageSensitivity -&gt; 'Exception (requires 'Exception :&gt; Exception)" Usage="Microsoft.ML.Runtime.Contracts.MarkSensitive (ex, sensitivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TException</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TException">
          <Constraints>
            <BaseTypeName>System.Exception</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="ex" Type="TException" RefType="this" />
        <Parameter Name="sensitivity" Type="Microsoft.ML.Runtime.MessageSensitivity" />
      </Parameters>
      <Docs>
        <typeparam name="TException">To be added.</typeparam>
        <param name="ex">To be added.</param>
        <param name="sensitivity">To be added.</param>
        <summary>
            Exceptions whose message communicates potentially sensitive information should be
            marked using this method, before they are thrown. Note that if the exception already
            had this flag set, the message will be flagged with the bitwise or of the existing
            flag, alongside the passed in sensivity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotSensitive">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.IExceptionContext NotSensitive ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.IExceptionContext NotSensitive() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.NotSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Function NotSensitive () As IExceptionContext" />
      <MemberSignature Language="F#" Value="static member NotSensitive : unit -&gt; Microsoft.ML.Runtime.IExceptionContext" Usage="Microsoft.ML.Runtime.Contracts.NotSensitive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IExceptionContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            A convenience context for marking exceptions from checks and excepts with <see cref="F:Microsoft.ML.Runtime.MessageSensitivity.None" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotSensitive">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.IExceptionContext NotSensitive (this Microsoft.ML.Runtime.IExceptionContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.IExceptionContext NotSensitive(class Microsoft.ML.Runtime.IExceptionContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.NotSensitive(Microsoft.ML.Runtime.IExceptionContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NotSensitive (ctx As IExceptionContext) As IExceptionContext" />
      <MemberSignature Language="F#" Value="static member NotSensitive : Microsoft.ML.Runtime.IExceptionContext -&gt; Microsoft.ML.Runtime.IExceptionContext" Usage="Microsoft.ML.Runtime.Contracts.NotSensitive ctx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IExceptionContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>
            A convenience context for marking exceptions from checks and excepts with <see cref="F:Microsoft.ML.Runtime.MessageSensitivity.None" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Process&lt;TException&gt;">
      <MemberSignature Language="C#" Value="public static TException Process&lt;TException&gt; (this TException ex, Microsoft.ML.Runtime.IExceptionContext ectx = null) where TException : Exception;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TException Process&lt;(class System.Exception) TException&gt;(!!TException ex, class Microsoft.ML.Runtime.IExceptionContext ectx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Process``1(``0,Microsoft.ML.Runtime.IExceptionContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Process(Of TException As Exception) (ex As TException, Optional ectx As IExceptionContext = null) As TException" />
      <MemberSignature Language="F#" Value="static member Process : 'Exception * Microsoft.ML.Runtime.IExceptionContext -&gt; 'Exception (requires 'Exception :&gt; Exception)" Usage="Microsoft.ML.Runtime.Contracts.Process (ex, ectx)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TException</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TException">
          <Constraints>
            <BaseTypeName>System.Exception</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="ex" Type="TException" RefType="this" />
        <Parameter Name="ectx" Type="Microsoft.ML.Runtime.IExceptionContext" />
      </Parameters>
      <Docs>
        <typeparam name="TException">To be added.</typeparam>
        <param name="ex">To be added.</param>
        <param name="ectx">To be added.</param>
        <summary>
            Does standard processing of an exception (typically called after construction
            but before it is thrown).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaSensitive">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.IExceptionContext SchemaSensitive ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.IExceptionContext SchemaSensitive() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.SchemaSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Function SchemaSensitive () As IExceptionContext" />
      <MemberSignature Language="F#" Value="static member SchemaSensitive : unit -&gt; Microsoft.ML.Runtime.IExceptionContext" Usage="Microsoft.ML.Runtime.Contracts.SchemaSensitive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IExceptionContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            A convenience context for marking exceptions from checks and excepts with <see cref="F:Microsoft.ML.Runtime.MessageSensitivity.Schema" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaSensitive">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.IExceptionContext SchemaSensitive (this Microsoft.ML.Runtime.IExceptionContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.IExceptionContext SchemaSensitive(class Microsoft.ML.Runtime.IExceptionContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.SchemaSensitive(Microsoft.ML.Runtime.IExceptionContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SchemaSensitive (ctx As IExceptionContext) As IExceptionContext" />
      <MemberSignature Language="F#" Value="static member SchemaSensitive : Microsoft.ML.Runtime.IExceptionContext -&gt; Microsoft.ML.Runtime.IExceptionContext" Usage="Microsoft.ML.Runtime.Contracts.SchemaSensitive ctx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IExceptionContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>
            A convenience context for marking exceptions from checks and excepts with <see cref="F:Microsoft.ML.Runtime.MessageSensitivity.Schema" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sensitivity">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.MessageSensitivity Sensitivity (this Exception ex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.ML.Runtime.MessageSensitivity Sensitivity(class System.Exception ex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.Sensitivity(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sensitivity (ex As Exception) As MessageSensitivity" />
      <MemberSignature Language="F#" Value="static member Sensitivity : Exception -&gt; Microsoft.ML.Runtime.MessageSensitivity" Usage="Microsoft.ML.Runtime.Contracts.Sensitivity ex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.MessageSensitivity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" RefType="this" />
      </Parameters>
      <Docs>
        <param name="ex">The exception to query</param>
        <summary>
            This is a convenience method to get the sensitivity of an exception,
            as encoded with <see cref="F:Microsoft.ML.Runtime.Contracts.SensitivityKey" />. If there is no key, then
            the message is assumed to be of unknown sensitivity, i.e., it is assumed
            that it might contain literally anything.
            </summary>
        <returns>The value encoded at the <see cref="F:Microsoft.ML.Runtime.Contracts.SensitivityKey" />, if it is
            a <see cref="T:Microsoft.ML.Runtime.MessageSensitivity" /> value. If neither of these conditions
            hold then <see cref="F:Microsoft.ML.Runtime.MessageSensitivity.Unknown" /> is returned.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SensitivityKey">
      <MemberSignature Language="C#" Value="public const string SensitivityKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SensitivityKey" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Contracts.SensitivityKey" />
      <MemberSignature Language="VB.NET" Value="Public Const SensitivityKey As String " />
      <MemberSignature Language="F#" Value="val mutable SensitivityKey : string" Usage="Microsoft.ML.Runtime.Contracts.SensitivityKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAssertHandler">
      <MemberSignature Language="C#" Value="public static Action&lt;string,Microsoft.ML.Runtime.IExceptionContext&gt; SetAssertHandler (Action&lt;string,Microsoft.ML.Runtime.IExceptionContext&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`2&lt;string, class Microsoft.ML.Runtime.IExceptionContext&gt; SetAssertHandler(class System.Action`2&lt;string, class Microsoft.ML.Runtime.IExceptionContext&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.SetAssertHandler(System.Action{System.String,Microsoft.ML.Runtime.IExceptionContext})" />
      <MemberSignature Language="VB.NET" Value="Public Function SetAssertHandler (handler As Action(Of String, IExceptionContext)) As Action(Of String, IExceptionContext)" />
      <MemberSignature Language="F#" Value="static member SetAssertHandler : Action&lt;string, Microsoft.ML.Runtime.IExceptionContext&gt; -&gt; Action&lt;string, Microsoft.ML.Runtime.IExceptionContext&gt;" Usage="Microsoft.ML.Runtime.Contracts.SetAssertHandler handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.String,Microsoft.ML.Runtime.IExceptionContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Action&lt;System.String,Microsoft.ML.Runtime.IExceptionContext&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">To be added.</param>
        <summary>
            Sets the assert handler to the given function, returning the previous handler.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserSensitive">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.IExceptionContext UserSensitive ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.IExceptionContext UserSensitive() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.UserSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Function UserSensitive () As IExceptionContext" />
      <MemberSignature Language="F#" Value="static member UserSensitive : unit -&gt; Microsoft.ML.Runtime.IExceptionContext" Usage="Microsoft.ML.Runtime.Contracts.UserSensitive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IExceptionContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            A convenience context for marking exceptions from checks and excepts with <see cref="F:Microsoft.ML.Runtime.MessageSensitivity.UserData" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserSensitive">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.IExceptionContext UserSensitive (this Microsoft.ML.Runtime.IExceptionContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.IExceptionContext UserSensitive(class Microsoft.ML.Runtime.IExceptionContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Contracts.UserSensitive(Microsoft.ML.Runtime.IExceptionContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UserSensitive (ctx As IExceptionContext) As IExceptionContext" />
      <MemberSignature Language="F#" Value="static member UserSensitive : Microsoft.ML.Runtime.IExceptionContext -&gt; Microsoft.ML.Runtime.IExceptionContext" Usage="Microsoft.ML.Runtime.Contracts.UserSensitive ctx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IExceptionContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.IExceptionContext" RefType="this" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>
            A convenience context for marking exceptions from checks and excepts with <see cref="F:Microsoft.ML.Runtime.MessageSensitivity.UserData" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>