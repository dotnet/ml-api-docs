<Type Name="ComponentCatalog" FullName="Microsoft.ML.Runtime.ComponentCatalog">
  <TypeSignature Language="C#" Value="public static class ComponentCatalog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ComponentCatalog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.ComponentCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Module ComponentCatalog" />
  <TypeSignature Language="F#" Value="type ComponentCatalog = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This catalogs instantiatable components (aka, loadable classes). Components are registered via
            a descendant of <see cref="T:Microsoft.ML.Runtime.LoadableClassAttributeBase" />, identifying the names and signature types under which the component
            type should be registered. Signatures are delegate types that return void and specify that parameter
            types for component instantiation. Each component may also specify an "arguments object" that should
            be provided at instantiation time. Typically the arguments object is populated via the <see cref="T:Microsoft.ML.Runtime.CommandLine.CmdParser" />
            from a <see cref="T:Microsoft.ML.Runtime.CommandLine.SubComponent" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CacheClassesExtra">
      <MemberSignature Language="C#" Value="public static void CacheClassesExtra (string[] assemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CacheClassesExtra(string[] assemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.CacheClassesExtra(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub CacheClassesExtra (assemblies As String())" />
      <MemberSignature Language="F#" Value="static member CacheClassesExtra : string[] -&gt; unit" Usage="Microsoft.ML.Runtime.ComponentCatalog.CacheClassesExtra assemblies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblies" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assemblies">To be added.</param>
        <summary>
            Make sure the given assemblies are loaded and that their loadable classes have been catalogued.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance&lt;TRes,TSig&gt;">
      <MemberSignature Language="C#" Value="public static TRes CreateInstance&lt;TRes,TSig&gt; (this Microsoft.ML.Runtime.CommandLine.SubComponent&lt;TRes,TSig&gt; comp, Microsoft.ML.Runtime.IHostEnvironment env) where TRes : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TRes CreateInstance&lt;class TRes, TSig&gt;(class Microsoft.ML.Runtime.CommandLine.SubComponent`2&lt;!!TRes, !!TSig&gt; comp, class Microsoft.ML.Runtime.IHostEnvironment env) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.CreateInstance``2(Microsoft.ML.Runtime.CommandLine.SubComponent{``0,``1},Microsoft.ML.Runtime.IHostEnvironment)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateInstance(Of TRes As Class, TSig As Class) (comp As SubComponent(Of TRes, TSig), env As IHostEnvironment) As TRes" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Microsoft.ML.Runtime.CommandLine.SubComponent&lt;'Res, 'Sig (requires 'Res : null)&gt; * Microsoft.ML.Runtime.IHostEnvironment -&gt; 'Res (requires 'Res : null)" Usage="Microsoft.ML.Runtime.ComponentCatalog.CreateInstance (comp, env)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TRes</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRes">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TSig" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comp" Type="Microsoft.ML.Runtime.CommandLine.SubComponent&lt;TRes,TSig&gt;" RefType="this" />
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
      </Parameters>
      <Docs>
        <typeparam name="TRes">To be added.</typeparam>
        <typeparam name="TSig">To be added.</typeparam>
        <param name="comp">To be added.</param>
        <param name="env">To be added.</param>
        <summary>
            Create an instance of the indicated component.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance&lt;TRes,TSig&gt;">
      <MemberSignature Language="C#" Value="public static TRes CreateInstance&lt;TRes,TSig&gt; (this Microsoft.ML.Runtime.CommandLine.SubComponent&lt;TRes,TSig&gt; comp, Microsoft.ML.Runtime.IHostEnvironment env, params object[] extra) where TRes : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TRes CreateInstance&lt;class TRes, TSig&gt;(class Microsoft.ML.Runtime.CommandLine.SubComponent`2&lt;!!TRes, !!TSig&gt; comp, class Microsoft.ML.Runtime.IHostEnvironment env, object[] extra) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.CreateInstance``2(Microsoft.ML.Runtime.CommandLine.SubComponent{``0,``1},Microsoft.ML.Runtime.IHostEnvironment,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateInstance(Of TRes As Class, TSig As Class) (comp As SubComponent(Of TRes, TSig), env As IHostEnvironment, ParamArray extra As Object()) As TRes" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Microsoft.ML.Runtime.CommandLine.SubComponent&lt;'Res, 'Sig (requires 'Res : null)&gt; * Microsoft.ML.Runtime.IHostEnvironment * obj[] -&gt; 'Res (requires 'Res : null)" Usage="Microsoft.ML.Runtime.ComponentCatalog.CreateInstance (comp, env, extra)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TRes</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRes">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TSig" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comp" Type="Microsoft.ML.Runtime.CommandLine.SubComponent&lt;TRes,TSig&gt;" RefType="this" />
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="extra" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TRes">To be added.</typeparam>
        <typeparam name="TSig">To be added.</typeparam>
        <param name="comp">To be added.</param>
        <param name="env">To be added.</param>
        <param name="extra">To be added.</param>
        <summary>
            Create an instance of the indicated component with the given extra parameters.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance&lt;TRes,TSig&gt;">
      <MemberSignature Language="C#" Value="public static TRes CreateInstance&lt;TRes,TSig&gt; (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.CommandLine.SubComponent comp, params object[] extra) where TRes : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TRes CreateInstance&lt;class TRes, TSig&gt;(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.CommandLine.SubComponent comp, object[] extra) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.CreateInstance``2(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.CommandLine.SubComponent,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance(Of TRes As Class, TSig As Class) (env As IHostEnvironment, comp As SubComponent, ParamArray extra As Object()) As TRes" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.CommandLine.SubComponent * obj[] -&gt; 'Res (requires 'Res : null)" Usage="Microsoft.ML.Runtime.ComponentCatalog.CreateInstance (env, comp, extra)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TRes</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRes">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TSig" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="comp" Type="Microsoft.ML.Runtime.CommandLine.SubComponent" />
        <Parameter Name="extra" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TRes">To be added.</typeparam>
        <typeparam name="TSig">To be added.</typeparam>
        <param name="env">To be added.</param>
        <param name="comp">To be added.</param>
        <param name="extra">To be added.</param>
        <summary>
            Create an instance of the indicated component with the given extra parameters.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugLevel">
      <MemberSignature Language="C#" Value="public static int DebugLevel;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 DebugLevel" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.ComponentCatalog.DebugLevel" />
      <MemberSignature Language="VB.NET" Value="Public DebugLevel As Integer " />
      <MemberSignature Language="F#" Value=" staticval mutable DebugLevel : int" Usage="Microsoft.ML.Runtime.ComponentCatalog.DebugLevel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Debug reporting level.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePrefixesToAvoid">
      <MemberSignature Language="C#" Value="public static string[] FilePrefixesToAvoid;" />
      <MemberSignature Language="ILAsm" Value=".field public static string[] FilePrefixesToAvoid" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.ComponentCatalog.FilePrefixesToAvoid" />
      <MemberSignature Language="VB.NET" Value="Public FilePrefixesToAvoid As String() " />
      <MemberSignature Language="F#" Value=" staticval mutable FilePrefixesToAvoid : string[]" Usage="Microsoft.ML.Runtime.ComponentCatalog.FilePrefixesToAvoid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindLoadableClasses">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo[] FindLoadableClasses (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.ComponentCatalog/LoadableClassInfo[] FindLoadableClasses(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.FindLoadableClasses(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLoadableClasses (name As String) As ComponentCatalog.LoadableClassInfo()" />
      <MemberSignature Language="F#" Value="static member FindLoadableClasses : string -&gt; Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo[]" Usage="Microsoft.ML.Runtime.ComponentCatalog.FindLoadableClasses name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.ComponentCatalog+LoadableClassInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindLoadableClasses&lt;TSig&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo[] FindLoadableClasses&lt;TSig&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.ComponentCatalog/LoadableClassInfo[] FindLoadableClasses&lt;TSig&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.FindLoadableClasses``1" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLoadableClasses(Of TSig) () As ComponentCatalog.LoadableClassInfo()" />
      <MemberSignature Language="F#" Value="static member FindLoadableClasses : unit -&gt; Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo[]" Usage="Microsoft.ML.Runtime.ComponentCatalog.FindLoadableClasses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.ComponentCatalog+LoadableClassInfo[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSig" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TSig">To be added.</typeparam>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindLoadableClasses&lt;TArgs,TSig&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo[] FindLoadableClasses&lt;TArgs,TSig&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.ComponentCatalog/LoadableClassInfo[] FindLoadableClasses&lt;TArgs, TSig&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.FindLoadableClasses``2" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLoadableClasses(Of TArgs, TSig) () As ComponentCatalog.LoadableClassInfo()" />
      <MemberSignature Language="F#" Value="static member FindLoadableClasses : unit -&gt; Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo[]" Usage="Microsoft.ML.Runtime.ComponentCatalog.FindLoadableClasses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.ComponentCatalog+LoadableClassInfo[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArgs" />
        <TypeParameter Name="TSig" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TArgs">To be added.</typeparam>
        <typeparam name="TSig">To be added.</typeparam>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllClasses">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo[] GetAllClasses (string[] assemblies = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.ComponentCatalog/LoadableClassInfo[] GetAllClasses(string[] assemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.GetAllClasses(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllClasses (Optional assemblies As String() = null) As ComponentCatalog.LoadableClassInfo()" />
      <MemberSignature Language="F#" Value="static member GetAllClasses : string[] -&gt; Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo[]" Usage="Microsoft.ML.Runtime.ComponentCatalog.GetAllClasses assemblies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.ComponentCatalog+LoadableClassInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblies" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assemblies">To be added.</param>
        <summary>
            Return an array containing information for all instantiatable components.
            If provided, the given set of assemblies is loaded first.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllDerivedClasses">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo[] GetAllDerivedClasses (Type typeBase, Type typeSig, string[] assemblies = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.ComponentCatalog/LoadableClassInfo[] GetAllDerivedClasses(class System.Type typeBase, class System.Type typeSig, string[] assemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.GetAllDerivedClasses(System.Type,System.Type,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDerivedClasses (typeBase As Type, typeSig As Type, Optional assemblies As String() = null) As ComponentCatalog.LoadableClassInfo()" />
      <MemberSignature Language="F#" Value="static member GetAllDerivedClasses : Type * Type * string[] -&gt; Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo[]" Usage="Microsoft.ML.Runtime.ComponentCatalog.GetAllDerivedClasses (typeBase, typeSig, assemblies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.ComponentCatalog+LoadableClassInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeBase" Type="System.Type" />
        <Parameter Name="typeSig" Type="System.Type" />
        <Parameter Name="assemblies" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="typeBase">To be added.</param>
        <param name="typeSig">To be added.</param>
        <param name="assemblies">To be added.</param>
        <summary>
            Return an array containing information for instantiatable components with the given
            signature and base type. If provided, the given set of assemblies is loaded first.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllSignatureTypes">
      <MemberSignature Language="C#" Value="public static Type[] GetAllSignatureTypes (string[] assemblies = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type[] GetAllSignatureTypes(string[] assemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.GetAllSignatureTypes(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllSignatureTypes (Optional assemblies As String() = null) As Type()" />
      <MemberSignature Language="F#" Value="static member GetAllSignatureTypes : string[] -&gt; Type[]" Usage="Microsoft.ML.Runtime.ComponentCatalog.GetAllSignatureTypes assemblies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblies" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assemblies">To be added.</param>
        <summary>
            Return an array containing all the known signature types. If provided, the given set of assemblies
            is loaded first.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadableClassInfo&lt;TSig&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo GetLoadableClassInfo&lt;TSig&gt; (string loadName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.ComponentCatalog/LoadableClassInfo GetLoadableClassInfo&lt;TSig&gt;(string loadName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.GetLoadableClassInfo``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadableClassInfo(Of TSig) (loadName As String) As ComponentCatalog.LoadableClassInfo" />
      <MemberSignature Language="F#" Value="static member GetLoadableClassInfo : string -&gt; Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo" Usage="Microsoft.ML.Runtime.ComponentCatalog.GetLoadableClassInfo loadName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.ComponentCatalog+LoadableClassInfo</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSig" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="loadName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TSig">To be added.</typeparam>
        <param name="loadName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadableClassInfo&lt;TRes,TSig&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo GetLoadableClassInfo&lt;TRes,TSig&gt; (Microsoft.ML.Runtime.CommandLine.SubComponent&lt;TRes,TSig&gt; sub) where TRes : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.ComponentCatalog/LoadableClassInfo GetLoadableClassInfo&lt;class TRes, TSig&gt;(class Microsoft.ML.Runtime.CommandLine.SubComponent`2&lt;!!TRes, !!TSig&gt; sub) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.GetLoadableClassInfo``2(Microsoft.ML.Runtime.CommandLine.SubComponent{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadableClassInfo(Of TRes As Class, TSig As Class) (sub As SubComponent(Of TRes, TSig)) As ComponentCatalog.LoadableClassInfo" />
      <MemberSignature Language="F#" Value="static member GetLoadableClassInfo : Microsoft.ML.Runtime.CommandLine.SubComponent&lt;'Res, 'Sig (requires 'Res : null)&gt; -&gt; Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo (requires 'Res : null)" Usage="Microsoft.ML.Runtime.ComponentCatalog.GetLoadableClassInfo sub" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.ComponentCatalog+LoadableClassInfo</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRes">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TSig" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="sub" Type="Microsoft.ML.Runtime.CommandLine.SubComponent&lt;TRes,TSig&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRes">To be added.</typeparam>
        <typeparam name="TSig">To be added.</typeparam>
        <param name="sub">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadAssembly (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadAssembly(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.LoadAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadAssembly (path As String) As Assembly" />
      <MemberSignature Language="F#" Value="static member LoadAssembly : string -&gt; System.Reflection.Assembly" Usage="Microsoft.ML.Runtime.ComponentCatalog.LoadAssembly path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>
            Given an assembly path, load the assembly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureToString">
      <MemberSignature Language="C#" Value="public static string SignatureToString (Type sig);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SignatureToString(class System.Type sig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.SignatureToString(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignatureToString (sig As Type) As String" />
      <MemberSignature Language="F#" Value="static member SignatureToString : Type -&gt; string" Usage="Microsoft.ML.Runtime.ComponentCatalog.SignatureToString sig" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sig" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="sig">To be added.</param>
        <summary>
            Returns a string name for a given signature type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateInstance&lt;TRes,TSig&gt;">
      <MemberSignature Language="C#" Value="public static bool TryCreateInstance&lt;TRes,TSig&gt; (Microsoft.ML.Runtime.IHostEnvironment env, out TRes result, Microsoft.ML.Runtime.CommandLine.SubComponent comp, params object[] extra) where TRes : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreateInstance&lt;class TRes, TSig&gt;(class Microsoft.ML.Runtime.IHostEnvironment env, [out] !!TRes&amp; result, class Microsoft.ML.Runtime.CommandLine.SubComponent comp, object[] extra) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.TryCreateInstance``2(Microsoft.ML.Runtime.IHostEnvironment,``0@,Microsoft.ML.Runtime.CommandLine.SubComponent,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function TryCreateInstance(Of TRes As Class, TSig As Class) (env As IHostEnvironment, ByRef result As TRes, comp As SubComponent, ParamArray extra As Object()) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryCreateInstance : Microsoft.ML.Runtime.IHostEnvironment *  * Microsoft.ML.Runtime.CommandLine.SubComponent * obj[] -&gt; bool (requires 'Res : null)" Usage="Microsoft.ML.Runtime.ComponentCatalog.TryCreateInstance (env, result, comp, extra)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRes">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TSig" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="result" Type="TRes&amp;" RefType="out" />
        <Parameter Name="comp" Type="Microsoft.ML.Runtime.CommandLine.SubComponent" />
        <Parameter Name="extra" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TRes">To be added.</typeparam>
        <typeparam name="TSig">To be added.</typeparam>
        <param name="env">To be added.</param>
        <param name="result">To be added.</param>
        <param name="comp">To be added.</param>
        <param name="extra">To be added.</param>
        <summary>
            Try to create an instance of the indicated component with the given extra parameters. If there is no
            such component in the catalog, returns false. Any other error results in an exception.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateInstance&lt;TRes,TSig&gt;">
      <MemberSignature Language="C#" Value="public static bool TryCreateInstance&lt;TRes,TSig&gt; (Microsoft.ML.Runtime.IHostEnvironment env, out TRes result, Microsoft.ML.Runtime.CommandLine.SubComponent&lt;TRes,TSig&gt; comp, params object[] extra) where TRes : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreateInstance&lt;class TRes, TSig&gt;(class Microsoft.ML.Runtime.IHostEnvironment env, [out] !!TRes&amp; result, class Microsoft.ML.Runtime.CommandLine.SubComponent`2&lt;!!TRes, !!TSig&gt; comp, object[] extra) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.TryCreateInstance``2(Microsoft.ML.Runtime.IHostEnvironment,``0@,Microsoft.ML.Runtime.CommandLine.SubComponent{``0,``1},System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function TryCreateInstance(Of TRes As Class, TSig As Class) (env As IHostEnvironment, ByRef result As TRes, comp As SubComponent(Of TRes, TSig), ParamArray extra As Object()) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryCreateInstance : Microsoft.ML.Runtime.IHostEnvironment *  * Microsoft.ML.Runtime.CommandLine.SubComponent&lt;'Res, 'Sig (requires 'Res : null)&gt; * obj[] -&gt; bool (requires 'Res : null)" Usage="Microsoft.ML.Runtime.ComponentCatalog.TryCreateInstance (env, result, comp, extra)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRes">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TSig" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="result" Type="TRes&amp;" RefType="out" />
        <Parameter Name="comp" Type="Microsoft.ML.Runtime.CommandLine.SubComponent&lt;TRes,TSig&gt;" />
        <Parameter Name="extra" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TRes">To be added.</typeparam>
        <typeparam name="TSig">To be added.</typeparam>
        <param name="env">To be added.</param>
        <param name="result">To be added.</param>
        <param name="comp">To be added.</param>
        <param name="extra">To be added.</param>
        <summary>
            Try to create an instance of the indicated component with the given extra parameters. If there is no
            such component in the catalog, returns false. Any other error results in an exception.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateInstance&lt;TRes,TSig&gt;">
      <MemberSignature Language="C#" Value="public static bool TryCreateInstance&lt;TRes,TSig&gt; (Microsoft.ML.Runtime.IHostEnvironment env, out TRes result, string name, string options, params object[] extra) where TRes : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreateInstance&lt;class TRes, TSig&gt;(class Microsoft.ML.Runtime.IHostEnvironment env, [out] !!TRes&amp; result, string name, string options, object[] extra) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.TryCreateInstance``2(Microsoft.ML.Runtime.IHostEnvironment,``0@,System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function TryCreateInstance(Of TRes As Class, TSig As Class) (env As IHostEnvironment, ByRef result As TRes, name As String, options As String, ParamArray extra As Object()) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryCreateInstance : Microsoft.ML.Runtime.IHostEnvironment *  * string * string * obj[] -&gt; bool (requires 'Res : null)" Usage="Microsoft.ML.Runtime.ComponentCatalog.TryCreateInstance (env, result, name, options, extra)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRes">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TSig" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="result" Type="TRes&amp;" RefType="out" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="options" Type="System.String" />
        <Parameter Name="extra" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TRes">To be added.</typeparam>
        <typeparam name="TSig">To be added.</typeparam>
        <param name="env">To be added.</param>
        <param name="result">To be added.</param>
        <param name="name">To be added.</param>
        <param name="options">To be added.</param>
        <param name="extra">To be added.</param>
        <summary>
            Try to create an instance of the indicated component and settings with the given extra parameters.
            If there is no such component in the catalog, returns false. Any other error results in an exception.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>