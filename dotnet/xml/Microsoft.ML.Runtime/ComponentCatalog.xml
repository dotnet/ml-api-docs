<Type Name="ComponentCatalog" FullName="Microsoft.ML.Runtime.ComponentCatalog">
  <TypeSignature Language="C#" Value="public sealed class ComponentCatalog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ComponentCatalog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.ComponentCatalog" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ComponentCatalog" />
  <TypeSignature Language="F#" Value="type ComponentCatalog = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This catalogs instantiatable components (aka, loadable classes). Components are registered via
            a descendant of <see cref="T:Microsoft.ML.Runtime.LoadableClassAttributeBase" />, identifying the names and signature types under which the component
            type should be registered. Signatures are delegate types that return void and specify that parameter
            types for component instantiation. Each component may also specify an "arguments object" that should
            be provided at instantiation time.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AllEntryPoints">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.ComponentCatalog.EntryPointInfo&gt; AllEntryPoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.ML.Runtime.ComponentCatalog/EntryPointInfo&gt; AllEntryPoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.AllEntryPoints" />
      <MemberSignature Language="VB.NET" Value="Public Function AllEntryPoints () As IEnumerable(Of ComponentCatalog.EntryPointInfo)" />
      <MemberSignature Language="F#" Value="member this.AllEntryPoints : unit -&gt; seq&lt;Microsoft.ML.Runtime.ComponentCatalog.EntryPointInfo&gt;" Usage="componentCatalog.AllEntryPoints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.ComponentCatalog+EntryPointInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get all registered entry points.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance&lt;TRes&gt;">
      <MemberSignature Language="C#" Value="public static TRes CreateInstance&lt;TRes&gt; (Microsoft.ML.Runtime.IHostEnvironment env, Type signatureType, string name, string options, params object[] extra) where TRes : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TRes CreateInstance&lt;class TRes&gt;(class Microsoft.ML.Runtime.IHostEnvironment env, class System.Type signatureType, string name, string options, object[] extra) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.CreateInstance``1(Microsoft.ML.Runtime.IHostEnvironment,System.Type,System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance(Of TRes As Class) (env As IHostEnvironment, signatureType As Type, name As String, options As String, ParamArray extra As Object()) As TRes" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Microsoft.ML.Runtime.IHostEnvironment * Type * string * string * obj[] -&gt; 'Res (requires 'Res : null)" Usage="Microsoft.ML.Runtime.ComponentCatalog.CreateInstance (env, signatureType, name, options, extra)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TRes</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRes">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="signatureType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="options" Type="System.String" />
        <Parameter Name="extra" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TRes">To be added.</typeparam>
        <param name="env">To be added.</param>
        <param name="signatureType">To be added.</param>
        <param name="name">To be added.</param>
        <param name="options">To be added.</param>
        <param name="extra">To be added.</param>
        <summary>
            Create an instance of the indicated component with the given extra parameters.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindLoadableClasses">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo[] FindLoadableClasses (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.ComponentCatalog/LoadableClassInfo[] FindLoadableClasses(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.FindLoadableClasses(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLoadableClasses (name As String) As ComponentCatalog.LoadableClassInfo()" />
      <MemberSignature Language="F#" Value="member this.FindLoadableClasses : string -&gt; Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo[]" Usage="componentCatalog.FindLoadableClasses name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.ComponentCatalog+LoadableClassInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindLoadableClasses&lt;TSig&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo[] FindLoadableClasses&lt;TSig&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.ComponentCatalog/LoadableClassInfo[] FindLoadableClasses&lt;TSig&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.FindLoadableClasses``1" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLoadableClasses(Of TSig) () As ComponentCatalog.LoadableClassInfo()" />
      <MemberSignature Language="F#" Value="member this.FindLoadableClasses : unit -&gt; Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo[]" Usage="componentCatalog.FindLoadableClasses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.ComponentCatalog+LoadableClassInfo[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSig" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TSig">To be added.</typeparam>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindLoadableClasses&lt;TArgs,TSig&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo[] FindLoadableClasses&lt;TArgs,TSig&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.ComponentCatalog/LoadableClassInfo[] FindLoadableClasses&lt;TArgs, TSig&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.FindLoadableClasses``2" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLoadableClasses(Of TArgs, TSig) () As ComponentCatalog.LoadableClassInfo()" />
      <MemberSignature Language="F#" Value="member this.FindLoadableClasses : unit -&gt; Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo[]" Usage="componentCatalog.FindLoadableClasses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.ComponentCatalog+LoadableClassInfo[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArgs" />
        <TypeParameter Name="TSig" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TArgs">To be added.</typeparam>
        <typeparam name="TSig">To be added.</typeparam>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllClasses">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo[] GetAllClasses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.ComponentCatalog/LoadableClassInfo[] GetAllClasses() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.GetAllClasses" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllClasses () As ComponentCatalog.LoadableClassInfo()" />
      <MemberSignature Language="F#" Value="member this.GetAllClasses : unit -&gt; Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo[]" Usage="componentCatalog.GetAllClasses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.ComponentCatalog+LoadableClassInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Return an array containing information for all instantiatable components.
            If provided, the given set of assemblies is loaded first.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllComponentKinds">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; GetAllComponentKinds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetAllComponentKinds() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.GetAllComponentKinds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllComponentKinds () As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="member this.GetAllComponentKinds : unit -&gt; seq&lt;string&gt;" Usage="componentCatalog.GetAllComponentKinds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns all valid component kinds.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllComponents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.ComponentCatalog.ComponentInfo&gt; GetAllComponents (string kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.ML.Runtime.ComponentCatalog/ComponentInfo&gt; GetAllComponents(string kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.GetAllComponents(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllComponents (kind As String) As IEnumerable(Of ComponentCatalog.ComponentInfo)" />
      <MemberSignature Language="F#" Value="member this.GetAllComponents : string -&gt; seq&lt;Microsoft.ML.Runtime.ComponentCatalog.ComponentInfo&gt;" Usage="componentCatalog.GetAllComponents kind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.ComponentCatalog+ComponentInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>
            Returns all components of the specified kind.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllComponents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.ComponentCatalog.ComponentInfo&gt; GetAllComponents (Type interfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.ML.Runtime.ComponentCatalog/ComponentInfo&gt; GetAllComponents(class System.Type interfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.GetAllComponents(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllComponents (interfaceType As Type) As IEnumerable(Of ComponentCatalog.ComponentInfo)" />
      <MemberSignature Language="F#" Value="member this.GetAllComponents : Type -&gt; seq&lt;Microsoft.ML.Runtime.ComponentCatalog.ComponentInfo&gt;" Usage="componentCatalog.GetAllComponents interfaceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Runtime.ComponentCatalog+ComponentInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="interfaceType">To be added.</param>
        <summary>
            Returns all components that implement the specified interface.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllDerivedClasses">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo[] GetAllDerivedClasses (Type typeBase, Type typeSig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.ComponentCatalog/LoadableClassInfo[] GetAllDerivedClasses(class System.Type typeBase, class System.Type typeSig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.GetAllDerivedClasses(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDerivedClasses (typeBase As Type, typeSig As Type) As ComponentCatalog.LoadableClassInfo()" />
      <MemberSignature Language="F#" Value="member this.GetAllDerivedClasses : Type * Type -&gt; Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo[]" Usage="componentCatalog.GetAllDerivedClasses (typeBase, typeSig)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.ComponentCatalog+LoadableClassInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeBase" Type="System.Type" />
        <Parameter Name="typeSig" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeBase">To be added.</param>
        <param name="typeSig">To be added.</param>
        <summary>
            Return an array containing information for instantiatable components with the given
            signature and base type. If provided, the given set of assemblies is loaded first.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllSignatureTypes">
      <MemberSignature Language="C#" Value="public Type[] GetAllSignatureTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type[] GetAllSignatureTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.GetAllSignatureTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllSignatureTypes () As Type()" />
      <MemberSignature Language="F#" Value="member this.GetAllSignatureTypes : unit -&gt; Type[]" Usage="componentCatalog.GetAllSignatureTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Return an array containing all the known signature types. If provided, the given set of assemblies
            is loaded first.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadableClassInfo">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo GetLoadableClassInfo (string loadName, Type signatureType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.ComponentCatalog/LoadableClassInfo GetLoadableClassInfo(string loadName, class System.Type signatureType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.GetLoadableClassInfo(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadableClassInfo (loadName As String, signatureType As Type) As ComponentCatalog.LoadableClassInfo" />
      <MemberSignature Language="F#" Value="member this.GetLoadableClassInfo : string * Type -&gt; Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo" Usage="componentCatalog.GetLoadableClassInfo (loadName, signatureType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.ComponentCatalog+LoadableClassInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loadName" Type="System.String" />
        <Parameter Name="signatureType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="loadName">To be added.</param>
        <param name="signatureType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadableClassInfo&lt;TSig&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo GetLoadableClassInfo&lt;TSig&gt; (string loadName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.ComponentCatalog/LoadableClassInfo GetLoadableClassInfo&lt;TSig&gt;(string loadName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.GetLoadableClassInfo``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadableClassInfo(Of TSig) (loadName As String) As ComponentCatalog.LoadableClassInfo" />
      <MemberSignature Language="F#" Value="member this.GetLoadableClassInfo : string -&gt; Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo" Usage="componentCatalog.GetLoadableClassInfo loadName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.ComponentCatalog+LoadableClassInfo</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSig" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="loadName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TSig">To be added.</typeparam>
        <param name="loadName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterAssembly">
      <MemberSignature Language="C#" Value="public void RegisterAssembly (System.Reflection.Assembly assembly, bool throwOnError = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterAssembly(class System.Reflection.Assembly assembly, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.RegisterAssembly(System.Reflection.Assembly,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.RegisterAssembly : System.Reflection.Assembly * bool -&gt; unit" Usage="componentCatalog.RegisterAssembly (assembly, throwOnError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="assembly">
            The assembly to register.
            </param>
        <param name="throwOnError">
            true to throw an exception if there are errors with registering the components;
            false to skip any errors.
            </param>
        <summary>
            Registers all the components in the specified assembly by looking for loadable classes
            and adding them to the catalog.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureToString">
      <MemberSignature Language="C#" Value="public static string SignatureToString (Type sig);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SignatureToString(class System.Type sig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.SignatureToString(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignatureToString (sig As Type) As String" />
      <MemberSignature Language="F#" Value="static member SignatureToString : Type -&gt; string" Usage="Microsoft.ML.Runtime.ComponentCatalog.SignatureToString sig" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sig" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="sig">To be added.</param>
        <summary>
            Returns a string name for a given signature type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateInstance&lt;TRes,TSig&gt;">
      <MemberSignature Language="C#" Value="public static bool TryCreateInstance&lt;TRes,TSig&gt; (Microsoft.ML.Runtime.IHostEnvironment env, out TRes result, string name, string options, params object[] extra) where TRes : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreateInstance&lt;class TRes, TSig&gt;(class Microsoft.ML.Runtime.IHostEnvironment env, [out] !!TRes&amp; result, string name, string options, object[] extra) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.TryCreateInstance``2(Microsoft.ML.Runtime.IHostEnvironment,``0@,System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreateInstance(Of TRes As Class, TSig As Class) (env As IHostEnvironment, ByRef result As TRes, name As String, options As String, ParamArray extra As Object()) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryCreateInstance : Microsoft.ML.Runtime.IHostEnvironment *  * string * string * obj[] -&gt; bool (requires 'Res : null)" Usage="Microsoft.ML.Runtime.ComponentCatalog.TryCreateInstance (env, result, name, options, extra)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRes">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TSig" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="result" Type="TRes" RefType="out" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="options" Type="System.String" />
        <Parameter Name="extra" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TRes">To be added.</typeparam>
        <typeparam name="TSig">To be added.</typeparam>
        <param name="env">To be added.</param>
        <param name="result">To be added.</param>
        <param name="name">To be added.</param>
        <param name="options">To be added.</param>
        <param name="extra">To be added.</param>
        <summary>
            Try to create an instance of the indicated component and settings with the given extra parameters.
            If there is no such component in the catalog, returns false. Any other error results in an exception.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFindComponent">
      <MemberSignature Language="C#" Value="public bool TryFindComponent (Type argumentType, out Microsoft.ML.Runtime.ComponentCatalog.ComponentInfo component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFindComponent(class System.Type argumentType, [out] class Microsoft.ML.Runtime.ComponentCatalog/ComponentInfo&amp; component) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.TryFindComponent(System.Type,Microsoft.ML.Runtime.ComponentCatalog.ComponentInfo@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFindComponent (argumentType As Type, ByRef component As ComponentCatalog.ComponentInfo) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFindComponent : Type *  -&gt; bool" Usage="componentCatalog.TryFindComponent (argumentType, component)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argumentType" Type="System.Type" />
        <Parameter Name="component" Type="Microsoft.ML.Runtime.ComponentCatalog+ComponentInfo" RefType="out" />
      </Parameters>
      <Docs>
        <param name="argumentType">To be added.</param>
        <param name="component">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFindComponent">
      <MemberSignature Language="C#" Value="public bool TryFindComponent (string kind, string alias, out Microsoft.ML.Runtime.ComponentCatalog.ComponentInfo component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFindComponent(string kind, string alias, [out] class Microsoft.ML.Runtime.ComponentCatalog/ComponentInfo&amp; component) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.TryFindComponent(System.String,System.String,Microsoft.ML.Runtime.ComponentCatalog.ComponentInfo@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFindComponent (kind As String, alias As String, ByRef component As ComponentCatalog.ComponentInfo) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFindComponent : string * string *  -&gt; bool" Usage="componentCatalog.TryFindComponent (kind, alias, component)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="alias" Type="System.String" />
        <Parameter Name="component" Type="Microsoft.ML.Runtime.ComponentCatalog+ComponentInfo" RefType="out" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <param name="alias">To be added.</param>
        <param name="component">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFindComponent">
      <MemberSignature Language="C#" Value="public bool TryFindComponent (Type interfaceType, string alias, out Microsoft.ML.Runtime.ComponentCatalog.ComponentInfo component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFindComponent(class System.Type interfaceType, string alias, [out] class Microsoft.ML.Runtime.ComponentCatalog/ComponentInfo&amp; component) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.TryFindComponent(System.Type,System.String,Microsoft.ML.Runtime.ComponentCatalog.ComponentInfo@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFindComponent (interfaceType As Type, alias As String, ByRef component As ComponentCatalog.ComponentInfo) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFindComponent : Type * string *  -&gt; bool" Usage="componentCatalog.TryFindComponent (interfaceType, alias, component)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceType" Type="System.Type" />
        <Parameter Name="alias" Type="System.String" />
        <Parameter Name="component" Type="Microsoft.ML.Runtime.ComponentCatalog+ComponentInfo" RefType="out" />
      </Parameters>
      <Docs>
        <param name="interfaceType">To be added.</param>
        <param name="alias">To be added.</param>
        <param name="component">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFindComponent">
      <MemberSignature Language="C#" Value="public bool TryFindComponent (Type interfaceType, Type argumentType, out Microsoft.ML.Runtime.ComponentCatalog.ComponentInfo component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFindComponent(class System.Type interfaceType, class System.Type argumentType, [out] class Microsoft.ML.Runtime.ComponentCatalog/ComponentInfo&amp; component) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.TryFindComponent(System.Type,System.Type,Microsoft.ML.Runtime.ComponentCatalog.ComponentInfo@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFindComponent (interfaceType As Type, argumentType As Type, ByRef component As ComponentCatalog.ComponentInfo) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFindComponent : Type * Type *  -&gt; bool" Usage="componentCatalog.TryFindComponent (interfaceType, argumentType, component)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceType" Type="System.Type" />
        <Parameter Name="argumentType" Type="System.Type" />
        <Parameter Name="component" Type="Microsoft.ML.Runtime.ComponentCatalog+ComponentInfo" RefType="out" />
      </Parameters>
      <Docs>
        <param name="interfaceType">To be added.</param>
        <param name="argumentType">To be added.</param>
        <param name="component">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFindComponentCaseInsensitive">
      <MemberSignature Language="C#" Value="public bool TryFindComponentCaseInsensitive (Type interfaceType, string alias, out Microsoft.ML.Runtime.ComponentCatalog.ComponentInfo component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFindComponentCaseInsensitive(class System.Type interfaceType, string alias, [out] class Microsoft.ML.Runtime.ComponentCatalog/ComponentInfo&amp; component) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.TryFindComponentCaseInsensitive(System.Type,System.String,Microsoft.ML.Runtime.ComponentCatalog.ComponentInfo@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFindComponentCaseInsensitive (interfaceType As Type, alias As String, ByRef component As ComponentCatalog.ComponentInfo) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFindComponentCaseInsensitive : Type * string *  -&gt; bool" Usage="componentCatalog.TryFindComponentCaseInsensitive (interfaceType, alias, component)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceType" Type="System.Type" />
        <Parameter Name="alias" Type="System.String" />
        <Parameter Name="component" Type="Microsoft.ML.Runtime.ComponentCatalog+ComponentInfo" RefType="out" />
      </Parameters>
      <Docs>
        <param name="interfaceType">To be added.</param>
        <param name="alias">To be added.</param>
        <param name="component">To be added.</param>
        <summary>
            Akin to <see cref="M:Microsoft.ML.Runtime.ComponentCatalog.TryFindComponent(System.Type,System.String,Microsoft.ML.Runtime.ComponentCatalog.ComponentInfo@)" />, except if the regular (case sensitive) comparison fails, it will
            attempt to back off to a case-insensitive comparison.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFindEntryPoint">
      <MemberSignature Language="C#" Value="public bool TryFindEntryPoint (string name, out Microsoft.ML.Runtime.ComponentCatalog.EntryPointInfo entryPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFindEntryPoint(string name, [out] class Microsoft.ML.Runtime.ComponentCatalog/EntryPointInfo&amp; entryPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.TryFindEntryPoint(System.String,Microsoft.ML.Runtime.ComponentCatalog.EntryPointInfo@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFindEntryPoint (name As String, ByRef entryPoint As ComponentCatalog.EntryPointInfo) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFindEntryPoint : string *  -&gt; bool" Usage="componentCatalog.TryFindEntryPoint (name, entryPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="entryPoint" Type="Microsoft.ML.Runtime.ComponentCatalog+EntryPointInfo" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="entryPoint">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetComponentKind">
      <MemberSignature Language="C#" Value="public bool TryGetComponentKind (Type signatureType, out string kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetComponentKind(class System.Type signatureType, [out] string&amp; kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.TryGetComponentKind(System.Type,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetComponentKind (signatureType As Type, ByRef kind As String) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryGetComponentKind : Type *  -&gt; bool" Usage="componentCatalog.TryGetComponentKind (signatureType, kind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signatureType" Type="System.Type" />
        <Parameter Name="kind" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="signatureType">To be added.</param>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetComponentShortName">
      <MemberSignature Language="C#" Value="public bool TryGetComponentShortName (Type type, out string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetComponentShortName(class System.Type type, [out] string&amp; name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.ComponentCatalog.TryGetComponentShortName(System.Type,System.String@)" />
      <MemberSignature Language="F#" Value="member this.TryGetComponentShortName : Type *  -&gt; bool" Usage="componentCatalog.TryGetComponentShortName (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>