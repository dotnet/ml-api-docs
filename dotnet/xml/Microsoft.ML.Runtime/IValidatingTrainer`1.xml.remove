<Type Name="IValidatingTrainer&lt;TDataSet&gt;" FullName="Microsoft.ML.Runtime.IValidatingTrainer&lt;TDataSet&gt;">
  <TypeSignature Language="C#" Value="public interface IValidatingTrainer&lt;in TDataSet&gt; : Microsoft.ML.Runtime.ITrainer&lt;in TDataSet&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IValidatingTrainer`1&lt;- TDataSet&gt; implements class Microsoft.ML.Runtime.ITrainer, class Microsoft.ML.Runtime.ITrainer`1&lt;!TDataSet&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.IValidatingTrainer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IValidatingTrainer(Of In TDataSet)&#xA;Implements ITrainer(Of In TDataSet)" />
  <TypeSignature Language="F#" Value="type IValidatingTrainer&lt;'DataSet&gt; = interface&#xA;    interface ITrainer&lt;'DataSet&gt;&#xA;    interface ITrainer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TDataSet">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.ITrainer&lt;TDataSet&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TDataSet">To be added.</typeparam>
    <summary>
            Trainers that want data to do their own validation implement this interface.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Train">
      <MemberSignature Language="C#" Value="public void Train (TDataSet data, TDataSet validData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Train(!TDataSet data, !TDataSet validData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.IValidatingTrainer`1.Train(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Train (data As TDataSet, validData As TDataSet)" />
      <MemberSignature Language="F#" Value="abstract member Train : 'DataSet * 'DataSet -&gt; unit" Usage="iValidatingTrainer.Train (data, validData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="TDataSet" />
        <Parameter Name="validData" Type="TDataSet" />
      </Parameters>
      <Docs>
        <param name="data">Training dataset</param>
        <param name="validData">Validation dataset</param>
        <summary>
            Trains a predictor using the specified dataset.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
