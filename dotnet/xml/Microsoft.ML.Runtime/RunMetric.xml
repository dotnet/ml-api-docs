<Type Name="RunMetric" FullName="Microsoft.ML.Runtime.RunMetric">
  <TypeSignature Language="C#" Value="public sealed class RunMetric" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RunMetric extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.RunMetric" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RunMetric" />
  <TypeSignature Language="F#" Value="type RunMetric = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class RunMetric sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class RunMetric sealed" />
  <TypeSignature Language="C++ WINRT" Value="class RunMetric sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The metric class, used by smart sweeping algorithms.
            Ideally we would like to move towards the new IDataView/ISchematized, this is 
            just a simple view instead, and it is decoupled from RunResult so we can move 
            in that direction in the future.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RunMetric (float primaryMetric, System.Collections.Generic.IEnumerable&lt;float&gt; metricDistribution = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 primaryMetric, class System.Collections.Generic.IEnumerable`1&lt;float32&gt; metricDistribution) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.RunMetric.#ctor(System.Single,System.Collections.Generic.IEnumerable{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (primaryMetric As Single, Optional metricDistribution As IEnumerable(Of Single) = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.RunMetric : single * seq&lt;single&gt; -&gt; Microsoft.ML.Runtime.RunMetric" Usage="new Microsoft.ML.Runtime.RunMetric (primaryMetric, metricDistribution)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="primaryMetric" Type="System.Single" />
        <Parameter Name="metricDistribution" Type="System.Collections.Generic.IEnumerable&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="primaryMetric">To be added.</param>
        <param name="metricDistribution">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetricDistribution">
      <MemberSignature Language="C#" Value="public float[] GetMetricDistribution ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32[] GetMetricDistribution() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.RunMetric.GetMetricDistribution" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetricDistribution () As Single()" />
      <MemberSignature Language="F#" Value="member this.GetMetricDistribution : unit -&gt; single[]" Usage="runMetric.GetMetricDistribution " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;float&gt; ^ GetMetricDistribution();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::Array &lt;float&gt; ^ GetMetricDistribution();" />
      <MemberSignature Language="C++ WINRT" Value="std::Array &lt;float&gt; GetMetricDistribution();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            The (optional) distribution of the metric.
            This distribution can be a secondary measure of how good a run was, e.g per-fold AUC, per-fold accuracy, (sampled) per-instance log loss etc.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryMetric">
      <MemberSignature Language="C#" Value="public float PrimaryMetric { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PrimaryMetric" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.RunMetric.PrimaryMetric" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrimaryMetric As Single" />
      <MemberSignature Language="F#" Value="member this.PrimaryMetric : single" Usage="Microsoft.ML.Runtime.RunMetric.PrimaryMetric" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float PrimaryMetric { float get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property float PrimaryMetric { float get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The primary metric to optimize.
            This metric is usually an aggregate value for the run, e.g. AUC, accuracy etc.
            By default, smart sweeping algorithms will maximize this metric.
            If you want to minimize, either negate this value or change the option in the arguments of the sweeper constructor.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>