<Type Name="TrainerInfo" FullName="Microsoft.ML.Runtime.TrainerInfo">
  <TypeSignature Language="C#" Value="public sealed class TrainerInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TrainerInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.TrainerInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TrainerInfo" />
  <TypeSignature Language="F#" Value="type TrainerInfo = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Instances of this class posses information about trainers, in terms of their requirements and capabilities.
            The intended usage is as the value for <see cref="P:Microsoft.ML.Runtime.ITrainer.Info" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TrainerInfo (bool normalization = true, bool calibration = false, bool caching = true, bool supportValid = false, bool supportIncrementalTrain = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool normalization, bool calibration, bool caching, bool supportValid, bool supportIncrementalTrain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TrainerInfo.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional normalization As Boolean = true, Optional calibration As Boolean = false, Optional caching As Boolean = true, Optional supportValid As Boolean = false, Optional supportIncrementalTrain As Boolean = false)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.TrainerInfo : bool * bool * bool * bool * bool -&gt; Microsoft.ML.Runtime.TrainerInfo" Usage="new Microsoft.ML.Runtime.TrainerInfo (normalization, calibration, caching, supportValid, supportIncrementalTrain)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="normalization" Type="System.Boolean" />
        <Parameter Name="calibration" Type="System.Boolean" />
        <Parameter Name="caching" Type="System.Boolean" />
        <Parameter Name="supportValid" Type="System.Boolean" />
        <Parameter Name="supportIncrementalTrain" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="normalization">The value for the property <see cref="P:Microsoft.ML.Runtime.TrainerInfo.NeedNormalization" /></param>
        <param name="calibration">The value for the property <see cref="P:Microsoft.ML.Runtime.TrainerInfo.NeedCalibration" /></param>
        <param name="caching">The value for the property <see cref="P:Microsoft.ML.Runtime.TrainerInfo.WantCaching" /></param>
        <param name="supportValid">The value for the property <see cref="P:Microsoft.ML.Runtime.TrainerInfo.SupportsValidation" /></param>
        <param name="supportIncrementalTrain">The value for the property <see cref="P:Microsoft.ML.Runtime.TrainerInfo.SupportsIncrementalTraining" /></param>
        <summary>
            Initializes with the given parameters. The parameters have default values for the most typical values
            for most classical trainers.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NeedCalibration">
      <MemberSignature Language="C#" Value="public bool NeedCalibration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeedCalibration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.TrainerInfo.NeedCalibration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NeedCalibration As Boolean" />
      <MemberSignature Language="F#" Value="member this.NeedCalibration : bool" Usage="Microsoft.ML.Runtime.TrainerInfo.NeedCalibration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether the trainer needs calibration to produce probabilities. As a general rule only trainers that produce
            binary classifier predictors that also do not have a natural probabilistic interpretation should have a
            <c>true</c> value here.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NeedNormalization">
      <MemberSignature Language="C#" Value="public bool NeedNormalization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeedNormalization" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.TrainerInfo.NeedNormalization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NeedNormalization As Boolean" />
      <MemberSignature Language="F#" Value="member this.NeedNormalization : bool" Usage="Microsoft.ML.Runtime.TrainerInfo.NeedNormalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether the trainer needs to see data in normalized form. Only non-parametric learners will tend to produce
            normalization here.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsIncrementalTraining">
      <MemberSignature Language="C#" Value="public bool SupportsIncrementalTraining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsIncrementalTraining" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.TrainerInfo.SupportsIncrementalTraining" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsIncrementalTraining As Boolean" />
      <MemberSignature Language="F#" Value="member this.SupportsIncrementalTraining : bool" Usage="Microsoft.ML.Runtime.TrainerInfo.SupportsIncrementalTraining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether the trainer can support incremental trainers via <see cref="P:Microsoft.ML.Runtime.TrainContext.InitialPredictor" />. Not
            implementing this interface and returning <c>true</c> from this property is an indication the trainer does
            not support that.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsValidation">
      <MemberSignature Language="C#" Value="public bool SupportsValidation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsValidation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.TrainerInfo.SupportsValidation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsValidation As Boolean" />
      <MemberSignature Language="F#" Value="member this.SupportsValidation : bool" Usage="Microsoft.ML.Runtime.TrainerInfo.SupportsValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether the trainer supports validation sets via <see cref="P:Microsoft.ML.Runtime.TrainContext.ValidationSet" />. Not implementing
            this interface and returning <c>true</c> from this property is an indication the trainer does not support
            that.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WantCaching">
      <MemberSignature Language="C#" Value="public bool WantCaching { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WantCaching" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.TrainerInfo.WantCaching" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WantCaching As Boolean" />
      <MemberSignature Language="F#" Value="member this.WantCaching : bool" Usage="Microsoft.ML.Runtime.TrainerInfo.WantCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether this trainer could benefit from a cached view of the data. Trainers that have few passes over the
            data, or that need to build their own custom data structure over the data, will have a <c>false</c> here.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>