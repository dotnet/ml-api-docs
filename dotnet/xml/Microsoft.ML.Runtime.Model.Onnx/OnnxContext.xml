<Type Name="OnnxContext" FullName="Microsoft.ML.Runtime.Model.Onnx.OnnxContext">
  <TypeSignature Language="C#" Value="public sealed class OnnxContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OnnxContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Model.Onnx.OnnxContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OnnxContext" />
  <TypeSignature Language="F#" Value="type OnnxContext = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A context for defining a ONNX output.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OnnxContext (Microsoft.ML.Runtime.IHostEnvironment env, string name, string producerName, string producerVersion, long modelVersion, string domain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, string name, string producerName, string producerVersion, int64 modelVersion, string domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Onnx.OnnxContext.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.String,System.String,System.Int64,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, name As String, producerName As String, producerVersion As String, modelVersion As Long, domain As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Model.Onnx.OnnxContext : Microsoft.ML.Runtime.IHostEnvironment * string * string * string * int64 * string -&gt; Microsoft.ML.Runtime.Model.Onnx.OnnxContext" Usage="new Microsoft.ML.Runtime.Model.Onnx.OnnxContext (env, name, producerName, producerVersion, modelVersion, domain)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="producerName" Type="System.String" />
        <Parameter Name="producerVersion" Type="System.String" />
        <Parameter Name="modelVersion" Type="System.Int64" />
        <Parameter Name="domain" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="name">To be added.</param>
        <param name="producerName">To be added.</param>
        <param name="producerVersion">To be added.</param>
        <param name="modelVersion">To be added.</param>
        <param name="domain">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInputVariable">
      <MemberSignature Language="C#" Value="public void AddInputVariable (Microsoft.ML.Runtime.Data.ColumnType type, string colName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddInputVariable(class Microsoft.ML.Runtime.Data.ColumnType type, string colName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Onnx.OnnxContext.AddInputVariable(Microsoft.ML.Runtime.Data.ColumnType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddInputVariable (type As ColumnType, colName As String)" />
      <MemberSignature Language="F#" Value="member this.AddInputVariable : Microsoft.ML.Runtime.Data.ColumnType * string -&gt; unit" Usage="onnxContext.AddInputVariable (type, colName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.ML.Runtime.Data.ColumnType" />
        <Parameter Name="colName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="colName">To be added.</param>
        <summary>
            Adds an input variable to the list.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIntermediateVariable">
      <MemberSignature Language="C#" Value="public string AddIntermediateVariable (Microsoft.ML.Runtime.Data.ColumnType type, string colName, bool skip = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string AddIntermediateVariable(class Microsoft.ML.Runtime.Data.ColumnType type, string colName, bool skip) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Onnx.OnnxContext.AddIntermediateVariable(Microsoft.ML.Runtime.Data.ColumnType,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddIntermediateVariable (type As ColumnType, colName As String, Optional skip As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="member this.AddIntermediateVariable : Microsoft.ML.Runtime.Data.ColumnType * string * bool -&gt; string" Usage="onnxContext.AddIntermediateVariable (type, colName, skip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.ML.Runtime.Data.ColumnType" />
        <Parameter Name="colName" Type="System.String" />
        <Parameter Name="skip" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="colName">To be added.</param>
        <param name="skip">To be added.</param>
        <summary>
            Adds an intermediate column to the list.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNode">
      <MemberSignature Language="C#" Value="public void AddNode (Microsoft.ML.Runtime.UniversalModelFormat.Onnx.NodeProto node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddNode(class Microsoft.ML.Runtime.UniversalModelFormat.Onnx.NodeProto node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Onnx.OnnxContext.AddNode(Microsoft.ML.Runtime.UniversalModelFormat.Onnx.NodeProto)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddNode (node As NodeProto)" />
      <MemberSignature Language="F#" Value="member this.AddNode : Microsoft.ML.Runtime.UniversalModelFormat.Onnx.NodeProto -&gt; unit" Usage="onnxContext.AddNode node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Microsoft.ML.Runtime.UniversalModelFormat.Onnx.NodeProto" />
      </Parameters>
      <Docs>
        <param name="node"></param>
        <summary>
            Adds a node to the node list of the graph.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOutputVariable">
      <MemberSignature Language="C#" Value="public string AddOutputVariable (Microsoft.ML.Runtime.Data.ColumnType type, string colName, System.Collections.Generic.List&lt;long&gt; dim = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string AddOutputVariable(class Microsoft.ML.Runtime.Data.ColumnType type, string colName, class System.Collections.Generic.List`1&lt;int64&gt; dim) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Onnx.OnnxContext.AddOutputVariable(Microsoft.ML.Runtime.Data.ColumnType,System.String,System.Collections.Generic.List{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOutputVariable (type As ColumnType, colName As String, Optional dim As List(Of Long) = null) As String" />
      <MemberSignature Language="F#" Value="member this.AddOutputVariable : Microsoft.ML.Runtime.Data.ColumnType * string * System.Collections.Generic.List&lt;int64&gt; -&gt; string" Usage="onnxContext.AddOutputVariable (type, colName, dim)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.ML.Runtime.Data.ColumnType" />
        <Parameter Name="colName" Type="System.String" />
        <Parameter Name="dim" Type="System.Collections.Generic.List&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="colName">To be added.</param>
        <param name="dim">To be added.</param>
        <summary>
            Adds an output variable to the list.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsColumn">
      <MemberSignature Language="C#" Value="public bool ContainsColumn (string colName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsColumn(string colName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Onnx.OnnxContext.ContainsColumn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsColumn (colName As String) As Boolean" />
      <MemberSignature Language="F#" Value="member this.ContainsColumn : string -&gt; bool" Usage="onnxContext.ContainsColumn colName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="colName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNodeName">
      <MemberSignature Language="C#" Value="public string GetNodeName (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetNodeName(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Onnx.OnnxContext.GetNodeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodeName (prefix As String) As String" />
      <MemberSignature Language="F#" Value="member this.GetNodeName : string -&gt; string" Usage="onnxContext.GetNodeName prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <summary>
            Generates a unique name for the node based on a prefix.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVariableName">
      <MemberSignature Language="C#" Value="public string GetVariableName (string colName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetVariableName(string colName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Onnx.OnnxContext.GetVariableName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVariableName (colName As String) As String" />
      <MemberSignature Language="F#" Value="member this.GetVariableName : string -&gt; string" Usage="onnxContext.GetVariableName colName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="colName">To be added.</param>
        <summary>
            Retrieves the variable name that maps to the IDataView column name at a 
            given point in the pipeline execution.
            </summary>
        <returns>Column Name mapping.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeModel">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.UniversalModelFormat.Onnx.ModelProto MakeModel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Runtime.UniversalModelFormat.Onnx.ModelProto MakeModel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Onnx.OnnxContext.MakeModel" />
      <MemberSignature Language="VB.NET" Value="Public Function MakeModel () As ModelProto" />
      <MemberSignature Language="F#" Value="member this.MakeModel : unit -&gt; Microsoft.ML.Runtime.UniversalModelFormat.Onnx.ModelProto" Usage="onnxContext.MakeModel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.UniversalModelFormat.Onnx.ModelProto</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Makes the ONNX model based on the context.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveColumn">
      <MemberSignature Language="C#" Value="public void RemoveColumn (string colName, bool removeVariable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveColumn(string colName, bool removeVariable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Onnx.OnnxContext.RemoveColumn(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveColumn (colName As String, removeVariable As Boolean)" />
      <MemberSignature Language="F#" Value="member this.RemoveColumn : string * bool -&gt; unit" Usage="onnxContext.RemoveColumn (colName, removeVariable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colName" Type="System.String" />
        <Parameter Name="removeVariable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="colName">IDataView column name to stop tracking</param>
        <param name="removeVariable">Remove associated ONNX variable at the time.</param>
        <summary>
            Stops tracking a column. If removeVariable is true then it also removes the 
            variable associated with it, this is useful in the event where an output variable is 
            created before realizing the transform cannot actually save as ONNX.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveVariable">
      <MemberSignature Language="C#" Value="public void RemoveVariable (string variableName, bool removeColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveVariable(string variableName, bool removeColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Onnx.OnnxContext.RemoveVariable(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveVariable (variableName As String, removeColumn As Boolean)" />
      <MemberSignature Language="F#" Value="member this.RemoveVariable : string * bool -&gt; unit" Usage="onnxContext.RemoveVariable (variableName, removeColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variableName" Type="System.String" />
        <Parameter Name="removeColumn" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="variableName">ONNX variable to remove.</param>
        <param name="removeColumn">IDataView column to stop tracking</param>
        <summary>
            Removes an ONNX variable. If removeColumn is true then it also removes the 
            IDataView column associated with it.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetVariableName">
      <MemberSignature Language="C#" Value="public string TryGetVariableName (string colName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string TryGetVariableName(string colName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Onnx.OnnxContext.TryGetVariableName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetVariableName (colName As String) As String" />
      <MemberSignature Language="F#" Value="member this.TryGetVariableName : string -&gt; string" Usage="onnxContext.TryGetVariableName colName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="colName">To be added.</param>
        <summary>
            Retrieves the variable name that maps to the IDataView column name at a 
            given point in the pipeline execution.
            </summary>
        <returns>Column Name mapping.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>