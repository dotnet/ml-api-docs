<Type Name="NormalizingTransformer+BinNormalizerModelParameters&lt;TData&gt;" FullName="Microsoft.ML.Transforms.NormalizingTransformer+BinNormalizerModelParameters&lt;TData&gt;">
  <TypeSignature Language="C#" Value="public sealed class NormalizingTransformer.BinNormalizerModelParameters&lt;TData&gt; : Microsoft.ML.Transforms.NormalizingTransformer.NormalizerModelParametersBase" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit NormalizingTransformer/BinNormalizerModelParameters`1&lt;TData&gt; extends Microsoft.ML.Transforms.NormalizingTransformer/NormalizerModelParametersBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.NormalizingTransformer.BinNormalizerModelParameters`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NormalizingTransformer.BinNormalizerModelParameters(Of TData)&#xA;Inherits NormalizingTransformer.NormalizerModelParametersBase" />
  <TypeSignature Language="F#" Value="type NormalizingTransformer.BinNormalizerModelParameters&lt;'Data&gt; = class&#xA;    inherit NormalizingTransformer.NormalizerModelParametersBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TData" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.Transforms.NormalizingTransformer+NormalizerModelParametersBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TData">To be added.</typeparam>
    <summary>
            The model parameters generated by buckettizing the data into bins with monotonically
            increasing <see cref="P:Microsoft.ML.Transforms.NormalizingTransformer.BinNormalizerModelParameters`1.UpperBounds" />.
            The <see cref="P:Microsoft.ML.Transforms.NormalizingTransformer.BinNormalizerModelParameters`1.Density" /> value is constant from bin to bin, for most cases.
            /// </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Density">
      <MemberSignature Language="C#" Value="public TData Density { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TData Density" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.NormalizingTransformer.BinNormalizerModelParameters`1.Density" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Density As TData" />
      <MemberSignature Language="F#" Value="member this.Density : 'Data" Usage="Microsoft.ML.Transforms.NormalizingTransformer.BinNormalizerModelParameters&lt;'Data&gt;.Density" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The frequency of the datapoints per each bin.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public TData Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TData Offset" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.NormalizingTransformer.BinNormalizerModelParameters`1.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As TData" />
      <MemberSignature Language="F#" Value="member this.Offset : 'Data" Usage="Microsoft.ML.Transforms.NormalizingTransformer.BinNormalizerModelParameters&lt;'Data&gt;.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If normalization is performed with <see cref="F:Microsoft.ML.Transforms.NormalizeTransform.ControlZeroArgumentsBase.EnsureZeroUntouched" /> set to <value>true</value>,
            the offset indicates the displacement of zero, if any.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpperBounds">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;TData&gt; UpperBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!TData&gt; UpperBounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.NormalizingTransformer.BinNormalizerModelParameters`1.UpperBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpperBounds As ImmutableArray(Of TData)" />
      <MemberSignature Language="F#" Value="member this.UpperBounds : System.Collections.Immutable.ImmutableArray&lt;'Data&gt;" Usage="Microsoft.ML.Transforms.NormalizingTransformer.BinNormalizerModelParameters&lt;'Data&gt;.UpperBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The standard deviation(s). In the scalar case, these are the bin upper bounds for that single value.
            In the vector case it is a jagged array of the bin upper bounds for all slots.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>