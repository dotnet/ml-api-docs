<Type Name="WordTokenizer" FullName="Microsoft.ML.Transforms.WordTokenizer">
  <TypeSignature Language="C#" Value="public sealed class WordTokenizer : Microsoft.ML.Runtime.Data.TrivialWrapperEstimator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WordTokenizer extends Microsoft.ML.Runtime.Data.TrivialWrapperEstimator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.WordTokenizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WordTokenizer&#xA;Inherits TrivialWrapperEstimator" />
  <TypeSignature Language="F#" Value="type WordTokenizer = class&#xA;    inherit TrivialWrapperEstimator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="ml-dotnet">Microsoft.ML.Runtime.Data.TrivialWrapperEstimator</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary>
            Word tokenizer splits text into tokens using the delimiter.
            For each text input, the output column is a variable vector of text.
            </summary>
    <remarks>
        The input for this transform is a <see cref="T:Microsoft.ML.Runtime.Data.DvText">DvText</see> or a vector of <see cref="T:Microsoft.ML.Runtime.Data.DvText">DvTexts</see>,
        and its output is a vector of DvTexts, corresponding to the tokens in the input text.
        The output is generated by splitting the input text, using a set of user specified separator characters.
        Empty strings and strings containing only spaces are dropped.
        This transform is not typically used on its own, but it is one of the transforms composing the Text Featurizer.
      </remarks>
    <example>
      <code language="csharp">
          pipeline.Add( new WordTokenizer("TextColumn")
          { 
            TermSeparators = "' ', '\t', ';'"  
          });
        </code>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WordTokenizer (Microsoft.ML.Runtime.IHostEnvironment env, ValueTuple&lt;string,string&gt;[] columns, string separators = &quot;space&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, valuetype System.ValueTuple`2&lt;string, string&gt;[] columns, string separators) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.WordTokenizer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.ValueTuple{System.String,System.String}[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, columns As ValueTuple(Of String, String)(), Optional separators As String = &quot;space&quot;)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.WordTokenizer : Microsoft.ML.Runtime.IHostEnvironment * ValueTuple&lt;string, string&gt;[] * string -&gt; Microsoft.ML.Transforms.WordTokenizer" Usage="new Microsoft.ML.Transforms.WordTokenizer (env, columns, separators)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="columns" Type="System.ValueTuple&lt;System.String,System.String&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "input", "output" })</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="separators" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="env">The environment.</param>
        <param name="columns">Pairs of columns to run the tokenization on.</param>
        <param name="separators">The separators to use (comma separated).</param>
        <summary>
            Tokenize incoming text in input columns and output the tokens as output columns.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WordTokenizer (Microsoft.ML.Runtime.IHostEnvironment env, string inputColumn, string outputColumn = null, string separators = &quot;space&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, string inputColumn, string outputColumn, string separators) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.WordTokenizer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, inputColumn As String, Optional outputColumn As String = null, Optional separators As String = &quot;space&quot;)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.WordTokenizer : Microsoft.ML.Runtime.IHostEnvironment * string * string * string -&gt; Microsoft.ML.Transforms.WordTokenizer" Usage="new Microsoft.ML.Transforms.WordTokenizer (env, inputColumn, outputColumn, separators)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="inputColumn" Type="System.String" />
        <Parameter Name="outputColumn" Type="System.String" />
        <Parameter Name="separators" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="env">The environment.</param>
        <param name="inputColumn">The column containing text to tokenize.</param>
        <param name="outputColumn">The column containing output tokens. Null means <paramref name="inputColumn" /> is replaced.</param>
        <param name="separators">The separators to use (comma separated).</param>
        <summary>
            Tokenize incoming text in <paramref name="inputColumn" /> and output the tokens as <paramref name="outputColumn" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>