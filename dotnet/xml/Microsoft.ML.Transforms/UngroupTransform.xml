<Type Name="UngroupTransform" FullName="Microsoft.ML.Transforms.UngroupTransform">
  <TypeSignature Language="C#" Value="public sealed class UngroupTransform : Microsoft.ML.Data.TransformBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UngroupTransform extends Microsoft.ML.Data.TransformBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.UngroupTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UngroupTransform&#xA;Inherits TransformBase" />
  <TypeSignature Language="F#" Value="type UngroupTransform = class&#xA;    inherit TransformBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.Data.TransformBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="ml-dotnet">Microsoft.ML.Data.TransformBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
        Un-groups vector columns into sequences of rows, inverse of Group transform.
       </summary>
    <remarks>
      <para>This can be thought of as an inverse of the <see cref="T:Microsoft.ML.Transforms.CombinerByContiguousGroupId" />.  
        For all specified vector columns ("pivot" columns), performs the "ungroup" (or "unroll") operation as outlined below.
        </para>
      <para>If the only pivot column is called P, and has size K, then for every row of the input we will produce 
         K rows, that are identical in all columns except P. The column P will become a scalar column, and this 
         column will hold all the original values of input's P, one value per row, in order. The order of columns 
         will remain the same.
        </para>
      <para>Variable-length pivot columns are supported (including zero, which will eliminate the row from the result).</para>
      <para>Multiple pivot columns are also supported:</para>
      <list type="bullet">
        <item>
          <description>A number of output rows is controlled by the 'mode' parameter. 
            <list type="bullet"><item><term>outer</term><description> it is equal to the maximum length of pivot columns</description></item><item><term>inner</term><description> it is equal to the minimum length of pivot columns</description></item><item><term>first</term><description> it is equal to the length of the first pivot column</description></item></list></description>
        </item>
        <item>
          <description>
              If a particular pivot column has size that is different than the number of output rows, the extra slots will
              be ignored, and the missing slots will be 'padded' with default values.
            </description>
        </item>
      </list>
      <para>All metadata are preserved for the retained columns. For 'unrolled' columns, all known metadata
        except slot names are preserved.
        </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UngroupTransform (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Transforms.UngroupTransform.Arguments args, Microsoft.Data.DataView.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Transforms.UngroupTransform/Arguments args, class Microsoft.Data.DataView.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.UngroupTransform.#ctor(Microsoft.ML.IHostEnvironment,Microsoft.ML.Transforms.UngroupTransform.Arguments,Microsoft.Data.DataView.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, args As UngroupTransform.Arguments, input As IDataView)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.UngroupTransform : Microsoft.ML.IHostEnvironment * Microsoft.ML.Transforms.UngroupTransform.Arguments * Microsoft.Data.DataView.IDataView -&gt; Microsoft.ML.Transforms.UngroupTransform" Usage="new Microsoft.ML.Transforms.UngroupTransform (env, args, input)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="args" Type="Microsoft.ML.Transforms.UngroupTransform+Arguments" />
        <Parameter Name="input" Type="Microsoft.Data.DataView.IDataView" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UngroupTransform (Microsoft.ML.IHostEnvironment env, Microsoft.Data.DataView.IDataView input, Microsoft.ML.Transforms.UngroupTransform.UngroupMode mode, params string[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, class Microsoft.Data.DataView.IDataView input, valuetype Microsoft.ML.Transforms.UngroupTransform/UngroupMode mode, string[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.UngroupTransform.#ctor(Microsoft.ML.IHostEnvironment,Microsoft.Data.DataView.IDataView,Microsoft.ML.Transforms.UngroupTransform.UngroupMode,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, input As IDataView, mode As UngroupTransform.UngroupMode, ParamArray columns As String())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.UngroupTransform : Microsoft.ML.IHostEnvironment * Microsoft.Data.DataView.IDataView * Microsoft.ML.Transforms.UngroupTransform.UngroupMode * string[] -&gt; Microsoft.ML.Transforms.UngroupTransform" Usage="new Microsoft.ML.Transforms.UngroupTransform (env, input, mode, columns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.Data.DataView.IDataView" />
        <Parameter Name="mode" Type="Microsoft.ML.Transforms.UngroupTransform+UngroupMode" />
        <Parameter Name="columns" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="env">Host Environment.</param>
        <param name="input">Input <see cref="T:Microsoft.Data.DataView.IDataView" />. This is the output from previous transform or loader.</param>
        <param name="mode">Specifies how to unroll multiple pivot columns of different size.</param>
        <param name="columns">Columns to unroll, or 'pivot'</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Transforms.UngroupTransform" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanShuffle">
      <MemberSignature Language="C#" Value="public override bool CanShuffle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanShuffle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.UngroupTransform.CanShuffle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanShuffle As Boolean" />
      <MemberSignature Language="F#" Value="member this.CanShuffle : bool" Usage="Microsoft.ML.Transforms.UngroupTransform.CanShuffle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.UngroupTransform Create (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Model.ModelLoadContext ctx, Microsoft.Data.DataView.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.UngroupTransform Create(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Model.ModelLoadContext ctx, class Microsoft.Data.DataView.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.UngroupTransform.Create(Microsoft.ML.IHostEnvironment,Microsoft.ML.Model.ModelLoadContext,Microsoft.Data.DataView.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (env As IHostEnvironment, ctx As ModelLoadContext, input As IDataView) As UngroupTransform" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.ML.IHostEnvironment * Microsoft.ML.Model.ModelLoadContext * Microsoft.Data.DataView.IDataView -&gt; Microsoft.ML.Transforms.UngroupTransform" Usage="Microsoft.ML.Transforms.UngroupTransform.Create (env, ctx, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.UngroupTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="ctx" Type="Microsoft.ML.Model.ModelLoadContext" />
        <Parameter Name="input" Type="Microsoft.Data.DataView.IDataView" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="ctx">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowCount">
      <MemberSignature Language="C#" Value="public override Nullable&lt;long&gt; GetRowCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Nullable`1&lt;int64&gt; GetRowCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.UngroupTransform.GetRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRowCount () As Nullable(Of Long)" />
      <MemberSignature Language="F#" Value="override this.GetRowCount : unit -&gt; Nullable&lt;int64&gt;" Usage="ungroupTransform.GetRowCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowCursorCore">
      <MemberSignature Language="C#" Value="protected override Microsoft.Data.DataView.RowCursor GetRowCursorCore (System.Collections.Generic.IEnumerable&lt;Microsoft.Data.DataView.Schema.Column&gt; columnsNeeded, Random rand = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.Data.DataView.RowCursor GetRowCursorCore(class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.Data.DataView.Schema/Column&gt; columnsNeeded, class System.Random rand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.UngroupTransform.GetRowCursorCore(System.Collections.Generic.IEnumerable{Microsoft.Data.DataView.Schema.Column},System.Random)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetRowCursorCore (columnsNeeded As IEnumerable(Of Schema.Column), Optional rand As Random = null) As RowCursor" />
      <MemberSignature Language="F#" Value="override this.GetRowCursorCore : seq&lt;Microsoft.Data.DataView.Schema.Column&gt; * Random -&gt; Microsoft.Data.DataView.RowCursor" Usage="ungroupTransform.GetRowCursorCore (columnsNeeded, rand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Data.DataView.RowCursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnsNeeded" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Data.DataView.Schema+Column&gt;" />
        <Parameter Name="rand" Type="System.Random" />
      </Parameters>
      <Docs>
        <param name="columnsNeeded">To be added.</param>
        <param name="rand">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowCursorSet">
      <MemberSignature Language="C#" Value="public override Microsoft.Data.DataView.RowCursor[] GetRowCursorSet (System.Collections.Generic.IEnumerable&lt;Microsoft.Data.DataView.Schema.Column&gt; columnsNeeded, int n, Random rand = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.Data.DataView.RowCursor[] GetRowCursorSet(class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.Data.DataView.Schema/Column&gt; columnsNeeded, int32 n, class System.Random rand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.UngroupTransform.GetRowCursorSet(System.Collections.Generic.IEnumerable{Microsoft.Data.DataView.Schema.Column},System.Int32,System.Random)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRowCursorSet (columnsNeeded As IEnumerable(Of Schema.Column), n As Integer, Optional rand As Random = null) As RowCursor()" />
      <MemberSignature Language="F#" Value="override this.GetRowCursorSet : seq&lt;Microsoft.Data.DataView.Schema.Column&gt; * int * Random -&gt; Microsoft.Data.DataView.RowCursor[]" Usage="ungroupTransform.GetRowCursorSet (columnsNeeded, n, rand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Data.DataView.RowCursor[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnsNeeded" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Data.DataView.Schema+Column&gt;" />
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="rand" Type="System.Random" />
      </Parameters>
      <Docs>
        <param name="columnsNeeded">To be added.</param>
        <param name="n">To be added.</param>
        <param name="rand">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoaderSignature">
      <MemberSignature Language="C#" Value="public const string LoaderSignature;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string LoaderSignature" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.UngroupTransform.LoaderSignature" />
      <MemberSignature Language="VB.NET" Value="Public Const LoaderSignature As String " />
      <MemberSignature Language="F#" Value="val mutable LoaderSignature : string" Usage="Microsoft.ML.Transforms.UngroupTransform.LoaderSignature" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputSchema">
      <MemberSignature Language="C#" Value="public override Microsoft.Data.DataView.Schema OutputSchema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Data.DataView.Schema OutputSchema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.UngroupTransform.OutputSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OutputSchema As Schema" />
      <MemberSignature Language="F#" Value="member this.OutputSchema : Microsoft.Data.DataView.Schema" Usage="Microsoft.ML.Transforms.UngroupTransform.OutputSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Data.DataView.Schema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save (Microsoft.ML.Model.ModelSaveContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save(class Microsoft.ML.Model.ModelSaveContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.UngroupTransform.Save(Microsoft.ML.Model.ModelSaveContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save (ctx As ModelSaveContext)" />
      <MemberSignature Language="F#" Value="override this.Save : Microsoft.ML.Model.ModelSaveContext -&gt; unit" Usage="ungroupTransform.Save ctx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Model.ModelSaveContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortName">
      <MemberSignature Language="C#" Value="public const string ShortName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ShortName" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.UngroupTransform.ShortName" />
      <MemberSignature Language="VB.NET" Value="Public Const ShortName As String " />
      <MemberSignature Language="F#" Value="val mutable ShortName : string" Usage="Microsoft.ML.Transforms.UngroupTransform.ShortName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldUseParallelCursors">
      <MemberSignature Language="C#" Value="protected override Nullable&lt;bool&gt; ShouldUseParallelCursors (Func&lt;int,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Nullable`1&lt;bool&gt; ShouldUseParallelCursors(class System.Func`2&lt;int32, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.UngroupTransform.ShouldUseParallelCursors(System.Func{System.Int32,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ShouldUseParallelCursors (predicate As Func(Of Integer, Boolean)) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="override this.ShouldUseParallelCursors : Func&lt;int, bool&gt; -&gt; Nullable&lt;bool&gt;" Usage="ungroupTransform.ShouldUseParallelCursors predicate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Func&lt;System.Int32,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="predicate">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Summary">
      <MemberSignature Language="C#" Value="public const string Summary;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Summary" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.UngroupTransform.Summary" />
      <MemberSignature Language="VB.NET" Value="Public Const Summary As String " />
      <MemberSignature Language="F#" Value="val mutable Summary : string" Usage="Microsoft.ML.Transforms.UngroupTransform.Summary" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public const string UserName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UserName" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.UngroupTransform.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Const UserName As String " />
      <MemberSignature Language="F#" Value="val mutable UserName : string" Usage="Microsoft.ML.Transforms.UngroupTransform.UserName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>