<Type Name="MissingValueHandlingTransformer+Arguments" FullName="Microsoft.ML.Transforms.MissingValueHandlingTransformer+Arguments">
  <TypeSignature Language="C#" Value="public sealed class MissingValueHandlingTransformer.Arguments : Microsoft.ML.EntryPoints.TransformInputBase" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit MissingValueHandlingTransformer/Arguments extends Microsoft.ML.EntryPoints.TransformInputBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.MissingValueHandlingTransformer.Arguments" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MissingValueHandlingTransformer.Arguments&#xA;Inherits TransformInputBase" />
  <TypeSignature Language="F#" Value="type MissingValueHandlingTransformer.Arguments = class&#xA;    inherit TransformInputBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.EntryPoints.TransformInputBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="ml-dotnet">Microsoft.ML.EntryPoints.TransformInputBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Arguments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.MissingValueHandlingTransformer.Arguments.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.MissingValueHandlingTransformer.Column[] Column;" />
      <MemberSignature Language="ILAsm" Value=".field public class Microsoft.ML.Transforms.MissingValueHandlingTransformer/Column[] Column" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.MissingValueHandlingTransformer.Arguments.Column" />
      <MemberSignature Language="VB.NET" Value="Public Column As MissingValueHandlingTransformer.Column() " />
      <MemberSignature Language="F#" Value="val mutable Column : Microsoft.ML.Transforms.MissingValueHandlingTransformer.Column[]" Usage="Microsoft.ML.Transforms.MissingValueHandlingTransformer.Arguments.Column" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.Required | Microsoft.ML.CommandLine.ArgumentType.LastOccurenceWins, HelpText="New column definition(s) (optional form: name:rep:src)", ShortName="col", SortOrder=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.MissingValueHandlingTransformer+Column[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public bool Concat;" />
      <MemberSignature Language="ILAsm" Value=".field public bool Concat" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.MissingValueHandlingTransformer.Arguments.Concat" />
      <MemberSignature Language="VB.NET" Value="Public Concat As Boolean " />
      <MemberSignature Language="F#" Value="val mutable Concat : bool" Usage="Microsoft.ML.Transforms.MissingValueHandlingTransformer.Arguments.Concat" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Whether or not to concatenate an indicator vector column to the value column", ShortName="ind")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImputeBySlot">
      <MemberSignature Language="C#" Value="public bool ImputeBySlot;" />
      <MemberSignature Language="ILAsm" Value=".field public bool ImputeBySlot" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.MissingValueHandlingTransformer.Arguments.ImputeBySlot" />
      <MemberSignature Language="VB.NET" Value="Public ImputeBySlot As Boolean " />
      <MemberSignature Language="F#" Value="val mutable ImputeBySlot : bool" Usage="Microsoft.ML.Transforms.MissingValueHandlingTransformer.Arguments.ImputeBySlot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Whether to impute values by slot", ShortName="slot")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceWith">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.MissingValueHandlingTransformer.ReplacementKind ReplaceWith;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype Microsoft.ML.Transforms.MissingValueHandlingTransformer/ReplacementKind ReplaceWith" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.MissingValueHandlingTransformer.Arguments.ReplaceWith" />
      <MemberSignature Language="VB.NET" Value="Public ReplaceWith As MissingValueHandlingTransformer.ReplacementKind " />
      <MemberSignature Language="F#" Value="val mutable ReplaceWith : Microsoft.ML.Transforms.MissingValueHandlingTransformer.ReplacementKind" Usage="Microsoft.ML.Transforms.MissingValueHandlingTransformer.Arguments.ReplaceWith" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="The replacement method to utilize", ShortName="kind", SortOrder=2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.MissingValueHandlingTransformer+ReplacementKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
