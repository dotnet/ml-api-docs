<Type Name="CustomMappingEstimator&lt;TSrc,TDst&gt;" FullName="Microsoft.ML.Transforms.CustomMappingEstimator&lt;TSrc,TDst&gt;">
  <TypeSignature Language="C#" Value="public sealed class CustomMappingEstimator&lt;TSrc,TDst&gt; : Microsoft.ML.Runtime.Data.TrivialEstimator&lt;Microsoft.ML.Transforms.CustomMappingTransformer&lt;TSrc,TDst&gt;&gt; where TSrc : class, new() where TDst : class, new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CustomMappingEstimator`2&lt;class .ctor TSrc, class .ctor TDst&gt; extends Microsoft.ML.Runtime.Data.TrivialEstimator`1&lt;class Microsoft.ML.Transforms.CustomMappingTransformer`2&lt;!TSrc, !TDst&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.CustomMappingEstimator`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CustomMappingEstimator(Of TSrc, TDst)&#xA;Inherits TrivialEstimator(Of CustomMappingTransformer(Of TSrc, TDst))" />
  <TypeSignature Language="F#" Value="type CustomMappingEstimator&lt;'Src, 'Dst (requires 'Src : null and 'Src : (new : unit -&gt; 'Src) and 'Dst : null and 'Dst : (new : unit -&gt; 'Dst))&gt; = class&#xA;    inherit TrivialEstimator&lt;CustomMappingTransformer&lt;'Src, 'Dst&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Api</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSrc">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TDst">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.Data.TrivialEstimator&lt;Microsoft.ML.Transforms.CustomMappingTransformer&lt;TSrc,TDst&gt;&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Microsoft.ML.Transforms.CustomMappingTransformer&lt;TSrc,TDst&gt;</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TSrc">To be added.</typeparam>
    <typeparam name="TDst">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomMappingEstimator (Microsoft.ML.Runtime.IHostEnvironment env, Action&lt;TSrc,TDst&gt; mapAction, string contractName, Microsoft.ML.Runtime.Api.SchemaDefinition inputSchemaDefinition = null, Microsoft.ML.Runtime.Api.SchemaDefinition outputSchemaDefinition = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, class System.Action`2&lt;!TSrc, !TDst&gt; mapAction, string contractName, class Microsoft.ML.Runtime.Api.SchemaDefinition inputSchemaDefinition, class Microsoft.ML.Runtime.Api.SchemaDefinition outputSchemaDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.CustomMappingEstimator`2.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.Action{`0,`1},System.String,Microsoft.ML.Runtime.Api.SchemaDefinition,Microsoft.ML.Runtime.Api.SchemaDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, mapAction As Action(Of TSrc, TDst), contractName As String, Optional inputSchemaDefinition As SchemaDefinition = null, Optional outputSchemaDefinition As SchemaDefinition = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.CustomMappingEstimator&lt;'Src, 'Dst (requires 'Src : null and 'Src : (new : unit -&gt; 'Src) and 'Dst : null and 'Dst : (new : unit -&gt; 'Dst))&gt; : Microsoft.ML.Runtime.IHostEnvironment * Action&lt;'Src, 'Dst (requires 'Src : null and 'Src : (new : unit -&gt; 'Src) and 'Dst : null and 'Dst : (new : unit -&gt; 'Dst))&gt; * string * Microsoft.ML.Runtime.Api.SchemaDefinition * Microsoft.ML.Runtime.Api.SchemaDefinition -&gt; Microsoft.ML.Transforms.CustomMappingEstimator&lt;'Src, 'Dst (requires 'Src : null and 'Src : (new : unit -&gt; 'Src) and 'Dst : null and 'Dst : (new : unit -&gt; 'Dst))&gt;" Usage="new Microsoft.ML.Transforms.CustomMappingEstimator&lt;'Src, 'Dst (requires 'Src : null and 'Src : (new : unit -&gt; 'Src) and 'Dst : null and 'Dst : (new : unit -&gt; 'Dst))&gt; (env, mapAction, contractName, inputSchemaDefinition, outputSchemaDefinition)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Api</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="mapAction" Type="System.Action&lt;TSrc,TDst&gt;" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="inputSchemaDefinition" Type="Microsoft.ML.Runtime.Api.SchemaDefinition" />
        <Parameter Name="outputSchemaDefinition" Type="Microsoft.ML.Runtime.Api.SchemaDefinition" />
      </Parameters>
      <Docs>
        <param name="env">The host environment</param>
        <param name="mapAction">The mapping action. This must be thread-safe and free from side effects.</param>
        <param name="contractName">The contract name, used by ML.NET for loading the model. If <c>null</c> is specified, such a trained model would not be save-able.</param>
        <param name="inputSchemaDefinition">Additional parameters for schema mapping between <typeparamref name="TSrc" /> and input data.</param>
        <param name="outputSchemaDefinition">Additional parameters for schema mapping between <typeparamref name="TDst" /> and output data.</param>
        <summary>
            Create a custom mapping of input columns to output columns.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.Core.Data.SchemaShape GetOutputSchema (Microsoft.ML.Core.Data.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.ML.Core.Data.SchemaShape GetOutputSchema(class Microsoft.ML.Core.Data.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.CustomMappingEstimator`2.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOutputSchema (inputSchema As SchemaShape) As SchemaShape" />
      <MemberSignature Language="F#" Value="override this.GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape" Usage="customMappingEstimator.GetOutputSchema inputSchema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Api</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Core.Data.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>