<Type Name="TensorFlowEstimator" FullName="Microsoft.ML.Transforms.TensorFlowEstimator">
  <TypeSignature Language="C#" Value="public sealed class TensorFlowEstimator : Microsoft.ML.Core.Data.IEstimator&lt;Microsoft.ML.Transforms.TensorFlowTransform&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TensorFlowEstimator extends System.Object implements class Microsoft.ML.Core.Data.IEstimator`1&lt;class Microsoft.ML.Transforms.TensorFlowTransform&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.TensorFlowEstimator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TensorFlowEstimator&#xA;Implements IEstimator(Of TensorFlowTransform)" />
  <TypeSignature Language="F#" Value="type TensorFlowEstimator = class&#xA;    interface IEstimator&lt;TensorFlowTransform&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TensorFlow</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.Data.TrivialEstimator&lt;Microsoft.ML.Transforms.TensorFlowTransform&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Microsoft.ML.Transforms.TensorFlowTransform</BaseTypeArgument>
    </BaseTypeArguments>
    <BaseTypeName FrameworkAlternate="ml-dotnet">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Core.Data.IEstimator&lt;Microsoft.ML.Transforms.TensorFlowTransform&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TensorFlowEstimator (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Transforms.TensorFlowTransform.Arguments args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Transforms.TensorFlowTransform/Arguments args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.TensorFlowEstimator.#ctor(Microsoft.ML.IHostEnvironment,Microsoft.ML.Transforms.TensorFlowTransform.Arguments)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, args As TensorFlowTransform.Arguments)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.TensorFlowEstimator : Microsoft.ML.IHostEnvironment * Microsoft.ML.Transforms.TensorFlowTransform.Arguments -&gt; Microsoft.ML.Transforms.TensorFlowEstimator" Usage="new Microsoft.ML.Transforms.TensorFlowEstimator (env, args)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TensorFlow</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="args" Type="Microsoft.ML.Transforms.TensorFlowTransform+Arguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TensorFlowEstimator (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Transforms.TensorFlowTransform.Arguments args, Microsoft.ML.Transforms.TensorFlowModelInfo tensorFlowModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Transforms.TensorFlowTransform/Arguments args, class Microsoft.ML.Transforms.TensorFlowModelInfo tensorFlowModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.TensorFlowEstimator.#ctor(Microsoft.ML.IHostEnvironment,Microsoft.ML.Transforms.TensorFlowTransform.Arguments,Microsoft.ML.Transforms.TensorFlowModelInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, args As TensorFlowTransform.Arguments, tensorFlowModel As TensorFlowModelInfo)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.TensorFlowEstimator : Microsoft.ML.IHostEnvironment * Microsoft.ML.Transforms.TensorFlowTransform.Arguments * Microsoft.ML.Transforms.TensorFlowModelInfo -&gt; Microsoft.ML.Transforms.TensorFlowEstimator" Usage="new Microsoft.ML.Transforms.TensorFlowEstimator (env, args, tensorFlowModel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TensorFlow</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="args" Type="Microsoft.ML.Transforms.TensorFlowTransform+Arguments" />
        <Parameter Name="tensorFlowModel" Type="Microsoft.ML.Transforms.TensorFlowModelInfo" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <param name="tensorFlowModel">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TensorFlowEstimator (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Transforms.TensorFlowModelInfo tensorFlowModel, string[] inputs, string[] outputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Transforms.TensorFlowModelInfo tensorFlowModel, string[] inputs, string[] outputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.TensorFlowEstimator.#ctor(Microsoft.ML.IHostEnvironment,Microsoft.ML.Transforms.TensorFlowModelInfo,System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, tensorFlowModel As TensorFlowModelInfo, inputs As String(), outputs As String())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.TensorFlowEstimator : Microsoft.ML.IHostEnvironment * Microsoft.ML.Transforms.TensorFlowModelInfo * string[] * string[] -&gt; Microsoft.ML.Transforms.TensorFlowEstimator" Usage="new Microsoft.ML.Transforms.TensorFlowEstimator (env, tensorFlowModel, inputs, outputs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TensorFlow</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="tensorFlowModel" Type="Microsoft.ML.Transforms.TensorFlowModelInfo" />
        <Parameter Name="inputs" Type="System.String[]" />
        <Parameter Name="outputs" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="tensorFlowModel">To be added.</param>
        <param name="inputs">To be added.</param>
        <param name="outputs">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TensorFlowEstimator (Microsoft.ML.IHostEnvironment env, string modelLocation, string[] inputs, string[] outputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, string modelLocation, string[] inputs, string[] outputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.TensorFlowEstimator.#ctor(Microsoft.ML.IHostEnvironment,System.String,System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, modelLocation As String, inputs As String(), outputs As String())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.TensorFlowEstimator : Microsoft.ML.IHostEnvironment * string * string[] * string[] -&gt; Microsoft.ML.Transforms.TensorFlowEstimator" Usage="new Microsoft.ML.Transforms.TensorFlowEstimator (env, modelLocation, inputs, outputs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TensorFlow</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="modelLocation" Type="System.String" />
        <Parameter Name="inputs" Type="System.String[]" />
        <Parameter Name="outputs" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="modelLocation">To be added.</param>
        <param name="inputs">To be added.</param>
        <param name="outputs">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fit">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.TensorFlowTransform Fit (Microsoft.ML.Data.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Transforms.TensorFlowTransform Fit(class Microsoft.ML.Data.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.TensorFlowEstimator.Fit(Microsoft.ML.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fit (input As IDataView) As TensorFlowTransform" />
      <MemberSignature Language="F#" Value="abstract member Fit : Microsoft.ML.Data.IDataView -&gt; Microsoft.ML.Transforms.TensorFlowTransform&#xA;override this.Fit : Microsoft.ML.Data.IDataView -&gt; Microsoft.ML.Transforms.TensorFlowTransform" Usage="tensorFlowEstimator.Fit input" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IEstimator`1.Fit(Microsoft.ML.Data.IDataView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TensorFlow</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.TensorFlowTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Data.IDataView" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Core.Data.SchemaShape GetOutputSchema (Microsoft.ML.Core.Data.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Core.Data.SchemaShape GetOutputSchema(class Microsoft.ML.Core.Data.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.TensorFlowEstimator.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutputSchema (inputSchema As SchemaShape) As SchemaShape" />
      <MemberSignature Language="F#" Value="abstract member GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape&#xA;override this.GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape" Usage="tensorFlowEstimator.GetOutputSchema inputSchema" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IEstimator`1.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TensorFlow</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Core.Data.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>