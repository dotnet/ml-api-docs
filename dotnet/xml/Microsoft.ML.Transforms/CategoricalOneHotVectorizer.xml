<Type Name="CategoricalOneHotVectorizer" FullName="Microsoft.ML.Transforms.CategoricalOneHotVectorizer">
  <TypeSignature Language="C#" Value="public sealed class CategoricalOneHotVectorizer : Microsoft.ML.ILearningPipelineItem, Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITransformInput" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CategoricalOneHotVectorizer extends System.Object implements class Microsoft.ML.ILearningPipelineItem, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITransformInput" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.CategoricalOneHotVectorizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CategoricalOneHotVectorizer&#xA;Implements CommonInputs.ITransformInput, ILearningPipelineItem" />
  <TypeSignature Language="F#" Value="type CategoricalOneHotVectorizer = class&#xA;    interface CommonInputs.ITransformInput&#xA;    interface ILearningPipelineItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.ILearningPipelineItem</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.EntryPoints.CommonInputs+ITransformInput</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Encodes the categorical variable with one-hot encoding based on term dictionary
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CategoricalOneHotVectorizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.CategoricalOneHotVectorizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CategoricalOneHotVectorizer (params string[] inputColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] inputColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.CategoricalOneHotVectorizer.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray inputColumns As String())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.CategoricalOneHotVectorizer : string[] -&gt; Microsoft.ML.Transforms.CategoricalOneHotVectorizer" Usage="new Microsoft.ML.Transforms.CategoricalOneHotVectorizer inputColumns" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inputColumns" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="inputColumns">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CategoricalOneHotVectorizer (params ValueTuple&lt;string,string&gt;[] inputOutputColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ValueTuple`2&lt;string, string&gt;[] inputOutputColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.CategoricalOneHotVectorizer.#ctor(System.ValueTuple{System.String,System.String}[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray inputOutputColumns As ValueTuple(Of String, String)())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.CategoricalOneHotVectorizer : ValueTuple&lt;string, string&gt;[] -&gt; Microsoft.ML.Transforms.CategoricalOneHotVectorizer" Usage="new Microsoft.ML.Transforms.CategoricalOneHotVectorizer inputOutputColumns" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inputOutputColumns" Type="System.ValueTuple&lt;System.String,System.String&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="inputOutputColumns">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddColumn">
      <MemberSignature Language="C#" Value="public void AddColumn (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddColumn(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.CategoricalOneHotVectorizer.AddColumn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddColumn (source As String)" />
      <MemberSignature Language="F#" Value="member this.AddColumn : string -&gt; unit" Usage="categoricalOneHotVectorizer.AddColumn source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddColumn">
      <MemberSignature Language="C#" Value="public void AddColumn (string name, string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddColumn(string name, string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.CategoricalOneHotVectorizer.AddColumn(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddColumn (name As String, source As String)" />
      <MemberSignature Language="F#" Value="member this.AddColumn : string * string -&gt; unit" Usage="categoricalOneHotVectorizer.AddColumn (name, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyStep">
      <MemberSignature Language="C#" Value="public Microsoft.ML.ILearningPipelineStep ApplyStep (Microsoft.ML.ILearningPipelineStep previousStep, Microsoft.ML.Runtime.Experiment experiment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.ILearningPipelineStep ApplyStep(class Microsoft.ML.ILearningPipelineStep previousStep, class Microsoft.ML.Runtime.Experiment experiment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.CategoricalOneHotVectorizer.ApplyStep(Microsoft.ML.ILearningPipelineStep,Microsoft.ML.Runtime.Experiment)" />
      <MemberSignature Language="F#" Value="abstract member ApplyStep : Microsoft.ML.ILearningPipelineStep * Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.ILearningPipelineStep&#xA;override this.ApplyStep : Microsoft.ML.ILearningPipelineStep * Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.ILearningPipelineStep" Usage="categoricalOneHotVectorizer.ApplyStep (previousStep, experiment)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.ILearningPipelineItem.ApplyStep(Microsoft.ML.ILearningPipelineStep,Microsoft.ML.Runtime.Experiment)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.ILearningPipelineStep</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previousStep" Type="Microsoft.ML.ILearningPipelineStep" />
        <Parameter Name="experiment" Type="Microsoft.ML.Runtime.Experiment" />
      </Parameters>
      <Docs>
        <param name="previousStep">To be added.</param>
        <param name="experiment">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.CategoricalTransformColumn[] Column { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Transforms.CategoricalTransformColumn[] Column" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.CategoricalOneHotVectorizer.Column" />
      <MemberSignature Language="VB.NET" Value="Public Property Column As CategoricalTransformColumn()" />
      <MemberSignature Language="F#" Value="member this.Column : Microsoft.ML.Transforms.CategoricalTransformColumn[] with get, set" Usage="Microsoft.ML.Transforms.CategoricalOneHotVectorizer.Column" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.CategoricalTransformColumn[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            New column definition(s) (optional form: name:src)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; Data" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.CategoricalOneHotVectorizer.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Var(Of IDataView)" />
      <MemberSignature Language="F#" Value="member this.Data : Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; with get, set" Usage="Microsoft.ML.Transforms.CategoricalOneHotVectorizer.Data" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITransformInput.Data</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Input dataset
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInputData">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; GetInputData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; GetInputData() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.CategoricalOneHotVectorizer.GetInputData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInputData () As Var(Of IDataView)" />
      <MemberSignature Language="F#" Value="abstract member GetInputData : unit -&gt; Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;&#xA;override this.GetInputData : unit -&gt; Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;" Usage="categoricalOneHotVectorizer.GetInputData " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.ILearningPipelineItem.GetInputData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxNumTerms">
      <MemberSignature Language="C#" Value="public int MaxNumTerms { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxNumTerms" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.CategoricalOneHotVectorizer.MaxNumTerms" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxNumTerms As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxNumTerms : int with get, set" Usage="Microsoft.ML.Transforms.CategoricalOneHotVectorizer.MaxNumTerms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Maximum number of terms to keep per column when auto-training
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputKind">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.CategoricalTransformOutputKind OutputKind { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Transforms.CategoricalTransformOutputKind OutputKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.CategoricalOneHotVectorizer.OutputKind" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputKind As CategoricalTransformOutputKind" />
      <MemberSignature Language="F#" Value="member this.OutputKind : Microsoft.ML.Transforms.CategoricalTransformOutputKind with get, set" Usage="Microsoft.ML.Transforms.CategoricalOneHotVectorizer.OutputKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.CategoricalTransformOutputKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Output kind: Bag (multi-set vector), Ind (indicator vector), or Key (index)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.TermTransformSortOrder Sort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Transforms.TermTransformSortOrder Sort" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.CategoricalOneHotVectorizer.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Property Sort As TermTransformSortOrder" />
      <MemberSignature Language="F#" Value="member this.Sort : Microsoft.ML.Transforms.TermTransformSortOrder with get, set" Usage="Microsoft.ML.Transforms.CategoricalOneHotVectorizer.Sort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.TermTransformSortOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            How items should be ordered when vectorized. By default, they will be in the order encountered. If by value items are sorted according to their default comparison, e.g., text sorting will be case sensitive (e.g., 'A' then 'Z' then 'a').
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Term">
      <MemberSignature Language="C#" Value="public string[] Term { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Term" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.CategoricalOneHotVectorizer.Term" />
      <MemberSignature Language="VB.NET" Value="Public Property Term As String()" />
      <MemberSignature Language="F#" Value="member this.Term : string[] with get, set" Usage="Microsoft.ML.Transforms.CategoricalOneHotVectorizer.Term" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            List of terms
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextKeyValues">
      <MemberSignature Language="C#" Value="public bool TextKeyValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextKeyValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.CategoricalOneHotVectorizer.TextKeyValues" />
      <MemberSignature Language="VB.NET" Value="Public Property TextKeyValues As Boolean" />
      <MemberSignature Language="F#" Value="member this.TextKeyValues : bool with get, set" Usage="Microsoft.ML.Transforms.CategoricalOneHotVectorizer.TextKeyValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether key value metadata should be text, regardless of the actual input type
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>