<Type Name="NAIndicatorTransform" FullName="Microsoft.ML.Transforms.NAIndicatorTransform">
  <TypeSignature Language="C#" Value="public sealed class NAIndicatorTransform : Microsoft.ML.Runtime.Data.OneToOneTransformerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NAIndicatorTransform extends Microsoft.ML.Runtime.Data.OneToOneTransformerBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.NAIndicatorTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NAIndicatorTransform&#xA;Inherits OneToOneTransformerBase" />
  <TypeSignature Language="F#" Value="type NAIndicatorTransform = class&#xA;    inherit OneToOneTransformerBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.Data.OneToOneTransformerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
    <member name="NAIndicator">
      <summary>
        This transform can transform either scalars or vectors (both fixed and variable size),
        creating output columns that indicate, through the true/false booleans whether the row has a missing value.
      </summary>
      <seealso cref="T:Microsoft.ML.Runtime.Data.MetadataUtils.Kinds.HasMissingValues" />
    </member>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NAIndicatorTransform (Microsoft.ML.Runtime.IHostEnvironment env, params ValueTuple&lt;string,string&gt;[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, valuetype System.ValueTuple`2&lt;string, string&gt;[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.NAIndicatorTransform.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.ValueTuple{System.String,System.String}[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, ParamArray columns As ValueTuple(Of String, String)())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.NAIndicatorTransform : Microsoft.ML.Runtime.IHostEnvironment * ValueTuple&lt;string, string&gt;[] -&gt; Microsoft.ML.Transforms.NAIndicatorTransform" Usage="new Microsoft.ML.Transforms.NAIndicatorTransform (env, columns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="columns" Type="System.ValueTuple&lt;System.String,System.String&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "input", "output" })</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="env">The environment to use.</param>
        <param name="columns">The names of the input columns of the transformation and the corresponding names for the output columns.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Transforms.NAIndicatorTransform" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;ValueTuple&lt;string,string&gt;&gt; Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;valuetype System.ValueTuple`2&lt;string, string&gt;&gt; Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.NAIndicatorTransform.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As IReadOnlyList(Of ValueTuple(Of String, String))" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Collections.Generic.IReadOnlyList&lt;ValueTuple&lt;string, string&gt;&gt;" Usage="Microsoft.ML.Transforms.NAIndicatorTransform.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "input", "output" })</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.ValueTuple&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeRowMapper">
      <MemberSignature Language="C#" Value="protected override Microsoft.ML.Runtime.Data.IRowMapper MakeRowMapper (Microsoft.ML.Runtime.Data.ISchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.ML.Runtime.Data.IRowMapper MakeRowMapper(class Microsoft.ML.Runtime.Data.ISchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.NAIndicatorTransform.MakeRowMapper(Microsoft.ML.Runtime.Data.ISchema)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MakeRowMapper (schema As ISchema) As IRowMapper" />
      <MemberSignature Language="F#" Value="override this.MakeRowMapper : Microsoft.ML.Runtime.Data.ISchema -&gt; Microsoft.ML.Runtime.Data.IRowMapper" Usage="nAIndicatorTransform.MakeRowMapper schema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IRowMapper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="Microsoft.ML.Runtime.Data.ISchema" />
      </Parameters>
      <Docs>
        <param name="schema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save (Microsoft.ML.Runtime.Model.ModelSaveContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save(class Microsoft.ML.Runtime.Model.ModelSaveContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.NAIndicatorTransform.Save(Microsoft.ML.Runtime.Model.ModelSaveContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save (ctx As ModelSaveContext)" />
      <MemberSignature Language="F#" Value="override this.Save : Microsoft.ML.Runtime.Model.ModelSaveContext -&gt; unit" Usage="nAIndicatorTransform.Save ctx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.ModelSaveContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>
            Saves the transform.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
