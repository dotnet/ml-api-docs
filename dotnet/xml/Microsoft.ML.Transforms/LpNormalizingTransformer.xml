<Type Name="LpNormalizingTransformer" FullName="Microsoft.ML.Transforms.LpNormalizingTransformer">
  <TypeSignature Language="C#" Value="public sealed class LpNormalizingTransformer : Microsoft.ML.Data.OneToOneTransformerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LpNormalizingTransformer extends Microsoft.ML.Data.OneToOneTransformerBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.LpNormalizingTransformer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LpNormalizingTransformer&#xA;Inherits OneToOneTransformerBase" />
  <TypeSignature Language="F#" Value="type LpNormalizingTransformer = class&#xA;    inherit OneToOneTransformerBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Data.OneToOneTransformerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Lp-Norm (vector/row-wise) normalization transform. Has the following two set of arguments:
            1- Lp-Norm normalizer arguments:
               Normalize rows individually by rescaling them to unit norm (L2, L1 or LInf).
               Performs the following operation on a vector X:
                    Y = (X - M) / D, where M is mean and D is either L2 norm, L1 norm or LInf norm.
               Scaling inputs to unit norms is a common operation for text classification or clustering.
            2- Global contrast normalization (GCN) arguments:
               Performs the following operation on a vector X:
                    Y = (s * X - M) / D, where s is a scale, M is mean and D is either L2 norm or standard deviation.
               Usage examples and Matlab code:
               <a href="https://www.cs.stanford.edu/~acoates/papers/coatesleeng_aistats_2011.pdf">https://www.cs.stanford.edu/~acoates/papers/coatesleeng_aistats_2011.pdf</a>.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.ML.Transforms.LpNormalizingEstimatorBase.ColumnOptionsBase&gt; Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;class Microsoft.ML.Transforms.LpNormalizingEstimatorBase/ColumnOptionsBase&gt; Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.LpNormalizingTransformer.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As IReadOnlyCollection(Of LpNormalizingEstimatorBase.ColumnOptionsBase)" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.ML.Transforms.LpNormalizingEstimatorBase.ColumnOptionsBase&gt;" Usage="Microsoft.ML.Transforms.LpNormalizingTransformer.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.ML.Transforms.LpNormalizingEstimatorBase+ColumnOptionsBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The objects describing how the transformation is applied on the input data.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>