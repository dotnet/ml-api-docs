<Type Name="TensorFlowModel" FullName="Microsoft.ML.Transforms.TensorFlowModel">
  <TypeSignature Language="C#" Value="public sealed class TensorFlowModel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TensorFlowModel extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.TensorFlowModel" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TensorFlowModel" />
  <TypeSignature Language="F#" Value="type TensorFlowModel = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TensorFlow</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This class holds the information related to TensorFlow model and session.
            It provides some convenient methods to query model schema as well as
            creation of <see cref="T:Microsoft.ML.Transforms.TensorFlowEstimator" /> object.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetInputSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.DataViewSchema GetInputSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.DataViewSchema GetInputSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.TensorFlowModel.GetInputSchema" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInputSchema () As DataViewSchema" />
      <MemberSignature Language="F#" Value="member this.GetInputSchema : unit -&gt; Microsoft.ML.DataViewSchema" Usage="tensorFlowModel.GetInputSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TensorFlow</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.DataViewSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get <see cref="T:Microsoft.ML.DataViewSchema" /> for only those nodes which are marked "Placeholder" in the TensorFlow model.
            This method is convenient for exploring the model input(s) in case TensorFlow graph is very large.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModelSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.DataViewSchema GetModelSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.DataViewSchema GetModelSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.TensorFlowModel.GetModelSchema" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModelSchema () As DataViewSchema" />
      <MemberSignature Language="F#" Value="member this.GetModelSchema : unit -&gt; Microsoft.ML.DataViewSchema" Usage="tensorFlowModel.GetModelSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TensorFlow</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.DataViewSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get <see cref="T:Microsoft.ML.DataViewSchema" /> for complete model. Every node in the TensorFlow model will be included in the <see cref="T:Microsoft.ML.DataViewSchema" /> object.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrainTensorFlowModel">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.TensorFlowEstimator RetrainTensorFlowModel (string[] outputColumnNames, string[] inputColumnNames, string labelColumnName, string tensorFlowLabel, string optimizationOperation, int epoch = 10, int batchSize = 20, string lossOperation = null, string metricOperation = null, string learningRateOperation = null, float learningRate = 0.01, bool addBatchDimensionInput = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.TensorFlowEstimator RetrainTensorFlowModel(string[] outputColumnNames, string[] inputColumnNames, string labelColumnName, string tensorFlowLabel, string optimizationOperation, int32 epoch, int32 batchSize, string lossOperation, string metricOperation, string learningRateOperation, float32 learningRate, bool addBatchDimensionInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.TensorFlowModel.RetrainTensorFlowModel(System.String[],System.String[],System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.Single,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function RetrainTensorFlowModel (outputColumnNames As String(), inputColumnNames As String(), labelColumnName As String, tensorFlowLabel As String, optimizationOperation As String, Optional epoch As Integer = 10, Optional batchSize As Integer = 20, Optional lossOperation As String = null, Optional metricOperation As String = null, Optional learningRateOperation As String = null, Optional learningRate As Single = 0.01, Optional addBatchDimensionInput As Boolean = false) As TensorFlowEstimator" />
      <MemberSignature Language="F#" Value="member this.RetrainTensorFlowModel : string[] * string[] * string * string * string * int * int * string * string * string * single * bool -&gt; Microsoft.ML.Transforms.TensorFlowEstimator" Usage="tensorFlowModel.RetrainTensorFlowModel (outputColumnNames, inputColumnNames, labelColumnName, tensorFlowLabel, optimizationOperation, epoch, batchSize, lossOperation, metricOperation, learningRateOperation, learningRate, addBatchDimensionInput)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TensorFlow</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.TensorFlowEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputColumnNames" Type="System.String[]" />
        <Parameter Name="inputColumnNames" Type="System.String[]" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="tensorFlowLabel" Type="System.String" />
        <Parameter Name="optimizationOperation" Type="System.String" />
        <Parameter Name="epoch" Type="System.Int32" />
        <Parameter Name="batchSize" Type="System.Int32" />
        <Parameter Name="lossOperation" Type="System.String" />
        <Parameter Name="metricOperation" Type="System.String" />
        <Parameter Name="learningRateOperation" Type="System.String" />
        <Parameter Name="learningRate" Type="System.Single" />
        <Parameter Name="addBatchDimensionInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="outputColumnNames">The names of the requested model outputs.</param>
        <param name="inputColumnNames"> The names of the model inputs.</param>
        <param name="labelColumnName">Name of the label column.</param>
        <param name="tensorFlowLabel">Name of the node in TensorFlow graph that is used as label during training in TensorFlow.
            The value of <paramref name="labelColumnName" /> from <see cref="T:Microsoft.ML.IDataView" /> is fed to this node.</param>
        <param name="optimizationOperation">The name of the optimization operation in the TensorFlow graph.</param>
        <param name="epoch">Number of training iterations.</param>
        <param name="batchSize">Number of samples to use for mini-batch training.</param>
        <param name="lossOperation">The name of the operation in the TensorFlow graph to compute training loss (Optional).</param>
        <param name="metricOperation">The name of the operation in the TensorFlow graph to compute performance metric during training (Optional).</param>
        <param name="learningRateOperation">The name of the operation in the TensorFlow graph which sets optimizer learning rate (Optional).</param>
        <param name="learningRate">Learning rate to use during optimization (Optional).</param>
        <param name="addBatchDimensionInput">Add a batch dimension to the input e.g. input = [224, 224, 3] =&gt; [-1, 224, 224, 3].
            This parameter is used to deal with models that have unknown shape but the internal operators in the model require data to have batch dimension as well.</param>
        <summary>
            Retrain the TensorFlow model on new data.
            The model is not loaded again instead the information contained in <see cref="T:Microsoft.ML.Transforms.TensorFlowModel" /> class is reused
            (c.f. <see cref="P:Microsoft.ML.Transforms.TensorFlowModel.ModelPath" /> and <see cref="P:Microsoft.ML.Transforms.TensorFlowModel.Session" />).
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The support for retraining is experimental.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScoreTensorFlowModel">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.TensorFlowEstimator ScoreTensorFlowModel (string outputColumnName, string inputColumnName, bool addBatchDimensionInput = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.TensorFlowEstimator ScoreTensorFlowModel(string outputColumnName, string inputColumnName, bool addBatchDimensionInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.TensorFlowModel.ScoreTensorFlowModel(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScoreTensorFlowModel (outputColumnName As String, inputColumnName As String, Optional addBatchDimensionInput As Boolean = false) As TensorFlowEstimator" />
      <MemberSignature Language="F#" Value="member this.ScoreTensorFlowModel : string * string * bool -&gt; Microsoft.ML.Transforms.TensorFlowEstimator" Usage="tensorFlowModel.ScoreTensorFlowModel (outputColumnName, inputColumnName, addBatchDimensionInput)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TensorFlow</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.TensorFlowEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="addBatchDimensionInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="outputColumnName">The name of the requested model output.</param>
        <param name="inputColumnName"> The name of the model input.</param>
        <param name="addBatchDimensionInput">Add a batch dimension to the input e.g. input = [224, 224, 3] =&gt; [-1, 224, 224, 3].
            This parameter is used to deal with models that have unknown shape but the internal operators in the model require data to have batch dimension as well.</param>
        <summary>
            Scores a dataset using a pre-traiend <a href="https://www.tensorflow.org/">TensorFlow</a> model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[ScoreTensorFlowModel](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/TensorFlowTransform.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ScoreTensorFlowModel">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.TensorFlowEstimator ScoreTensorFlowModel (string[] outputColumnNames, string[] inputColumnNames, bool addBatchDimensionInput = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Transforms.TensorFlowEstimator ScoreTensorFlowModel(string[] outputColumnNames, string[] inputColumnNames, bool addBatchDimensionInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.TensorFlowModel.ScoreTensorFlowModel(System.String[],System.String[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScoreTensorFlowModel (outputColumnNames As String(), inputColumnNames As String(), Optional addBatchDimensionInput As Boolean = false) As TensorFlowEstimator" />
      <MemberSignature Language="F#" Value="member this.ScoreTensorFlowModel : string[] * string[] * bool -&gt; Microsoft.ML.Transforms.TensorFlowEstimator" Usage="tensorFlowModel.ScoreTensorFlowModel (outputColumnNames, inputColumnNames, addBatchDimensionInput)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TensorFlow</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.TensorFlowEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputColumnNames" Type="System.String[]" />
        <Parameter Name="inputColumnNames" Type="System.String[]" />
        <Parameter Name="addBatchDimensionInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="outputColumnNames">The names of the requested model outputs.</param>
        <param name="inputColumnNames"> The names of the model inputs.</param>
        <param name="addBatchDimensionInput">Add a batch dimension to the input e.g. input = [224, 224, 3] =&gt; [-1, 224, 224, 3].
            This parameter is used to deal with models that have unknown shape but the internal operators in the model require data to have batch dimension as well.</param>
        <summary>
            Scores a dataset using a pre-traiend TensorFlow model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[ScoreTensorFlowModel](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/TensorFlow/ImageClassification.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>