<Type Name="ConditionalNormalizer" FullName="Microsoft.ML.Transforms.ConditionalNormalizer">
  <TypeSignature Language="C#" Value="public sealed class ConditionalNormalizer : Microsoft.ML.ILearningPipelineItem, Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITransformInput" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConditionalNormalizer extends System.Object implements class Microsoft.ML.ILearningPipelineItem, class Microsoft.ML.Runtime.EntryPoints.CommonInputs/ITransformInput" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.ConditionalNormalizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConditionalNormalizer&#xA;Implements CommonInputs.ITransformInput, ILearningPipelineItem" />
  <TypeSignature Language="F#" Value="type ConditionalNormalizer = class&#xA;    interface CommonInputs.ITransformInput&#xA;    interface ILearningPipelineItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConditionalNormalizer sealed : Microsoft::ML::ILearningPipelineItem, Microsoft::ML::Runtime::EntryPoints::CommonInputs::ITransformInput" />
  <TypeSignature Language="C++ CX" Value="public ref class ConditionalNormalizer sealed : Microsoft::ML::ILearningPipelineItem, Microsoft::ML::Runtime::EntryPoints::CommonInputs::ITransformInput" />
  <TypeSignature Language="C++ WINRT" Value="class ConditionalNormalizer sealed : Microsoft::ML::ILearningPipelineItem, Microsoft::ML::Runtime::EntryPoints::CommonInputs::ITransformInput" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.ILearningPipelineItem</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.EntryPoints.CommonInputs+ITransformInput</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Normalize the columns only if needed
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalNormalizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.ConditionalNormalizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConditionalNormalizer();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; ConditionalNormalizer();" />
      <MemberSignature Language="C++ WINRT" Value=" ConditionalNormalizer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalNormalizer (params string[] inputColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] inputColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.ConditionalNormalizer.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray inputColumns As String())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.ConditionalNormalizer : string[] -&gt; Microsoft.ML.Transforms.ConditionalNormalizer" Usage="new Microsoft.ML.Transforms.ConditionalNormalizer inputColumns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConditionalNormalizer(... cli::array &lt;System::String ^&gt; ^ inputColumns);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inputColumns" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="inputColumns">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalNormalizer (params ValueTuple&lt;string,string&gt;[] inputOutputColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ValueTuple`2&lt;string, string&gt;[] inputOutputColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.ConditionalNormalizer.#ctor(System.ValueTuple{System.String,System.String}[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray inputOutputColumns As ValueTuple(Of String, String)())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.ConditionalNormalizer : ValueTuple&lt;string, string&gt;[] -&gt; Microsoft.ML.Transforms.ConditionalNormalizer" Usage="new Microsoft.ML.Transforms.ConditionalNormalizer inputOutputColumns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConditionalNormalizer(... cli::array &lt;ValueTuple&lt;System::String ^, System::String ^&gt;&gt; ^ inputOutputColumns);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inputOutputColumns" Type="System.ValueTuple&lt;System.String,System.String&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="inputOutputColumns">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddColumn">
      <MemberSignature Language="C#" Value="public void AddColumn (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddColumn(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.ConditionalNormalizer.AddColumn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddColumn (source As String)" />
      <MemberSignature Language="F#" Value="member this.AddColumn : string -&gt; unit" Usage="conditionalNormalizer.AddColumn source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddColumn(System::String ^ source);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void AddColumn(Platform::String ^ source);" />
      <MemberSignature Language="C++ WINRT" Value="void AddColumn(std::wstring const &amp; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddColumn">
      <MemberSignature Language="C#" Value="public void AddColumn (string name, string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddColumn(string name, string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.ConditionalNormalizer.AddColumn(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddColumn (name As String, source As String)" />
      <MemberSignature Language="F#" Value="member this.AddColumn : string * string -&gt; unit" Usage="conditionalNormalizer.AddColumn (name, source)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddColumn(System::String ^ name, System::String ^ source);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void AddColumn(Platform::String ^ name, Platform::String ^ source);" />
      <MemberSignature Language="C++ WINRT" Value="void AddColumn(std::wstring const &amp; name, std::wstring const &amp; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyStep">
      <MemberSignature Language="C#" Value="public Microsoft.ML.ILearningPipelineStep ApplyStep (Microsoft.ML.ILearningPipelineStep previousStep, Microsoft.ML.Runtime.Experiment experiment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.ILearningPipelineStep ApplyStep(class Microsoft.ML.ILearningPipelineStep previousStep, class Microsoft.ML.Runtime.Experiment experiment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.ConditionalNormalizer.ApplyStep(Microsoft.ML.ILearningPipelineStep,Microsoft.ML.Runtime.Experiment)" />
      <MemberSignature Language="F#" Value="abstract member ApplyStep : Microsoft.ML.ILearningPipelineStep * Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.ILearningPipelineStep&#xA;override this.ApplyStep : Microsoft.ML.ILearningPipelineStep * Microsoft.ML.Runtime.Experiment -&gt; Microsoft.ML.ILearningPipelineStep" Usage="conditionalNormalizer.ApplyStep (previousStep, experiment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::ML::ILearningPipelineStep ^ ApplyStep(Microsoft::ML::ILearningPipelineStep ^ previousStep, Microsoft::ML::Runtime::Experiment ^ experiment);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::ML::ILearningPipelineStep ^ ApplyStep(Microsoft::ML::ILearningPipelineStep ^ previousStep, Microsoft::ML::Runtime::Experiment ^ experiment);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::ML::ILearningPipelineStep ApplyStep(Microsoft::ML::ILearningPipelineStep const &amp; previousStep, Microsoft::ML::Runtime::Experiment const &amp; experiment);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.ILearningPipelineItem.ApplyStep(Microsoft.ML.ILearningPipelineStep,Microsoft.ML.Runtime.Experiment)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.ILearningPipelineStep</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previousStep" Type="Microsoft.ML.ILearningPipelineStep" />
        <Parameter Name="experiment" Type="Microsoft.ML.Runtime.Experiment" />
      </Parameters>
      <Docs>
        <param name="previousStep">To be added.</param>
        <param name="experiment">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.NormalizeTransformAffineColumn[] Column { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Transforms.NormalizeTransformAffineColumn[] Column" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.ConditionalNormalizer.Column" />
      <MemberSignature Language="VB.NET" Value="Public Property Column As NormalizeTransformAffineColumn()" />
      <MemberSignature Language="F#" Value="member this.Column : Microsoft.ML.Transforms.NormalizeTransformAffineColumn[] with get, set" Usage="Microsoft.ML.Transforms.ConditionalNormalizer.Column" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::ML::Transforms::NormalizeTransformAffineColumn ^&gt; ^ Column { cli::array &lt;Microsoft::ML::Transforms::NormalizeTransformAffineColumn ^&gt; ^ get(); void set(cli::array &lt;Microsoft::ML::Transforms::NormalizeTransformAffineColumn ^&gt; ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::Array &lt;Microsoft::ML::Transforms::NormalizeTransformAffineColumn ^&gt; ^ Column { Platform::Array &lt;Microsoft::ML::Transforms::NormalizeTransformAffineColumn ^&gt; ^ get(); void set(Platform::Array &lt;Microsoft::ML::Transforms::NormalizeTransformAffineColumn ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.NormalizeTransformAffineColumn[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            New column definition(s) (optional form: name:src)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; Data" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.ConditionalNormalizer.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Var(Of IDataView)" />
      <MemberSignature Language="F#" Value="member this.Data : Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; with get, set" Usage="Microsoft.ML.Transforms.ConditionalNormalizer.Data" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ML::Runtime::EntryPoints::Var&lt;Microsoft::ML::Runtime::Data::IDataView ^&gt; ^ Data { Microsoft::ML::Runtime::EntryPoints::Var&lt;Microsoft::ML::Runtime::Data::IDataView ^&gt; ^ get(); void set(Microsoft::ML::Runtime::EntryPoints::Var&lt;Microsoft::ML::Runtime::Data::IDataView ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.EntryPoints.CommonInputs.ITransformInput.Data</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Input dataset
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixZero">
      <MemberSignature Language="C#" Value="public bool FixZero { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FixZero" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.ConditionalNormalizer.FixZero" />
      <MemberSignature Language="VB.NET" Value="Public Property FixZero As Boolean" />
      <MemberSignature Language="F#" Value="member this.FixZero : bool with get, set" Usage="Microsoft.ML.Transforms.ConditionalNormalizer.FixZero" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FixZero { bool get(); void set(bool value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool FixZero { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether to map zero to zero, preserving sparsity
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTrainingExamples">
      <MemberSignature Language="C#" Value="public long MaxTrainingExamples { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxTrainingExamples" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.ConditionalNormalizer.MaxTrainingExamples" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxTrainingExamples As Long" />
      <MemberSignature Language="F#" Value="member this.MaxTrainingExamples : int64 with get, set" Usage="Microsoft.ML.Transforms.ConditionalNormalizer.MaxTrainingExamples" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxTrainingExamples { long get(); void set(long value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property long long MaxTrainingExamples { long long get(); void set(long long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Max number of examples used to train the normalizer
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>