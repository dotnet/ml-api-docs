<Type Name="TypeConvertingEstimator+ColumnOptions" FullName="Microsoft.ML.Transforms.TypeConvertingEstimator+ColumnOptions">
  <TypeSignature Language="C#" Value="public sealed class TypeConvertingEstimator.ColumnOptions" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit TypeConvertingEstimator/ColumnOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.TypeConvertingEstimator.ColumnOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeConvertingEstimator.ColumnOptions" />
  <TypeSignature Language="F#" Value="type TypeConvertingEstimator.ColumnOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Describes how the transformer handles one column pair.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnOptions (string name, Microsoft.ML.Data.DataKind outputKind, string inputColumnName, Microsoft.ML.Data.KeyCount outputKeyCount = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype Microsoft.ML.Data.DataKind outputKind, string inputColumnName, class Microsoft.ML.Data.KeyCount outputKeyCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.TypeConvertingEstimator.ColumnOptions.#ctor(System.String,Microsoft.ML.Data.DataKind,System.String,Microsoft.ML.Data.KeyCount)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, outputKind As DataKind, inputColumnName As String, Optional outputKeyCount As KeyCount = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.TypeConvertingEstimator.ColumnOptions : string * Microsoft.ML.Data.DataKind * string * Microsoft.ML.Data.KeyCount -&gt; Microsoft.ML.Transforms.TypeConvertingEstimator.ColumnOptions" Usage="new Microsoft.ML.Transforms.TypeConvertingEstimator.ColumnOptions (name, outputKind, inputColumnName, outputKeyCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="outputKind" Type="Microsoft.ML.Data.DataKind" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="outputKeyCount" Type="Microsoft.ML.Data.KeyCount" />
      </Parameters>
      <Docs>
        <param name="name">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="outputKind">The expected kind of the converted column.</param>
        <param name="inputColumnName">Name of column to transform. If set to <see langword="null" />, the value of the <paramref name="name" /> will be used as source.</param>
        <param name="outputKeyCount">New key count, if we work with key type.</param>
        <summary>
            Describes how the transformer handles one column pair.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnOptions (string name, Type type, string inputColumnName, Microsoft.ML.Data.KeyCount outputKeyCount = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type type, string inputColumnName, class Microsoft.ML.Data.KeyCount outputKeyCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.TypeConvertingEstimator.ColumnOptions.#ctor(System.String,System.Type,System.String,Microsoft.ML.Data.KeyCount)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.TypeConvertingEstimator.ColumnOptions : string * Type * string * Microsoft.ML.Data.KeyCount -&gt; Microsoft.ML.Transforms.TypeConvertingEstimator.ColumnOptions" Usage="new Microsoft.ML.Transforms.TypeConvertingEstimator.ColumnOptions (name, type, inputColumnName, outputKeyCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="outputKeyCount" Type="Microsoft.ML.Data.KeyCount" />
      </Parameters>
      <Docs>
        <param name="name">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="type">The expected kind of the converted column.</param>
        <param name="inputColumnName">Name of column to transform. If set to <see langword="null" />, the value of the <paramref name="name" /> will be used as source.</param>
        <param name="outputKeyCount">New key count, if we work with key type.</param>
        <summary>
            Describes how the transformer handles one column pair.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputColumnName">
      <MemberSignature Language="C#" Value="public readonly string InputColumnName;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly string InputColumnName" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.TypeConvertingEstimator.ColumnOptions.InputColumnName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly InputColumnName As String " />
      <MemberSignature Language="F#" Value="val mutable InputColumnName : string" Usage="Microsoft.ML.Transforms.TypeConvertingEstimator.ColumnOptions.InputColumnName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Name of column to transform. If set to <see langword="null" />, the value of the <see cref="F:Microsoft.ML.Transforms.TypeConvertingEstimator.ColumnOptions.Name" /> will be used as source.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public readonly string Name;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly string Name" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.TypeConvertingEstimator.ColumnOptions.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Name As String " />
      <MemberSignature Language="F#" Value="val mutable Name : string" Usage="Microsoft.ML.Transforms.TypeConvertingEstimator.ColumnOptions.Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Name of the column resulting from the transformation of <see cref="F:Microsoft.ML.Transforms.TypeConvertingEstimator.ColumnOptions.InputColumnName" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputKeyCount">
      <MemberSignature Language="C#" Value="public readonly Microsoft.ML.Data.KeyCount OutputKeyCount;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly class Microsoft.ML.Data.KeyCount OutputKeyCount" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.TypeConvertingEstimator.ColumnOptions.OutputKeyCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly OutputKeyCount As KeyCount " />
      <MemberSignature Language="F#" Value="val mutable OutputKeyCount : Microsoft.ML.Data.KeyCount" Usage="Microsoft.ML.Transforms.TypeConvertingEstimator.ColumnOptions.OutputKeyCount" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.KeyCount</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            New key count, if we work with key type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputKind">
      <MemberSignature Language="C#" Value="public readonly Microsoft.ML.Data.DataKind OutputKind;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly valuetype Microsoft.ML.Data.DataKind OutputKind" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.TypeConvertingEstimator.ColumnOptions.OutputKind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly OutputKind As DataKind " />
      <MemberSignature Language="F#" Value="val mutable OutputKind : Microsoft.ML.Data.DataKind" Usage="Microsoft.ML.Transforms.TypeConvertingEstimator.ColumnOptions.OutputKind" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.DataKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The expected kind of the converted column.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>