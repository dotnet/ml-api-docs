<Type Name="PcaModelParameters" FullName="Microsoft.ML.Trainers.PCA.PcaModelParameters">
  <TypeSignature Language="C#" Value="public sealed class PcaModelParameters : Microsoft.ML.Internal.Internallearn.ModelParametersBase&lt;float&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PcaModelParameters extends Microsoft.ML.Internal.Internallearn.ModelParametersBase`1&lt;float32&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.PCA.PcaModelParameters" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PcaModelParameters&#xA;Inherits ModelParametersBase(Of Single)" />
  <TypeSignature Language="F#" Value="type PcaModelParameters = class&#xA;    inherit ModelParametersBase&lt;single&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.PCA</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Internal.Internallearn.ModelParametersBase&lt;System.Single&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Single</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
        PCA is a dimensionality-reduction transform which computes the projection of the feature vector onto a low-rank subspace. 
      </summary>
    <remarks>
      <a href="https://en.wikipedia.org/wiki/Principal_component_analysis">Principle Component Analysis (PCA)</a> is a dimensionality-reduction algorithm which computes the projection of the feature vector to onto a low-rank subspace.
      Its training is done using the technique described in the paper: <a href="https://arxiv.org/pdf/1310.6304v2.pdf">Combining Structured and Unstructured Randomness in Large Scale PCA</a>,
      and the paper <a href="https://arxiv.org/pdf/0909.4061v2.pdf">Finding Structure with Randomness: Probabilistic Algorithms for Constructing Approximate Matrix Decompositions</a><para>For more information, see also:</para><list type="bullet"><item><description><a href="https://web.stanford.edu/group/mmds/slides2010/Martinsson.pdf">Randomized Methods for Computing the Singular Value Decomposition (SVD) of very large matrices</a></description></item><item><description><a href="https://arxiv.org/abs/0809.2274">A randomized algorithm for principal component analysis</a></description></item><item><description><a href="http://users.cms.caltech.edu/~jtropp/papers/HMT11-Finding-Structure-SIREV.pdf">Finding Structure with Randomness: Probabilistic Algorithms for Constructing Approximate Matrix Decompositions</a></description></item></list></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PcaModelParameters (Microsoft.ML.IHostEnvironment env, int rank, float[][] eigenVectors, ref Microsoft.ML.Data.VBuffer&lt;float&gt; mean);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, int32 rank, float32[][] eigenVectors, [in]valuetype Microsoft.ML.Data.VBuffer`1&lt;float32&gt;&amp; mean) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.PCA.PcaModelParameters.#ctor(Microsoft.ML.IHostEnvironment,System.Int32,System.Single[][],Microsoft.ML.Data.VBuffer{System.Single}@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, rank As Integer, eigenVectors As Single()(), ByRef mean As VBuffer(Of Single))" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Trainers.PCA.PcaModelParameters : Microsoft.ML.IHostEnvironment * int * single[][] *  -&gt; Microsoft.ML.Trainers.PCA.PcaModelParameters" Usage="new Microsoft.ML.Trainers.PCA.PcaModelParameters (env, rank, eigenVectors, mean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PCA</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="rank" Type="System.Int32" />
        <Parameter Name="eigenVectors" Type="System.Single[][]" />
        <Parameter Name="mean" Type="Microsoft.ML.Data.VBuffer&lt;System.Single&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="env">The host environment.</param>
        <param name="rank">The rank of the PCA approximation of the covariance matrix. This is the number of eigenvectors in the model.</param>
        <param name="eigenVectors">Array of eigenvectors.</param>
        <param name="mean">The mean vector of the training data.</param>
        <summary>
            Instantiate new model parameters from trained model.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEigenVectors">
      <MemberSignature Language="C#" Value="public void GetEigenVectors (ref Microsoft.ML.Data.VBuffer&lt;float&gt;[] vectors, out int rank);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetEigenVectors(valuetype Microsoft.ML.Data.VBuffer`1&lt;float32&gt;[]&amp; vectors, [out] int32&amp; rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.PCA.PcaModelParameters.GetEigenVectors(Microsoft.ML.Data.VBuffer{System.Single}[]@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetEigenVectors (ByRef vectors As VBuffer(Of Single)(), ByRef rank As Integer)" />
      <MemberSignature Language="F#" Value="member this.GetEigenVectors :  *  -&gt; unit" Usage="pcaModelParameters.GetEigenVectors (vectors, rank)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PCA</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vectors" Type="Microsoft.ML.Data.VBuffer&lt;System.Single&gt;[]" RefType="ref" />
        <Parameter Name="rank" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vectors">A possibly reusable set of vectors, which will
            be expanded as necessary to accomodate the data.</param>
        <param name="rank">Set to the rank, which is also the logical length
            of <paramref name="vectors" />.</param>
        <summary>
            Copies the top eigenvectors of the covariance matrix of the training data
            into a set of buffers.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMean">
      <MemberSignature Language="C#" Value="public void GetMean (ref Microsoft.ML.Data.VBuffer&lt;float&gt; mean);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetMean(valuetype Microsoft.ML.Data.VBuffer`1&lt;float32&gt;&amp; mean) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.PCA.PcaModelParameters.GetMean(Microsoft.ML.Data.VBuffer{System.Single}@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetMean (ByRef mean As VBuffer(Of Single))" />
      <MemberSignature Language="F#" Value="member this.GetMean :  -&gt; unit" Usage="pcaModelParameters.GetMean mean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PCA</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mean" Type="Microsoft.ML.Data.VBuffer&lt;System.Single&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="mean">To be added.</param>
        <summary>
            Copies the mean vector of the training data.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictionKind">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.PredictionKind PredictionKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.PredictionKind PredictionKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.PCA.PcaModelParameters.PredictionKind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PredictionKind As PredictionKind" />
      <MemberSignature Language="F#" Value="member this.PredictionKind : Microsoft.ML.PredictionKind" Usage="Microsoft.ML.Trainers.PCA.PcaModelParameters.PredictionKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.PCA</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.PredictionKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
