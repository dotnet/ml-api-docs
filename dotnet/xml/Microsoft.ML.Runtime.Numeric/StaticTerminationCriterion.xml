<Type Name="StaticTerminationCriterion" FullName="Microsoft.ML.Runtime.Numeric.StaticTerminationCriterion">
  <TypeSignature Language="C#" Value="public abstract class StaticTerminationCriterion : Microsoft.ML.Runtime.Numeric.ITerminationCriterion" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StaticTerminationCriterion extends System.Object implements class Microsoft.ML.Runtime.Numeric.ITerminationCriterion" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Numeric.StaticTerminationCriterion" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StaticTerminationCriterion&#xA;Implements ITerminationCriterion" />
  <TypeSignature Language="F#" Value="type StaticTerminationCriterion = class&#xA;    interface ITerminationCriterion" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Numeric.ITerminationCriterion</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An abstract partial implementation of ITerminationCriterion for those which do not require resetting
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StaticTerminationCriterion ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Numeric.StaticTerminationCriterion.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FriendlyName">
      <MemberSignature Language="C#" Value="public abstract string FriendlyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FriendlyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Numeric.StaticTerminationCriterion.FriendlyName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property FriendlyName As String" />
      <MemberSignature Language="F#" Value="member this.FriendlyName : string" Usage="Microsoft.ML.Runtime.Numeric.StaticTerminationCriterion.FriendlyName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.Numeric.ITerminationCriterion.FriendlyName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Numeric.StaticTerminationCriterion.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="staticTerminationCriterion.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.Numeric.ITerminationCriterion.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Prepares the ITerminationCriterion for a new round of optimization
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public abstract bool Terminate (Microsoft.ML.Runtime.Numeric.Optimizer.OptimizerState state, out string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Terminate(class Microsoft.ML.Runtime.Numeric.Optimizer/OptimizerState state, [out] string&amp; message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Numeric.StaticTerminationCriterion.Terminate(Microsoft.ML.Runtime.Numeric.Optimizer.OptimizerState,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Terminate (state As Optimizer.OptimizerState, ByRef message As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Terminate : Microsoft.ML.Runtime.Numeric.Optimizer.OptimizerState *  -&gt; bool" Usage="staticTerminationCriterion.Terminate (state, message)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.Numeric.ITerminationCriterion.Terminate(Microsoft.ML.Runtime.Numeric.Optimizer.OptimizerState,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.ML.Runtime.Numeric.Optimizer+OptimizerState" />
        <Parameter Name="message" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="state">the state of the optimizer</param>
        <param name="message">a message to be printed (or null for no message)</param>
        <summary>
            Determines whether to stop optimization
            </summary>
        <returns>
            true iff criterion is met, i.e. optimization should halt
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>