<Type Name="ILineSearch" FullName="Microsoft.ML.Runtime.Numeric.ILineSearch">
  <TypeSignature Language="C#" Value="public interface ILineSearch : Microsoft.ML.Runtime.Numeric.IDiffLineSearch" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILineSearch implements class Microsoft.ML.Runtime.Numeric.IDiffLineSearch" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Numeric.ILineSearch" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILineSearch&#xA;Implements IDiffLineSearch" />
  <TypeSignature Language="F#" Value="type ILineSearch = interface&#xA;    interface IDiffLineSearch" />
  <TypeSignature Language="C++ CLI" Value="public interface class ILineSearch : Microsoft::ML::Runtime::Numeric::IDiffLineSearch" />
  <TypeSignature Language="C++ CX" Value="public interface class ILineSearch : Microsoft::ML::Runtime::Numeric::IDiffLineSearch" />
  <TypeSignature Language="C++ WINRT" Value="__interface ILineSearch : Microsoft::ML::Runtime::Numeric::IDiffLineSearch" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Numeric.IDiffLineSearch</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Line search that does not use derivatives
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Minimize">
      <MemberSignature Language="C#" Value="public float Minimize (Func&lt;float,float&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 Minimize(class System.Func`2&lt;float32, float32&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Numeric.ILineSearch.Minimize(System.Func{System.Single,System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Function Minimize (func As Func(Of Single, Single)) As Single" />
      <MemberSignature Language="F#" Value="abstract member Minimize : Func&lt;single, single&gt; -&gt; single" Usage="iLineSearch.Minimize func" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float Minimize(Func&lt;float, float&gt; ^ func);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="func" Type="System.Func&lt;System.Single,System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="func">Function to minimize</param>
        <summary>
            Finds a local minimum of the function
            </summary>
        <returns>Minimizing value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>