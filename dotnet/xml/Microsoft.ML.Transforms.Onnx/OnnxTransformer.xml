<Type Name="OnnxTransformer" FullName="Microsoft.ML.Transforms.Onnx.OnnxTransformer">
  <TypeSignature Language="C#" Value="public sealed class OnnxTransformer : Microsoft.ML.Data.RowToRowTransformerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OnnxTransformer extends Microsoft.ML.Data.RowToRowTransformerBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.Onnx.OnnxTransformer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OnnxTransformer&#xA;Inherits RowToRowTransformerBase" />
  <TypeSignature Language="F#" Value="type OnnxTransformer = class&#xA;    inherit RowToRowTransformerBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Data.RowToRowTransformerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:Microsoft.ML.ITransformer" /> resulting from fitting an <see cref="T:Microsoft.ML.Transforms.Onnx.OnnxScoringEstimator" />.
            </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[
            
             ###  Estimator Characteristics
             |  |  |
             | -- | -- |
             | Does this estimator need to look at the data to train its parameters? | No |
             | Input column data type | Known-sized vector of <xref:System.Single> or <xref:System.Double> types. |
             | Output column data type | The same data type as the input column |
             | Required NuGet in addition to Microsoft.ML | Microsoft.ML.OnnxTransformer |
            
             Supports inferencing of models in ONNX 1.2, 1.3, 1.4, and 1.5 format (opset 7, 8, 9, and 10), using the
             [Microsoft.ML.OnnxRuntime](https://www.nuget.org/packages/Microsoft.ML.OnnxRuntime/) library.
             Models are scored on CPU by default. If GPU execution is needed (optional), use the
             NuGet package available at [Microsoft.ML.OnnxRuntime.Gpu](https://www.nuget.org/packages/Microsoft.ML.OnnxRuntime.Gpu/)
             and download [CUDA 9.1 Toolkit](https://developer.nvidia.com/cuda-downloads) and [cuDNN](https://developer.nvidia.com/cudnn).
             Set parameter 'gpuDeviceId' to a valid non-negative integer. Typical device ID values are 0 or 1.
             The inputs and outputs of the ONNX models must be Tensor type. Sequence and Maps are not yet supported.
             OnnxRuntime currently works on Windows and Ubuntu 16.04 Linux 64-bit platforms. Mac OS to be supported soon.
             Visit [ONNX Models](https://github.com/onnx/models) to see a list of readily available models to get started with.
             Refer to [ONNX](http://onnx.ai) for more information.
            
             To create this estimator use the following:
             [ApplyOnnxModel](xref:Microsoft.ML.OnnxCatalog.ApplyOnnxModel*)
            
             Check the See Also section for links to usage examples.
             ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>
