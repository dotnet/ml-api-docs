<Type Name="OnnxSequenceType" FullName="Microsoft.ML.Transforms.Onnx.OnnxSequenceType">
  <TypeSignature Language="C#" Value="public sealed class OnnxSequenceType : Microsoft.ML.Data.StructuredDataViewType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OnnxSequenceType extends Microsoft.ML.Data.StructuredDataViewType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.Onnx.OnnxSequenceType" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OnnxSequenceType&#xA;Inherits StructuredDataViewType" />
  <TypeSignature Language="F#" Value="type OnnxSequenceType = class&#xA;    inherit StructuredDataViewType" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Data.StructuredDataViewType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The corresponding <see cref="P:Microsoft.ML.DataViewSchema.Column.Type" /> of ONNX's sequence type in <see cref="T:Microsoft.ML.IDataView" />'s type system.
            In other words, if an ONNX model produces a sequence, a column in <see cref="T:Microsoft.ML.IDataView" /> may be typed to <see cref="T:Microsoft.ML.Transforms.Onnx.OnnxSequenceType" />.
            Its underlying type is <see cref="T:System.Collections.Generic.IEnumerable`1" />, where the generic type "T" is the input argument of
            <see cref="M:Microsoft.ML.Transforms.Onnx.OnnxSequenceType.#ctor(System.Type)" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OnnxSequenceType (Type elementType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type elementType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Onnx.OnnxSequenceType.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementType As Type)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.Onnx.OnnxSequenceType : Type -&gt; Microsoft.ML.Transforms.Onnx.OnnxSequenceType" Usage="new Microsoft.ML.Transforms.Onnx.OnnxSequenceType elementType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="elementType">The element type of a sequence.</param>
        <summary>
            Create the corresponding <see cref="T:Microsoft.ML.Data.DataViewType" /> for ONNX sequence.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (Microsoft.ML.Data.DataViewType other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(class Microsoft.ML.Data.DataViewType other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Onnx.OnnxSequenceType.Equals(Microsoft.ML.Data.DataViewType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (other As DataViewType) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.ML.Data.DataViewType -&gt; bool" Usage="onnxSequenceType.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.ML.Data.DataViewType" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Onnx.OnnxSequenceType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="onnxSequenceType.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
