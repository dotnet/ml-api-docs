<Type Name="OnnxSessionOptions" FullName="Microsoft.ML.Transforms.Onnx.OnnxSessionOptions">
  <TypeSignature Language="C#" Value="public sealed class OnnxSessionOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OnnxSessionOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.Onnx.OnnxSessionOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OnnxSessionOptions" />
  <TypeSignature Language="F#" Value="type OnnxSessionOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OnnxSessionOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSessionOptions">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.CreateOnnxSessionOptions CreateSessionOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Transforms.Onnx.OnnxSessionOptions/CreateOnnxSessionOptions CreateSessionOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.CreateSessionOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property CreateSessionOptions As OnnxSessionOptions.CreateOnnxSessionOptions" />
      <MemberSignature Language="F#" Value="member this.CreateSessionOptions : Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.CreateOnnxSessionOptions with get, set" Usage="Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.CreateSessionOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Onnx.OnnxSessionOptions+CreateOnnxSessionOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCpuMemArena">
      <MemberSignature Language="C#" Value="public bool EnableCpuMemArena { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCpuMemArena" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.EnableCpuMemArena" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCpuMemArena As Boolean" />
      <MemberSignature Language="F#" Value="member this.EnableCpuMemArena : bool with get, set" Usage="Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.EnableCpuMemArena" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Enables Arena allocator for the CPU memory allocations. Default is true.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableMemoryPattern">
      <MemberSignature Language="C#" Value="public bool EnableMemoryPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableMemoryPattern" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.EnableMemoryPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableMemoryPattern As Boolean" />
      <MemberSignature Language="F#" Value="member this.EnableMemoryPattern : bool with get, set" Usage="Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.EnableMemoryPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Enables the use of the memory allocation patterns in the first Run() call for subsequent runs. Default = true.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableProfiling">
      <MemberSignature Language="C#" Value="public bool EnableProfiling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableProfiling" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.EnableProfiling" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableProfiling As Boolean" />
      <MemberSignature Language="F#" Value="member this.EnableProfiling : bool with get, set" Usage="Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.EnableProfiling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Enables profiling of InferenceSession.Run() calls. Default is false
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionMode">
      <MemberSignature Language="C#" Value="public Microsoft.ML.OnnxRuntime.ExecutionMode ExecutionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.OnnxRuntime.ExecutionMode ExecutionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.ExecutionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ExecutionMode As ExecutionMode" />
      <MemberSignature Language="F#" Value="member this.ExecutionMode : Microsoft.ML.OnnxRuntime.ExecutionMode with get, set" Usage="Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.ExecutionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.OnnxRuntime.ExecutionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sets the execution mode for the session. Default is set to ORT_SEQUENTIAL.
            See [ONNX_Runtime_Perf_Tuning.md] for more details.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalInterOpNumThreads">
      <MemberSignature Language="C#" Value="public int GlobalInterOpNumThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GlobalInterOpNumThreads" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.GlobalInterOpNumThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property GlobalInterOpNumThreads As Integer" />
      <MemberSignature Language="F#" Value="member this.GlobalInterOpNumThreads : int with get, set" Usage="Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.GlobalInterOpNumThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sets the number of threads used to parallelize the execution of the graph (across nodes)
            If sequential execution is enabled this value is ignored
            A value of 0 means ORT will pick a default. Only used when <see cref="P:Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.PerSessionThreads" /> is false.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalIntraOpNumThreads">
      <MemberSignature Language="C#" Value="public int GlobalIntraOpNumThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GlobalIntraOpNumThreads" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.GlobalIntraOpNumThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property GlobalIntraOpNumThreads As Integer" />
      <MemberSignature Language="F#" Value="member this.GlobalIntraOpNumThreads : int with get, set" Usage="Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.GlobalIntraOpNumThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sets the number of threads used to parallelize the execution within nodes
            A value of 0 means ORT will pick a default. Only used when <see cref="P:Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.PerSessionThreads" /> is false.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GraphOptimizationLevel">
      <MemberSignature Language="C#" Value="public Microsoft.ML.OnnxRuntime.GraphOptimizationLevel GraphOptimizationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.OnnxRuntime.GraphOptimizationLevel GraphOptimizationLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.GraphOptimizationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property GraphOptimizationLevel As GraphOptimizationLevel" />
      <MemberSignature Language="F#" Value="member this.GraphOptimizationLevel : Microsoft.ML.OnnxRuntime.GraphOptimizationLevel with get, set" Usage="Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.GraphOptimizationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.OnnxRuntime.GraphOptimizationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sets the graph optimization level for the session. Default is set to ORT_ENABLE_ALL.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterOpNumThreads">
      <MemberSignature Language="C#" Value="public int InterOpNumThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InterOpNumThreads" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.InterOpNumThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property InterOpNumThreads As Integer" />
      <MemberSignature Language="F#" Value="member this.InterOpNumThreads : int with get, set" Usage="Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.InterOpNumThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sets the number of threads used to parallelize the execution of the graph (across nodes)
            If sequential execution is enabled this value is ignored
            A value of 0 means ORT will pick a default
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntraOpNumThreads">
      <MemberSignature Language="C#" Value="public int IntraOpNumThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IntraOpNumThreads" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.IntraOpNumThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property IntraOpNumThreads As Integer" />
      <MemberSignature Language="F#" Value="member this.IntraOpNumThreads : int with get, set" Usage="Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.IntraOpNumThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sets the number of threads used to parallelize the execution within nodes
            A value of 0 means ORT will pick a default
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogId">
      <MemberSignature Language="C#" Value="public string LogId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.LogId" />
      <MemberSignature Language="VB.NET" Value="Public Property LogId As String" />
      <MemberSignature Language="F#" Value="member this.LogId : string with get, set" Usage="Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.LogId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Log Id to be used for the session. Default is empty string.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogSeverityLevel">
      <MemberSignature Language="C#" Value="public Microsoft.ML.OnnxRuntime.OrtLoggingLevel LogSeverityLevel;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype Microsoft.ML.OnnxRuntime.OrtLoggingLevel LogSeverityLevel" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.LogSeverityLevel" />
      <MemberSignature Language="VB.NET" Value="Public LogSeverityLevel As OrtLoggingLevel " />
      <MemberSignature Language="F#" Value="val mutable LogSeverityLevel : Microsoft.ML.OnnxRuntime.OrtLoggingLevel" Usage="Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.LogSeverityLevel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.OnnxRuntime.OrtLoggingLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Log Severity Level for the session logs. Default = ORT_LOGGING_LEVEL_WARNING
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogVerbosityLevel">
      <MemberSignature Language="C#" Value="public int LogVerbosityLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LogVerbosityLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.LogVerbosityLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property LogVerbosityLevel As Integer" />
      <MemberSignature Language="F#" Value="member this.LogVerbosityLevel : int with get, set" Usage="Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.LogVerbosityLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Log Verbosity Level for the session logs. Default = 0. Valid values are &gt;=0.
            This takes into effect only when the LogSeverityLevel is set to ORT_LOGGING_LEVEL_VERBOSE.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptimizedModelFilePath">
      <MemberSignature Language="C#" Value="public string OptimizedModelFilePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OptimizedModelFilePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.OptimizedModelFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Property OptimizedModelFilePath As String" />
      <MemberSignature Language="F#" Value="member this.OptimizedModelFilePath : string with get, set" Usage="Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.OptimizedModelFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Set filepath to save optimized model after graph level transformations. Default is empty, which implies saving is disabled.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerSessionThreads">
      <MemberSignature Language="C#" Value="public bool PerSessionThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PerSessionThreads" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.PerSessionThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property PerSessionThreads As Boolean" />
      <MemberSignature Language="F#" Value="member this.PerSessionThreads : bool with get, set" Usage="Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.PerSessionThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Per session threads. Default is true.
            If false this makes all sessions in the process use a global TP.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProfileOutputPathPrefix">
      <MemberSignature Language="C#" Value="public string ProfileOutputPathPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProfileOutputPathPrefix" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.ProfileOutputPathPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property ProfileOutputPathPrefix As String" />
      <MemberSignature Language="F#" Value="member this.ProfileOutputPathPrefix : string with get, set" Usage="Microsoft.ML.Transforms.Onnx.OnnxSessionOptions.ProfileOutputPathPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.OnnxTransformer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Path prefix to use for output of profiling data
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
