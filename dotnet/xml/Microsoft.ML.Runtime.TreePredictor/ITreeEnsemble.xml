<Type Name="ITreeEnsemble" FullName="Microsoft.ML.Runtime.TreePredictor.ITreeEnsemble">
  <TypeSignature Language="C#" Value="public interface ITreeEnsemble" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITreeEnsemble" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.TreePredictor.ITreeEnsemble" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITreeEnsemble" />
  <TypeSignature Language="F#" Value="type ITreeEnsemble = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITreeEnsemble" />
  <TypeSignature Language="C++ CX" Value="public interface class ITreeEnsemble" />
  <TypeSignature Language="C++ WINRT" Value="__interface ITreeEnsemble" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Predictor that has ensemble tree structures and returns collection of trees.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetTrees">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.TreePredictor.ITree[] GetTrees ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Runtime.TreePredictor.ITree[] GetTrees() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TreePredictor.ITreeEnsemble.GetTrees" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTrees () As ITree()" />
      <MemberSignature Language="F#" Value="abstract member GetTrees : unit -&gt; Microsoft.ML.Runtime.TreePredictor.ITree[]" Usage="iTreeEnsemble.GetTrees " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Microsoft::ML::Runtime::TreePredictor::ITree ^&gt; ^ GetTrees();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::Array &lt;Microsoft::ML::Runtime::TreePredictor::ITree ^&gt; ^ GetTrees();" />
      <MemberSignature Language="C++ WINRT" Value="std::Array &lt;Microsoft::ML::Runtime::TreePredictor::ITree const &amp;&gt; GetTrees();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.TreePredictor.ITree[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns the collection of trees.
            </summary>
        <returns>Collection of trees</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumTrees">
      <MemberSignature Language="C#" Value="public int NumTrees { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumTrees" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.TreePredictor.ITreeEnsemble.NumTrees" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumTrees As Integer" />
      <MemberSignature Language="F#" Value="member this.NumTrees : int" Usage="Microsoft.ML.Runtime.TreePredictor.ITreeEnsemble.NumTrees" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumTrees { int get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int NumTrees { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the number of trees in the ensemble.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>