<Type Name="NodeKeys" FullName="Microsoft.ML.Runtime.TreePredictor.NodeKeys">
  <TypeSignature Language="C#" Value="public static class NodeKeys" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NodeKeys extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.TreePredictor.NodeKeys" />
  <TypeSignature Language="VB.NET" Value="Public Class NodeKeys" />
  <TypeSignature Language="F#" Value="type NodeKeys = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class NodeKeys abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class NodeKeys abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class NodeKeys abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Keys to represent the properties of node.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Extras">
      <MemberSignature Language="C#" Value="public const string Extras;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Extras" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.TreePredictor.NodeKeys.Extras" />
      <MemberSignature Language="VB.NET" Value="Public Const Extras As String " />
      <MemberSignature Language="F#" Value="val mutable Extras : string" Usage="Microsoft.ML.Runtime.TreePredictor.NodeKeys.Extras" />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ Extras;" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring Extras;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Extra items that will be displayed in the tool-tip. Type is string for default trees.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GainValue">
      <MemberSignature Language="C#" Value="public const string GainValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string GainValue" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.TreePredictor.NodeKeys.GainValue" />
      <MemberSignature Language="VB.NET" Value="Public Const GainValue As String " />
      <MemberSignature Language="F#" Value="val mutable GainValue : string" Usage="Microsoft.ML.Runtime.TreePredictor.NodeKeys.GainValue" />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ GainValue;" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring GainValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gain value (specific to fasttree) of the interior node. Type is double for default trees.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeafValue">
      <MemberSignature Language="C#" Value="public const string LeafValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string LeafValue" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.TreePredictor.NodeKeys.LeafValue" />
      <MemberSignature Language="VB.NET" Value="Public Const LeafValue As String " />
      <MemberSignature Language="F#" Value="val mutable LeafValue : string" Usage="Microsoft.ML.Runtime.TreePredictor.NodeKeys.LeafValue" />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ LeafValue;" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring LeafValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Leaf value of the leaf node. Type is double for default trees.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousLeafValue">
      <MemberSignature Language="C#" Value="public const string PreviousLeafValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PreviousLeafValue" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.TreePredictor.NodeKeys.PreviousLeafValue" />
      <MemberSignature Language="VB.NET" Value="Public Const PreviousLeafValue As String " />
      <MemberSignature Language="F#" Value="val mutable PreviousLeafValue : string" Usage="Microsoft.ML.Runtime.TreePredictor.NodeKeys.PreviousLeafValue" />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ PreviousLeafValue;" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring PreviousLeafValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Previous leaf value(specific to fasttree) of the interior node. Type is double for default trees.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitGain">
      <MemberSignature Language="C#" Value="public const string SplitGain;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SplitGain" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.TreePredictor.NodeKeys.SplitGain" />
      <MemberSignature Language="VB.NET" Value="Public Const SplitGain As String " />
      <MemberSignature Language="F#" Value="val mutable SplitGain : string" Usage="Microsoft.ML.Runtime.TreePredictor.NodeKeys.SplitGain" />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SplitGain;" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring SplitGain;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Split gain of the interior node. Type is double for default trees.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitName">
      <MemberSignature Language="C#" Value="public const string SplitName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SplitName" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.TreePredictor.NodeKeys.SplitName" />
      <MemberSignature Language="VB.NET" Value="Public Const SplitName As String " />
      <MemberSignature Language="F#" Value="val mutable SplitName : string" Usage="Microsoft.ML.Runtime.TreePredictor.NodeKeys.SplitName" />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SplitName;" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring SplitName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Name of the the interior node. It is Feature name if it is fasttree. Type is string for default trees.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Threshold">
      <MemberSignature Language="C#" Value="public const string Threshold;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Threshold" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.TreePredictor.NodeKeys.Threshold" />
      <MemberSignature Language="VB.NET" Value="Public Const Threshold As String " />
      <MemberSignature Language="F#" Value="val mutable Threshold : string" Usage="Microsoft.ML.Runtime.TreePredictor.NodeKeys.Threshold" />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ Threshold;" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring Threshold;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Threshold value of the interior node. Type is string for default trees.
            It is expected that the string has exactly two space separated components.
            i. The first one should be the operator
            ii. The second one should be the actual threshold
            For ex., for a split like f1 &lt;= 10, expected Threshold is "&lt;= 10"
            For a split like color not-in { blue, green }, expected Threshold is "not-in { blue, green }"
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>