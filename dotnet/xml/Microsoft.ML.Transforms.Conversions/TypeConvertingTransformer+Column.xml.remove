<Type Name="TypeConvertingTransformer+Column" FullName="Microsoft.ML.Transforms.Conversions.TypeConvertingTransformer+Column">
  <TypeSignature Language="C#" Value="public class TypeConvertingTransformer.Column : Microsoft.ML.Data.OneToOneColumn" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit TypeConvertingTransformer/Column extends Microsoft.ML.Data.OneToOneColumn" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.Conversions.TypeConvertingTransformer.Column" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeConvertingTransformer.Column&#xA;Inherits OneToOneColumn" />
  <TypeSignature Language="F#" Value="type TypeConvertingTransformer.Column = class&#xA;    inherit OneToOneColumn" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.Data.OneToOneColumn</BaseTypeName>
    <BaseTypeName FrameworkAlternate="ml-dotnet">Microsoft.ML.Data.OneToOneColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Column ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Conversions.TypeConvertingTransformer.Column.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyCount">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.KeyCount KeyCount;" />
      <MemberSignature Language="ILAsm" Value=".field public class Microsoft.ML.Data.KeyCount KeyCount" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Conversions.TypeConvertingTransformer.Column.KeyCount" />
      <MemberSignature Language="VB.NET" Value="Public KeyCount As KeyCount " />
      <MemberSignature Language="F#" Value="val mutable KeyCount : Microsoft.ML.Data.KeyCount" Usage="Microsoft.ML.Transforms.Conversions.TypeConvertingTransformer.Column.KeyCount" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.LastOccurenceWins, HelpText="For a key column, this defines the cardinality/count of valid key values", ShortName="key", Visibility=Microsoft.ML.CommandLine.ArgumentAttribute+VisibilityType.CmdLineOnly)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.KeyCount</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public string Range;" />
      <MemberSignature Language="ILAsm" Value=".field public string Range" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Conversions.TypeConvertingTransformer.Column.Range" />
      <MemberSignature Language="VB.NET" Value="Public Range As String " />
      <MemberSignature Language="F#" Value="val mutable Range : string" Usage="Microsoft.ML.Transforms.Conversions.TypeConvertingTransformer.Column.Range" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="For a key column, this defines the range of values", ShortName="key", Visibility=Microsoft.ML.CommandLine.ArgumentAttribute+VisibilityType.EntryPointsOnly)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResultType">
      <MemberSignature Language="C#" Value="public Nullable&lt;Microsoft.ML.Data.DataKind&gt; ResultType;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Nullable`1&lt;valuetype Microsoft.ML.Data.DataKind&gt; ResultType" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Conversions.TypeConvertingTransformer.Column.ResultType" />
      <MemberSignature Language="VB.NET" Value="Public ResultType As Nullable(Of DataKind) " />
      <MemberSignature Language="F#" Value="val mutable ResultType : Nullable&lt;Microsoft.ML.Data.DataKind&gt;" Usage="Microsoft.ML.Transforms.Conversions.TypeConvertingTransformer.Column.ResultType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="The result type", ShortName="type")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.ML.Data.DataKind&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
