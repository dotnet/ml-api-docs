<Type Name="HashJoiningTransform" FullName="Microsoft.ML.Transforms.Conversions.HashJoiningTransform">
  <TypeSignature Language="C#" Value="public sealed class HashJoiningTransform : Microsoft.ML.Data.OneToOneTransformBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HashJoiningTransform extends Microsoft.ML.Data.OneToOneTransformBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.Conversions.HashJoiningTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HashJoiningTransform&#xA;Inherits OneToOneTransformBase" />
  <TypeSignature Language="F#" Value="type HashJoiningTransform = class&#xA;    inherit OneToOneTransformBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.Data.OneToOneTransformBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="ml-dotnet">Microsoft.ML.Data.OneToOneTransformBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This transform hashes its input columns. Each column is hashed separately, and within each
            column there is an option to specify which slots should be hashed together into one output slot.
            This transform can be applied either to single valued columns or to known length vector columns.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HashJoiningTransform (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Transforms.Conversions.HashJoiningTransform.Arguments args, Microsoft.ML.Data.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Transforms.Conversions.HashJoiningTransform/Arguments args, class Microsoft.ML.Data.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Conversions.HashJoiningTransform.#ctor(Microsoft.ML.IHostEnvironment,Microsoft.ML.Transforms.Conversions.HashJoiningTransform.Arguments,Microsoft.ML.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, args As HashJoiningTransform.Arguments, input As IDataView)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.Conversions.HashJoiningTransform : Microsoft.ML.IHostEnvironment * Microsoft.ML.Transforms.Conversions.HashJoiningTransform.Arguments * Microsoft.ML.Data.IDataView -&gt; Microsoft.ML.Transforms.Conversions.HashJoiningTransform" Usage="new Microsoft.ML.Transforms.Conversions.HashJoiningTransform (env, args, input)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="args" Type="Microsoft.ML.Transforms.Conversions.HashJoiningTransform+Arguments" />
        <Parameter Name="input" Type="Microsoft.ML.Data.IDataView" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <param name="input">To be added.</param>
        <summary>
        Converts multiple column values into hashes. 
        This transform accepts both numeric and text inputs, both single and vector-valued columns. 
      </summary>
        <remarks>
        This transform can be helpful for ranking and cross-validation. In the case of ranking, where the GroupIdColumn column is required,
        and needs to be of a key type you can use the <see cref="T:Microsoft.ML.Transforms.CategoricalHashOneHotVectorizer" /> to hash the text value of a single GroupID column into a key value.
        If the GroupID is the combination of the values from multiple columns, you can use the HashConverter to hash multiple text columns into one key column. 
        Similarly with CrossValidator and the StratificationColumn. 
      </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HashJoiningTransform (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Data.IDataView input, string name, string source = null, bool join = true, int hashBits = 31);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Data.IDataView input, string name, string source, bool join, int32 hashBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Conversions.HashJoiningTransform.#ctor(Microsoft.ML.IHostEnvironment,Microsoft.ML.Data.IDataView,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, input As IDataView, name As String, Optional source As String = null, Optional join As Boolean = true, Optional hashBits As Integer = 31)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.Conversions.HashJoiningTransform : Microsoft.ML.IHostEnvironment * Microsoft.ML.Data.IDataView * string * string * bool * int -&gt; Microsoft.ML.Transforms.Conversions.HashJoiningTransform" Usage="new Microsoft.ML.Transforms.Conversions.HashJoiningTransform (env, input, name, source, join, hashBits)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.Data.IDataView" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="join" Type="System.Boolean" />
        <Parameter Name="hashBits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="env">Host Environment.</param>
        <param name="input">Input <see cref="T:Microsoft.ML.Data.IDataView" />. This is the output from previous transform or loader.</param>
        <param name="name">Name of the output column.</param>
        <param name="source">Name of the column to be transformed. If this is null '<paramref name="name" />' will be used.</param>
        <param name="join">Whether the values need to be combined for a single hash.</param>
        <param name="hashBits">Number of bits to hash into. Must be between 1 and 31, inclusive.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Transforms.Conversions.HashJoiningTransform" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.Conversions.HashJoiningTransform Create (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Model.ModelLoadContext ctx, Microsoft.ML.Data.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.Conversions.HashJoiningTransform Create(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Model.ModelLoadContext ctx, class Microsoft.ML.Data.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Conversions.HashJoiningTransform.Create(Microsoft.ML.IHostEnvironment,Microsoft.ML.Model.ModelLoadContext,Microsoft.ML.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (env As IHostEnvironment, ctx As ModelLoadContext, input As IDataView) As HashJoiningTransform" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.ML.IHostEnvironment * Microsoft.ML.Model.ModelLoadContext * Microsoft.ML.Data.IDataView -&gt; Microsoft.ML.Transforms.Conversions.HashJoiningTransform" Usage="Microsoft.ML.Transforms.Conversions.HashJoiningTransform.Create (env, ctx, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Conversions.HashJoiningTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="ctx" Type="Microsoft.ML.Model.ModelLoadContext" />
        <Parameter Name="input" Type="Microsoft.ML.Data.IDataView" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="ctx">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnTypeCore">
      <MemberSignature Language="C#" Value="protected override Microsoft.ML.Data.ColumnType GetColumnTypeCore (int iinfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.ML.Data.ColumnType GetColumnTypeCore(int32 iinfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Conversions.HashJoiningTransform.GetColumnTypeCore(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetColumnTypeCore (iinfo As Integer) As ColumnType" />
      <MemberSignature Language="F#" Value="override this.GetColumnTypeCore : int -&gt; Microsoft.ML.Data.ColumnType" Usage="hashJoiningTransform.GetColumnTypeCore iinfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.ColumnType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iinfo" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="iinfo">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGetterCore">
      <MemberSignature Language="C#" Value="protected override Delegate GetGetterCore (Microsoft.ML.IChannel ch, Microsoft.ML.Data.Row input, int iinfo, out Action disposer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Delegate GetGetterCore(class Microsoft.ML.IChannel ch, class Microsoft.ML.Data.Row input, int32 iinfo, [out] class System.Action&amp; disposer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Conversions.HashJoiningTransform.GetGetterCore(Microsoft.ML.IChannel,Microsoft.ML.Data.Row,System.Int32,System.Action@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetGetterCore (ch As IChannel, input As Row, iinfo As Integer, ByRef disposer As Action) As Delegate" />
      <MemberSignature Language="F#" Value="override this.GetGetterCore : Microsoft.ML.IChannel * Microsoft.ML.Data.Row * int *  -&gt; Delegate" Usage="hashJoiningTransform.GetGetterCore (ch, input, iinfo, disposer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Microsoft.ML.IChannel" />
        <Parameter Name="input" Type="Microsoft.ML.Data.Row" />
        <Parameter Name="iinfo" Type="System.Int32" />
        <Parameter Name="disposer" Type="System.Action" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ch">To be added.</param>
        <param name="input">To be added.</param>
        <param name="iinfo">To be added.</param>
        <param name="disposer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoaderSignature">
      <MemberSignature Language="C#" Value="public const string LoaderSignature;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string LoaderSignature" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Conversions.HashJoiningTransform.LoaderSignature" />
      <MemberSignature Language="VB.NET" Value="Public Const LoaderSignature As String " />
      <MemberSignature Language="F#" Value="val mutable LoaderSignature : string" Usage="Microsoft.ML.Transforms.Conversions.HashJoiningTransform.LoaderSignature" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumBitsLim">
      <MemberSignature Language="C#" Value="public const int NumBitsLim = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 NumBitsLim = (32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Conversions.HashJoiningTransform.NumBitsLim" />
      <MemberSignature Language="VB.NET" Value="Public Const NumBitsLim As Integer  = 32" />
      <MemberSignature Language="F#" Value="val mutable NumBitsLim : int" Usage="Microsoft.ML.Transforms.Conversions.HashJoiningTransform.NumBitsLim" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumBitsMin">
      <MemberSignature Language="C#" Value="public const int NumBitsMin = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 NumBitsMin = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Conversions.HashJoiningTransform.NumBitsMin" />
      <MemberSignature Language="VB.NET" Value="Public Const NumBitsMin As Integer  = 1" />
      <MemberSignature Language="F#" Value="val mutable NumBitsMin : int" Usage="Microsoft.ML.Transforms.Conversions.HashJoiningTransform.NumBitsMin" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save (Microsoft.ML.Model.ModelSaveContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save(class Microsoft.ML.Model.ModelSaveContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Conversions.HashJoiningTransform.Save(Microsoft.ML.Model.ModelSaveContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save (ctx As ModelSaveContext)" />
      <MemberSignature Language="F#" Value="override this.Save : Microsoft.ML.Model.ModelSaveContext -&gt; unit" Usage="hashJoiningTransform.Save ctx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Model.ModelSaveContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>