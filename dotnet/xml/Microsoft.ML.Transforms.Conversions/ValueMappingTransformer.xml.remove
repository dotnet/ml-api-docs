<Type Name="ValueMappingTransformer" FullName="Microsoft.ML.Transforms.Conversions.ValueMappingTransformer">
  <TypeSignature Language="C#" Value="public class ValueMappingTransformer : Microsoft.ML.Data.OneToOneTransformerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValueMappingTransformer extends Microsoft.ML.Data.OneToOneTransformerBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.Conversions.ValueMappingTransformer" />
  <TypeSignature Language="VB.NET" Value="Public Class ValueMappingTransformer&#xA;Inherits OneToOneTransformerBase" />
  <TypeSignature Language="F#" Value="type ValueMappingTransformer = class&#xA;    inherit OneToOneTransformerBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Data.OneToOneTransformerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
        The ValueMappingEstimator is a 1-1 mapping from a key to value. 
      </summary>
    <remarks>
        Given a set of keys and values, the ValueMappingEstimator builds up a dictionary so that when given a specific key it will return a 
        specific value. The ValueMappingEstimator supports keys and values of different <see cref="T:System.Type" /> to support different data types.
        Examples for using a ValueMappingEstimator are:
        <list><item><description>Converting a string value to a string value, this can be useful for grouping (i.e. 'cat', 'dog', 'horse' maps to 'mammals')</description></item><item><description>Converting a string value to a integer value (i.e. converting the text description like quality to an numeric where 'good' maps to 1, 'poor' maps to 0</description></item><item><description>
              Converting a integer value to a string value and have the string value represented as a <see cref="T:Microsoft.ML.Data.KeyType" />
              (i.e. convert zip codes to a state string value, which will generate a unique integer value that can be used as a label.
            </description></item></list>
        Values can be repeated to allow for multiple keys to map to the same value, however keys can not be repeated. The mapping between keys and values
        can be specified either through lists, where the key list and value list must be the same size or can be done through an <see cref="T:Microsoft.Data.DataView.IDataView" />.
      </remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="protected static Microsoft.ML.Transforms.Conversions.ValueMappingTransformer Create (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Model.ModelLoadContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class Microsoft.ML.Transforms.Conversions.ValueMappingTransformer Create(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Model.ModelLoadContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Conversions.ValueMappingTransformer.Create(Microsoft.ML.IHostEnvironment,Microsoft.ML.Model.ModelLoadContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Create (env As IHostEnvironment, ctx As ModelLoadContext) As ValueMappingTransformer" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.ML.IHostEnvironment * Microsoft.ML.Model.ModelLoadContext -&gt; Microsoft.ML.Transforms.Conversions.ValueMappingTransformer" Usage="Microsoft.ML.Transforms.Conversions.ValueMappingTransformer.Create (env, ctx)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Conversions.ValueMappingTransformer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="ctx" Type="Microsoft.ML.Model.ModelLoadContext" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="protected static Microsoft.ML.Data.IDataTransform Create (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Model.ModelLoadContext ctx, Microsoft.Data.DataView.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class Microsoft.ML.Data.IDataTransform Create(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Model.ModelLoadContext ctx, class Microsoft.Data.DataView.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Conversions.ValueMappingTransformer.Create(Microsoft.ML.IHostEnvironment,Microsoft.ML.Model.ModelLoadContext,Microsoft.Data.DataView.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Create (env As IHostEnvironment, ctx As ModelLoadContext, input As IDataView) As IDataTransform" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.ML.IHostEnvironment * Microsoft.ML.Model.ModelLoadContext * Microsoft.Data.DataView.IDataView -&gt; Microsoft.ML.Data.IDataTransform" Usage="Microsoft.ML.Transforms.Conversions.ValueMappingTransformer.Create (env, ctx, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.IDataTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="ctx" Type="Microsoft.ML.Model.ModelLoadContext" />
        <Parameter Name="input" Type="Microsoft.Data.DataView.IDataView" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="ctx">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimitiveType">
      <MemberSignature Language="C#" Value="protected static Microsoft.Data.DataView.PrimitiveType GetPrimitiveType (Type rawType, out bool isVectorType);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class Microsoft.Data.DataView.PrimitiveType GetPrimitiveType(class System.Type rawType, [out] bool&amp; isVectorType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Conversions.ValueMappingTransformer.GetPrimitiveType(System.Type,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetPrimitiveType (rawType As Type, ByRef isVectorType As Boolean) As PrimitiveType" />
      <MemberSignature Language="F#" Value="static member GetPrimitiveType : Type *  -&gt; Microsoft.Data.DataView.PrimitiveType" Usage="Microsoft.ML.Transforms.Conversions.ValueMappingTransformer.GetPrimitiveType (rawType, isVectorType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Data.DataView.PrimitiveType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawType" Type="System.Type" />
        <Parameter Name="isVectorType" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rawType">To be added.</param>
        <param name="isVectorType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save (Microsoft.ML.Model.ModelSaveContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save(class Microsoft.ML.Model.ModelSaveContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Conversions.ValueMappingTransformer.Save(Microsoft.ML.Model.ModelSaveContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save (ctx As ModelSaveContext)" />
      <MemberSignature Language="F#" Value="override this.Save : Microsoft.ML.Model.ModelSaveContext -&gt; unit" Usage="valueMappingTransformer.Save ctx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Model.ModelSaveContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueColumnMetadata">
      <MemberSignature Language="C#" Value="public Microsoft.Data.DataView.Schema.Metadata ValueColumnMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Data.DataView.Schema/Metadata ValueColumnMetadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Conversions.ValueMappingTransformer.ValueColumnMetadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueColumnMetadata As Schema.Metadata" />
      <MemberSignature Language="F#" Value="member this.ValueColumnMetadata : Microsoft.Data.DataView.Schema.Metadata" Usage="Microsoft.ML.Transforms.Conversions.ValueMappingTransformer.ValueColumnMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Data.DataView.Schema+Metadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueColumnType">
      <MemberSignature Language="C#" Value="public Microsoft.Data.DataView.ColumnType ValueColumnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Data.DataView.ColumnType ValueColumnType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Conversions.ValueMappingTransformer.ValueColumnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueColumnType As ColumnType" />
      <MemberSignature Language="F#" Value="member this.ValueColumnType : Microsoft.Data.DataView.ColumnType" Usage="Microsoft.ML.Transforms.Conversions.ValueMappingTransformer.ValueColumnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Data.DataView.ColumnType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
