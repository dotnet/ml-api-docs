<Type Name="TrainerEstimatorReconciler+BinaryClassifierNoCalibration" FullName="Microsoft.ML.StaticPipe.TrainerEstimatorReconciler+BinaryClassifierNoCalibration">
  <TypeSignature Language="C#" Value="public sealed class TrainerEstimatorReconciler.BinaryClassifierNoCalibration : Microsoft.ML.StaticPipe.TrainerEstimatorReconciler" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit TrainerEstimatorReconciler/BinaryClassifierNoCalibration extends Microsoft.ML.StaticPipe.TrainerEstimatorReconciler" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.StaticPipe.TrainerEstimatorReconciler.BinaryClassifierNoCalibration" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TrainerEstimatorReconciler.BinaryClassifierNoCalibration&#xA;Inherits TrainerEstimatorReconciler" />
  <TypeSignature Language="F#" Value="type TrainerEstimatorReconciler.BinaryClassifierNoCalibration = class&#xA;    inherit TrainerEstimatorReconciler" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.StaticPipe.TrainerEstimatorReconciler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A reconciler capable of handling the most common cases for binary classification that does not
            have calibrated outputs and therefore no probability output is produced. If probability output
            is required, please add a calibrator after this trainer.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryClassifierNoCalibration (Microsoft.ML.StaticPipe.TrainerEstimatorReconciler.BinaryClassifierNoCalibration.EstimatorFactory estimatorFactory, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.StaticPipe.TrainerEstimatorReconciler/BinaryClassifierNoCalibration/EstimatorFactory estimatorFactory, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TrainerEstimatorReconciler.BinaryClassifierNoCalibration.#ctor(Microsoft.ML.StaticPipe.TrainerEstimatorReconciler.BinaryClassifierNoCalibration.EstimatorFactory,Microsoft.ML.StaticPipe.Scalar{System.Boolean},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single})" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.StaticPipe.TrainerEstimatorReconciler.BinaryClassifierNoCalibration : Microsoft.ML.StaticPipe.TrainerEstimatorReconciler.BinaryClassifierNoCalibration.EstimatorFactory * Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; -&gt; Microsoft.ML.StaticPipe.TrainerEstimatorReconciler.BinaryClassifierNoCalibration" Usage="new Microsoft.ML.StaticPipe.TrainerEstimatorReconciler.BinaryClassifierNoCalibration (estimatorFactory, label, features, weights)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="estimatorFactory" Type="Microsoft.ML.StaticPipe.TrainerEstimatorReconciler+BinaryClassifierNoCalibration+EstimatorFactory" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="estimatorFactory">The delegate to create the training estimator. It is assumed that this estimator
            will produce a single new scalar <see cref="T:System.Single" /> column named <see cref="F:Microsoft.ML.Data.DefaultColumnNames.Score" />.</param>
        <param name="label">The input label column.</param>
        <param name="features">The input features column.</param>
        <param name="weights">The input weights column, or <c>null</c> if there are no weights.</param>
        <summary>
            Constructs a new general binary classifier reconciler.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Output">
      <MemberSignature Language="C#" Value="public ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; Output { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ValueTuple`2&lt;class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; Output" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.StaticPipe.TrainerEstimatorReconciler.BinaryClassifierNoCalibration.Output" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Output As ValueTuple(Of Scalar(Of Single), Scalar(Of Boolean))" />
      <MemberSignature Language="F#" Value="member this.Output : ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TrainerEstimatorReconciler.BinaryClassifierNoCalibration.Output" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet-preview">
          <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "predictedLabel" })</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The general output for binary classifiers.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outputs">
      <MemberSignature Language="C#" Value="protected override System.Collections.Generic.IEnumerable&lt;Microsoft.ML.StaticPipe.PipelineColumn&gt; Outputs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.ML.StaticPipe.PipelineColumn&gt; Outputs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.StaticPipe.TrainerEstimatorReconciler.BinaryClassifierNoCalibration.Outputs" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Outputs As IEnumerable(Of PipelineColumn)" />
      <MemberSignature Language="F#" Value="member this.Outputs : seq&lt;Microsoft.ML.StaticPipe.PipelineColumn&gt;" Usage="Microsoft.ML.StaticPipe.TrainerEstimatorReconciler.BinaryClassifierNoCalibration.Outputs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.ML.StaticPipe.PipelineColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The output columns, which will contain at least the columns produced by <see cref="P:Microsoft.ML.StaticPipe.TrainerEstimatorReconciler.BinaryClassifierNoCalibration.Output" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReconcileCore">
      <MemberSignature Language="C#" Value="protected override Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt; ReconcileCore (Microsoft.ML.Runtime.IHostEnvironment env, string[] inputNames);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.ML.IEstimator`1&lt;class Microsoft.ML.ITransformer&gt; ReconcileCore(class Microsoft.ML.Runtime.IHostEnvironment env, string[] inputNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TrainerEstimatorReconciler.BinaryClassifierNoCalibration.ReconcileCore(Microsoft.ML.Runtime.IHostEnvironment,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ReconcileCore (env As IHostEnvironment, inputNames As String()) As IEstimator(Of ITransformer)" />
      <MemberSignature Language="F#" Value="override this.ReconcileCore : Microsoft.ML.Runtime.IHostEnvironment * string[] -&gt; Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt;" Usage="binaryClassifierNoCalibration.ReconcileCore (env, inputNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="inputNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="inputNames">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>