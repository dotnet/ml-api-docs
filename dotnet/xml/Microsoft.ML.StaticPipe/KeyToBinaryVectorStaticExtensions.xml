<Type Name="KeyToBinaryVectorStaticExtensions" FullName="Microsoft.ML.StaticPipe.KeyToBinaryVectorStaticExtensions">
  <TypeSignature Language="C#" Value="public static class KeyToBinaryVectorStaticExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit KeyToBinaryVectorStaticExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.StaticPipe.KeyToBinaryVectorStaticExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module KeyToBinaryVectorStaticExtensions" />
  <TypeSignature Language="F#" Value="type KeyToBinaryVectorStaticExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for the static-pipeline over <see cref="T:Microsoft.ML.StaticPipe.PipelineColumn" /> objects.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ToBinaryVector&lt;TKey&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;float&gt; ToBinaryVector&lt;TKey&gt; (this Microsoft.ML.StaticPipe.Key&lt;TKey&gt; input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; ToBinaryVector&lt;TKey&gt;(class Microsoft.ML.StaticPipe.Key`1&lt;!!TKey&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.KeyToBinaryVectorStaticExtensions.ToBinaryVector``1(Microsoft.ML.StaticPipe.Key{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToBinaryVector(Of TKey) (input As Key(Of TKey)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ToBinaryVector : Microsoft.ML.StaticPipe.Key&lt;'Key&gt; -&gt; Microsoft.ML.StaticPipe.Vector&lt;single&gt;" Usage="Microsoft.ML.StaticPipe.KeyToBinaryVectorStaticExtensions.ToBinaryVector input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Key&lt;TKey&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">To be added.</typeparam>
        <param name="input">To be added.</param>
        <summary>
            Takes a column of key type of known cardinality and produces a vector of bits representing the key in binary form.
            The first value is encoded as all zeros and missing values are encoded as all ones.
            In the case where a vector has multiple keys, the encoded values are concatenated.
            Number of bits per key is determined as the number of bits needed to represent the cardinality of the keys plus one.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBinaryVector&lt;TKey&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;float&gt; ToBinaryVector&lt;TKey&gt; (this Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;TKey&gt;&gt; input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;float32&gt; ToBinaryVector&lt;TKey&gt;(class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`1&lt;!!TKey&gt;&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.KeyToBinaryVectorStaticExtensions.ToBinaryVector``1(Microsoft.ML.StaticPipe.VarVector{Microsoft.ML.StaticPipe.Key{``0}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToBinaryVector(Of TKey) (input As VarVector(Of Key(Of TKey))) As VarVector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ToBinaryVector : Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;'Key&gt;&gt; -&gt; Microsoft.ML.StaticPipe.VarVector&lt;single&gt;" Usage="Microsoft.ML.StaticPipe.KeyToBinaryVectorStaticExtensions.ToBinaryVector input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;TKey&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">To be added.</typeparam>
        <param name="input">To be added.</param>
        <summary>
            Takes a column of key type of known cardinality and produces a vector of bits representing the key in binary form.
            The first value is encoded as all zeros and missing values are encoded as all ones.
            In the case where a vector has multiple keys, the encoded values are concatenated.
            Number of bits per key is determined as the number of bits needed to represent the cardinality of the keys plus one.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBinaryVector&lt;TKey&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;float&gt; ToBinaryVector&lt;TKey&gt; (this Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;TKey&gt;&gt; input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; ToBinaryVector&lt;TKey&gt;(class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`1&lt;!!TKey&gt;&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.KeyToBinaryVectorStaticExtensions.ToBinaryVector``1(Microsoft.ML.StaticPipe.Vector{Microsoft.ML.StaticPipe.Key{``0}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToBinaryVector(Of TKey) (input As Vector(Of Key(Of TKey))) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ToBinaryVector : Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;'Key&gt;&gt; -&gt; Microsoft.ML.StaticPipe.Vector&lt;single&gt;" Usage="Microsoft.ML.StaticPipe.KeyToBinaryVectorStaticExtensions.ToBinaryVector input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;TKey&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">To be added.</typeparam>
        <param name="input">To be added.</param>
        <summary>
            Takes a column of key type of known cardinality and produces a vector of bits representing the key in binary form.
            The first value is encoded as all zeros and missing values are encoded as all ones.
            In the case where a vector has multiple keys, the encoded values are concatenated.
            Number of bits per key is determined as the number of bits needed to represent the cardinality of the keys plus one.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBinaryVector&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;float&gt; ToBinaryVector&lt;TKey,TValue&gt; (this Microsoft.ML.StaticPipe.Key&lt;TKey,TValue&gt; input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; ToBinaryVector&lt;TKey, TValue&gt;(class Microsoft.ML.StaticPipe.Key`2&lt;!!TKey, !!TValue&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.KeyToBinaryVectorStaticExtensions.ToBinaryVector``2(Microsoft.ML.StaticPipe.Key{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToBinaryVector(Of TKey, TValue) (input As Key(Of TKey, TValue)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ToBinaryVector : Microsoft.ML.StaticPipe.Key&lt;'Key, 'Value&gt; -&gt; Microsoft.ML.StaticPipe.Vector&lt;single&gt;" Usage="Microsoft.ML.StaticPipe.KeyToBinaryVectorStaticExtensions.ToBinaryVector input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Key&lt;TKey,TValue&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">To be added.</typeparam>
        <typeparam name="TValue">To be added.</typeparam>
        <param name="input">To be added.</param>
        <summary>
            Takes a column of key type of known cardinality and produces a vector of bits representing the key in binary form.
            The first value is encoded as all zeros and missing values are encoded as all ones.
            In the case where a vector has multiple keys, the encoded values are concatenated.
            Number of bits per key is determined as the number of bits needed to represent the cardinality of the keys plus one.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBinaryVector&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;float&gt; ToBinaryVector&lt;TKey,TValue&gt; (this Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;TKey,TValue&gt;&gt; input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;float32&gt; ToBinaryVector&lt;TKey, TValue&gt;(class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!TKey, !!TValue&gt;&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.KeyToBinaryVectorStaticExtensions.ToBinaryVector``2(Microsoft.ML.StaticPipe.VarVector{Microsoft.ML.StaticPipe.Key{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToBinaryVector(Of TKey, TValue) (input As VarVector(Of Key(Of TKey, TValue))) As VarVector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ToBinaryVector : Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;'Key, 'Value&gt;&gt; -&gt; Microsoft.ML.StaticPipe.VarVector&lt;single&gt;" Usage="Microsoft.ML.StaticPipe.KeyToBinaryVectorStaticExtensions.ToBinaryVector input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;TKey,TValue&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">To be added.</typeparam>
        <typeparam name="TValue">To be added.</typeparam>
        <param name="input">To be added.</param>
        <summary>
            Takes a column of key type of known cardinality and produces a vector of bits representing the key in binary form.
            The first value is encoded as all zeros and missing values are encoded as all ones.
            In the case where a vector has multiple keys, the encoded values are concatenated.
            Number of bits per key is determined as the number of bits needed to represent the cardinality of the keys plus one.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBinaryVector&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;float&gt; ToBinaryVector&lt;TKey,TValue&gt; (this Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;TKey,TValue&gt;&gt; input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; ToBinaryVector&lt;TKey, TValue&gt;(class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!TKey, !!TValue&gt;&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.KeyToBinaryVectorStaticExtensions.ToBinaryVector``2(Microsoft.ML.StaticPipe.Vector{Microsoft.ML.StaticPipe.Key{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToBinaryVector(Of TKey, TValue) (input As Vector(Of Key(Of TKey, TValue))) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ToBinaryVector : Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;'Key, 'Value&gt;&gt; -&gt; Microsoft.ML.StaticPipe.Vector&lt;single&gt;" Usage="Microsoft.ML.StaticPipe.KeyToBinaryVectorStaticExtensions.ToBinaryVector input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;TKey,TValue&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">To be added.</typeparam>
        <typeparam name="TValue">To be added.</typeparam>
        <param name="input">To be added.</param>
        <summary>
            Takes a column of key type of known cardinality and produces a vector of bits representing the key in binary form.
            The first value is encoded as all zeros and missing values are encoded as all ones.
            In the case where a vector has multiple keys, the encoded values are concatenated.
            Number of bits per key is determined as the number of bits needed to represent the cardinality of the keys plus one.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>