<Type Name="AveragedPerceptronStaticExtensions" FullName="Microsoft.ML.StaticPipe.AveragedPerceptronStaticExtensions">
  <TypeSignature Language="C#" Value="public static class AveragedPerceptronStaticExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AveragedPerceptronStaticExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.StaticPipe.AveragedPerceptronStaticExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module AveragedPerceptronStaticExtensions" />
  <TypeSignature Language="F#" Value="type AveragedPerceptronStaticExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Binary Classification trainer estimators.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AveragedPerceptron">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; AveragedPerceptron (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights, Microsoft.ML.Trainers.IClassificationLoss lossFunction, Microsoft.ML.Trainers.AveragedPerceptronTrainer.Options options, Action&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; AveragedPerceptron(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, class Microsoft.ML.Trainers.IClassificationLoss lossFunction, class Microsoft.ML.Trainers.AveragedPerceptronTrainer/Options options, class System.Action`1&lt;class Microsoft.ML.Trainers.LinearBinaryModelParameters&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.AveragedPerceptronStaticExtensions.AveragedPerceptron(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.StaticPipe.Scalar{System.Boolean},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},Microsoft.ML.Trainers.IClassificationLoss,Microsoft.ML.Trainers.AveragedPerceptronTrainer.Options,System.Action{Microsoft.ML.Trainers.LinearBinaryModelParameters})" />
      <MemberSignature Language="F#" Value="static member AveragedPerceptron : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Microsoft.ML.Trainers.IClassificationLoss * Microsoft.ML.Trainers.AveragedPerceptronTrainer.Options * Action&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters&gt; -&gt; ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;" Usage="Microsoft.ML.StaticPipe.AveragedPerceptronStaticExtensions.AveragedPerceptron (catalog, label, features, weights, lossFunction, options, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="ml-dotnet-preview">
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "predictedLabel" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="lossFunction" Type="Microsoft.ML.Trainers.IClassificationLoss" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.AveragedPerceptronTrainer+Options" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="label">The label, or dependent variable.</param>
        <param name="features">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="lossFunction">The custom loss.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained, as well as the calibrator on top of that model. Note that this action cannot change the
            result in any way; it is only a way for the caller to be informed about what was learnt.</param>
        <summary>
            Predict a target using a linear binary classification model trained with the AveragedPerceptron trainer, and a custom loss.
            </summary>
        <returns>The set of output columns including in order the predicted binary classification score (which will range
            from negative to positive infinity), and the predicted label.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:Microsoft.ML.Trainers.AveragedPerceptronTrainer" />
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[AveragedPerceptron](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Static/AveragedPerceptronBinaryClassification.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="AveragedPerceptron">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; AveragedPerceptron (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights = null, Microsoft.ML.Trainers.IClassificationLoss lossFunction = null, float learningRate = 1, bool decreaseLearningRate = false, float l2Regularization = 0, int numIterations = 1, Action&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; AveragedPerceptron(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, class Microsoft.ML.Trainers.IClassificationLoss lossFunction, float32 learningRate, bool decreaseLearningRate, float32 l2Regularization, int32 numIterations, class System.Action`1&lt;class Microsoft.ML.Trainers.LinearBinaryModelParameters&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.AveragedPerceptronStaticExtensions.AveragedPerceptron(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.StaticPipe.Scalar{System.Boolean},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},Microsoft.ML.Trainers.IClassificationLoss,System.Single,System.Boolean,System.Single,System.Int32,System.Action{Microsoft.ML.Trainers.LinearBinaryModelParameters})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AveragedPerceptron (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, label As Scalar(Of Boolean), features As Vector(Of Single), Optional weights As Scalar(Of Single) = null, Optional lossFunction As IClassificationLoss = null, Optional learningRate As Single = 1, Optional decreaseLearningRate As Boolean = false, Optional l2Regularization As Single = 0, Optional numIterations As Integer = 1, Optional onFit As Action(Of LinearBinaryModelParameters) = null) As ValueTuple(Of Scalar(Of Single), Scalar(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member AveragedPerceptron : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Microsoft.ML.Trainers.IClassificationLoss * single * bool * single * int * Action&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters&gt; -&gt; ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;" Usage="Microsoft.ML.StaticPipe.AveragedPerceptronStaticExtensions.AveragedPerceptron (catalog, label, features, weights, lossFunction, learningRate, decreaseLearningRate, l2Regularization, numIterations, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="ml-dotnet-preview">
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "predictedLabel" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="lossFunction" Type="Microsoft.ML.Trainers.IClassificationLoss" />
        <Parameter Name="learningRate" Type="System.Single" />
        <Parameter Name="decreaseLearningRate" Type="System.Boolean" />
        <Parameter Name="l2Regularization" Type="System.Single" />
        <Parameter Name="numIterations" Type="System.Int32" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="label">The label, or dependent variable.</param>
        <param name="features">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="lossFunction">The custom loss.</param>
        <param name="learningRate">The learning Rate.</param>
        <param name="decreaseLearningRate">Decrease learning rate as iterations progress.</param>
        <param name="l2Regularization">L2 regularization weight.</param>
        <param name="numIterations">Number of training iterations through the data.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained, as well as the calibrator on top of that model. Note that this action cannot change the
            result in any way; it is only a way for the caller to be informed about what was learnt.</param>
        <summary>
            Predict a target using a linear binary classification model trained with the AveragedPerceptron trainer, and a custom loss.
            </summary>
        <returns>The set of output columns including in order the predicted binary classification score (which will range
            from negative to positive infinity), and the predicted label.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:Microsoft.ML.Trainers.AveragedPerceptronTrainer" />
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[AveragedPerceptron](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Static/AveragedPerceptronBinaryClassification.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>