<Type Name="LbfgsBinaryStaticExtensions" FullName="Microsoft.ML.StaticPipe.LbfgsBinaryStaticExtensions">
  <TypeSignature Language="C#" Value="public static class LbfgsBinaryStaticExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LbfgsBinaryStaticExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.StaticPipe.LbfgsBinaryStaticExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module LbfgsBinaryStaticExtensions" />
  <TypeSignature Language="F#" Value="type LbfgsBinaryStaticExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Binary Classification trainer estimators.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="LbfgsLogisticRegression">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; LbfgsLogisticRegression (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights, Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer.Options options, Action&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; LbfgsLogisticRegression(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, class Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer/Options options, class System.Action`1&lt;class Microsoft.ML.Calibrators.CalibratedModelParametersBase`2&lt;class Microsoft.ML.Trainers.LinearBinaryModelParameters, class Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.LbfgsBinaryStaticExtensions.LbfgsLogisticRegression(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.StaticPipe.Scalar{System.Boolean},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer.Options,System.Action{Microsoft.ML.Calibrators.CalibratedModelParametersBase{Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator}})" />
      <MemberSignature Language="F#" Value="static member LbfgsLogisticRegression : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer.Options * Action&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters, Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt; -&gt; ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;" Usage="Microsoft.ML.StaticPipe.LbfgsBinaryStaticExtensions.LbfgsLogisticRegression (catalog, label, features, weights, options, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="ml-dotnet-preview">
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "probability", "predictedLabel" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer+Options" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="label">The label, or dependent variable.</param>
        <param name="features">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained.  Note that this action cannot change the result in any way; it is only a way for the caller to
            be informed about what was learnt.</param>
        <summary>
             Predict a target using a linear binary classification model trained with the <see cref="T:Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer" /> trainer.
            </summary>
        <returns>The predicted output.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LbfgsLogisticRegression">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; LbfgsLogisticRegression (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights = null, float l1Regularization = 1, float l2Regularization = 1, float optimizationTolerance = 1E-07, int historySize = 20, bool enforceNonNegativity = false, Action&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; LbfgsLogisticRegression(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, float32 l1Regularization, float32 l2Regularization, float32 optimizationTolerance, int32 historySize, bool enforceNonNegativity, class System.Action`1&lt;class Microsoft.ML.Calibrators.CalibratedModelParametersBase`2&lt;class Microsoft.ML.Trainers.LinearBinaryModelParameters, class Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.LbfgsBinaryStaticExtensions.LbfgsLogisticRegression(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.StaticPipe.Scalar{System.Boolean},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Action{Microsoft.ML.Calibrators.CalibratedModelParametersBase{Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LbfgsLogisticRegression (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, label As Scalar(Of Boolean), features As Vector(Of Single), Optional weights As Scalar(Of Single) = null, Optional l1Regularization As Single = 1, Optional l2Regularization As Single = 1, Optional optimizationTolerance As Single = 1E-07, Optional historySize As Integer = 20, Optional enforceNonNegativity As Boolean = false, Optional onFit As Action(Of CalibratedModelParametersBase(Of LinearBinaryModelParameters, PlattCalibrator)) = null) As ValueTuple(Of Scalar(Of Single), Scalar(Of Single), Scalar(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member LbfgsLogisticRegression : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * single * single * single * int * bool * Action&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters, Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt; -&gt; ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;" Usage="Microsoft.ML.StaticPipe.LbfgsBinaryStaticExtensions.LbfgsLogisticRegression (catalog, label, features, weights, l1Regularization, l2Regularization, optimizationTolerance, historySize, enforceNonNegativity, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="ml-dotnet-preview">
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "probability", "predictedLabel" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="l1Regularization" Type="System.Single" />
        <Parameter Name="l2Regularization" Type="System.Single" />
        <Parameter Name="optimizationTolerance" Type="System.Single" />
        <Parameter Name="historySize" Type="System.Int32" />
        <Parameter Name="enforceNonNegativity" Type="System.Boolean" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="label">The label, or dependent variable.</param>
        <param name="features">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="l1Regularization">Weight of L1 regularization term.</param>
        <param name="l2Regularization">Weight of L2 regularization term.</param>
        <param name="optimizationTolerance">Threshold for optimizer convergence.</param>
        <param name="historySize">Memory size for <see cref="T:Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer" />. Low=faster, less accurate.</param>
        <param name="enforceNonNegativity">Enforce non-negative weights.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained.  Note that this action cannot change the result in any way; it is only a way for the caller to
            be informed about what was learnt.</param>
        <summary>
             Predict a target using a linear binary classification model trained with the <see cref="T:Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer" /> trainer.
            </summary>
        <returns>The predicted output.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>