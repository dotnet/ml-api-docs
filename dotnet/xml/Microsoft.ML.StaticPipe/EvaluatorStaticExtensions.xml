<Type Name="EvaluatorStaticExtensions" FullName="Microsoft.ML.StaticPipe.EvaluatorStaticExtensions">
  <TypeSignature Language="C#" Value="public static class EvaluatorStaticExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EvaluatorStaticExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.StaticPipe.EvaluatorStaticExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module EvaluatorStaticExtensions" />
  <TypeSignature Language="F#" Value="type EvaluatorStaticExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for evaluation.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Evaluate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Data.BinaryClassificationMetrics Evaluate&lt;T&gt; (this Microsoft.ML.BinaryClassificationCatalog catalog, Microsoft.ML.StaticPipe.DataView&lt;T&gt; data, Func&lt;T,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; label, Func&lt;T,ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;&gt; pred);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Data.BinaryClassificationMetrics Evaluate&lt;T&gt;(class Microsoft.ML.BinaryClassificationCatalog catalog, class Microsoft.ML.StaticPipe.DataView`1&lt;!!T&gt; data, class System.Func`2&lt;!!T, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; label, class System.Func`2&lt;!!T, valuetype System.ValueTuple`2&lt;class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt;&gt; pred) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.EvaluatorStaticExtensions.Evaluate``1(Microsoft.ML.BinaryClassificationCatalog,Microsoft.ML.StaticPipe.DataView{``0},System.Func{``0,Microsoft.ML.StaticPipe.Scalar{System.Boolean}},System.Func{``0,System.ValueTuple{Microsoft.ML.StaticPipe.Scalar{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Boolean}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Evaluate(Of T) (catalog As BinaryClassificationCatalog, data As DataView(Of T), label As Func(Of T, Scalar(Of Boolean)), pred As Func(Of T, ValueTuple(Of Scalar(Of Single), Scalar(Of Boolean)))) As BinaryClassificationMetrics" />
      <MemberSignature Language="F#" Value="static member Evaluate : Microsoft.ML.BinaryClassificationCatalog * Microsoft.ML.StaticPipe.DataView&lt;'T&gt; * Func&lt;'T, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; * Func&lt;'T, ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;&gt; -&gt; Microsoft.ML.Data.BinaryClassificationMetrics" Usage="Microsoft.ML.StaticPipe.EvaluatorStaticExtensions.Evaluate (catalog, data, label, pred)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.BinaryClassificationMetrics</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog" RefType="this" />
        <Parameter Name="data" Type="Microsoft.ML.StaticPipe.DataView&lt;T&gt;" />
        <Parameter Name="label" Type="System.Func&lt;T,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;" />
        <Parameter Name="pred" Type="System.Func&lt;T,System.ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="ml-dotnet-preview">
              <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "predictedLabel" })</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The shape type for the input data.</typeparam>
        <param name="catalog">The binary classification catalog.</param>
        <param name="data">The data to evaluate.</param>
        <param name="label">The index delegate for the label column.</param>
        <param name="pred">The index delegate for columns from uncalibrated prediction of a binary classifier.
            Under typical scenarios, this will just be the same tuple of results returned from the trainer.</param>
        <summary>
            Evaluates scored binary classification data, if the predictions are not calibrated.
            </summary>
        <returns>The evaluation results for these uncalibrated outputs.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Data.CalibratedBinaryClassificationMetrics Evaluate&lt;T&gt; (this Microsoft.ML.BinaryClassificationCatalog catalog, Microsoft.ML.StaticPipe.DataView&lt;T&gt; data, Func&lt;T,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; label, Func&lt;T,ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;&gt; pred);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Data.CalibratedBinaryClassificationMetrics Evaluate&lt;T&gt;(class Microsoft.ML.BinaryClassificationCatalog catalog, class Microsoft.ML.StaticPipe.DataView`1&lt;!!T&gt; data, class System.Func`2&lt;!!T, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; label, class System.Func`2&lt;!!T, valuetype System.ValueTuple`3&lt;class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt;&gt; pred) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.EvaluatorStaticExtensions.Evaluate``1(Microsoft.ML.BinaryClassificationCatalog,Microsoft.ML.StaticPipe.DataView{``0},System.Func{``0,Microsoft.ML.StaticPipe.Scalar{System.Boolean}},System.Func{``0,System.ValueTuple{Microsoft.ML.StaticPipe.Scalar{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Boolean}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Evaluate(Of T) (catalog As BinaryClassificationCatalog, data As DataView(Of T), label As Func(Of T, Scalar(Of Boolean)), pred As Func(Of T, ValueTuple(Of Scalar(Of Single), Scalar(Of Single), Scalar(Of Boolean)))) As CalibratedBinaryClassificationMetrics" />
      <MemberSignature Language="F#" Value="static member Evaluate : Microsoft.ML.BinaryClassificationCatalog * Microsoft.ML.StaticPipe.DataView&lt;'T&gt; * Func&lt;'T, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; * Func&lt;'T, ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;&gt; -&gt; Microsoft.ML.Data.CalibratedBinaryClassificationMetrics" Usage="Microsoft.ML.StaticPipe.EvaluatorStaticExtensions.Evaluate (catalog, data, label, pred)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.CalibratedBinaryClassificationMetrics</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog" RefType="this" />
        <Parameter Name="data" Type="Microsoft.ML.StaticPipe.DataView&lt;T&gt;" />
        <Parameter Name="label" Type="System.Func&lt;T,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;" />
        <Parameter Name="pred" Type="System.Func&lt;T,System.ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="ml-dotnet-preview">
              <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "probability", "predictedLabel" })</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The shape type for the input data.</typeparam>
        <param name="catalog">The binary classification catalog.</param>
        <param name="data">The data to evaluate.</param>
        <param name="label">The index delegate for the label column.</param>
        <param name="pred">The index delegate for columns from calibrated prediction of a binary classifier.
            Under typical scenarios, this will just be the same tuple of results returned from the trainer.</param>
        <summary>
            Evaluates scored binary classification data.
            </summary>
        <returns>The evaluation results for these calibrated outputs.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Data.ClusteringMetrics Evaluate&lt;T&gt; (this Microsoft.ML.ClusteringCatalog catalog, Microsoft.ML.StaticPipe.DataView&lt;T&gt; data, Func&lt;T,Microsoft.ML.StaticPipe.Vector&lt;float&gt;&gt; score, Func&lt;T,Microsoft.ML.StaticPipe.Key&lt;uint&gt;&gt; label = null, Func&lt;T,Microsoft.ML.StaticPipe.Vector&lt;float&gt;&gt; features = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Data.ClusteringMetrics Evaluate&lt;T&gt;(class Microsoft.ML.ClusteringCatalog catalog, class Microsoft.ML.StaticPipe.DataView`1&lt;!!T&gt; data, class System.Func`2&lt;!!T, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt;&gt; score, class System.Func`2&lt;!!T, class Microsoft.ML.StaticPipe.Key`1&lt;unsigned int32&gt;&gt; label, class System.Func`2&lt;!!T, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt;&gt; features) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.EvaluatorStaticExtensions.Evaluate``1(Microsoft.ML.ClusteringCatalog,Microsoft.ML.StaticPipe.DataView{``0},System.Func{``0,Microsoft.ML.StaticPipe.Vector{System.Single}},System.Func{``0,Microsoft.ML.StaticPipe.Key{System.UInt32}},System.Func{``0,Microsoft.ML.StaticPipe.Vector{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Evaluate(Of T) (catalog As ClusteringCatalog, data As DataView(Of T), score As Func(Of T, Vector(Of Single)), Optional label As Func(Of T, Key(Of UInteger)) = null, Optional features As Func(Of T, Vector(Of Single)) = null) As ClusteringMetrics" />
      <MemberSignature Language="F#" Value="static member Evaluate : Microsoft.ML.ClusteringCatalog * Microsoft.ML.StaticPipe.DataView&lt;'T&gt; * Func&lt;'T, Microsoft.ML.StaticPipe.Vector&lt;single&gt;&gt; * Func&lt;'T, Microsoft.ML.StaticPipe.Key&lt;uint32&gt;&gt; * Func&lt;'T, Microsoft.ML.StaticPipe.Vector&lt;single&gt;&gt; -&gt; Microsoft.ML.Data.ClusteringMetrics" Usage="Microsoft.ML.StaticPipe.EvaluatorStaticExtensions.Evaluate (catalog, data, score, label, features)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.ClusteringMetrics</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.ClusteringCatalog" RefType="this" />
        <Parameter Name="data" Type="Microsoft.ML.StaticPipe.DataView&lt;T&gt;" />
        <Parameter Name="score" Type="System.Func&lt;T,Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;&gt;" />
        <Parameter Name="label" Type="System.Func&lt;T,Microsoft.ML.StaticPipe.Key&lt;System.UInt32&gt;&gt;" />
        <Parameter Name="features" Type="System.Func&lt;T,Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">The shape type for the input data.</typeparam>
        <param name="catalog">The clustering catalog.</param>
        <param name="data">The data to evaluate.</param>
        <param name="score">The index delegate for the predicted score column.</param>
        <param name="label">The optional index delegate for the label column.</param>
        <param name="features">The optional index delegate for the features column.</param>
        <summary>
            Evaluates scored clustering prediction data.
            </summary>
        <returns>The evaluation metrics.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Data.RegressionMetrics Evaluate&lt;T&gt; (this Microsoft.ML.RegressionCatalog catalog, Microsoft.ML.StaticPipe.DataView&lt;T&gt; data, Func&lt;T,Microsoft.ML.StaticPipe.Scalar&lt;float&gt;&gt; label, Func&lt;T,Microsoft.ML.StaticPipe.Scalar&lt;float&gt;&gt; score, Microsoft.ML.Trainers.IRegressionLoss lossFunction = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Data.RegressionMetrics Evaluate&lt;T&gt;(class Microsoft.ML.RegressionCatalog catalog, class Microsoft.ML.StaticPipe.DataView`1&lt;!!T&gt; data, class System.Func`2&lt;!!T, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;&gt; label, class System.Func`2&lt;!!T, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;&gt; score, class Microsoft.ML.Trainers.IRegressionLoss lossFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.EvaluatorStaticExtensions.Evaluate``1(Microsoft.ML.RegressionCatalog,Microsoft.ML.StaticPipe.DataView{``0},System.Func{``0,Microsoft.ML.StaticPipe.Scalar{System.Single}},System.Func{``0,Microsoft.ML.StaticPipe.Scalar{System.Single}},Microsoft.ML.Trainers.IRegressionLoss)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Evaluate(Of T) (catalog As RegressionCatalog, data As DataView(Of T), label As Func(Of T, Scalar(Of Single)), score As Func(Of T, Scalar(Of Single)), Optional lossFunction As IRegressionLoss = null) As RegressionMetrics" />
      <MemberSignature Language="F#" Value="static member Evaluate : Microsoft.ML.RegressionCatalog * Microsoft.ML.StaticPipe.DataView&lt;'T&gt; * Func&lt;'T, Microsoft.ML.StaticPipe.Scalar&lt;single&gt;&gt; * Func&lt;'T, Microsoft.ML.StaticPipe.Scalar&lt;single&gt;&gt; * Microsoft.ML.Trainers.IRegressionLoss -&gt; Microsoft.ML.Data.RegressionMetrics" Usage="Microsoft.ML.StaticPipe.EvaluatorStaticExtensions.Evaluate (catalog, data, label, score, lossFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.RegressionMetrics</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog" RefType="this" />
        <Parameter Name="data" Type="Microsoft.ML.StaticPipe.DataView&lt;T&gt;" />
        <Parameter Name="label" Type="System.Func&lt;T,Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;&gt;" />
        <Parameter Name="score" Type="System.Func&lt;T,Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;&gt;" />
        <Parameter Name="lossFunction" Type="Microsoft.ML.Trainers.IRegressionLoss" />
      </Parameters>
      <Docs>
        <typeparam name="T">The shape type for the input data.</typeparam>
        <param name="catalog">The regression catalog.</param>
        <param name="data">The data to evaluate.</param>
        <param name="label">The index delegate for the label column.</param>
        <param name="score">The index delegate for predicted score column.</param>
        <param name="lossFunction">Potentially custom loss function. If left unspecified defaults to <see cref="T:Microsoft.ML.Trainers.SquaredLoss" />.</param>
        <summary>
            Evaluates scored regression data.
            </summary>
        <returns>The evaluation metrics.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate&lt;T,TKey&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Data.MulticlassClassificationMetrics Evaluate&lt;T,TKey&gt; (this Microsoft.ML.MulticlassClassificationCatalog catalog, Microsoft.ML.StaticPipe.DataView&lt;T&gt; data, Func&lt;T,Microsoft.ML.StaticPipe.Key&lt;uint,TKey&gt;&gt; label, Func&lt;T,ValueTuple&lt;Microsoft.ML.StaticPipe.Vector&lt;float&gt;,Microsoft.ML.StaticPipe.Key&lt;uint,TKey&gt;&gt;&gt; pred, int topKPredictionCount = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Data.MulticlassClassificationMetrics Evaluate&lt;T, TKey&gt;(class Microsoft.ML.MulticlassClassificationCatalog catalog, class Microsoft.ML.StaticPipe.DataView`1&lt;!!T&gt; data, class System.Func`2&lt;!!T, class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, !!TKey&gt;&gt; label, class System.Func`2&lt;!!T, valuetype System.ValueTuple`2&lt;class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, !!TKey&gt;&gt;&gt; pred, int32 topKPredictionCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.EvaluatorStaticExtensions.Evaluate``2(Microsoft.ML.MulticlassClassificationCatalog,Microsoft.ML.StaticPipe.DataView{``0},System.Func{``0,Microsoft.ML.StaticPipe.Key{System.UInt32,``1}},System.Func{``0,System.ValueTuple{Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Key{System.UInt32,``1}}},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Evaluate(Of T, TKey) (catalog As MulticlassClassificationCatalog, data As DataView(Of T), label As Func(Of T, Key(Of UInteger, TKey)), pred As Func(Of T, ValueTuple(Of Vector(Of Single), Key(Of UInteger, TKey))), Optional topKPredictionCount As Integer = 0) As MulticlassClassificationMetrics" />
      <MemberSignature Language="F#" Value="static member Evaluate : Microsoft.ML.MulticlassClassificationCatalog * Microsoft.ML.StaticPipe.DataView&lt;'T&gt; * Func&lt;'T, Microsoft.ML.StaticPipe.Key&lt;uint32, 'Key&gt;&gt; * Func&lt;'T, ValueTuple&lt;Microsoft.ML.StaticPipe.Vector&lt;single&gt;, Microsoft.ML.StaticPipe.Key&lt;uint32, 'Key&gt;&gt;&gt; * int -&gt; Microsoft.ML.Data.MulticlassClassificationMetrics" Usage="Microsoft.ML.StaticPipe.EvaluatorStaticExtensions.Evaluate (catalog, data, label, pred, topKPredictionCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.MulticlassClassificationMetrics</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog" RefType="this" />
        <Parameter Name="data" Type="Microsoft.ML.StaticPipe.DataView&lt;T&gt;" />
        <Parameter Name="label" Type="System.Func&lt;T,Microsoft.ML.StaticPipe.Key&lt;System.UInt32,TKey&gt;&gt;" />
        <Parameter Name="pred" Type="System.Func&lt;T,System.ValueTuple&lt;Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Key&lt;System.UInt32,TKey&gt;&gt;&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="ml-dotnet-preview">
              <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "predictedLabel" })</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="topKPredictionCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">The shape type for the input data.</typeparam>
        <typeparam name="TKey">The value type for the key label.</typeparam>
        <param name="catalog">The multiclass classification catalog.</param>
        <param name="data">The data to evaluate.</param>
        <param name="label">The index delegate for the label column.</param>
        <param name="pred">The index delegate for columns from the prediction of a multiclass classifier.
            Under typical scenarios, this will just be the same tuple of results returned from the trainer.</param>
        <param name="topKPredictionCount">If given a positive value, the <see cref="P:Microsoft.ML.Data.MulticlassClassificationMetrics.TopKAccuracy" /> will be filled with
            the top-K accuracy, that is, the accuracy assuming we consider an example with the correct class within
            the top-K values as being stored "correctly."</param>
        <summary>
            Evaluates scored multiclass classification data.
            </summary>
        <returns>The evaluation metrics.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate&lt;T,TVal&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Data.RankingMetrics Evaluate&lt;T,TVal&gt; (this Microsoft.ML.RankingCatalog catalog, Microsoft.ML.StaticPipe.DataView&lt;T&gt; data, Func&lt;T,Microsoft.ML.StaticPipe.Scalar&lt;float&gt;&gt; label, Func&lt;T,Microsoft.ML.StaticPipe.Key&lt;uint,TVal&gt;&gt; groupId, Func&lt;T,Microsoft.ML.StaticPipe.Scalar&lt;float&gt;&gt; score);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Data.RankingMetrics Evaluate&lt;T, TVal&gt;(class Microsoft.ML.RankingCatalog catalog, class Microsoft.ML.StaticPipe.DataView`1&lt;!!T&gt; data, class System.Func`2&lt;!!T, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;&gt; label, class System.Func`2&lt;!!T, class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, !!TVal&gt;&gt; groupId, class System.Func`2&lt;!!T, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;&gt; score) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.EvaluatorStaticExtensions.Evaluate``2(Microsoft.ML.RankingCatalog,Microsoft.ML.StaticPipe.DataView{``0},System.Func{``0,Microsoft.ML.StaticPipe.Scalar{System.Single}},System.Func{``0,Microsoft.ML.StaticPipe.Key{System.UInt32,``1}},System.Func{``0,Microsoft.ML.StaticPipe.Scalar{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Evaluate(Of T, TVal) (catalog As RankingCatalog, data As DataView(Of T), label As Func(Of T, Scalar(Of Single)), groupId As Func(Of T, Key(Of UInteger, TVal)), score As Func(Of T, Scalar(Of Single))) As RankingMetrics" />
      <MemberSignature Language="F#" Value="static member Evaluate : Microsoft.ML.RankingCatalog * Microsoft.ML.StaticPipe.DataView&lt;'T&gt; * Func&lt;'T, Microsoft.ML.StaticPipe.Scalar&lt;single&gt;&gt; * Func&lt;'T, Microsoft.ML.StaticPipe.Key&lt;uint32, 'Val&gt;&gt; * Func&lt;'T, Microsoft.ML.StaticPipe.Scalar&lt;single&gt;&gt; -&gt; Microsoft.ML.Data.RankingMetrics" Usage="Microsoft.ML.StaticPipe.EvaluatorStaticExtensions.Evaluate (catalog, data, label, groupId, score)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.RankingMetrics</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TVal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RankingCatalog" RefType="this" />
        <Parameter Name="data" Type="Microsoft.ML.StaticPipe.DataView&lt;T&gt;" />
        <Parameter Name="label" Type="System.Func&lt;T,Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;&gt;" />
        <Parameter Name="groupId" Type="System.Func&lt;T,Microsoft.ML.StaticPipe.Key&lt;System.UInt32,TVal&gt;&gt;" />
        <Parameter Name="score" Type="System.Func&lt;T,Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">The shape type for the input data.</typeparam>
        <typeparam name="TVal">The type of data, before being converted to a key.</typeparam>
        <param name="catalog">The ranking catalog.</param>
        <param name="data">The data to evaluate.</param>
        <param name="label">The index delegate for the label column.</param>
        <param name="groupId">The index delegate for the groupId column. </param>
        <param name="score">The index delegate for predicted score column.</param>
        <summary>
            Evaluates scored ranking data.
            </summary>
        <returns>The evaluation metrics.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateWithPRCurve&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Data.BinaryClassificationMetrics EvaluateWithPRCurve&lt;T&gt; (this Microsoft.ML.BinaryClassificationCatalog catalog, Microsoft.ML.StaticPipe.DataView&lt;T&gt; data, Func&lt;T,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; label, Func&lt;T,ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;&gt; pred, out System.Collections.Generic.List&lt;Microsoft.ML.Data.BinaryPrecisionRecallDataPoint&gt; prCurve);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Data.BinaryClassificationMetrics EvaluateWithPRCurve&lt;T&gt;(class Microsoft.ML.BinaryClassificationCatalog catalog, class Microsoft.ML.StaticPipe.DataView`1&lt;!!T&gt; data, class System.Func`2&lt;!!T, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; label, class System.Func`2&lt;!!T, valuetype System.ValueTuple`2&lt;class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt;&gt; pred, [out] class System.Collections.Generic.List`1&lt;class Microsoft.ML.Data.BinaryPrecisionRecallDataPoint&gt;&amp; prCurve) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.EvaluatorStaticExtensions.EvaluateWithPRCurve``1(Microsoft.ML.BinaryClassificationCatalog,Microsoft.ML.StaticPipe.DataView{``0},System.Func{``0,Microsoft.ML.StaticPipe.Scalar{System.Boolean}},System.Func{``0,System.ValueTuple{Microsoft.ML.StaticPipe.Scalar{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Boolean}}},System.Collections.Generic.List{Microsoft.ML.Data.BinaryPrecisionRecallDataPoint}@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EvaluateWithPRCurve(Of T) (catalog As BinaryClassificationCatalog, data As DataView(Of T), label As Func(Of T, Scalar(Of Boolean)), pred As Func(Of T, ValueTuple(Of Scalar(Of Single), Scalar(Of Boolean))), ByRef prCurve As List(Of BinaryPrecisionRecallDataPoint)) As BinaryClassificationMetrics" />
      <MemberSignature Language="F#" Value="static member EvaluateWithPRCurve : Microsoft.ML.BinaryClassificationCatalog * Microsoft.ML.StaticPipe.DataView&lt;'T&gt; * Func&lt;'T, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; * Func&lt;'T, ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;&gt; *  -&gt; Microsoft.ML.Data.BinaryClassificationMetrics" Usage="Microsoft.ML.StaticPipe.EvaluatorStaticExtensions.EvaluateWithPRCurve (catalog, data, label, pred, prCurve)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.BinaryClassificationMetrics</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog" RefType="this" />
        <Parameter Name="data" Type="Microsoft.ML.StaticPipe.DataView&lt;T&gt;" />
        <Parameter Name="label" Type="System.Func&lt;T,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;" />
        <Parameter Name="pred" Type="System.Func&lt;T,System.ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="ml-dotnet-preview">
              <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "predictedLabel" })</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="prCurve" Type="System.Collections.Generic.List&lt;Microsoft.ML.Data.BinaryPrecisionRecallDataPoint&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T">The shape type for the input data.</typeparam>
        <param name="catalog">The binary classification catalog.</param>
        <param name="data">The data to evaluate.</param>
        <param name="label">The index delegate for the label column.</param>
        <param name="pred">The index delegate for columns from uncalibrated prediction of a binary classifier.
            Under typical scenarios, this will just be the same tuple of results returned from the trainer.</param>
        <param name="prCurve">The generated precision recall curve data. Up to 100000 of samples are used for p/r curve generation.</param>
        <summary>
            Evaluates scored binary classification data, if the predictions are not calibrated
            and generates precision recall curve data.
            </summary>
        <returns>The evaluation results for these uncalibrated outputs.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateWithPRCurve&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Data.CalibratedBinaryClassificationMetrics EvaluateWithPRCurve&lt;T&gt; (this Microsoft.ML.BinaryClassificationCatalog catalog, Microsoft.ML.StaticPipe.DataView&lt;T&gt; data, Func&lt;T,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; label, Func&lt;T,ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;&gt; pred, out System.Collections.Generic.List&lt;Microsoft.ML.Data.BinaryPrecisionRecallDataPoint&gt; prCurve);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Data.CalibratedBinaryClassificationMetrics EvaluateWithPRCurve&lt;T&gt;(class Microsoft.ML.BinaryClassificationCatalog catalog, class Microsoft.ML.StaticPipe.DataView`1&lt;!!T&gt; data, class System.Func`2&lt;!!T, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; label, class System.Func`2&lt;!!T, valuetype System.ValueTuple`3&lt;class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt;&gt; pred, [out] class System.Collections.Generic.List`1&lt;class Microsoft.ML.Data.BinaryPrecisionRecallDataPoint&gt;&amp; prCurve) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.EvaluatorStaticExtensions.EvaluateWithPRCurve``1(Microsoft.ML.BinaryClassificationCatalog,Microsoft.ML.StaticPipe.DataView{``0},System.Func{``0,Microsoft.ML.StaticPipe.Scalar{System.Boolean}},System.Func{``0,System.ValueTuple{Microsoft.ML.StaticPipe.Scalar{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Boolean}}},System.Collections.Generic.List{Microsoft.ML.Data.BinaryPrecisionRecallDataPoint}@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EvaluateWithPRCurve(Of T) (catalog As BinaryClassificationCatalog, data As DataView(Of T), label As Func(Of T, Scalar(Of Boolean)), pred As Func(Of T, ValueTuple(Of Scalar(Of Single), Scalar(Of Single), Scalar(Of Boolean))), ByRef prCurve As List(Of BinaryPrecisionRecallDataPoint)) As CalibratedBinaryClassificationMetrics" />
      <MemberSignature Language="F#" Value="static member EvaluateWithPRCurve : Microsoft.ML.BinaryClassificationCatalog * Microsoft.ML.StaticPipe.DataView&lt;'T&gt; * Func&lt;'T, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; * Func&lt;'T, ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;&gt; *  -&gt; Microsoft.ML.Data.CalibratedBinaryClassificationMetrics" Usage="Microsoft.ML.StaticPipe.EvaluatorStaticExtensions.EvaluateWithPRCurve (catalog, data, label, pred, prCurve)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.CalibratedBinaryClassificationMetrics</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog" RefType="this" />
        <Parameter Name="data" Type="Microsoft.ML.StaticPipe.DataView&lt;T&gt;" />
        <Parameter Name="label" Type="System.Func&lt;T,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;" />
        <Parameter Name="pred" Type="System.Func&lt;T,System.ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="ml-dotnet-preview">
              <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "probability", "predictedLabel" })</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="prCurve" Type="System.Collections.Generic.List&lt;Microsoft.ML.Data.BinaryPrecisionRecallDataPoint&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T">The shape type for the input data.</typeparam>
        <param name="catalog">The binary classification catalog.</param>
        <param name="data">The data to evaluate.</param>
        <param name="label">The index delegate for the label column.</param>
        <param name="pred">The index delegate for columns from calibrated prediction of a binary classifier.
            Under typical scenarios, this will just be the same tuple of results returned from the trainer.</param>
        <param name="prCurve">The generated precision recall curve data. Up to 100000 of samples are used for p/r curve generation.</param>
        <summary>
            Evaluates scored binary classification data and generates precision recall curve data.
            </summary>
        <returns>The evaluation results for these calibrated outputs.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>