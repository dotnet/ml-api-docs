<Type Name="Estimator&lt;TTupleInShape,TTupleOutShape,TTransformer&gt;" FullName="Microsoft.ML.StaticPipe.Estimator&lt;TTupleInShape,TTupleOutShape,TTransformer&gt;">
  <TypeSignature Language="C#" Value="public sealed class Estimator&lt;TTupleInShape,TTupleOutShape,TTransformer&gt; : Microsoft.ML.StaticPipe.SchemaBearing&lt;TTupleOutShape&gt; where TTransformer : class, ITransformer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Estimator`3&lt;TTupleInShape, TTupleOutShape, class (class Microsoft.ML.Core.Data.ITransformer) TTransformer&gt; extends Microsoft.ML.StaticPipe.SchemaBearing`1&lt;!TTupleOutShape&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.StaticPipe.Estimator`3" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Estimator(Of TTupleInShape, TTupleOutShape, TTransformer)&#xA;Inherits SchemaBearing(Of TTupleOutShape)" />
  <TypeSignature Language="F#" Value="type Estimator&lt;'upleInShape, 'upleOutShape, 'ransformer (requires 'ransformer : null and 'ransformer :&gt; ITransformer)&gt; = class&#xA;    inherit SchemaBearing&lt;'upleOutShape&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TTupleInShape" />
    <TypeParameter Name="TTupleOutShape" />
    <TypeParameter Name="TTransformer">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
        <InterfaceName>Microsoft.ML.Core.Data.ITransformer</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.StaticPipe.SchemaBearing&lt;TTupleOutShape&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TTupleShape">TTupleOutShape</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TTupleInShape">To be added.</typeparam>
    <typeparam name="TTupleOutShape">To be added.</typeparam>
    <typeparam name="TTransformer">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Append&lt;TTupleNewOutShape&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.ML.StaticPipe.Estimator&lt;TTupleInShape,TTupleNewOutShape,Microsoft.ML.Core.Data.ITransformer&gt; Append&lt;TTupleNewOutShape&gt; (Microsoft.ML.StaticPipe.Estimator&lt;TTupleOutShape,TTupleNewOutShape,Microsoft.ML.Core.Data.ITransformer&gt; estimator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.StaticPipe.Estimator`3&lt;!TTupleInShape, !!TTupleNewOutShape, class Microsoft.ML.Core.Data.ITransformer&gt; Append&lt;TTupleNewOutShape&gt;(class Microsoft.ML.StaticPipe.Estimator`3&lt;!TTupleOutShape, !!TTupleNewOutShape, class Microsoft.ML.Core.Data.ITransformer&gt; estimator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.Estimator`3.Append``1(Microsoft.ML.StaticPipe.Estimator{`1,``0,Microsoft.ML.Core.Data.ITransformer})" />
      <MemberSignature Language="VB.NET" Value="Public Function Append(Of TTupleNewOutShape) (estimator As Estimator(Of TTupleOutShape, TTupleNewOutShape, ITransformer)) As Estimator(Of TTupleInShape, TTupleNewOutShape, ITransformer)" />
      <MemberSignature Language="F#" Value="member this.Append : Microsoft.ML.StaticPipe.Estimator&lt;'upleOutShape, 'upleNewOutShape, Microsoft.ML.Core.Data.ITransformer&gt; -&gt; Microsoft.ML.StaticPipe.Estimator&lt;'upleInShape, 'upleNewOutShape, Microsoft.ML.Core.Data.ITransformer&gt;" Usage="estimator.Append estimator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Estimator&lt;TTupleInShape,TTupleNewOutShape,Microsoft.ML.Core.Data.ITransformer&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TTupleNewOutShape" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="estimator" Type="Microsoft.ML.StaticPipe.Estimator&lt;TTupleOutShape,TTupleNewOutShape,Microsoft.ML.Core.Data.ITransformer&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TTupleNewOutShape">To be added.</typeparam>
        <param name="estimator">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append&lt;TTupleNewOutShape&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.ML.StaticPipe.Estimator&lt;TTupleInShape,TTupleNewOutShape,Microsoft.ML.Core.Data.ITransformer&gt; Append&lt;TTupleNewOutShape&gt; (Func&lt;TTupleOutShape,TTupleNewOutShape&gt; mapper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.StaticPipe.Estimator`3&lt;!TTupleInShape, !!TTupleNewOutShape, class Microsoft.ML.Core.Data.ITransformer&gt; Append&lt;TTupleNewOutShape&gt;(class System.Func`2&lt;!TTupleOutShape, !!TTupleNewOutShape&gt; mapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.Estimator`3.Append``1(System.Func{`1,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Append(Of TTupleNewOutShape) (mapper As Func(Of TTupleOutShape, TTupleNewOutShape)) As Estimator(Of TTupleInShape, TTupleNewOutShape, ITransformer)" />
      <MemberSignature Language="F#" Value="member this.Append : Func&lt;'upleOutShape, 'upleNewOutShape&gt; -&gt; Microsoft.ML.StaticPipe.Estimator&lt;'upleInShape, 'upleNewOutShape, Microsoft.ML.Core.Data.ITransformer&gt;" Usage="estimator.Append mapper" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Estimator&lt;TTupleInShape,TTupleNewOutShape,Microsoft.ML.Core.Data.ITransformer&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TTupleNewOutShape">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.ML.StaticPipe.IsShape</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mapper" Type="System.Func&lt;TTupleOutShape,TTupleNewOutShape&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TTupleNewOutShape">To be added.</typeparam>
        <param name="mapper">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsDynamic">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Core.Data.IEstimator&lt;TTransformer&gt; AsDynamic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Core.Data.IEstimator`1&lt;!TTransformer&gt; AsDynamic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.StaticPipe.Estimator`3.AsDynamic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsDynamic As IEstimator(Of TTransformer)" />
      <MemberSignature Language="F#" Value="member this.AsDynamic : Microsoft.ML.Core.Data.IEstimator&lt;'ransformer (requires 'ransformer : null and 'ransformer :&gt; Microsoft.ML.Core.Data.ITransformer)&gt;" Usage="Microsoft.ML.StaticPipe.Estimator&lt;'upleInShape, 'upleOutShape, 'ransformer (requires 'ransformer : null and 'ransformer :&gt; Microsoft.ML.Core.Data.ITransformer)&gt;.AsDynamic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.IEstimator&lt;TTransformer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fit">
      <MemberSignature Language="C#" Value="public Microsoft.ML.StaticPipe.Transformer&lt;TTupleInShape,TTupleOutShape,TTransformer&gt; Fit (Microsoft.ML.StaticPipe.DataView&lt;TTupleInShape&gt; view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.StaticPipe.Transformer`3&lt;!TTupleInShape, !TTupleOutShape, !TTransformer&gt; Fit(class Microsoft.ML.StaticPipe.DataView`1&lt;!TTupleInShape&gt; view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Fit (view As DataView(Of TTupleInShape)) As Transformer(Of TTupleInShape, TTupleOutShape, TTransformer)" />
      <MemberSignature Language="F#" Value="member this.Fit : Microsoft.ML.StaticPipe.DataView&lt;'upleInShape&gt; -&gt; Microsoft.ML.StaticPipe.Transformer&lt;'upleInShape, 'upleOutShape, 'ransformer (requires 'ransformer : null and 'ransformer :&gt; Microsoft.ML.Core.Data.ITransformer)&gt;" Usage="estimator.Fit view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Transformer&lt;TTupleInShape,TTupleOutShape,TTransformer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.ML.StaticPipe.DataView&lt;TTupleInShape&gt;" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>