<Type Name="SdcaStaticExtensions" FullName="Microsoft.ML.StaticPipe.SdcaStaticExtensions">
  <TypeSignature Language="C#" Value="public static class SdcaStaticExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SdcaStaticExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.StaticPipe.SdcaStaticExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SdcaStaticExtensions" />
  <TypeSignature Language="F#" Value="type SdcaStaticExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods and utilities for instantiating SDCA trainer estimators inside statically typed pipelines.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Sdca">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; Sdca (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights, Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer.Options options, Action&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; Sdca(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, class Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer/Options options, class System.Action`1&lt;class Microsoft.ML.Calibrators.CalibratedModelParametersBase`2&lt;class Microsoft.ML.Trainers.LinearBinaryModelParameters, class Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.SdcaStaticExtensions.Sdca(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.StaticPipe.Scalar{System.Boolean},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer.Options,System.Action{Microsoft.ML.Calibrators.CalibratedModelParametersBase{Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator}})" />
      <MemberSignature Language="F#" Value="static member Sdca : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer.Options * Action&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters, Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt; -&gt; ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;" Usage="Microsoft.ML.StaticPipe.SdcaStaticExtensions.Sdca (catalog, label, features, weights, options, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="ml-dotnet-preview">
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "probability", "predictedLabel" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer+Options" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="label">The label, or dependent variable.</param>
        <param name="features">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained, as well as the calibrator on top of that model. Note that this action cannot change the
            result in any way; it is only a way for the caller to be informed about what was learnt.</param>
        <summary>
            Predict a target using a linear binary classification model trained with the SDCA trainer, and log-loss.
            </summary>
        <returns>The set of output columns including in order the predicted binary classification score (which will range
            from negative to positive infinity), the calibrated prediction (from 0 to 1), and the predicted label.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[SDCA](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Static/SDCABinaryClassification.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Sdca">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Scalar&lt;float&gt; Sdca (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights, Microsoft.ML.Trainers.SdcaRegressionTrainer.Options options, Action&lt;Microsoft.ML.Trainers.LinearRegressionModelParameters&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; Sdca(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, class Microsoft.ML.Trainers.SdcaRegressionTrainer/Options options, class System.Action`1&lt;class Microsoft.ML.Trainers.LinearRegressionModelParameters&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.SdcaStaticExtensions.Sdca(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.StaticPipe.Scalar{System.Single},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},Microsoft.ML.Trainers.SdcaRegressionTrainer.Options,System.Action{Microsoft.ML.Trainers.LinearRegressionModelParameters})" />
      <MemberSignature Language="F#" Value="static member Sdca : Microsoft.ML.RegressionCatalog.RegressionTrainers * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Microsoft.ML.Trainers.SdcaRegressionTrainer.Options * Action&lt;Microsoft.ML.Trainers.LinearRegressionModelParameters&gt; -&gt; Microsoft.ML.StaticPipe.Scalar&lt;single&gt;" Usage="Microsoft.ML.StaticPipe.SdcaStaticExtensions.Sdca (catalog, label, features, weights, options, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.SdcaRegressionTrainer+Options" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Trainers.LinearRegressionModelParameters&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">The regression catalog trainer object.</param>
        <param name="label">The label, or dependent variable.</param>
        <param name="features">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained.  Note that this action cannot change the result in any way; it is only a way for the caller to
            be informed about what was learnt.</param>
        <summary>
            Predict a target using a linear regression model trained with the SDCA trainer.
            </summary>
        <returns>The predicted output.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[SDCA](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Static/SDCARegression.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Sdca">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; Sdca (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights = null, Nullable&lt;float&gt; l2Regularization = null, Nullable&lt;float&gt; l1Threshold = null, Nullable&lt;int&gt; numberOfIterations = null, Action&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; Sdca(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, valuetype System.Nullable`1&lt;float32&gt; l2Regularization, valuetype System.Nullable`1&lt;float32&gt; l1Threshold, valuetype System.Nullable`1&lt;int32&gt; numberOfIterations, class System.Action`1&lt;class Microsoft.ML.Calibrators.CalibratedModelParametersBase`2&lt;class Microsoft.ML.Trainers.LinearBinaryModelParameters, class Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.SdcaStaticExtensions.Sdca(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.StaticPipe.Scalar{System.Boolean},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32},System.Action{Microsoft.ML.Calibrators.CalibratedModelParametersBase{Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sdca (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, label As Scalar(Of Boolean), features As Vector(Of Single), Optional weights As Scalar(Of Single) = null, Optional l2Regularization As Nullable(Of Single) = null, Optional l1Threshold As Nullable(Of Single) = null, Optional numberOfIterations As Nullable(Of Integer) = null, Optional onFit As Action(Of CalibratedModelParametersBase(Of LinearBinaryModelParameters, PlattCalibrator)) = null) As ValueTuple(Of Scalar(Of Single), Scalar(Of Single), Scalar(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member Sdca : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;int&gt; * Action&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters, Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt; -&gt; ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;" Usage="Microsoft.ML.StaticPipe.SdcaStaticExtensions.Sdca (catalog, label, features, weights, l2Regularization, l1Threshold, numberOfIterations, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="ml-dotnet-preview">
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "probability", "predictedLabel" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="l2Regularization" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="l1Threshold" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="numberOfIterations" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="label">The label, or dependent variable.</param>
        <param name="features">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="l2Regularization">The L2 regularization hyperparameter.</param>
        <param name="l1Threshold">The L1 regularization hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="numberOfIterations">The maximum number of passes to perform over the data.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained, as well as the calibrator on top of that model. Note that this action cannot change the
            result in any way; it is only a way for the caller to be informed about what was learnt.</param>
        <summary>
            Predict a target using a linear binary classification model trained with the SDCA trainer, and log-loss.
            </summary>
        <returns>The set of output columns including in order the predicted binary classification score (which will range
            from negative to positive infinity), the calibrated prediction (from 0 to 1), and the predicted label.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[SDCA](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Static/SDCABinaryClassification.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Sdca">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Scalar&lt;float&gt; Sdca (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights = null, Nullable&lt;float&gt; l2Regularization = null, Nullable&lt;float&gt; l1Threshold = null, Nullable&lt;int&gt; numberOfIterations = null, Microsoft.ML.Trainers.ISupportSdcaRegressionLoss lossFunction = null, Action&lt;Microsoft.ML.Trainers.LinearRegressionModelParameters&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; Sdca(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, valuetype System.Nullable`1&lt;float32&gt; l2Regularization, valuetype System.Nullable`1&lt;float32&gt; l1Threshold, valuetype System.Nullable`1&lt;int32&gt; numberOfIterations, class Microsoft.ML.Trainers.ISupportSdcaRegressionLoss lossFunction, class System.Action`1&lt;class Microsoft.ML.Trainers.LinearRegressionModelParameters&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.SdcaStaticExtensions.Sdca(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.StaticPipe.Scalar{System.Single},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32},Microsoft.ML.Trainers.ISupportSdcaRegressionLoss,System.Action{Microsoft.ML.Trainers.LinearRegressionModelParameters})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sdca (catalog As RegressionCatalog.RegressionTrainers, label As Scalar(Of Single), features As Vector(Of Single), Optional weights As Scalar(Of Single) = null, Optional l2Regularization As Nullable(Of Single) = null, Optional l1Threshold As Nullable(Of Single) = null, Optional numberOfIterations As Nullable(Of Integer) = null, Optional lossFunction As ISupportSdcaRegressionLoss = null, Optional onFit As Action(Of LinearRegressionModelParameters) = null) As Scalar(Of Single)" />
      <MemberSignature Language="F#" Value="static member Sdca : Microsoft.ML.RegressionCatalog.RegressionTrainers * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;int&gt; * Microsoft.ML.Trainers.ISupportSdcaRegressionLoss * Action&lt;Microsoft.ML.Trainers.LinearRegressionModelParameters&gt; -&gt; Microsoft.ML.StaticPipe.Scalar&lt;single&gt;" Usage="Microsoft.ML.StaticPipe.SdcaStaticExtensions.Sdca (catalog, label, features, weights, l2Regularization, l1Threshold, numberOfIterations, lossFunction, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="l2Regularization" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="l1Threshold" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="numberOfIterations" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="lossFunction" Type="Microsoft.ML.Trainers.ISupportSdcaRegressionLoss" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Trainers.LinearRegressionModelParameters&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">The regression catalog trainer object.</param>
        <param name="label">The label, or dependent variable.</param>
        <param name="features">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="l2Regularization">The L2 regularization hyperparameter.</param>
        <param name="l1Threshold">The L1 regularization hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="numberOfIterations">The maximum number of passes to perform over the data.</param>
        <param name="lossFunction">The custom loss, if unspecified will be <see cref="T:Microsoft.ML.Trainers.SquaredLoss" />.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained.  Note that this action cannot change the result in any way; it is only a way for the caller to
            be informed about what was learnt.</param>
        <summary>
            Predict a target using a linear regression model trained with the SDCA trainer.
            </summary>
        <returns>The predicted output.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[SDCA](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Static/SDCARegression.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Sdca&lt;TVal&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.StaticPipe.Vector&lt;float&gt;,Microsoft.ML.StaticPipe.Key&lt;uint,TVal&gt;&gt; Sdca&lt;TVal&gt; (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, Microsoft.ML.StaticPipe.Key&lt;uint,TVal&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights, Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer.Options options, Action&lt;Microsoft.ML.Trainers.MaximumEntropyModelParameters&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, !!TVal&gt;&gt; Sdca&lt;TVal&gt;(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, !!TVal&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, class Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer/Options options, class System.Action`1&lt;class Microsoft.ML.Trainers.MaximumEntropyModelParameters&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.SdcaStaticExtensions.Sdca``1(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.StaticPipe.Key{System.UInt32,``0},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer.Options,System.Action{Microsoft.ML.Trainers.MaximumEntropyModelParameters})" />
      <MemberSignature Language="F#" Value="static member Sdca : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * Microsoft.ML.StaticPipe.Key&lt;uint32, 'Val&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer.Options * Action&lt;Microsoft.ML.Trainers.MaximumEntropyModelParameters&gt; -&gt; ValueTuple&lt;Microsoft.ML.StaticPipe.Vector&lt;single&gt;, Microsoft.ML.StaticPipe.Key&lt;uint32, 'Val&gt;&gt;" Usage="Microsoft.ML.StaticPipe.SdcaStaticExtensions.Sdca (catalog, label, features, weights, options, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Key&lt;System.UInt32,TVal&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="ml-dotnet-preview">
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "predictedLabel" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TVal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Key&lt;System.UInt32,TVal&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer+Options" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Trainers.MaximumEntropyModelParameters&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TVal">To be added.</typeparam>
        <param name="catalog">The multiclass classification catalog trainer object.</param>
        <param name="label">The label, or dependent variable.</param>
        <param name="features">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained. Note that this action cannot change the
            result in any way; it is only a way for the caller to be informed about what was learnt.</param>
        <summary>
            Predict a target using a maximum entropy classification model trained with the SDCA trainer.
            </summary>
        <returns>The set of output columns including in order the predicted per-class likelihoods (between 0 and 1, and summing up to 1), and the predicted label.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sdca&lt;TVal&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.StaticPipe.Vector&lt;float&gt;,Microsoft.ML.StaticPipe.Key&lt;uint,TVal&gt;&gt; Sdca&lt;TVal&gt; (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, Microsoft.ML.StaticPipe.Key&lt;uint,TVal&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights = null, Nullable&lt;float&gt; l2Regularization = null, Nullable&lt;float&gt; l1Threshold = null, Nullable&lt;int&gt; numberOfIterations = null, Action&lt;Microsoft.ML.Trainers.MaximumEntropyModelParameters&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, !!TVal&gt;&gt; Sdca&lt;TVal&gt;(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, !!TVal&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, valuetype System.Nullable`1&lt;float32&gt; l2Regularization, valuetype System.Nullable`1&lt;float32&gt; l1Threshold, valuetype System.Nullable`1&lt;int32&gt; numberOfIterations, class System.Action`1&lt;class Microsoft.ML.Trainers.MaximumEntropyModelParameters&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.SdcaStaticExtensions.Sdca``1(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.StaticPipe.Key{System.UInt32,``0},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32},System.Action{Microsoft.ML.Trainers.MaximumEntropyModelParameters})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sdca(Of TVal) (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, label As Key(Of UInteger, TVal), features As Vector(Of Single), Optional weights As Scalar(Of Single) = null, Optional l2Regularization As Nullable(Of Single) = null, Optional l1Threshold As Nullable(Of Single) = null, Optional numberOfIterations As Nullable(Of Integer) = null, Optional onFit As Action(Of MaximumEntropyModelParameters) = null) As ValueTuple(Of Vector(Of Single), Key(Of UInteger, TVal))" />
      <MemberSignature Language="F#" Value="static member Sdca : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * Microsoft.ML.StaticPipe.Key&lt;uint32, 'Val&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;int&gt; * Action&lt;Microsoft.ML.Trainers.MaximumEntropyModelParameters&gt; -&gt; ValueTuple&lt;Microsoft.ML.StaticPipe.Vector&lt;single&gt;, Microsoft.ML.StaticPipe.Key&lt;uint32, 'Val&gt;&gt;" Usage="Microsoft.ML.StaticPipe.SdcaStaticExtensions.Sdca (catalog, label, features, weights, l2Regularization, l1Threshold, numberOfIterations, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Key&lt;System.UInt32,TVal&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="ml-dotnet-preview">
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "predictedLabel" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TVal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Key&lt;System.UInt32,TVal&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="l2Regularization" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="l1Threshold" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="numberOfIterations" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Trainers.MaximumEntropyModelParameters&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TVal">To be added.</typeparam>
        <param name="catalog">The multiclass classification catalog trainer object.</param>
        <param name="label">The label, or dependent variable.</param>
        <param name="features">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="l2Regularization">The L2 regularization hyperparameter.</param>
        <param name="l1Threshold">The L1 regularization hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="numberOfIterations">The maximum number of passes to perform over the data.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained. Note that this action cannot change the
            result in any way; it is only a way for the caller to be informed about what was learnt.</param>
        <summary>
            Predict a target using a maximum entropy classification model trained with the SDCA trainer.
            </summary>
        <returns>The set of output columns including in order the predicted per-class likelihoods (between 0 and 1, and summing up to 1), and the predicted label.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SdcaNonCalibrated">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; SdcaNonCalibrated (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights, Microsoft.ML.Trainers.ISupportSdcaClassificationLoss lossFunction, Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer.Options options, Action&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; SdcaNonCalibrated(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, class Microsoft.ML.Trainers.ISupportSdcaClassificationLoss lossFunction, class Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer/Options options, class System.Action`1&lt;class Microsoft.ML.Trainers.LinearBinaryModelParameters&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.SdcaStaticExtensions.SdcaNonCalibrated(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.StaticPipe.Scalar{System.Boolean},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},Microsoft.ML.Trainers.ISupportSdcaClassificationLoss,Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer.Options,System.Action{Microsoft.ML.Trainers.LinearBinaryModelParameters})" />
      <MemberSignature Language="F#" Value="static member SdcaNonCalibrated : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Microsoft.ML.Trainers.ISupportSdcaClassificationLoss * Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer.Options * Action&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters&gt; -&gt; ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;" Usage="Microsoft.ML.StaticPipe.SdcaStaticExtensions.SdcaNonCalibrated (catalog, label, features, weights, lossFunction, options, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="ml-dotnet-preview">
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "predictedLabel" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="lossFunction" Type="Microsoft.ML.Trainers.ISupportSdcaClassificationLoss" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer+Options" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="label">The label, or dependent variable.</param>
        <param name="features">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="lossFunction">The custom loss.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained, as well as the calibrator on top of that model. Note that this action cannot change the
            result in any way; it is only a way for the caller to be informed about what was learnt.</param>
        <summary>
            Predict a target using a linear binary classification model trained with the SDCA trainer, and a custom loss.
            Note that because we cannot be sure that all loss functions will produce naturally calibrated outputs, setting
            a custom loss function will not produce a calibrated probability column.
            </summary>
        <returns>The set of output columns including in order the predicted binary classification score (which will range
            from negative to positive infinity), and the predicted label.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SdcaNonCalibrated">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; SdcaNonCalibrated (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.Trainers.ISupportSdcaClassificationLoss lossFunction, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights = null, Nullable&lt;float&gt; l2Regularization = null, Nullable&lt;float&gt; l1Threshold = null, Nullable&lt;int&gt; numberOfIterations = null, Action&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; SdcaNonCalibrated(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.Trainers.ISupportSdcaClassificationLoss lossFunction, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, valuetype System.Nullable`1&lt;float32&gt; l2Regularization, valuetype System.Nullable`1&lt;float32&gt; l1Threshold, valuetype System.Nullable`1&lt;int32&gt; numberOfIterations, class System.Action`1&lt;class Microsoft.ML.Trainers.LinearBinaryModelParameters&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.SdcaStaticExtensions.SdcaNonCalibrated(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.StaticPipe.Scalar{System.Boolean},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.Trainers.ISupportSdcaClassificationLoss,Microsoft.ML.StaticPipe.Scalar{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32},System.Action{Microsoft.ML.Trainers.LinearBinaryModelParameters})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SdcaNonCalibrated (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, label As Scalar(Of Boolean), features As Vector(Of Single), lossFunction As ISupportSdcaClassificationLoss, Optional weights As Scalar(Of Single) = null, Optional l2Regularization As Nullable(Of Single) = null, Optional l1Threshold As Nullable(Of Single) = null, Optional numberOfIterations As Nullable(Of Integer) = null, Optional onFit As Action(Of LinearBinaryModelParameters) = null) As ValueTuple(Of Scalar(Of Single), Scalar(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member SdcaNonCalibrated : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.Trainers.ISupportSdcaClassificationLoss * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;int&gt; * Action&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters&gt; -&gt; ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;" Usage="Microsoft.ML.StaticPipe.SdcaStaticExtensions.SdcaNonCalibrated (catalog, label, features, lossFunction, weights, l2Regularization, l1Threshold, numberOfIterations, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="ml-dotnet-preview">
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "predictedLabel" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="lossFunction" Type="Microsoft.ML.Trainers.ISupportSdcaClassificationLoss" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="l2Regularization" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="l1Threshold" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="numberOfIterations" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="label">The label, or dependent variable.</param>
        <param name="features">The features, or independent variables.</param>
        <param name="lossFunction">The custom loss.</param>
        <param name="weights">The optional example weights.</param>
        <param name="l2Regularization">The L2 regularization hyperparameter.</param>
        <param name="l1Threshold">The L1 regularization hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="numberOfIterations">The maximum number of passes to perform over the data.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained, as well as the calibrator on top of that model. Note that this action cannot change the
            result in any way; it is only a way for the caller to be informed about what was learnt.</param>
        <summary>
            Predict a target using a linear binary classification model trained with the SDCA trainer, and a custom loss.
            Note that because we cannot be sure that all loss functions will produce naturally calibrated outputs, setting
            a custom loss function will not produce a calibrated probability column.
            </summary>
        <returns>The set of output columns including in order the predicted binary classification score (which will range
            from negative to positive infinity), and the predicted label.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SdcaNonCalibrated&lt;TVal&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.StaticPipe.Vector&lt;float&gt;,Microsoft.ML.StaticPipe.Key&lt;uint,TVal&gt;&gt; SdcaNonCalibrated&lt;TVal&gt; (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, Microsoft.ML.StaticPipe.Key&lt;uint,TVal&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights, Microsoft.ML.Trainers.SdcaNonCalibratedMulticlassTrainer.Options options, Action&lt;Microsoft.ML.Trainers.LinearMulticlassModelParameters&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, !!TVal&gt;&gt; SdcaNonCalibrated&lt;TVal&gt;(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, !!TVal&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, class Microsoft.ML.Trainers.SdcaNonCalibratedMulticlassTrainer/Options options, class System.Action`1&lt;class Microsoft.ML.Trainers.LinearMulticlassModelParameters&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.SdcaStaticExtensions.SdcaNonCalibrated``1(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.StaticPipe.Key{System.UInt32,``0},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},Microsoft.ML.Trainers.SdcaNonCalibratedMulticlassTrainer.Options,System.Action{Microsoft.ML.Trainers.LinearMulticlassModelParameters})" />
      <MemberSignature Language="F#" Value="static member SdcaNonCalibrated : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * Microsoft.ML.StaticPipe.Key&lt;uint32, 'Val&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Microsoft.ML.Trainers.SdcaNonCalibratedMulticlassTrainer.Options * Action&lt;Microsoft.ML.Trainers.LinearMulticlassModelParameters&gt; -&gt; ValueTuple&lt;Microsoft.ML.StaticPipe.Vector&lt;single&gt;, Microsoft.ML.StaticPipe.Key&lt;uint32, 'Val&gt;&gt;" Usage="Microsoft.ML.StaticPipe.SdcaStaticExtensions.SdcaNonCalibrated (catalog, label, features, weights, options, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Key&lt;System.UInt32,TVal&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="ml-dotnet-preview">
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "predictedLabel" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TVal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Key&lt;System.UInt32,TVal&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.SdcaNonCalibratedMulticlassTrainer+Options" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Trainers.LinearMulticlassModelParameters&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TVal">To be added.</typeparam>
        <param name="catalog">The multiclass classification catalog trainer object.</param>
        <param name="label">The label, or dependent variable.</param>
        <param name="features">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained. Note that this action cannot change the
            result in any way; it is only a way for the caller to be informed about what was learnt.</param>
        <summary>
            Predict a target using a linear multiclass classification model trained with the SDCA trainer.
            </summary>
        <returns>The set of output columns including in order the predicted per-class likelihoods (between 0 and 1, and summing up to 1), and the predicted label.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SdcaNonCalibrated&lt;TVal&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.StaticPipe.Vector&lt;float&gt;,Microsoft.ML.StaticPipe.Key&lt;uint,TVal&gt;&gt; SdcaNonCalibrated&lt;TVal&gt; (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, Microsoft.ML.StaticPipe.Key&lt;uint,TVal&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.Trainers.ISupportSdcaClassificationLoss lossFunction, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights = null, Nullable&lt;float&gt; l2Regularization = null, Nullable&lt;float&gt; l1Threshold = null, Nullable&lt;int&gt; numberOfIterations = null, Action&lt;Microsoft.ML.Trainers.LinearMulticlassModelParameters&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, !!TVal&gt;&gt; SdcaNonCalibrated&lt;TVal&gt;(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, !!TVal&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.Trainers.ISupportSdcaClassificationLoss lossFunction, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, valuetype System.Nullable`1&lt;float32&gt; l2Regularization, valuetype System.Nullable`1&lt;float32&gt; l1Threshold, valuetype System.Nullable`1&lt;int32&gt; numberOfIterations, class System.Action`1&lt;class Microsoft.ML.Trainers.LinearMulticlassModelParameters&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.SdcaStaticExtensions.SdcaNonCalibrated``1(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.StaticPipe.Key{System.UInt32,``0},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.Trainers.ISupportSdcaClassificationLoss,Microsoft.ML.StaticPipe.Scalar{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32},System.Action{Microsoft.ML.Trainers.LinearMulticlassModelParameters})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SdcaNonCalibrated(Of TVal) (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, label As Key(Of UInteger, TVal), features As Vector(Of Single), lossFunction As ISupportSdcaClassificationLoss, Optional weights As Scalar(Of Single) = null, Optional l2Regularization As Nullable(Of Single) = null, Optional l1Threshold As Nullable(Of Single) = null, Optional numberOfIterations As Nullable(Of Integer) = null, Optional onFit As Action(Of LinearMulticlassModelParameters) = null) As ValueTuple(Of Vector(Of Single), Key(Of UInteger, TVal))" />
      <MemberSignature Language="F#" Value="static member SdcaNonCalibrated : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * Microsoft.ML.StaticPipe.Key&lt;uint32, 'Val&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.Trainers.ISupportSdcaClassificationLoss * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;int&gt; * Action&lt;Microsoft.ML.Trainers.LinearMulticlassModelParameters&gt; -&gt; ValueTuple&lt;Microsoft.ML.StaticPipe.Vector&lt;single&gt;, Microsoft.ML.StaticPipe.Key&lt;uint32, 'Val&gt;&gt;" Usage="Microsoft.ML.StaticPipe.SdcaStaticExtensions.SdcaNonCalibrated (catalog, label, features, lossFunction, weights, l2Regularization, l1Threshold, numberOfIterations, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Key&lt;System.UInt32,TVal&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="ml-dotnet-preview">
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "predictedLabel" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TVal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Key&lt;System.UInt32,TVal&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="lossFunction" Type="Microsoft.ML.Trainers.ISupportSdcaClassificationLoss" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="l2Regularization" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="l1Threshold" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="numberOfIterations" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Trainers.LinearMulticlassModelParameters&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TVal">To be added.</typeparam>
        <param name="catalog">The multiclass classification catalog trainer object.</param>
        <param name="label">The label, or dependent variable.</param>
        <param name="features">The features, or independent variables.</param>
        <param name="lossFunction">The custom loss, for example, <see cref="T:Microsoft.ML.Trainers.HingeLoss" />.</param>
        <param name="weights">The optional example weights.</param>
        <param name="l2Regularization">The L2 regularization hyperparameter.</param>
        <param name="l1Threshold">The L1 regularization hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="numberOfIterations">The maximum number of passes to perform over the data.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained. Note that this action cannot change the
            result in any way; it is only a way for the caller to be informed about what was learnt.</param>
        <summary>
            Predict a target using a linear multiclass classification model trained with the SDCA trainer.
            </summary>
        <returns>The set of output columns including in order the predicted per-class likelihoods (between 0 and 1, and summing up to 1), and the predicted label.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>