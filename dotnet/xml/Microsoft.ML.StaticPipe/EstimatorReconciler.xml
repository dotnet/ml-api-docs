<Type Name="EstimatorReconciler" FullName="Microsoft.ML.StaticPipe.EstimatorReconciler">
  <TypeSignature Language="C#" Value="public abstract class EstimatorReconciler : Microsoft.ML.StaticPipe.Reconciler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EstimatorReconciler extends Microsoft.ML.StaticPipe.Reconciler" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.StaticPipe.EstimatorReconciler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EstimatorReconciler&#xA;Inherits Reconciler" />
  <TypeSignature Language="F#" Value="type EstimatorReconciler = class&#xA;    inherit Reconciler" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.StaticPipe.Reconciler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Reconciler for column groups intended to resolve to an <see cref="T:Microsoft.ML.IEstimator`1" />. This type of
            reconciler will work with <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Append``1(System.Func{`1,``0})" />
            or other methods that involve the creation of estimator chains.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EstimatorReconciler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.EstimatorReconciler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reconcile">
      <MemberSignature Language="C#" Value="public abstract Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt; Reconcile (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.StaticPipe.PipelineColumn[] toOutput, System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.ML.StaticPipe.PipelineColumn,string&gt; inputNames, System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.ML.StaticPipe.PipelineColumn,string&gt; outputNames, System.Collections.Generic.IReadOnlyCollection&lt;string&gt; usedNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.IEstimator`1&lt;class Microsoft.ML.ITransformer&gt; Reconcile(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.StaticPipe.PipelineColumn[] toOutput, class System.Collections.Generic.IReadOnlyDictionary`2&lt;class Microsoft.ML.StaticPipe.PipelineColumn, string&gt; inputNames, class System.Collections.Generic.IReadOnlyDictionary`2&lt;class Microsoft.ML.StaticPipe.PipelineColumn, string&gt; outputNames, class System.Collections.Generic.IReadOnlyCollection`1&lt;string&gt; usedNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.EstimatorReconciler.Reconcile(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.StaticPipe.PipelineColumn[],System.Collections.Generic.IReadOnlyDictionary{Microsoft.ML.StaticPipe.PipelineColumn,System.String},System.Collections.Generic.IReadOnlyDictionary{Microsoft.ML.StaticPipe.PipelineColumn,System.String},System.Collections.Generic.IReadOnlyCollection{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Reconcile (env As IHostEnvironment, toOutput As PipelineColumn(), inputNames As IReadOnlyDictionary(Of PipelineColumn, String), outputNames As IReadOnlyDictionary(Of PipelineColumn, String), usedNames As IReadOnlyCollection(Of String)) As IEstimator(Of ITransformer)" />
      <MemberSignature Language="F#" Value="abstract member Reconcile : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.StaticPipe.PipelineColumn[] * System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.ML.StaticPipe.PipelineColumn, string&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.ML.StaticPipe.PipelineColumn, string&gt; * System.Collections.Generic.IReadOnlyCollection&lt;string&gt; -&gt; Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt;" Usage="estimatorReconciler.Reconcile (env, toOutput, inputNames, outputNames, usedNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="toOutput" Type="Microsoft.ML.StaticPipe.PipelineColumn[]" />
        <Parameter Name="inputNames" Type="System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.ML.StaticPipe.PipelineColumn,System.String&gt;" />
        <Parameter Name="outputNames" Type="System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.ML.StaticPipe.PipelineColumn,System.String&gt;" />
        <Parameter Name="usedNames" Type="System.Collections.Generic.IReadOnlyCollection&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="env">The host environment to use to create the estimator</param>
        <param name="toOutput">The columns that the object created by the reconciler should output</param>
        <param name="inputNames">The name mapping that maps dependencies of the output columns to their names</param>
        <param name="outputNames">The name mapping that maps the output column to their names</param>
        <param name="usedNames">While most estimators allow full control over the names of their outputs, a limited
            subset of estimator transforms do not allow this: they produce columns whose names are unconfigurable. For
            these, there is this collection which provides the names used by the analysis tool. If the estimator under
            construction must use one of the names here, then they are responsible for "saving" the column they will
            overwrite using applications of the <see cref="T:Microsoft.ML.Transforms.ColumnCopyingEstimator" />. Note that if the estimator under
            construction has complete control over what columns it produces, there is no need for it to pay this argument
            any attention.</param>
        <summary>
            Returns an estimator.
            </summary>
        <returns>Returns an estimator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>