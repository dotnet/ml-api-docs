<Type Name="CategoricalHashStaticExtensions" FullName="Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions">
  <TypeSignature Language="C#" Value="public static class CategoricalHashStaticExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CategoricalHashStaticExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module CategoricalHashStaticExtensions" />
  <TypeSignature Language="F#" Value="type CategoricalHashStaticExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="OneHotHashEncoding">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;float&gt; OneHotHashEncoding (this Microsoft.ML.StaticPipe.Scalar&lt;string&gt; input, Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions.OneHotHashScalarOutputKind outputKind = (Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions+OneHotHashScalarOutputKind) 1, int numberOfBits = 16, uint seed = 314489979, bool ordered = true, int maximumNumberOfInverts = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; OneHotHashEncoding(class Microsoft.ML.StaticPipe.Scalar`1&lt;string&gt; input, valuetype Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions/OneHotHashScalarOutputKind outputKind, int32 numberOfBits, unsigned int32 seed, bool ordered, int32 maximumNumberOfInverts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions.OneHotHashEncoding(Microsoft.ML.StaticPipe.Scalar{System.String},Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions.OneHotHashScalarOutputKind,System.Int32,System.UInt32,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OneHotHashEncoding (input As Scalar(Of String), Optional outputKind As CategoricalHashStaticExtensions.OneHotHashScalarOutputKind = (Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions+OneHotHashScalarOutputKind) 1, Optional numberOfBits As Integer = 16, Optional seed As UInteger = 314489979, Optional ordered As Boolean = true, Optional maximumNumberOfInverts As Integer = 0) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member OneHotHashEncoding : Microsoft.ML.StaticPipe.Scalar&lt;string&gt; * Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions.OneHotHashScalarOutputKind * int * uint32 * bool * int -&gt; Microsoft.ML.StaticPipe.Vector&lt;single&gt;" Usage="Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions.OneHotHashEncoding (input, outputKind, numberOfBits, seed, ordered, maximumNumberOfInverts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.String&gt;" RefType="this" />
        <Parameter Name="outputKind" Type="Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions+OneHotHashScalarOutputKind" />
        <Parameter Name="numberOfBits" Type="System.Int32" />
        <Parameter Name="seed" Type="System.UInt32" />
        <Parameter Name="ordered" Type="System.Boolean" />
        <Parameter Name="maximumNumberOfInverts" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">Incoming data.</param>
        <param name="outputKind">Specify the output type of indicator array: array or binary encoded data.</param>
        <param name="numberOfBits">Amount of bits to use for hashing.</param>
        <param name="seed">Seed value used for hashing.</param>
        <param name="ordered">Whether the position of each term should be included in the hash.</param>
        <param name="maximumNumberOfInverts">During hashing we constuct mappings between original values and the produced hash values.
            Text representation of original values are stored in the slot names of the  metadata for the new column.Hashing, as such, can map many initial values to one.
            <paramref name="maximumNumberOfInverts" /> specifies the upper bound of the number of distinct input values mapping to a hash that should be retained.
            <value>0</value> does not retain any input values. <value>-1</value> retains all input values mapping to each hash.</param>
        <summary>
            Converts the categorical value into an indicator array by hashing categories into certain value and using that value as the index in the array.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OneHotHashEncoding">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;float&gt; OneHotHashEncoding (this Microsoft.ML.StaticPipe.VarVector&lt;string&gt; input, Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions.OneHotHashVectorOutputKind outputKind = Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions+OneHotHashVectorOutputKind.Bag, int numberOfBits = 16, uint seed = 314489979, bool ordered = true, int maximumNumberOfInverts = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; OneHotHashEncoding(class Microsoft.ML.StaticPipe.VarVector`1&lt;string&gt; input, valuetype Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions/OneHotHashVectorOutputKind outputKind, int32 numberOfBits, unsigned int32 seed, bool ordered, int32 maximumNumberOfInverts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions.OneHotHashEncoding(Microsoft.ML.StaticPipe.VarVector{System.String},Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions.OneHotHashVectorOutputKind,System.Int32,System.UInt32,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OneHotHashEncoding (input As VarVector(Of String), Optional outputKind As CategoricalHashStaticExtensions.OneHotHashVectorOutputKind = Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions+OneHotHashVectorOutputKind.Bag, Optional numberOfBits As Integer = 16, Optional seed As UInteger = 314489979, Optional ordered As Boolean = true, Optional maximumNumberOfInverts As Integer = 0) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member OneHotHashEncoding : Microsoft.ML.StaticPipe.VarVector&lt;string&gt; * Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions.OneHotHashVectorOutputKind * int * uint32 * bool * int -&gt; Microsoft.ML.StaticPipe.Vector&lt;single&gt;" Usage="Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions.OneHotHashEncoding (input, outputKind, numberOfBits, seed, ordered, maximumNumberOfInverts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;System.String&gt;" RefType="this" />
        <Parameter Name="outputKind" Type="Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions+OneHotHashVectorOutputKind" />
        <Parameter Name="numberOfBits" Type="System.Int32" />
        <Parameter Name="seed" Type="System.UInt32" />
        <Parameter Name="ordered" Type="System.Boolean" />
        <Parameter Name="maximumNumberOfInverts" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">Incoming data.</param>
        <param name="outputKind">Specify the output type of indicator array: array or binary encoded data.</param>
        <param name="numberOfBits">Amount of bits to use for hashing.</param>
        <param name="seed">Seed value used for hashing.</param>
        <param name="ordered">Whether the position of each term should be included in the hash.</param>
        <param name="maximumNumberOfInverts">During hashing we constuct mappings between original values and the produced hash values.
            Text representation of original values are stored in the slot names of the  metadata for the new column.Hashing, as such, can map many initial values to one.
            <paramref name="maximumNumberOfInverts" /> specifies the upper bound of the number of distinct input values mapping to a hash that should be retained.
            <value>0</value> does not retain any input values. <value>-1</value> retains all input values mapping to each hash.</param>
        <summary>
            Converts the categorical value into an indicator array by building a dictionary of categories based on the data and using the id in the dictionary as the index in the array
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OneHotHashEncoding">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;float&gt; OneHotHashEncoding (this Microsoft.ML.StaticPipe.Vector&lt;string&gt; input, Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions.OneHotHashVectorOutputKind outputKind = Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions+OneHotHashVectorOutputKind.Bag, int numberOfBits = 16, uint seed = 314489979, bool ordered = true, int maximumNumberOfInverts = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; OneHotHashEncoding(class Microsoft.ML.StaticPipe.Vector`1&lt;string&gt; input, valuetype Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions/OneHotHashVectorOutputKind outputKind, int32 numberOfBits, unsigned int32 seed, bool ordered, int32 maximumNumberOfInverts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions.OneHotHashEncoding(Microsoft.ML.StaticPipe.Vector{System.String},Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions.OneHotHashVectorOutputKind,System.Int32,System.UInt32,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OneHotHashEncoding (input As Vector(Of String), Optional outputKind As CategoricalHashStaticExtensions.OneHotHashVectorOutputKind = Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions+OneHotHashVectorOutputKind.Bag, Optional numberOfBits As Integer = 16, Optional seed As UInteger = 314489979, Optional ordered As Boolean = true, Optional maximumNumberOfInverts As Integer = 0) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member OneHotHashEncoding : Microsoft.ML.StaticPipe.Vector&lt;string&gt; * Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions.OneHotHashVectorOutputKind * int * uint32 * bool * int -&gt; Microsoft.ML.StaticPipe.Vector&lt;single&gt;" Usage="Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions.OneHotHashEncoding (input, outputKind, numberOfBits, seed, ordered, maximumNumberOfInverts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;System.String&gt;" RefType="this" />
        <Parameter Name="outputKind" Type="Microsoft.ML.StaticPipe.CategoricalHashStaticExtensions+OneHotHashVectorOutputKind" />
        <Parameter Name="numberOfBits" Type="System.Int32" />
        <Parameter Name="seed" Type="System.UInt32" />
        <Parameter Name="ordered" Type="System.Boolean" />
        <Parameter Name="maximumNumberOfInverts" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">Incoming data.</param>
        <param name="outputKind">Specify the output type of indicator array: array or binary encoded data.</param>
        <param name="numberOfBits">Amount of bits to use for hashing.</param>
        <param name="seed">Seed value used for hashing.</param>
        <param name="ordered">Whether the position of each term should be included in the hash.</param>
        <param name="maximumNumberOfInverts">During hashing we constuct mappings between original values and the produced hash values.
            Text representation of original values are stored in the slot names of the  metadata for the new column.Hashing, as such, can map many initial values to one.
            <paramref name="maximumNumberOfInverts" /> specifies the upper bound of the number of distinct input values mapping to a hash that should be retained.
            <value>0</value> does not retain any input values. <value>-1</value> retains all input values mapping to each hash.</param>
        <summary>
            Converts the categorical value into an indicator array by building a dictionary of categories based on the data and using the id in the dictionary as the index in the array
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>