<Type Name="CountFeatureSelectorStaticExtensions" FullName="Microsoft.ML.StaticPipe.CountFeatureSelectorStaticExtensions">
  <TypeSignature Language="C#" Value="public static class CountFeatureSelectorStaticExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CountFeatureSelectorStaticExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.StaticPipe.CountFeatureSelectorStaticExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module CountFeatureSelectorStaticExtensions" />
  <TypeSignature Language="F#" Value="type CountFeatureSelectorStaticExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extensions for statically typed <see cref="T:Microsoft.ML.StaticPipe.CountFeatureSelectorStaticExtensions" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="SelectFeaturesBasedOnCount">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;double&gt; SelectFeaturesBasedOnCount (this Microsoft.ML.StaticPipe.Vector&lt;double&gt; input, long count = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;float64&gt; SelectFeaturesBasedOnCount(class Microsoft.ML.StaticPipe.Vector`1&lt;float64&gt; input, int64 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.CountFeatureSelectorStaticExtensions.SelectFeaturesBasedOnCount(Microsoft.ML.StaticPipe.Vector{System.Double},System.Int64)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectFeaturesBasedOnCount (input As Vector(Of Double), Optional count As Long = 1) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member SelectFeaturesBasedOnCount : Microsoft.ML.StaticPipe.Vector&lt;double&gt; * int64 -&gt; Microsoft.ML.StaticPipe.Vector&lt;double&gt;" Usage="Microsoft.ML.StaticPipe.CountFeatureSelectorStaticExtensions.SelectFeaturesBasedOnCount (input, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Double&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="input">Name of the input column.</param>
        <param name="count">If the count of non-default values for a slot is greater than or equal to this threshold, the slot is preserved.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <member name="CountFeatureSelection">
          <summary>
        Selects the slots for which the count of non-default values is greater than or equal to a threshold.
      </summary>
          <remarks>
            <para>
          This transform uses a set of aggregators to count the number of non-default values for each slot and
          instantiates a <see cref="T:Microsoft.ML.Transforms.SlotsDroppingTransformer" /> to actually drop the slots.
          This transform is useful when applied together with a <see cref="T:Microsoft.ML.Transforms.OneHotHashEncodingTransformer" />. 
          The count feature selection can remove those features generated by the hash transform that have no data in the examples.
        </para>
          </remarks>
        </member>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[SelectFeaturesBasedOnCount](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Static/FeatureSelectionTransform.cs?range=1-5,9-120)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SelectFeaturesBasedOnCount">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;float&gt; SelectFeaturesBasedOnCount (this Microsoft.ML.StaticPipe.Vector&lt;float&gt; input, long count = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; SelectFeaturesBasedOnCount(class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; input, int64 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.CountFeatureSelectorStaticExtensions.SelectFeaturesBasedOnCount(Microsoft.ML.StaticPipe.Vector{System.Single},System.Int64)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectFeaturesBasedOnCount (input As Vector(Of Single), Optional count As Long = 1) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member SelectFeaturesBasedOnCount : Microsoft.ML.StaticPipe.Vector&lt;single&gt; * int64 -&gt; Microsoft.ML.StaticPipe.Vector&lt;single&gt;" Usage="Microsoft.ML.StaticPipe.CountFeatureSelectorStaticExtensions.SelectFeaturesBasedOnCount (input, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="input">Name of the input column.</param>
        <param name="count">If the count of non-default values for a slot is greater than or equal to this threshold, the slot is preserved.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <member name="CountFeatureSelection">
          <summary>
        Selects the slots for which the count of non-default values is greater than or equal to a threshold.
      </summary>
          <remarks>
            <para>
          This transform uses a set of aggregators to count the number of non-default values for each slot and
          instantiates a <see cref="T:Microsoft.ML.Transforms.SlotsDroppingTransformer" /> to actually drop the slots.
          This transform is useful when applied together with a <see cref="T:Microsoft.ML.Transforms.OneHotHashEncodingTransformer" />. 
          The count feature selection can remove those features generated by the hash transform that have no data in the examples.
        </para>
          </remarks>
        </member>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[SelectFeaturesBasedOnCount](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Static/FeatureSelectionTransform.cs?range=1-5,9-120)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SelectFeaturesBasedOnCount">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;string&gt; SelectFeaturesBasedOnCount (this Microsoft.ML.StaticPipe.Vector&lt;string&gt; input, long count = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;string&gt; SelectFeaturesBasedOnCount(class Microsoft.ML.StaticPipe.Vector`1&lt;string&gt; input, int64 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.CountFeatureSelectorStaticExtensions.SelectFeaturesBasedOnCount(Microsoft.ML.StaticPipe.Vector{System.String},System.Int64)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectFeaturesBasedOnCount (input As Vector(Of String), Optional count As Long = 1) As Vector(Of String)" />
      <MemberSignature Language="F#" Value="static member SelectFeaturesBasedOnCount : Microsoft.ML.StaticPipe.Vector&lt;string&gt; * int64 -&gt; Microsoft.ML.StaticPipe.Vector&lt;string&gt;" Usage="Microsoft.ML.StaticPipe.CountFeatureSelectorStaticExtensions.SelectFeaturesBasedOnCount (input, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;System.String&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="input">Name of the input column.</param>
        <param name="count">If the count of non-default values for a slot is greater than or equal to this threshold, the slot is preserved.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <member name="CountFeatureSelection">
          <summary>
        Selects the slots for which the count of non-default values is greater than or equal to a threshold.
      </summary>
          <remarks>
            <para>
          This transform uses a set of aggregators to count the number of non-default values for each slot and
          instantiates a <see cref="T:Microsoft.ML.Transforms.SlotsDroppingTransformer" /> to actually drop the slots.
          This transform is useful when applied together with a <see cref="T:Microsoft.ML.Transforms.OneHotHashEncodingTransformer" />. 
          The count feature selection can remove those features generated by the hash transform that have no data in the examples.
        </para>
          </remarks>
        </member>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[SelectFeaturesBasedOnCount](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Static/FeatureSelectionTransform.cs?range=1-5,9-120)]
            ]]></format>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>