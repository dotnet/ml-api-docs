<Type Name="TermStaticExtensions" FullName="Microsoft.ML.StaticPipe.TermStaticExtensions">
  <TypeSignature Language="C#" Value="public static class TermStaticExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TermStaticExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.StaticPipe.TermStaticExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module TermStaticExtensions" />
  <TypeSignature Language="F#" Value="type TermStaticExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,bool&gt; ToKey (this Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;bool&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, bool&gt; ToKey(class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;bool&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Scalar{System.Boolean},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Boolean})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;bool&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, bool&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Boolean&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,byte&gt; ToKey (this Microsoft.ML.StaticPipe.Scalar&lt;byte&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;byte&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int8&gt; ToKey(class Microsoft.ML.StaticPipe.Scalar`1&lt;unsigned int8&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int8&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Scalar{System.Byte},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Byte})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Scalar&lt;byte&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;byte&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, byte&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Byte&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,double&gt; ToKey (this Microsoft.ML.StaticPipe.Scalar&lt;double&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;double&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, float64&gt; ToKey(class Microsoft.ML.StaticPipe.Scalar`1&lt;float64&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;float64&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Scalar{System.Double},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Double})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Scalar&lt;double&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;double&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, double&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Double&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Double&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Because <c>NaN</c> floating point values are never entered into the dictionary, and they will always map to the missing key.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,short&gt; ToKey (this Microsoft.ML.StaticPipe.Scalar&lt;short&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;short&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int16&gt; ToKey(class Microsoft.ML.StaticPipe.Scalar`1&lt;int16&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int16&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Scalar{System.Int16},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Int16})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Scalar&lt;int16&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int16&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, int16&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Int16&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Int16&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,int&gt; ToKey (this Microsoft.ML.StaticPipe.Scalar&lt;int&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int32&gt; ToKey(class Microsoft.ML.StaticPipe.Scalar`1&lt;int32&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int32&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Scalar{System.Int32},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Int32})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Scalar&lt;int&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, int&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Int32&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Int32&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,long&gt; ToKey (this Microsoft.ML.StaticPipe.Scalar&lt;long&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;long&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int64&gt; ToKey(class Microsoft.ML.StaticPipe.Scalar`1&lt;int64&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int64&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Scalar{System.Int64},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Int64})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Scalar&lt;int64&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int64&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, int64&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Int64&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Int64&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,sbyte&gt; ToKey (this Microsoft.ML.StaticPipe.Scalar&lt;sbyte&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;sbyte&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int8&gt; ToKey(class Microsoft.ML.StaticPipe.Scalar`1&lt;int8&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int8&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Scalar{System.SByte},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.SByte})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Scalar&lt;sbyte&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;sbyte&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, sbyte&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.SByte&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.SByte&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,float&gt; ToKey (this Microsoft.ML.StaticPipe.Scalar&lt;float&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;float&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, float32&gt; ToKey(class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;float32&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Scalar{System.Single},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Single})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;single&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, single&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Single&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Because <c>NaN</c> floating point values are never entered into the dictionary, and they will always map to the missing key.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,string&gt; ToKey (this Microsoft.ML.StaticPipe.Scalar&lt;string&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ReadOnlyMemory&lt;char&gt;&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, string&gt; ToKey(class Microsoft.ML.StaticPipe.Scalar`1&lt;string&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;valuetype System.ReadOnlyMemory`1&lt;char&gt;&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Scalar{System.String},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.ReadOnlyMemory{System.Char}})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Scalar&lt;string&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ReadOnlyMemory&lt;char&gt;&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, string&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.String&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.ReadOnlyMemory&lt;System.Char&gt;&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Because the empty string is never entered into the dictionary, it will always map to the missing key.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,ushort&gt; ToKey (this Microsoft.ML.StaticPipe.Scalar&lt;ushort&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ushort&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int16&gt; ToKey(class Microsoft.ML.StaticPipe.Scalar`1&lt;unsigned int16&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int16&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Scalar{System.UInt16},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.UInt16})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Scalar&lt;uint16&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint16&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, uint16&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.UInt16&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.UInt16&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,uint&gt; ToKey (this Microsoft.ML.StaticPipe.Scalar&lt;uint&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int32&gt; ToKey(class Microsoft.ML.StaticPipe.Scalar`1&lt;unsigned int32&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int32&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Scalar{System.UInt32},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Scalar&lt;uint32&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint32&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, uint32&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.UInt32&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.UInt32&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,ulong&gt; ToKey (this Microsoft.ML.StaticPipe.Scalar&lt;ulong&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ulong&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int64&gt; ToKey(class Microsoft.ML.StaticPipe.Scalar`1&lt;unsigned int64&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int64&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Scalar{System.UInt64},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Scalar&lt;uint64&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint64&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, uint64&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.UInt64&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.UInt64&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,bool&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.VarVector&lt;bool&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;bool&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, bool&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.VarVector`1&lt;bool&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;bool&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.VarVector{System.Boolean},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Boolean})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;bool&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;bool&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, bool&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;System.Boolean&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Boolean&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,byte&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.VarVector&lt;byte&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;byte&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int8&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.VarVector`1&lt;unsigned int8&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int8&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.VarVector{System.Byte},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Byte})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;byte&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;byte&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, byte&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Byte&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Byte&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Zero is considered a valid value and so will be entered into the dictionary if observed. The potential perf
            implication in that case is that sparse input numeric vectors will map to dense output key vectors.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,double&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.VarVector&lt;double&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;double&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, float64&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.VarVector`1&lt;float64&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;float64&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.VarVector{System.Double},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Double})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;double&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;double&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, double&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Double&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;System.Double&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Double&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Because <c>NaN</c> floating point values are never entered into the dictionary, and they will always map to the missing key.
            Zero is considered a valid value and so will be entered into the dictionary if observed. The potential perf
            implication in that case is that sparse input numeric vectors will map to dense output key vectors.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,short&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.VarVector&lt;short&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;short&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int16&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.VarVector`1&lt;int16&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int16&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.VarVector{System.Int16},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Int16})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;int16&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int16&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, int16&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Int16&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;System.Int16&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Int16&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Zero is considered a valid value and so will be entered into the dictionary if observed. The potential perf
            implication in that case is that sparse input numeric vectors will map to dense output key vectors.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,int&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.VarVector&lt;int&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int32&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.VarVector`1&lt;int32&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int32&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.VarVector{System.Int32},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Int32})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;int&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, int&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;System.Int32&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Int32&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Zero is considered a valid value and so will be entered into the dictionary if observed. The potential perf
            implication in that case is that sparse input numeric vectors will map to dense output key vectors.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,long&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.VarVector&lt;long&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;long&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int64&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.VarVector`1&lt;int64&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int64&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.VarVector{System.Int64},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Int64})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;int64&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int64&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, int64&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Int64&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;System.Int64&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Int64&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Zero is considered a valid value and so will be entered into the dictionary if observed. The potential perf
            implication in that case is that sparse input numeric vectors will map to dense output key vectors.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,sbyte&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.VarVector&lt;sbyte&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;sbyte&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int8&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.VarVector`1&lt;int8&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int8&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.VarVector{System.SByte},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.SByte})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;sbyte&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;sbyte&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, sbyte&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.SByte&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;System.SByte&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.SByte&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Zero is considered a valid value and so will be entered into the dictionary if observed. The potential perf
            implication in that case is that sparse input numeric vectors will map to dense output key vectors.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,float&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.VarVector&lt;float&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;float&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, float32&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.VarVector`1&lt;float32&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;float32&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.VarVector{System.Single},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Single})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;single&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;single&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, single&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Single&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;System.Single&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Single&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Because <c>NaN</c> floating point values are never entered into the dictionary, and they will always map to the missing key.
            Zero is considered a valid value and so will be entered into the dictionary if observed. The potential perf
            implication in that case is that sparse input numeric vectors will map to dense output key vectors.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,string&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.VarVector&lt;string&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ReadOnlyMemory&lt;char&gt;&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, string&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.VarVector`1&lt;string&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;valuetype System.ReadOnlyMemory`1&lt;char&gt;&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.VarVector{System.String},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.ReadOnlyMemory{System.Char}})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;string&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ReadOnlyMemory&lt;char&gt;&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, string&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;System.String&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.ReadOnlyMemory&lt;System.Char&gt;&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Because the empty string is never entered into the dictionary, it will always map to the missing key.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,ushort&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.VarVector&lt;ushort&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ushort&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int16&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.VarVector`1&lt;unsigned int16&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int16&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.VarVector{System.UInt16},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.UInt16})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;uint16&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint16&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, uint16&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.UInt16&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;System.UInt16&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.UInt16&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Zero is considered a valid value and so will be entered into the dictionary if observed. The potential perf
            implication in that case is that sparse input numeric vectors will map to dense output key vectors.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,uint&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.VarVector&lt;uint&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int32&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.VarVector`1&lt;unsigned int32&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int32&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.VarVector{System.UInt32},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;uint32&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint32&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, uint32&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.UInt32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;System.UInt32&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.UInt32&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Zero is considered a valid value and so will be entered into the dictionary if observed. The potential perf
            implication in that case is that sparse input numeric vectors will map to dense output key vectors.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,ulong&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.VarVector&lt;ulong&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ulong&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int64&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.VarVector`1&lt;unsigned int64&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int64&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.VarVector{System.UInt64},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;uint64&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint64&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, uint64&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.UInt64&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;System.UInt64&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.UInt64&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Zero is considered a valid value and so will be entered into the dictionary if observed. The potential perf
            implication in that case is that sparse input numeric vectors will map to dense output key vectors.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,bool&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.Vector&lt;bool&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;bool&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, bool&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.Vector`1&lt;bool&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;bool&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Vector{System.Boolean},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Boolean})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;bool&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;bool&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, bool&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Boolean&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Boolean&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,byte&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.Vector&lt;byte&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;byte&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int8&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.Vector`1&lt;unsigned int8&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int8&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Vector{System.Byte},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Byte})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;byte&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;byte&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, byte&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Byte&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Byte&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Zero is considered a valid value and so will be entered into the dictionary if observed. The potential perf
            implication in that case is that sparse input numeric vectors will map to dense output key vectors.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,double&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.Vector&lt;double&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;double&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, float64&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.Vector`1&lt;float64&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;float64&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Vector{System.Double},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Double})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;double&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;double&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, double&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Double&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Double&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Double&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Because <c>NaN</c> floating point values are never entered into the dictionary, and they will always map to the missing key.
            Zero is considered a valid value and so will be entered into the dictionary if observed. The potential perf
            implication in that case is that sparse input numeric vectors will map to dense output key vectors.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,short&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.Vector&lt;short&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;short&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int16&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.Vector`1&lt;int16&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int16&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Vector{System.Int16},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Int16})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;int16&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int16&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, int16&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Int16&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Int16&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Int16&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Zero is considered a valid value and so will be entered into the dictionary if observed. The potential perf
            implication in that case is that sparse input numeric vectors will map to dense output key vectors.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,int&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.Vector&lt;int&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int32&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.Vector`1&lt;int32&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int32&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Vector{System.Int32},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Int32})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;int&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, int&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Int32&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Int32&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Zero is considered a valid value and so will be entered into the dictionary if observed. The potential perf
            implication in that case is that sparse input numeric vectors will map to dense output key vectors.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,long&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.Vector&lt;long&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;long&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int64&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.Vector`1&lt;int64&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int64&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Vector{System.Int64},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Int64})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;int64&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int64&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, int64&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Int64&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Int64&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Int64&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Zero is considered a valid value and so will be entered into the dictionary if observed. The potential perf
            implication in that case is that sparse input numeric vectors will map to dense output key vectors.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,sbyte&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.Vector&lt;sbyte&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;sbyte&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int8&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.Vector`1&lt;int8&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int8&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Vector{System.SByte},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.SByte})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;sbyte&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;sbyte&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, sbyte&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.SByte&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;System.SByte&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.SByte&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Zero is considered a valid value and so will be entered into the dictionary if observed. The potential perf
            implication in that case is that sparse input numeric vectors will map to dense output key vectors.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,float&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.Vector&lt;float&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;float&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, float32&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;float32&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Single})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;single&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, single&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Single&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Single&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Because <c>NaN</c> floating point values are never entered into the dictionary, and they will always map to the missing key.
            Zero is considered a valid value and so will be entered into the dictionary if observed. The potential perf
            implication in that case is that sparse input numeric vectors will map to dense output key vectors.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,string&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.Vector&lt;string&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ReadOnlyMemory&lt;char&gt;&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, string&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.Vector`1&lt;string&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;valuetype System.ReadOnlyMemory`1&lt;char&gt;&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Vector{System.String},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.ReadOnlyMemory{System.Char}})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;string&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ReadOnlyMemory&lt;char&gt;&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, string&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;System.String&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.ReadOnlyMemory&lt;System.Char&gt;&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Because the empty string is never entered into the dictionary, it will always map to the missing key.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,ushort&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.Vector&lt;ushort&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ushort&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int16&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.Vector`1&lt;unsigned int16&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int16&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Vector{System.UInt16},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.UInt16})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;uint16&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint16&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, uint16&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.UInt16&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;System.UInt16&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.UInt16&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Zero is considered a valid value and so will be entered into the dictionary if observed. The potential perf
            implication in that case is that sparse input numeric vectors will map to dense output key vectors.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,uint&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.Vector&lt;uint&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int32&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.Vector`1&lt;unsigned int32&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int32&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Vector{System.UInt32},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;uint32&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint32&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, uint32&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.UInt32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;System.UInt32&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.UInt32&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Zero is considered a valid value and so will be entered into the dictionary if observed. The potential perf
            implication in that case is that sparse input numeric vectors will map to dense output key vectors.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,ulong&gt;&gt; ToKey (this Microsoft.ML.StaticPipe.Vector&lt;ulong&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ulong&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int64&gt;&gt; ToKey(class Microsoft.ML.StaticPipe.Vector`1&lt;unsigned int64&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int64&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey(Microsoft.ML.StaticPipe.Vector{System.UInt64},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;uint64&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint64&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, uint64&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.UInt64&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;System.UInt64&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.UInt64&gt;+OnFit" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Zero is considered a valid value and so will be entered into the dictionary if observed. The potential perf
            implication in that case is that sparse input numeric vectors will map to dense output key vectors.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,bool&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Key&lt;T,bool&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;bool&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, bool&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Key`2&lt;!!T, bool&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;bool&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Key{``0,System.Boolean},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Boolean})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Key&lt;'T, bool&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;bool&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, bool&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Key&lt;T,System.Boolean&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Boolean&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,byte&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Key&lt;T,byte&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;byte&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int8&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Key`2&lt;!!T, unsigned int8&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int8&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Key{``0,System.Byte},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Byte})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Key&lt;'T, byte&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;byte&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, byte&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Byte&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Key&lt;T,System.Byte&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Byte&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,double&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Key&lt;T,double&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;double&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, float64&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Key`2&lt;!!T, float64&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;float64&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Key{``0,System.Double},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Double})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Key&lt;'T, double&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;double&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, double&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Key&lt;T,System.Double&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Double&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Because <c>NaN</c> floating point values are never entered into the dictionary, and they will always map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,short&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Key&lt;T,short&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;short&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int16&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Key`2&lt;!!T, int16&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int16&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Key{``0,System.Int16},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Int16})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Key&lt;'T, int16&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int16&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, int16&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Int16&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Key&lt;T,System.Int16&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Int16&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,int&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Key&lt;T,int&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int32&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Key`2&lt;!!T, int32&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int32&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Key{``0,System.Int32},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Int32})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Key&lt;'T, int&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, int&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Key&lt;T,System.Int32&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Int32&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,long&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Key&lt;T,long&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;long&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int64&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Key`2&lt;!!T, int64&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int64&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Key{``0,System.Int64},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Int64})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Key&lt;'T, int64&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int64&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, int64&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Int64&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Key&lt;T,System.Int64&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Int64&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,sbyte&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Key&lt;T,sbyte&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;sbyte&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int8&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Key`2&lt;!!T, int8&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int8&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Key{``0,System.SByte},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.SByte})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Key&lt;'T, sbyte&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;sbyte&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, sbyte&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.SByte&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Key&lt;T,System.SByte&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.SByte&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,float&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Key&lt;T,float&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;float&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, float32&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Key`2&lt;!!T, float32&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;float32&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Key{``0,System.Single},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Single})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Key&lt;'T, single&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;single&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, single&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Key&lt;T,System.Single&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Single&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Because <c>NaN</c> floating point values are never entered into the dictionary, and they will always map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,string&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Key&lt;T,string&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ReadOnlyMemory&lt;char&gt;&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, string&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Key`2&lt;!!T, string&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;valuetype System.ReadOnlyMemory`1&lt;char&gt;&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Key{``0,System.String},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.ReadOnlyMemory{System.Char}})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Key&lt;'T, string&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ReadOnlyMemory&lt;char&gt;&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, string&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.String&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Key&lt;T,System.String&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.ReadOnlyMemory&lt;System.Char&gt;&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Because the empty string is never entered into the dictionary, it will always map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,ushort&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Key&lt;T,ushort&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ushort&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int16&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Key`2&lt;!!T, unsigned int16&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int16&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Key{``0,System.UInt16},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.UInt16})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Key&lt;'T, uint16&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint16&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, uint16&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Key&lt;T,System.UInt16&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.UInt16&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,uint&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Key&lt;T,uint&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int32&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Key`2&lt;!!T, unsigned int32&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int32&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Key{``0,System.UInt32},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Key&lt;'T, uint32&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint32&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, uint32&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Key&lt;T,System.UInt32&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.UInt32&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Key&lt;uint,ulong&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Key&lt;T,ulong&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ulong&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int64&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Key`2&lt;!!T, unsigned int64&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int64&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Key{``0,System.UInt64},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Key&lt;'T, uint64&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint64&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Key&lt;uint32, uint64&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Key&lt;T,System.UInt64&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.UInt64&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,bool&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,bool&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;bool&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, bool&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, bool&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;bool&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.VarVector{Microsoft.ML.StaticPipe.Key{``0,System.Boolean}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Boolean})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, bool&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;bool&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, bool&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.Boolean&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Boolean&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,byte&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,byte&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;byte&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int8&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, unsigned int8&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int8&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.VarVector{Microsoft.ML.StaticPipe.Key{``0,System.Byte}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Byte})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, byte&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;byte&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, byte&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Byte&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.Byte&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Byte&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,double&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,double&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;double&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, float64&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, float64&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;float64&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.VarVector{Microsoft.ML.StaticPipe.Key{``0,System.Double}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Double})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, double&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;double&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, double&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Double&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.Double&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Double&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Because <c>NaN</c> floating point values are never entered into the dictionary, and they will always map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,short&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,short&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;short&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int16&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, int16&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int16&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.VarVector{Microsoft.ML.StaticPipe.Key{``0,System.Int16}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Int16})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, int16&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int16&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, int16&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Int16&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.Int16&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Int16&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,int&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,int&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int32&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, int32&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int32&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.VarVector{Microsoft.ML.StaticPipe.Key{``0,System.Int32}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Int32})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, int&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, int&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.Int32&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Int32&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,long&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,long&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;long&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int64&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, int64&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int64&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.VarVector{Microsoft.ML.StaticPipe.Key{``0,System.Int64}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Int64})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, int64&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int64&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, int64&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Int64&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.Int64&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Int64&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,sbyte&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,sbyte&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;sbyte&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int8&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, int8&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int8&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.VarVector{Microsoft.ML.StaticPipe.Key{``0,System.SByte}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.SByte})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, sbyte&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;sbyte&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, sbyte&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.SByte&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.SByte&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.SByte&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,float&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,float&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;float&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, float32&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, float32&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;float32&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.VarVector{Microsoft.ML.StaticPipe.Key{``0,System.Single}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Single})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, single&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;single&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, single&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Single&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.Single&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Single&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Because <c>NaN</c> floating point values are never entered into the dictionary, and they will always map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,string&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,string&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ReadOnlyMemory&lt;char&gt;&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, string&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, string&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;valuetype System.ReadOnlyMemory`1&lt;char&gt;&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.VarVector{Microsoft.ML.StaticPipe.Key{``0,System.String}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.ReadOnlyMemory{System.Char}})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, string&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ReadOnlyMemory&lt;char&gt;&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, string&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.String&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.ReadOnlyMemory&lt;System.Char&gt;&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Because the empty string is never entered into the dictionary, it will always map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,ushort&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,ushort&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ushort&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int16&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, unsigned int16&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int16&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.VarVector{Microsoft.ML.StaticPipe.Key{``0,System.UInt16}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.UInt16})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, uint16&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint16&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, uint16&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.UInt16&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.UInt16&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.UInt16&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,uint&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,uint&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int32&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, unsigned int32&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int32&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.VarVector{Microsoft.ML.StaticPipe.Key{``0,System.UInt32}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, uint32&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint32&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, uint32&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.UInt32&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.UInt32&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.UInt32&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,ulong&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,ulong&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ulong&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int64&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.VarVector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, unsigned int64&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int64&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.VarVector{Microsoft.ML.StaticPipe.Key{``0,System.UInt64}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, uint64&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint64&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, uint64&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.UInt64&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.UInt64&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.UInt64&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,bool&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,bool&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;bool&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, bool&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, bool&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;bool&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Vector{Microsoft.ML.StaticPipe.Key{``0,System.Boolean}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Boolean})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, bool&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;bool&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, bool&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.Boolean&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Boolean&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,byte&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,byte&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;byte&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int8&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, unsigned int8&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int8&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Vector{Microsoft.ML.StaticPipe.Key{``0,System.Byte}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Byte})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, byte&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;byte&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, byte&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Byte&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.Byte&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Byte&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,double&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,double&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;double&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, float64&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, float64&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;float64&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Vector{Microsoft.ML.StaticPipe.Key{``0,System.Double}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Double})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, double&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;double&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, double&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Double&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.Double&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Double&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Because <c>NaN</c> floating point values are never entered into the dictionary, and they will always map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,short&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,short&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;short&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int16&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, int16&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int16&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Vector{Microsoft.ML.StaticPipe.Key{``0,System.Int16}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Int16})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, int16&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int16&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, int16&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Int16&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.Int16&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Int16&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,int&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,int&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int32&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, int32&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int32&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Vector{Microsoft.ML.StaticPipe.Key{``0,System.Int32}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Int32})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, int&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, int&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.Int32&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Int32&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,long&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,long&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;long&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int64&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, int64&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int64&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Vector{Microsoft.ML.StaticPipe.Key{``0,System.Int64}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Int64})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, int64&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;int64&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, int64&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Int64&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.Int64&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Int64&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,sbyte&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,sbyte&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;sbyte&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, int8&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, int8&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;int8&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Vector{Microsoft.ML.StaticPipe.Key{``0,System.SByte}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.SByte})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, sbyte&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;sbyte&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, sbyte&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.SByte&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.SByte&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.SByte&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,float&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,float&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;float&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, float32&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, float32&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;float32&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Vector{Microsoft.ML.StaticPipe.Key{``0,System.Single}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.Single})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, single&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;single&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, single&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.Single&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.Single&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.Single&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Because <c>NaN</c> floating point values are never entered into the dictionary, and they will always map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,string&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,string&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ReadOnlyMemory&lt;char&gt;&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, string&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, string&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;valuetype System.ReadOnlyMemory`1&lt;char&gt;&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Vector{Microsoft.ML.StaticPipe.Key{``0,System.String}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.ReadOnlyMemory{System.Char}})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, string&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ReadOnlyMemory&lt;char&gt;&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, string&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.String&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.ReadOnlyMemory&lt;System.Char&gt;&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            Because the empty string is never entered into the dictionary, it will always map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,ushort&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,ushort&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ushort&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int16&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, unsigned int16&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int16&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Vector{Microsoft.ML.StaticPipe.Key{``0,System.UInt16}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.UInt16})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, uint16&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint16&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, uint16&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.UInt16&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.UInt16&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.UInt16&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,uint&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,uint&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int32&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, unsigned int32&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int32&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Vector{Microsoft.ML.StaticPipe.Key{``0,System.UInt32}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, uint32&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint32&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, uint32&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.UInt32&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.UInt32&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.UInt32&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToKey&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint,ulong&gt;&gt; ToKey&lt;T&gt; (this Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,ulong&gt;&gt; input, Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality = Microsoft.ML.StaticPipe.KeyOrdinality.Occurence, int maxItems = 1000000, Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;ulong&gt;.OnFit onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, unsigned int64&gt;&gt; ToKey&lt;T&gt;(class Microsoft.ML.StaticPipe.Vector`1&lt;class Microsoft.ML.StaticPipe.Key`2&lt;!!T, unsigned int64&gt;&gt; input, valuetype Microsoft.ML.StaticPipe.KeyOrdinality keyOrdinality, int32 maxItems, class Microsoft.ML.StaticPipe.TermStaticExtensions/ToKeyFitResult`1/OnFit&lt;unsigned int64&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey``1(Microsoft.ML.StaticPipe.Vector{Microsoft.ML.StaticPipe.Key{``0,System.UInt64}},Microsoft.ML.StaticPipe.KeyOrdinality,System.Int32,Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult`1.OnFit{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member ToKey : Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;'T, uint64&gt;&gt; * Microsoft.ML.StaticPipe.KeyOrdinality * int * Microsoft.ML.StaticPipe.TermStaticExtensions.ToKeyFitResult&lt;uint64&gt;.OnFit -&gt; Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;uint32, uint64&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TermStaticExtensions.ToKey (input, keyOrdinality, maxItems, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;System.UInt32,System.UInt64&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;Microsoft.ML.StaticPipe.Key&lt;T,System.UInt64&gt;&gt;" RefType="this" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.StaticPipe.KeyOrdinality" />
        <Parameter Name="maxItems" Type="System.Int32" />
        <Parameter Name="onFit" Type="Microsoft.ML.StaticPipe.TermStaticExtensions+ToKeyFitResult&lt;System.UInt64&gt;+OnFit" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">The input column.</param>
        <param name="keyOrdinality">The ordering policy for what order values will appear in the enumerated set.</param>
        <param name="maxItems">The maximum number of items.</param>
        <param name="onFit">Called upon fitting with the learnt enumeration on the dataset.</param>
        <summary>
            Map values to a key-value representation, where the key type's values are those values observed in the input
            during fitting. During transformation, any values unobserved during fitting will map to the missing key.
            We are inputting a key type with values, and in that case the dictionary is considered to be built over the
            values of the keys, rather than the keys themselves. This also mean the key-values learned for the output
            will be a subset of the key-values in the input.
            </summary>
        <returns>The key-valued column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>