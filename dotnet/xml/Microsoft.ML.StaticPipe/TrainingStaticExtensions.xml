<Type Name="TrainingStaticExtensions" FullName="Microsoft.ML.StaticPipe.TrainingStaticExtensions">
  <TypeSignature Language="C#" Value="public static class TrainingStaticExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TrainingStaticExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.StaticPipe.TrainingStaticExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module TrainingStaticExtensions" />
  <TypeSignature Language="F#" Value="type TrainingStaticExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines static extension methods that allow operations like train-test split, cross-validate,
            sampling etc. with the <see cref="T:Microsoft.ML.TrainCatalogBase" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CrossValidate&lt;TInShape,TOutShape,TTransformer&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.Data.CalibratedBinaryClassificationMetrics,Microsoft.ML.StaticPipe.Transformer&lt;TInShape,TOutShape,TTransformer&gt;,Microsoft.ML.StaticPipe.DataView&lt;TOutShape&gt;&gt;[] CrossValidate&lt;TInShape,TOutShape,TTransformer&gt; (this Microsoft.ML.BinaryClassificationCatalog catalog, Microsoft.ML.StaticPipe.DataView&lt;TInShape&gt; data, Microsoft.ML.StaticPipe.Estimator&lt;TInShape,TOutShape,TTransformer&gt; estimator, Func&lt;TOutShape,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; label, int numFolds = 5, Func&lt;TInShape,Microsoft.ML.StaticPipe.PipelineColumn&gt; stratificationColumn = null, Nullable&lt;int&gt; seed = null) where TTransformer : class, Microsoft.ML.ITransformer;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;class Microsoft.ML.Data.CalibratedBinaryClassificationMetrics, class Microsoft.ML.StaticPipe.Transformer`3&lt;!!TInShape, !!TOutShape, !!TTransformer&gt;, class Microsoft.ML.StaticPipe.DataView`1&lt;!!TOutShape&gt;&gt;[] CrossValidate&lt;TInShape, TOutShape, class (class Microsoft.ML.ITransformer) TTransformer&gt;(class Microsoft.ML.BinaryClassificationCatalog catalog, class Microsoft.ML.StaticPipe.DataView`1&lt;!!TInShape&gt; data, class Microsoft.ML.StaticPipe.Estimator`3&lt;!!TInShape, !!TOutShape, !!TTransformer&gt; estimator, class System.Func`2&lt;!!TOutShape, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; label, int32 numFolds, class System.Func`2&lt;!!TInShape, class Microsoft.ML.StaticPipe.PipelineColumn&gt; stratificationColumn, valuetype System.Nullable`1&lt;int32&gt; seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TrainingStaticExtensions.CrossValidate``3(Microsoft.ML.BinaryClassificationCatalog,Microsoft.ML.StaticPipe.DataView{``0},Microsoft.ML.StaticPipe.Estimator{``0,``1,``2},System.Func{``1,Microsoft.ML.StaticPipe.Scalar{System.Boolean}},System.Int32,System.Func{``0,Microsoft.ML.StaticPipe.PipelineColumn},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossValidate(Of TInShape, TOutShape, TTransformer) (catalog As BinaryClassificationCatalog, data As DataView(Of TInShape), estimator As Estimator(Of TInShape, TOutShape, TTransformer), label As Func(Of TOutShape, Scalar(Of Boolean)), Optional numFolds As Integer = 5, Optional stratificationColumn As Func(Of TInShape, PipelineColumn) = null, Optional seed As Nullable(Of Integer) = null) As ValueTuple(Of CalibratedBinaryClassificationMetrics, Transformer(Of TInShape, TOutShape, TTransformer), DataView(Of TOutShape))()" />
      <MemberSignature Language="F#" Value="static member CrossValidate : Microsoft.ML.BinaryClassificationCatalog * Microsoft.ML.StaticPipe.DataView&lt;'InShape&gt; * Microsoft.ML.StaticPipe.Estimator&lt;'InShape, 'OutShape, 'ransformer (requires 'ransformer : null and 'ransformer :&gt; Microsoft.ML.ITransformer)&gt; * Func&lt;'OutShape, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; * int * Func&lt;'InShape, Microsoft.ML.StaticPipe.PipelineColumn&gt; * Nullable&lt;int&gt; -&gt; ValueTuple&lt;Microsoft.ML.Data.CalibratedBinaryClassificationMetrics, Microsoft.ML.StaticPipe.Transformer&lt;'InShape, 'OutShape, 'ransformer&gt;, Microsoft.ML.StaticPipe.DataView&lt;'OutShape&gt;&gt;[] (requires 'ransformer : null and 'ransformer :&gt; Microsoft.ML.ITransformer)" Usage="Microsoft.ML.StaticPipe.TrainingStaticExtensions.CrossValidate (catalog, data, estimator, label, numFolds, stratificationColumn, seed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.Data.CalibratedBinaryClassificationMetrics,Microsoft.ML.StaticPipe.Transformer&lt;TInShape,TOutShape,TTransformer&gt;,Microsoft.ML.StaticPipe.DataView&lt;TOutShape&gt;&gt;[]</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="ml-dotnet-preview">
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "metrics", "model", "scoredTestData" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInShape" />
        <TypeParameter Name="TOutShape" />
        <TypeParameter Name="TTransformer">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.ML.ITransformer</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog" RefType="this" />
        <Parameter Name="data" Type="Microsoft.ML.StaticPipe.DataView&lt;TInShape&gt;" />
        <Parameter Name="estimator" Type="Microsoft.ML.StaticPipe.Estimator&lt;TInShape,TOutShape,TTransformer&gt;" />
        <Parameter Name="label" Type="System.Func&lt;TOutShape,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;" />
        <Parameter Name="numFolds" Type="System.Int32" />
        <Parameter Name="stratificationColumn" Type="System.Func&lt;TInShape,Microsoft.ML.StaticPipe.PipelineColumn&gt;" />
        <Parameter Name="seed" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInShape">The input schema shape.</typeparam>
        <typeparam name="TOutShape">The output schema shape.</typeparam>
        <typeparam name="TTransformer">The type of the trained model.</typeparam>
        <param name="catalog">The training catalog.</param>
        <param name="data">The data to run cross-validation on.</param>
        <param name="estimator">The estimator to fit.</param>
        <param name="label">The label column (for evaluation).</param>
        <param name="numFolds">Number of cross-validation folds.</param>
        <param name="stratificationColumn">Optional selector for the column to use as a stratification column. If two examples share the same value of the <paramref name="stratificationColumn" />
            (if provided), they are guaranteed to appear in the same subset (train or test). Use this to make sure there is no label leakage from train to the test set.
            If this optional parameter is not provided, a stratification columns will be generated, and its values will be random numbers .</param>
        <param name="seed">Optional parameter used in combination with the <paramref name="stratificationColumn" />.
            If the <paramref name="stratificationColumn" /> is not provided, the random numbers generated to create it, will use this seed as value.
            And if it is not provided, the default value will be used.</param>
        <summary>
            Run cross-validation over <paramref name="numFolds" /> folds of <paramref name="data" />, by fitting <paramref name="estimator" />,
            and respecting <paramref name="stratificationColumn" /> if provided.
            Then evaluate each sub-model against <paramref name="label" /> and return metrics.
            </summary>
        <returns>Per-fold results: metrics, models, scored datasets.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CrossValidate&lt;TInShape,TOutShape,TTransformer&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.Data.MulticlassClassificationMetrics,Microsoft.ML.StaticPipe.Transformer&lt;TInShape,TOutShape,TTransformer&gt;,Microsoft.ML.StaticPipe.DataView&lt;TOutShape&gt;&gt;[] CrossValidate&lt;TInShape,TOutShape,TTransformer&gt; (this Microsoft.ML.MulticlassClassificationCatalog catalog, Microsoft.ML.StaticPipe.DataView&lt;TInShape&gt; data, Microsoft.ML.StaticPipe.Estimator&lt;TInShape,TOutShape,TTransformer&gt; estimator, Func&lt;TOutShape,Microsoft.ML.StaticPipe.Key&lt;uint&gt;&gt; label, int numFolds = 5, Func&lt;TInShape,Microsoft.ML.StaticPipe.PipelineColumn&gt; stratificationColumn = null, Nullable&lt;int&gt; seed = null) where TTransformer : class, Microsoft.ML.ITransformer;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;class Microsoft.ML.Data.MulticlassClassificationMetrics, class Microsoft.ML.StaticPipe.Transformer`3&lt;!!TInShape, !!TOutShape, !!TTransformer&gt;, class Microsoft.ML.StaticPipe.DataView`1&lt;!!TOutShape&gt;&gt;[] CrossValidate&lt;TInShape, TOutShape, class (class Microsoft.ML.ITransformer) TTransformer&gt;(class Microsoft.ML.MulticlassClassificationCatalog catalog, class Microsoft.ML.StaticPipe.DataView`1&lt;!!TInShape&gt; data, class Microsoft.ML.StaticPipe.Estimator`3&lt;!!TInShape, !!TOutShape, !!TTransformer&gt; estimator, class System.Func`2&lt;!!TOutShape, class Microsoft.ML.StaticPipe.Key`1&lt;unsigned int32&gt;&gt; label, int32 numFolds, class System.Func`2&lt;!!TInShape, class Microsoft.ML.StaticPipe.PipelineColumn&gt; stratificationColumn, valuetype System.Nullable`1&lt;int32&gt; seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TrainingStaticExtensions.CrossValidate``3(Microsoft.ML.MulticlassClassificationCatalog,Microsoft.ML.StaticPipe.DataView{``0},Microsoft.ML.StaticPipe.Estimator{``0,``1,``2},System.Func{``1,Microsoft.ML.StaticPipe.Key{System.UInt32}},System.Int32,System.Func{``0,Microsoft.ML.StaticPipe.PipelineColumn},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossValidate(Of TInShape, TOutShape, TTransformer) (catalog As MulticlassClassificationCatalog, data As DataView(Of TInShape), estimator As Estimator(Of TInShape, TOutShape, TTransformer), label As Func(Of TOutShape, Key(Of UInteger)), Optional numFolds As Integer = 5, Optional stratificationColumn As Func(Of TInShape, PipelineColumn) = null, Optional seed As Nullable(Of Integer) = null) As ValueTuple(Of MulticlassClassificationMetrics, Transformer(Of TInShape, TOutShape, TTransformer), DataView(Of TOutShape))()" />
      <MemberSignature Language="F#" Value="static member CrossValidate : Microsoft.ML.MulticlassClassificationCatalog * Microsoft.ML.StaticPipe.DataView&lt;'InShape&gt; * Microsoft.ML.StaticPipe.Estimator&lt;'InShape, 'OutShape, 'ransformer (requires 'ransformer : null and 'ransformer :&gt; Microsoft.ML.ITransformer)&gt; * Func&lt;'OutShape, Microsoft.ML.StaticPipe.Key&lt;uint32&gt;&gt; * int * Func&lt;'InShape, Microsoft.ML.StaticPipe.PipelineColumn&gt; * Nullable&lt;int&gt; -&gt; ValueTuple&lt;Microsoft.ML.Data.MulticlassClassificationMetrics, Microsoft.ML.StaticPipe.Transformer&lt;'InShape, 'OutShape, 'ransformer&gt;, Microsoft.ML.StaticPipe.DataView&lt;'OutShape&gt;&gt;[] (requires 'ransformer : null and 'ransformer :&gt; Microsoft.ML.ITransformer)" Usage="Microsoft.ML.StaticPipe.TrainingStaticExtensions.CrossValidate (catalog, data, estimator, label, numFolds, stratificationColumn, seed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.Data.MulticlassClassificationMetrics,Microsoft.ML.StaticPipe.Transformer&lt;TInShape,TOutShape,TTransformer&gt;,Microsoft.ML.StaticPipe.DataView&lt;TOutShape&gt;&gt;[]</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="ml-dotnet-preview">
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "metrics", "model", "scoredTestData" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInShape" />
        <TypeParameter Name="TOutShape" />
        <TypeParameter Name="TTransformer">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.ML.ITransformer</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog" RefType="this" />
        <Parameter Name="data" Type="Microsoft.ML.StaticPipe.DataView&lt;TInShape&gt;" />
        <Parameter Name="estimator" Type="Microsoft.ML.StaticPipe.Estimator&lt;TInShape,TOutShape,TTransformer&gt;" />
        <Parameter Name="label" Type="System.Func&lt;TOutShape,Microsoft.ML.StaticPipe.Key&lt;System.UInt32&gt;&gt;" />
        <Parameter Name="numFolds" Type="System.Int32" />
        <Parameter Name="stratificationColumn" Type="System.Func&lt;TInShape,Microsoft.ML.StaticPipe.PipelineColumn&gt;" />
        <Parameter Name="seed" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInShape">The input schema shape.</typeparam>
        <typeparam name="TOutShape">The output schema shape.</typeparam>
        <typeparam name="TTransformer">The type of the trained model.</typeparam>
        <param name="catalog">The training catalog.</param>
        <param name="data">The data to run cross-validation on.</param>
        <param name="estimator">The estimator to fit.</param>
        <param name="label">The label column (for evaluation).</param>
        <param name="numFolds">Number of cross-validation folds.</param>
        <param name="stratificationColumn">Optional selector for the column to use as a stratification column. If two examples share the same value of the <paramref name="stratificationColumn" />
            (if provided), they are guaranteed to appear in the same subset (train or test). Use this to make sure there is no label leakage from train to the test set.
            If this optional parameter is not provided, a stratification columns will be generated, and its values will be random numbers .</param>
        <param name="seed">Optional parameter used in combination with the <paramref name="stratificationColumn" />.
            If the <paramref name="stratificationColumn" /> is not provided, the random numbers generated to create it, will use this seed as value.
            And if it is not provided, the default value will be used.</param>
        <summary>
            Run cross-validation over <paramref name="numFolds" /> folds of <paramref name="data" />, by fitting <paramref name="estimator" />,
            and respecting <paramref name="stratificationColumn" /> if provided.
            Then evaluate each sub-model against <paramref name="label" /> and return metrics.
            </summary>
        <returns>Per-fold results: metrics, models, scored datasets.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CrossValidate&lt;TInShape,TOutShape,TTransformer&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.Data.RegressionMetrics,Microsoft.ML.StaticPipe.Transformer&lt;TInShape,TOutShape,TTransformer&gt;,Microsoft.ML.StaticPipe.DataView&lt;TOutShape&gt;&gt;[] CrossValidate&lt;TInShape,TOutShape,TTransformer&gt; (this Microsoft.ML.RegressionCatalog catalog, Microsoft.ML.StaticPipe.DataView&lt;TInShape&gt; data, Microsoft.ML.StaticPipe.Estimator&lt;TInShape,TOutShape,TTransformer&gt; estimator, Func&lt;TOutShape,Microsoft.ML.StaticPipe.Scalar&lt;float&gt;&gt; label, int numFolds = 5, Func&lt;TInShape,Microsoft.ML.StaticPipe.PipelineColumn&gt; stratificationColumn = null, Nullable&lt;int&gt; seed = null) where TTransformer : class, Microsoft.ML.ITransformer;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;class Microsoft.ML.Data.RegressionMetrics, class Microsoft.ML.StaticPipe.Transformer`3&lt;!!TInShape, !!TOutShape, !!TTransformer&gt;, class Microsoft.ML.StaticPipe.DataView`1&lt;!!TOutShape&gt;&gt;[] CrossValidate&lt;TInShape, TOutShape, class (class Microsoft.ML.ITransformer) TTransformer&gt;(class Microsoft.ML.RegressionCatalog catalog, class Microsoft.ML.StaticPipe.DataView`1&lt;!!TInShape&gt; data, class Microsoft.ML.StaticPipe.Estimator`3&lt;!!TInShape, !!TOutShape, !!TTransformer&gt; estimator, class System.Func`2&lt;!!TOutShape, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;&gt; label, int32 numFolds, class System.Func`2&lt;!!TInShape, class Microsoft.ML.StaticPipe.PipelineColumn&gt; stratificationColumn, valuetype System.Nullable`1&lt;int32&gt; seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TrainingStaticExtensions.CrossValidate``3(Microsoft.ML.RegressionCatalog,Microsoft.ML.StaticPipe.DataView{``0},Microsoft.ML.StaticPipe.Estimator{``0,``1,``2},System.Func{``1,Microsoft.ML.StaticPipe.Scalar{System.Single}},System.Int32,System.Func{``0,Microsoft.ML.StaticPipe.PipelineColumn},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossValidate(Of TInShape, TOutShape, TTransformer) (catalog As RegressionCatalog, data As DataView(Of TInShape), estimator As Estimator(Of TInShape, TOutShape, TTransformer), label As Func(Of TOutShape, Scalar(Of Single)), Optional numFolds As Integer = 5, Optional stratificationColumn As Func(Of TInShape, PipelineColumn) = null, Optional seed As Nullable(Of Integer) = null) As ValueTuple(Of RegressionMetrics, Transformer(Of TInShape, TOutShape, TTransformer), DataView(Of TOutShape))()" />
      <MemberSignature Language="F#" Value="static member CrossValidate : Microsoft.ML.RegressionCatalog * Microsoft.ML.StaticPipe.DataView&lt;'InShape&gt; * Microsoft.ML.StaticPipe.Estimator&lt;'InShape, 'OutShape, 'ransformer (requires 'ransformer : null and 'ransformer :&gt; Microsoft.ML.ITransformer)&gt; * Func&lt;'OutShape, Microsoft.ML.StaticPipe.Scalar&lt;single&gt;&gt; * int * Func&lt;'InShape, Microsoft.ML.StaticPipe.PipelineColumn&gt; * Nullable&lt;int&gt; -&gt; ValueTuple&lt;Microsoft.ML.Data.RegressionMetrics, Microsoft.ML.StaticPipe.Transformer&lt;'InShape, 'OutShape, 'ransformer&gt;, Microsoft.ML.StaticPipe.DataView&lt;'OutShape&gt;&gt;[] (requires 'ransformer : null and 'ransformer :&gt; Microsoft.ML.ITransformer)" Usage="Microsoft.ML.StaticPipe.TrainingStaticExtensions.CrossValidate (catalog, data, estimator, label, numFolds, stratificationColumn, seed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.Data.RegressionMetrics,Microsoft.ML.StaticPipe.Transformer&lt;TInShape,TOutShape,TTransformer&gt;,Microsoft.ML.StaticPipe.DataView&lt;TOutShape&gt;&gt;[]</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="ml-dotnet-preview">
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "metrics", "model", "scoredTestData" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInShape" />
        <TypeParameter Name="TOutShape" />
        <TypeParameter Name="TTransformer">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.ML.ITransformer</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog" RefType="this" />
        <Parameter Name="data" Type="Microsoft.ML.StaticPipe.DataView&lt;TInShape&gt;" />
        <Parameter Name="estimator" Type="Microsoft.ML.StaticPipe.Estimator&lt;TInShape,TOutShape,TTransformer&gt;" />
        <Parameter Name="label" Type="System.Func&lt;TOutShape,Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;&gt;" />
        <Parameter Name="numFolds" Type="System.Int32" />
        <Parameter Name="stratificationColumn" Type="System.Func&lt;TInShape,Microsoft.ML.StaticPipe.PipelineColumn&gt;" />
        <Parameter Name="seed" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInShape">The input schema shape.</typeparam>
        <typeparam name="TOutShape">The output schema shape.</typeparam>
        <typeparam name="TTransformer">The type of the trained model.</typeparam>
        <param name="catalog">The training catalog.</param>
        <param name="data">The data to run cross-validation on.</param>
        <param name="estimator">The estimator to fit.</param>
        <param name="label">The label column (for evaluation).</param>
        <param name="numFolds">Number of cross-validation folds.</param>
        <param name="stratificationColumn">Optional selector for the column to use as a stratification column. If two examples share the same value of the <paramref name="stratificationColumn" />
            (if provided), they are guaranteed to appear in the same subset (train or test). Use this to make sure there is no label leakage from train to the test set.
            If this optional parameter is not provided, a stratification columns will be generated, and its values will be random numbers .</param>
        <param name="seed">Optional parameter used in combination with the <paramref name="stratificationColumn" />.
            If the <paramref name="stratificationColumn" /> is not provided, the random numbers generated to create it, will use this seed as value.
            And if it is not provided, the default value will be used.</param>
        <summary>
            Run cross-validation over <paramref name="numFolds" /> folds of <paramref name="data" />, by fitting <paramref name="estimator" />,
            and respecting <paramref name="stratificationColumn" /> if provided.
            Then evaluate each sub-model against <paramref name="label" /> and return metrics.
            </summary>
        <returns>Per-fold results: metrics, models, scored datasets.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CrossValidateNonCalibrated&lt;TInShape,TOutShape,TTransformer&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.Data.BinaryClassificationMetrics,Microsoft.ML.StaticPipe.Transformer&lt;TInShape,TOutShape,TTransformer&gt;,Microsoft.ML.StaticPipe.DataView&lt;TOutShape&gt;&gt;[] CrossValidateNonCalibrated&lt;TInShape,TOutShape,TTransformer&gt; (this Microsoft.ML.BinaryClassificationCatalog catalog, Microsoft.ML.StaticPipe.DataView&lt;TInShape&gt; data, Microsoft.ML.StaticPipe.Estimator&lt;TInShape,TOutShape,TTransformer&gt; estimator, Func&lt;TOutShape,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; label, int numFolds = 5, Func&lt;TInShape,Microsoft.ML.StaticPipe.PipelineColumn&gt; stratificationColumn = null, Nullable&lt;int&gt; seed = null) where TTransformer : class, Microsoft.ML.ITransformer;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;class Microsoft.ML.Data.BinaryClassificationMetrics, class Microsoft.ML.StaticPipe.Transformer`3&lt;!!TInShape, !!TOutShape, !!TTransformer&gt;, class Microsoft.ML.StaticPipe.DataView`1&lt;!!TOutShape&gt;&gt;[] CrossValidateNonCalibrated&lt;TInShape, TOutShape, class (class Microsoft.ML.ITransformer) TTransformer&gt;(class Microsoft.ML.BinaryClassificationCatalog catalog, class Microsoft.ML.StaticPipe.DataView`1&lt;!!TInShape&gt; data, class Microsoft.ML.StaticPipe.Estimator`3&lt;!!TInShape, !!TOutShape, !!TTransformer&gt; estimator, class System.Func`2&lt;!!TOutShape, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; label, int32 numFolds, class System.Func`2&lt;!!TInShape, class Microsoft.ML.StaticPipe.PipelineColumn&gt; stratificationColumn, valuetype System.Nullable`1&lt;int32&gt; seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TrainingStaticExtensions.CrossValidateNonCalibrated``3(Microsoft.ML.BinaryClassificationCatalog,Microsoft.ML.StaticPipe.DataView{``0},Microsoft.ML.StaticPipe.Estimator{``0,``1,``2},System.Func{``1,Microsoft.ML.StaticPipe.Scalar{System.Boolean}},System.Int32,System.Func{``0,Microsoft.ML.StaticPipe.PipelineColumn},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossValidateNonCalibrated(Of TInShape, TOutShape, TTransformer) (catalog As BinaryClassificationCatalog, data As DataView(Of TInShape), estimator As Estimator(Of TInShape, TOutShape, TTransformer), label As Func(Of TOutShape, Scalar(Of Boolean)), Optional numFolds As Integer = 5, Optional stratificationColumn As Func(Of TInShape, PipelineColumn) = null, Optional seed As Nullable(Of Integer) = null) As ValueTuple(Of BinaryClassificationMetrics, Transformer(Of TInShape, TOutShape, TTransformer), DataView(Of TOutShape))()" />
      <MemberSignature Language="F#" Value="static member CrossValidateNonCalibrated : Microsoft.ML.BinaryClassificationCatalog * Microsoft.ML.StaticPipe.DataView&lt;'InShape&gt; * Microsoft.ML.StaticPipe.Estimator&lt;'InShape, 'OutShape, 'ransformer (requires 'ransformer : null and 'ransformer :&gt; Microsoft.ML.ITransformer)&gt; * Func&lt;'OutShape, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; * int * Func&lt;'InShape, Microsoft.ML.StaticPipe.PipelineColumn&gt; * Nullable&lt;int&gt; -&gt; ValueTuple&lt;Microsoft.ML.Data.BinaryClassificationMetrics, Microsoft.ML.StaticPipe.Transformer&lt;'InShape, 'OutShape, 'ransformer&gt;, Microsoft.ML.StaticPipe.DataView&lt;'OutShape&gt;&gt;[] (requires 'ransformer : null and 'ransformer :&gt; Microsoft.ML.ITransformer)" Usage="Microsoft.ML.StaticPipe.TrainingStaticExtensions.CrossValidateNonCalibrated (catalog, data, estimator, label, numFolds, stratificationColumn, seed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.Data.BinaryClassificationMetrics,Microsoft.ML.StaticPipe.Transformer&lt;TInShape,TOutShape,TTransformer&gt;,Microsoft.ML.StaticPipe.DataView&lt;TOutShape&gt;&gt;[]</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="ml-dotnet-preview">
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "metrics", "model", "scoredTestData" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInShape" />
        <TypeParameter Name="TOutShape" />
        <TypeParameter Name="TTransformer">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.ML.ITransformer</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog" RefType="this" />
        <Parameter Name="data" Type="Microsoft.ML.StaticPipe.DataView&lt;TInShape&gt;" />
        <Parameter Name="estimator" Type="Microsoft.ML.StaticPipe.Estimator&lt;TInShape,TOutShape,TTransformer&gt;" />
        <Parameter Name="label" Type="System.Func&lt;TOutShape,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;" />
        <Parameter Name="numFolds" Type="System.Int32" />
        <Parameter Name="stratificationColumn" Type="System.Func&lt;TInShape,Microsoft.ML.StaticPipe.PipelineColumn&gt;" />
        <Parameter Name="seed" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInShape">The input schema shape.</typeparam>
        <typeparam name="TOutShape">The output schema shape.</typeparam>
        <typeparam name="TTransformer">The type of the trained model.</typeparam>
        <param name="catalog">The training catalog.</param>
        <param name="data">The data to run cross-validation on.</param>
        <param name="estimator">The estimator to fit.</param>
        <param name="label">The label column (for evaluation).</param>
        <param name="numFolds">Number of cross-validation folds.</param>
        <param name="stratificationColumn">Optional selector for the column to use as a stratification column. If two examples share the same value of the <paramref name="stratificationColumn" />
            (if provided), they are guaranteed to appear in the same subset (train or test). Use this to make sure there is no label leakage from train to the test set.
            If this optional parameter is not provided, a stratification columns will be generated, and its values will be random numbers .</param>
        <param name="seed">Optional parameter used in combination with the <paramref name="stratificationColumn" />.
            If the <paramref name="stratificationColumn" /> is not provided, the random numbers generated to create it, will use this seed as value.
            And if it is not provided, the default value will be used.</param>
        <summary>
            Run cross-validation over <paramref name="numFolds" /> folds of <paramref name="data" />, by fitting <paramref name="estimator" />,
            and respecting <paramref name="stratificationColumn" /> if provided.
            Then evaluate each sub-model against <paramref name="label" /> and return metrics.
            </summary>
        <returns>Per-fold results: metrics, models, scored datasets.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainTestSplit&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.StaticPipe.DataView&lt;T&gt;,Microsoft.ML.StaticPipe.DataView&lt;T&gt;&gt; TrainTestSplit&lt;T&gt; (this Microsoft.ML.DataOperationsCatalog catalog, Microsoft.ML.StaticPipe.DataView&lt;T&gt; data, double testFraction = 0.1, Func&lt;T,Microsoft.ML.StaticPipe.PipelineColumn&gt; stratificationColumn = null, Nullable&lt;int&gt; seed = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;class Microsoft.ML.StaticPipe.DataView`1&lt;!!T&gt;, class Microsoft.ML.StaticPipe.DataView`1&lt;!!T&gt;&gt; TrainTestSplit&lt;T&gt;(class Microsoft.ML.DataOperationsCatalog catalog, class Microsoft.ML.StaticPipe.DataView`1&lt;!!T&gt; data, float64 testFraction, class System.Func`2&lt;!!T, class Microsoft.ML.StaticPipe.PipelineColumn&gt; stratificationColumn, valuetype System.Nullable`1&lt;int32&gt; seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.TrainingStaticExtensions.TrainTestSplit``1(Microsoft.ML.DataOperationsCatalog,Microsoft.ML.StaticPipe.DataView{``0},System.Double,System.Func{``0,Microsoft.ML.StaticPipe.PipelineColumn},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TrainTestSplit(Of T) (catalog As DataOperationsCatalog, data As DataView(Of T), Optional testFraction As Double = 0.1, Optional stratificationColumn As Func(Of T, PipelineColumn) = null, Optional seed As Nullable(Of Integer) = null) As ValueTuple(Of DataView(Of T), DataView(Of T))" />
      <MemberSignature Language="F#" Value="static member TrainTestSplit : Microsoft.ML.DataOperationsCatalog * Microsoft.ML.StaticPipe.DataView&lt;'T&gt; * double * Func&lt;'T, Microsoft.ML.StaticPipe.PipelineColumn&gt; * Nullable&lt;int&gt; -&gt; ValueTuple&lt;Microsoft.ML.StaticPipe.DataView&lt;'T&gt;, Microsoft.ML.StaticPipe.DataView&lt;'T&gt;&gt;" Usage="Microsoft.ML.StaticPipe.TrainingStaticExtensions.TrainTestSplit (catalog, data, testFraction, stratificationColumn, seed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.DataView&lt;T&gt;,Microsoft.ML.StaticPipe.DataView&lt;T&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="ml-dotnet-preview">
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "trainSet", "testSet" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.DataOperationsCatalog" RefType="this" />
        <Parameter Name="data" Type="Microsoft.ML.StaticPipe.DataView&lt;T&gt;" />
        <Parameter Name="testFraction" Type="System.Double" />
        <Parameter Name="stratificationColumn" Type="System.Func&lt;T,Microsoft.ML.StaticPipe.PipelineColumn&gt;" />
        <Parameter Name="seed" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">The tuple describing the data schema.</typeparam>
        <param name="catalog">The training catalog.</param>
        <param name="data">The dataset to split.</param>
        <param name="testFraction">The fraction of data to go into the test set.</param>
        <param name="stratificationColumn">Optional selector for the column to use as a stratification column. If two examples share the same value of the <paramref name="stratificationColumn" />
            (if provided), they are guaranteed to appear in the same subset (train or test). Use this to make sure there is no label leakage from train to the test set.
            If this optional parameter is not provided, a stratification columns will be generated, and its values will be random numbers .</param>
        <param name="seed">Optional parameter used in combination with the <paramref name="stratificationColumn" />.
            If the <paramref name="stratificationColumn" /> is not provided, the random numbers generated to create it, will use this seed as value.
            And if it is not provided, the default value will be used.</param>
        <summary>
            Split the dataset into the train set and test set according to the given fraction.
            Respects the <paramref name="stratificationColumn" /> if provided.
            </summary>
        <returns>A pair of datasets, for the train and test set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>