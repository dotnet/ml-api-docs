<Type Name="VarVector&lt;T&gt;" FullName="Microsoft.ML.StaticPipe.VarVector&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class VarVector&lt;T&gt; : Microsoft.ML.StaticPipe.PipelineColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VarVector`1&lt;T&gt; extends Microsoft.ML.StaticPipe.PipelineColumn" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.StaticPipe.VarVector`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VarVector(Of T)&#xA;Inherits PipelineColumn" />
  <TypeSignature Language="F#" Value="type VarVector&lt;'T&gt; = class&#xA;    inherit PipelineColumn" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.StaticPipe.PipelineColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">The vector item type.</typeparam>
    <summary>
            For representing a <see cref="T:Microsoft.ML.Data.VectorDataViewType" /> of unknown length.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VarVector (Microsoft.ML.StaticPipe.Reconciler reconciler, params Microsoft.ML.StaticPipe.PipelineColumn[] dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.StaticPipe.Reconciler reconciler, class Microsoft.ML.StaticPipe.PipelineColumn[] dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.VarVector`1.#ctor(Microsoft.ML.StaticPipe.Reconciler,Microsoft.ML.StaticPipe.PipelineColumn[])" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.StaticPipe.VarVector&lt;'T&gt; : Microsoft.ML.StaticPipe.Reconciler * Microsoft.ML.StaticPipe.PipelineColumn[] -&gt; Microsoft.ML.StaticPipe.VarVector&lt;'T&gt;" Usage="new Microsoft.ML.StaticPipe.VarVector&lt;'T&gt; (reconciler, dependencies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reconciler" Type="Microsoft.ML.StaticPipe.Reconciler" />
        <Parameter Name="dependencies" Type="Microsoft.ML.StaticPipe.PipelineColumn[]">
          <Attributes>
            <Attribute FrameworkAlternate="ml-dotnet-preview">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="reconciler">To be added.</param>
        <param name="dependencies">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.VarVector`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="varVector.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>