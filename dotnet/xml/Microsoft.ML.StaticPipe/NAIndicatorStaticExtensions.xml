<Type Name="NAIndicatorStaticExtensions" FullName="Microsoft.ML.StaticPipe.NAIndicatorStaticExtensions">
  <TypeSignature Language="C#" Value="public static class NAIndicatorStaticExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NAIndicatorStaticExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.StaticPipe.NAIndicatorStaticExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module NAIndicatorStaticExtensions" />
  <TypeSignature Language="F#" Value="type NAIndicatorStaticExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for the static-pipeline over <see cref="T:Microsoft.ML.StaticPipe.PipelineColumn" /> objects.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="IsMissingValue">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; IsMissingValue (this Microsoft.ML.StaticPipe.Scalar&lt;double&gt; input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt; IsMissingValue(class Microsoft.ML.StaticPipe.Scalar`1&lt;float64&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.NAIndicatorStaticExtensions.IsMissingValue(Microsoft.ML.StaticPipe.Scalar{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsMissingValue (input As Scalar(Of Double)) As Scalar(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member IsMissingValue : Microsoft.ML.StaticPipe.Scalar&lt;double&gt; -&gt; Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;" Usage="Microsoft.ML.StaticPipe.NAIndicatorStaticExtensions.IsMissingValue input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <summary>
            Produces a column of boolean entries indicating whether input column entries were missing.
            </summary>
        <returns>A column indicating whether input column entries were missing.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMissingValue">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; IsMissingValue (this Microsoft.ML.StaticPipe.Scalar&lt;float&gt; input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt; IsMissingValue(class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.NAIndicatorStaticExtensions.IsMissingValue(Microsoft.ML.StaticPipe.Scalar{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsMissingValue (input As Scalar(Of Single)) As Scalar(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member IsMissingValue : Microsoft.ML.StaticPipe.Scalar&lt;single&gt; -&gt; Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;" Usage="Microsoft.ML.StaticPipe.NAIndicatorStaticExtensions.IsMissingValue input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <summary>
            Produces a column of boolean entries indicating whether input column entries were missing.
            </summary>
        <returns>A column indicating whether input column entries were missing.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMissingValue">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;bool&gt; IsMissingValue (this Microsoft.ML.StaticPipe.VarVector&lt;double&gt; input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;bool&gt; IsMissingValue(class Microsoft.ML.StaticPipe.VarVector`1&lt;float64&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.NAIndicatorStaticExtensions.IsMissingValue(Microsoft.ML.StaticPipe.VarVector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsMissingValue (input As VarVector(Of Double)) As VarVector(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member IsMissingValue : Microsoft.ML.StaticPipe.VarVector&lt;double&gt; -&gt; Microsoft.ML.StaticPipe.VarVector&lt;bool&gt;" Usage="Microsoft.ML.StaticPipe.NAIndicatorStaticExtensions.IsMissingValue input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <summary>
            Produces a column of boolean entries indicating whether input column entries were missing.
            </summary>
        <returns>A column indicating whether input column entries were missing.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMissingValue">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.VarVector&lt;bool&gt; IsMissingValue (this Microsoft.ML.StaticPipe.VarVector&lt;float&gt; input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.VarVector`1&lt;bool&gt; IsMissingValue(class Microsoft.ML.StaticPipe.VarVector`1&lt;float32&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.NAIndicatorStaticExtensions.IsMissingValue(Microsoft.ML.StaticPipe.VarVector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsMissingValue (input As VarVector(Of Single)) As VarVector(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member IsMissingValue : Microsoft.ML.StaticPipe.VarVector&lt;single&gt; -&gt; Microsoft.ML.StaticPipe.VarVector&lt;bool&gt;" Usage="Microsoft.ML.StaticPipe.NAIndicatorStaticExtensions.IsMissingValue input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.VarVector&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.VarVector&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <summary>
            Produces a column of boolean entries indicating whether input column entries were missing.
            </summary>
        <returns>A column indicating whether input column entries were missing.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMissingValue">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;bool&gt; IsMissingValue (this Microsoft.ML.StaticPipe.Vector&lt;double&gt; input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;bool&gt; IsMissingValue(class Microsoft.ML.StaticPipe.Vector`1&lt;float64&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.NAIndicatorStaticExtensions.IsMissingValue(Microsoft.ML.StaticPipe.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsMissingValue (input As Vector(Of Double)) As Vector(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member IsMissingValue : Microsoft.ML.StaticPipe.Vector&lt;double&gt; -&gt; Microsoft.ML.StaticPipe.Vector&lt;bool&gt;" Usage="Microsoft.ML.StaticPipe.NAIndicatorStaticExtensions.IsMissingValue input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <summary>
            Produces a column of boolean entries indicating whether input column entries were missing.
            </summary>
        <returns>A column indicating whether input column entries were missing.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMissingValue">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Vector&lt;bool&gt; IsMissingValue (this Microsoft.ML.StaticPipe.Vector&lt;float&gt; input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Vector`1&lt;bool&gt; IsMissingValue(class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.NAIndicatorStaticExtensions.IsMissingValue(Microsoft.ML.StaticPipe.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsMissingValue (input As Vector(Of Single)) As Vector(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member IsMissingValue : Microsoft.ML.StaticPipe.Vector&lt;single&gt; -&gt; Microsoft.ML.StaticPipe.Vector&lt;bool&gt;" Usage="Microsoft.ML.StaticPipe.NAIndicatorStaticExtensions.IsMissingValue input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Vector&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="input">The input column.</param>
        <summary>
            Produces a column of boolean entries indicating whether input column entries were missing.
            </summary>
        <returns>A column indicating whether input column entries were missing.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>