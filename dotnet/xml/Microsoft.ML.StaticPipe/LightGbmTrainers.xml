<Type Name="LightGbmTrainers" FullName="Microsoft.ML.StaticPipe.LightGbmTrainers">
  <TypeSignature Language="C#" Value="public static class LightGbmTrainers" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LightGbmTrainers extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.StaticPipe.LightGbmTrainers" />
  <TypeSignature Language="VB.NET" Value="Public Module LightGbmTrainers" />
  <TypeSignature Language="F#" Value="type LightGbmTrainers = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.LightGBM</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Regression trainer estimators.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="LightGbm">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; LightGbm (this Microsoft.ML.BinaryClassificationContext.BinaryClassificationTrainers ctx, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights = null, Nullable&lt;int&gt; numLeaves = null, Nullable&lt;int&gt; minDataPerLeaf = null, Nullable&lt;double&gt; learningRate = null, int numBoostRound = 100, Action&lt;Microsoft.ML.Runtime.LightGBM.LightGbmArguments&gt; advancedSettings = null, Action&lt;Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;float&gt;&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; LightGbm(class Microsoft.ML.BinaryClassificationContext/BinaryClassificationTrainers ctx, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, valuetype System.Nullable`1&lt;int32&gt; numLeaves, valuetype System.Nullable`1&lt;int32&gt; minDataPerLeaf, valuetype System.Nullable`1&lt;float64&gt; learningRate, int32 numBoostRound, class System.Action`1&lt;class Microsoft.ML.Runtime.LightGBM.LightGbmArguments&gt; advancedSettings, class System.Action`1&lt;class Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights`1&lt;float32&gt;&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.LightGbmTrainers.LightGbm(Microsoft.ML.BinaryClassificationContext.BinaryClassificationTrainers,Microsoft.ML.StaticPipe.Scalar{System.Boolean},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double},System.Int32,System.Action{Microsoft.ML.Runtime.LightGBM.LightGbmArguments},System.Action{Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LightGbm (ctx As BinaryClassificationContext.BinaryClassificationTrainers, label As Scalar(Of Boolean), features As Vector(Of Single), Optional weights As Scalar(Of Single) = null, Optional numLeaves As Nullable(Of Integer) = null, Optional minDataPerLeaf As Nullable(Of Integer) = null, Optional learningRate As Nullable(Of Double) = null, Optional numBoostRound As Integer = 100, Optional advancedSettings As Action(Of LightGbmArguments) = null, Optional onFit As Action(Of IPredictorWithFeatureWeights(Of Single)) = null) As ValueTuple(Of Scalar(Of Single), Scalar(Of Single), Scalar(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member LightGbm : Microsoft.ML.BinaryClassificationContext.BinaryClassificationTrainers * Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;double&gt; * int * Action&lt;Microsoft.ML.Runtime.LightGBM.LightGbmArguments&gt; * Action&lt;Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;single&gt;&gt; -&gt; ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;" Usage="Microsoft.ML.StaticPipe.LightGbmTrainers.LightGbm (ctx, label, features, weights, numLeaves, minDataPerLeaf, learningRate, numBoostRound, advancedSettings, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGBM</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "probability", "predictedLabel" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.BinaryClassificationContext+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="numLeaves" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="minDataPerLeaf" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="learningRate" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="numBoostRound" Type="System.Int32" />
        <Parameter Name="advancedSettings" Type="System.Action&lt;Microsoft.ML.Runtime.LightGBM.LightGbmArguments&gt;" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="ctx">The <see cref="T:Microsoft.ML.BinaryClassificationContext" />.</param>
        <param name="label">The label column.</param>
        <param name="features">The features column.</param>
        <param name="weights">The weights column.</param>
        <param name="numLeaves">The number of leaves to use.</param>
        <param name="minDataPerLeaf">The minimal number of documents allowed in a leaf of the tree, out of the subsampled data.</param>
        <param name="learningRate">The learning rate.</param>
        <param name="numBoostRound">Number of iterations.</param>
        <param name="advancedSettings">Algorithm advanced settings.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained. Note that this action cannot change the result in any way;
            it is only a way for the caller to be informed about what was learnt.</param>
        <summary>
            Predict a target using a tree binary classification model trained with the <see cref="T:Microsoft.ML.Runtime.LightGBM.LightGbmBinaryTrainer" />.
            </summary>
        <returns>The set of output columns including in order the predicted binary classification score (which will range
            from negative to positive infinity), the calibrated prediction (from 0 to 1), and the predicted label.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[LightGBM](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Static/LightGBMBinaryClassification.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="LightGbm">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Scalar&lt;float&gt; LightGbm (this Microsoft.ML.RegressionContext.RegressionTrainers ctx, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights = null, Nullable&lt;int&gt; numLeaves = null, Nullable&lt;int&gt; minDataPerLeaf = null, Nullable&lt;double&gt; learningRate = null, int numBoostRound = 100, Action&lt;Microsoft.ML.Runtime.LightGBM.LightGbmArguments&gt; advancedSettings = null, Action&lt;Microsoft.ML.Runtime.LightGBM.LightGbmRegressionPredictor&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; LightGbm(class Microsoft.ML.RegressionContext/RegressionTrainers ctx, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, valuetype System.Nullable`1&lt;int32&gt; numLeaves, valuetype System.Nullable`1&lt;int32&gt; minDataPerLeaf, valuetype System.Nullable`1&lt;float64&gt; learningRate, int32 numBoostRound, class System.Action`1&lt;class Microsoft.ML.Runtime.LightGBM.LightGbmArguments&gt; advancedSettings, class System.Action`1&lt;class Microsoft.ML.Runtime.LightGBM.LightGbmRegressionPredictor&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.LightGbmTrainers.LightGbm(Microsoft.ML.RegressionContext.RegressionTrainers,Microsoft.ML.StaticPipe.Scalar{System.Single},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double},System.Int32,System.Action{Microsoft.ML.Runtime.LightGBM.LightGbmArguments},System.Action{Microsoft.ML.Runtime.LightGBM.LightGbmRegressionPredictor})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LightGbm (ctx As RegressionContext.RegressionTrainers, label As Scalar(Of Single), features As Vector(Of Single), Optional weights As Scalar(Of Single) = null, Optional numLeaves As Nullable(Of Integer) = null, Optional minDataPerLeaf As Nullable(Of Integer) = null, Optional learningRate As Nullable(Of Double) = null, Optional numBoostRound As Integer = 100, Optional advancedSettings As Action(Of LightGbmArguments) = null, Optional onFit As Action(Of LightGbmRegressionPredictor) = null) As Scalar(Of Single)" />
      <MemberSignature Language="F#" Value="static member LightGbm : Microsoft.ML.RegressionContext.RegressionTrainers * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;double&gt; * int * Action&lt;Microsoft.ML.Runtime.LightGBM.LightGbmArguments&gt; * Action&lt;Microsoft.ML.Runtime.LightGBM.LightGbmRegressionPredictor&gt; -&gt; Microsoft.ML.StaticPipe.Scalar&lt;single&gt;" Usage="Microsoft.ML.StaticPipe.LightGbmTrainers.LightGbm (ctx, label, features, weights, numLeaves, minDataPerLeaf, learningRate, numBoostRound, advancedSettings, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGBM</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.RegressionContext+RegressionTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="numLeaves" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="minDataPerLeaf" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="learningRate" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="numBoostRound" Type="System.Int32" />
        <Parameter Name="advancedSettings" Type="System.Action&lt;Microsoft.ML.Runtime.LightGBM.LightGbmArguments&gt;" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Runtime.LightGBM.LightGbmRegressionPredictor&gt;" />
      </Parameters>
      <Docs>
        <param name="ctx">The <see cref="T:Microsoft.ML.RegressionContext" />.</param>
        <param name="label">The label column.</param>
        <param name="features">The features column.</param>
        <param name="weights">The weights column.</param>
        <param name="numLeaves">The number of leaves to use.</param>
        <param name="minDataPerLeaf">The minimal number of documents allowed in a leaf of the tree, out of the subsampled data.</param>
        <param name="learningRate">The learning rate.</param>
        <param name="numBoostRound">Number of iterations.</param>
        <param name="advancedSettings">Algorithm advanced settings.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained. Note that this action cannot change the result in any way;
            it is only a way for the caller to be informed about what was learnt.</param>
        <summary>
            Predict a target using a tree regression model trained with the <see cref="T:Microsoft.ML.Runtime.LightGBM.LightGbmRegressorTrainer" />.
            </summary>
        <returns>The Score output column indicating the predicted value.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[SDCA](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Static/LightGBM.cs?range=6-10,18-74 "LightGbm regression example.")]
            ]]></format>
        </example>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[LightGBM](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Static/LightGBMRegression.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="LightGbm&lt;TVal&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.StaticPipe.Vector&lt;float&gt;,Microsoft.ML.StaticPipe.Key&lt;uint,TVal&gt;&gt; LightGbm&lt;TVal&gt; (this Microsoft.ML.MulticlassClassificationContext.MulticlassClassificationTrainers ctx, Microsoft.ML.StaticPipe.Key&lt;uint,TVal&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights = null, Nullable&lt;int&gt; numLeaves = null, Nullable&lt;int&gt; minDataPerLeaf = null, Nullable&lt;double&gt; learningRate = null, int numBoostRound = 100, Action&lt;Microsoft.ML.Runtime.LightGBM.LightGbmArguments&gt; advancedSettings = null, Action&lt;Microsoft.ML.Trainers.OvaPredictor&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, !!TVal&gt;&gt; LightGbm&lt;TVal&gt;(class Microsoft.ML.MulticlassClassificationContext/MulticlassClassificationTrainers ctx, class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, !!TVal&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, valuetype System.Nullable`1&lt;int32&gt; numLeaves, valuetype System.Nullable`1&lt;int32&gt; minDataPerLeaf, valuetype System.Nullable`1&lt;float64&gt; learningRate, int32 numBoostRound, class System.Action`1&lt;class Microsoft.ML.Runtime.LightGBM.LightGbmArguments&gt; advancedSettings, class System.Action`1&lt;class Microsoft.ML.Trainers.OvaPredictor&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.LightGbmTrainers.LightGbm``1(Microsoft.ML.MulticlassClassificationContext.MulticlassClassificationTrainers,Microsoft.ML.StaticPipe.Key{System.UInt32,``0},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double},System.Int32,System.Action{Microsoft.ML.Runtime.LightGBM.LightGbmArguments},System.Action{Microsoft.ML.Trainers.OvaPredictor})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LightGbm(Of TVal) (ctx As MulticlassClassificationContext.MulticlassClassificationTrainers, label As Key(Of UInteger, TVal), features As Vector(Of Single), Optional weights As Scalar(Of Single) = null, Optional numLeaves As Nullable(Of Integer) = null, Optional minDataPerLeaf As Nullable(Of Integer) = null, Optional learningRate As Nullable(Of Double) = null, Optional numBoostRound As Integer = 100, Optional advancedSettings As Action(Of LightGbmArguments) = null, Optional onFit As Action(Of OvaPredictor) = null) As ValueTuple(Of Vector(Of Single), Key(Of UInteger, TVal))" />
      <MemberSignature Language="F#" Value="static member LightGbm : Microsoft.ML.MulticlassClassificationContext.MulticlassClassificationTrainers * Microsoft.ML.StaticPipe.Key&lt;uint32, 'Val&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;double&gt; * int * Action&lt;Microsoft.ML.Runtime.LightGBM.LightGbmArguments&gt; * Action&lt;Microsoft.ML.Trainers.OvaPredictor&gt; -&gt; ValueTuple&lt;Microsoft.ML.StaticPipe.Vector&lt;single&gt;, Microsoft.ML.StaticPipe.Key&lt;uint32, 'Val&gt;&gt;" Usage="Microsoft.ML.StaticPipe.LightGbmTrainers.LightGbm (ctx, label, features, weights, numLeaves, minDataPerLeaf, learningRate, numBoostRound, advancedSettings, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGBM</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Key&lt;System.UInt32,TVal&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "predictedLabel" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TVal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.MulticlassClassificationContext+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Key&lt;System.UInt32,TVal&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="numLeaves" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="minDataPerLeaf" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="learningRate" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="numBoostRound" Type="System.Int32" />
        <Parameter Name="advancedSettings" Type="System.Action&lt;Microsoft.ML.Runtime.LightGBM.LightGbmArguments&gt;" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Trainers.OvaPredictor&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TVal">To be added.</typeparam>
        <param name="ctx">The multiclass classification context trainer object.</param>
        <param name="label">The label, or dependent variable.</param>
        <param name="features">The features, or independent variables.</param>
        <param name="weights">The weights column.</param>
        <param name="numLeaves">The number of leaves to use.</param>
        <param name="minDataPerLeaf">The minimal number of documents allowed in a leaf of the tree, out of the subsampled data.</param>
        <param name="learningRate">The learning rate.</param>
        <param name="numBoostRound">Number of iterations.</param>
        <param name="advancedSettings">A delegate to set more settings.
            The settings here will override the ones provided in the direct method signature,
            if both are present and have different values.
            The columns names, however need to be provided directly, not through the <paramref name="advancedSettings" />.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained. Note that this action cannot change the
            result in any way; it is only a way for the caller to be informed about what was learnt.</param>
        <summary>
            Predict a target using a tree multiclass classification model trained with the <see cref="T:Microsoft.ML.Runtime.LightGBM.LightGbmMulticlassTrainer" />.
            </summary>
        <returns>The set of output columns including in order the predicted per-class likelihoods (between 0 and 1, and summing up to 1), and the predicted label.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LightGbm&lt;TVal&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.StaticPipe.Scalar&lt;float&gt; LightGbm&lt;TVal&gt; (this Microsoft.ML.RankingContext.RankingTrainers ctx, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.StaticPipe.Key&lt;uint,TVal&gt; groupId, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights = null, Nullable&lt;int&gt; numLeaves = null, Nullable&lt;int&gt; minDataPerLeaf = null, Nullable&lt;double&gt; learningRate = null, int numBoostRound = 100, Action&lt;Microsoft.ML.Runtime.LightGBM.LightGbmArguments&gt; advancedSettings = null, Action&lt;Microsoft.ML.Runtime.LightGBM.LightGbmRankingPredictor&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; LightGbm&lt;TVal&gt;(class Microsoft.ML.RankingContext/RankingTrainers ctx, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.StaticPipe.Key`2&lt;unsigned int32, !!TVal&gt; groupId, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, valuetype System.Nullable`1&lt;int32&gt; numLeaves, valuetype System.Nullable`1&lt;int32&gt; minDataPerLeaf, valuetype System.Nullable`1&lt;float64&gt; learningRate, int32 numBoostRound, class System.Action`1&lt;class Microsoft.ML.Runtime.LightGBM.LightGbmArguments&gt; advancedSettings, class System.Action`1&lt;class Microsoft.ML.Runtime.LightGBM.LightGbmRankingPredictor&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.LightGbmTrainers.LightGbm``1(Microsoft.ML.RankingContext.RankingTrainers,Microsoft.ML.StaticPipe.Scalar{System.Single},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Key{System.UInt32,``0},Microsoft.ML.StaticPipe.Scalar{System.Single},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double},System.Int32,System.Action{Microsoft.ML.Runtime.LightGBM.LightGbmArguments},System.Action{Microsoft.ML.Runtime.LightGBM.LightGbmRankingPredictor})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LightGbm(Of TVal) (ctx As RankingContext.RankingTrainers, label As Scalar(Of Single), features As Vector(Of Single), groupId As Key(Of UInteger, TVal), Optional weights As Scalar(Of Single) = null, Optional numLeaves As Nullable(Of Integer) = null, Optional minDataPerLeaf As Nullable(Of Integer) = null, Optional learningRate As Nullable(Of Double) = null, Optional numBoostRound As Integer = 100, Optional advancedSettings As Action(Of LightGbmArguments) = null, Optional onFit As Action(Of LightGbmRankingPredictor) = null) As Scalar(Of Single)" />
      <MemberSignature Language="F#" Value="static member LightGbm : Microsoft.ML.RankingContext.RankingTrainers * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.Key&lt;uint32, 'Val&gt; * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;double&gt; * int * Action&lt;Microsoft.ML.Runtime.LightGBM.LightGbmArguments&gt; * Action&lt;Microsoft.ML.Runtime.LightGBM.LightGbmRankingPredictor&gt; -&gt; Microsoft.ML.StaticPipe.Scalar&lt;single&gt;" Usage="Microsoft.ML.StaticPipe.LightGbmTrainers.LightGbm (ctx, label, features, groupId, weights, numLeaves, minDataPerLeaf, learningRate, numBoostRound, advancedSettings, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGBM</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TVal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.RankingContext+RankingTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="groupId" Type="Microsoft.ML.StaticPipe.Key&lt;System.UInt32,TVal&gt;" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="numLeaves" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="minDataPerLeaf" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="learningRate" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="numBoostRound" Type="System.Int32" />
        <Parameter Name="advancedSettings" Type="System.Action&lt;Microsoft.ML.Runtime.LightGBM.LightGbmArguments&gt;" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Runtime.LightGBM.LightGbmRankingPredictor&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TVal">To be added.</typeparam>
        <param name="ctx">The <see cref="T:Microsoft.ML.RankingContext" />.</param>
        <param name="label">The label column.</param>
        <param name="features">The features column.</param>
        <param name="groupId">The groupId column.</param>
        <param name="weights">The weights column.</param>
        <param name="numLeaves">The number of leaves to use.</param>
        <param name="minDataPerLeaf">The minimal number of documents allowed in a leaf of the tree, out of the subsampled data.</param>
        <param name="learningRate">The learning rate.</param>
        <param name="numBoostRound">Number of iterations.</param>
        <param name="advancedSettings">Algorithm advanced settings.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained. Note that this action cannot change the result in any way;
            it is only a way for the caller to be informed about what was learnt.</param>
        <summary>
            Ranks a series of inputs based on their relevance, training a decision tree ranking model through the <see cref="T:Microsoft.ML.Runtime.LightGBM.LightGbmRankingTrainer" />.
            </summary>
        <returns>The set of output columns including in order the predicted binary classification score (which will range
            from negative to positive infinity), the calibrated prediction (from 0 to 1), and the predicted label.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>