<Type Name="NormalizerStaticExtensions+OnFitBinned&lt;TData&gt;" FullName="Microsoft.ML.StaticPipe.NormalizerStaticExtensions+OnFitBinned&lt;TData&gt;">
  <TypeSignature Language="C#" Value="public delegate void NormalizerStaticExtensions.OnFitBinned&lt;TData&gt;(ImmutableArray&lt;TData&gt; upperBounds);" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed NormalizerStaticExtensions/OnFitBinned`1&lt;TData&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.StaticPipe.NormalizerStaticExtensions.OnFitBinned`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub NormalizerStaticExtensions.OnFitBinned(Of TData)(upperBounds As ImmutableArray(Of TData))" />
  <TypeSignature Language="F#" Value="type NormalizerStaticExtensions.OnFitBinned&lt;'Data&gt; = delegate of ImmutableArray&lt;'Data&gt; -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TData" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="upperBounds" Type="System.Collections.Immutable.ImmutableArray&lt;TData&gt;" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="TData">The data type being received, either a numeric type, or a sequence of the numeric type</typeparam>
    <param name="upperBounds">For a scalar column a single sequence of the bin upper bounds. For a vector, the same, but
            for all slots.</param>
    <summary>
            For user provided delegates to receive information when a binning normalizer is fitted.
            The function fo the normalizer transformer is, given a value, find its index in the upper bounds, then divide that value
            by the number of upper bounds minus 1, so as to scale the index between 0 and 1. Then, if zero had been fixed, subtract
            off the value that would have been computed by the above procedure for the value zero.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>