<Type Name="DataLoader&lt;TIn,TShape&gt;" FullName="Microsoft.ML.StaticPipe.DataLoader&lt;TIn,TShape&gt;">
  <TypeSignature Language="C#" Value="public sealed class DataLoader&lt;TIn,TShape&gt; : Microsoft.ML.StaticPipe.SchemaBearing&lt;TShape&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataLoader`2&lt;TIn, TShape&gt; extends Microsoft.ML.StaticPipe.SchemaBearing`1&lt;!TShape&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.StaticPipe.DataLoader`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataLoader(Of TIn, TShape)&#xA;Inherits SchemaBearing(Of TShape)" />
  <TypeSignature Language="F#" Value="type DataLoader&lt;'In, 'Shape&gt; = class&#xA;    inherit SchemaBearing&lt;'Shape&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TIn" />
    <TypeParameter Name="TShape" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.StaticPipe.SchemaBearing&lt;TShape&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TShape">TShape</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TIn">To be added.</typeparam>
    <typeparam name="TShape">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Append&lt;TNewOut,TTrans&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.ML.StaticPipe.DataLoaderEstimator&lt;TIn,TNewOut,Microsoft.ML.IDataLoader&lt;TIn&gt;&gt; Append&lt;TNewOut,TTrans&gt; (Microsoft.ML.StaticPipe.Estimator&lt;TShape,TNewOut,TTrans&gt; estimator) where TTrans : class, Microsoft.ML.ITransformer;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.StaticPipe.DataLoaderEstimator`3&lt;!TIn, !!TNewOut, class Microsoft.ML.IDataLoader`1&lt;!TIn&gt;&gt; Append&lt;TNewOut, class (class Microsoft.ML.ITransformer) TTrans&gt;(class Microsoft.ML.StaticPipe.Estimator`3&lt;!TShape, !!TNewOut, !!TTrans&gt; estimator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.DataLoader`2.Append``2(Microsoft.ML.StaticPipe.Estimator{`1,``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Append(Of TNewOut, TTrans) (estimator As Estimator(Of TShape, TNewOut, TTrans)) As DataLoaderEstimator(Of TIn, TNewOut, IDataLoader(Of TIn))" />
      <MemberSignature Language="F#" Value="member this.Append : Microsoft.ML.StaticPipe.Estimator&lt;'Shape, 'NewOut, 'rans (requires 'rans : null and 'rans :&gt; Microsoft.ML.ITransformer)&gt; -&gt; Microsoft.ML.StaticPipe.DataLoaderEstimator&lt;'In, 'NewOut, Microsoft.ML.IDataLoader&lt;'In&gt;&gt; (requires 'rans : null and 'rans :&gt; Microsoft.ML.ITransformer)" Usage="dataLoader.Append estimator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.DataLoaderEstimator&lt;TIn,TNewOut,Microsoft.ML.IDataLoader&lt;TIn&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewOut" />
        <TypeParameter Name="TTrans">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.ML.ITransformer</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="estimator" Type="Microsoft.ML.StaticPipe.Estimator&lt;TShape,TNewOut,TTrans&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TNewOut">To be added.</typeparam>
        <typeparam name="TTrans">To be added.</typeparam>
        <param name="estimator">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append&lt;TNewShape,TTransformer&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.ML.StaticPipe.DataLoader&lt;TIn,TNewShape&gt; Append&lt;TNewShape,TTransformer&gt; (Microsoft.ML.StaticPipe.Transformer&lt;TShape,TNewShape,TTransformer&gt; transformer) where TTransformer : class, Microsoft.ML.ITransformer;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.StaticPipe.DataLoader`2&lt;!TIn, !!TNewShape&gt; Append&lt;TNewShape, class (class Microsoft.ML.ITransformer) TTransformer&gt;(class Microsoft.ML.StaticPipe.Transformer`3&lt;!TShape, !!TNewShape, !!TTransformer&gt; transformer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.DataLoader`2.Append``2(Microsoft.ML.StaticPipe.Transformer{`1,``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Append(Of TNewShape, TTransformer) (transformer As Transformer(Of TShape, TNewShape, TTransformer)) As DataLoader(Of TIn, TNewShape)" />
      <MemberSignature Language="F#" Value="member this.Append : Microsoft.ML.StaticPipe.Transformer&lt;'Shape, 'NewShape, 'ransformer (requires 'ransformer : null and 'ransformer :&gt; Microsoft.ML.ITransformer)&gt; -&gt; Microsoft.ML.StaticPipe.DataLoader&lt;'In, 'NewShape&gt; (requires 'ransformer : null and 'ransformer :&gt; Microsoft.ML.ITransformer)" Usage="dataLoader.Append transformer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.DataLoader&lt;TIn,TNewShape&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewShape" />
        <TypeParameter Name="TTransformer">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.ML.ITransformer</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="transformer" Type="Microsoft.ML.StaticPipe.Transformer&lt;TShape,TNewShape,TTransformer&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TNewShape">To be added.</typeparam>
        <typeparam name="TTransformer">To be added.</typeparam>
        <param name="transformer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsDynamic">
      <MemberSignature Language="C#" Value="public Microsoft.ML.IDataLoader&lt;TIn&gt; AsDynamic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.IDataLoader`1&lt;!TIn&gt; AsDynamic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.StaticPipe.DataLoader`2.AsDynamic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsDynamic As IDataLoader(Of TIn)" />
      <MemberSignature Language="F#" Value="member this.AsDynamic : Microsoft.ML.IDataLoader&lt;'In&gt;" Usage="Microsoft.ML.StaticPipe.DataLoader&lt;'In, 'Shape&gt;.AsDynamic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.IDataLoader&lt;TIn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public Microsoft.ML.StaticPipe.DataView&lt;TShape&gt; Load (TIn input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.StaticPipe.DataView`1&lt;!TShape&gt; Load(!TIn input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.DataLoader`2.Load(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Load (input As TIn) As DataView(Of TShape)" />
      <MemberSignature Language="F#" Value="member this.Load : 'In -&gt; Microsoft.ML.StaticPipe.DataView&lt;'Shape&gt;" Usage="dataLoader.Load input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.DataView&lt;TShape&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="TIn" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>