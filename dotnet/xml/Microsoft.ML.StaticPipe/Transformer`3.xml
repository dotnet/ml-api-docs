<Type Name="Transformer&lt;TInShape,TOutShape,TTransformer&gt;" FullName="Microsoft.ML.StaticPipe.Transformer&lt;TInShape,TOutShape,TTransformer&gt;">
  <TypeSignature Language="C#" Value="public sealed class Transformer&lt;TInShape,TOutShape,TTransformer&gt; : Microsoft.ML.StaticPipe.SchemaBearing&lt;TOutShape&gt; where TTransformer : class, ITransformer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Transformer`3&lt;TInShape, TOutShape, class (class Microsoft.ML.ITransformer) TTransformer&gt; extends Microsoft.ML.StaticPipe.SchemaBearing`1&lt;!TOutShape&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.StaticPipe.Transformer`3" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Transformer(Of TInShape, TOutShape, TTransformer)&#xA;Inherits SchemaBearing(Of TOutShape)" />
  <TypeSignature Language="F#" Value="type Transformer&lt;'InShape, 'OutShape, 'ransformer (requires 'ransformer : null and 'ransformer :&gt; ITransformer)&gt; = class&#xA;    inherit SchemaBearing&lt;'OutShape&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInShape" />
    <TypeParameter Name="TOutShape" />
    <TypeParameter Name="TTransformer">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
        <InterfaceName>Microsoft.ML.ITransformer</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.StaticPipe.SchemaBearing&lt;TOutShape&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TShape">TOutShape</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TInShape">To be added.</typeparam>
    <typeparam name="TOutShape">To be added.</typeparam>
    <typeparam name="TTransformer">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Append&lt;TNewOutShape,TNewTransformer&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.ML.StaticPipe.Transformer&lt;TInShape,TNewOutShape,Microsoft.ML.Data.TransformerChain&lt;TNewTransformer&gt;&gt; Append&lt;TNewOutShape,TNewTransformer&gt; (Microsoft.ML.StaticPipe.Transformer&lt;TOutShape,TNewOutShape,TNewTransformer&gt; transformer) where TNewTransformer : class, Microsoft.ML.ITransformer;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.StaticPipe.Transformer`3&lt;!TInShape, !!TNewOutShape, class Microsoft.ML.Data.TransformerChain`1&lt;!!TNewTransformer&gt;&gt; Append&lt;TNewOutShape, class (class Microsoft.ML.ITransformer) TNewTransformer&gt;(class Microsoft.ML.StaticPipe.Transformer`3&lt;!TOutShape, !!TNewOutShape, !!TNewTransformer&gt; transformer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.Transformer`3.Append``2(Microsoft.ML.StaticPipe.Transformer{`1,``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Append(Of TNewOutShape, TNewTransformer) (transformer As Transformer(Of TOutShape, TNewOutShape, TNewTransformer)) As Transformer(Of TInShape, TNewOutShape, TransformerChain(Of TNewTransformer))" />
      <MemberSignature Language="F#" Value="member this.Append : Microsoft.ML.StaticPipe.Transformer&lt;'OutShape, 'NewOutShape, 'NewTransformer (requires 'NewTransformer : null and 'NewTransformer :&gt; Microsoft.ML.ITransformer)&gt; -&gt; Microsoft.ML.StaticPipe.Transformer&lt;'InShape, 'NewOutShape, Microsoft.ML.Data.TransformerChain&lt;'NewTransformer&gt;&gt; (requires 'NewTransformer : null and 'NewTransformer :&gt; Microsoft.ML.ITransformer)" Usage="transformer.Append transformer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.Transformer&lt;TInShape,TNewOutShape,Microsoft.ML.Data.TransformerChain&lt;TNewTransformer&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewOutShape" />
        <TypeParameter Name="TNewTransformer">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.ML.ITransformer</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="transformer" Type="Microsoft.ML.StaticPipe.Transformer&lt;TOutShape,TNewOutShape,TNewTransformer&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TNewOutShape">To be added.</typeparam>
        <typeparam name="TNewTransformer">To be added.</typeparam>
        <param name="transformer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsDynamic">
      <MemberSignature Language="C#" Value="public TTransformer AsDynamic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TTransformer AsDynamic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.StaticPipe.Transformer`3.AsDynamic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsDynamic As TTransformer" />
      <MemberSignature Language="F#" Value="member this.AsDynamic : 'ransformer" Usage="Microsoft.ML.StaticPipe.Transformer&lt;'InShape, 'OutShape, 'ransformer (requires 'ransformer : null and 'ransformer :&gt; Microsoft.ML.ITransformer)&gt;.AsDynamic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TTransformer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public Microsoft.ML.StaticPipe.DataView&lt;TOutShape&gt; Transform (Microsoft.ML.StaticPipe.DataView&lt;TInShape&gt; input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.StaticPipe.DataView`1&lt;!TOutShape&gt; Transform(class Microsoft.ML.StaticPipe.DataView`1&lt;!TInShape&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StaticPipe.Transformer`3.Transform(Microsoft.ML.StaticPipe.DataView{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As DataView(Of TInShape)) As DataView(Of TOutShape)" />
      <MemberSignature Language="F#" Value="member this.Transform : Microsoft.ML.StaticPipe.DataView&lt;'InShape&gt; -&gt; Microsoft.ML.StaticPipe.DataView&lt;'OutShape&gt;" Usage="transformer.Transform input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StaticPipe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.StaticPipe.DataView&lt;TOutShape&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.StaticPipe.DataView&lt;TInShape&gt;" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>