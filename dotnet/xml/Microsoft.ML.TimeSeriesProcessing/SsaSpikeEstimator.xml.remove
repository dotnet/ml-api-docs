<Type Name="SsaSpikeEstimator" FullName="Microsoft.ML.TimeSeriesProcessing.SsaSpikeEstimator">
  <TypeSignature Language="C#" Value="public sealed class SsaSpikeEstimator : Microsoft.ML.Core.Data.IEstimator&lt;Microsoft.ML.TimeSeriesProcessing.SsaSpikeDetector&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SsaSpikeEstimator extends System.Object implements class Microsoft.ML.Core.Data.IEstimator`1&lt;class Microsoft.ML.TimeSeriesProcessing.SsaSpikeDetector&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.TimeSeriesProcessing.SsaSpikeEstimator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SsaSpikeEstimator&#xA;Implements IEstimator(Of SsaSpikeDetector)" />
  <TypeSignature Language="F#" Value="type SsaSpikeEstimator = class&#xA;    interface IEstimator&lt;SsaSpikeDetector&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Core.Data.IEstimator&lt;Microsoft.ML.TimeSeriesProcessing.SsaSpikeDetector&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Estimator for <see cref="T:Microsoft.ML.TimeSeriesProcessing.SsaSpikeDetector" /></summary>
    <remarks>To be added.</remarks>
    <p>Example code can be found by searching for <i>SsaSpikeDetector</i> in <a href="https://github.com/dotnet/machinelearning">ML.NET.</a></p>
    <example>
      <format type="text/markdown"><![CDATA[
            [!code-csharp[MF](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/SsaSpikeDetectorTransform.cs)]
            ]]></format>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SsaSpikeEstimator (Microsoft.ML.IHostEnvironment env, Microsoft.ML.TimeSeriesProcessing.SsaSpikeDetector.Arguments args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.TimeSeriesProcessing.SsaSpikeDetector/Arguments args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TimeSeriesProcessing.SsaSpikeEstimator.#ctor(Microsoft.ML.IHostEnvironment,Microsoft.ML.TimeSeriesProcessing.SsaSpikeDetector.Arguments)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, args As SsaSpikeDetector.Arguments)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.TimeSeriesProcessing.SsaSpikeEstimator : Microsoft.ML.IHostEnvironment * Microsoft.ML.TimeSeriesProcessing.SsaSpikeDetector.Arguments -&gt; Microsoft.ML.TimeSeriesProcessing.SsaSpikeEstimator" Usage="new Microsoft.ML.TimeSeriesProcessing.SsaSpikeEstimator (env, args)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="args" Type="Microsoft.ML.TimeSeriesProcessing.SsaSpikeDetector+Arguments" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SsaSpikeEstimator (Microsoft.ML.IHostEnvironment env, string outputColumnName, int confidence, int pvalueHistoryLength, int trainingWindowSize, int seasonalityWindowSize, string inputColumnName = null, Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;float,Microsoft.ML.TimeSeriesProcessing.SsaAnomalyDetectionBase.State&gt;.AnomalySide side = Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;System.Single,Microsoft.ML.TimeSeriesProcessing.SsaAnomalyDetectionBase+State&gt;+AnomalySide.TwoSided, Microsoft.ML.TimeSeriesProcessing.ErrorFunctionUtils.ErrorFunction errorFunction = Microsoft.ML.TimeSeriesProcessing.ErrorFunctionUtils+ErrorFunction.SignedDifference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, string outputColumnName, int32 confidence, int32 pvalueHistoryLength, int32 trainingWindowSize, int32 seasonalityWindowSize, string inputColumnName, valuetype Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2/AnomalySide&lt;float32, class Microsoft.ML.TimeSeriesProcessing.SsaAnomalyDetectionBase/State&gt; side, valuetype Microsoft.ML.TimeSeriesProcessing.ErrorFunctionUtils/ErrorFunction errorFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TimeSeriesProcessing.SsaSpikeEstimator.#ctor(Microsoft.ML.IHostEnvironment,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.AnomalySide{System.Single,Microsoft.ML.TimeSeriesProcessing.SsaAnomalyDetectionBase.State},Microsoft.ML.TimeSeriesProcessing.ErrorFunctionUtils.ErrorFunction)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.TimeSeriesProcessing.SsaSpikeEstimator : Microsoft.ML.IHostEnvironment * string * int * int * int * int * string * Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;single, Microsoft.ML.TimeSeriesProcessing.SsaAnomalyDetectionBase.State&gt;.AnomalySide * Microsoft.ML.TimeSeriesProcessing.ErrorFunctionUtils.ErrorFunction -&gt; Microsoft.ML.TimeSeriesProcessing.SsaSpikeEstimator" Usage="new Microsoft.ML.TimeSeriesProcessing.SsaSpikeEstimator (env, outputColumnName, confidence, pvalueHistoryLength, trainingWindowSize, seasonalityWindowSize, inputColumnName, side, errorFunction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="confidence" Type="System.Int32" />
        <Parameter Name="pvalueHistoryLength" Type="System.Int32" />
        <Parameter Name="trainingWindowSize" Type="System.Int32" />
        <Parameter Name="seasonalityWindowSize" Type="System.Int32" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="side" Type="Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;System.Single,Microsoft.ML.TimeSeriesProcessing.SsaAnomalyDetectionBase+State&gt;+AnomalySide" />
        <Parameter Name="errorFunction" Type="Microsoft.ML.TimeSeriesProcessing.ErrorFunctionUtils+ErrorFunction" />
      </Parameters>
      <Docs>
        <param name="env">Host Environment.</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="confidence">The confidence for spike detection in the range [0, 100].</param>
        <param name="pvalueHistoryLength">The size of the sliding window for computing the p-value.</param>
        <param name="trainingWindowSize">The number of points from the beginning of the sequence used for training.</param>
        <param name="seasonalityWindowSize">An upper bound on the largest relevant seasonality in the input time-series.</param>
        <param name="inputColumnName">Name of column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.
            The vector contains Alert, Raw Score, P-Value as first three values.</param>
        <param name="side">The argument that determines whether to detect positive or negative anomalies, or both.</param>
        <param name="errorFunction">The function used to compute the error between the expected and the observed value.</param>
        <summary>
            Create a new instance of <see cref="T:Microsoft.ML.TimeSeriesProcessing.SsaSpikeEstimator" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fit">
      <MemberSignature Language="C#" Value="public Microsoft.ML.TimeSeriesProcessing.SsaSpikeDetector Fit (Microsoft.Data.DataView.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.TimeSeriesProcessing.SsaSpikeDetector Fit(class Microsoft.Data.DataView.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TimeSeriesProcessing.SsaSpikeEstimator.Fit(Microsoft.Data.DataView.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fit (input As IDataView) As SsaSpikeDetector" />
      <MemberSignature Language="F#" Value="abstract member Fit : Microsoft.Data.DataView.IDataView -&gt; Microsoft.ML.TimeSeriesProcessing.SsaSpikeDetector&#xA;override this.Fit : Microsoft.Data.DataView.IDataView -&gt; Microsoft.ML.TimeSeriesProcessing.SsaSpikeDetector" Usage="ssaSpikeEstimator.Fit input" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IEstimator`1.Fit(Microsoft.Data.DataView.IDataView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TimeSeriesProcessing.SsaSpikeDetector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.Data.DataView.IDataView" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Core.Data.SchemaShape GetOutputSchema (Microsoft.ML.Core.Data.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Core.Data.SchemaShape GetOutputSchema(class Microsoft.ML.Core.Data.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TimeSeriesProcessing.SsaSpikeEstimator.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutputSchema (inputSchema As SchemaShape) As SchemaShape" />
      <MemberSignature Language="F#" Value="abstract member GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape&#xA;override this.GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape" Usage="ssaSpikeEstimator.GetOutputSchema inputSchema" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IEstimator`1.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Core.Data.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
