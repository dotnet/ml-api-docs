<Type Name="SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;+ArgumentsBase" FullName="Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;+ArgumentsBase">
  <TypeSignature Language="C#" Value="public abstract class SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;.ArgumentsBase where TState : SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;.AnomalyDetectionStateBasenew()" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi abstract beforefieldinit SequentialAnomalyDetectionTransformBase`2/ArgumentsBase&lt;TInput, .ctor (class Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2/AnomalyDetectionStateBase&lt;!TInput, !TState&gt;) TState&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.ArgumentsBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SequentialAnomalyDetectionTransformBase(Of TInput, TState).ArgumentsBase" />
  <TypeSignature Language="F#" Value="type SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.ArgumentsBase = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput" />
    <TypeParameter Name="TState">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;+AnomalyDetectionStateBase</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The base class that can be inherited by the 'Argument' classes in the derived classes containing the shared input parameters.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ArgumentsBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.ArgumentsBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlertOn">
      <MemberSignature Language="C#" Value="public Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;.AlertingScore AlertOn;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2/AlertingScore&lt;!TInput, !TState&gt; AlertOn" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.ArgumentsBase.AlertOn" />
      <MemberSignature Language="VB.NET" Value="Public AlertOn As SequentialAnomalyDetectionTransformBase(Of TInput, TState).AlertingScore " />
      <MemberSignature Language="F#" Value="val mutable AlertOn : Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.AlertingScore" Usage="Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.ArgumentsBase.AlertOn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="The argument that determines whether anomalies should be detected based on the raw anomaly score, the p-value or the martingale score", ShortName="alert", SortOrder=7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;+AlertingScore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlertThreshold">
      <MemberSignature Language="C#" Value="public double AlertThreshold;" />
      <MemberSignature Language="ILAsm" Value=".field public float64 AlertThreshold" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.ArgumentsBase.AlertThreshold" />
      <MemberSignature Language="VB.NET" Value="Public AlertThreshold As Double " />
      <MemberSignature Language="F#" Value="val mutable AlertThreshold : double" Usage="Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.ArgumentsBase.AlertThreshold" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.Required, HelpText="The threshold for alerting", ShortName="thr", SortOrder=9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialWindowSize">
      <MemberSignature Language="C#" Value="public int InitialWindowSize;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 InitialWindowSize" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.ArgumentsBase.InitialWindowSize" />
      <MemberSignature Language="VB.NET" Value="Public InitialWindowSize As Integer " />
      <MemberSignature Language="F#" Value="val mutable InitialWindowSize : int" Usage="Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.ArgumentsBase.InitialWindowSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="The size of the initial window for computing the p-value as well as training if needed. The default value is set to 0, which means there is no initial window considered.", ShortName="initwnd", SortOrder=5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Martingale">
      <MemberSignature Language="C#" Value="public Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;.MartingaleType Martingale;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2/MartingaleType&lt;!TInput, !TState&gt; Martingale" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.ArgumentsBase.Martingale" />
      <MemberSignature Language="VB.NET" Value="Public Martingale As SequentialAnomalyDetectionTransformBase(Of TInput, TState).MartingaleType " />
      <MemberSignature Language="F#" Value="val mutable Martingale : Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.MartingaleType" Usage="Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.ArgumentsBase.Martingale" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="The martingale used for scoring", ShortName="martingale", SortOrder=6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;+MartingaleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name;" />
      <MemberSignature Language="ILAsm" Value=".field public string Name" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.ArgumentsBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Name As String " />
      <MemberSignature Language="F#" Value="val mutable Name : string" Usage="Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.ArgumentsBase.Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.Required, HelpText="The name of the new column", ShortName="name", SortOrder=2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PowerMartingaleEpsilon">
      <MemberSignature Language="C#" Value="public double PowerMartingaleEpsilon;" />
      <MemberSignature Language="ILAsm" Value=".field public float64 PowerMartingaleEpsilon" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.ArgumentsBase.PowerMartingaleEpsilon" />
      <MemberSignature Language="VB.NET" Value="Public PowerMartingaleEpsilon As Double " />
      <MemberSignature Language="F#" Value="val mutable PowerMartingaleEpsilon : double" Usage="Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.ArgumentsBase.PowerMartingaleEpsilon" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="The epsilon parameter for the Power martingale", ShortName="eps", SortOrder=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Side">
      <MemberSignature Language="C#" Value="public Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;.AnomalySide Side;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2/AnomalySide&lt;!TInput, !TState&gt; Side" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.ArgumentsBase.Side" />
      <MemberSignature Language="VB.NET" Value="Public Side As SequentialAnomalyDetectionTransformBase(Of TInput, TState).AnomalySide " />
      <MemberSignature Language="F#" Value="val mutable Side : Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.AnomalySide" Usage="Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.ArgumentsBase.Side" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="The argument that determines whether to detect positive or negative anomalies, or both", ShortName="side", SortOrder=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;TInput,TState&gt;+AnomalySide</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source;" />
      <MemberSignature Language="ILAsm" Value=".field public string Source" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.ArgumentsBase.Source" />
      <MemberSignature Language="VB.NET" Value="Public Source As String " />
      <MemberSignature Language="F#" Value="val mutable Source : string" Usage="Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.ArgumentsBase.Source" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.Required, HelpText="The name of the source column", Purpose="ColumnName", ShortName="src", SortOrder=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowSize">
      <MemberSignature Language="C#" Value="public int WindowSize;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 WindowSize" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase`2.ArgumentsBase.WindowSize" />
      <MemberSignature Language="VB.NET" Value="Public WindowSize As Integer " />
      <MemberSignature Language="F#" Value="val mutable WindowSize : int" Usage="Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State (requires 'State :&gt; Microsoft.ML.TimeSeriesProcessing.SequentialAnomalyDetectionTransformBase&lt;'Input, 'State&gt;.AnomalyDetectionStateBase and 'State : (new : unit -&gt; 'State))&gt;.ArgumentsBase.WindowSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="The size of the sliding window for computing the p-value.", ShortName="wnd", SortOrder=4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>