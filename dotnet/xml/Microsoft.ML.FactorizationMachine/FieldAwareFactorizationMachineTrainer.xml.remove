<Type Name="FieldAwareFactorizationMachineTrainer" FullName="Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachineTrainer">
  <TypeSignature Language="C#" Value="public sealed class FieldAwareFactorizationMachineTrainer : Microsoft.ML.Training.TrainerBase&lt;Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachineModelParameters&gt;, Microsoft.ML.Core.Data.IEstimator&lt;Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachinePredictionTransformer&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FieldAwareFactorizationMachineTrainer extends Microsoft.ML.Training.TrainerBase`1&lt;class Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachineModelParameters&gt; implements class Microsoft.ML.Core.Data.IEstimator`1&lt;class Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachinePredictionTransformer&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachineTrainer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FieldAwareFactorizationMachineTrainer&#xA;Inherits TrainerBase(Of FieldAwareFactorizationMachineModelParameters)&#xA;Implements IEstimator(Of FieldAwareFactorizationMachinePredictionTransformer)" />
  <TypeSignature Language="F#" Value="type FieldAwareFactorizationMachineTrainer = class&#xA;    inherit TrainerBase&lt;FieldAwareFactorizationMachineModelParameters&gt;&#xA;    interface IEstimator&lt;FieldAwareFactorizationMachinePredictionTransformer&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Training.TrainerBase&lt;Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachineModelParameters&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachineModelParameters</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Core.Data.IEstimator&lt;Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachinePredictionTransformer&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
        Train a field-aware factorization machine for binary classification using ADAGRAD (an advanced stochastic gradient method). 
      </summary>
    <remarks>
        Field Aware Factorization Machines use, in addition to the input variables, factorized parameters to model the interaction between pairs of variables.
        The algorithm is particularly useful for high dimensional datasets which can be very sparse (for example, click-prediction for advertising systems).
        <para>An advantage of FFM over SVMs is that the training data does not need to be stored in memory, and the coefficients can be optimized directly.
          For a general idea of what Field-aware Factorization Machines are see: <a href="https://www.csie.ntu.edu.tw/~r01922136/slides/ffm.pdf">Field Aware Factorization Machines</a></para><para>See references below for more details. 
        This trainer is essentially faster the one introduced in [2] because of some implemtation tricks[3].
        </para><list type="bullet"><item><description><a href="https://www.csie.ntu.edu.tw/~cjlin/papers/ffm.pdf">Field-aware Factorization Machines for CTR Prediction</a></description></item><item><description><a href="http://jmlr.org/papers/volume12/duchi11a/duchi11a.pdf">Adaptive Subgradient Methods for Online Learning and Stochastic Optimization</a></description></item><item><description><a href="https://github.com/wschin/fast-ffm/blob/master/fast-ffm.pdf">An Improved Stochastic Gradient Method for Training Large-scale Field-aware Factorization Machine.</a></description></item></list></remarks>
  </Docs>
  <Members>
    <Member MemberName="Fit">
      <MemberSignature Language="C#" Value="public Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachinePredictionTransformer Fit (Microsoft.Data.DataView.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachinePredictionTransformer Fit(class Microsoft.Data.DataView.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachineTrainer.Fit(Microsoft.Data.DataView.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fit (input As IDataView) As FieldAwareFactorizationMachinePredictionTransformer" />
      <MemberSignature Language="F#" Value="abstract member Fit : Microsoft.Data.DataView.IDataView -&gt; Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachinePredictionTransformer&#xA;override this.Fit : Microsoft.Data.DataView.IDataView -&gt; Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachinePredictionTransformer" Usage="fieldAwareFactorizationMachineTrainer.Fit input" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IEstimator`1.Fit(Microsoft.Data.DataView.IDataView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachinePredictionTransformer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.Data.DataView.IDataView" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Core.Data.SchemaShape GetOutputSchema (Microsoft.ML.Core.Data.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Core.Data.SchemaShape GetOutputSchema(class Microsoft.ML.Core.Data.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachineTrainer.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutputSchema (inputSchema As SchemaShape) As SchemaShape" />
      <MemberSignature Language="F#" Value="abstract member GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape&#xA;override this.GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape" Usage="fieldAwareFactorizationMachineTrainer.GetOutputSchema inputSchema" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IEstimator`1.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Core.Data.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.TrainerInfo Info { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.TrainerInfo Info" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachineTrainer.Info" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Info As TrainerInfo" />
      <MemberSignature Language="F#" Value="member this.Info : Microsoft.ML.TrainerInfo" Usage="Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachineTrainer.Info" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TrainerInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <see cref="T:Microsoft.ML.TrainerInfo" /> containing at least the training data for this trainer.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictionKind">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.PredictionKind PredictionKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.PredictionKind PredictionKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachineTrainer.PredictionKind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PredictionKind As PredictionKind" />
      <MemberSignature Language="F#" Value="member this.PredictionKind : Microsoft.ML.PredictionKind" Usage="Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachineTrainer.PredictionKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.PredictionKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Train">
      <MemberSignature Language="C#" Value="public Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachinePredictionTransformer Train (Microsoft.Data.DataView.IDataView trainData, Microsoft.Data.DataView.IDataView validationData = null, Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachineModelParameters initialPredictor = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachinePredictionTransformer Train(class Microsoft.Data.DataView.IDataView trainData, class Microsoft.Data.DataView.IDataView validationData, class Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachineModelParameters initialPredictor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachineTrainer.Train(Microsoft.Data.DataView.IDataView,Microsoft.Data.DataView.IDataView,Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachineModelParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Function Train (trainData As IDataView, Optional validationData As IDataView = null, Optional initialPredictor As FieldAwareFactorizationMachineModelParameters = null) As FieldAwareFactorizationMachinePredictionTransformer" />
      <MemberSignature Language="F#" Value="override this.Train : Microsoft.Data.DataView.IDataView * Microsoft.Data.DataView.IDataView * Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachineModelParameters -&gt; Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachinePredictionTransformer" Usage="fieldAwareFactorizationMachineTrainer.Train (trainData, validationData, initialPredictor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachinePredictionTransformer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainData" Type="Microsoft.Data.DataView.IDataView" />
        <Parameter Name="validationData" Type="Microsoft.Data.DataView.IDataView" />
        <Parameter Name="initialPredictor" Type="Microsoft.ML.FactorizationMachine.FieldAwareFactorizationMachineModelParameters" />
      </Parameters>
      <Docs>
        <param name="trainData">To be added.</param>
        <param name="validationData">To be added.</param>
        <param name="initialPredictor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
