<Type Name="CpuAlignedVector" FullName="Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector">
  <TypeSignature Language="C#" Value="public sealed class CpuAlignedVector : IDisposable, Microsoft.ML.Runtime.Internal.CpuMath.ICpuBuffer&lt;float&gt;, Microsoft.ML.Runtime.Internal.CpuMath.ICpuVector, System.Collections.Generic.IEnumerable&lt;float&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CpuAlignedVector extends System.Object implements class Microsoft.ML.Runtime.Internal.CpuMath.ICpuBuffer`1&lt;float32&gt;, class Microsoft.ML.Runtime.Internal.CpuMath.ICpuVector, class System.Collections.Generic.IEnumerable`1&lt;float32&gt;, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CpuAlignedVector&#xA;Implements ICpuBuffer(Of Single), ICpuVector, IDisposable, IEnumerable(Of Single)" />
  <TypeSignature Language="F#" Value="type CpuAlignedVector = class&#xA;    interface ICpuVector&#xA;    interface ICpuBuffer&lt;single&gt;&#xA;    interface seq&lt;single&gt;&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Internal.CpuMath.ICpuBuffer&lt;System.Single&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Internal.CpuMath.ICpuVector</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Single&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            This implements a logical array of Floats that is automatically aligned for SSE/AVX operations.
            This is a thin wrapper around the AlignedArray type implemented in C++. This simply couples
            the AlignedArray with a logical size, which does not include padding, while the AlignedArray
            size does include padding.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CpuAlignedVector (int size, int cbAlign);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 size, int32 cbAlign) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (size As Integer, cbAlign As Integer)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector : int * int -&gt; Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector" Usage="new Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector (size, cbAlign)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="cbAlign" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <param name="cbAlign">To be added.</param>
        <summary>
            Allocate an aligned vector with the given alignment (in bytes).
            The alignment must be a power of two and at least sizeof(Float).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CbAlign">
      <MemberSignature Language="C#" Value="public int CbAlign { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CbAlign" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector.CbAlign" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CbAlign As Integer" />
      <MemberSignature Language="F#" Value="member this.CbAlign : int" Usage="Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector.CbAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The alignment.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public void CopyFrom (Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyFrom(class Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector.CopyFrom(Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyFrom (src As CpuAlignedVector)" />
      <MemberSignature Language="F#" Value="member this.CopyFrom : Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector -&gt; unit" Usage="cpuAlignedVector.CopyFrom src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector" />
      </Parameters>
      <Docs>
        <param name="src">The source vector</param>
        <summary>
            Copy the values of src vector into this vector. The src vector must have the same size as this vector.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public void CopyFrom (float[] src, ref int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(float32[] src, int32&amp; index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector.CopyFrom(System.Single[],System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyFrom (src As Single(), ByRef index As Integer)" />
      <MemberSignature Language="F#" Value="abstract member CopyFrom : single[] *  -&gt; unit&#xA;override this.CopyFrom : single[] *  -&gt; unit" Usage="cpuAlignedVector.CopyFrom (src, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Single[]" />
        <Parameter Name="index" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="src">The source array</param>
        <param name="index">The starting index in the source array</param>
        <summary>
            Copy the values from src, starting at slot index and advancing index, into this vector.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public void CopyFrom (int ivDst, float[] src, int ivSrc, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyFrom(int32 ivDst, float32[] src, int32 ivSrc, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector.CopyFrom(System.Int32,System.Single[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyFrom (ivDst As Integer, src As Single(), ivSrc As Integer, count As Integer)" />
      <MemberSignature Language="F#" Value="member this.CopyFrom : int * single[] * int * int -&gt; unit" Usage="cpuAlignedVector.CopyFrom (ivDst, src, ivSrc, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ivDst" Type="System.Int32" />
        <Parameter Name="src" Type="System.Single[]" />
        <Parameter Name="ivSrc" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ivDst">The staring index in this vector</param>
        <param name="src">The source array</param>
        <param name="ivSrc">The starting index in the source array</param>
        <param name="count">The number of elements to be copied</param>
        <summary>
            Copy the values from src, starting at slot index and advancing index, into this vector, starting at slot ivDst.
            The number of values that are copied is determined by count.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (float[] dst, ref int ivDst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(float32[] dst, int32&amp; ivDst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector.CopyTo(System.Single[],System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dst As Single(), ByRef ivDst As Integer)" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : single[] *  -&gt; unit&#xA;override this.CopyTo : single[] *  -&gt; unit" Usage="cpuAlignedVector.CopyTo (dst, ivDst)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="System.Single[]" />
        <Parameter Name="ivDst" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="dst">The destination array</param>
        <param name="ivDst">The starting index in the destination array</param>
        <summary>
            Copy the values into dst, starting at slot ivDst and advancing ivDst.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (int ivSrc, float[] dst, int ivDst, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(int32 ivSrc, float32[] dst, int32 ivDst, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector.CopyTo(System.Int32,System.Single[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (ivSrc As Integer, dst As Single(), ivDst As Integer, count As Integer)" />
      <MemberSignature Language="F#" Value="member this.CopyTo : int * single[] * int * int -&gt; unit" Usage="cpuAlignedVector.CopyTo (ivSrc, dst, ivDst, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ivSrc" Type="System.Int32" />
        <Parameter Name="dst" Type="System.Single[]" />
        <Parameter Name="ivDst" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ivSrc">The staring index in this vector</param>
        <param name="dst">The destination array</param>
        <param name="ivDst">The starting index in the destination array</param>
        <param name="count">The number of elements to be copied</param>
        <summary>
            Copy the values from this vector starting at slot ivSrc into dst, starting at slot ivDst. 
            The number of values that are copied is determined by count.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cpuAlignedVector.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;float&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;float32&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Overridable NotOverridable Function GetEnumerator () As IEnumerator(Of Single)" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;single&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;single&gt;" Usage="cpuAlignedVector.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector/&lt;GetEnumerator&gt;d__25))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get the underlying AlignedArray as IEnumerator&lt;Float&gt;.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public float GetValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (i As Integer) As Single" />
      <MemberSignature Language="F#" Value="abstract member GetValue : int -&gt; single&#xA;override this.GetValue : int -&gt; single" Usage="cpuAlignedVector.GetValue i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.Internal.CpuMath.ICpuVector.GetValue(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">The index</param>
        <summary>
            Get the value of the vector at the given index.
            </summary>
        <returns>The value at the given index</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public float this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Single" />
      <MemberSignature Language="F#" Value="member this.Item(int) : single with get, set" Usage="Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index</param>
        <summary>
            Set and get the value of the vector at the given index.
            </summary>
        <value>The value at the given index</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Internal.CpuMath.AlignedArray Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.Internal.CpuMath.AlignedArray Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As AlignedArray" />
      <MemberSignature Language="F#" Value="member this.Items : Microsoft.ML.Runtime.Internal.CpuMath.AlignedArray" Usage="Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Internal.CpuMath.AlignedArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The physical AligenedArray items. 
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public void Randomize (Func&lt;float&gt; rand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Randomize(class System.Func`1&lt;float32&gt; rand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector.Randomize(System.Func{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize (rand As Func(Of Single))" />
      <MemberSignature Language="F#" Value="abstract member Randomize : Func&lt;single&gt; -&gt; unit&#xA;override this.Randomize : Func&lt;single&gt; -&gt; unit" Usage="cpuAlignedVector.Randomize rand" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.Internal.CpuMath.ICpuBuffer`1.Randomize(System.Func{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rand" Type="System.Func&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="rand">The input rand om function that takes no arguments and returns a float value</param>
        <summary>
            Assign randomized values to the vector elements via the input function.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueCount">
      <MemberSignature Language="C#" Value="public int ValueCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ValueCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector.ValueCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueCount As Integer" />
      <MemberSignature Language="F#" Value="member this.ValueCount : int" Usage="Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector.ValueCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.Internal.CpuMath.ICpuBuffer`1.ValueCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The value count.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorSize">
      <MemberSignature Language="C#" Value="public int VectorSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VectorSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector.VectorSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VectorSize As Integer" />
      <MemberSignature Language="F#" Value="member this.VectorSize : int" Usage="Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector.VectorSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.Runtime.Internal.CpuMath.ICpuVector.VectorSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The logical size of the vector.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public void Zero ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Zero() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.CpuMath.CpuAlignedVector.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Sub Zero ()" />
      <MemberSignature Language="F#" Value="abstract member Zero : unit -&gt; unit&#xA;override this.Zero : unit -&gt; unit" Usage="cpuAlignedVector.Zero " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.Internal.CpuMath.ICpuBuffer`1.Zero</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.CpuMath</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Assign zeros to the vector elements.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
