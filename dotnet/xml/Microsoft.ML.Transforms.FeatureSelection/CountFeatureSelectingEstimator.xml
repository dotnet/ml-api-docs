<Type Name="CountFeatureSelectingEstimator" FullName="Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator">
  <TypeSignature Language="C#" Value="public sealed class CountFeatureSelectingEstimator : Microsoft.ML.Core.Data.IEstimator&lt;Microsoft.ML.Core.Data.ITransformer&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CountFeatureSelectingEstimator extends System.Object implements class Microsoft.ML.Core.Data.IEstimator`1&lt;class Microsoft.ML.Core.Data.ITransformer&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CountFeatureSelectingEstimator&#xA;Implements IEstimator(Of ITransformer)" />
  <TypeSignature Language="F#" Value="type CountFeatureSelectingEstimator = class&#xA;    interface IEstimator&lt;ITransformer&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Core.Data.IEstimator&lt;Microsoft.ML.Core.Data.ITransformer&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
    <member name="CountFeatureSelection">
      <summary>
        Selects the slots for which the count of non-default values is greater than or equal to a threshold.
      </summary>
      <remarks>
        <para>
          This transform uses a set of aggregators to count the number of non-default values for each slot and
          instantiates a <see cref="T:Microsoft.ML.Transforms.FeatureSelection.SlotsDroppingTransformer" /> to actually drop the slots.
          This transform is useful when applied together with a <see cref="T:Microsoft.ML.Transforms.OneHotHashEncodingTransformer" />. 
          The count feature selection can remove those features generated by the hash transform that have no data in the examples.
        </para>
      </remarks>
    </member>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CountFeatureSelectingEstimator (Microsoft.ML.IHostEnvironment env, params Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator.ColumnInfo[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator/ColumnInfo[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator.#ctor(Microsoft.ML.IHostEnvironment,Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator.ColumnInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, ParamArray columns As CountFeatureSelectingEstimator.ColumnInfo())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator : Microsoft.ML.IHostEnvironment * Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator.ColumnInfo[] -&gt; Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator" Usage="new Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator (env, columns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="columns" Type="Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator+ColumnInfo[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="env">The environment to use.</param>
        <param name="columns">Describes the parameters of the feature selection process for each column pair.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <member name="CountFeatureSelection">
          <summary>
        Selects the slots for which the count of non-default values is greater than or equal to a threshold.
      </summary>
          <remarks>
            <para>
          This transform uses a set of aggregators to count the number of non-default values for each slot and
          instantiates a <see cref="T:Microsoft.ML.Transforms.FeatureSelection.SlotsDroppingTransformer" /> to actually drop the slots.
          This transform is useful when applied together with a <see cref="T:Microsoft.ML.Transforms.OneHotHashEncodingTransformer" />. 
          The count feature selection can remove those features generated by the hash transform that have no data in the examples.
        </para>
          </remarks>
        </member>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[CountFeatureSelectingEstimator](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/FeatureSelectionTransform.cs?range=1-4,10-121)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CountFeatureSelectingEstimator (Microsoft.ML.IHostEnvironment env, string outputColumnName, string inputColumnName = null, long minCount = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, string outputColumnName, string inputColumnName, int64 minCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator.#ctor(Microsoft.ML.IHostEnvironment,System.String,System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, outputColumnName As String, Optional inputColumnName As String = null, Optional minCount As Long = 1)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator : Microsoft.ML.IHostEnvironment * string * string * int64 -&gt; Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator" Usage="new Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator (env, outputColumnName, inputColumnName, minCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" Index="0" />
        <Parameter Name="outputColumnName" Type="System.String" Index="1" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="inputColumnName" Type="System.String" Index="2" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="minCount" Type="System.Int64" Index="3" />
      </Parameters>
      <Docs>
        <param name="env">The environment to use.</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="inputColumnName">Name of the column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="minCount">If the count of non-default values for a slot is greater than or equal to this threshold in the training data, the slot is preserved.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <member name="CountFeatureSelection">
          <summary>
        Selects the slots for which the count of non-default values is greater than or equal to a threshold.
      </summary>
          <remarks>
            <para>
          This transform uses a set of aggregators to count the number of non-default values for each slot and
          instantiates a <see cref="T:Microsoft.ML.Transforms.FeatureSelection.SlotsDroppingTransformer" /> to actually drop the slots.
          This transform is useful when applied together with a <see cref="T:Microsoft.ML.Transforms.OneHotHashEncodingTransformer" />. 
          The count feature selection can remove those features generated by the hash transform that have no data in the examples.
        </para>
          </remarks>
        </member>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[CountFeatureSelectingEstimator](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/FeatureSelectionTransform.cs?range=1-4,10-121)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Fit">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Core.Data.ITransformer Fit (Microsoft.Data.DataView.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Core.Data.ITransformer Fit(class Microsoft.Data.DataView.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator.Fit(Microsoft.Data.DataView.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fit (input As IDataView) As ITransformer" />
      <MemberSignature Language="F#" Value="abstract member Fit : Microsoft.Data.DataView.IDataView -&gt; Microsoft.ML.Core.Data.ITransformer&#xA;override this.Fit : Microsoft.Data.DataView.IDataView -&gt; Microsoft.ML.Core.Data.ITransformer" Usage="countFeatureSelectingEstimator.Fit input" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IEstimator`1.Fit(Microsoft.Data.DataView.IDataView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.ITransformer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.Data.DataView.IDataView" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Core.Data.SchemaShape GetOutputSchema (Microsoft.ML.Core.Data.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Core.Data.SchemaShape GetOutputSchema(class Microsoft.ML.Core.Data.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutputSchema (inputSchema As SchemaShape) As SchemaShape" />
      <MemberSignature Language="F#" Value="abstract member GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape&#xA;override this.GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape" Usage="countFeatureSelectingEstimator.GetOutputSchema inputSchema" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IEstimator`1.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Core.Data.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>