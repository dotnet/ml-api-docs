<Type Name="EnsembleCreator" FullName="Microsoft.ML.EntryPoints.EnsembleCreator">
  <TypeSignature Language="C#" Value="public static class EnsembleCreator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EnsembleCreator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.EntryPoints.EnsembleCreator" />
  <TypeSignature Language="VB.NET" Value="Public Class EnsembleCreator" />
  <TypeSignature Language="F#" Value="type EnsembleCreator = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Ensemble</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A component to combine given models into an ensemble model.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateAnomalyPipelineEnsemble">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.EntryPoints.CommonOutputs.AnomalyDetectionOutput CreateAnomalyPipelineEnsemble (Microsoft.ML.IHostEnvironment env, Microsoft.ML.EntryPoints.EnsembleCreator.PipelineAnomalyInput input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.EntryPoints.CommonOutputs/AnomalyDetectionOutput CreateAnomalyPipelineEnsemble(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.EntryPoints.EnsembleCreator/PipelineAnomalyInput input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.EntryPoints.EnsembleCreator.CreateAnomalyPipelineEnsemble(Microsoft.ML.IHostEnvironment,Microsoft.ML.EntryPoints.EnsembleCreator.PipelineAnomalyInput)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAnomalyPipelineEnsemble (env As IHostEnvironment, input As EnsembleCreator.PipelineAnomalyInput) As CommonOutputs.AnomalyDetectionOutput" />
      <MemberSignature Language="F#" Value="static member CreateAnomalyPipelineEnsemble : Microsoft.ML.IHostEnvironment * Microsoft.ML.EntryPoints.EnsembleCreator.PipelineAnomalyInput -&gt; Microsoft.ML.EntryPoints.CommonOutputs.AnomalyDetectionOutput" Usage="Microsoft.ML.EntryPoints.EnsembleCreator.CreateAnomalyPipelineEnsemble (env, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Ensemble</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/EntryPoint(Desc="Combine anomaly detection models into an ensemble", Name="Models.AnomalyPipelineEnsemble")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.EntryPoints.CommonOutputs+AnomalyDetectionOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.EntryPoints.EnsembleCreator+PipelineAnomalyInput" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBinaryEnsemble">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.EntryPoints.CommonOutputs.BinaryClassificationOutput CreateBinaryEnsemble (Microsoft.ML.IHostEnvironment env, Microsoft.ML.EntryPoints.EnsembleCreator.ClassifierInput input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.EntryPoints.CommonOutputs/BinaryClassificationOutput CreateBinaryEnsemble(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.EntryPoints.EnsembleCreator/ClassifierInput input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.EntryPoints.EnsembleCreator.CreateBinaryEnsemble(Microsoft.ML.IHostEnvironment,Microsoft.ML.EntryPoints.EnsembleCreator.ClassifierInput)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBinaryEnsemble (env As IHostEnvironment, input As EnsembleCreator.ClassifierInput) As CommonOutputs.BinaryClassificationOutput" />
      <MemberSignature Language="F#" Value="static member CreateBinaryEnsemble : Microsoft.ML.IHostEnvironment * Microsoft.ML.EntryPoints.EnsembleCreator.ClassifierInput -&gt; Microsoft.ML.EntryPoints.CommonOutputs.BinaryClassificationOutput" Usage="Microsoft.ML.EntryPoints.EnsembleCreator.CreateBinaryEnsemble (env, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Ensemble</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/EntryPoint(Desc="Combine binary classifiers into an ensemble", Name="Models.BinaryEnsemble", UserName="Parallel Ensemble (bagging, stacking, etc)")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.EntryPoints.CommonOutputs+BinaryClassificationOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.EntryPoints.EnsembleCreator+ClassifierInput" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBinaryPipelineEnsemble">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.EntryPoints.CommonOutputs.BinaryClassificationOutput CreateBinaryPipelineEnsemble (Microsoft.ML.IHostEnvironment env, Microsoft.ML.EntryPoints.EnsembleCreator.PipelineClassifierInput input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.EntryPoints.CommonOutputs/BinaryClassificationOutput CreateBinaryPipelineEnsemble(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.EntryPoints.EnsembleCreator/PipelineClassifierInput input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.EntryPoints.EnsembleCreator.CreateBinaryPipelineEnsemble(Microsoft.ML.IHostEnvironment,Microsoft.ML.EntryPoints.EnsembleCreator.PipelineClassifierInput)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBinaryPipelineEnsemble (env As IHostEnvironment, input As EnsembleCreator.PipelineClassifierInput) As CommonOutputs.BinaryClassificationOutput" />
      <MemberSignature Language="F#" Value="static member CreateBinaryPipelineEnsemble : Microsoft.ML.IHostEnvironment * Microsoft.ML.EntryPoints.EnsembleCreator.PipelineClassifierInput -&gt; Microsoft.ML.EntryPoints.CommonOutputs.BinaryClassificationOutput" Usage="Microsoft.ML.EntryPoints.EnsembleCreator.CreateBinaryPipelineEnsemble (env, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Ensemble</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/EntryPoint(Desc="Combine binary classification models into an ensemble", Name="Models.BinaryPipelineEnsemble")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.EntryPoints.CommonOutputs+BinaryClassificationOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.EntryPoints.EnsembleCreator+PipelineClassifierInput" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMultiClassPipelineEnsemble">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.EntryPoints.CommonOutputs.MulticlassClassificationOutput CreateMultiClassPipelineEnsemble (Microsoft.ML.IHostEnvironment env, Microsoft.ML.EntryPoints.EnsembleCreator.PipelineClassifierInput input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.EntryPoints.CommonOutputs/MulticlassClassificationOutput CreateMultiClassPipelineEnsemble(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.EntryPoints.EnsembleCreator/PipelineClassifierInput input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.EntryPoints.EnsembleCreator.CreateMultiClassPipelineEnsemble(Microsoft.ML.IHostEnvironment,Microsoft.ML.EntryPoints.EnsembleCreator.PipelineClassifierInput)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMultiClassPipelineEnsemble (env As IHostEnvironment, input As EnsembleCreator.PipelineClassifierInput) As CommonOutputs.MulticlassClassificationOutput" />
      <MemberSignature Language="F#" Value="static member CreateMultiClassPipelineEnsemble : Microsoft.ML.IHostEnvironment * Microsoft.ML.EntryPoints.EnsembleCreator.PipelineClassifierInput -&gt; Microsoft.ML.EntryPoints.CommonOutputs.MulticlassClassificationOutput" Usage="Microsoft.ML.EntryPoints.EnsembleCreator.CreateMultiClassPipelineEnsemble (env, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Ensemble</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/EntryPoint(Desc="Combine multiclass classifiers into an ensemble", Name="Models.MultiClassPipelineEnsemble")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.EntryPoints.CommonOutputs+MulticlassClassificationOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.EntryPoints.EnsembleCreator+PipelineClassifierInput" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRegressionEnsemble">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.EntryPoints.CommonOutputs.RegressionOutput CreateRegressionEnsemble (Microsoft.ML.IHostEnvironment env, Microsoft.ML.EntryPoints.EnsembleCreator.RegressionInput input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.EntryPoints.CommonOutputs/RegressionOutput CreateRegressionEnsemble(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.EntryPoints.EnsembleCreator/RegressionInput input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.EntryPoints.EnsembleCreator.CreateRegressionEnsemble(Microsoft.ML.IHostEnvironment,Microsoft.ML.EntryPoints.EnsembleCreator.RegressionInput)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateRegressionEnsemble (env As IHostEnvironment, input As EnsembleCreator.RegressionInput) As CommonOutputs.RegressionOutput" />
      <MemberSignature Language="F#" Value="static member CreateRegressionEnsemble : Microsoft.ML.IHostEnvironment * Microsoft.ML.EntryPoints.EnsembleCreator.RegressionInput -&gt; Microsoft.ML.EntryPoints.CommonOutputs.RegressionOutput" Usage="Microsoft.ML.EntryPoints.EnsembleCreator.CreateRegressionEnsemble (env, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Ensemble</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/EntryPoint(Desc="Combine regression models into an ensemble", Name="Models.RegressionEnsemble", UserName="Regression Ensemble (bagging, stacking, etc)")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.EntryPoints.CommonOutputs+RegressionOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.EntryPoints.EnsembleCreator+RegressionInput" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRegressionPipelineEnsemble">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.EntryPoints.CommonOutputs.RegressionOutput CreateRegressionPipelineEnsemble (Microsoft.ML.IHostEnvironment env, Microsoft.ML.EntryPoints.EnsembleCreator.PipelineRegressionInput input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.EntryPoints.CommonOutputs/RegressionOutput CreateRegressionPipelineEnsemble(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.EntryPoints.EnsembleCreator/PipelineRegressionInput input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.EntryPoints.EnsembleCreator.CreateRegressionPipelineEnsemble(Microsoft.ML.IHostEnvironment,Microsoft.ML.EntryPoints.EnsembleCreator.PipelineRegressionInput)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateRegressionPipelineEnsemble (env As IHostEnvironment, input As EnsembleCreator.PipelineRegressionInput) As CommonOutputs.RegressionOutput" />
      <MemberSignature Language="F#" Value="static member CreateRegressionPipelineEnsemble : Microsoft.ML.IHostEnvironment * Microsoft.ML.EntryPoints.EnsembleCreator.PipelineRegressionInput -&gt; Microsoft.ML.EntryPoints.CommonOutputs.RegressionOutput" Usage="Microsoft.ML.EntryPoints.EnsembleCreator.CreateRegressionPipelineEnsemble (env, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Ensemble</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/EntryPoint(Desc="Combine regression models into an ensemble", Name="Models.RegressionPipelineEnsemble")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.EntryPoints.CommonOutputs+RegressionOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="input" Type="Microsoft.ML.EntryPoints.EnsembleCreator+PipelineRegressionInput" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>