<Type Name="BoosterParameterBase+OptionsBase" FullName="Microsoft.ML.Trainers.LightGbm.BoosterParameterBase+OptionsBase">
  <TypeSignature Language="C#" Value="public abstract class BoosterParameterBase.OptionsBase : Microsoft.ML.Runtime.IComponentFactory&lt;Microsoft.ML.Trainers.LightGbm.BoosterParameterBase&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi abstract beforefieldinit BoosterParameterBase/OptionsBase extends System.Object implements class Microsoft.ML.Runtime.IComponentFactory, class Microsoft.ML.Runtime.IComponentFactory`1&lt;class Microsoft.ML.Trainers.LightGbm.BoosterParameterBase&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BoosterParameterBase.OptionsBase&#xA;Implements IComponentFactory(Of BoosterParameterBase)" />
  <TypeSignature Language="F#" Value="type BoosterParameterBase.OptionsBase = class&#xA;    interface IComponentFactory&lt;BoosterParameterBase&gt;&#xA;    interface IComponentFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.LightGbm</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.IComponentFactory</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.IComponentFactory&lt;Microsoft.ML.Trainers.LightGbm.BoosterParameterBase&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OptionsBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGbm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureFraction">
      <MemberSignature Language="C#" Value="public double FeatureFraction;" />
      <MemberSignature Language="ILAsm" Value=".field public float64 FeatureFraction" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.FeatureFraction" />
      <MemberSignature Language="VB.NET" Value="Public FeatureFraction As Double " />
      <MemberSignature Language="F#" Value="val mutable FeatureFraction : double" Usage="Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.FeatureFraction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGbm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Subsample ratio of columns when constructing each tree. Range: (0,1].", ShortName="ff")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/Range(Inf=Mono.Cecil.CustomAttributeArgument, Max=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The fraction of features used when creating trees.
            </summary>
        <returns>
            If <see cref="F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.FeatureFraction" /> is smaller than 1.0, LightGBM will randomly select fraction of features to train each tree.
            For example, if you set it to 0.8, LightGBM will select 80% of features before training each tree.
            This can be used to speed up training and to reduce over-fitting. Valid range is (0,1].
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="L1Regularization">
      <MemberSignature Language="C#" Value="public double L1Regularization;" />
      <MemberSignature Language="ILAsm" Value=".field public float64 L1Regularization" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.L1Regularization" />
      <MemberSignature Language="VB.NET" Value="Public L1Regularization As Double " />
      <MemberSignature Language="F#" Value="val mutable L1Regularization : double" Usage="Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.L1Regularization" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGbm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="L1 regularization term on weights, increase this value will make model more conservative.", ShortName="l1")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/Range(Min=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/SweepableDiscreteParam("RegAlpha", new System.Object[] { Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument }, false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.Internal.Internallearn.TGUI(Label="Alpha(L1)", SuggestedSweeps="0,0.5,1")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The L1 regularization term on weights.
            </summary>
        <returns>
            Increasing this value could help reduce over-fitting.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="L2Regularization">
      <MemberSignature Language="C#" Value="public double L2Regularization;" />
      <MemberSignature Language="ILAsm" Value=".field public float64 L2Regularization" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.L2Regularization" />
      <MemberSignature Language="VB.NET" Value="Public L2Regularization As Double " />
      <MemberSignature Language="F#" Value="val mutable L2Regularization : double" Usage="Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.L2Regularization" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGbm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="L2 regularization term on weights, increasing this value will make model more conservative.", ShortName="l2")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/Range(Min=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/SweepableDiscreteParam("RegLambda", new System.Object[] { Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument }, false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.Internal.Internallearn.TGUI(Label="Lambda(L2)", SuggestedSweeps="0,0.5,1")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The L2 regularization term on weights.
            </summary>
        <returns>
            Increasing this value could help reduce over-fitting.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumTreeDepth">
      <MemberSignature Language="C#" Value="public int MaximumTreeDepth;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 MaximumTreeDepth" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.MaximumTreeDepth" />
      <MemberSignature Language="VB.NET" Value="Public MaximumTreeDepth As Integer " />
      <MemberSignature Language="F#" Value="val mutable MaximumTreeDepth : int" Usage="Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.MaximumTreeDepth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGbm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Maximum depth of a tree. 0 means no limit. However, tree still grows by best-first.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/Range(Max=Mono.Cecil.CustomAttributeArgument, Min=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The maximum depth of a tree.
            </summary>
        <returns>
            0 means no limit.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.ML.Runtime.IComponentFactory&lt;Microsoft.ML.Trainers.LightGbm.BoosterParameterBase&gt;.CreateComponent">
      <MemberSignature Language="C#" Value="Microsoft.ML.Trainers.LightGbm.BoosterParameterBase IComponentFactory&lt;BoosterParameterBase&gt;.CreateComponent (Microsoft.ML.Runtime.IHostEnvironment env);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.ML.Trainers.LightGbm.BoosterParameterBase Microsoft.ML.Runtime.IComponentFactory&lt;Microsoft.ML.Trainers.LightGbm.BoosterParameterBase&gt;.CreateComponent(class Microsoft.ML.Runtime.IHostEnvironment env) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.Microsoft#ML#Runtime#IComponentFactory&lt;Microsoft#ML#Trainers#LightGbm#BoosterParameterBase&gt;#CreateComponent(Microsoft.ML.Runtime.IHostEnvironment)" />
      <MemberSignature Language="VB.NET" Value="Function CreateComponent (env As IHostEnvironment) As BoosterParameterBase Implements IComponentFactory(Of BoosterParameterBase).CreateComponent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.IComponentFactory`1.CreateComponent(Microsoft.ML.Runtime.IHostEnvironment)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGbm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.LightGbm.BoosterParameterBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumChildWeight">
      <MemberSignature Language="C#" Value="public double MinimumChildWeight;" />
      <MemberSignature Language="ILAsm" Value=".field public float64 MinimumChildWeight" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.MinimumChildWeight" />
      <MemberSignature Language="VB.NET" Value="Public MinimumChildWeight As Double " />
      <MemberSignature Language="F#" Value="val mutable MinimumChildWeight : double" Usage="Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.MinimumChildWeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGbm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Minimum sum of instance weight(hessian) needed in a child. If the tree partition step results in a leaf node with the sum of instance weight less than min_child_weight, then the building process will give up further partitioning. In linear regression mode, this simply corresponds to minimum number of instances needed to be in each node. The larger, the more conservative the algorithm will be.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/Range(Min=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The minimum sum of instance weight needed to form a new node.
            </summary>
        <returns>
            If the tree partition step results in a leaf node with the sum of instance weight less than <see cref="F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.MinimumChildWeight" />,
            the building process will give up further partitioning. In linear regression mode, this simply corresponds to minimum number
            of instances needed to be in each node. The larger, the more conservative the algorithm will be.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumSplitGain">
      <MemberSignature Language="C#" Value="public double MinimumSplitGain;" />
      <MemberSignature Language="ILAsm" Value=".field public float64 MinimumSplitGain" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.MinimumSplitGain" />
      <MemberSignature Language="VB.NET" Value="Public MinimumSplitGain As Double " />
      <MemberSignature Language="F#" Value="val mutable MinimumSplitGain : double" Usage="Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.MinimumSplitGain" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGbm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Minimum loss reduction required to make a further partition on a leaf node of the tree. the larger, the more conservative the algorithm will be.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/Range(Min=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The minimum loss reduction required to make a further partition on a leaf node of the tree.
            </summary>
        <returns>
            Larger values make the algorithm more conservative.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubsampleFraction">
      <MemberSignature Language="C#" Value="public double SubsampleFraction;" />
      <MemberSignature Language="ILAsm" Value=".field public float64 SubsampleFraction" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.SubsampleFraction" />
      <MemberSignature Language="VB.NET" Value="Public SubsampleFraction As Double " />
      <MemberSignature Language="F#" Value="val mutable SubsampleFraction : double" Usage="Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.SubsampleFraction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGbm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Subsample ratio of the training instance. Setting it to 0.5 means that LightGBM randomly collected half of the data instances to grow trees and this will prevent overfitting. Range: (0,1].")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/Range(Inf=Mono.Cecil.CustomAttributeArgument, Max=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The fraction of training data used for creating trees.
            </summary>
        <returns>
            Setting it to 0.5 means that LightGBM randomly picks half of the data points to grow trees.
            This can be used to speed up training and to reduce over-fitting. Valid range is (0,1].
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubsampleFrequency">
      <MemberSignature Language="C#" Value="public int SubsampleFrequency;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 SubsampleFrequency" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.SubsampleFrequency" />
      <MemberSignature Language="VB.NET" Value="Public SubsampleFrequency As Integer " />
      <MemberSignature Language="F#" Value="val mutable SubsampleFrequency : int" Usage="Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.SubsampleFrequency" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGbm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Subsample frequency for bagging. 0 means no subsample. Specifies the frequency at which the bagging occurs, where if this is set to N, the subsampling will happen at every N iterations.This must be set with Subsample as this specifies the amount to subsample.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/Range(Max=Mono.Cecil.CustomAttributeArgument, Min=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The frequency of performing subsampling (bagging).
            </summary>
        <returns>
            0 means disable bagging. N means perform bagging at every N iterations.
            To enable bagging, <see cref="F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.SubsampleFraction" /> should also be set to a value less than 1.0.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>