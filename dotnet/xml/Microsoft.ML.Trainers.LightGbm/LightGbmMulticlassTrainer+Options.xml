<Type Name="LightGbmMulticlassTrainer+Options" FullName="Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer+Options">
  <TypeSignature Language="C#" Value="public sealed class LightGbmMulticlassTrainer.Options : Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase&lt;Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options,Microsoft.ML.Data.VBuffer&lt;float&gt;,Microsoft.ML.Data.MulticlassPredictionTransformer&lt;Microsoft.ML.Trainers.OneVersusAllModelParameters&gt;,Microsoft.ML.Trainers.OneVersusAllModelParameters&gt;.OptionsBase" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed LightGbmMulticlassTrainer/Options extends Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4/OptionsBase&lt;class Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer/Options, valuetype Microsoft.ML.Data.VBuffer`1&lt;float32&gt;, class Microsoft.ML.Data.MulticlassPredictionTransformer`1&lt;class Microsoft.ML.Trainers.OneVersusAllModelParameters&gt;, class Microsoft.ML.Trainers.OneVersusAllModelParameters&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LightGbmMulticlassTrainer.Options&#xA;Inherits LightGbmTrainerBase(Of LightGbmMulticlassTrainer.Options, VBuffer(Of Single), MulticlassPredictionTransformer(Of OneVersusAllModelParameters), OneVersusAllModelParameters).OptionsBase" />
  <TypeSignature Language="F#" Value="type LightGbmMulticlassTrainer.Options = class&#xA;    inherit LightGbmTrainerBase&lt;LightGbmMulticlassTrainer.Options, VBuffer&lt;single&gt;, MulticlassPredictionTransformer&lt;OneVersusAllModelParameters&gt;, OneVersusAllModelParameters&gt;.OptionsBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.LightGbm</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase&lt;Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer+Options,Microsoft.ML.Data.VBuffer&lt;System.Single&gt;,Microsoft.ML.Data.MulticlassPredictionTransformer&lt;Microsoft.ML.Trainers.OneVersusAllModelParameters&gt;,Microsoft.ML.Trainers.OneVersusAllModelParameters&gt;+OptionsBase</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TOptions">Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer+Options</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TOutput">Microsoft.ML.Data.VBuffer&lt;System.Single&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TTransformer">Microsoft.ML.Data.MulticlassPredictionTransformer&lt;Microsoft.ML.Trainers.OneVersusAllModelParameters&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TModel">Microsoft.ML.Trainers.OneVersusAllModelParameters</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Options ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGbm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluationMetric">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options.EvaluateMetricType EvaluationMetric;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer/Options/EvaluateMetricType EvaluationMetric" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options.EvaluationMetric" />
      <MemberSignature Language="VB.NET" Value="Public EvaluationMetric As LightGbmMulticlassTrainer.Options.EvaluateMetricType " />
      <MemberSignature Language="F#" Value="val mutable EvaluationMetric : Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options.EvaluateMetricType" Usage="Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options.EvaluationMetric" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGbm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Evaluation metrics.", ShortName="em")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer+Options+EvaluateMetricType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Determines what evaluation metric to use.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sigmoid">
      <MemberSignature Language="C#" Value="public double Sigmoid;" />
      <MemberSignature Language="ILAsm" Value=".field public float64 Sigmoid" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options.Sigmoid" />
      <MemberSignature Language="VB.NET" Value="Public Sigmoid As Double " />
      <MemberSignature Language="F#" Value="val mutable Sigmoid : double" Usage="Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options.Sigmoid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGbm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Parameter for the sigmoid function.", ShortName="sigmoid")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.Internal.Internallearn.TGUI(Label="Sigmoid", SuggestedSweeps="0.5,1")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Parameter for the sigmoid function.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSoftmax">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; UseSoftmax;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Nullable`1&lt;bool&gt; UseSoftmax" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options.UseSoftmax" />
      <MemberSignature Language="VB.NET" Value="Public UseSoftmax As Nullable(Of Boolean) " />
      <MemberSignature Language="F#" Value="val mutable UseSoftmax : Nullable&lt;bool&gt;" Usage="Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options.UseSoftmax" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGbm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Use softmax loss for the multi classification.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.EntryPoints.TlcModule/SweepableDiscreteParam("UseSoftmax", new System.Object[] { Mono.Cecil.CustomAttributeArgument, Mono.Cecil.CustomAttributeArgument }, false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether to use softmax loss.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>