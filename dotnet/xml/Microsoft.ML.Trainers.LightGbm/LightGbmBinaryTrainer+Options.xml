<Type Name="LightGbmBinaryTrainer+Options" FullName="Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer+Options">
  <TypeSignature Language="C#" Value="public sealed class LightGbmBinaryTrainer.Options : Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase&lt;Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer.Options,float,Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LightGbm.LightGbmBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;,Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LightGbm.LightGbmBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;.OptionsBase" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed LightGbmBinaryTrainer/Options extends Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4/OptionsBase&lt;class Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer/Options, float32, class Microsoft.ML.Data.BinaryPredictionTransformer`1&lt;class Microsoft.ML.Calibrators.CalibratedModelParametersBase`2&lt;class Microsoft.ML.Trainers.LightGbm.LightGbmBinaryModelParameters, class Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;, class Microsoft.ML.Calibrators.CalibratedModelParametersBase`2&lt;class Microsoft.ML.Trainers.LightGbm.LightGbmBinaryModelParameters, class Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer.Options" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LightGbmBinaryTrainer.Options&#xA;Inherits LightGbmTrainerBase(Of LightGbmBinaryTrainer.Options, Single, BinaryPredictionTransformer(Of CalibratedModelParametersBase(Of LightGbmBinaryModelParameters, PlattCalibrator)), CalibratedModelParametersBase(Of LightGbmBinaryModelParameters, PlattCalibrator)).OptionsBase" />
  <TypeSignature Language="F#" Value="type LightGbmBinaryTrainer.Options = class&#xA;    inherit LightGbmTrainerBase&lt;LightGbmBinaryTrainer.Options, single, BinaryPredictionTransformer&lt;CalibratedModelParametersBase&lt;LightGbmBinaryModelParameters, PlattCalibrator&gt;&gt;, CalibratedModelParametersBase&lt;LightGbmBinaryModelParameters, PlattCalibrator&gt;&gt;.OptionsBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.LightGbm</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase&lt;Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer+Options,System.Single,Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LightGbm.LightGbmBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;,Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LightGbm.LightGbmBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;+OptionsBase</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TOptions">Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer+Options</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TOutput">System.Single</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TTransformer">Microsoft.ML.Data.BinaryPredictionTransformer&lt;Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LightGbm.LightGbmBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TModel">Microsoft.ML.Calibrators.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LightGbm.LightGbmBinaryModelParameters,Microsoft.ML.Calibrators.PlattCalibrator&gt;</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Options ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer.Options.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGbm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluationMetric">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer.Options.EvaluateMetricType EvaluationMetric;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer/Options/EvaluateMetricType EvaluationMetric" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer.Options.EvaluationMetric" />
      <MemberSignature Language="VB.NET" Value="Public EvaluationMetric As LightGbmBinaryTrainer.Options.EvaluateMetricType " />
      <MemberSignature Language="F#" Value="val mutable EvaluationMetric : Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer.Options.EvaluateMetricType" Usage="Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer.Options.EvaluationMetric" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGbm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Evaluation metrics.", ShortName="em")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer+Options+EvaluateMetricType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Determines what evaluation metric to use.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sigmoid">
      <MemberSignature Language="C#" Value="public double Sigmoid;" />
      <MemberSignature Language="ILAsm" Value=".field public float64 Sigmoid" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer.Options.Sigmoid" />
      <MemberSignature Language="VB.NET" Value="Public Sigmoid As Double " />
      <MemberSignature Language="F#" Value="val mutable Sigmoid : double" Usage="Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer.Options.Sigmoid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGbm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Parameter for the sigmoid function.", ShortName="sigmoid")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.Internal.Internallearn.TGUI(Label="Sigmoid", SuggestedSweeps="0.5,1")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Parameter for the sigmoid function.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnbalancedSets">
      <MemberSignature Language="C#" Value="public bool UnbalancedSets;" />
      <MemberSignature Language="ILAsm" Value=".field public bool UnbalancedSets" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer.Options.UnbalancedSets" />
      <MemberSignature Language="VB.NET" Value="Public UnbalancedSets As Boolean " />
      <MemberSignature Language="F#" Value="val mutable UnbalancedSets : bool" Usage="Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer.Options.UnbalancedSets" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGbm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Use for binary classification when training data is not balanced.", ShortName="us")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether training data is unbalanced.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeightOfPositiveExamples">
      <MemberSignature Language="C#" Value="public double WeightOfPositiveExamples;" />
      <MemberSignature Language="ILAsm" Value=".field public float64 WeightOfPositiveExamples" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer.Options.WeightOfPositiveExamples" />
      <MemberSignature Language="VB.NET" Value="Public WeightOfPositiveExamples As Double " />
      <MemberSignature Language="F#" Value="val mutable WeightOfPositiveExamples : double" Usage="Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer.Options.WeightOfPositiveExamples" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.LightGbm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet">
          <AttributeName>Microsoft.ML.CommandLine.Argument(Microsoft.ML.CommandLine.ArgumentType.AtMostOnce, HelpText="Control the balance of positive and negative weights, useful for unbalanced classes. A typical value to consider: sum(negative cases) / sum(positive cases).", ShortName="ScalePosWeight")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Controls the balance of positive and negative weights in <see cref="T:Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer" />.
            </summary>
        <returns>
            This is useful for training on unbalanced data. A typical value to consider is sum(negative cases) / sum(positive cases).
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>