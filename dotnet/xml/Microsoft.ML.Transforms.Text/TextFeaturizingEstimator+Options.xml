<Type Name="TextFeaturizingEstimator+Options" FullName="Microsoft.ML.Transforms.Text.TextFeaturizingEstimator+Options">
  <TypeSignature Language="C#" Value="public sealed class TextFeaturizingEstimator.Options" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit TextFeaturizingEstimator/Options extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Options" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TextFeaturizingEstimator.Options" />
  <TypeSignature Language="F#" Value="type TextFeaturizingEstimator.Options = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Advanced options for the <see cref="T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Options ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Options.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepDiacritics">
      <MemberSignature Language="C#" Value="public bool KeepDiacritics { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepDiacritics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Options.KeepDiacritics" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepDiacritics As Boolean" />
      <MemberSignature Language="F#" Value="member this.KeepDiacritics : bool with get, set" Usage="Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Options.KeepDiacritics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether to keep diacritical marks or remove them.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepNumbers">
      <MemberSignature Language="C#" Value="public bool KeepNumbers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepNumbers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Options.KeepNumbers" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepNumbers As Boolean" />
      <MemberSignature Language="F#" Value="member this.KeepNumbers : bool with get, set" Usage="Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Options.KeepNumbers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether to keep numbers or remove them.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepPunctuations">
      <MemberSignature Language="C#" Value="public bool KeepPunctuations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepPunctuations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Options.KeepPunctuations" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepPunctuations As Boolean" />
      <MemberSignature Language="F#" Value="member this.KeepPunctuations : bool with get, set" Usage="Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Options.KeepPunctuations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether to keep punctuation marks or remove them.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputTokens">
      <MemberSignature Language="C#" Value="public bool OutputTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OutputTokens" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Options.OutputTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputTokens As Boolean" />
      <MemberSignature Language="F#" Value="member this.OutputTokens : bool with get, set" Usage="Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Options.OutputTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether to output the transformed text tokens as an additional column.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextCase">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.Text.TextNormalizingEstimator.CaseNormalizationMode TextCase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Transforms.Text.TextNormalizingEstimator/CaseNormalizationMode TextCase" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Options.TextCase" />
      <MemberSignature Language="VB.NET" Value="Public Property TextCase As TextNormalizingEstimator.CaseNormalizationMode" />
      <MemberSignature Language="F#" Value="member this.TextCase : Microsoft.ML.Transforms.Text.TextNormalizingEstimator.CaseNormalizationMode with get, set" Usage="Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Options.TextCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Text.TextNormalizingEstimator+CaseNormalizationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Casing used for the text.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextLanguage">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Language TextLanguage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Transforms.Text.TextFeaturizingEstimator/Language TextLanguage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Options.TextLanguage" />
      <MemberSignature Language="VB.NET" Value="Public Property TextLanguage As TextFeaturizingEstimator.Language" />
      <MemberSignature Language="F#" Value="member this.TextLanguage : Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Language with get, set" Usage="Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Options.TextLanguage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Text.TextFeaturizingEstimator+Language</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Dataset language.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCharExtractor">
      <MemberSignature Language="C#" Value="public bool UseCharExtractor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCharExtractor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Options.UseCharExtractor" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCharExtractor As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseCharExtractor : bool with get, set" Usage="Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Options.UseCharExtractor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether to use char extractor or not.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStopRemover">
      <MemberSignature Language="C#" Value="public bool UseStopRemover { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseStopRemover" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Options.UseStopRemover" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStopRemover As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseStopRemover : bool with get, set" Usage="Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Options.UseStopRemover" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether to use stop remover or not.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseWordExtractor">
      <MemberSignature Language="C#" Value="public bool UseWordExtractor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseWordExtractor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Options.UseWordExtractor" />
      <MemberSignature Language="VB.NET" Value="Public Property UseWordExtractor As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseWordExtractor : bool with get, set" Usage="Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Options.UseWordExtractor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether to use word extractor or not.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorNormalizer">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.TextNormKind VectorNormalizer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Transforms.Text.TextFeaturizingEstimator/TextNormKind VectorNormalizer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Options.VectorNormalizer" />
      <MemberSignature Language="VB.NET" Value="Public Property VectorNormalizer As TextFeaturizingEstimator.TextNormKind" />
      <MemberSignature Language="F#" Value="member this.VectorNormalizer : Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.TextNormKind with get, set" Usage="Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Options.VectorNormalizer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Text.TextFeaturizingEstimator+TextNormKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Vector Normalizer to use.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>