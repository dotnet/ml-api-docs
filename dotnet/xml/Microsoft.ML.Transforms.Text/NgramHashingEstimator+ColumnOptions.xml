<Type Name="NgramHashingEstimator+ColumnOptions" FullName="Microsoft.ML.Transforms.Text.NgramHashingEstimator+ColumnOptions">
  <TypeSignature Language="C#" Value="public sealed class NgramHashingEstimator.ColumnOptions" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit NgramHashingEstimator/ColumnOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NgramHashingEstimator.ColumnOptions" />
  <TypeSignature Language="F#" Value="type NgramHashingEstimator.ColumnOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Describes how the transformer handles one pair of mulitple inputs - singular output columns.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnOptions (string name, string[] inputColumnNames, int ngramLength = 2, int skipLength = 0, bool allLengths = true, int hashBits = 16, uint seed = 314489979, bool ordered = true, int invertHash = 0, bool rehashUnigrams = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string[] inputColumnNames, int32 ngramLength, int32 skipLength, bool allLengths, int32 hashBits, unsigned int32 seed, bool ordered, int32 invertHash, bool rehashUnigrams) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.#ctor(System.String,System.String[],System.Int32,System.Int32,System.Boolean,System.Int32,System.UInt32,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, inputColumnNames As String(), Optional ngramLength As Integer = 2, Optional skipLength As Integer = 0, Optional allLengths As Boolean = true, Optional hashBits As Integer = 16, Optional seed As UInteger = 314489979, Optional ordered As Boolean = true, Optional invertHash As Integer = 0, Optional rehashUnigrams As Boolean = false)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions : string * string[] * int * int * bool * int * uint32 * bool * int * bool -&gt; Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions" Usage="new Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions (name, inputColumnNames, ngramLength, skipLength, allLengths, hashBits, seed, ordered, invertHash, rehashUnigrams)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="inputColumnNames" Type="System.String[]" />
        <Parameter Name="ngramLength" Type="System.Int32" />
        <Parameter Name="skipLength" Type="System.Int32" />
        <Parameter Name="allLengths" Type="System.Boolean" />
        <Parameter Name="hashBits" Type="System.Int32" />
        <Parameter Name="seed" Type="System.UInt32" />
        <Parameter Name="ordered" Type="System.Boolean" />
        <Parameter Name="invertHash" Type="System.Int32" />
        <Parameter Name="rehashUnigrams" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">Name of the column resulting from the transformation of <paramref name="inputColumnNames" />.</param>
        <param name="inputColumnNames">Names of the columns to transform. </param>
        <param name="ngramLength">Maximum ngram length.</param>
        <param name="skipLength">Maximum number of tokens to skip when constructing an ngram.</param>
        <param name="allLengths">Whether to store all ngram lengths up to <paramref name="ngramLength" />, or only <paramref name="ngramLength" />.</param>
        <param name="hashBits">Number of bits to hash into. Must be between 1 and 31, inclusive.</param>
        <param name="seed">Hashing seed.</param>
        <param name="ordered">Whether the position of each term should be included in the hash.</param>
        <param name="invertHash">During hashing we constuct mappings between original values and the produced hash values.
            Text representation of original values are stored in the slot names of the metadata for the new column.
            Hashing, as such, can map many initial values to one.
            <paramref name="invertHash" /> specifies the upper bound of the number of distinct input values mapping to a hash that should be retained.
            <value>0</value> does not retain any input values. <value>-1</value> retains all input values mapping to each hash.</param>
        <param name="rehashUnigrams">Whether to rehash unigrams.</param>
        <summary>
            Describes how the transformer handles one column pair.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllLengths">
      <MemberSignature Language="C#" Value="public readonly bool AllLengths;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly bool AllLengths" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.AllLengths" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly AllLengths As Boolean " />
      <MemberSignature Language="F#" Value="val mutable AllLengths : bool" Usage="Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.AllLengths" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether to store all ngram lengths up to <see cref="F:Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.NgramLength" />, or only <see cref="F:Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.NgramLength" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashBits">
      <MemberSignature Language="C#" Value="public readonly int HashBits;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly int32 HashBits" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.HashBits" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly HashBits As Integer " />
      <MemberSignature Language="F#" Value="val mutable HashBits : int" Usage="Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.HashBits" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Number of bits to hash into. Must be between 1 and 31, inclusive.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputColumnNames">
      <MemberSignature Language="C#" Value="public readonly string[] InputColumnNames;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly string[] InputColumnNames" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.InputColumnNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly InputColumnNames As String() " />
      <MemberSignature Language="F#" Value="val mutable InputColumnNames : string[]" Usage="Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.InputColumnNames" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Names of the columns to transform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvertHash">
      <MemberSignature Language="C#" Value="public readonly int InvertHash;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly int32 InvertHash" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.InvertHash" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly InvertHash As Integer " />
      <MemberSignature Language="F#" Value="val mutable InvertHash : int" Usage="Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.InvertHash" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            During hashing we constuct mappings between original values and the produced hash values.
            Text representation of original values are stored in the slot names of the  metadata for the new column.
            Hashing, as such, can map many initial values to one.
            <see cref="F:Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.InvertHash" /> specifies the upper bound of the number of distinct input values mapping to a hash that should be retained.
            <value>0</value> does not retain any input values. <value>-1</value> retains all input values mapping to each hash.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public readonly string Name;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly string Name" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Name As String " />
      <MemberSignature Language="F#" Value="val mutable Name : string" Usage="Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Name of the column resulting from the transformation of <see cref="F:Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.InputColumnNames" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NgramLength">
      <MemberSignature Language="C#" Value="public readonly int NgramLength;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly int32 NgramLength" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.NgramLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly NgramLength As Integer " />
      <MemberSignature Language="F#" Value="val mutable NgramLength : int" Usage="Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.NgramLength" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Maximum ngram length.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordered">
      <MemberSignature Language="C#" Value="public readonly bool Ordered;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly bool Ordered" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.Ordered" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Ordered As Boolean " />
      <MemberSignature Language="F#" Value="val mutable Ordered : bool" Usage="Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.Ordered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the position of each term should be included in the hash.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RehashUnigrams">
      <MemberSignature Language="C#" Value="public readonly bool RehashUnigrams;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly bool RehashUnigrams" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.RehashUnigrams" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly RehashUnigrams As Boolean " />
      <MemberSignature Language="F#" Value="val mutable RehashUnigrams : bool" Usage="Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.RehashUnigrams" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether to rehash unigrams.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Seed">
      <MemberSignature Language="C#" Value="public readonly uint Seed;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly unsigned int32 Seed" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.Seed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Seed As UInteger " />
      <MemberSignature Language="F#" Value="val mutable Seed : uint32" Usage="Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.Seed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Hashing seed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipLength">
      <MemberSignature Language="C#" Value="public readonly int SkipLength;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly int32 SkipLength" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.SkipLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly SkipLength As Integer " />
      <MemberSignature Language="F#" Value="val mutable SkipLength : int" Usage="Microsoft.ML.Transforms.Text.NgramHashingEstimator.ColumnOptions.SkipLength" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Maximum number of tokens to skip when constructing an ngram.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>