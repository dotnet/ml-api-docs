<Type Name="CustomStopWordsRemovingEstimator" FullName="Microsoft.ML.Transforms.Text.CustomStopWordsRemovingEstimator">
  <TypeSignature Language="C#" Value="public sealed class CustomStopWordsRemovingEstimator : Microsoft.ML.Data.TrivialEstimator&lt;Microsoft.ML.Transforms.Text.CustomStopWordsRemovingTransformer&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CustomStopWordsRemovingEstimator extends Microsoft.ML.Data.TrivialEstimator`1&lt;class Microsoft.ML.Transforms.Text.CustomStopWordsRemovingTransformer&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.Text.CustomStopWordsRemovingEstimator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CustomStopWordsRemovingEstimator&#xA;Inherits TrivialEstimator(Of CustomStopWordsRemovingTransformer)" />
  <TypeSignature Language="F#" Value="type CustomStopWordsRemovingEstimator = class&#xA;    inherit TrivialEstimator&lt;CustomStopWordsRemovingTransformer&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Data.TrivialEstimator&lt;Microsoft.ML.Transforms.Text.CustomStopWordsRemovingTransformer&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Microsoft.ML.Transforms.Text.CustomStopWordsRemovingTransformer</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:Microsoft.ML.IEstimator`1" /> for the <see cref="T:Microsoft.ML.Transforms.Text.CustomStopWordsRemovingTransformer" />.
             </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[
             ###  Estimator Characteristics
             |  |  |
             | -- | -- |
             | Does this estimator need to look at the data to train its parameters? | No |
             | Input column data type | Vector of [Text](xref:Microsoft.ML.Data.TextDataViewType) |
             | Output column data type | Vector of [Text](xref:Microsoft.ML.Data.TextDataViewType) |
            
             The resulting <xref:Microsoft.ML.Transforms.Text.CustomStopWordsRemovingTransformer> creates a new column, named as specified by the output column name parameter, and
             fills it with a vector of words containing all of the words in the input column except those given by the stopwords parameter.
             All text comparison made by casting provided words and words from input column to lower case using casing rules of invariant culture.
            
             Check the See Also section for links to usage examples.
             ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.ML.TextCatalog.RemoveStopWords(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String,System.String[])" />
  </Docs>
  <Members>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.SchemaShape GetOutputSchema (Microsoft.ML.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.ML.SchemaShape GetOutputSchema(class Microsoft.ML.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Text.CustomStopWordsRemovingEstimator.GetOutputSchema(Microsoft.ML.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOutputSchema (inputSchema As SchemaShape) As SchemaShape" />
      <MemberSignature Language="F#" Value="override this.GetOutputSchema : Microsoft.ML.SchemaShape -&gt; Microsoft.ML.SchemaShape" Usage="customStopWordsRemovingEstimator.GetOutputSchema inputSchema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.SchemaShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>
            Returns the <see cref="T:Microsoft.ML.SchemaShape" /> of the schema which will be produced by the transformer.
            Used for schema propagation and verification in a pipeline.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
