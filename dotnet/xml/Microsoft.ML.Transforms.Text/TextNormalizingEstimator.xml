<Type Name="TextNormalizingEstimator" FullName="Microsoft.ML.Transforms.Text.TextNormalizingEstimator">
  <TypeSignature Language="C#" Value="public sealed class TextNormalizingEstimator : Microsoft.ML.Runtime.Data.TrivialEstimator&lt;Microsoft.ML.Transforms.Text.TextNormalizingTransformer&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TextNormalizingEstimator extends Microsoft.ML.Runtime.Data.TrivialEstimator`1&lt;class Microsoft.ML.Transforms.Text.TextNormalizingTransformer&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.Text.TextNormalizingEstimator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TextNormalizingEstimator&#xA;Inherits TrivialEstimator(Of TextNormalizingTransformer)" />
  <TypeSignature Language="F#" Value="type TextNormalizingEstimator = class&#xA;    inherit TrivialEstimator&lt;TextNormalizingTransformer&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.Data.TrivialEstimator&lt;Microsoft.ML.Transforms.Text.TextNormalizingTransformer&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Microsoft.ML.Transforms.Text.TextNormalizingTransformer</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextNormalizingEstimator (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Transforms.Text.TextNormalizingEstimator.CaseNormalizationMode textCase = Microsoft.ML.Transforms.Text.TextNormalizingEstimator+CaseNormalizationMode.Lower, bool keepDiacritics = false, bool keepPunctuations = true, bool keepNumbers = true, params ValueTuple&lt;string,string&gt;[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, valuetype Microsoft.ML.Transforms.Text.TextNormalizingEstimator/CaseNormalizationMode textCase, bool keepDiacritics, bool keepPunctuations, bool keepNumbers, valuetype System.ValueTuple`2&lt;string, string&gt;[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Text.TextNormalizingEstimator.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Transforms.Text.TextNormalizingEstimator.CaseNormalizationMode,System.Boolean,System.Boolean,System.Boolean,System.ValueTuple{System.String,System.String}[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, Optional textCase As TextNormalizingEstimator.CaseNormalizationMode = Microsoft.ML.Transforms.Text.TextNormalizingEstimator+CaseNormalizationMode.Lower, Optional keepDiacritics As Boolean = false, Optional keepPunctuations As Boolean = true, Optional keepNumbers As Boolean = true, ParamArray columns As ValueTuple(Of String, String)())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.Text.TextNormalizingEstimator : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Transforms.Text.TextNormalizingEstimator.CaseNormalizationMode * bool * bool * bool * ValueTuple&lt;string, string&gt;[] -&gt; Microsoft.ML.Transforms.Text.TextNormalizingEstimator" Usage="new Microsoft.ML.Transforms.Text.TextNormalizingEstimator (env, textCase, keepDiacritics, keepPunctuations, keepNumbers, columns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="textCase" Type="Microsoft.ML.Transforms.Text.TextNormalizingEstimator+CaseNormalizationMode" />
        <Parameter Name="keepDiacritics" Type="System.Boolean" />
        <Parameter Name="keepPunctuations" Type="System.Boolean" />
        <Parameter Name="keepNumbers" Type="System.Boolean" />
        <Parameter Name="columns" Type="System.ValueTuple&lt;System.String,System.String&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "input", "output" })</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="env">The environment.</param>
        <param name="textCase">Casing text using the rules of the invariant culture.</param>
        <param name="keepDiacritics">Whether to keep diacritical marks or remove them.</param>
        <param name="keepPunctuations">Whether to keep punctuation marks or remove them.</param>
        <param name="keepNumbers">Whether to keep numbers or remove them.</param>
        <param name="columns">Pairs of columns to run the text normalization on.</param>
        <summary>
            Normalizes incoming text in input columns by changing case, removing diacritical marks, punctuation marks and/or numbers
            and outputs new text as output columns.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextNormalizingEstimator (Microsoft.ML.Runtime.IHostEnvironment env, string inputColumn, string outputColumn = null, Microsoft.ML.Transforms.Text.TextNormalizingEstimator.CaseNormalizationMode textCase = Microsoft.ML.Transforms.Text.TextNormalizingEstimator+CaseNormalizationMode.Lower, bool keepDiacritics = false, bool keepPunctuations = true, bool keepNumbers = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, string inputColumn, string outputColumn, valuetype Microsoft.ML.Transforms.Text.TextNormalizingEstimator/CaseNormalizationMode textCase, bool keepDiacritics, bool keepPunctuations, bool keepNumbers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Text.TextNormalizingEstimator.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.String,Microsoft.ML.Transforms.Text.TextNormalizingEstimator.CaseNormalizationMode,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, inputColumn As String, Optional outputColumn As String = null, Optional textCase As TextNormalizingEstimator.CaseNormalizationMode = Microsoft.ML.Transforms.Text.TextNormalizingEstimator+CaseNormalizationMode.Lower, Optional keepDiacritics As Boolean = false, Optional keepPunctuations As Boolean = true, Optional keepNumbers As Boolean = true)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.Text.TextNormalizingEstimator : Microsoft.ML.Runtime.IHostEnvironment * string * string * Microsoft.ML.Transforms.Text.TextNormalizingEstimator.CaseNormalizationMode * bool * bool * bool -&gt; Microsoft.ML.Transforms.Text.TextNormalizingEstimator" Usage="new Microsoft.ML.Transforms.Text.TextNormalizingEstimator (env, inputColumn, outputColumn, textCase, keepDiacritics, keepPunctuations, keepNumbers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="inputColumn" Type="System.String" />
        <Parameter Name="outputColumn" Type="System.String" />
        <Parameter Name="textCase" Type="Microsoft.ML.Transforms.Text.TextNormalizingEstimator+CaseNormalizationMode" />
        <Parameter Name="keepDiacritics" Type="System.Boolean" />
        <Parameter Name="keepPunctuations" Type="System.Boolean" />
        <Parameter Name="keepNumbers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="env">The environment.</param>
        <param name="inputColumn">The column containing text to normalize.</param>
        <param name="outputColumn">The column containing output tokens. Null means <paramref name="inputColumn" /> is replaced.</param>
        <param name="textCase">Casing text using the rules of the invariant culture.</param>
        <param name="keepDiacritics">Whether to keep diacritical marks or remove them.</param>
        <param name="keepPunctuations">Whether to keep punctuation marks or remove them.</param>
        <param name="keepNumbers">Whether to keep numbers or remove them.</param>
        <summary>
            Normalizes incoming text in <paramref name="inputColumn" /> by changing case, removing diacritical marks, punctuation marks and/or numbers
            and outputs new text as <paramref name="outputColumn" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.Core.Data.SchemaShape GetOutputSchema (Microsoft.ML.Core.Data.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.ML.Core.Data.SchemaShape GetOutputSchema(class Microsoft.ML.Core.Data.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Text.TextNormalizingEstimator.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOutputSchema (inputSchema As SchemaShape) As SchemaShape" />
      <MemberSignature Language="F#" Value="override this.GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape" Usage="textNormalizingEstimator.GetOutputSchema inputSchema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Core.Data.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsColumnTypeValid">
      <MemberSignature Language="C#" Value="public static bool IsColumnTypeValid (Microsoft.ML.Runtime.Data.ColumnType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsColumnTypeValid(class Microsoft.ML.Runtime.Data.ColumnType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Text.TextNormalizingEstimator.IsColumnTypeValid(Microsoft.ML.Runtime.Data.ColumnType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsColumnTypeValid (type As ColumnType) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsColumnTypeValid : Microsoft.ML.Runtime.Data.ColumnType -&gt; bool" Usage="Microsoft.ML.Transforms.Text.TextNormalizingEstimator.IsColumnTypeValid type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.ML.Runtime.Data.ColumnType" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>