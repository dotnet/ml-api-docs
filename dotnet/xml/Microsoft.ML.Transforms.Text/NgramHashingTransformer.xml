<Type Name="NgramHashingTransformer" FullName="Microsoft.ML.Transforms.Text.NgramHashingTransformer">
  <TypeSignature Language="C#" Value="public sealed class NgramHashingTransformer : Microsoft.ML.Data.RowToRowTransformerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NgramHashingTransformer extends Microsoft.ML.Data.RowToRowTransformerBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.Text.NgramHashingTransformer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NgramHashingTransformer&#xA;Inherits RowToRowTransformerBase" />
  <TypeSignature Language="F#" Value="type NgramHashingTransformer = class&#xA;    inherit RowToRowTransformerBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Data.RowToRowTransformerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Produces a bag of counts of ngrams (sequences of consecutive words of length 1-n) in a given text.
            It does so by hashing each ngram and using the hash value as the index in the bag.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members />
</Type>