<Type Name="BertOptions" FullName="Microsoft.ML.Tokenizers.BertOptions">
  <TypeSignature Language="C#" Value="public sealed class BertOptions : Microsoft.ML.Tokenizers.WordPieceOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BertOptions extends Microsoft.ML.Tokenizers.WordPieceOptions" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Tokenizers.BertOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BertOptions&#xA;Inherits WordPieceOptions" />
  <TypeSignature Language="F#" Value="type BertOptions = class&#xA;    inherit WordPieceOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Tokenizers.WordPieceOptions</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Options for the Bert tokenizer.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BertOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Tokenizers.BertOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyBasicTokenization">
      <MemberSignature Language="C#" Value="public bool ApplyBasicTokenization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyBasicTokenization" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Tokenizers.BertOptions.ApplyBasicTokenization" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyBasicTokenization As Boolean" />
      <MemberSignature Language="F#" Value="member this.ApplyBasicTokenization : bool with get, set" Usage="Microsoft.ML.Tokenizers.BertOptions.ApplyBasicTokenization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to apply basic tokenization.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassificationToken">
      <MemberSignature Language="C#" Value="public string ClassificationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassificationToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Tokenizers.BertOptions.ClassificationToken" />
      <MemberSignature Language="VB.NET" Value="Public Property ClassificationToken As String" />
      <MemberSignature Language="F#" Value="member this.ClassificationToken : string with get, set" Usage="Microsoft.ML.Tokenizers.BertOptions.ClassificationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the classification token to use.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndividuallyTokenizeCjk">
      <MemberSignature Language="C#" Value="public bool IndividuallyTokenizeCjk { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IndividuallyTokenizeCjk" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Tokenizers.BertOptions.IndividuallyTokenizeCjk" />
      <MemberSignature Language="VB.NET" Value="Public Property IndividuallyTokenizeCjk As Boolean" />
      <MemberSignature Language="F#" Value="member this.IndividuallyTokenizeCjk : bool with get, set" Usage="Microsoft.ML.Tokenizers.BertOptions.IndividuallyTokenizeCjk" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to tokenize the CJK characters in separate tokens.
            </summary>
        <value>To be added.</value>
        <remarks>
            This is useful when you want to tokenize CJK characters individually.
            The following Unicode ranges are considered CJK characters for this purpose:
            - U+3400 - U+4DBF   CJK Unified Ideographs Extension A.
            - U+4E00 - U+9FFF   basic set of CJK characters.
            - U+F900 - U+FAFF   CJK Compatibility Ideographs.
            - U+20000 - U+2A6DF CJK Unified Ideographs Extension B.
            - U+2A700 - U+2B73F CJK Unified Ideographs Extension C.
            - U+2B740 - U+2B81F CJK Unified Ideographs Extension D.
            - U+2B820 - U+2CEAF CJK Unified Ideographs Extension E.
            - U+2F800 - U+2FA1F CJK Compatibility Ideographs Supplement.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="LowerCaseBeforeTokenization">
      <MemberSignature Language="C#" Value="public bool LowerCaseBeforeTokenization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LowerCaseBeforeTokenization" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Tokenizers.BertOptions.LowerCaseBeforeTokenization" />
      <MemberSignature Language="VB.NET" Value="Public Property LowerCaseBeforeTokenization As Boolean" />
      <MemberSignature Language="F#" Value="member this.LowerCaseBeforeTokenization : bool with get, set" Usage="Microsoft.ML.Tokenizers.BertOptions.LowerCaseBeforeTokenization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to lower case the input before tokenization.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaskingToken">
      <MemberSignature Language="C#" Value="public string MaskingToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaskingToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Tokenizers.BertOptions.MaskingToken" />
      <MemberSignature Language="VB.NET" Value="Public Property MaskingToken As String" />
      <MemberSignature Language="F#" Value="member this.MaskingToken : string with get, set" Usage="Microsoft.ML.Tokenizers.BertOptions.MaskingToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the masking token to use.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingToken">
      <MemberSignature Language="C#" Value="public string PaddingToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PaddingToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Tokenizers.BertOptions.PaddingToken" />
      <MemberSignature Language="VB.NET" Value="Public Property PaddingToken As String" />
      <MemberSignature Language="F#" Value="member this.PaddingToken : string with get, set" Usage="Microsoft.ML.Tokenizers.BertOptions.PaddingToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the padding token to use.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveNonSpacingMarks">
      <MemberSignature Language="C#" Value="public bool RemoveNonSpacingMarks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RemoveNonSpacingMarks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Tokenizers.BertOptions.RemoveNonSpacingMarks" />
      <MemberSignature Language="VB.NET" Value="Public Property RemoveNonSpacingMarks As Boolean" />
      <MemberSignature Language="F#" Value="member this.RemoveNonSpacingMarks : bool with get, set" Usage="Microsoft.ML.Tokenizers.BertOptions.RemoveNonSpacingMarks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to remove non-spacing marks.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparatorToken">
      <MemberSignature Language="C#" Value="public string SeparatorToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SeparatorToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Tokenizers.BertOptions.SeparatorToken" />
      <MemberSignature Language="VB.NET" Value="Public Property SeparatorToken As String" />
      <MemberSignature Language="F#" Value="member this.SeparatorToken : string with get, set" Usage="Microsoft.ML.Tokenizers.BertOptions.SeparatorToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the separator token to use.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitOnSpecialTokens">
      <MemberSignature Language="C#" Value="public bool SplitOnSpecialTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SplitOnSpecialTokens" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Tokenizers.BertOptions.SplitOnSpecialTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property SplitOnSpecialTokens As Boolean" />
      <MemberSignature Language="F#" Value="member this.SplitOnSpecialTokens : bool with get, set" Usage="Microsoft.ML.Tokenizers.BertOptions.SplitOnSpecialTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to split on special tokens.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
