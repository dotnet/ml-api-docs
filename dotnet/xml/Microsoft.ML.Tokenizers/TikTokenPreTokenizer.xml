<Type Name="TikTokenPreTokenizer" FullName="Microsoft.ML.Tokenizers.TikTokenPreTokenizer">
  <TypeSignature Language="C#" Value="public sealed class TikTokenPreTokenizer : Microsoft.ML.Tokenizers.PreTokenizer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TikTokenPreTokenizer extends Microsoft.ML.Tokenizers.PreTokenizer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Tokenizers.TikTokenPreTokenizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TikTokenPreTokenizer&#xA;Inherits PreTokenizer" />
  <TypeSignature Language="F#" Value="type TikTokenPreTokenizer = class&#xA;    inherit PreTokenizer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Tokenizers.PreTokenizer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The pre-tokenizer for Tiktoken tokenizer.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TikTokenPreTokenizer (System.Text.RegularExpressions.Regex regex, System.Collections.Generic.IReadOnlyDictionary&lt;string,int&gt;? specialTokensEncoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.RegularExpressions.Regex regex, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, int32&gt; specialTokensEncoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Tokenizers.TikTokenPreTokenizer.#ctor(System.Text.RegularExpressions.Regex,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (regex As Regex, specialTokensEncoder As IReadOnlyDictionary(Of String, Integer))" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Tokenizers.TikTokenPreTokenizer : System.Text.RegularExpressions.Regex * System.Collections.Generic.IReadOnlyDictionary&lt;string, int&gt; -&gt; Microsoft.ML.Tokenizers.TikTokenPreTokenizer" Usage="new Microsoft.ML.Tokenizers.TikTokenPreTokenizer (regex, specialTokensEncoder)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="regex" Type="System.Text.RegularExpressions.Regex" />
        <Parameter Name="specialTokensEncoder" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="regex">The regex to use for splitting the text into smaller tokens in the pre-tokenization process.</param>
        <param name="specialTokensEncoder">Encode the special token to Id.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ML.Tokenizers.TikTokenPreTokenizer" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When regex is null</exception>
      </Docs>
    </Member>
    <Member MemberName="PreTokenize">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Tokenizers.Split&gt; PreTokenize (string text, bool considerSpecialTokens = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.ML.Tokenizers.Split&gt; PreTokenize(string text, bool considerSpecialTokens) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Tokenizers.TikTokenPreTokenizer.PreTokenize(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function PreTokenize (text As String, Optional considerSpecialTokens As Boolean = true) As IEnumerable(Of Split)" />
      <MemberSignature Language="F#" Value="override this.PreTokenize : string * bool -&gt; seq&lt;Microsoft.ML.Tokenizers.Split&gt;" Usage="tikTokenPreTokenizer.PreTokenize (text, considerSpecialTokens)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Tokenizers.Split&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="considerSpecialTokens" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">The string to split into tokens.</param>
        <param name="considerSpecialTokens">Indicates whether to consider the special tokens.</param>
        <summary>
            Splits the given string in multiple substrings at the word boundary, keeping track of the offsets of said substrings from the original string.
            </summary>
        <returns>The list of the splits containing the tokens and the token's offsets to the original string.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
