<Type Name="Model" FullName="Microsoft.ML.Tokenizers.Model">
  <TypeSignature Language="C#" Value="public abstract class Model" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Model extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Tokenizers.Model" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Model" />
  <TypeSignature Language="F#" Value="type Model = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a model used during Tokenization (like BPE or Word Piece or Unigram).
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Model ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Tokenizers.Model.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrainer">
      <MemberSignature Language="C#" Value="public abstract Microsoft.ML.Tokenizers.Trainer? GetTrainer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Tokenizers.Trainer GetTrainer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Tokenizers.Model.GetTrainer" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTrainer () As Trainer" />
      <MemberSignature Language="F#" Value="abstract member GetTrainer : unit -&gt; Microsoft.ML.Tokenizers.Trainer" Usage="model.GetTrainer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Tokenizers.Trainer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets a trainer object to use in training the model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVocab">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IReadOnlyDictionary&lt;string,int&gt; GetVocab ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, int32&gt; GetVocab() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Tokenizers.Model.GetVocab" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetVocab () As IReadOnlyDictionary(Of String, Integer)" />
      <MemberSignature Language="F#" Value="abstract member GetVocab : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;string, int&gt;" Usage="model.GetVocab " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the dictionary mapping tokens to Ids.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVocabSize">
      <MemberSignature Language="C#" Value="public abstract int GetVocabSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetVocabSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Tokenizers.Model.GetVocabSize" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetVocabSize () As Integer" />
      <MemberSignature Language="F#" Value="abstract member GetVocabSize : unit -&gt; int" Usage="model.GetVocabSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the dictionary size that map tokens to Ids.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdToToken">
      <MemberSignature Language="C#" Value="public abstract string? IdToToken (int id, bool skipSpecialTokens = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string IdToToken(int32 id, bool skipSpecialTokens) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Tokenizers.Model.IdToToken(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IdToToken (id As Integer, Optional skipSpecialTokens As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="abstract member IdToToken : int * bool -&gt; string" Usage="model.IdToToken (id, skipSpecialTokens)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="skipSpecialTokens" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="id">The Id to map to the token.</param>
        <param name="skipSpecialTokens">Indicate if want to skip the special tokens during the decoding.</param>
        <summary>
            Map the tokenized Id to the token.
            </summary>
        <returns>The mapped token of the Id.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public abstract string[] Save (string path, string? prefix = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] Save(string path, string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Tokenizers.Model.Save(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Save (path As String, Optional prefix As String = Nothing) As String()" />
      <MemberSignature Language="F#" Value="abstract member Save : string * string -&gt; string[]" Usage="model.Save (path, prefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The file system path to store the generated files at.</param>
        <param name="prefix">Optional prefix for the generated file names.</param>
        <summary>
            Save the model data into the vocabulary and merges files.
            </summary>
        <returns>The list of all saved files.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tokenize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IReadOnlyList&lt;Microsoft.ML.Tokenizers.Token&gt; Tokenize (string sequence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.ML.Tokenizers.Token&gt; Tokenize(string sequence) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Tokenizers.Model.Tokenize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Tokenize (sequence As String) As IReadOnlyList(Of Token)" />
      <MemberSignature Language="F#" Value="abstract member Tokenize : string -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.ML.Tokenizers.Token&gt;" Usage="model.Tokenize sequence" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.ML.Tokenizers.Token&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sequence">The sequence to tokenize.</param>
        <summary>
            Tokenize a sequence string to a list of tokens.
            </summary>
        <returns>The list of tokens generated from the sequence tokenization.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenToId">
      <MemberSignature Language="C#" Value="public abstract int? TokenToId (string token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;int32&gt; TokenToId(string token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Tokenizers.Model.TokenToId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TokenToId (token As String) As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="abstract member TokenToId : string -&gt; Nullable&lt;int&gt;" Usage="model.TokenToId token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">The token to map to the Id.</param>
        <summary>
            Map the token to tokenized Id.
            </summary>
        <returns>The mapped Id of the token.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
