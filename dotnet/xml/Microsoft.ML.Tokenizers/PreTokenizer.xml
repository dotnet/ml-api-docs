<Type Name="PreTokenizer" FullName="Microsoft.ML.Tokenizers.PreTokenizer">
  <TypeSignature Language="C#" Value="public abstract class PreTokenizer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PreTokenizer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Tokenizers.PreTokenizer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PreTokenizer" />
  <TypeSignature Language="F#" Value="type PreTokenizer = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Base class for all pre-tokenizers classes.
            The PreTokenizer is in charge of doing the pre-segmentation step.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PreTokenizer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Tokenizers.PreTokenizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreTokenize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IReadOnlyList&lt;Microsoft.ML.Tokenizers.Split&gt; PreTokenize (string sentence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.ML.Tokenizers.Split&gt; PreTokenize(string sentence) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Tokenizers.PreTokenizer.PreTokenize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function PreTokenize (sentence As String) As IReadOnlyList(Of Split)" />
      <MemberSignature Language="F#" Value="abstract member PreTokenize : string -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.ML.Tokenizers.Split&gt;" Usage="preTokenizer.PreTokenize sentence" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.ML.Tokenizers.Split&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sentence" Type="System.String" Index="0" FrameworkAlternate="ml-dotnet;ml-dotnet-2.0.0" />
      </Parameters>
      <Docs>
        <param name="sentence">The string to split into tokens.</param>
        <summary>
            Splits the given string in multiple substrings at the word boundary, keeping track of the offsets of said substrings from the original string.
            </summary>
        <returns>The list of the splits containing the tokens and the token's offsets to the original string.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreTokenize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Tokenizers.Split&gt; PreTokenize (string text, bool considerSpecialTokens = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.ML.Tokenizers.Split&gt; PreTokenize(string text, bool considerSpecialTokens) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Tokenizers.PreTokenizer.PreTokenize(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function PreTokenize (text As String, Optional considerSpecialTokens As Boolean = true) As IEnumerable(Of Split)" />
      <MemberSignature Language="F#" Value="abstract member PreTokenize : string * bool -&gt; seq&lt;Microsoft.ML.Tokenizers.Split&gt;" Usage="preTokenizer.PreTokenize (text, considerSpecialTokens)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.ML.Tokenizers.Split&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="ml-dotnet-preview" />
        <Parameter Name="considerSpecialTokens" Type="System.Boolean" Index="1" FrameworkAlternate="ml-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="text">The string to split into tokens.</param>
        <param name="considerSpecialTokens">Indicates whether to consider the special tokens.</param>
        <summary>
            Splits the given string in multiple substrings at the word boundary, keeping track of the offsets of said substrings from the original string.
            </summary>
        <returns>The list of the splits containing the tokens and the token's offsets to the original string.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
