<Type Name="NasBertEncoder" FullName="Microsoft.ML.TorchSharp.NasBert.Models.NasBertEncoder">
  <TypeSignature Language="C#" Value="public sealed class NasBertEncoder : Microsoft.ML.TorchSharp.NasBert.Models.TransformerEncoder, TorchSharp.torch.nn.IModule&lt;TorchSharp.torch.Tensor,TorchSharp.torch.Tensor,TorchSharp.torch.Tensor,TorchSharp.torch.Tensor&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NasBertEncoder extends Microsoft.ML.TorchSharp.NasBert.Models.TransformerEncoder implements class TorchSharp.torch/nn/IModule`4&lt;class TorchSharp.torch/Tensor, class TorchSharp.torch/Tensor, class TorchSharp.torch/Tensor, class TorchSharp.torch/Tensor&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.TorchSharp.NasBert.Models.NasBertEncoder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NasBertEncoder&#xA;Inherits TransformerEncoder&#xA;Implements torch.nn.IModule(Of torch.Tensor, torch.Tensor, torch.Tensor, torch.Tensor)" />
  <TypeSignature Language="F#" Value="type NasBertEncoder = class&#xA;    inherit TransformerEncoder&#xA;    interface torch.nn.IModule&lt;torch.Tensor, torch.Tensor, torch.Tensor, torch.Tensor&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.TorchSharp.NasBert.Models.TransformerEncoder</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>TorchSharp.torch+nn+IModule&lt;TorchSharp.torch+Tensor,TorchSharp.torch+Tensor,TorchSharp.torch+Tensor,TorchSharp.torch+Tensor&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NasBertEncoder (int paddingIdx, int vocabSize, double dropout = 0.100000001490116, double attentionDropout = 0.100000001490116, double activationDropout = 0.100000001490116, string activationFn = &quot;relu&quot;, bool dynamicDropout = false, bool addBiasKv = false, bool addZeroAttention = false, int maxSeqLen = 256, bool learnedPositionEmbedding = true, int embedSize = -1, int? embedScale = default, System.Collections.Generic.IList&lt;int&gt; arches = default, bool usePositionEmbedding = true, bool offsetPositionsByPadding = true, int numSegments = 2, bool encoderNormalizeBefore = false, int numEncoderLayers = 6, bool applyBertInit = false, bool freezeEmbeddings = false, bool freezeLayers = false, bool freezeTransfer = false, int nTransLayersToFreeze = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 paddingIdx, int32 vocabSize, float64 dropout, float64 attentionDropout, float64 activationDropout, string activationFn, bool dynamicDropout, bool addBiasKv, bool addZeroAttention, int32 maxSeqLen, bool learnedPositionEmbedding, int32 embedSize, valuetype System.Nullable`1&lt;int32&gt; embedScale, class System.Collections.Generic.IList`1&lt;int32&gt; arches, bool usePositionEmbedding, bool offsetPositionsByPadding, int32 numSegments, bool encoderNormalizeBefore, int32 numEncoderLayers, bool applyBertInit, bool freezeEmbeddings, bool freezeLayers, bool freezeTransfer, int32 nTransLayersToFreeze) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.NasBert.Models.NasBertEncoder.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Double,System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Nullable{System.Int32},System.Collections.Generic.IList{System.Int32},System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paddingIdx As Integer, vocabSize As Integer, Optional dropout As Double = 0.100000001490116, Optional attentionDropout As Double = 0.100000001490116, Optional activationDropout As Double = 0.100000001490116, Optional activationFn As String = &quot;relu&quot;, Optional dynamicDropout As Boolean = false, Optional addBiasKv As Boolean = false, Optional addZeroAttention As Boolean = false, Optional maxSeqLen As Integer = 256, Optional learnedPositionEmbedding As Boolean = true, Optional embedSize As Integer = -1, Optional embedScale As Nullable(Of Integer) = Nothing, Optional arches As IList(Of Integer) = Nothing, Optional usePositionEmbedding As Boolean = true, Optional offsetPositionsByPadding As Boolean = true, Optional numSegments As Integer = 2, Optional encoderNormalizeBefore As Boolean = false, Optional numEncoderLayers As Integer = 6, Optional applyBertInit As Boolean = false, Optional freezeEmbeddings As Boolean = false, Optional freezeLayers As Boolean = false, Optional freezeTransfer As Boolean = false, Optional nTransLayersToFreeze As Integer = 0)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.TorchSharp.NasBert.Models.NasBertEncoder : int * int * double * double * double * string * bool * bool * bool * int * bool * int * Nullable&lt;int&gt; * System.Collections.Generic.IList&lt;int&gt; * bool * bool * int * bool * int * bool * bool * bool * bool * int -&gt; Microsoft.ML.TorchSharp.NasBert.Models.NasBertEncoder" Usage="new Microsoft.ML.TorchSharp.NasBert.Models.NasBertEncoder (paddingIdx, vocabSize, dropout, attentionDropout, activationDropout, activationFn, dynamicDropout, addBiasKv, addZeroAttention, maxSeqLen, learnedPositionEmbedding, embedSize, embedScale, arches, usePositionEmbedding, offsetPositionsByPadding, numSegments, encoderNormalizeBefore, numEncoderLayers, applyBertInit, freezeEmbeddings, freezeLayers, freezeTransfer, nTransLayersToFreeze)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paddingIdx" Type="System.Int32" />
        <Parameter Name="vocabSize" Type="System.Int32" />
        <Parameter Name="dropout" Type="System.Double" />
        <Parameter Name="attentionDropout" Type="System.Double" />
        <Parameter Name="activationDropout" Type="System.Double" />
        <Parameter Name="activationFn" Type="System.String" />
        <Parameter Name="dynamicDropout" Type="System.Boolean" />
        <Parameter Name="addBiasKv" Type="System.Boolean" />
        <Parameter Name="addZeroAttention" Type="System.Boolean" />
        <Parameter Name="maxSeqLen" Type="System.Int32" />
        <Parameter Name="learnedPositionEmbedding" Type="System.Boolean" />
        <Parameter Name="embedSize" Type="System.Int32" />
        <Parameter Name="embedScale" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="arches" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="usePositionEmbedding" Type="System.Boolean" />
        <Parameter Name="offsetPositionsByPadding" Type="System.Boolean" />
        <Parameter Name="numSegments" Type="System.Int32" />
        <Parameter Name="encoderNormalizeBefore" Type="System.Boolean" />
        <Parameter Name="numEncoderLayers" Type="System.Int32" />
        <Parameter Name="applyBertInit" Type="System.Boolean" />
        <Parameter Name="freezeEmbeddings" Type="System.Boolean" />
        <Parameter Name="freezeLayers" Type="System.Boolean" />
        <Parameter Name="freezeTransfer" Type="System.Boolean" />
        <Parameter Name="nTransLayersToFreeze" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="paddingIdx">To be added.</param>
        <param name="vocabSize">To be added.</param>
        <param name="dropout">To be added.</param>
        <param name="attentionDropout">To be added.</param>
        <param name="activationDropout">To be added.</param>
        <param name="activationFn">To be added.</param>
        <param name="dynamicDropout">To be added.</param>
        <param name="addBiasKv">To be added.</param>
        <param name="addZeroAttention">To be added.</param>
        <param name="maxSeqLen">To be added.</param>
        <param name="learnedPositionEmbedding">To be added.</param>
        <param name="embedSize">To be added.</param>
        <param name="embedScale">To be added.</param>
        <param name="arches">To be added.</param>
        <param name="usePositionEmbedding">To be added.</param>
        <param name="offsetPositionsByPadding">To be added.</param>
        <param name="numSegments">To be added.</param>
        <param name="encoderNormalizeBefore">To be added.</param>
        <param name="numEncoderLayers">To be added.</param>
        <param name="applyBertInit">To be added.</param>
        <param name="freezeEmbeddings">To be added.</param>
        <param name="freezeLayers">To be added.</param>
        <param name="freezeTransfer">To be added.</param>
        <param name="nTransLayersToFreeze">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="call">
      <MemberSignature Language="C#" Value="public TorchSharp.torch.Tensor call (TorchSharp.torch.Tensor tokens, TorchSharp.torch.Tensor segmentLabels = default, TorchSharp.torch.Tensor positions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class TorchSharp.torch/Tensor call(class TorchSharp.torch/Tensor tokens, class TorchSharp.torch/Tensor segmentLabels, class TorchSharp.torch/Tensor positions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.NasBert.Models.NasBertEncoder.call(TorchSharp.torch.Tensor,TorchSharp.torch.Tensor,TorchSharp.torch.Tensor)" />
      <MemberSignature Language="VB.NET" Value="Public Function call (tokens As torch.Tensor, Optional segmentLabels As torch.Tensor = Nothing, Optional positions As torch.Tensor = Nothing) As torch.Tensor" />
      <MemberSignature Language="F#" Value="abstract member call : TorchSharp.torch.Tensor * TorchSharp.torch.Tensor * TorchSharp.torch.Tensor -&gt; TorchSharp.torch.Tensor&#xA;override this.call : TorchSharp.torch.Tensor * TorchSharp.torch.Tensor * TorchSharp.torch.Tensor -&gt; TorchSharp.torch.Tensor" Usage="nasBertEncoder.call (tokens, segmentLabels, positions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:TorchSharp.torch.nn.IModule`4.call(`0,`1,`2)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TorchSharp.torch+Tensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokens" Type="TorchSharp.torch+Tensor" />
        <Parameter Name="segmentLabels" Type="TorchSharp.torch+Tensor" />
        <Parameter Name="positions" Type="TorchSharp.torch+Tensor" />
      </Parameters>
      <Docs>
        <param name="tokens">To be added.</param>
        <param name="segmentLabels">To be added.</param>
        <param name="positions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseLayerNormTraining">
      <MemberSignature Language="C#" Value="public void CloseLayerNormTraining ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseLayerNormTraining() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.NasBert.Models.NasBertEncoder.CloseLayerNormTraining" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseLayerNormTraining ()" />
      <MemberSignature Language="F#" Value="member this.CloseLayerNormTraining : unit -&gt; unit" Usage="nasBertEncoder.CloseLayerNormTraining " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.NasBert.Models.NasBertEncoder.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="nasBertEncoder.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenEmbeddingMatrix">
      <MemberSignature Language="C#" Value="public TorchSharp.Modules.Parameter TokenEmbeddingMatrix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class TorchSharp.Modules.Parameter TokenEmbeddingMatrix" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.TorchSharp.NasBert.Models.NasBertEncoder.TokenEmbeddingMatrix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TokenEmbeddingMatrix As Parameter" />
      <MemberSignature Language="F#" Value="member this.TokenEmbeddingMatrix : TorchSharp.Modules.Parameter" Usage="Microsoft.ML.TorchSharp.NasBert.Models.NasBertEncoder.TokenEmbeddingMatrix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TorchSharp.Modules.Parameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
