<Type Name="TimeSeriesCatalog" FullName="Microsoft.ML.TimeSeriesCatalog">
  <TypeSignature Language="C#" Value="public static class TimeSeriesCatalog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TimeSeriesCatalog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.TimeSeriesCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Module TimeSeriesCatalog" />
  <TypeSignature Language="F#" Value="type TimeSeriesCatalog = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DetectChangePointBySsa">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.TimeSeries.SsaChangePointEstimator DetectChangePointBySsa (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName, int confidence, int changeHistoryLength, int trainingWindowSize, int seasonalityWindowSize, Microsoft.ML.Transforms.TimeSeries.ErrorFunction errorFunction = Microsoft.ML.Transforms.TimeSeries.ErrorFunction.SignedDifference, Microsoft.ML.Transforms.TimeSeries.MartingaleType martingale = Microsoft.ML.Transforms.TimeSeries.MartingaleType.Power, double eps = 0.1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.TimeSeries.SsaChangePointEstimator DetectChangePointBySsa(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName, int32 confidence, int32 changeHistoryLength, int32 trainingWindowSize, int32 seasonalityWindowSize, valuetype Microsoft.ML.Transforms.TimeSeries.ErrorFunction errorFunction, valuetype Microsoft.ML.Transforms.TimeSeries.MartingaleType martingale, float64 eps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TimeSeriesCatalog.DetectChangePointBySsa(Microsoft.ML.TransformsCatalog,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.ML.Transforms.TimeSeries.ErrorFunction,Microsoft.ML.Transforms.TimeSeries.MartingaleType,System.Double)" />
      <MemberSignature Language="F#" Value="static member DetectChangePointBySsa : Microsoft.ML.TransformsCatalog * string * string * int * int * int * int * Microsoft.ML.Transforms.TimeSeries.ErrorFunction * Microsoft.ML.Transforms.TimeSeries.MartingaleType * double -&gt; Microsoft.ML.Transforms.TimeSeries.SsaChangePointEstimator" Usage="Microsoft.ML.TimeSeriesCatalog.DetectChangePointBySsa (catalog, outputColumnName, inputColumnName, confidence, changeHistoryLength, trainingWindowSize, seasonalityWindowSize, errorFunction, martingale, eps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.TimeSeries.SsaChangePointEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="confidence" Type="System.Int32" />
        <Parameter Name="changeHistoryLength" Type="System.Int32" />
        <Parameter Name="trainingWindowSize" Type="System.Int32" />
        <Parameter Name="seasonalityWindowSize" Type="System.Int32" />
        <Parameter Name="errorFunction" Type="Microsoft.ML.Transforms.TimeSeries.ErrorFunction" />
        <Parameter Name="martingale" Type="Microsoft.ML.Transforms.TimeSeries.MartingaleType" />
        <Parameter Name="eps" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.
            Column is a vector of type double and size 4. The vector contains Alert, Raw Score, P-Value and Martingale score as first four values.</param>
        <param name="inputColumnName">Name of column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="confidence">The confidence for change point detection in the range [0, 100].</param>
        <param name="changeHistoryLength">The size of the sliding window for computing the p-value.</param>
        <param name="trainingWindowSize">The number of points from the beginning of the sequence used for training.</param>
        <param name="seasonalityWindowSize">An upper bound on the largest relevant seasonality in the input time-series.</param>
        <param name="errorFunction">The function used to compute the error between the expected and the observed value.</param>
        <param name="martingale">The martingale used for scoring.</param>
        <param name="eps">The epsilon parameter for the Power martingale.</param>
        <summary>
            Create a new instance of <see cref="T:Microsoft.ML.Transforms.TimeSeries.SsaChangePointEstimator" /> for detecting a change in a time series signal
            using <a href="https://en.wikipedia.org/wiki/Singular_spectrum_analysis">Singular Spectrum Analysis (SSA)</a>.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[DetectChangePointBySsa](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/TimeSeries/DetectChangePointBySsa.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="DetectIidChangePoint">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.TimeSeries.IidChangePointEstimator DetectIidChangePoint (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName, int confidence, int changeHistoryLength, Microsoft.ML.Transforms.TimeSeries.MartingaleType martingale = Microsoft.ML.Transforms.TimeSeries.MartingaleType.Power, double eps = 0.1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.TimeSeries.IidChangePointEstimator DetectIidChangePoint(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName, int32 confidence, int32 changeHistoryLength, valuetype Microsoft.ML.Transforms.TimeSeries.MartingaleType martingale, float64 eps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TimeSeriesCatalog.DetectIidChangePoint(Microsoft.ML.TransformsCatalog,System.String,System.String,System.Int32,System.Int32,Microsoft.ML.Transforms.TimeSeries.MartingaleType,System.Double)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DetectIidChangePoint (catalog As TransformsCatalog, outputColumnName As String, inputColumnName As String, confidence As Integer, changeHistoryLength As Integer, Optional martingale As MartingaleType = Microsoft.ML.Transforms.TimeSeries.MartingaleType.Power, Optional eps As Double = 0.1) As IidChangePointEstimator" />
      <MemberSignature Language="F#" Value="static member DetectIidChangePoint : Microsoft.ML.TransformsCatalog * string * string * int * int * Microsoft.ML.Transforms.TimeSeries.MartingaleType * double -&gt; Microsoft.ML.Transforms.TimeSeries.IidChangePointEstimator" Usage="Microsoft.ML.TimeSeriesCatalog.DetectIidChangePoint (catalog, outputColumnName, inputColumnName, confidence, changeHistoryLength, martingale, eps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.TimeSeries.IidChangePointEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="confidence" Type="System.Int32" />
        <Parameter Name="changeHistoryLength" Type="System.Int32" />
        <Parameter Name="martingale" Type="Microsoft.ML.Transforms.TimeSeries.MartingaleType" />
        <Parameter Name="eps" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.
            Column is a vector of type double and size 4. The vector contains Alert, Raw Score, P-Value and Martingale score as first four values.</param>
        <param name="inputColumnName">Name of column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="confidence">The confidence for change point detection in the range [0, 100].</param>
        <param name="changeHistoryLength">The length of the sliding window on p-values for computing the martingale score.</param>
        <param name="martingale">The martingale used for scoring.</param>
        <param name="eps">The epsilon parameter for the Power martingale.</param>
        <summary>
            Create a new instance of <see cref="T:Microsoft.ML.Transforms.TimeSeries.IidChangePointEstimator" /> that detects a change of in an
            <a href="https://en.wikipedia.org/wiki/Independent_and_identically_distributed_random_variables"> independent identically distributed (i.i.d.)</a> time series.
            Detection is based on adaptive kernel density estimations and martingale scores.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[DetectIidChangePoint](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/TimeSeries/DetectIidChangePoint.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="DetectIidSpike">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.TimeSeries.IidSpikeEstimator DetectIidSpike (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName, int confidence, int pvalueHistoryLength, Microsoft.ML.Transforms.TimeSeries.AnomalySide side = Microsoft.ML.Transforms.TimeSeries.AnomalySide.TwoSided);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.TimeSeries.IidSpikeEstimator DetectIidSpike(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName, int32 confidence, int32 pvalueHistoryLength, valuetype Microsoft.ML.Transforms.TimeSeries.AnomalySide side) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TimeSeriesCatalog.DetectIidSpike(Microsoft.ML.TransformsCatalog,System.String,System.String,System.Int32,System.Int32,Microsoft.ML.Transforms.TimeSeries.AnomalySide)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DetectIidSpike (catalog As TransformsCatalog, outputColumnName As String, inputColumnName As String, confidence As Integer, pvalueHistoryLength As Integer, Optional side As AnomalySide = Microsoft.ML.Transforms.TimeSeries.AnomalySide.TwoSided) As IidSpikeEstimator" />
      <MemberSignature Language="F#" Value="static member DetectIidSpike : Microsoft.ML.TransformsCatalog * string * string * int * int * Microsoft.ML.Transforms.TimeSeries.AnomalySide -&gt; Microsoft.ML.Transforms.TimeSeries.IidSpikeEstimator" Usage="Microsoft.ML.TimeSeriesCatalog.DetectIidSpike (catalog, outputColumnName, inputColumnName, confidence, pvalueHistoryLength, side)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.TimeSeries.IidSpikeEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="confidence" Type="System.Int32" />
        <Parameter Name="pvalueHistoryLength" Type="System.Int32" />
        <Parameter Name="side" Type="Microsoft.ML.Transforms.TimeSeries.AnomalySide" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" /></param>
        <param name="inputColumnName">Name of column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="confidence">The confidence for spike detection in the range [0, 100].</param>
        <param name="pvalueHistoryLength">The size of the sliding window for computing the p-value.</param>
        <param name="side">The argument that determines whether to detect positive or negative anomalies, or both.</param>
        <summary>
            Create a new instance of <see cref="T:Microsoft.ML.Transforms.TimeSeries.IidSpikeEstimator" /> that detects a spike in an
            <a href="https://en.wikipedia.org/wiki/Independent_and_identically_distributed_random_variables">independent identically distributed (i.i.d.)</a> time series.
            Detection is based on adaptive kernel density estimations and martingale scores.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[DetectIidSpike](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/TimeSeries/DetectIidSpike.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="DetectSpikeBySsa">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.TimeSeries.SsaSpikeEstimator DetectSpikeBySsa (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName, int confidence, int pvalueHistoryLength, int trainingWindowSize, int seasonalityWindowSize, Microsoft.ML.Transforms.TimeSeries.AnomalySide side = Microsoft.ML.Transforms.TimeSeries.AnomalySide.TwoSided, Microsoft.ML.Transforms.TimeSeries.ErrorFunction errorFunction = Microsoft.ML.Transforms.TimeSeries.ErrorFunction.SignedDifference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.TimeSeries.SsaSpikeEstimator DetectSpikeBySsa(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName, int32 confidence, int32 pvalueHistoryLength, int32 trainingWindowSize, int32 seasonalityWindowSize, valuetype Microsoft.ML.Transforms.TimeSeries.AnomalySide side, valuetype Microsoft.ML.Transforms.TimeSeries.ErrorFunction errorFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TimeSeriesCatalog.DetectSpikeBySsa(Microsoft.ML.TransformsCatalog,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.ML.Transforms.TimeSeries.AnomalySide,Microsoft.ML.Transforms.TimeSeries.ErrorFunction)" />
      <MemberSignature Language="F#" Value="static member DetectSpikeBySsa : Microsoft.ML.TransformsCatalog * string * string * int * int * int * int * Microsoft.ML.Transforms.TimeSeries.AnomalySide * Microsoft.ML.Transforms.TimeSeries.ErrorFunction -&gt; Microsoft.ML.Transforms.TimeSeries.SsaSpikeEstimator" Usage="Microsoft.ML.TimeSeriesCatalog.DetectSpikeBySsa (catalog, outputColumnName, inputColumnName, confidence, pvalueHistoryLength, trainingWindowSize, seasonalityWindowSize, side, errorFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.TimeSeries.SsaSpikeEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="confidence" Type="System.Int32" />
        <Parameter Name="pvalueHistoryLength" Type="System.Int32" />
        <Parameter Name="trainingWindowSize" Type="System.Int32" />
        <Parameter Name="seasonalityWindowSize" Type="System.Int32" />
        <Parameter Name="side" Type="Microsoft.ML.Transforms.TimeSeries.AnomalySide" />
        <Parameter Name="errorFunction" Type="Microsoft.ML.Transforms.TimeSeries.ErrorFunction" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="inputColumnName">Name of column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.
            <param name="confidence">The confidence for spike detection in the range [0, 100].</param><param name="pvalueHistoryLength">The size of the sliding window for computing the p-value.</param><param name="trainingWindowSize">The number of points from the beginning of the sequence used for training.</param><param name="seasonalityWindowSize">An upper bound on the largest relevant seasonality in the input time-series.</param>
            The vector contains Alert, Raw Score, P-Value as first three values.</param>
        <param name="confidence">To be added.</param>
        <param name="pvalueHistoryLength">To be added.</param>
        <param name="trainingWindowSize">To be added.</param>
        <param name="seasonalityWindowSize">To be added.</param>
        <param name="side">The argument that determines whether to detect positive or negative anomalies, or both.</param>
        <param name="errorFunction">The function used to compute the error between the expected and the observed value.</param>
        <summary>
            Create a new instance of <see cref="T:Microsoft.ML.Transforms.TimeSeries.SsaSpikeEstimator" /> for detecting a spike in a time series signal
            using <a href="https://en.wikipedia.org/wiki/Singular_spectrum_analysis">Singular Spectrum Analysis (SSA)</a>.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[DetectSpikeBySsa](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/TimeSeries/DetectSpikeBySsa.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>