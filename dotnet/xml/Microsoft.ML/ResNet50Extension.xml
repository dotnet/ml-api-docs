<Type Name="ResNet50Extension" FullName="Microsoft.ML.ResNet50Extension">
  <TypeSignature Language="C#" Value="public static class ResNet50Extension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ResNet50Extension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.ResNet50Extension" />
  <TypeSignature Language="VB.NET" Value="Public Module ResNet50Extension" />
  <TypeSignature Language="F#" Value="type ResNet50Extension = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.DnnImageFeaturizer.ResNet50</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This is an extension method to be used with the <see cref="T:Microsoft.ML.Transforms.Onnx.DnnImageFeaturizerEstimator" /> in order to use a pretrained ResNet50 model.
            The NuGet containing this extension is also guaranteed to include the binary model file.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ResNet50">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Data.EstimatorChain&lt;Microsoft.ML.Transforms.ColumnCopyingTransformer&gt; ResNet50 (this Microsoft.ML.Transforms.Onnx.DnnImageModelSelector dnnModelContext, Microsoft.ML.Runtime.IHostEnvironment env, string outputColumnName, string inputColumnName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Data.EstimatorChain`1&lt;class Microsoft.ML.Transforms.ColumnCopyingTransformer&gt; ResNet50(class Microsoft.ML.Transforms.Onnx.DnnImageModelSelector dnnModelContext, class Microsoft.ML.Runtime.IHostEnvironment env, string outputColumnName, string inputColumnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.ResNet50Extension.ResNet50(Microsoft.ML.Transforms.Onnx.DnnImageModelSelector,Microsoft.ML.Runtime.IHostEnvironment,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ResNet50 (dnnModelContext As DnnImageModelSelector, env As IHostEnvironment, outputColumnName As String, inputColumnName As String) As EstimatorChain(Of ColumnCopyingTransformer)" />
      <MemberSignature Language="F#" Value="static member ResNet50 : Microsoft.ML.Transforms.Onnx.DnnImageModelSelector * Microsoft.ML.Runtime.IHostEnvironment * string * string -&gt; Microsoft.ML.Data.EstimatorChain&lt;Microsoft.ML.Transforms.ColumnCopyingTransformer&gt;" Usage="Microsoft.ML.ResNet50Extension.ResNet50 (dnnModelContext, env, outputColumnName, inputColumnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.DnnImageFeaturizer.ResNet50</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.EstimatorChain&lt;Microsoft.ML.Transforms.ColumnCopyingTransformer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dnnModelContext" Type="Microsoft.ML.Transforms.Onnx.DnnImageModelSelector" RefType="this" />
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dnnModelContext">To be added.</param>
        <param name="env">To be added.</param>
        <param name="outputColumnName">To be added.</param>
        <param name="inputColumnName">To be added.</param>
        <summary>
            Returns an estimator chain with the two corresponding models (a preprocessing one and a main one) required for the ResNet pipeline.
            Also includes the renaming ColumnsCopyingTransforms required to be able to use arbitrary input and output column names.
            This assumes both of the models are in the same location as the file containing this method, which they will be if used through the NuGet.
            This should be the default way to use ResNet50 if importing the model from a NuGet.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResNet50">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Data.EstimatorChain&lt;Microsoft.ML.Transforms.ColumnCopyingTransformer&gt; ResNet50 (this Microsoft.ML.Transforms.Onnx.DnnImageModelSelector dnnModelContext, Microsoft.ML.Runtime.IHostEnvironment env, string outputColumnName, string inputColumnName, string modelDir);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Data.EstimatorChain`1&lt;class Microsoft.ML.Transforms.ColumnCopyingTransformer&gt; ResNet50(class Microsoft.ML.Transforms.Onnx.DnnImageModelSelector dnnModelContext, class Microsoft.ML.Runtime.IHostEnvironment env, string outputColumnName, string inputColumnName, string modelDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.ResNet50Extension.ResNet50(Microsoft.ML.Transforms.Onnx.DnnImageModelSelector,Microsoft.ML.Runtime.IHostEnvironment,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ResNet50 (dnnModelContext As DnnImageModelSelector, env As IHostEnvironment, outputColumnName As String, inputColumnName As String, modelDir As String) As EstimatorChain(Of ColumnCopyingTransformer)" />
      <MemberSignature Language="F#" Value="static member ResNet50 : Microsoft.ML.Transforms.Onnx.DnnImageModelSelector * Microsoft.ML.Runtime.IHostEnvironment * string * string * string -&gt; Microsoft.ML.Data.EstimatorChain&lt;Microsoft.ML.Transforms.ColumnCopyingTransformer&gt;" Usage="Microsoft.ML.ResNet50Extension.ResNet50 (dnnModelContext, env, outputColumnName, inputColumnName, modelDir)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.DnnImageFeaturizer.ResNet50</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.EstimatorChain&lt;Microsoft.ML.Transforms.ColumnCopyingTransformer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dnnModelContext" Type="Microsoft.ML.Transforms.Onnx.DnnImageModelSelector" RefType="this" />
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="modelDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dnnModelContext">To be added.</param>
        <param name="env">To be added.</param>
        <param name="outputColumnName">To be added.</param>
        <param name="inputColumnName">To be added.</param>
        <param name="modelDir">To be added.</param>
        <summary>
            This allows a custom model location to be specified. This is useful is a custom model is specified,
            or if the model is desired to be placed or shipped separately in a different folder from the main application. Note that because Onnx models
            must be in a directory all by themsleves for the OnnxTransformer to work, this method appends a ResNet50Onnx/ResNetPrepOnnx subdirectory
            to the passed in directory to prevent having to make that directory manually each time.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>