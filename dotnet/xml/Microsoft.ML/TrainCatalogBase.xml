<Type Name="TrainCatalogBase" FullName="Microsoft.ML.TrainCatalogBase">
  <TypeSignature Language="C#" Value="public abstract class TrainCatalogBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TrainCatalogBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.TrainCatalogBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TrainCatalogBase" />
  <TypeSignature Language="F#" Value="type TrainCatalogBase = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A training catalog is an object instantiable by a user to do various tasks relating to a particular
            "area" of machine learning. A subclass would represent a particular task in machine learning. The idea
            is that a user can instantiate that particular area, and get trainers and evaluators.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CrossValidateTrain">
      <MemberSignature Language="C#" Value="protected internal Microsoft.ML.TrainCatalogBase.CrossValidationResult[] CrossValidateTrain (Microsoft.Data.DataView.IDataView data, Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt; estimator, int numFolds, string samplingKeyColumn, Nullable&lt;uint&gt; seed = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance valuetype Microsoft.ML.TrainCatalogBase/CrossValidationResult[] CrossValidateTrain(class Microsoft.Data.DataView.IDataView data, class Microsoft.ML.IEstimator`1&lt;class Microsoft.ML.ITransformer&gt; estimator, int32 numFolds, string samplingKeyColumn, valuetype System.Nullable`1&lt;unsigned int32&gt; seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TrainCatalogBase.CrossValidateTrain(Microsoft.Data.DataView.IDataView,Microsoft.ML.IEstimator{Microsoft.ML.ITransformer},System.Int32,System.String,System.Nullable{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function CrossValidateTrain (data As IDataView, estimator As IEstimator(Of ITransformer), numFolds As Integer, samplingKeyColumn As String, Optional seed As Nullable(Of UInteger) = null) As TrainCatalogBase.CrossValidationResult()" />
      <MemberSignature Language="F#" Value="member this.CrossValidateTrain : Microsoft.Data.DataView.IDataView * Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt; * int * string * Nullable&lt;uint32&gt; -&gt; Microsoft.ML.TrainCatalogBase.CrossValidationResult[]" Usage="trainCatalogBase.CrossValidateTrain (data, estimator, numFolds, samplingKeyColumn, seed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TrainCatalogBase+CrossValidationResult[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Microsoft.Data.DataView.IDataView" />
        <Parameter Name="estimator" Type="Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt;" />
        <Parameter Name="numFolds" Type="System.Int32" />
        <Parameter Name="samplingKeyColumn" Type="System.String" />
        <Parameter Name="seed" Type="System.Nullable&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="estimator">To be added.</param>
        <param name="numFolds">To be added.</param>
        <param name="samplingKeyColumn">To be added.</param>
        <param name="seed">To be added.</param>
        <summary>
            Train the <paramref name="estimator" /> on <paramref name="numFolds" /> folds of the data sequentially.
            Return each model and each scored test dataset.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainTestSplit">
      <MemberSignature Language="C#" Value="public Microsoft.ML.TrainCatalogBase.TrainTestData TrainTestSplit (Microsoft.Data.DataView.IDataView data, double testFraction = 0.1, string samplingKeyColumn = null, Nullable&lt;uint&gt; seed = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.ML.TrainCatalogBase/TrainTestData TrainTestSplit(class Microsoft.Data.DataView.IDataView data, float64 testFraction, string samplingKeyColumn, valuetype System.Nullable`1&lt;unsigned int32&gt; seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TrainCatalogBase.TrainTestSplit(Microsoft.Data.DataView.IDataView,System.Double,System.String,System.Nullable{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Function TrainTestSplit (data As IDataView, Optional testFraction As Double = 0.1, Optional samplingKeyColumn As String = null, Optional seed As Nullable(Of UInteger) = null) As TrainCatalogBase.TrainTestData" />
      <MemberSignature Language="F#" Value="member this.TrainTestSplit : Microsoft.Data.DataView.IDataView * double * string * Nullable&lt;uint32&gt; -&gt; Microsoft.ML.TrainCatalogBase.TrainTestData" Usage="trainCatalogBase.TrainTestSplit (data, testFraction, samplingKeyColumn, seed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TrainCatalogBase+TrainTestData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Microsoft.Data.DataView.IDataView" />
        <Parameter Name="testFraction" Type="System.Double" />
        <Parameter Name="samplingKeyColumn" Type="System.String" />
        <Parameter Name="seed" Type="System.Nullable&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="data">The dataset to split.</param>
        <param name="testFraction">The fraction of data to go into the test set.</param>
        <param name="samplingKeyColumn">Name of a column to use for grouping rows. If two examples share the same value of the <paramref name="samplingKeyColumn" />,
            they are guaranteed to appear in the same subset (train or test). This can be used to ensure no label leakage from the train to the test set.
            If <see langword="null" /> no row grouping will be performed.</param>
        <param name="seed">Seed for the random number generator used to select rows for the train-test split.</param>
        <summary>
            Split the dataset into the train set and test set according to the given fraction.
            Respects the <paramref name="samplingKeyColumn" /> if provided.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>