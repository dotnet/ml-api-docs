<Type Name="NormalizerCatalog" FullName="Microsoft.ML.NormalizerCatalog">
  <TypeSignature Language="C#" Value="public static class NormalizerCatalog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NormalizerCatalog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.NormalizerCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Module NormalizerCatalog" />
  <TypeSignature Language="F#" Value="type NormalizerCatalog = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extensions for normalizer operations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.Normalizers.NormalizingEstimator Normalize (this Microsoft.ML.TransformsCatalog catalog, params Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.ColumnBase[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.Normalizers.NormalizingEstimator Normalize(class Microsoft.ML.TransformsCatalog catalog, class Microsoft.ML.Transforms.Normalizers.NormalizingEstimator/ColumnBase[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.NormalizerCatalog.Normalize(Microsoft.ML.TransformsCatalog,Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.ColumnBase[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Normalize (catalog As TransformsCatalog, ParamArray columns As NormalizingEstimator.ColumnBase()) As NormalizingEstimator" />
      <MemberSignature Language="F#" Value="static member Normalize : Microsoft.ML.TransformsCatalog * Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.ColumnBase[] -&gt; Microsoft.ML.Transforms.Normalizers.NormalizingEstimator" Usage="Microsoft.ML.NormalizerCatalog.Normalize (catalog, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Normalizers.NormalizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="columns" Type="Microsoft.ML.Transforms.Normalizers.NormalizingEstimator+ColumnBase[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">The transform catalog</param>
        <param name="columns">The normalization settings for all the columns</param>
        <summary>
            Normalize (rescale) columns according to specified custom parameters.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.Normalizers.NormalizingEstimator Normalize (this Microsoft.ML.TransformsCatalog catalog, Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.NormalizerMode mode, params ValueTuple&lt;string,string&gt;[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.Normalizers.NormalizingEstimator Normalize(class Microsoft.ML.TransformsCatalog catalog, valuetype Microsoft.ML.Transforms.Normalizers.NormalizingEstimator/NormalizerMode mode, valuetype System.ValueTuple`2&lt;string, string&gt;[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.NormalizerCatalog.Normalize(Microsoft.ML.TransformsCatalog,Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.NormalizerMode,System.ValueTuple{System.String,System.String}[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Normalize (catalog As TransformsCatalog, mode As NormalizingEstimator.NormalizerMode, ParamArray columns As ValueTuple(Of String, String)()) As NormalizingEstimator" />
      <MemberSignature Language="F#" Value="static member Normalize : Microsoft.ML.TransformsCatalog * Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.NormalizerMode * ValueTuple&lt;string, string&gt;[] -&gt; Microsoft.ML.Transforms.Normalizers.NormalizingEstimator" Usage="Microsoft.ML.NormalizerCatalog.Normalize (catalog, mode, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Normalizers.NormalizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="mode" Type="Microsoft.ML.Transforms.Normalizers.NormalizingEstimator+NormalizerMode" />
        <Parameter Name="columns" Type="System.ValueTuple&lt;System.String,System.String&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "input", "output" })</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">The transform catalog</param>
        <param name="mode">The <see cref="T:Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.NormalizerMode" /> used to map the old values to the new ones. </param>
        <param name="columns">The pairs of input and output columns.</param>
        <summary>
            Normalize (rescale) several columns according to the specified <paramref name="mode" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[Normalize](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Normalizer.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.Normalizers.NormalizingEstimator Normalize (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName = null, Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.NormalizerMode mode = Microsoft.ML.Transforms.Normalizers.NormalizingEstimator+NormalizerMode.MinMax);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.Normalizers.NormalizingEstimator Normalize(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName, valuetype Microsoft.ML.Transforms.Normalizers.NormalizingEstimator/NormalizerMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.NormalizerCatalog.Normalize(Microsoft.ML.TransformsCatalog,System.String,System.String,Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.NormalizerMode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Normalize (catalog As TransformsCatalog, outputColumnName As String, Optional inputColumnName As String = null, Optional mode As NormalizingEstimator.NormalizerMode = Microsoft.ML.Transforms.Normalizers.NormalizingEstimator+NormalizerMode.MinMax) As NormalizingEstimator" />
      <MemberSignature Language="F#" Value="static member Normalize : Microsoft.ML.TransformsCatalog * string * string * Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.NormalizerMode -&gt; Microsoft.ML.Transforms.Normalizers.NormalizingEstimator" Usage="Microsoft.ML.NormalizerCatalog.Normalize (catalog, outputColumnName, inputColumnName, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Normalizers.NormalizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" Index="0" />
        <Parameter Name="outputColumnName" Type="System.String" Index="1" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="inputColumnName" Type="System.String" Index="2" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="mode" Type="Microsoft.ML.Transforms.Normalizers.NormalizingEstimator+NormalizerMode" Index="3" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform catalog</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="inputColumnName">Name of the column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="mode">The <see cref="T:Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.NormalizerMode" /> used to map the old values in the new scale. </param>
        <summary>
            Normalize (rescale) the column according to the specified <paramref name="mode" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[Normalize](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Normalizer.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>