<Type Name="ConversionsCatalog" FullName="Microsoft.ML.ConversionsCatalog">
  <TypeSignature Language="C#" Value="public static class ConversionsCatalog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ConversionsCatalog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.ConversionsCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Module ConversionsCatalog" />
  <TypeSignature Language="F#" Value="type ConversionsCatalog = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Collection of extension methods for <see cref="T:Microsoft.ML.TransformsCatalog" /> to create instances of
            key to binary vector mapping transformer components
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="MapKeyToBinaryVector">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.KeyToBinaryVectorMappingEstimator MapKeyToBinaryVector (this Microsoft.ML.TransformsCatalog.ConversionTransforms catalog, string outputColumnName, string inputColumnName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.KeyToBinaryVectorMappingEstimator MapKeyToBinaryVector(class Microsoft.ML.TransformsCatalog/ConversionTransforms catalog, string outputColumnName, string inputColumnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.ConversionsCatalog.MapKeyToBinaryVector(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function MapKeyToBinaryVector (catalog As TransformsCatalog.ConversionTransforms, outputColumnName As String, Optional inputColumnName As String = null) As KeyToBinaryVectorMappingEstimator" />
      <MemberSignature Language="F#" Value="static member MapKeyToBinaryVector : Microsoft.ML.TransformsCatalog.ConversionTransforms * string * string -&gt; Microsoft.ML.Transforms.KeyToBinaryVectorMappingEstimator" Usage="Microsoft.ML.ConversionsCatalog.MapKeyToBinaryVector (catalog, outputColumnName, inputColumnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.KeyToBinaryVectorMappingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog+ConversionTransforms" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="catalog">The categorical transform's catalog.</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.
            The data type is a known-size vector of <see cref="T:System.Single" /> representing the input value.</param>
        <param name="inputColumnName">Name of column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.
            The data type is a key or a known-size vector of keys.</param>
        <summary>
            Create a <see cref="T:Microsoft.ML.Transforms.KeyToBinaryVectorMappingEstimator" />, which converts key types to their corresponding binary representation of the original value.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[MapKeyToVector](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/Conversion/MapKeyToBinaryVector.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>