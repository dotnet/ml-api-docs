<Type Name="ConversionsCatalog" FullName="Microsoft.ML.ConversionsCatalog">
  <TypeSignature Language="C#" Value="public static class ConversionsCatalog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ConversionsCatalog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.ConversionsCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Module ConversionsCatalog" />
  <TypeSignature Language="F#" Value="type ConversionsCatalog = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extensions for the <see cref="T:Microsoft.ML.TransformsCatalog.ConversionTransforms" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="MapKeyToBinaryVector">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.Conversions.KeyToBinaryVectorMappingEstimator MapKeyToBinaryVector (this Microsoft.ML.TransformsCatalog.ConversionTransforms catalog, params Microsoft.ML.Transforms.Conversions.KeyToBinaryVectorMappingTransformer.ColumnInfo[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.Conversions.KeyToBinaryVectorMappingEstimator MapKeyToBinaryVector(class Microsoft.ML.TransformsCatalog/ConversionTransforms catalog, class Microsoft.ML.Transforms.Conversions.KeyToBinaryVectorMappingTransformer/ColumnInfo[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.ConversionsCatalog.MapKeyToBinaryVector(Microsoft.ML.TransformsCatalog.ConversionTransforms,Microsoft.ML.Transforms.Conversions.KeyToBinaryVectorMappingTransformer.ColumnInfo[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function MapKeyToBinaryVector (catalog As TransformsCatalog.ConversionTransforms, ParamArray columns As KeyToBinaryVectorMappingTransformer.ColumnInfo()) As KeyToBinaryVectorMappingEstimator" />
      <MemberSignature Language="F#" Value="static member MapKeyToBinaryVector : Microsoft.ML.TransformsCatalog.ConversionTransforms * Microsoft.ML.Transforms.Conversions.KeyToBinaryVectorMappingTransformer.ColumnInfo[] -&gt; Microsoft.ML.Transforms.Conversions.KeyToBinaryVectorMappingEstimator" Usage="Microsoft.ML.ConversionsCatalog.MapKeyToBinaryVector (catalog, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Conversions.KeyToBinaryVectorMappingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog+ConversionTransforms" RefType="this" />
        <Parameter Name="columns" Type="Microsoft.ML.Transforms.Conversions.KeyToBinaryVectorMappingTransformer+ColumnInfo[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">The categorical transform's catalog.</param>
        <param name="columns">The input column.</param>
        <summary>
             Convert the key types back to binary verctor.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapKeyToBinaryVector">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.Conversions.KeyToBinaryVectorMappingEstimator MapKeyToBinaryVector (this Microsoft.ML.TransformsCatalog.ConversionTransforms catalog, string inputColumn, string outputColumn = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.Conversions.KeyToBinaryVectorMappingEstimator MapKeyToBinaryVector(class Microsoft.ML.TransformsCatalog/ConversionTransforms catalog, string inputColumn, string outputColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.ConversionsCatalog.MapKeyToBinaryVector(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function MapKeyToBinaryVector (catalog As TransformsCatalog.ConversionTransforms, inputColumn As String, Optional outputColumn As String = null) As KeyToBinaryVectorMappingEstimator" />
      <MemberSignature Language="F#" Value="static member MapKeyToBinaryVector : Microsoft.ML.TransformsCatalog.ConversionTransforms * string * string -&gt; Microsoft.ML.Transforms.Conversions.KeyToBinaryVectorMappingEstimator" Usage="Microsoft.ML.ConversionsCatalog.MapKeyToBinaryVector (catalog, inputColumn, outputColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Conversions.KeyToBinaryVectorMappingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog+ConversionTransforms" RefType="this" />
        <Parameter Name="inputColumn" Type="System.String" />
        <Parameter Name="outputColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="catalog">The categorical transform's catalog.</param>
        <param name="inputColumn">The name of the input column of the transformation.</param>
        <param name="outputColumn">The name of the column produced by the transformation.</param>
        <summary>
             Convert the key types back to binary verctor.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>