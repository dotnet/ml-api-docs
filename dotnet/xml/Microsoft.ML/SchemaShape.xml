<Type Name="SchemaShape" FullName="Microsoft.ML.SchemaShape">
  <TypeSignature Language="C#" Value="public sealed class SchemaShape : System.Collections.Generic.IEnumerable&lt;Microsoft.ML.SchemaShape.Column&gt;, System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.ML.SchemaShape.Column&gt;, System.Collections.Generic.IReadOnlyList&lt;Microsoft.ML.SchemaShape.Column&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SchemaShape extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.ML.SchemaShape/Column&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype Microsoft.ML.SchemaShape/Column&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;valuetype Microsoft.ML.SchemaShape/Column&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.SchemaShape" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SchemaShape&#xA;Implements IEnumerable(Of SchemaShape.Column), IReadOnlyCollection(Of SchemaShape.Column), IReadOnlyList(Of SchemaShape.Column)" />
  <TypeSignature Language="F#" Value="type SchemaShape = class&#xA;    interface IReadOnlyList&lt;SchemaShape.Column&gt;&#xA;    interface seq&lt;SchemaShape.Column&gt;&#xA;    interface IEnumerable&#xA;    interface IReadOnlyCollection&lt;SchemaShape.Column&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Microsoft.ML.SchemaShape+Column&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.ML.SchemaShape+Column&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyList&lt;Microsoft.ML.SchemaShape+Column&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A set of 'requirements' to the incoming schema, as well as a set of 'promises' of the outgoing schema.
            This is more relaxed than the proper <see cref="T:Microsoft.ML.DataViewSchema" />, since it's only a subset of the columns,
            and also since it doesn't specify exact <see cref="T:Microsoft.ML.Data.DataViewType" />'s for vectors and keys.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SchemaShape (System.Collections.Generic.IEnumerable&lt;Microsoft.ML.SchemaShape.Column&gt; columns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.ML.SchemaShape/Column&gt; columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.SchemaShape.#ctor(System.Collections.Generic.IEnumerable{Microsoft.ML.SchemaShape.Column})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columns As IEnumerable(Of SchemaShape.Column))" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.SchemaShape : seq&lt;Microsoft.ML.SchemaShape.Column&gt; -&gt; Microsoft.ML.SchemaShape" Usage="new Microsoft.ML.SchemaShape columns" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columns" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.ML.SchemaShape+Column&gt;" />
      </Parameters>
      <Docs>
        <param name="columns">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.SchemaShape.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.ML.SchemaShape.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;Microsoft.ML.SchemaShape.Column&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype Microsoft.ML.SchemaShape/Column&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.SchemaShape.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of SchemaShape.Column)" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Microsoft.ML.SchemaShape.Column&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Microsoft.ML.SchemaShape.Column&gt;" Usage="schemaShape.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Microsoft.ML.SchemaShape+Column&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.ML.SchemaShape.Column this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.SchemaShape/Column Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.SchemaShape.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As SchemaShape.Column" />
      <MemberSignature Language="F#" Value="member this.Item(int) : Microsoft.ML.SchemaShape.Column" Usage="Microsoft.ML.SchemaShape.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.SchemaShape+Column</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.SchemaShape.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>