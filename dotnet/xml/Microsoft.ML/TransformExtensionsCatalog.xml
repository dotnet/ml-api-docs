<Type Name="TransformExtensionsCatalog" FullName="Microsoft.ML.TransformExtensionsCatalog">
  <TypeSignature Language="C#" Value="public static class TransformExtensionsCatalog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TransformExtensionsCatalog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.TransformExtensionsCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Module TransformExtensionsCatalog" />
  <TypeSignature Language="F#" Value="type TransformExtensionsCatalog = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for the <see cref="T:Microsoft.ML.TransformsCatalog" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Concatenate">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.ColumnConcatenatingEstimator Concatenate (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, params string[] inputColumnNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.ColumnConcatenatingEstimator Concatenate(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string[] inputColumnNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TransformExtensionsCatalog.Concatenate(Microsoft.ML.TransformsCatalog,System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Concatenate (catalog As TransformsCatalog, outputColumnName As String, ParamArray inputColumnNames As String()) As ColumnConcatenatingEstimator" />
      <MemberSignature Language="F#" Value="static member Concatenate : Microsoft.ML.TransformsCatalog * string * string[] -&gt; Microsoft.ML.Transforms.ColumnConcatenatingEstimator" Usage="Microsoft.ML.TransformExtensionsCatalog.Concatenate (catalog, outputColumnName, inputColumnNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.ColumnConcatenatingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnNames" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="ml-dotnet">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnNames" />.</param>
        <param name="inputColumnNames">Name of the columns to transform.</param>
        <summary>
            Concatenates columns together.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[Concat](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/Concatenate.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="CopyColumns">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.ColumnCopyingEstimator CopyColumns (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.ColumnCopyingEstimator CopyColumns(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TransformExtensionsCatalog.CopyColumns(Microsoft.ML.TransformsCatalog,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CopyColumns (catalog As TransformsCatalog, outputColumnName As String, inputColumnName As String) As ColumnCopyingEstimator" />
      <MemberSignature Language="F#" Value="static member CopyColumns : Microsoft.ML.TransformsCatalog * string * string -&gt; Microsoft.ML.Transforms.ColumnCopyingEstimator" Usage="Microsoft.ML.TransformExtensionsCatalog.CopyColumns (catalog, outputColumnName, inputColumnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.ColumnCopyingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="inputColumnName">Name of the columns to transform.</param>
        <summary>
            Copies the input column to another column named as specified in <paramref name="outputColumnName" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[CopyColumns](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/CopyColumns.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="DropColumns">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.ColumnSelectingEstimator DropColumns (this Microsoft.ML.TransformsCatalog catalog, params string[] columnNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.ColumnSelectingEstimator DropColumns(class Microsoft.ML.TransformsCatalog catalog, string[] columnNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TransformExtensionsCatalog.DropColumns(Microsoft.ML.TransformsCatalog,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DropColumns (catalog As TransformsCatalog, ParamArray columnNames As String()) As ColumnSelectingEstimator" />
      <MemberSignature Language="F#" Value="static member DropColumns : Microsoft.ML.TransformsCatalog * string[] -&gt; Microsoft.ML.Transforms.ColumnSelectingEstimator" Usage="Microsoft.ML.TransformExtensionsCatalog.DropColumns (catalog, columnNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.ColumnSelectingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="columnNames" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="ml-dotnet">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="columnNames">The array of column names to drop.</param>
        <summary>
            DropColumns is used to select a list of columns that user wants to drop from a given input. Any column not specified will
            be maintained in the output schema.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <see cref="M:Microsoft.ML.TransformExtensionsCatalog.DropColumns(Microsoft.ML.TransformsCatalog,System.String[])" /> is commonly used to remove unwanted columns from the schema if the dataset is going to be serialized or
            written out to a file. It is not actually necessary to drop unused columns before training or
            performing transforms, as <see cref="T:Microsoft.ML.IDataView" />'s lazy evaluation won't actually materialize those columns.
            In the case of serialization, every column in the schema will be written out. If you have columns
            that you don't want to save, you can use <see cref="M:Microsoft.ML.TransformExtensionsCatalog.DropColumns(Microsoft.ML.TransformsCatalog,System.String[])" /> to remove them from the schema.
            </remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[Concat](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/DropColumns.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SelectColumns">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.ColumnSelectingEstimator SelectColumns (this Microsoft.ML.TransformsCatalog catalog, params string[] columnNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.ColumnSelectingEstimator SelectColumns(class Microsoft.ML.TransformsCatalog catalog, string[] columnNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TransformExtensionsCatalog.SelectColumns(Microsoft.ML.TransformsCatalog,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectColumns (catalog As TransformsCatalog, ParamArray columnNames As String()) As ColumnSelectingEstimator" />
      <MemberSignature Language="F#" Value="static member SelectColumns : Microsoft.ML.TransformsCatalog * string[] -&gt; Microsoft.ML.Transforms.ColumnSelectingEstimator" Usage="Microsoft.ML.TransformExtensionsCatalog.SelectColumns (catalog, columnNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.ColumnSelectingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="columnNames" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="ml-dotnet">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="columnNames">The array of column names to keep.</param>
        <summary>
            Select a list of columns to keep in a given <see cref="T:Microsoft.ML.IDataView" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            <xref:Microsoft.ML.SelectColumns(Microsoft.ML.TransformsCatalog, string[])> operates on the schema of an input <xref:Microsoft.ML.IDataView>,
            dropping unselected columns from the schema.
            ]]></format>
        </remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[SelectColumns](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/SelectColumns.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SelectColumns">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.ColumnSelectingEstimator SelectColumns (this Microsoft.ML.TransformsCatalog catalog, string[] columnNames, bool keepHidden);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.ColumnSelectingEstimator SelectColumns(class Microsoft.ML.TransformsCatalog catalog, string[] columnNames, bool keepHidden) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TransformExtensionsCatalog.SelectColumns(Microsoft.ML.TransformsCatalog,System.String[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectColumns (catalog As TransformsCatalog, columnNames As String(), keepHidden As Boolean) As ColumnSelectingEstimator" />
      <MemberSignature Language="F#" Value="static member SelectColumns : Microsoft.ML.TransformsCatalog * string[] * bool -&gt; Microsoft.ML.Transforms.ColumnSelectingEstimator" Usage="Microsoft.ML.TransformExtensionsCatalog.SelectColumns (catalog, columnNames, keepHidden)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.ColumnSelectingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="columnNames" Type="System.String[]" />
        <Parameter Name="keepHidden" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="columnNames">The array of column names to keep.</param>
        <param name="keepHidden">If <see langword="true" /> will keep hidden columns and <see langword="false" /> will remove hidden columns.</param>
        <summary>
            Select a list of columns to keep in a given <see cref="T:Microsoft.ML.IDataView" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown">
            <see cref="M:Microsoft.ML.TransformExtensionsCatalog.SelectColumns(Microsoft.ML.TransformsCatalog,System.String[],System.Boolean)" /> operates on the schema of an input <see cref="T:Microsoft.ML.IDataView" />,
            either dropping unselected columns from the schema or keeping them but marking them as hidden in the schema. Keeping columns hidden
            is recommended when it is necessary to understand how the inputs of a pipeline map to outputs of the pipeline. This feature
            is useful, for example, in debugging a pipeline of transforms by allowing you to print out results from the middle of the pipeline.
            For more information on hidden columns, please refer to [IDataView Design Principles](~/../docs/samples/docs/code/IDataViewDesignPrinciples.md).
            </format>
        </remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[SelectColumns](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/SelectColumns.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>