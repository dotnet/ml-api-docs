<Type Name="IPredictionTransformer&lt;TModel&gt;" FullName="Microsoft.ML.IPredictionTransformer&lt;TModel&gt;">
  <TypeSignature Language="C#" Value="public interface IPredictionTransformer&lt;out TModel&gt; : Microsoft.ML.ITransformer where TModel : class" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPredictionTransformer`1&lt;class + TModel&gt; implements class Microsoft.ML.ICanSaveModel, class Microsoft.ML.ITransformer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.IPredictionTransformer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPredictionTransformer(Of Out TModel)&#xA;Implements ITransformer" />
  <TypeSignature Language="F#" Value="type IPredictionTransformer&lt;'Model (requires 'Model : null)&gt; = interface&#xA;    interface ITransformer&#xA;    interface ICanSaveModel" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TModel">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.ICanSaveModel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.ITransformer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TModel">The <see cref="T:Microsoft.ML.IPredictor" /> or <see cref="T:Microsoft.ML.Calibrators.ICalibrator" /> used for the data transformation.</typeparam>
    <summary>
            An interface for all the transformer that can transform data based on the <see cref="T:Microsoft.ML.IPredictor" /> field.
            The implemendations of this interface either have no feature column, or have more than one feature column, and cannot implement the
            <see cref="T:Microsoft.ML.ISingleFeaturePredictionTransformer`1" />, which most of the ML.Net tranformer implement.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public TModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TModel Model" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.IPredictionTransformer`1.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As TModel" />
      <MemberSignature Language="F#" Value="member this.Model : 'Model" Usage="Microsoft.ML.IPredictionTransformer&lt;'Model (requires 'Model : null)&gt;.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>