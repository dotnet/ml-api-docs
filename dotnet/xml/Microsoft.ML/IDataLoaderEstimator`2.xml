<Type Name="IDataLoaderEstimator&lt;TSource,TLoader&gt;" FullName="Microsoft.ML.IDataLoaderEstimator&lt;TSource,TLoader&gt;">
  <TypeSignature Language="C#" Value="public interface IDataLoaderEstimator&lt;in TSource,out TLoader&gt; where TLoader : IDataLoader&lt;in TSource&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataLoaderEstimator`2&lt;- TSource, (class Microsoft.ML.IDataLoader`1&lt;!TSource&gt;) + TLoader&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.IDataLoaderEstimator`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataLoaderEstimator(Of In TSource, Out TLoader)" />
  <TypeSignature Language="F#" Value="type IDataLoaderEstimator&lt;'Source, 'Loader (requires 'Loader :&gt; IDataLoader&lt;'Source&gt;)&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSource">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TLoader">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
        <InterfaceName>Microsoft.ML.IDataLoader&lt;TSource&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="TSource">To be added.</typeparam>
    <typeparam name="TLoader">To be added.</typeparam>
    <summary>
            Sometimes we need to 'fit' an <see cref="T:Microsoft.ML.IDataLoader`1" />.
            A DataLoader estimator is the object that does it.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Fit">
      <MemberSignature Language="C#" Value="public TLoader Fit (TSource input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TLoader Fit(!TSource input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.IDataLoaderEstimator`2.Fit(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fit (input As TSource) As TLoader" />
      <MemberSignature Language="F#" Value="abstract member Fit : 'Source -&gt; 'Loader" Usage="iDataLoaderEstimator.Fit input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TLoader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="TSource" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>
            Train and return a data loader.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.SchemaShape GetOutputSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.SchemaShape GetOutputSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.IDataLoaderEstimator`2.GetOutputSchema" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutputSchema () As SchemaShape" />
      <MemberSignature Language="F#" Value="abstract member GetOutputSchema : unit -&gt; Microsoft.ML.SchemaShape" Usage="iDataLoaderEstimator.GetOutputSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.SchemaShape</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            The 'promise' of the output schema.
            It will be used for schema propagation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>