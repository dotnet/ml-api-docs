<Type Name="DatabaseLoaderCatalog" FullName="Microsoft.ML.DatabaseLoaderCatalog">
  <TypeSignature Language="C#" Value="public static class DatabaseLoaderCatalog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DatabaseLoaderCatalog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.DatabaseLoaderCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Module DatabaseLoaderCatalog" />
  <TypeSignature Language="F#" Value="type DatabaseLoaderCatalog = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Experimental</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Collection of extension methods for the <see cref="T:Microsoft.ML.DataOperationsCatalog" /> to read from databases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateDatabaseLoader">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Data.DatabaseLoader CreateDatabaseLoader (this Microsoft.ML.DataOperationsCatalog catalog, params Microsoft.ML.Data.DatabaseLoader.Column[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Data.DatabaseLoader CreateDatabaseLoader(class Microsoft.ML.DataOperationsCatalog catalog, class Microsoft.ML.Data.DatabaseLoader/Column[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.DatabaseLoaderCatalog.CreateDatabaseLoader(Microsoft.ML.DataOperationsCatalog,Microsoft.ML.Data.DatabaseLoader.Column[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateDatabaseLoader (catalog As DataOperationsCatalog, ParamArray columns As DatabaseLoader.Column()) As DatabaseLoader" />
      <MemberSignature Language="F#" Value="static member CreateDatabaseLoader : Microsoft.ML.DataOperationsCatalog * Microsoft.ML.Data.DatabaseLoader.Column[] -&gt; Microsoft.ML.Data.DatabaseLoader" Usage="Microsoft.ML.DatabaseLoaderCatalog.CreateDatabaseLoader (catalog, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Experimental</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.DatabaseLoader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.DataOperationsCatalog" RefType="this" />
        <Parameter Name="columns" Type="Microsoft.ML.Data.DatabaseLoader+Column[]">
          <Attributes>
            <Attribute FrameworkAlternate="ml-dotnet">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.DataOperationsCatalog" /> catalog.</param>
        <param name="columns">Array of columns <see cref="T:Microsoft.ML.Data.DatabaseLoader.Column" /> defining the schema.</param>
        <summary>Create a database loader <see cref="T:Microsoft.ML.Data.DatabaseLoader" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabaseLoader">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Data.DatabaseLoader CreateDatabaseLoader (this Microsoft.ML.DataOperationsCatalog catalog, Microsoft.ML.Data.DatabaseLoader.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Data.DatabaseLoader CreateDatabaseLoader(class Microsoft.ML.DataOperationsCatalog catalog, class Microsoft.ML.Data.DatabaseLoader/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.DatabaseLoaderCatalog.CreateDatabaseLoader(Microsoft.ML.DataOperationsCatalog,Microsoft.ML.Data.DatabaseLoader.Options)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateDatabaseLoader (catalog As DataOperationsCatalog, options As DatabaseLoader.Options) As DatabaseLoader" />
      <MemberSignature Language="F#" Value="static member CreateDatabaseLoader : Microsoft.ML.DataOperationsCatalog * Microsoft.ML.Data.DatabaseLoader.Options -&gt; Microsoft.ML.Data.DatabaseLoader" Usage="Microsoft.ML.DatabaseLoaderCatalog.CreateDatabaseLoader (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.DatabaseLoader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.DataOperationsCatalog" RefType="this" Index="0" FrameworkAlternate="ml-dotnet;ml-dotnet-1.4.0" />
        <Parameter Name="options" Type="Microsoft.ML.Data.DatabaseLoader+Options" Index="1" FrameworkAlternate="ml-dotnet;ml-dotnet-1.4.0" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.DataOperationsCatalog" /> catalog.</param>
        <param name="options">Defines the settings of the load operation.</param>
        <summary>Create a database loader <see cref="T:Microsoft.ML.Data.DatabaseLoader" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabaseLoader&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Data.DatabaseLoader CreateDatabaseLoader&lt;TInput&gt; (this Microsoft.ML.DataOperationsCatalog catalog);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Data.DatabaseLoader CreateDatabaseLoader&lt;TInput&gt;(class Microsoft.ML.DataOperationsCatalog catalog) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.DatabaseLoaderCatalog.CreateDatabaseLoader``1(Microsoft.ML.DataOperationsCatalog)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateDatabaseLoader(Of TInput) (catalog As DataOperationsCatalog) As DatabaseLoader" />
      <MemberSignature Language="F#" Value="static member CreateDatabaseLoader : Microsoft.ML.DataOperationsCatalog -&gt; Microsoft.ML.Data.DatabaseLoader" Usage="Microsoft.ML.DatabaseLoaderCatalog.CreateDatabaseLoader catalog" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.DatabaseLoader</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.DataOperationsCatalog" RefType="this" Index="0" FrameworkAlternate="ml-dotnet;ml-dotnet-1.4.0" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">Defines the schema of the data to be loaded. Use public fields or properties
            decorated with <see cref="T:Microsoft.ML.Data.LoadColumnAttribute" /> (and possibly other attributes) to specify the column
            names and their data types in the schema of the loaded data.</typeparam>
        <param name="catalog">The <see cref="T:Microsoft.ML.DataOperationsCatalog" /> catalog.</param>
        <summary>Create a database loader <see cref="T:Microsoft.ML.Data.DatabaseLoader" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
