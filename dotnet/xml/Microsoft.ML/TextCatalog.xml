<Type Name="TextCatalog" FullName="Microsoft.ML.TextCatalog">
  <TypeSignature Language="C#" Value="public static class TextCatalog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TextCatalog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.TextCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Module TextCatalog" />
  <TypeSignature Language="F#" Value="type TextCatalog = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ExtractWordEmbeedings">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.Text.WordEmbeddingsExtractorEstimator ExtractWordEmbeedings (this Microsoft.ML.Runtime.TransformsCatalog.TextTransforms catalog, Microsoft.ML.Transforms.Text.WordEmbeddingsTransform.PretrainedModelKind modelKind = Microsoft.ML.Transforms.Text.WordEmbeddingsTransform+PretrainedModelKind.Sswe, params Microsoft.ML.Transforms.Text.WordEmbeddingsTransform.ColumnInfo[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.Text.WordEmbeddingsExtractorEstimator ExtractWordEmbeedings(class Microsoft.ML.Runtime.TransformsCatalog/TextTransforms catalog, valuetype Microsoft.ML.Transforms.Text.WordEmbeddingsTransform/PretrainedModelKind modelKind, class Microsoft.ML.Transforms.Text.WordEmbeddingsTransform/ColumnInfo[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TextCatalog.ExtractWordEmbeedings(Microsoft.ML.Runtime.TransformsCatalog.TextTransforms,Microsoft.ML.Transforms.Text.WordEmbeddingsTransform.PretrainedModelKind,Microsoft.ML.Transforms.Text.WordEmbeddingsTransform.ColumnInfo[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExtractWordEmbeedings (catalog As TransformsCatalog.TextTransforms, Optional modelKind As WordEmbeddingsTransform.PretrainedModelKind = Microsoft.ML.Transforms.Text.WordEmbeddingsTransform+PretrainedModelKind.Sswe, ParamArray columns As WordEmbeddingsTransform.ColumnInfo()) As WordEmbeddingsExtractorEstimator" />
      <MemberSignature Language="F#" Value="static member ExtractWordEmbeedings : Microsoft.ML.Runtime.TransformsCatalog.TextTransforms * Microsoft.ML.Transforms.Text.WordEmbeddingsTransform.PretrainedModelKind * Microsoft.ML.Transforms.Text.WordEmbeddingsTransform.ColumnInfo[] -&gt; Microsoft.ML.Transforms.Text.WordEmbeddingsExtractorEstimator" Usage="Microsoft.ML.TextCatalog.ExtractWordEmbeedings (catalog, modelKind, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Text.WordEmbeddingsExtractorEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.Runtime.TransformsCatalog+TextTransforms" RefType="this" />
        <Parameter Name="modelKind" Type="Microsoft.ML.Transforms.Text.WordEmbeddingsTransform+PretrainedModelKind" />
        <Parameter Name="columns" Type="Microsoft.ML.Transforms.Text.WordEmbeddingsTransform+ColumnInfo[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">The text-related transform's catalog.</param>
        <param name="modelKind">The embeddings <see cref="T:Microsoft.ML.Transforms.Text.WordEmbeddingsTransform.PretrainedModelKind" /> to use. </param>
        <param name="columns">The array columns, and per-column configurations to extract embeedings from.</param>
        <summary>
            Extracts word embeddings.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractWordEmbeedings">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.Text.WordEmbeddingsExtractorEstimator ExtractWordEmbeedings (this Microsoft.ML.Runtime.TransformsCatalog.TextTransforms catalog, string inputColumn, string outputColumn = null, Microsoft.ML.Transforms.Text.WordEmbeddingsTransform.PretrainedModelKind modelKind = Microsoft.ML.Transforms.Text.WordEmbeddingsTransform+PretrainedModelKind.Sswe);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.Text.WordEmbeddingsExtractorEstimator ExtractWordEmbeedings(class Microsoft.ML.Runtime.TransformsCatalog/TextTransforms catalog, string inputColumn, string outputColumn, valuetype Microsoft.ML.Transforms.Text.WordEmbeddingsTransform/PretrainedModelKind modelKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TextCatalog.ExtractWordEmbeedings(Microsoft.ML.Runtime.TransformsCatalog.TextTransforms,System.String,System.String,Microsoft.ML.Transforms.Text.WordEmbeddingsTransform.PretrainedModelKind)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExtractWordEmbeedings (catalog As TransformsCatalog.TextTransforms, inputColumn As String, Optional outputColumn As String = null, Optional modelKind As WordEmbeddingsTransform.PretrainedModelKind = Microsoft.ML.Transforms.Text.WordEmbeddingsTransform+PretrainedModelKind.Sswe) As WordEmbeddingsExtractorEstimator" />
      <MemberSignature Language="F#" Value="static member ExtractWordEmbeedings : Microsoft.ML.Runtime.TransformsCatalog.TextTransforms * string * string * Microsoft.ML.Transforms.Text.WordEmbeddingsTransform.PretrainedModelKind -&gt; Microsoft.ML.Transforms.Text.WordEmbeddingsExtractorEstimator" Usage="Microsoft.ML.TextCatalog.ExtractWordEmbeedings (catalog, inputColumn, outputColumn, modelKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Text.WordEmbeddingsExtractorEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.Runtime.TransformsCatalog+TextTransforms" RefType="this" />
        <Parameter Name="inputColumn" Type="System.String" />
        <Parameter Name="outputColumn" Type="System.String" />
        <Parameter Name="modelKind" Type="Microsoft.ML.Transforms.Text.WordEmbeddingsTransform+PretrainedModelKind" />
      </Parameters>
      <Docs>
        <param name="catalog">The text-related transform's catalog.</param>
        <param name="inputColumn">The input column.</param>
        <param name="outputColumn">The optional output column. If it is <value>null</value> the input column will be substituted with its value.</param>
        <param name="modelKind">The embeddings <see cref="T:Microsoft.ML.Transforms.Text.WordEmbeddingsTransform.PretrainedModelKind" /> to use. </param>
        <summary>
            Extracts word embeddings.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractWordEmbeedings">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.Text.WordEmbeddingsExtractorEstimator ExtractWordEmbeedings (this Microsoft.ML.Runtime.TransformsCatalog.TextTransforms catalog, string inputColumn, string customModelFile, string outputColumn = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.Text.WordEmbeddingsExtractorEstimator ExtractWordEmbeedings(class Microsoft.ML.Runtime.TransformsCatalog/TextTransforms catalog, string inputColumn, string customModelFile, string outputColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TextCatalog.ExtractWordEmbeedings(Microsoft.ML.Runtime.TransformsCatalog.TextTransforms,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExtractWordEmbeedings (catalog As TransformsCatalog.TextTransforms, inputColumn As String, customModelFile As String, Optional outputColumn As String = null) As WordEmbeddingsExtractorEstimator" />
      <MemberSignature Language="F#" Value="static member ExtractWordEmbeedings : Microsoft.ML.Runtime.TransformsCatalog.TextTransforms * string * string * string -&gt; Microsoft.ML.Transforms.Text.WordEmbeddingsExtractorEstimator" Usage="Microsoft.ML.TextCatalog.ExtractWordEmbeedings (catalog, inputColumn, customModelFile, outputColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Text.WordEmbeddingsExtractorEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.Runtime.TransformsCatalog+TextTransforms" RefType="this" />
        <Parameter Name="inputColumn" Type="System.String" />
        <Parameter Name="customModelFile" Type="System.String" />
        <Parameter Name="outputColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="catalog">The text-related transform's catalog.</param>
        <param name="inputColumn">The input column.</param>
        <param name="customModelFile">The path of the pre-trained embeedings model to use. </param>
        <param name="outputColumn">The optional output column. If it is <value>null</value> the input column will be substituted with its value.</param>
        <summary>
            Extracts word embeddings.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeaturizeText">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.Text.TextFeaturizingEstimator FeaturizeText (this Microsoft.ML.Runtime.TransformsCatalog.TextTransforms catalog, System.Collections.Generic.IEnumerable&lt;string&gt; inputColumns, string outputColumn, Action&lt;Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Settings&gt; advancedSettings = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.Text.TextFeaturizingEstimator FeaturizeText(class Microsoft.ML.Runtime.TransformsCatalog/TextTransforms catalog, class System.Collections.Generic.IEnumerable`1&lt;string&gt; inputColumns, string outputColumn, class System.Action`1&lt;class Microsoft.ML.Transforms.Text.TextFeaturizingEstimator/Settings&gt; advancedSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.Runtime.TransformsCatalog.TextTransforms,System.Collections.Generic.IEnumerable{System.String},System.String,System.Action{Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Settings})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FeaturizeText (catalog As TransformsCatalog.TextTransforms, inputColumns As IEnumerable(Of String), outputColumn As String, Optional advancedSettings As Action(Of TextFeaturizingEstimator.Settings) = null) As TextFeaturizingEstimator" />
      <MemberSignature Language="F#" Value="static member FeaturizeText : Microsoft.ML.Runtime.TransformsCatalog.TextTransforms * seq&lt;string&gt; * string * Action&lt;Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Settings&gt; -&gt; Microsoft.ML.Transforms.Text.TextFeaturizingEstimator" Usage="Microsoft.ML.TextCatalog.FeaturizeText (catalog, inputColumns, outputColumn, advancedSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Text.TextFeaturizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.Runtime.TransformsCatalog+TextTransforms" RefType="this" />
        <Parameter Name="inputColumns" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="outputColumn" Type="System.String" />
        <Parameter Name="advancedSettings" Type="System.Action&lt;Microsoft.ML.Transforms.Text.TextFeaturizingEstimator+Settings&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">The text-related transform's catalog.</param>
        <param name="inputColumns">The input columns</param>
        <param name="outputColumn">The output column</param>
        <param name="advancedSettings">Advanced transform settings</param>
        <summary>
            Transform several text columns into featurized float array that represents counts of ngrams and char-grams.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeaturizeText">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.Text.TextFeaturizingEstimator FeaturizeText (this Microsoft.ML.Runtime.TransformsCatalog.TextTransforms catalog, string inputColumn, string outputColumn = null, Action&lt;Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Settings&gt; advancedSettings = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.Text.TextFeaturizingEstimator FeaturizeText(class Microsoft.ML.Runtime.TransformsCatalog/TextTransforms catalog, string inputColumn, string outputColumn, class System.Action`1&lt;class Microsoft.ML.Transforms.Text.TextFeaturizingEstimator/Settings&gt; advancedSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.Runtime.TransformsCatalog.TextTransforms,System.String,System.String,System.Action{Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Settings})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FeaturizeText (catalog As TransformsCatalog.TextTransforms, inputColumn As String, Optional outputColumn As String = null, Optional advancedSettings As Action(Of TextFeaturizingEstimator.Settings) = null) As TextFeaturizingEstimator" />
      <MemberSignature Language="F#" Value="static member FeaturizeText : Microsoft.ML.Runtime.TransformsCatalog.TextTransforms * string * string * Action&lt;Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Settings&gt; -&gt; Microsoft.ML.Transforms.Text.TextFeaturizingEstimator" Usage="Microsoft.ML.TextCatalog.FeaturizeText (catalog, inputColumn, outputColumn, advancedSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Text.TextFeaturizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.Runtime.TransformsCatalog+TextTransforms" RefType="this" />
        <Parameter Name="inputColumn" Type="System.String" />
        <Parameter Name="outputColumn" Type="System.String" />
        <Parameter Name="advancedSettings" Type="System.Action&lt;Microsoft.ML.Transforms.Text.TextFeaturizingEstimator+Settings&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">The text-related transform's catalog.</param>
        <param name="inputColumn">The input column</param>
        <param name="outputColumn">The output column</param>
        <param name="advancedSettings">Advanced transform settings</param>
        <summary>
            Transform a text column into featurized float array that represents counts of ngrams and char-grams.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[ConcatWith] (](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/TextTransform.cs?line=37 )]
            ]]></format>
        </example>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[ConcatWith] (](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/TextTransform.cs?range=6-12,17-86)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="NormalizeText">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.Text.TextNormalizingEstimator NormalizeText (this Microsoft.ML.Runtime.TransformsCatalog.TextTransforms catalog, string inputColumn, string outputColumn = null, Microsoft.ML.Transforms.Text.TextNormalizingEstimator.CaseNormalizationMode textCase = Microsoft.ML.Transforms.Text.TextNormalizingEstimator+CaseNormalizationMode.Lower, bool keepDiacritics = false, bool keepPunctuations = true, bool keepNumbers = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.Text.TextNormalizingEstimator NormalizeText(class Microsoft.ML.Runtime.TransformsCatalog/TextTransforms catalog, string inputColumn, string outputColumn, valuetype Microsoft.ML.Transforms.Text.TextNormalizingEstimator/CaseNormalizationMode textCase, bool keepDiacritics, bool keepPunctuations, bool keepNumbers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TextCatalog.NormalizeText(Microsoft.ML.Runtime.TransformsCatalog.TextTransforms,System.String,System.String,Microsoft.ML.Transforms.Text.TextNormalizingEstimator.CaseNormalizationMode,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NormalizeText (catalog As TransformsCatalog.TextTransforms, inputColumn As String, Optional outputColumn As String = null, Optional textCase As TextNormalizingEstimator.CaseNormalizationMode = Microsoft.ML.Transforms.Text.TextNormalizingEstimator+CaseNormalizationMode.Lower, Optional keepDiacritics As Boolean = false, Optional keepPunctuations As Boolean = true, Optional keepNumbers As Boolean = true) As TextNormalizingEstimator" />
      <MemberSignature Language="F#" Value="static member NormalizeText : Microsoft.ML.Runtime.TransformsCatalog.TextTransforms * string * string * Microsoft.ML.Transforms.Text.TextNormalizingEstimator.CaseNormalizationMode * bool * bool * bool -&gt; Microsoft.ML.Transforms.Text.TextNormalizingEstimator" Usage="Microsoft.ML.TextCatalog.NormalizeText (catalog, inputColumn, outputColumn, textCase, keepDiacritics, keepPunctuations, keepNumbers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Text.TextNormalizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.Runtime.TransformsCatalog+TextTransforms" RefType="this" />
        <Parameter Name="inputColumn" Type="System.String" />
        <Parameter Name="outputColumn" Type="System.String" />
        <Parameter Name="textCase" Type="Microsoft.ML.Transforms.Text.TextNormalizingEstimator+CaseNormalizationMode" />
        <Parameter Name="keepDiacritics" Type="System.Boolean" />
        <Parameter Name="keepPunctuations" Type="System.Boolean" />
        <Parameter Name="keepNumbers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog">The text-related transform's catalog.</param>
        <param name="inputColumn">The column containing text to normalize.</param>
        <param name="outputColumn">The column containing output tokens. Null means <paramref name="inputColumn" /> is replaced.</param>
        <param name="textCase">Casing text using the rules of the invariant culture.</param>
        <param name="keepDiacritics">Whether to keep diacritical marks or remove them.</param>
        <param name="keepPunctuations">Whether to keep punctuation marks or remove them.</param>
        <param name="keepNumbers">Whether to keep numbers or remove them.</param>
        <summary>
            Normalizes incoming text in <paramref name="inputColumn" /> by changing case, removing diacritical marks, punctuation marks and/or numbers
            and outputs new text as <paramref name="outputColumn" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenizeCharacters">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.Text.CharacterTokenizingEstimator TokenizeCharacters (this Microsoft.ML.Runtime.TransformsCatalog.TextTransforms catalog, bool useMarkerCharacters = true, params ValueTuple&lt;string,string&gt;[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.Text.CharacterTokenizingEstimator TokenizeCharacters(class Microsoft.ML.Runtime.TransformsCatalog/TextTransforms catalog, bool useMarkerCharacters, valuetype System.ValueTuple`2&lt;string, string&gt;[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TextCatalog.TokenizeCharacters(Microsoft.ML.Runtime.TransformsCatalog.TextTransforms,System.Boolean,System.ValueTuple{System.String,System.String}[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TokenizeCharacters (catalog As TransformsCatalog.TextTransforms, Optional useMarkerCharacters As Boolean = true, ParamArray columns As ValueTuple(Of String, String)()) As CharacterTokenizingEstimator" />
      <MemberSignature Language="F#" Value="static member TokenizeCharacters : Microsoft.ML.Runtime.TransformsCatalog.TextTransforms * bool * ValueTuple&lt;string, string&gt;[] -&gt; Microsoft.ML.Transforms.Text.CharacterTokenizingEstimator" Usage="Microsoft.ML.TextCatalog.TokenizeCharacters (catalog, useMarkerCharacters, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Text.CharacterTokenizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.Runtime.TransformsCatalog+TextTransforms" RefType="this" />
        <Parameter Name="useMarkerCharacters" Type="System.Boolean" />
        <Parameter Name="columns" Type="System.ValueTuple&lt;System.String,System.String&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "inputColumn", "outputColumn" })</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">The text-related transform's catalog.</param>
        <param name="useMarkerCharacters">Whether to use marker characters to separate words.</param>
        <param name="columns">Pairs of columns to run the tokenization on.</param>
        <summary>
            Tokenize incoming text in input columns and output the tokens as output columns.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenizeCharacters">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.Text.CharacterTokenizingEstimator TokenizeCharacters (this Microsoft.ML.Runtime.TransformsCatalog.TextTransforms catalog, string inputColumn, string outputColumn = null, bool useMarkerCharacters = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.Text.CharacterTokenizingEstimator TokenizeCharacters(class Microsoft.ML.Runtime.TransformsCatalog/TextTransforms catalog, string inputColumn, string outputColumn, bool useMarkerCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TextCatalog.TokenizeCharacters(Microsoft.ML.Runtime.TransformsCatalog.TextTransforms,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TokenizeCharacters (catalog As TransformsCatalog.TextTransforms, inputColumn As String, Optional outputColumn As String = null, Optional useMarkerCharacters As Boolean = true) As CharacterTokenizingEstimator" />
      <MemberSignature Language="F#" Value="static member TokenizeCharacters : Microsoft.ML.Runtime.TransformsCatalog.TextTransforms * string * string * bool -&gt; Microsoft.ML.Transforms.Text.CharacterTokenizingEstimator" Usage="Microsoft.ML.TextCatalog.TokenizeCharacters (catalog, inputColumn, outputColumn, useMarkerCharacters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Text.CharacterTokenizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.Runtime.TransformsCatalog+TextTransforms" RefType="this" />
        <Parameter Name="inputColumn" Type="System.String" />
        <Parameter Name="outputColumn" Type="System.String" />
        <Parameter Name="useMarkerCharacters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog">The text-related transform's catalog.</param>
        <param name="inputColumn">The column containing text to tokenize.</param>
        <param name="outputColumn">The column containing output tokens. Null means <paramref name="inputColumn" /> is replaced.</param>
        <param name="useMarkerCharacters">Whether to use marker characters to separate words.</param>
        <summary>
            Tokenize incoming text in <paramref name="inputColumn" /> and output the tokens as <paramref name="outputColumn" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenizeWords">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.Text.WordTokenizingEstimator TokenizeWords (this Microsoft.ML.Runtime.TransformsCatalog.TextTransforms catalog, params Microsoft.ML.Transforms.Text.WordTokenizeTransform.ColumnInfo[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.Text.WordTokenizingEstimator TokenizeWords(class Microsoft.ML.Runtime.TransformsCatalog/TextTransforms catalog, class Microsoft.ML.Transforms.Text.WordTokenizeTransform/ColumnInfo[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TextCatalog.TokenizeWords(Microsoft.ML.Runtime.TransformsCatalog.TextTransforms,Microsoft.ML.Transforms.Text.WordTokenizeTransform.ColumnInfo[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TokenizeWords (catalog As TransformsCatalog.TextTransforms, ParamArray columns As WordTokenizeTransform.ColumnInfo()) As WordTokenizingEstimator" />
      <MemberSignature Language="F#" Value="static member TokenizeWords : Microsoft.ML.Runtime.TransformsCatalog.TextTransforms * Microsoft.ML.Transforms.Text.WordTokenizeTransform.ColumnInfo[] -&gt; Microsoft.ML.Transforms.Text.WordTokenizingEstimator" Usage="Microsoft.ML.TextCatalog.TokenizeWords (catalog, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Text.WordTokenizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.Runtime.TransformsCatalog+TextTransforms" RefType="this" />
        <Parameter Name="columns" Type="Microsoft.ML.Transforms.Text.WordTokenizeTransform+ColumnInfo[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">The text-related transform's catalog.</param>
        <param name="columns">Pairs of columns to run the tokenization on.</param>
        <summary>
             Tokenizes incoming text in input columns, using per-column configurations, and outputs the tokens.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenizeWords">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.Text.WordTokenizingEstimator TokenizeWords (this Microsoft.ML.Runtime.TransformsCatalog.TextTransforms catalog, ValueTuple&lt;string,string&gt;[] columns, char[] separators = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.Text.WordTokenizingEstimator TokenizeWords(class Microsoft.ML.Runtime.TransformsCatalog/TextTransforms catalog, valuetype System.ValueTuple`2&lt;string, string&gt;[] columns, char[] separators) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TextCatalog.TokenizeWords(Microsoft.ML.Runtime.TransformsCatalog.TextTransforms,System.ValueTuple{System.String,System.String}[],System.Char[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TokenizeWords (catalog As TransformsCatalog.TextTransforms, columns As ValueTuple(Of String, String)(), Optional separators As Char() = null) As WordTokenizingEstimator" />
      <MemberSignature Language="F#" Value="static member TokenizeWords : Microsoft.ML.Runtime.TransformsCatalog.TextTransforms * ValueTuple&lt;string, string&gt;[] * char[] -&gt; Microsoft.ML.Transforms.Text.WordTokenizingEstimator" Usage="Microsoft.ML.TextCatalog.TokenizeWords (catalog, columns, separators)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Text.WordTokenizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.Runtime.TransformsCatalog+TextTransforms" RefType="this" />
        <Parameter Name="columns" Type="System.ValueTuple&lt;System.String,System.String&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "inputColumn", "outputColumn" })</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="separators" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="catalog">The text-related transform's catalog.</param>
        <param name="columns">Pairs of columns to run the tokenization on.</param>
        <param name="separators">The separators to use (uses space character by default).</param>
        <summary>
            Tokenizes incoming text in input columns and outputs the tokens using <paramref name="separators" /> as separators.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenizeWords">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.Text.WordTokenizingEstimator TokenizeWords (this Microsoft.ML.Runtime.TransformsCatalog.TextTransforms catalog, string inputColumn, string outputColumn = null, char[] separators = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.Text.WordTokenizingEstimator TokenizeWords(class Microsoft.ML.Runtime.TransformsCatalog/TextTransforms catalog, string inputColumn, string outputColumn, char[] separators) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TextCatalog.TokenizeWords(Microsoft.ML.Runtime.TransformsCatalog.TextTransforms,System.String,System.String,System.Char[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TokenizeWords (catalog As TransformsCatalog.TextTransforms, inputColumn As String, Optional outputColumn As String = null, Optional separators As Char() = null) As WordTokenizingEstimator" />
      <MemberSignature Language="F#" Value="static member TokenizeWords : Microsoft.ML.Runtime.TransformsCatalog.TextTransforms * string * string * char[] -&gt; Microsoft.ML.Transforms.Text.WordTokenizingEstimator" Usage="Microsoft.ML.TextCatalog.TokenizeWords (catalog, inputColumn, outputColumn, separators)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Text.WordTokenizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.Runtime.TransformsCatalog+TextTransforms" RefType="this" />
        <Parameter Name="inputColumn" Type="System.String" />
        <Parameter Name="outputColumn" Type="System.String" />
        <Parameter Name="separators" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="catalog">The text-related transform's catalog.</param>
        <param name="inputColumn">The column containing text to tokenize.</param>
        <param name="outputColumn">The column containing output tokens. Null means <paramref name="inputColumn" /> is replaced.</param>
        <param name="separators">The separators to use (uses space character by default).</param>
        <summary>
            Tokenizes incoming text in <paramref name="inputColumn" />, using <paramref name="separators" /> as separators,
            and outputs the tokens as <paramref name="outputColumn" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>