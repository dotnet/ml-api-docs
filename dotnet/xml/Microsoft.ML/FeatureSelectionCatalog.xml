<Type Name="FeatureSelectionCatalog" FullName="Microsoft.ML.FeatureSelectionCatalog">
  <TypeSignature Language="C#" Value="public static class FeatureSelectionCatalog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FeatureSelectionCatalog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.FeatureSelectionCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Module FeatureSelectionCatalog" />
  <TypeSignature Language="F#" Value="type FeatureSelectionCatalog = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="SelectFeaturesBasedOnCount">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator SelectFeaturesBasedOnCount (this Microsoft.ML.Runtime.TransformsCatalog.FeatureSelectionTransforms catalog, params Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator.ColumnInfo[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator SelectFeaturesBasedOnCount(class Microsoft.ML.Runtime.TransformsCatalog/FeatureSelectionTransforms catalog, class Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator/ColumnInfo[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.FeatureSelectionCatalog.SelectFeaturesBasedOnCount(Microsoft.ML.Runtime.TransformsCatalog.FeatureSelectionTransforms,Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator.ColumnInfo[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectFeaturesBasedOnCount (catalog As TransformsCatalog.FeatureSelectionTransforms, ParamArray columns As CountFeatureSelectingEstimator.ColumnInfo()) As CountFeatureSelectingEstimator" />
      <MemberSignature Language="F#" Value="static member SelectFeaturesBasedOnCount : Microsoft.ML.Runtime.TransformsCatalog.FeatureSelectionTransforms * Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator.ColumnInfo[] -&gt; Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator" Usage="Microsoft.ML.FeatureSelectionCatalog.SelectFeaturesBasedOnCount (catalog, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.Runtime.TransformsCatalog+FeatureSelectionTransforms" RefType="this" />
        <Parameter Name="columns" Type="Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator+ColumnInfo[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="columns">Describes the parameters of the feature selection process for each column pair.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <member name="CountFeatureSelection">
          <summary>
        Selects the slots for which the count of non-default values is greater than or equal to a threshold.
      </summary>
          <remarks>
            <para>
          This transform uses a set of aggregators to count the number of non-default values for each slot and
          instantiates a <see cref="T:Microsoft.ML.Transforms.FeatureSelection.SlotsDroppingTransformer" /> to actually drop the slots.
          This transform is useful when applied together with a <see cref="T:Microsoft.ML.Transforms.OneHotHashEncodingTransformer" />. 
          The count feature selection can remove those features generated by the hash transform that have no data in the examples.
        </para>
          </remarks>
        </member>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[SelectFeaturesBasedOnCount](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/FeatureSelectionTransform.cs?range=1-4,10-121)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SelectFeaturesBasedOnCount">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator SelectFeaturesBasedOnCount (this Microsoft.ML.Runtime.TransformsCatalog.FeatureSelectionTransforms catalog, string inputColumn, string outputColumn = null, long count = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator SelectFeaturesBasedOnCount(class Microsoft.ML.Runtime.TransformsCatalog/FeatureSelectionTransforms catalog, string inputColumn, string outputColumn, int64 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.FeatureSelectionCatalog.SelectFeaturesBasedOnCount(Microsoft.ML.Runtime.TransformsCatalog.FeatureSelectionTransforms,System.String,System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectFeaturesBasedOnCount (catalog As TransformsCatalog.FeatureSelectionTransforms, inputColumn As String, Optional outputColumn As String = null, Optional count As Long = 1) As CountFeatureSelectingEstimator" />
      <MemberSignature Language="F#" Value="static member SelectFeaturesBasedOnCount : Microsoft.ML.Runtime.TransformsCatalog.FeatureSelectionTransforms * string * string * int64 -&gt; Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator" Usage="Microsoft.ML.FeatureSelectionCatalog.SelectFeaturesBasedOnCount (catalog, inputColumn, outputColumn, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.FeatureSelection.CountFeatureSelectingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.Runtime.TransformsCatalog+FeatureSelectionTransforms" RefType="this" />
        <Parameter Name="inputColumn" Type="System.String" />
        <Parameter Name="outputColumn" Type="System.String" />
        <Parameter Name="count" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="inputColumn">Name of the input column.</param>
        <param name="outputColumn">Name of the column resulting from the transformation of <paramref name="inputColumn" />. Null means <paramref name="inputColumn" /> is replaced. </param>
        <param name="count">If the count of non-default values for a slot is greater than or equal to this threshold in the training data, the slot is preserved.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <member name="CountFeatureSelection">
          <summary>
        Selects the slots for which the count of non-default values is greater than or equal to a threshold.
      </summary>
          <remarks>
            <para>
          This transform uses a set of aggregators to count the number of non-default values for each slot and
          instantiates a <see cref="T:Microsoft.ML.Transforms.FeatureSelection.SlotsDroppingTransformer" /> to actually drop the slots.
          This transform is useful when applied together with a <see cref="T:Microsoft.ML.Transforms.OneHotHashEncodingTransformer" />. 
          The count feature selection can remove those features generated by the hash transform that have no data in the examples.
        </para>
          </remarks>
        </member>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[SelectFeaturesBasedOnCount](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/FeatureSelectionTransform.cs?range=1-4,10-121)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SelectFeaturesBasedOnMutualInformation">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.FeatureSelection.MutualInformationFeatureSelectingEstimator SelectFeaturesBasedOnMutualInformation (this Microsoft.ML.Runtime.TransformsCatalog.FeatureSelectionTransforms catalog, string labelColumn = &quot;Label&quot;, int slotsInOutput = 1000, int numBins = 256, params ValueTuple&lt;string,string&gt;[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.FeatureSelection.MutualInformationFeatureSelectingEstimator SelectFeaturesBasedOnMutualInformation(class Microsoft.ML.Runtime.TransformsCatalog/FeatureSelectionTransforms catalog, string labelColumn, int32 slotsInOutput, int32 numBins, valuetype System.ValueTuple`2&lt;string, string&gt;[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.FeatureSelectionCatalog.SelectFeaturesBasedOnMutualInformation(Microsoft.ML.Runtime.TransformsCatalog.FeatureSelectionTransforms,System.String,System.Int32,System.Int32,System.ValueTuple{System.String,System.String}[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectFeaturesBasedOnMutualInformation (catalog As TransformsCatalog.FeatureSelectionTransforms, Optional labelColumn As String = &quot;Label&quot;, Optional slotsInOutput As Integer = 1000, Optional numBins As Integer = 256, ParamArray columns As ValueTuple(Of String, String)()) As MutualInformationFeatureSelectingEstimator" />
      <MemberSignature Language="F#" Value="static member SelectFeaturesBasedOnMutualInformation : Microsoft.ML.Runtime.TransformsCatalog.FeatureSelectionTransforms * string * int * int * ValueTuple&lt;string, string&gt;[] -&gt; Microsoft.ML.Transforms.FeatureSelection.MutualInformationFeatureSelectingEstimator" Usage="Microsoft.ML.FeatureSelectionCatalog.SelectFeaturesBasedOnMutualInformation (catalog, labelColumn, slotsInOutput, numBins, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.FeatureSelection.MutualInformationFeatureSelectingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.Runtime.TransformsCatalog+FeatureSelectionTransforms" RefType="this" />
        <Parameter Name="labelColumn" Type="System.String" />
        <Parameter Name="slotsInOutput" Type="System.Int32" />
        <Parameter Name="numBins" Type="System.Int32" />
        <Parameter Name="columns" Type="System.ValueTuple&lt;System.String,System.String&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "input", "output" })</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="labelColumn">Name of the column to use for labels.</param>
        <param name="slotsInOutput">The maximum number of slots to preserve in the output. The number of slots to preserve is taken across all input columns.</param>
        <param name="numBins">Max number of bins used to approximate mutual information between each input column and the label column. Power of 2 recommended.</param>
        <param name="columns">Specifies the names of the input columns for the transformation, and their respective output column names.</param>
        <summary>
        Selects the top k slots across all specified columns ordered by their mutual information with the label column.
      </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
          The mutual information of two random variables X and Y is a measure of the mutual dependence between the variables.
          Formally, the mutual information can be written as:
        </para>
          <para>I(X;Y) = E[log(p(x,y)) - log(p(x)) - log(p(y))]</para>
          <para>where the expectation is taken over the joint distribution of X and Y. 
        Here p(x,y) is the joint probability density function of X and Y, p(x) and p(y) are the marginal probability density functions of X and Y respectively. 
        In general, a higher mutual information between the dependent variable (or label) and an independent variable (or feature) means 
        that the label has higher mutual dependence over that feature.
        It keeps the top SlotsInOutput features with the largest mutual information with the label.
        </para>
        </remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[SelectFeaturesBasedOnMutualInformation](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/FeatureSelectionTransform.cs?range=1-4,10-121)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SelectFeaturesBasedOnMutualInformation">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.FeatureSelection.MutualInformationFeatureSelectingEstimator SelectFeaturesBasedOnMutualInformation (this Microsoft.ML.Runtime.TransformsCatalog.FeatureSelectionTransforms catalog, string inputColumn, string outputColumn = null, string labelColumn = &quot;Label&quot;, int slotsInOutput = 1000, int numBins = 256);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.FeatureSelection.MutualInformationFeatureSelectingEstimator SelectFeaturesBasedOnMutualInformation(class Microsoft.ML.Runtime.TransformsCatalog/FeatureSelectionTransforms catalog, string inputColumn, string outputColumn, string labelColumn, int32 slotsInOutput, int32 numBins) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.FeatureSelectionCatalog.SelectFeaturesBasedOnMutualInformation(Microsoft.ML.Runtime.TransformsCatalog.FeatureSelectionTransforms,System.String,System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectFeaturesBasedOnMutualInformation (catalog As TransformsCatalog.FeatureSelectionTransforms, inputColumn As String, Optional outputColumn As String = null, Optional labelColumn As String = &quot;Label&quot;, Optional slotsInOutput As Integer = 1000, Optional numBins As Integer = 256) As MutualInformationFeatureSelectingEstimator" />
      <MemberSignature Language="F#" Value="static member SelectFeaturesBasedOnMutualInformation : Microsoft.ML.Runtime.TransformsCatalog.FeatureSelectionTransforms * string * string * string * int * int -&gt; Microsoft.ML.Transforms.FeatureSelection.MutualInformationFeatureSelectingEstimator" Usage="Microsoft.ML.FeatureSelectionCatalog.SelectFeaturesBasedOnMutualInformation (catalog, inputColumn, outputColumn, labelColumn, slotsInOutput, numBins)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.FeatureSelection.MutualInformationFeatureSelectingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.Runtime.TransformsCatalog+FeatureSelectionTransforms" RefType="this" />
        <Parameter Name="inputColumn" Type="System.String" />
        <Parameter Name="outputColumn" Type="System.String" />
        <Parameter Name="labelColumn" Type="System.String" />
        <Parameter Name="slotsInOutput" Type="System.Int32" />
        <Parameter Name="numBins" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="inputColumn">Name of the input column.</param>
        <param name="outputColumn">Name of the column resulting from the transformation of <paramref name="inputColumn" />. Null means <paramref name="inputColumn" /> is replaced. </param>
        <param name="labelColumn">Name of the column to use for labels.</param>
        <param name="slotsInOutput">The maximum number of slots to preserve in the output. The number of slots to preserve is taken across all input columns.</param>
        <param name="numBins">Max number of bins used to approximate mutual information between each input column and the label column. Power of 2 recommended.</param>
        <summary>
        Selects the top k slots across all specified columns ordered by their mutual information with the label column.
      </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
          The mutual information of two random variables X and Y is a measure of the mutual dependence between the variables.
          Formally, the mutual information can be written as:
        </para>
          <para>I(X;Y) = E[log(p(x,y)) - log(p(x)) - log(p(y))]</para>
          <para>where the expectation is taken over the joint distribution of X and Y. 
        Here p(x,y) is the joint probability density function of X and Y, p(x) and p(y) are the marginal probability density functions of X and Y respectively. 
        In general, a higher mutual information between the dependent variable (or label) and an independent variable (or feature) means 
        that the label has higher mutual dependence over that feature.
        It keeps the top SlotsInOutput features with the largest mutual information with the label.
        </para>
        </remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[SelectFeaturesBasedOnMutualInformation](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/FeatureSelectionTransform.cs?range=1-4,10-121)]
            ]]></format>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>