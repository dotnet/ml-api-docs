<Type Name="TrainingStaticExtensions" FullName="Microsoft.ML.TrainingStaticExtensions">
  <TypeSignature Language="C#" Value="public static class TrainingStaticExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TrainingStaticExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.TrainingStaticExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module TrainingStaticExtensions" />
  <TypeSignature Language="F#" Value="type TrainingStaticExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines static extension methods that allow operations like train-test split, cross-validate,
            sampling etc. with the <see cref="T:Microsoft.ML.TrainContextBase" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CrossValidate&lt;TInShape,TOutShape,TTransformer&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.CalibratedResult,Microsoft.ML.StaticPipe.Transformer&lt;TInShape,TOutShape,TTransformer&gt;,Microsoft.ML.StaticPipe.DataView&lt;TOutShape&gt;&gt;[] CrossValidate&lt;TInShape,TOutShape,TTransformer&gt; (this Microsoft.ML.BinaryClassificationContext context, Microsoft.ML.StaticPipe.DataView&lt;TInShape&gt; data, Microsoft.ML.StaticPipe.Estimator&lt;TInShape,TOutShape,TTransformer&gt; estimator, Func&lt;TOutShape,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; label, int numFolds = 5, Func&lt;TInShape,Microsoft.ML.StaticPipe.PipelineColumn&gt; stratificationColumn = null) where TTransformer : class, Microsoft.ML.Core.Data.ITransformer;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;class Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator/CalibratedResult, class Microsoft.ML.StaticPipe.Transformer`3&lt;!!TInShape, !!TOutShape, !!TTransformer&gt;, class Microsoft.ML.StaticPipe.DataView`1&lt;!!TOutShape&gt;&gt;[] CrossValidate&lt;TInShape, TOutShape, class (class Microsoft.ML.Core.Data.ITransformer) TTransformer&gt;(class Microsoft.ML.BinaryClassificationContext context, class Microsoft.ML.StaticPipe.DataView`1&lt;!!TInShape&gt; data, class Microsoft.ML.StaticPipe.Estimator`3&lt;!!TInShape, !!TOutShape, !!TTransformer&gt; estimator, class System.Func`2&lt;!!TOutShape, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; label, int32 numFolds, class System.Func`2&lt;!!TInShape, class Microsoft.ML.StaticPipe.PipelineColumn&gt; stratificationColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TrainingStaticExtensions.CrossValidate``3(Microsoft.ML.BinaryClassificationContext,Microsoft.ML.StaticPipe.DataView{``0},Microsoft.ML.StaticPipe.Estimator{``0,``1,``2},System.Func{``1,Microsoft.ML.StaticPipe.Scalar{System.Boolean}},System.Int32,System.Func{``0,Microsoft.ML.StaticPipe.PipelineColumn})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossValidate(Of TInShape, TOutShape, TTransformer) (context As BinaryClassificationContext, data As DataView(Of TInShape), estimator As Estimator(Of TInShape, TOutShape, TTransformer), label As Func(Of TOutShape, Scalar(Of Boolean)), Optional numFolds As Integer = 5, Optional stratificationColumn As Func(Of TInShape, PipelineColumn) = null) As ValueTuple(Of BinaryClassifierEvaluator.CalibratedResult, Transformer(Of TInShape, TOutShape, TTransformer), DataView(Of TOutShape))()" />
      <MemberSignature Language="F#" Value="static member CrossValidate : Microsoft.ML.BinaryClassificationContext * Microsoft.ML.StaticPipe.DataView&lt;'InShape&gt; * Microsoft.ML.StaticPipe.Estimator&lt;'InShape, 'OutShape, 'ransformer (requires 'ransformer : null and 'ransformer :&gt; Microsoft.ML.Core.Data.ITransformer)&gt; * Func&lt;'OutShape, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; * int * Func&lt;'InShape, Microsoft.ML.StaticPipe.PipelineColumn&gt; -&gt; ValueTuple&lt;Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.CalibratedResult, Microsoft.ML.StaticPipe.Transformer&lt;'InShape, 'OutShape, 'ransformer&gt;, Microsoft.ML.StaticPipe.DataView&lt;'OutShape&gt;&gt;[] (requires 'ransformer : null and 'ransformer :&gt; Microsoft.ML.Core.Data.ITransformer)" Usage="Microsoft.ML.TrainingStaticExtensions.CrossValidate (context, data, estimator, label, numFolds, stratificationColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator+CalibratedResult,Microsoft.ML.StaticPipe.Transformer&lt;TInShape,TOutShape,TTransformer&gt;,Microsoft.ML.StaticPipe.DataView&lt;TOutShape&gt;&gt;[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "metrics", "model", "scoredTestData" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInShape" />
        <TypeParameter Name="TOutShape" />
        <TypeParameter Name="TTransformer">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.ML.Core.Data.ITransformer</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.ML.BinaryClassificationContext" RefType="this" />
        <Parameter Name="data" Type="Microsoft.ML.StaticPipe.DataView&lt;TInShape&gt;" />
        <Parameter Name="estimator" Type="Microsoft.ML.StaticPipe.Estimator&lt;TInShape,TOutShape,TTransformer&gt;" />
        <Parameter Name="label" Type="System.Func&lt;TOutShape,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;" />
        <Parameter Name="numFolds" Type="System.Int32" />
        <Parameter Name="stratificationColumn" Type="System.Func&lt;TInShape,Microsoft.ML.StaticPipe.PipelineColumn&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInShape">The input schema shape.</typeparam>
        <typeparam name="TOutShape">The output schema shape.</typeparam>
        <typeparam name="TTransformer">The type of the trained model.</typeparam>
        <param name="context">The training context.</param>
        <param name="data">The data to run cross-validation on.</param>
        <param name="estimator">The estimator to fit.</param>
        <param name="label">The label column (for evaluation).</param>
        <param name="numFolds">Number of cross-validation folds.</param>
        <param name="stratificationColumn">Optional stratification column.</param>
        <summary>
            Run cross-validation over <paramref name="numFolds" /> folds of <paramref name="data" />, by fitting <paramref name="estimator" />,
            and respecting <paramref name="stratificationColumn" /> if provided.
            Then evaluate each sub-model against <paramref name="label" /> and return metrics.
            </summary>
        <returns>Per-fold results: metrics, models, scored datasets.</returns>
        <remarks>If two examples share the same value of the <paramref name="stratificationColumn" /> (if provided),
            they are guaranteed to appear in the same subset (train or test). Use this to make sure there is no label leakage from
            train to the test set.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CrossValidate&lt;TInShape,TOutShape,TTransformer&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.Runtime.Data.MultiClassClassifierEvaluator.Result,Microsoft.ML.StaticPipe.Transformer&lt;TInShape,TOutShape,TTransformer&gt;,Microsoft.ML.StaticPipe.DataView&lt;TOutShape&gt;&gt;[] CrossValidate&lt;TInShape,TOutShape,TTransformer&gt; (this Microsoft.ML.MulticlassClassificationContext context, Microsoft.ML.StaticPipe.DataView&lt;TInShape&gt; data, Microsoft.ML.StaticPipe.Estimator&lt;TInShape,TOutShape,TTransformer&gt; estimator, Func&lt;TOutShape,Microsoft.ML.StaticPipe.Key&lt;uint&gt;&gt; label, int numFolds = 5, Func&lt;TInShape,Microsoft.ML.StaticPipe.PipelineColumn&gt; stratificationColumn = null) where TTransformer : class, Microsoft.ML.Core.Data.ITransformer;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;class Microsoft.ML.Runtime.Data.MultiClassClassifierEvaluator/Result, class Microsoft.ML.StaticPipe.Transformer`3&lt;!!TInShape, !!TOutShape, !!TTransformer&gt;, class Microsoft.ML.StaticPipe.DataView`1&lt;!!TOutShape&gt;&gt;[] CrossValidate&lt;TInShape, TOutShape, class (class Microsoft.ML.Core.Data.ITransformer) TTransformer&gt;(class Microsoft.ML.MulticlassClassificationContext context, class Microsoft.ML.StaticPipe.DataView`1&lt;!!TInShape&gt; data, class Microsoft.ML.StaticPipe.Estimator`3&lt;!!TInShape, !!TOutShape, !!TTransformer&gt; estimator, class System.Func`2&lt;!!TOutShape, class Microsoft.ML.StaticPipe.Key`1&lt;unsigned int32&gt;&gt; label, int32 numFolds, class System.Func`2&lt;!!TInShape, class Microsoft.ML.StaticPipe.PipelineColumn&gt; stratificationColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TrainingStaticExtensions.CrossValidate``3(Microsoft.ML.MulticlassClassificationContext,Microsoft.ML.StaticPipe.DataView{``0},Microsoft.ML.StaticPipe.Estimator{``0,``1,``2},System.Func{``1,Microsoft.ML.StaticPipe.Key{System.UInt32}},System.Int32,System.Func{``0,Microsoft.ML.StaticPipe.PipelineColumn})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossValidate(Of TInShape, TOutShape, TTransformer) (context As MulticlassClassificationContext, data As DataView(Of TInShape), estimator As Estimator(Of TInShape, TOutShape, TTransformer), label As Func(Of TOutShape, Key(Of UInteger)), Optional numFolds As Integer = 5, Optional stratificationColumn As Func(Of TInShape, PipelineColumn) = null) As ValueTuple(Of MultiClassClassifierEvaluator.Result, Transformer(Of TInShape, TOutShape, TTransformer), DataView(Of TOutShape))()" />
      <MemberSignature Language="F#" Value="static member CrossValidate : Microsoft.ML.MulticlassClassificationContext * Microsoft.ML.StaticPipe.DataView&lt;'InShape&gt; * Microsoft.ML.StaticPipe.Estimator&lt;'InShape, 'OutShape, 'ransformer (requires 'ransformer : null and 'ransformer :&gt; Microsoft.ML.Core.Data.ITransformer)&gt; * Func&lt;'OutShape, Microsoft.ML.StaticPipe.Key&lt;uint32&gt;&gt; * int * Func&lt;'InShape, Microsoft.ML.StaticPipe.PipelineColumn&gt; -&gt; ValueTuple&lt;Microsoft.ML.Runtime.Data.MultiClassClassifierEvaluator.Result, Microsoft.ML.StaticPipe.Transformer&lt;'InShape, 'OutShape, 'ransformer&gt;, Microsoft.ML.StaticPipe.DataView&lt;'OutShape&gt;&gt;[] (requires 'ransformer : null and 'ransformer :&gt; Microsoft.ML.Core.Data.ITransformer)" Usage="Microsoft.ML.TrainingStaticExtensions.CrossValidate (context, data, estimator, label, numFolds, stratificationColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.Runtime.Data.MultiClassClassifierEvaluator+Result,Microsoft.ML.StaticPipe.Transformer&lt;TInShape,TOutShape,TTransformer&gt;,Microsoft.ML.StaticPipe.DataView&lt;TOutShape&gt;&gt;[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "metrics", "model", "scoredTestData" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInShape" />
        <TypeParameter Name="TOutShape" />
        <TypeParameter Name="TTransformer">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.ML.Core.Data.ITransformer</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.ML.MulticlassClassificationContext" RefType="this" />
        <Parameter Name="data" Type="Microsoft.ML.StaticPipe.DataView&lt;TInShape&gt;" />
        <Parameter Name="estimator" Type="Microsoft.ML.StaticPipe.Estimator&lt;TInShape,TOutShape,TTransformer&gt;" />
        <Parameter Name="label" Type="System.Func&lt;TOutShape,Microsoft.ML.StaticPipe.Key&lt;System.UInt32&gt;&gt;" />
        <Parameter Name="numFolds" Type="System.Int32" />
        <Parameter Name="stratificationColumn" Type="System.Func&lt;TInShape,Microsoft.ML.StaticPipe.PipelineColumn&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInShape">The input schema shape.</typeparam>
        <typeparam name="TOutShape">The output schema shape.</typeparam>
        <typeparam name="TTransformer">The type of the trained model.</typeparam>
        <param name="context">The training context.</param>
        <param name="data">The data to run cross-validation on.</param>
        <param name="estimator">The estimator to fit.</param>
        <param name="label">The label column (for evaluation).</param>
        <param name="numFolds">Number of cross-validation folds.</param>
        <param name="stratificationColumn">Optional stratification column.</param>
        <summary>
            Run cross-validation over <paramref name="numFolds" /> folds of <paramref name="data" />, by fitting <paramref name="estimator" />,
            and respecting <paramref name="stratificationColumn" /> if provided.
            Then evaluate each sub-model against <paramref name="label" /> and return metrics.
            </summary>
        <returns>Per-fold results: metrics, models, scored datasets.</returns>
        <remarks>If two examples share the same value of the <paramref name="stratificationColumn" /> (if provided),
            they are guaranteed to appear in the same subset (train or test). Use this to make sure there is no label leakage from
            train to the test set.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CrossValidate&lt;TInShape,TOutShape,TTransformer&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.Runtime.Data.RegressionEvaluator.Result,Microsoft.ML.StaticPipe.Transformer&lt;TInShape,TOutShape,TTransformer&gt;,Microsoft.ML.StaticPipe.DataView&lt;TOutShape&gt;&gt;[] CrossValidate&lt;TInShape,TOutShape,TTransformer&gt; (this Microsoft.ML.RegressionContext context, Microsoft.ML.StaticPipe.DataView&lt;TInShape&gt; data, Microsoft.ML.StaticPipe.Estimator&lt;TInShape,TOutShape,TTransformer&gt; estimator, Func&lt;TOutShape,Microsoft.ML.StaticPipe.Scalar&lt;float&gt;&gt; label, int numFolds = 5, Func&lt;TInShape,Microsoft.ML.StaticPipe.PipelineColumn&gt; stratificationColumn = null) where TTransformer : class, Microsoft.ML.Core.Data.ITransformer;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;class Microsoft.ML.Runtime.Data.RegressionEvaluator/Result, class Microsoft.ML.StaticPipe.Transformer`3&lt;!!TInShape, !!TOutShape, !!TTransformer&gt;, class Microsoft.ML.StaticPipe.DataView`1&lt;!!TOutShape&gt;&gt;[] CrossValidate&lt;TInShape, TOutShape, class (class Microsoft.ML.Core.Data.ITransformer) TTransformer&gt;(class Microsoft.ML.RegressionContext context, class Microsoft.ML.StaticPipe.DataView`1&lt;!!TInShape&gt; data, class Microsoft.ML.StaticPipe.Estimator`3&lt;!!TInShape, !!TOutShape, !!TTransformer&gt; estimator, class System.Func`2&lt;!!TOutShape, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;&gt; label, int32 numFolds, class System.Func`2&lt;!!TInShape, class Microsoft.ML.StaticPipe.PipelineColumn&gt; stratificationColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TrainingStaticExtensions.CrossValidate``3(Microsoft.ML.RegressionContext,Microsoft.ML.StaticPipe.DataView{``0},Microsoft.ML.StaticPipe.Estimator{``0,``1,``2},System.Func{``1,Microsoft.ML.StaticPipe.Scalar{System.Single}},System.Int32,System.Func{``0,Microsoft.ML.StaticPipe.PipelineColumn})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossValidate(Of TInShape, TOutShape, TTransformer) (context As RegressionContext, data As DataView(Of TInShape), estimator As Estimator(Of TInShape, TOutShape, TTransformer), label As Func(Of TOutShape, Scalar(Of Single)), Optional numFolds As Integer = 5, Optional stratificationColumn As Func(Of TInShape, PipelineColumn) = null) As ValueTuple(Of RegressionEvaluator.Result, Transformer(Of TInShape, TOutShape, TTransformer), DataView(Of TOutShape))()" />
      <MemberSignature Language="F#" Value="static member CrossValidate : Microsoft.ML.RegressionContext * Microsoft.ML.StaticPipe.DataView&lt;'InShape&gt; * Microsoft.ML.StaticPipe.Estimator&lt;'InShape, 'OutShape, 'ransformer (requires 'ransformer : null and 'ransformer :&gt; Microsoft.ML.Core.Data.ITransformer)&gt; * Func&lt;'OutShape, Microsoft.ML.StaticPipe.Scalar&lt;single&gt;&gt; * int * Func&lt;'InShape, Microsoft.ML.StaticPipe.PipelineColumn&gt; -&gt; ValueTuple&lt;Microsoft.ML.Runtime.Data.RegressionEvaluator.Result, Microsoft.ML.StaticPipe.Transformer&lt;'InShape, 'OutShape, 'ransformer&gt;, Microsoft.ML.StaticPipe.DataView&lt;'OutShape&gt;&gt;[] (requires 'ransformer : null and 'ransformer :&gt; Microsoft.ML.Core.Data.ITransformer)" Usage="Microsoft.ML.TrainingStaticExtensions.CrossValidate (context, data, estimator, label, numFolds, stratificationColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.Runtime.Data.RegressionEvaluator+Result,Microsoft.ML.StaticPipe.Transformer&lt;TInShape,TOutShape,TTransformer&gt;,Microsoft.ML.StaticPipe.DataView&lt;TOutShape&gt;&gt;[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "metrics", "model", "scoredTestData" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInShape" />
        <TypeParameter Name="TOutShape" />
        <TypeParameter Name="TTransformer">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.ML.Core.Data.ITransformer</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.ML.RegressionContext" RefType="this" />
        <Parameter Name="data" Type="Microsoft.ML.StaticPipe.DataView&lt;TInShape&gt;" />
        <Parameter Name="estimator" Type="Microsoft.ML.StaticPipe.Estimator&lt;TInShape,TOutShape,TTransformer&gt;" />
        <Parameter Name="label" Type="System.Func&lt;TOutShape,Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;&gt;" />
        <Parameter Name="numFolds" Type="System.Int32" />
        <Parameter Name="stratificationColumn" Type="System.Func&lt;TInShape,Microsoft.ML.StaticPipe.PipelineColumn&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInShape">The input schema shape.</typeparam>
        <typeparam name="TOutShape">The output schema shape.</typeparam>
        <typeparam name="TTransformer">The type of the trained model.</typeparam>
        <param name="context">The training context.</param>
        <param name="data">The data to run cross-validation on.</param>
        <param name="estimator">The estimator to fit.</param>
        <param name="label">The label column (for evaluation).</param>
        <param name="numFolds">Number of cross-validation folds.</param>
        <param name="stratificationColumn">Optional stratification column.</param>
        <summary>
            Run cross-validation over <paramref name="numFolds" /> folds of <paramref name="data" />, by fitting <paramref name="estimator" />,
            and respecting <paramref name="stratificationColumn" /> if provided.
            Then evaluate each sub-model against <paramref name="label" /> and return metrics.
            </summary>
        <returns>Per-fold results: metrics, models, scored datasets.</returns>
        <remarks>If two examples share the same value of the <paramref name="stratificationColumn" /> (if provided),
            they are guaranteed to appear in the same subset (train or test). Use this to make sure there is no label leakage from
            train to the test set.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CrossValidateNonCalibrated&lt;TInShape,TOutShape,TTransformer&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.Result,Microsoft.ML.StaticPipe.Transformer&lt;TInShape,TOutShape,TTransformer&gt;,Microsoft.ML.StaticPipe.DataView&lt;TOutShape&gt;&gt;[] CrossValidateNonCalibrated&lt;TInShape,TOutShape,TTransformer&gt; (this Microsoft.ML.BinaryClassificationContext context, Microsoft.ML.StaticPipe.DataView&lt;TInShape&gt; data, Microsoft.ML.StaticPipe.Estimator&lt;TInShape,TOutShape,TTransformer&gt; estimator, Func&lt;TOutShape,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; label, int numFolds = 5, Func&lt;TInShape,Microsoft.ML.StaticPipe.PipelineColumn&gt; stratificationColumn = null) where TTransformer : class, Microsoft.ML.Core.Data.ITransformer;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;class Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator/Result, class Microsoft.ML.StaticPipe.Transformer`3&lt;!!TInShape, !!TOutShape, !!TTransformer&gt;, class Microsoft.ML.StaticPipe.DataView`1&lt;!!TOutShape&gt;&gt;[] CrossValidateNonCalibrated&lt;TInShape, TOutShape, class (class Microsoft.ML.Core.Data.ITransformer) TTransformer&gt;(class Microsoft.ML.BinaryClassificationContext context, class Microsoft.ML.StaticPipe.DataView`1&lt;!!TInShape&gt; data, class Microsoft.ML.StaticPipe.Estimator`3&lt;!!TInShape, !!TOutShape, !!TTransformer&gt; estimator, class System.Func`2&lt;!!TOutShape, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; label, int32 numFolds, class System.Func`2&lt;!!TInShape, class Microsoft.ML.StaticPipe.PipelineColumn&gt; stratificationColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TrainingStaticExtensions.CrossValidateNonCalibrated``3(Microsoft.ML.BinaryClassificationContext,Microsoft.ML.StaticPipe.DataView{``0},Microsoft.ML.StaticPipe.Estimator{``0,``1,``2},System.Func{``1,Microsoft.ML.StaticPipe.Scalar{System.Boolean}},System.Int32,System.Func{``0,Microsoft.ML.StaticPipe.PipelineColumn})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossValidateNonCalibrated(Of TInShape, TOutShape, TTransformer) (context As BinaryClassificationContext, data As DataView(Of TInShape), estimator As Estimator(Of TInShape, TOutShape, TTransformer), label As Func(Of TOutShape, Scalar(Of Boolean)), Optional numFolds As Integer = 5, Optional stratificationColumn As Func(Of TInShape, PipelineColumn) = null) As ValueTuple(Of BinaryClassifierEvaluator.Result, Transformer(Of TInShape, TOutShape, TTransformer), DataView(Of TOutShape))()" />
      <MemberSignature Language="F#" Value="static member CrossValidateNonCalibrated : Microsoft.ML.BinaryClassificationContext * Microsoft.ML.StaticPipe.DataView&lt;'InShape&gt; * Microsoft.ML.StaticPipe.Estimator&lt;'InShape, 'OutShape, 'ransformer (requires 'ransformer : null and 'ransformer :&gt; Microsoft.ML.Core.Data.ITransformer)&gt; * Func&lt;'OutShape, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; * int * Func&lt;'InShape, Microsoft.ML.StaticPipe.PipelineColumn&gt; -&gt; ValueTuple&lt;Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator.Result, Microsoft.ML.StaticPipe.Transformer&lt;'InShape, 'OutShape, 'ransformer&gt;, Microsoft.ML.StaticPipe.DataView&lt;'OutShape&gt;&gt;[] (requires 'ransformer : null and 'ransformer :&gt; Microsoft.ML.Core.Data.ITransformer)" Usage="Microsoft.ML.TrainingStaticExtensions.CrossValidateNonCalibrated (context, data, estimator, label, numFolds, stratificationColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.Runtime.Data.BinaryClassifierEvaluator+Result,Microsoft.ML.StaticPipe.Transformer&lt;TInShape,TOutShape,TTransformer&gt;,Microsoft.ML.StaticPipe.DataView&lt;TOutShape&gt;&gt;[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "metrics", "model", "scoredTestData" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInShape" />
        <TypeParameter Name="TOutShape" />
        <TypeParameter Name="TTransformer">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.ML.Core.Data.ITransformer</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.ML.BinaryClassificationContext" RefType="this" />
        <Parameter Name="data" Type="Microsoft.ML.StaticPipe.DataView&lt;TInShape&gt;" />
        <Parameter Name="estimator" Type="Microsoft.ML.StaticPipe.Estimator&lt;TInShape,TOutShape,TTransformer&gt;" />
        <Parameter Name="label" Type="System.Func&lt;TOutShape,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;" />
        <Parameter Name="numFolds" Type="System.Int32" />
        <Parameter Name="stratificationColumn" Type="System.Func&lt;TInShape,Microsoft.ML.StaticPipe.PipelineColumn&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInShape">The input schema shape.</typeparam>
        <typeparam name="TOutShape">The output schema shape.</typeparam>
        <typeparam name="TTransformer">The type of the trained model.</typeparam>
        <param name="context">The training context.</param>
        <param name="data">The data to run cross-validation on.</param>
        <param name="estimator">The estimator to fit.</param>
        <param name="label">The label column (for evaluation).</param>
        <param name="numFolds">Number of cross-validation folds.</param>
        <param name="stratificationColumn">Optional stratification column.</param>
        <summary>
            Run cross-validation over <paramref name="numFolds" /> folds of <paramref name="data" />, by fitting <paramref name="estimator" />,
            and respecting <paramref name="stratificationColumn" /> if provided.
            Then evaluate each sub-model against <paramref name="label" /> and return metrics.
            </summary>
        <returns>Per-fold results: metrics, models, scored datasets.</returns>
        <remarks>If two examples share the same value of the <paramref name="stratificationColumn" /> (if provided),
            they are guaranteed to appear in the same subset (train or test). Use this to make sure there is no label leakage from
            train to the test set.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainTestSplit&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.StaticPipe.DataView&lt;T&gt;,Microsoft.ML.StaticPipe.DataView&lt;T&gt;&gt; TrainTestSplit&lt;T&gt; (this Microsoft.ML.TrainContextBase context, Microsoft.ML.StaticPipe.DataView&lt;T&gt; data, double testFraction = 0.1, Func&lt;T,Microsoft.ML.StaticPipe.PipelineColumn&gt; stratificationColumn = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;class Microsoft.ML.StaticPipe.DataView`1&lt;!!T&gt;, class Microsoft.ML.StaticPipe.DataView`1&lt;!!T&gt;&gt; TrainTestSplit&lt;T&gt;(class Microsoft.ML.TrainContextBase context, class Microsoft.ML.StaticPipe.DataView`1&lt;!!T&gt; data, float64 testFraction, class System.Func`2&lt;!!T, class Microsoft.ML.StaticPipe.PipelineColumn&gt; stratificationColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TrainingStaticExtensions.TrainTestSplit``1(Microsoft.ML.TrainContextBase,Microsoft.ML.StaticPipe.DataView{``0},System.Double,System.Func{``0,Microsoft.ML.StaticPipe.PipelineColumn})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TrainTestSplit(Of T) (context As TrainContextBase, data As DataView(Of T), Optional testFraction As Double = 0.1, Optional stratificationColumn As Func(Of T, PipelineColumn) = null) As ValueTuple(Of DataView(Of T), DataView(Of T))" />
      <MemberSignature Language="F#" Value="static member TrainTestSplit : Microsoft.ML.TrainContextBase * Microsoft.ML.StaticPipe.DataView&lt;'T&gt; * double * Func&lt;'T, Microsoft.ML.StaticPipe.PipelineColumn&gt; -&gt; ValueTuple&lt;Microsoft.ML.StaticPipe.DataView&lt;'T&gt;, Microsoft.ML.StaticPipe.DataView&lt;'T&gt;&gt;" Usage="Microsoft.ML.TrainingStaticExtensions.TrainTestSplit (context, data, testFraction, stratificationColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.DataView&lt;T&gt;,Microsoft.ML.StaticPipe.DataView&lt;T&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "trainSet", "testSet" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.ML.TrainContextBase" RefType="this" />
        <Parameter Name="data" Type="Microsoft.ML.StaticPipe.DataView&lt;T&gt;" />
        <Parameter Name="testFraction" Type="System.Double" />
        <Parameter Name="stratificationColumn" Type="System.Func&lt;T,Microsoft.ML.StaticPipe.PipelineColumn&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">The tuple describing the data schema.</typeparam>
        <param name="context">The training context.</param>
        <param name="data">The dataset to split.</param>
        <param name="testFraction">The fraction of data to go into the test set.</param>
        <param name="stratificationColumn">Optional selector for the stratification column.</param>
        <summary>
            Split the dataset into the train set and test set according to the given fraction.
            Respects the <paramref name="stratificationColumn" /> if provided.
            </summary>
        <returns>A pair of datasets, for the train and test set.</returns>
        <remarks>If two examples share the same value of the <paramref name="stratificationColumn" /> (if provided),
            they are guaranteed to appear in the same subset (train or test). Use this to make sure there is no label leakage from
            train to the test set.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>