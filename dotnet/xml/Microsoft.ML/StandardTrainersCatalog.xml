<Type Name="StandardTrainersCatalog" FullName="Microsoft.ML.StandardTrainersCatalog">
  <TypeSignature Language="C#" Value="public static class StandardTrainersCatalog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit StandardTrainersCatalog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.StandardTrainersCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Module StandardTrainersCatalog" />
  <TypeSignature Language="F#" Value="type StandardTrainersCatalog = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            TrainerEstimator extension methods.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AveragedPerceptron">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.AveragedPerceptronTrainer AveragedPerceptron (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.Trainers.AveragedPerceptronTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.AveragedPerceptronTrainer AveragedPerceptron(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.Trainers.AveragedPerceptronTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.AveragedPerceptron(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.AveragedPerceptronTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member AveragedPerceptron : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.Trainers.AveragedPerceptronTrainer.Options -&gt; Microsoft.ML.Trainers.AveragedPerceptronTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.AveragedPerceptron (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.AveragedPerceptronTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.AveragedPerceptronTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="options">Trainer options.</param>
        <summary>
            Predict a target using a linear binary classification model trained with <see cref="T:Microsoft.ML.Trainers.AveragedPerceptronTrainer" /> and advanced options.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[AveragedPerceptron](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/AveragedPerceptronWithOptions.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="AveragedPerceptron">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.AveragedPerceptronTrainer AveragedPerceptron (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, Microsoft.ML.Trainers.IClassificationLoss lossFunction = null, float learningRate = 1, bool decreaseLearningRate = false, float l2Regularization = 0, int numberOfIterations = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.AveragedPerceptronTrainer AveragedPerceptron(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, string labelColumnName, string featureColumnName, class Microsoft.ML.Trainers.IClassificationLoss lossFunction, float32 learningRate, bool decreaseLearningRate, float32 l2Regularization, int32 numberOfIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.AveragedPerceptron(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,Microsoft.ML.Trainers.IClassificationLoss,System.Single,System.Boolean,System.Single,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AveragedPerceptron (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional lossFunction As IClassificationLoss = null, Optional learningRate As Single = 1, Optional decreaseLearningRate As Boolean = false, Optional l2Regularization As Single = 0, Optional numberOfIterations As Integer = 1) As AveragedPerceptronTrainer" />
      <MemberSignature Language="F#" Value="static member AveragedPerceptron : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * string * string * Microsoft.ML.Trainers.IClassificationLoss * single * bool * single * int -&gt; Microsoft.ML.Trainers.AveragedPerceptronTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.AveragedPerceptron (catalog, labelColumnName, featureColumnName, lossFunction, learningRate, decreaseLearningRate, l2Regularization, numberOfIterations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.AveragedPerceptronTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="lossFunction" Type="Microsoft.ML.Trainers.IClassificationLoss" />
        <Parameter Name="learningRate" Type="System.Single" />
        <Parameter Name="decreaseLearningRate" Type="System.Boolean" />
        <Parameter Name="l2Regularization" Type="System.Single" />
        <Parameter Name="numberOfIterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="lossFunction">The <a href="tmpurl_loss">loss</a> function minimized in the training process. If <see langword="null" />, <see cref="T:Microsoft.ML.Trainers.HingeLoss" /> would be used and lead to a max-margin averaged perceptron trainer.</param>
        <param name="learningRate">The initial <a href="tmpurl_lr">learning rate</a> used by SGD.</param>
        <param name="decreaseLearningRate">
          <see langword="true" /> to decrease the <paramref name="learningRate" /> as iterations progress; otherwise, <see langword="false" />.
            Default is <see langword="false" />.
            </param>
        <param name="l2Regularization">The L2 weight for <a href="tmpurl_regularization">regularization</a>.</param>
        <param name="numberOfIterations">Number of passes through the training dataset.</param>
        <summary>
            Predict a target using a linear binary classification model trained with <see cref="T:Microsoft.ML.Trainers.AveragedPerceptronTrainer" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[AveragedPerceptron](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/AveragedPerceptron.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="LbfgsLogisticRegression">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer LbfgsLogisticRegression (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer LbfgsLogisticRegression(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.LbfgsLogisticRegression(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member LbfgsLogisticRegression : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer.Options -&gt; Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.LbfgsLogisticRegression (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <summary>
             Predict a target using a linear binary classification model trained with the <see cref="T:Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LbfgsLogisticRegression">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer LbfgsLogisticRegression (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string exampleWeightColumnName = null, float l1Regularization = 1, float l2Regularization = 1, float optimizationTolerance = 1E-07, int historySize = 20, bool enforceNonNegativity = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer LbfgsLogisticRegression(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, string labelColumnName, string featureColumnName, string exampleWeightColumnName, float32 l1Regularization, float32 l2Regularization, float32 optimizationTolerance, int32 historySize, bool enforceNonNegativity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.LbfgsLogisticRegression(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Single,System.Single,System.Single,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LbfgsLogisticRegression (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional exampleWeightColumnName As String = null, Optional l1Regularization As Single = 1, Optional l2Regularization As Single = 1, Optional optimizationTolerance As Single = 1E-07, Optional historySize As Integer = 20, Optional enforceNonNegativity As Boolean = false) As LbfgsLogisticRegressionBinaryTrainer" />
      <MemberSignature Language="F#" Value="static member LbfgsLogisticRegression : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * string * string * string * single * single * single * int * bool -&gt; Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.LbfgsLogisticRegression (catalog, labelColumnName, featureColumnName, exampleWeightColumnName, l1Regularization, l2Regularization, optimizationTolerance, historySize, enforceNonNegativity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" />
        <Parameter Name="l1Regularization" Type="System.Single" />
        <Parameter Name="l2Regularization" Type="System.Single" />
        <Parameter Name="optimizationTolerance" Type="System.Single" />
        <Parameter Name="historySize" Type="System.Int32" />
        <Parameter Name="enforceNonNegativity" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <param name="l1Regularization">The L1 <a href="tmpurl_regularization">regularization</a> hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="l2Regularization">The L2 weight for <a href="tmpurl_regularization">regularization</a>.</param>
        <param name="optimizationTolerance">Threshold for optimizer convergence.</param>
        <param name="historySize">Memory size for <see cref="T:Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer" />. Low=faster, less accurate.</param>
        <param name="enforceNonNegativity">Enforce non-negative weights.</param>
        <summary>
             Predict a target using a linear binary classification model trained with the <see cref="T:Microsoft.ML.Trainers.LbfgsLogisticRegressionBinaryTrainer" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[Logistic Regression](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/LogisticRegression.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="LbfgsMaximumEntropy">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer LbfgsMaximumEntropy (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer LbfgsMaximumEntropy(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, class Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.LbfgsMaximumEntropy(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member LbfgsMaximumEntropy : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer.Options -&gt; Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.LbfgsMaximumEntropy (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers" />.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <summary>
            Predict a target using a maximum entropy classification model trained with the L-BFGS method implemented in <see cref="T:Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LbfgsMaximumEntropy">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer LbfgsMaximumEntropy (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string exampleWeightColumnName = null, float l1Regularization = 1, float l2Regularization = 1, float optimizationTolerance = 1E-07, int historySize = 20, bool enforceNonNegativity = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer LbfgsMaximumEntropy(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, string labelColumnName, string featureColumnName, string exampleWeightColumnName, float32 l1Regularization, float32 l2Regularization, float32 optimizationTolerance, int32 historySize, bool enforceNonNegativity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.LbfgsMaximumEntropy(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,System.String,System.String,System.String,System.Single,System.Single,System.Single,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LbfgsMaximumEntropy (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional exampleWeightColumnName As String = null, Optional l1Regularization As Single = 1, Optional l2Regularization As Single = 1, Optional optimizationTolerance As Single = 1E-07, Optional historySize As Integer = 20, Optional enforceNonNegativity As Boolean = false) As LbfgsMaximumEntropyMulticlassTrainer" />
      <MemberSignature Language="F#" Value="static member LbfgsMaximumEntropy : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * string * string * string * single * single * single * int * bool -&gt; Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.LbfgsMaximumEntropy (catalog, labelColumnName, featureColumnName, exampleWeightColumnName, l1Regularization, l2Regularization, optimizationTolerance, historySize, enforceNonNegativity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" />
        <Parameter Name="l1Regularization" Type="System.Single" />
        <Parameter Name="l2Regularization" Type="System.Single" />
        <Parameter Name="optimizationTolerance" Type="System.Single" />
        <Parameter Name="historySize" Type="System.Int32" />
        <Parameter Name="enforceNonNegativity" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers" />.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <param name="l1Regularization">The L1 <a href="tmpurl_regularization">regularization</a> hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="l2Regularization">The L2 weight for <a href="tmpurl_regularization">regularization</a>.</param>
        <param name="optimizationTolerance">Threshold for optimizer convergence.</param>
        <param name="historySize">Memory size for <see cref="T:Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer" />. Low=faster, less accurate.</param>
        <param name="enforceNonNegativity">Enforce non-negative weights.</param>
        <summary>
            Predict a target using a maximum entropy classification model trained with the L-BFGS method implemented in <see cref="T:Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LbfgsPoissonRegression">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.LbfgsPoissonRegressionTrainer LbfgsPoissonRegression (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, Microsoft.ML.Trainers.LbfgsPoissonRegressionTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.LbfgsPoissonRegressionTrainer LbfgsPoissonRegression(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, class Microsoft.ML.Trainers.LbfgsPoissonRegressionTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.LbfgsPoissonRegression(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.LbfgsPoissonRegressionTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member LbfgsPoissonRegression : Microsoft.ML.RegressionCatalog.RegressionTrainers * Microsoft.ML.Trainers.LbfgsPoissonRegressionTrainer.Options -&gt; Microsoft.ML.Trainers.LbfgsPoissonRegressionTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.LbfgsPoissonRegression (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.LbfgsPoissonRegressionTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.LbfgsPoissonRegressionTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The regression catalog trainer object.</param>
        <param name="options">Trainer options.</param>
        <summary>
            Predict a target using a linear regression model trained with the <see cref="T:Microsoft.ML.Trainers.LbfgsPoissonRegressionTrainer" /> and advanced options.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[PoissonRegression](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/Regression/PoissonRegressionWithOptions.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="LbfgsPoissonRegression">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.LbfgsPoissonRegressionTrainer LbfgsPoissonRegression (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string exampleWeightColumnName = null, float l1Regularization = 1, float l2Regularization = 1, float optimizationTolerance = 1E-07, int historySize = 20, bool enforceNonNegativity = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.LbfgsPoissonRegressionTrainer LbfgsPoissonRegression(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, string labelColumnName, string featureColumnName, string exampleWeightColumnName, float32 l1Regularization, float32 l2Regularization, float32 optimizationTolerance, int32 historySize, bool enforceNonNegativity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.LbfgsPoissonRegression(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,System.Single,System.Single,System.Single,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LbfgsPoissonRegression (catalog As RegressionCatalog.RegressionTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional exampleWeightColumnName As String = null, Optional l1Regularization As Single = 1, Optional l2Regularization As Single = 1, Optional optimizationTolerance As Single = 1E-07, Optional historySize As Integer = 20, Optional enforceNonNegativity As Boolean = false) As LbfgsPoissonRegressionTrainer" />
      <MemberSignature Language="F#" Value="static member LbfgsPoissonRegression : Microsoft.ML.RegressionCatalog.RegressionTrainers * string * string * string * single * single * single * int * bool -&gt; Microsoft.ML.Trainers.LbfgsPoissonRegressionTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.LbfgsPoissonRegression (catalog, labelColumnName, featureColumnName, exampleWeightColumnName, l1Regularization, l2Regularization, optimizationTolerance, historySize, enforceNonNegativity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.LbfgsPoissonRegressionTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" />
        <Parameter Name="l1Regularization" Type="System.Single" />
        <Parameter Name="l2Regularization" Type="System.Single" />
        <Parameter Name="optimizationTolerance" Type="System.Single" />
        <Parameter Name="historySize" Type="System.Int32" />
        <Parameter Name="enforceNonNegativity" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog">The regression catalog trainer object.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <param name="l1Regularization">The L1 <a href="tmpurl_regularization">regularization</a> hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="l2Regularization">The L2 weight for <a href="tmpurl_regularization">regularization</a>.</param>
        <param name="optimizationTolerance">Threshold for optimizer convergence.</param>
        <param name="historySize">Number of previous iterations to remember for estimating the Hessian. Lower values mean faster but less accurate estimates.</param>
        <param name="enforceNonNegativity">Enforce non-negative weights.</param>
        <summary>
            Predict a target using a linear regression model trained with the <see cref="T:Microsoft.ML.Trainers.LbfgsPoissonRegressionTrainer" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[PoissonRegression](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/Regression/PoissonRegression.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="LinearSvm">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.LinearSvmTrainer LinearSvm (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.Trainers.LinearSvmTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.LinearSvmTrainer LinearSvm(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.Trainers.LinearSvmTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.LinearSvm(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.LinearSvmTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member LinearSvm : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.Trainers.LinearSvmTrainer.Options -&gt; Microsoft.ML.Trainers.LinearSvmTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.LinearSvm (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.LinearSvmTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.LinearSvmTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.BinaryClassificationCatalog" />.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <summary>
            Predict a target using a linear binary classification model trained with the <see cref="T:Microsoft.ML.Trainers.LinearSvmTrainer" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            The idea behind support vector machines (SVM), is to map instances into a high dimensional space
            in which the two classes are linearly separable, i.e., there exists a hyperplane such that all the positive examples are on one side of it,
            and all the negative examples are on the other.
            </para>
          <para>
            After this mapping, quadratic programming is used to find the separating hyperplane that maximizes the
            margin, i.e., the minimal distance between it and the instances.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinearSvm">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.LinearSvmTrainer LinearSvm (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string exampleWeightColumnName = null, int numberOfIterations = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.LinearSvmTrainer LinearSvm(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, string labelColumnName, string featureColumnName, string exampleWeightColumnName, int32 numberOfIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.LinearSvm(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LinearSvm (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional exampleWeightColumnName As String = null, Optional numberOfIterations As Integer = 1) As LinearSvmTrainer" />
      <MemberSignature Language="F#" Value="static member LinearSvm : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * string * string * string * int -&gt; Microsoft.ML.Trainers.LinearSvmTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.LinearSvm (catalog, labelColumnName, featureColumnName, exampleWeightColumnName, numberOfIterations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.LinearSvmTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" />
        <Parameter Name="numberOfIterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.BinaryClassificationCatalog" />.</param>
        <param name="labelColumnName">The name of the label column. </param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <param name="numberOfIterations">The number of training iteraitons.</param>
        <summary>
            Predict a target using a linear binary classification model trained with the <see cref="T:Microsoft.ML.Trainers.LinearSvmTrainer" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            The idea behind support vector machines (SVM), is to map instances into a high dimensional space
            in which the two classes are linearly separable, i.e., there exists a hyperplane such that all the positive examples are on one side of it,
            and all the negative examples are on the other.
            </para>
          <para>
            After this mapping, quadratic programming is used to find the separating hyperplane that maximizes the
            margin, i.e., the minimal distance between it and the instances.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NaiveBayes">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.NaiveBayesMulticlassTrainer NaiveBayes (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.NaiveBayesMulticlassTrainer NaiveBayes(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, string labelColumnName, string featureColumnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.NaiveBayes(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NaiveBayes (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;) As NaiveBayesMulticlassTrainer" />
      <MemberSignature Language="F#" Value="static member NaiveBayes : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * string * string -&gt; Microsoft.ML.Trainers.NaiveBayesMulticlassTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.NaiveBayes (catalog, labelColumnName, featureColumnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.NaiveBayesMulticlassTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers" />.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <summary>
            Predicts a target using a linear multiclass classification model trained with the <see cref="T:Microsoft.ML.Trainers.NaiveBayesMulticlassTrainer" />.
            The <see cref="T:Microsoft.ML.Trainers.NaiveBayesMulticlassTrainer" /> trains a multiclass Naive Bayes predictor that supports binary feature values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OneVersusAll&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.OneVersusAllTrainer OneVersusAll&lt;TModel&gt; (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, Microsoft.ML.Trainers.ITrainerEstimator&lt;Microsoft.ML.Data.BinaryPredictionTransformer&lt;TModel&gt;,TModel&gt; binaryEstimator, string labelColumnName = &quot;Label&quot;, bool imputeMissingLabelsAsNegative = false, Microsoft.ML.IEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.Calibrators.ICalibrator&gt;&gt; calibrator = null, int maximumCalibrationExampleCount = 1000000000, bool useProbabilities = true) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.OneVersusAllTrainer OneVersusAll&lt;class TModel&gt;(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, class Microsoft.ML.Trainers.ITrainerEstimator`2&lt;class Microsoft.ML.Data.BinaryPredictionTransformer`1&lt;!!TModel&gt;, !!TModel&gt; binaryEstimator, string labelColumnName, bool imputeMissingLabelsAsNegative, class Microsoft.ML.IEstimator`1&lt;class Microsoft.ML.ISingleFeaturePredictionTransformer`1&lt;class Microsoft.ML.Calibrators.ICalibrator&gt;&gt; calibrator, int32 maximumCalibrationExampleCount, bool useProbabilities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.OneVersusAll``1(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.Trainers.ITrainerEstimator{Microsoft.ML.Data.BinaryPredictionTransformer{``0},``0},System.String,System.Boolean,Microsoft.ML.IEstimator{Microsoft.ML.ISingleFeaturePredictionTransformer{Microsoft.ML.Calibrators.ICalibrator}},System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OneVersusAll(Of TModel As Class) (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, binaryEstimator As ITrainerEstimator(Of BinaryPredictionTransformer(Of TModel), TModel), Optional labelColumnName As String = &quot;Label&quot;, Optional imputeMissingLabelsAsNegative As Boolean = false, Optional calibrator As IEstimator(Of ISingleFeaturePredictionTransformer(Of ICalibrator)) = null, Optional maximumCalibrationExampleCount As Integer = 1000000000, Optional useProbabilities As Boolean = true) As OneVersusAllTrainer" />
      <MemberSignature Language="F#" Value="static member OneVersusAll : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * Microsoft.ML.Trainers.ITrainerEstimator&lt;Microsoft.ML.Data.BinaryPredictionTransformer&lt;'Model&gt;, 'Model (requires 'Model : null)&gt; * string * bool * Microsoft.ML.IEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.Calibrators.ICalibrator&gt;&gt; * int * bool -&gt; Microsoft.ML.Trainers.OneVersusAllTrainer (requires 'Model : null)" Usage="Microsoft.ML.StandardTrainersCatalog.OneVersusAll (catalog, binaryEstimator, labelColumnName, imputeMissingLabelsAsNegative, calibrator, maximumCalibrationExampleCount, useProbabilities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.OneVersusAllTrainer</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="binaryEstimator" Type="Microsoft.ML.Trainers.ITrainerEstimator&lt;Microsoft.ML.Data.BinaryPredictionTransformer&lt;TModel&gt;,TModel&gt;" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="imputeMissingLabelsAsNegative" Type="System.Boolean" />
        <Parameter Name="calibrator" Type="Microsoft.ML.IEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.Calibrators.ICalibrator&gt;&gt;" />
        <Parameter Name="maximumCalibrationExampleCount" Type="System.Int32" />
        <Parameter Name="useProbabilities" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model. This type parameter will usually be inferred automatically from <paramref name="binaryEstimator" />.</typeparam>
        <param name="catalog">The <see cref="T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers" />.</param>
        <param name="binaryEstimator">An instance of a binary <see cref="T:Microsoft.ML.Trainers.ITrainerEstimator`2" /> used as the base trainer.</param>
        <param name="labelColumnName">The name of the label colum.</param>
        <param name="imputeMissingLabelsAsNegative">Whether to treat missing labels as having negative labels, instead of keeping them missing.</param>
        <param name="calibrator">The calibrator. If a calibrator is not explicitely provided, it will default to <see cref="T:Microsoft.ML.Calibrators.PlattCalibratorTrainer" /></param>
        <param name="maximumCalibrationExampleCount">Number of instances to train the calibrator.</param>
        <param name="useProbabilities">Use probabilities (vs. raw outputs) to identify top-score category.</param>
        <summary>
            Predicts a target using a linear multiclass classification model trained with the <see cref="T:Microsoft.ML.Trainers.OneVersusAllTrainer" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            In <see cref="T:Microsoft.ML.Trainers.OneVersusAllTrainer" /> In this strategy, a binary classification algorithm is used to train one classifier for each class,
            which distinguishes that class from all other classes. Prediction is then performed by running these binary classifiers,
            and choosing the prediction with the highest confidence score.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnlineGradientDescent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.OnlineGradientDescentTrainer OnlineGradientDescent (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, Microsoft.ML.Trainers.OnlineGradientDescentTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.OnlineGradientDescentTrainer OnlineGradientDescent(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, class Microsoft.ML.Trainers.OnlineGradientDescentTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.OnlineGradientDescent(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.OnlineGradientDescentTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member OnlineGradientDescent : Microsoft.ML.RegressionCatalog.RegressionTrainers * Microsoft.ML.Trainers.OnlineGradientDescentTrainer.Options -&gt; Microsoft.ML.Trainers.OnlineGradientDescentTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.OnlineGradientDescent (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.OnlineGradientDescentTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.OnlineGradientDescentTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The regression catalog trainer object.</param>
        <param name="options">Trainer options.</param>
        <summary>
            Predict a target using a linear regression model trained with the <see cref="T:Microsoft.ML.Trainers.OnlineGradientDescentTrainer" /> and advanced options.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnlineGradientDescent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.OnlineGradientDescentTrainer OnlineGradientDescent (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, Microsoft.ML.Trainers.IRegressionLoss lossFunction = null, float learningRate = 0.1, bool decreaseLearningRate = true, float l2Regularization = 0, int numberOfIterations = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.OnlineGradientDescentTrainer OnlineGradientDescent(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, string labelColumnName, string featureColumnName, class Microsoft.ML.Trainers.IRegressionLoss lossFunction, float32 learningRate, bool decreaseLearningRate, float32 l2Regularization, int32 numberOfIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.OnlineGradientDescent(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,Microsoft.ML.Trainers.IRegressionLoss,System.Single,System.Boolean,System.Single,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OnlineGradientDescent (catalog As RegressionCatalog.RegressionTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional lossFunction As IRegressionLoss = null, Optional learningRate As Single = 0.1, Optional decreaseLearningRate As Boolean = true, Optional l2Regularization As Single = 0, Optional numberOfIterations As Integer = 1) As OnlineGradientDescentTrainer" />
      <MemberSignature Language="F#" Value="static member OnlineGradientDescent : Microsoft.ML.RegressionCatalog.RegressionTrainers * string * string * Microsoft.ML.Trainers.IRegressionLoss * single * bool * single * int -&gt; Microsoft.ML.Trainers.OnlineGradientDescentTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.OnlineGradientDescent (catalog, labelColumnName, featureColumnName, lossFunction, learningRate, decreaseLearningRate, l2Regularization, numberOfIterations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.OnlineGradientDescentTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="lossFunction" Type="Microsoft.ML.Trainers.IRegressionLoss" />
        <Parameter Name="learningRate" Type="System.Single" />
        <Parameter Name="decreaseLearningRate" Type="System.Boolean" />
        <Parameter Name="l2Regularization" Type="System.Single" />
        <Parameter Name="numberOfIterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="catalog">The regression catalog trainer object.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="lossFunction">The <a href="tmpurl_loss">loss</a> function minimized in the training process. Using, for example, <see cref="T:Microsoft.ML.Trainers.SquaredLoss" /> leads to a least square trainer.</param>
        <param name="learningRate">The initial <a href="tmpurl_lr">learning rate</a> used by SGD.</param>
        <param name="decreaseLearningRate">Decrease learning rate as iterations progress.</param>
        <param name="l2Regularization">The L2 weight for <a href="tmpurl_regularization">regularization</a>.</param>
        <param name="numberOfIterations">The number of passes through the training dataset.</param>
        <summary>
            Predict a target using a linear regression model trained with the <see cref="T:Microsoft.ML.Trainers.OnlineGradientDescentTrainer" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PairwiseCoupling&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.PairwiseCouplingTrainer PairwiseCoupling&lt;TModel&gt; (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, Microsoft.ML.Trainers.ITrainerEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;TModel&gt;,TModel&gt; binaryEstimator, string labelColumnName = &quot;Label&quot;, bool imputeMissingLabelsAsNegative = false, Microsoft.ML.IEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.Calibrators.ICalibrator&gt;&gt; calibrator = null, int maximumCalibrationExampleCount = 1000000000) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.PairwiseCouplingTrainer PairwiseCoupling&lt;class TModel&gt;(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, class Microsoft.ML.Trainers.ITrainerEstimator`2&lt;class Microsoft.ML.ISingleFeaturePredictionTransformer`1&lt;!!TModel&gt;, !!TModel&gt; binaryEstimator, string labelColumnName, bool imputeMissingLabelsAsNegative, class Microsoft.ML.IEstimator`1&lt;class Microsoft.ML.ISingleFeaturePredictionTransformer`1&lt;class Microsoft.ML.Calibrators.ICalibrator&gt;&gt; calibrator, int32 maximumCalibrationExampleCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.PairwiseCoupling``1(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.Trainers.ITrainerEstimator{Microsoft.ML.ISingleFeaturePredictionTransformer{``0},``0},System.String,System.Boolean,Microsoft.ML.IEstimator{Microsoft.ML.ISingleFeaturePredictionTransformer{Microsoft.ML.Calibrators.ICalibrator}},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PairwiseCoupling(Of TModel As Class) (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, binaryEstimator As ITrainerEstimator(Of ISingleFeaturePredictionTransformer(Of TModel), TModel), Optional labelColumnName As String = &quot;Label&quot;, Optional imputeMissingLabelsAsNegative As Boolean = false, Optional calibrator As IEstimator(Of ISingleFeaturePredictionTransformer(Of ICalibrator)) = null, Optional maximumCalibrationExampleCount As Integer = 1000000000) As PairwiseCouplingTrainer" />
      <MemberSignature Language="F#" Value="static member PairwiseCoupling : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * Microsoft.ML.Trainers.ITrainerEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;'Model&gt;, 'Model (requires 'Model : null)&gt; * string * bool * Microsoft.ML.IEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.Calibrators.ICalibrator&gt;&gt; * int -&gt; Microsoft.ML.Trainers.PairwiseCouplingTrainer (requires 'Model : null)" Usage="Microsoft.ML.StandardTrainersCatalog.PairwiseCoupling (catalog, binaryEstimator, labelColumnName, imputeMissingLabelsAsNegative, calibrator, maximumCalibrationExampleCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.PairwiseCouplingTrainer</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="binaryEstimator" Type="Microsoft.ML.Trainers.ITrainerEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;TModel&gt;,TModel&gt;" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="imputeMissingLabelsAsNegative" Type="System.Boolean" />
        <Parameter Name="calibrator" Type="Microsoft.ML.IEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.Calibrators.ICalibrator&gt;&gt;" />
        <Parameter Name="maximumCalibrationExampleCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model. This type parameter will usually be inferred automatically from <paramref name="binaryEstimator" />.</typeparam>
        <param name="catalog">The <see cref="T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers" />.</param>
        <param name="binaryEstimator">An instance of a binary <see cref="T:Microsoft.ML.Trainers.ITrainerEstimator`2" /> used as the base trainer.</param>
        <param name="labelColumnName">The name of the label colum.</param>
        <param name="imputeMissingLabelsAsNegative">Whether to treat missing labels as having negative labels, instead of keeping them missing.</param>
        <param name="calibrator">The calibrator. If a calibrator is not explicitely provided, it will default to <see cref="T:Microsoft.ML.Calibrators.PlattCalibratorTrainer" /></param>
        <param name="maximumCalibrationExampleCount">Number of instances to train the calibrator.</param>
        <summary>
            Predicts a target using a linear multiclass classification model trained with the <see cref="T:Microsoft.ML.Trainers.PairwiseCouplingTrainer" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            In the Pairwise coupling (PKPD) strategy, a binary classification algorithm is used to train one classifier for each pair of classes.
            Prediction is then performed by running these binary classifiers, and computing a score for each class by counting how many of the binary
            classifiers predicted it. The prediction is the class with the highest score.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prior">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.PriorTrainer Prior (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string exampleWeightColumnName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.PriorTrainer Prior(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, string labelColumnName, string exampleWeightColumnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.Prior(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Prior (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional exampleWeightColumnName As String = null) As PriorTrainer" />
      <MemberSignature Language="F#" Value="static member Prior : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * string * string -&gt; Microsoft.ML.Trainers.PriorTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.Prior (catalog, labelColumnName, exampleWeightColumnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.PriorTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.BinaryClassificationCatalog" />.</param>
        <param name="labelColumnName">The name of the label column. </param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <summary>
            Predict a target using a binary classification model trained with <see cref="T:Microsoft.ML.Trainers.PriorTrainer" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This trainer uses the proportion of a label in the training set as the probability of that label.
            This trainer is often used as a baseline for other more sophisticated mdels.
            </remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[FastTree](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/PriorTrainerSample.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Sdca">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaRegressionTrainer Sdca (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, Microsoft.ML.Trainers.SdcaRegressionTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaRegressionTrainer Sdca(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, class Microsoft.ML.Trainers.SdcaRegressionTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.Sdca(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.SdcaRegressionTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member Sdca : Microsoft.ML.RegressionCatalog.RegressionTrainers * Microsoft.ML.Trainers.SdcaRegressionTrainer.Options -&gt; Microsoft.ML.Trainers.SdcaRegressionTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.Sdca (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaRegressionTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.SdcaRegressionTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The regression catalog trainer object.</param>
        <param name="options">Trainer options.</param>
        <summary>
            Predict a target using a linear regression model trained with <see cref="T:Microsoft.ML.Trainers.SdcaRegressionTrainer" /> and advanced options.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[SDCA](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/Regression/StochasticDualCoordinateAscentWithOptions.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Sdca">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaRegressionTrainer Sdca (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string exampleWeightColumnName = null, Microsoft.ML.Trainers.ISupportSdcaRegressionLoss lossFunction = null, Nullable&lt;float&gt; l2Regularization = null, Nullable&lt;float&gt; l1Regularization = null, Nullable&lt;int&gt; maximumNumberOfIterations = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaRegressionTrainer Sdca(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, string labelColumnName, string featureColumnName, string exampleWeightColumnName, class Microsoft.ML.Trainers.ISupportSdcaRegressionLoss lossFunction, valuetype System.Nullable`1&lt;float32&gt; l2Regularization, valuetype System.Nullable`1&lt;float32&gt; l1Regularization, valuetype System.Nullable`1&lt;int32&gt; maximumNumberOfIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.Sdca(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,Microsoft.ML.Trainers.ISupportSdcaRegressionLoss,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sdca (catalog As RegressionCatalog.RegressionTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional exampleWeightColumnName As String = null, Optional lossFunction As ISupportSdcaRegressionLoss = null, Optional l2Regularization As Nullable(Of Single) = null, Optional l1Regularization As Nullable(Of Single) = null, Optional maximumNumberOfIterations As Nullable(Of Integer) = null) As SdcaRegressionTrainer" />
      <MemberSignature Language="F#" Value="static member Sdca : Microsoft.ML.RegressionCatalog.RegressionTrainers * string * string * string * Microsoft.ML.Trainers.ISupportSdcaRegressionLoss * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;int&gt; -&gt; Microsoft.ML.Trainers.SdcaRegressionTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.Sdca (catalog, labelColumnName, featureColumnName, exampleWeightColumnName, lossFunction, l2Regularization, l1Regularization, maximumNumberOfIterations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaRegressionTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" />
        <Parameter Name="lossFunction" Type="Microsoft.ML.Trainers.ISupportSdcaRegressionLoss" />
        <Parameter Name="l2Regularization" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="l1Regularization" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="maximumNumberOfIterations" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">The regression catalog trainer object.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <param name="lossFunction">The <a href="tmpurl_loss">loss</a> function minimized in the training process. Using, for example, its default <see cref="T:Microsoft.ML.Trainers.SquaredLoss" /> leads to a least square trainer.</param>
        <param name="l2Regularization">The L2 weight for <a href="tmpurl_regularization">regularization</a>.</param>
        <param name="l1Regularization">The L1 <a href="tmpurl_regularization">regularization</a> hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="maximumNumberOfIterations">The maximum number of passes to perform over the data.</param>
        <summary>
            Predict a target using a linear regression model trained with <see cref="T:Microsoft.ML.Trainers.SdcaRegressionTrainer" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[SDCA](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/Regression/StochasticDualCoordinateAscent.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SdcaLogisticRegression">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer SdcaLogisticRegression (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer SdcaLogisticRegression(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.SdcaLogisticRegression(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member SdcaLogisticRegression : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer.Options -&gt; Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.SdcaLogisticRegression (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="options">Trainer options.</param>
        <summary>
            Predict a target using a linear classification model trained with <see cref="T:Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer" /> and advanced options.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[SDCA](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/StochasticDualCoordinateAscentWithOptions.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SdcaLogisticRegression">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer SdcaLogisticRegression (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string exampleWeightColumnName = null, Nullable&lt;float&gt; l2Regularization = null, Nullable&lt;float&gt; l1Regularization = null, Nullable&lt;int&gt; maximumNumberOfIterations = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer SdcaLogisticRegression(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, string labelColumnName, string featureColumnName, string exampleWeightColumnName, valuetype System.Nullable`1&lt;float32&gt; l2Regularization, valuetype System.Nullable`1&lt;float32&gt; l1Regularization, valuetype System.Nullable`1&lt;int32&gt; maximumNumberOfIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.SdcaLogisticRegression(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SdcaLogisticRegression (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional exampleWeightColumnName As String = null, Optional l2Regularization As Nullable(Of Single) = null, Optional l1Regularization As Nullable(Of Single) = null, Optional maximumNumberOfIterations As Nullable(Of Integer) = null) As SdcaLogisticRegressionBinaryTrainer" />
      <MemberSignature Language="F#" Value="static member SdcaLogisticRegression : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * string * string * string * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;int&gt; -&gt; Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.SdcaLogisticRegression (catalog, labelColumnName, featureColumnName, exampleWeightColumnName, l2Regularization, l1Regularization, maximumNumberOfIterations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" />
        <Parameter Name="l2Regularization" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="l1Regularization" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="maximumNumberOfIterations" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <param name="l2Regularization">The L2 weight for <a href="tmpurl_regularization">regularization</a>.</param>
        <param name="l1Regularization">The L1 <a href="tmpurl_regularization">regularization</a> hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="maximumNumberOfIterations">The maximum number of passes to perform over the data.</param>
        <summary>
            Predict a target using a linear classification model trained with <see cref="T:Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[SDCA](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/StochasticDualCoordinateAscent.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SdcaMaximumEntropy">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer SdcaMaximumEntropy (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer SdcaMaximumEntropy(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, class Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.SdcaMaximumEntropy(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member SdcaMaximumEntropy : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer.Options -&gt; Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.SdcaMaximumEntropy (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The multiclass classification catalog trainer object.</param>
        <param name="options">Trainer options.</param>
        <summary>
            Predict a target using a maximum entropy classification model trained with <see cref="T:Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer" /> and advanced options.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[SDCA](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/MulticlassClassification/StochasticDualCoordinateAscentWithOptions.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SdcaMaximumEntropy">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer SdcaMaximumEntropy (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string exampleWeightColumnName = null, Nullable&lt;float&gt; l2Regularization = null, Nullable&lt;float&gt; l1Regularization = null, Nullable&lt;int&gt; maximumNumberOfIterations = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer SdcaMaximumEntropy(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, string labelColumnName, string featureColumnName, string exampleWeightColumnName, valuetype System.Nullable`1&lt;float32&gt; l2Regularization, valuetype System.Nullable`1&lt;float32&gt; l1Regularization, valuetype System.Nullable`1&lt;int32&gt; maximumNumberOfIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.SdcaMaximumEntropy(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,System.String,System.String,System.String,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SdcaMaximumEntropy (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional exampleWeightColumnName As String = null, Optional l2Regularization As Nullable(Of Single) = null, Optional l1Regularization As Nullable(Of Single) = null, Optional maximumNumberOfIterations As Nullable(Of Integer) = null) As SdcaMaximumEntropyMulticlassTrainer" />
      <MemberSignature Language="F#" Value="static member SdcaMaximumEntropy : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * string * string * string * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;int&gt; -&gt; Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.SdcaMaximumEntropy (catalog, labelColumnName, featureColumnName, exampleWeightColumnName, l2Regularization, l1Regularization, maximumNumberOfIterations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" />
        <Parameter Name="l2Regularization" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="l1Regularization" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="maximumNumberOfIterations" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">The multiclass classification catalog trainer object.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <param name="l2Regularization">The L2 weight for <a href="tmpurl_regularization">regularization</a>.</param>
        <param name="l1Regularization">The L1 <a href="tmpurl_regularization">regularization</a> hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="maximumNumberOfIterations">The maximum number of passes to perform over the data.</param>
        <summary>
            Predict a target using a maximum entropy classification model trained with <see cref="T:Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[SDCA](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/MulticlassClassification/StochasticDualCoordinateAscent.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SdcaNonCalibrated">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer SdcaNonCalibrated (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer SdcaNonCalibrated(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.SdcaNonCalibrated(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member SdcaNonCalibrated : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer.Options -&gt; Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.SdcaNonCalibrated (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="options">Trainer options.</param>
        <summary>
            Predict a target using a linear classification model trained with <see cref="T:Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer" /> and advanced options.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SdcaNonCalibrated">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaNonCalibratedMulticlassTrainer SdcaNonCalibrated (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, Microsoft.ML.Trainers.SdcaNonCalibratedMulticlassTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaNonCalibratedMulticlassTrainer SdcaNonCalibrated(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, class Microsoft.ML.Trainers.SdcaNonCalibratedMulticlassTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.SdcaNonCalibrated(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.Trainers.SdcaNonCalibratedMulticlassTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member SdcaNonCalibrated : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * Microsoft.ML.Trainers.SdcaNonCalibratedMulticlassTrainer.Options -&gt; Microsoft.ML.Trainers.SdcaNonCalibratedMulticlassTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.SdcaNonCalibrated (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaNonCalibratedMulticlassTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.SdcaNonCalibratedMulticlassTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The multiclass classification catalog trainer object.</param>
        <param name="options">Trainer options.</param>
        <summary>
            Predict a target using linear multiclass classification model trained with <see cref="T:Microsoft.ML.Trainers.SdcaNonCalibratedMulticlassTrainer" /> and advanced options.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[SDCA](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/MulticlassClassification/StochasticDualCoordinateAscentWithOptions.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SdcaNonCalibrated">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer SdcaNonCalibrated (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string exampleWeightColumnName = null, Microsoft.ML.Trainers.ISupportSdcaClassificationLoss lossFunction = null, Nullable&lt;float&gt; l2Regularization = null, Nullable&lt;float&gt; l1Regularization = null, Nullable&lt;int&gt; maximumNumberOfIterations = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer SdcaNonCalibrated(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, string labelColumnName, string featureColumnName, string exampleWeightColumnName, class Microsoft.ML.Trainers.ISupportSdcaClassificationLoss lossFunction, valuetype System.Nullable`1&lt;float32&gt; l2Regularization, valuetype System.Nullable`1&lt;float32&gt; l1Regularization, valuetype System.Nullable`1&lt;int32&gt; maximumNumberOfIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.SdcaNonCalibrated(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,Microsoft.ML.Trainers.ISupportSdcaClassificationLoss,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SdcaNonCalibrated (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional exampleWeightColumnName As String = null, Optional lossFunction As ISupportSdcaClassificationLoss = null, Optional l2Regularization As Nullable(Of Single) = null, Optional l1Regularization As Nullable(Of Single) = null, Optional maximumNumberOfIterations As Nullable(Of Integer) = null) As SdcaNonCalibratedBinaryTrainer" />
      <MemberSignature Language="F#" Value="static member SdcaNonCalibrated : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * string * string * string * Microsoft.ML.Trainers.ISupportSdcaClassificationLoss * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;int&gt; -&gt; Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.SdcaNonCalibrated (catalog, labelColumnName, featureColumnName, exampleWeightColumnName, lossFunction, l2Regularization, l1Regularization, maximumNumberOfIterations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" />
        <Parameter Name="lossFunction" Type="Microsoft.ML.Trainers.ISupportSdcaClassificationLoss" />
        <Parameter Name="l2Regularization" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="l1Regularization" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="maximumNumberOfIterations" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <param name="lossFunction">The <a href="tmpurl_loss">loss</a> function minimized in the training process. Defaults to <see cref="T:Microsoft.ML.Trainers.LogLoss" /> if not specified.</param>
        <param name="l2Regularization">The L2 weight for <a href="tmpurl_regularization">regularization</a>.</param>
        <param name="l1Regularization">The L1 <a href="tmpurl_regularization">regularization</a> hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="maximumNumberOfIterations">The maximum number of passes to perform over the data.</param>
        <summary>
            Predict a target using a linear classification model trained with <see cref="T:Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[SDCA](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/StochasticDualCoordinateAscentNonCalibrated.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SdcaNonCalibrated">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaNonCalibratedMulticlassTrainer SdcaNonCalibrated (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string exampleWeightColumnName = null, Microsoft.ML.Trainers.ISupportSdcaClassificationLoss lossFunction = null, Nullable&lt;float&gt; l2Regularization = null, Nullable&lt;float&gt; l1Regularization = null, Nullable&lt;int&gt; maximumNumberOfIterations = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaNonCalibratedMulticlassTrainer SdcaNonCalibrated(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, string labelColumnName, string featureColumnName, string exampleWeightColumnName, class Microsoft.ML.Trainers.ISupportSdcaClassificationLoss lossFunction, valuetype System.Nullable`1&lt;float32&gt; l2Regularization, valuetype System.Nullable`1&lt;float32&gt; l1Regularization, valuetype System.Nullable`1&lt;int32&gt; maximumNumberOfIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.SdcaNonCalibrated(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,System.String,System.String,System.String,Microsoft.ML.Trainers.ISupportSdcaClassificationLoss,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SdcaNonCalibrated (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional exampleWeightColumnName As String = null, Optional lossFunction As ISupportSdcaClassificationLoss = null, Optional l2Regularization As Nullable(Of Single) = null, Optional l1Regularization As Nullable(Of Single) = null, Optional maximumNumberOfIterations As Nullable(Of Integer) = null) As SdcaNonCalibratedMulticlassTrainer" />
      <MemberSignature Language="F#" Value="static member SdcaNonCalibrated : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * string * string * string * Microsoft.ML.Trainers.ISupportSdcaClassificationLoss * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;int&gt; -&gt; Microsoft.ML.Trainers.SdcaNonCalibratedMulticlassTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.SdcaNonCalibrated (catalog, labelColumnName, featureColumnName, exampleWeightColumnName, lossFunction, l2Regularization, l1Regularization, maximumNumberOfIterations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaNonCalibratedMulticlassTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" />
        <Parameter Name="lossFunction" Type="Microsoft.ML.Trainers.ISupportSdcaClassificationLoss" />
        <Parameter Name="l2Regularization" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="l1Regularization" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="maximumNumberOfIterations" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">The multiclass classification catalog trainer object.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <param name="lossFunction">The <a href="tmpurl_loss">loss</a> function to be minimized. Defaults to <see cref="T:Microsoft.ML.Trainers.LogLoss" /> if not specified.</param>
        <param name="l2Regularization">The L2 weight for <a href="tmpurl_regularization">regularization</a>.</param>
        <param name="l1Regularization">The L1 <a href="tmpurl_regularization">regularization</a> hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="maximumNumberOfIterations">The maximum number of passes to perform over the data.</param>
        <summary>
            Predict a target using a linear multiclass classification model trained with <see cref="T:Microsoft.ML.Trainers.SdcaNonCalibratedMulticlassTrainer" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[SDCA](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/MulticlassClassification/StochasticDualCoordinateAscent.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SgdCalibrated">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SgdCalibratedTrainer SgdCalibrated (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.Trainers.SgdCalibratedTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SgdCalibratedTrainer SgdCalibrated(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.Trainers.SgdCalibratedTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.SgdCalibrated(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.SgdCalibratedTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member SgdCalibrated : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.Trainers.SgdCalibratedTrainer.Options -&gt; Microsoft.ML.Trainers.SgdCalibratedTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.SgdCalibrated (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SgdCalibratedTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.SgdCalibratedTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="options">Trainer options.</param>
        <summary>
            Predict a target using a linear classification model trained with <see cref="T:Microsoft.ML.Trainers.SgdCalibratedTrainer" /> and advanced options.
            Stochastic gradient descent (SGD) is an iterative algorithm that optimizes a differentiable objective function.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[StochasticGradientDescentWithOptions](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/StochasticGradientDescentWithOptions.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SgdCalibrated">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SgdCalibratedTrainer SgdCalibrated (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string exampleWeightColumnName = null, int numberOfIterations = 20, double learningRate = 0.01, float l2Regularization = 1E-06);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SgdCalibratedTrainer SgdCalibrated(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, string labelColumnName, string featureColumnName, string exampleWeightColumnName, int32 numberOfIterations, float64 learningRate, float32 l2Regularization) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.SgdCalibrated(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Int32,System.Double,System.Single)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SgdCalibrated (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional exampleWeightColumnName As String = null, Optional numberOfIterations As Integer = 20, Optional learningRate As Double = 0.01, Optional l2Regularization As Single = 1E-06) As SgdCalibratedTrainer" />
      <MemberSignature Language="F#" Value="static member SgdCalibrated : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * string * string * string * int * double * single -&gt; Microsoft.ML.Trainers.SgdCalibratedTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.SgdCalibrated (catalog, labelColumnName, featureColumnName, exampleWeightColumnName, numberOfIterations, learningRate, l2Regularization)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SgdCalibratedTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" />
        <Parameter Name="numberOfIterations" Type="System.Int32" />
        <Parameter Name="learningRate" Type="System.Double" />
        <Parameter Name="l2Regularization" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="labelColumnName">The name of the label column, or dependent variable.</param>
        <param name="featureColumnName">The features, or independent variables.</param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <param name="numberOfIterations">The maximum number of passes through the training dataset; set to 1 to simulate online learning.</param>
        <param name="learningRate">The initial <a href="tmpurl_lr">learning rate</a> used by SGD.</param>
        <param name="l2Regularization">The L2 weight for <a href="tmpurl_regularization">regularization</a>.</param>
        <summary>
            Predict a target using a linear classification model trained with <see cref="T:Microsoft.ML.Trainers.SgdCalibratedTrainer" />.
            Stochastic gradient descent (SGD) is an iterative algorithm that optimizes a differentiable objective function.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[StochasticGradientDescent](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/StochasticGradientDescent.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SgdNonCalibrated">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SgdNonCalibratedTrainer SgdNonCalibrated (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.Trainers.SgdNonCalibratedTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SgdNonCalibratedTrainer SgdNonCalibrated(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.Trainers.SgdNonCalibratedTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.SgdNonCalibrated(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.SgdNonCalibratedTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member SgdNonCalibrated : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.Trainers.SgdNonCalibratedTrainer.Options -&gt; Microsoft.ML.Trainers.SgdNonCalibratedTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.SgdNonCalibrated (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SgdNonCalibratedTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.SgdNonCalibratedTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="options">Trainer options.</param>
        <summary>
            Predict a target using a linear classification model trained with <see cref="T:Microsoft.ML.Trainers.SgdNonCalibratedTrainer" /> and advanced options.
            Stochastic gradient descent (SGD) is an iterative algorithm that optimizes a differentiable objective function.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[StochasticGradientDescentNonCalibratedWithOptions](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/StochasticGradientDescentNonCalibratedWithOptions.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SgdNonCalibrated">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SgdNonCalibratedTrainer SgdNonCalibrated (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string exampleWeightColumnName = null, Microsoft.ML.Trainers.IClassificationLoss lossFunction = null, int numberOfIterations = 20, double learningRate = 0.01, float l2Regularization = 1E-06);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SgdNonCalibratedTrainer SgdNonCalibrated(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, string labelColumnName, string featureColumnName, string exampleWeightColumnName, class Microsoft.ML.Trainers.IClassificationLoss lossFunction, int32 numberOfIterations, float64 learningRate, float32 l2Regularization) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardTrainersCatalog.SgdNonCalibrated(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,Microsoft.ML.Trainers.IClassificationLoss,System.Int32,System.Double,System.Single)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SgdNonCalibrated (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional exampleWeightColumnName As String = null, Optional lossFunction As IClassificationLoss = null, Optional numberOfIterations As Integer = 20, Optional learningRate As Double = 0.01, Optional l2Regularization As Single = 1E-06) As SgdNonCalibratedTrainer" />
      <MemberSignature Language="F#" Value="static member SgdNonCalibrated : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * string * string * string * Microsoft.ML.Trainers.IClassificationLoss * int * double * single -&gt; Microsoft.ML.Trainers.SgdNonCalibratedTrainer" Usage="Microsoft.ML.StandardTrainersCatalog.SgdNonCalibrated (catalog, labelColumnName, featureColumnName, exampleWeightColumnName, lossFunction, numberOfIterations, learningRate, l2Regularization)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardTrainers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SgdNonCalibratedTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" />
        <Parameter Name="lossFunction" Type="Microsoft.ML.Trainers.IClassificationLoss" />
        <Parameter Name="numberOfIterations" Type="System.Int32" />
        <Parameter Name="learningRate" Type="System.Double" />
        <Parameter Name="l2Regularization" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="labelColumnName">The name of the label column, or dependent variable.</param>
        <param name="featureColumnName">The features, or independent variables.</param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <param name="lossFunction">The <a href="tmpurl_loss">loss</a> function minimized in the training process. Using, for example, <see cref="T:Microsoft.ML.Trainers.HingeLoss" /> leads to a support vector machine trainer.</param>
        <param name="numberOfIterations">The maximum number of passes through the training dataset; set to 1 to simulate online learning.</param>
        <param name="learningRate">The initial <a href="tmpurl_lr">learning rate</a> used by SGD.</param>
        <param name="l2Regularization">The L2 weight for <a href="tmpurl_regularization">regularization</a>.</param>
        <summary>
            Predict a target using a linear classification model trained with <see cref="T:Microsoft.ML.Trainers.SgdNonCalibratedTrainer" />.
            Stochastic gradient descent (SGD) is an iterative algorithm that optimizes a differentiable objective function.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[StochasticGradientDescentNonCalibrated](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/StochasticGradientDescentNonCalibrated.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>