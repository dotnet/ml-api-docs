<Type Name="ImageEstimatorsCatalog" FullName="Microsoft.ML.ImageEstimatorsCatalog">
  <TypeSignature Language="C#" Value="public static class ImageEstimatorsCatalog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImageEstimatorsCatalog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.ImageEstimatorsCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Module ImageEstimatorsCatalog" />
  <TypeSignature Language="F#" Value="type ImageEstimatorsCatalog = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.ImageAnalytics</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ConvertToGrayscale">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.Image.ImageGrayscalingEstimator ConvertToGrayscale (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.Image.ImageGrayscalingEstimator ConvertToGrayscale(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.ImageEstimatorsCatalog.ConvertToGrayscale(Microsoft.ML.TransformsCatalog,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConvertToGrayscale (catalog As TransformsCatalog, outputColumnName As String, Optional inputColumnName As String = null) As ImageGrayscalingEstimator" />
      <MemberSignature Language="F#" Value="static member ConvertToGrayscale : Microsoft.ML.TransformsCatalog * string * string -&gt; Microsoft.ML.Transforms.Image.ImageGrayscalingEstimator" Usage="Microsoft.ML.ImageEstimatorsCatalog.ConvertToGrayscale (catalog, outputColumnName, inputColumnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.ImageAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Image.ImageGrayscalingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="inputColumnName">Name of the column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <summary>
        Converts the images to grayscale.
      </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks 
The images might be converted to grayscale to reduce the complexity of the model.
The grayed out images contain less information to process than the colored images.
Another use case for converting to grayscale is to generate new images out of the existing ones, so you can have a larger dataset,        
a technique known as [data augmentation](http://www.stat.harvard.edu/Faculty_Content/meng/JCGS01.pdf).
         
For end-to-end image processing pipelines, and scenarios in your applications, see the 
[examples in the machinelearning-samples github repository](https://github.com/dotnet/machinelearning-samples/tree/master/samples/csharp/getting-started).
        ]]></format>
          <seealso cref="T:Microsoft.ML.ImageEstimatorsCatalog" />
          <seealso cref="T:Microsoft.ML.Data.ImageLoadingEstimator" />
        </remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[ConvertToGrayscale](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/ImageAnalytics/ConvertToGrayscale.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ConvertToImage">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.Image.VectorToImageConvertingEstimator ConvertToImage (this Microsoft.ML.TransformsCatalog catalog, int imageHeight, int imageWidth, string outputColumnName, string inputColumnName = null, Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits colorsPresent = Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator+ColorBits.Rgb, Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorsOrder orderOfColors = Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator+ColorsOrder.ARGB, bool interleavedColors = false, float scaleImage = 1, float offsetImage = 0, int defaultAlpha = 255, int defaultRed = 0, int defaultGreen = 0, int defaultBlue = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.Image.VectorToImageConvertingEstimator ConvertToImage(class Microsoft.ML.TransformsCatalog catalog, int32 imageHeight, int32 imageWidth, string outputColumnName, string inputColumnName, valuetype Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator/ColorBits colorsPresent, valuetype Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator/ColorsOrder orderOfColors, bool interleavedColors, float32 scaleImage, float32 offsetImage, int32 defaultAlpha, int32 defaultRed, int32 defaultGreen, int32 defaultBlue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.ImageEstimatorsCatalog.ConvertToImage(Microsoft.ML.TransformsCatalog,System.Int32,System.Int32,System.String,System.String,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorsOrder,System.Boolean,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConvertToImage (catalog As TransformsCatalog, imageHeight As Integer, imageWidth As Integer, outputColumnName As String, Optional inputColumnName As String = null, Optional colorsPresent As ImagePixelExtractingEstimator.ColorBits = Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator+ColorBits.Rgb, Optional orderOfColors As ImagePixelExtractingEstimator.ColorsOrder = Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator+ColorsOrder.ARGB, Optional interleavedColors As Boolean = false, Optional scaleImage As Single = 1, Optional offsetImage As Single = 0, Optional defaultAlpha As Integer = 255, Optional defaultRed As Integer = 0, Optional defaultGreen As Integer = 0, Optional defaultBlue As Integer = 0) As VectorToImageConvertingEstimator" />
      <MemberSignature Language="F#" Value="static member ConvertToImage : Microsoft.ML.TransformsCatalog * int * int * string * string * Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits * Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorsOrder * bool * single * single * int * int * int * int -&gt; Microsoft.ML.Transforms.Image.VectorToImageConvertingEstimator" Usage="Microsoft.ML.ImageEstimatorsCatalog.ConvertToImage (catalog, imageHeight, imageWidth, outputColumnName, inputColumnName, colorsPresent, orderOfColors, interleavedColors, scaleImage, offsetImage, defaultAlpha, defaultRed, defaultGreen, defaultBlue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.ImageAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Image.VectorToImageConvertingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="imageHeight" Type="System.Int32" />
        <Parameter Name="imageWidth" Type="System.Int32" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="colorsPresent" Type="Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator+ColorBits" />
        <Parameter Name="orderOfColors" Type="Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator+ColorsOrder" />
        <Parameter Name="interleavedColors" Type="System.Boolean" />
        <Parameter Name="scaleImage" Type="System.Single" />
        <Parameter Name="offsetImage" Type="System.Single" />
        <Parameter Name="defaultAlpha" Type="System.Int32" />
        <Parameter Name="defaultRed" Type="System.Int32" />
        <Parameter Name="defaultGreen" Type="System.Int32" />
        <Parameter Name="defaultBlue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="catalog">The transforms' catalog.</param>
        <param name="imageHeight">The height of the output images.</param>
        <param name="imageWidth">The width of the output images.</param>
        <param name="outputColumnName"> Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="inputColumnName"> Name of column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="colorsPresent">Specifies which <see cref="T:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits" /> are in present the input pixel vectors. The order of colors is specified in <paramref name="orderOfColors" />.</param>
        <param name="orderOfColors">The order in which colors are presented in the input vector.</param>
        <param name="interleavedColors">Whether the pixels are interleaved, meaning whether they are in <paramref name="orderOfColors" /> order, or separated in the planar form:
            all the values for one color for all pixels, then all the values for another color and so on.</param>
        <param name="scaleImage">The values are scaled by this value before being converted to pixels. Applied to vector value before <paramref name="offsetImage" />.</param>
        <param name="offsetImage">The offset is subtracted before converting the values to pixels. Applied to vector value after <paramref name="scaleImage" />.</param>
        <param name="defaultAlpha">Default value for alpha color, would be overriden if <paramref name="colorsPresent" /> contains <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits.Alpha" />.</param>
        <param name="defaultRed">Default value for red color, would be overriden if <paramref name="colorsPresent" /> contains <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits.Red" />.</param>
        <param name="defaultGreen">Default value for grenn color, would be overriden if <paramref name="colorsPresent" /> contains <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits.Green" />.</param>
        <param name="defaultBlue">Default value for blue color, would be overriden if <paramref name="colorsPresent" /> contains <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits.Blue" />.</param>
        <summary>
            Converts vectors of pixels into <see cref="T:Microsoft.ML.Transforms.Image.ImageDataViewType" /> representation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractPixels">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator ExtractPixels (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName = null, Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits colorsToExtract = Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator+ColorBits.Rgb, Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorsOrder orderOfExtraction = Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator+ColorsOrder.ARGB, bool interleavePixelColors = false, float offsetImage = 0, float scaleImage = 1, bool outputAsFloatArray = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator ExtractPixels(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName, valuetype Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator/ColorBits colorsToExtract, valuetype Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator/ColorsOrder orderOfExtraction, bool interleavePixelColors, float32 offsetImage, float32 scaleImage, bool outputAsFloatArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.ImageEstimatorsCatalog.ExtractPixels(Microsoft.ML.TransformsCatalog,System.String,System.String,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorsOrder,System.Boolean,System.Single,System.Single,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExtractPixels (catalog As TransformsCatalog, outputColumnName As String, Optional inputColumnName As String = null, Optional colorsToExtract As ImagePixelExtractingEstimator.ColorBits = Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator+ColorBits.Rgb, Optional orderOfExtraction As ImagePixelExtractingEstimator.ColorsOrder = Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator+ColorsOrder.ARGB, Optional interleavePixelColors As Boolean = false, Optional offsetImage As Single = 0, Optional scaleImage As Single = 1, Optional outputAsFloatArray As Boolean = true) As ImagePixelExtractingEstimator" />
      <MemberSignature Language="F#" Value="static member ExtractPixels : Microsoft.ML.TransformsCatalog * string * string * Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits * Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorsOrder * bool * single * single * bool -&gt; Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator" Usage="Microsoft.ML.ImageEstimatorsCatalog.ExtractPixels (catalog, outputColumnName, inputColumnName, colorsToExtract, orderOfExtraction, interleavePixelColors, offsetImage, scaleImage, outputAsFloatArray)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.ImageAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="colorsToExtract" Type="Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator+ColorBits" />
        <Parameter Name="orderOfExtraction" Type="Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator+ColorsOrder" />
        <Parameter Name="interleavePixelColors" Type="System.Boolean" />
        <Parameter Name="offsetImage" Type="System.Single" />
        <Parameter Name="scaleImage" Type="System.Single" />
        <Parameter Name="outputAsFloatArray" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="inputColumnName">Name of column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="colorsToExtract">The colors to extract from the image.</param>
        <param name="orderOfExtraction">The order in which to extract colors from pixel.</param>
        <param name="interleavePixelColors">Whether to interleave the pixels colors, meaning keep them in the <paramref name="orderOfExtraction" /> order, or leave them in the plannar form:
            all the values for one color for all pixels, then all the values for another color, and so on.</param>
        <param name="offsetImage">Offset each pixel's color value by this amount. Applied to color value before <paramref name="scaleImage" />.</param>
        <param name="scaleImage">Scale each pixel's color value by this amount. Applied to color value after <paramref name="offsetImage" />.</param>
        <param name="outputAsFloatArray">Output array as float array. If false, output as byte array and ignores <paramref name="offsetImage" /> and <paramref name="scaleImage" />.</param>
        <summary>
        Extracts the pixels from the input images and, converts them into a vector of numbers. This can be further used as feature by the algorithms added to the pipeline.   
      </summary>
        <returns>To be added.</returns>
        <remarks>
        The ImagePixelExtractingEstimator extracts the pixels from the input images and, converts them into a vector of numbers.
        This can be further used as feature by the algorithms added to the pipeline.
        <para>
          ImagePixelExtractingEstimator expects a <see cref="T:Microsoft.ML.Transforms.Image.ImageResizingEstimator" />  in the pipeline, before it is used.
          For end-to-end image processing pipelines, and scenarios in your applications, see the
          <a href="https://github.com/dotnet/machinelearning-samples/tree/master/samples/csharp/getting-started">examples in the machinelearning-samples github repository</a>.
        </para><seealso cref="T:Microsoft.ML.ImageEstimatorsCatalog" /><seealso cref="T:Microsoft.ML.Data.ImageLoadingEstimator" /><seealso cref="T:Microsoft.ML.Transforms.Image.ImageResizingEstimator" /></remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[ExtractPixels](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/ImageAnalytics/ExtractPixels.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="LoadImages">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Data.ImageLoadingEstimator LoadImages (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string imageFolder, string inputColumnName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Data.ImageLoadingEstimator LoadImages(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string imageFolder, string inputColumnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.ImageEstimatorsCatalog.LoadImages(Microsoft.ML.TransformsCatalog,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LoadImages (catalog As TransformsCatalog, outputColumnName As String, imageFolder As String, Optional inputColumnName As String = null) As ImageLoadingEstimator" />
      <MemberSignature Language="F#" Value="static member LoadImages : Microsoft.ML.TransformsCatalog * string * string * string -&gt; Microsoft.ML.Data.ImageLoadingEstimator" Usage="Microsoft.ML.ImageEstimatorsCatalog.LoadImages (catalog, outputColumnName, imageFolder, inputColumnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.ImageAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.ImageLoadingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="imageFolder" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="imageFolder">The images folder.</param>
        <param name="inputColumnName">Name of the column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <summary>
            Loads the images from the <see cref="F:Microsoft.ML.Data.ImageLoadingTransformer.ImageFolder" /> into memory.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The image get loaded in memory as a <see cref="T:System.Drawing.Bitmap" /> type.
            Loading is the first step of almost every pipeline that does image processing, and further analysis on images.
            The images to load need to be in the formats supported by <see cref="T:System.Drawing.Bitmap" />.
            For end-to-end image processing pipelines, and scenarios in your applications, see the
            <a href="https://github.com/dotnet/machinelearning-samples/tree/master/samples/csharp/getting-started"> examples in the machinelearning-samples github repository.</a><seealso cref="T:Microsoft.ML.ImageEstimatorsCatalog" /></remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[LoadImages](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/ImageAnalytics/LoadImages.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ResizeImages">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.Image.ImageResizingEstimator ResizeImages (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, int imageWidth, int imageHeight, string inputColumnName = null, Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind resizing = Microsoft.ML.Transforms.Image.ImageResizingEstimator+ResizingKind.IsoCrop, Microsoft.ML.Transforms.Image.ImageResizingEstimator.Anchor cropAnchor = Microsoft.ML.Transforms.Image.ImageResizingEstimator+Anchor.Center);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.Image.ImageResizingEstimator ResizeImages(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, int32 imageWidth, int32 imageHeight, string inputColumnName, valuetype Microsoft.ML.Transforms.Image.ImageResizingEstimator/ResizingKind resizing, valuetype Microsoft.ML.Transforms.Image.ImageResizingEstimator/Anchor cropAnchor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.ImageEstimatorsCatalog.ResizeImages(Microsoft.ML.TransformsCatalog,System.String,System.Int32,System.Int32,System.String,Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind,Microsoft.ML.Transforms.Image.ImageResizingEstimator.Anchor)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ResizeImages (catalog As TransformsCatalog, outputColumnName As String, imageWidth As Integer, imageHeight As Integer, Optional inputColumnName As String = null, Optional resizing As ImageResizingEstimator.ResizingKind = Microsoft.ML.Transforms.Image.ImageResizingEstimator+ResizingKind.IsoCrop, Optional cropAnchor As ImageResizingEstimator.Anchor = Microsoft.ML.Transforms.Image.ImageResizingEstimator+Anchor.Center) As ImageResizingEstimator" />
      <MemberSignature Language="F#" Value="static member ResizeImages : Microsoft.ML.TransformsCatalog * string * int * int * string * Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind * Microsoft.ML.Transforms.Image.ImageResizingEstimator.Anchor -&gt; Microsoft.ML.Transforms.Image.ImageResizingEstimator" Usage="Microsoft.ML.ImageEstimatorsCatalog.ResizeImages (catalog, outputColumnName, imageWidth, imageHeight, inputColumnName, resizing, cropAnchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.ImageAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Image.ImageResizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="imageWidth" Type="System.Int32" />
        <Parameter Name="imageHeight" Type="System.Int32" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="resizing" Type="Microsoft.ML.Transforms.Image.ImageResizingEstimator+ResizingKind" />
        <Parameter Name="cropAnchor" Type="Microsoft.ML.Transforms.Image.ImageResizingEstimator+Anchor" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="imageWidth">The transformed image width.</param>
        <param name="imageHeight">The transformed image height.</param>
        <param name="inputColumnName">Name of column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="resizing"> The type of image resizing as specified in <see cref="T:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind" />.</param>
        <param name="cropAnchor">Where to place the anchor, to start cropping. Options defined in <see cref="T:Microsoft.ML.Transforms.Image.ImageResizingEstimator.Anchor" /></param>
        <summary>
            Resizes the images to a new width and height.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            In image processing pipelines, often machine learning practitioner make use of<a href="https://blogs.msdn.microsoft.com/mlserver/2017/04/12/image-featurization-with-a-pre-trained-deep-neural-network-model/">
            pre-trained DNN featurizers</a> to extract features for usage in the machine learning algorithms.
            Those pre-trained models have a defined width and height for their input images, so often, after getting loaded, the images will need to get resized before
            further processing.
            The new width and height can be specified in the <paramref name="imageWidth" /> and <paramref name="imageHeight" /><seealso cref="T:Microsoft.ML.ImageEstimatorsCatalog" /><seealso cref="T:Microsoft.ML.Data.ImageLoadingEstimator" /></remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[ResizeImages](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/ImageAnalytics/ResizeImages.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>