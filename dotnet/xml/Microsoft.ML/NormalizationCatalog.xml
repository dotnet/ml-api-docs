<Type Name="NormalizationCatalog" FullName="Microsoft.ML.NormalizationCatalog">
  <TypeSignature Language="C#" Value="public static class NormalizationCatalog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NormalizationCatalog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.NormalizationCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Module NormalizationCatalog" />
  <TypeSignature Language="F#" Value="type NormalizationCatalog = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extensions for normalizer operations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="NormalizeBinning">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.NormalizingEstimator NormalizeBinning (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName = null, long maximumExampleCount = 1000000000, bool fixZero = true, int maximumBinCount = 1024);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.NormalizingEstimator NormalizeBinning(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName, int64 maximumExampleCount, bool fixZero, int32 maximumBinCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.NormalizationCatalog.NormalizeBinning(Microsoft.ML.TransformsCatalog,System.String,System.String,System.Int64,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NormalizeBinning (catalog As TransformsCatalog, outputColumnName As String, Optional inputColumnName As String = null, Optional maximumExampleCount As Long = 1000000000, Optional fixZero As Boolean = true, Optional maximumBinCount As Integer = 1024) As NormalizingEstimator" />
      <MemberSignature Language="F#" Value="static member NormalizeBinning : Microsoft.ML.TransformsCatalog * string * string * int64 * bool * int -&gt; Microsoft.ML.Transforms.NormalizingEstimator" Usage="Microsoft.ML.NormalizationCatalog.NormalizeBinning (catalog, outputColumnName, inputColumnName, maximumExampleCount, fixZero, maximumBinCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.NormalizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="maximumExampleCount" Type="System.Int64" />
        <Parameter Name="fixZero" Type="System.Boolean" />
        <Parameter Name="maximumBinCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform catalog</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="inputColumnName">Name of the column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="maximumExampleCount">Maximum number of examples used to train the normalizer.</param>
        <param name="fixZero">Whether to map zero to zero, preserving sparsity.</param>
        <param name="maximumBinCount">Maximum number of bins (power of 2 recommended).</param>
        <summary>
            The values are assigned into bins with equal density.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeGlobalContrast">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.GlobalContrastNormalizingEstimator NormalizeGlobalContrast (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName = null, bool ensureZeroMean = true, bool ensureUnitStandardDeviation = false, float scale = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.GlobalContrastNormalizingEstimator NormalizeGlobalContrast(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName, bool ensureZeroMean, bool ensureUnitStandardDeviation, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.NormalizationCatalog.NormalizeGlobalContrast(Microsoft.ML.TransformsCatalog,System.String,System.String,System.Boolean,System.Boolean,System.Single)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NormalizeGlobalContrast (catalog As TransformsCatalog, outputColumnName As String, Optional inputColumnName As String = null, Optional ensureZeroMean As Boolean = true, Optional ensureUnitStandardDeviation As Boolean = false, Optional scale As Single = 1) As GlobalContrastNormalizingEstimator" />
      <MemberSignature Language="F#" Value="static member NormalizeGlobalContrast : Microsoft.ML.TransformsCatalog * string * string * bool * bool * single -&gt; Microsoft.ML.Transforms.GlobalContrastNormalizingEstimator" Usage="Microsoft.ML.NormalizationCatalog.NormalizeGlobalContrast (catalog, outputColumnName, inputColumnName, ensureZeroMean, ensureUnitStandardDeviation, scale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.GlobalContrastNormalizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="ensureZeroMean" Type="System.Boolean" />
        <Parameter Name="ensureUnitStandardDeviation" Type="System.Boolean" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="inputColumnName">Name of column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="ensureZeroMean">If <see langword="true" />, subtract mean from each value before normalizing and use the raw input otherwise.</param>
        <param name="ensureUnitStandardDeviation">If <see langword="true" />, resulted vector's standard deviation would be one. Otherwise, resulted vector's L2-norm would be one.</param>
        <param name="scale">Scale features by this value.</param>
        <summary>
            Takes column filled with a vector of floats and computes global contrast normalization of it. By setting <paramref name="ensureZeroMean" /> to <see langword="true" />,
            a pre-processing step would be applied to make the specified column's mean be a zero vector.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[GlobalContrastNormalize](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/ProjectionTransforms.cs?range=1-6,12-112)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="NormalizeLogMeanVariance">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.NormalizingEstimator NormalizeLogMeanVariance (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName = null, long maximumExampleCount = 1000000000, bool useCdf = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.NormalizingEstimator NormalizeLogMeanVariance(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName, int64 maximumExampleCount, bool useCdf) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.NormalizationCatalog.NormalizeLogMeanVariance(Microsoft.ML.TransformsCatalog,System.String,System.String,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NormalizeLogMeanVariance (catalog As TransformsCatalog, outputColumnName As String, Optional inputColumnName As String = null, Optional maximumExampleCount As Long = 1000000000, Optional useCdf As Boolean = true) As NormalizingEstimator" />
      <MemberSignature Language="F#" Value="static member NormalizeLogMeanVariance : Microsoft.ML.TransformsCatalog * string * string * int64 * bool -&gt; Microsoft.ML.Transforms.NormalizingEstimator" Usage="Microsoft.ML.NormalizationCatalog.NormalizeLogMeanVariance (catalog, outputColumnName, inputColumnName, maximumExampleCount, useCdf)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.NormalizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="maximumExampleCount" Type="System.Int64" />
        <Parameter Name="useCdf" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform catalog</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="inputColumnName">Name of the column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="maximumExampleCount">Maximum number of examples used to train the normalizer.</param>
        <param name="useCdf">Whether to use CDF as the output.</param>
        <summary>
            It normalizes the data based on the computed mean and variance of the logarithm of the data.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeLpNorm">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.LpNormNormalizingEstimator NormalizeLpNorm (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName = null, Microsoft.ML.Transforms.LpNormNormalizingEstimatorBase.NormFunction norm = Microsoft.ML.Transforms.LpNormNormalizingEstimatorBase+NormFunction.L2, bool ensureZeroMean = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.LpNormNormalizingEstimator NormalizeLpNorm(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName, valuetype Microsoft.ML.Transforms.LpNormNormalizingEstimatorBase/NormFunction norm, bool ensureZeroMean) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.NormalizationCatalog.NormalizeLpNorm(Microsoft.ML.TransformsCatalog,System.String,System.String,Microsoft.ML.Transforms.LpNormNormalizingEstimatorBase.NormFunction,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NormalizeLpNorm (catalog As TransformsCatalog, outputColumnName As String, Optional inputColumnName As String = null, Optional norm As LpNormNormalizingEstimatorBase.NormFunction = Microsoft.ML.Transforms.LpNormNormalizingEstimatorBase+NormFunction.L2, Optional ensureZeroMean As Boolean = false) As LpNormNormalizingEstimator" />
      <MemberSignature Language="F#" Value="static member NormalizeLpNorm : Microsoft.ML.TransformsCatalog * string * string * Microsoft.ML.Transforms.LpNormNormalizingEstimatorBase.NormFunction * bool -&gt; Microsoft.ML.Transforms.LpNormNormalizingEstimator" Usage="Microsoft.ML.NormalizationCatalog.NormalizeLpNorm (catalog, outputColumnName, inputColumnName, norm, ensureZeroMean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.LpNormNormalizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="norm" Type="Microsoft.ML.Transforms.LpNormNormalizingEstimatorBase+NormFunction" />
        <Parameter Name="ensureZeroMean" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="inputColumnName">Name of column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="norm">Type of norm to use to normalize each sample. The indicated norm of the resulted vector will be normalized to one.</param>
        <param name="ensureZeroMean">If <see langword="true" />, subtract mean from each value before normalizing and use the raw input otherwise.</param>
        <summary>
            Takes column filled with a vector of floats and normalize its <paramref name="norm" /> to one. By setting <paramref name="ensureZeroMean" /> to <see langword="true" />,
            a pre-processing step would be applied to make the specified column's mean be a zero vector.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[LpNormalize](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/ProjectionTransforms.cs?range=1-6,12-112)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="NormalizeMeanVariance">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.NormalizingEstimator NormalizeMeanVariance (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName = null, long maximumExampleCount = 1000000000, bool fixZero = true, bool useCdf = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.NormalizingEstimator NormalizeMeanVariance(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName, int64 maximumExampleCount, bool fixZero, bool useCdf) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.NormalizationCatalog.NormalizeMeanVariance(Microsoft.ML.TransformsCatalog,System.String,System.String,System.Int64,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NormalizeMeanVariance (catalog As TransformsCatalog, outputColumnName As String, Optional inputColumnName As String = null, Optional maximumExampleCount As Long = 1000000000, Optional fixZero As Boolean = true, Optional useCdf As Boolean = false) As NormalizingEstimator" />
      <MemberSignature Language="F#" Value="static member NormalizeMeanVariance : Microsoft.ML.TransformsCatalog * string * string * int64 * bool * bool -&gt; Microsoft.ML.Transforms.NormalizingEstimator" Usage="Microsoft.ML.NormalizationCatalog.NormalizeMeanVariance (catalog, outputColumnName, inputColumnName, maximumExampleCount, fixZero, useCdf)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.NormalizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="maximumExampleCount" Type="System.Int64" />
        <Parameter Name="fixZero" Type="System.Boolean" />
        <Parameter Name="useCdf" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform catalog</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="inputColumnName">Name of the column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="maximumExampleCount">Maximum number of examples used to train the normalizer.</param>
        <param name="fixZero">Whether to map zero to zero, preserving sparsity.</param>
        <param name="useCdf">Whether to use CDF as the output.</param>
        <summary>
            It normalizes the data based on the computed mean and variance of the data.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeMinMax">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.NormalizingEstimator NormalizeMinMax (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName = null, long maximumExampleCount = 1000000000, bool fixZero = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.NormalizingEstimator NormalizeMinMax(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName, int64 maximumExampleCount, bool fixZero) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.NormalizationCatalog.NormalizeMinMax(Microsoft.ML.TransformsCatalog,System.String,System.String,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NormalizeMinMax (catalog As TransformsCatalog, outputColumnName As String, Optional inputColumnName As String = null, Optional maximumExampleCount As Long = 1000000000, Optional fixZero As Boolean = true) As NormalizingEstimator" />
      <MemberSignature Language="F#" Value="static member NormalizeMinMax : Microsoft.ML.TransformsCatalog * string * string * int64 * bool -&gt; Microsoft.ML.Transforms.NormalizingEstimator" Usage="Microsoft.ML.NormalizationCatalog.NormalizeMinMax (catalog, outputColumnName, inputColumnName, maximumExampleCount, fixZero)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.NormalizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="maximumExampleCount" Type="System.Int64" />
        <Parameter Name="fixZero" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform catalog</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="inputColumnName">Name of the column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="maximumExampleCount">Maximum number of examples used to train the normalizer.</param>
        <param name="fixZero">Whether to map zero to zero, preserving sparsity.</param>
        <summary>
            It normalizes the data based on the observed minimum and maximum values of the data.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[Normalize](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Normalizer.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="NormalizeSupervisedBinning">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.NormalizingEstimator NormalizeSupervisedBinning (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName = null, string labelColumnName = &quot;Label&quot;, long maximumExampleCount = 1000000000, bool fixZero = true, int maximumBinCount = 1024, int mininimumExamplesPerBin = 10);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.NormalizingEstimator NormalizeSupervisedBinning(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName, string labelColumnName, int64 maximumExampleCount, bool fixZero, int32 maximumBinCount, int32 mininimumExamplesPerBin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.NormalizationCatalog.NormalizeSupervisedBinning(Microsoft.ML.TransformsCatalog,System.String,System.String,System.String,System.Int64,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NormalizeSupervisedBinning (catalog As TransformsCatalog, outputColumnName As String, Optional inputColumnName As String = null, Optional labelColumnName As String = &quot;Label&quot;, Optional maximumExampleCount As Long = 1000000000, Optional fixZero As Boolean = true, Optional maximumBinCount As Integer = 1024, Optional mininimumExamplesPerBin As Integer = 10) As NormalizingEstimator" />
      <MemberSignature Language="F#" Value="static member NormalizeSupervisedBinning : Microsoft.ML.TransformsCatalog * string * string * string * int64 * bool * int * int -&gt; Microsoft.ML.Transforms.NormalizingEstimator" Usage="Microsoft.ML.NormalizationCatalog.NormalizeSupervisedBinning (catalog, outputColumnName, inputColumnName, labelColumnName, maximumExampleCount, fixZero, maximumBinCount, mininimumExamplesPerBin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.NormalizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="maximumExampleCount" Type="System.Int64" />
        <Parameter Name="fixZero" Type="System.Boolean" />
        <Parameter Name="maximumBinCount" Type="System.Int32" />
        <Parameter Name="mininimumExamplesPerBin" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform catalog</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="inputColumnName">Name of the column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="labelColumnName">Name of the label column for supervised binning.</param>
        <param name="maximumExampleCount">Maximum number of examples used to train the normalizer.</param>
        <param name="fixZero">Whether to map zero to zero, preserving sparsity.</param>
        <param name="maximumBinCount">Maximum number of bins (power of 2 recommended).</param>
        <param name="mininimumExamplesPerBin">Minimum number of examples per bin.</param>
        <summary>
            The values are assigned into bins based on correlation with the <paramref name="labelColumnName" /> column.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>