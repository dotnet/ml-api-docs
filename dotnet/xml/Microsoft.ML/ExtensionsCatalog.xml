<Type Name="ExtensionsCatalog" FullName="Microsoft.ML.ExtensionsCatalog">
  <TypeSignature Language="C#" Value="public static class ExtensionsCatalog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ExtensionsCatalog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.ExtensionsCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Module ExtensionsCatalog" />
  <TypeSignature Language="F#" Value="type ExtensionsCatalog = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Collection of extension methods for <see cref="T:Microsoft.ML.TransformsCatalog" /> to create instances of
            missing value transformer components.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="IndicateMissingValues">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.MissingValueIndicatorEstimator IndicateMissingValues (this Microsoft.ML.TransformsCatalog catalog, Microsoft.ML.InputOutputColumnPair[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.MissingValueIndicatorEstimator IndicateMissingValues(class Microsoft.ML.TransformsCatalog catalog, class Microsoft.ML.InputOutputColumnPair[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.ExtensionsCatalog.IndicateMissingValues(Microsoft.ML.TransformsCatalog,Microsoft.ML.InputOutputColumnPair[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndicateMissingValues (catalog As TransformsCatalog, columns As InputOutputColumnPair()) As MissingValueIndicatorEstimator" />
      <MemberSignature Language="F#" Value="static member IndicateMissingValues : Microsoft.ML.TransformsCatalog * Microsoft.ML.InputOutputColumnPair[] -&gt; Microsoft.ML.Transforms.MissingValueIndicatorEstimator" Usage="Microsoft.ML.ExtensionsCatalog.IndicateMissingValues (catalog, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.MissingValueIndicatorEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="columns" Type="Microsoft.ML.InputOutputColumnPair[]" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="columns">The pairs of input and output columns. This estimator operates over data which is either scalar or vector of <see cref="T:System.Single" /> or <see cref="T:System.Double" />.</param>
        <summary>
            Create a <see cref="T:Microsoft.ML.Transforms.MissingValueIndicatorEstimator" />, which copies the data from the column specified in <see cref="P:Microsoft.ML.InputOutputColumnPair.InputColumnName" />
            to a new column: <see cref="P:Microsoft.ML.InputOutputColumnPair.OutputColumnName" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>This transform can operate over several columns.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[MissingValueIndicator](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/IndicateMissingValuesMultiColumn.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="IndicateMissingValues">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.MissingValueIndicatorEstimator IndicateMissingValues (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.MissingValueIndicatorEstimator IndicateMissingValues(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.ExtensionsCatalog.IndicateMissingValues(Microsoft.ML.TransformsCatalog,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndicateMissingValues (catalog As TransformsCatalog, outputColumnName As String, Optional inputColumnName As String = null) As MissingValueIndicatorEstimator" />
      <MemberSignature Language="F#" Value="static member IndicateMissingValues : Microsoft.ML.TransformsCatalog * string * string -&gt; Microsoft.ML.Transforms.MissingValueIndicatorEstimator" Usage="Microsoft.ML.ExtensionsCatalog.IndicateMissingValues (catalog, outputColumnName, inputColumnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.MissingValueIndicatorEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.
            This column's data type will be a vector of <see cref="T:System.Boolean" />.</param>
        <param name="inputColumnName">Name of the column to copy the data from.
            This estimator operates over scalar or vector of <see cref="T:System.Single" /> or <see cref="T:System.Double" />.</param>
        <summary>
            Create a <see cref="T:Microsoft.ML.Transforms.MissingValueIndicatorEstimator" />, which scans the data from the column specified in <paramref name="inputColumnName" />
            and fills new column specified in <paramref name="outputColumnName" /> with vector of bools where i-th bool has value of <see langword="true" />
            if i-th element in column data has missing value and <see langword="false" /> otherwise.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[MissingValueIndicator](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/IndicateMissingValues.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ReplaceMissingValues">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.MissingValueReplacingEstimator ReplaceMissingValues (this Microsoft.ML.TransformsCatalog catalog, Microsoft.ML.InputOutputColumnPair[] columns, Microsoft.ML.Transforms.MissingValueReplacingEstimator.ReplacementMode replacementMode = Microsoft.ML.Transforms.MissingValueReplacingEstimator+ReplacementMode.DefaultValue, bool imputeBySlot = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.MissingValueReplacingEstimator ReplaceMissingValues(class Microsoft.ML.TransformsCatalog catalog, class Microsoft.ML.InputOutputColumnPair[] columns, valuetype Microsoft.ML.Transforms.MissingValueReplacingEstimator/ReplacementMode replacementMode, bool imputeBySlot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.ExtensionsCatalog.ReplaceMissingValues(Microsoft.ML.TransformsCatalog,Microsoft.ML.InputOutputColumnPair[],Microsoft.ML.Transforms.MissingValueReplacingEstimator.ReplacementMode,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member ReplaceMissingValues : Microsoft.ML.TransformsCatalog * Microsoft.ML.InputOutputColumnPair[] * Microsoft.ML.Transforms.MissingValueReplacingEstimator.ReplacementMode * bool -&gt; Microsoft.ML.Transforms.MissingValueReplacingEstimator" Usage="Microsoft.ML.ExtensionsCatalog.ReplaceMissingValues (catalog, columns, replacementMode, imputeBySlot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.MissingValueReplacingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="columns" Type="Microsoft.ML.InputOutputColumnPair[]" />
        <Parameter Name="replacementMode" Type="Microsoft.ML.Transforms.MissingValueReplacingEstimator+ReplacementMode" />
        <Parameter Name="imputeBySlot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="columns">The pairs of input and output columns. This estimator operates over scalar or vector of floats or doubles.</param>
        <param name="replacementMode">The type of replacement to use as specified in <see cref="T:Microsoft.ML.Transforms.MissingValueReplacingEstimator.ReplacementMode" /></param>
        <param name="imputeBySlot">If <see langword="true" />, per-slot imputation of replacement is performed.
            Otherwise, replacement value is imputed for the entire vector column. This setting is ignored for scalars and variable vectors,
            where imputation is always for the entire column.</param>
        <summary>
            Create a <see cref="T:Microsoft.ML.Transforms.ColumnCopyingEstimator" />, which copies the data from the column specified in <see cref="P:Microsoft.ML.InputOutputColumnPair.InputColumnName" />
            to a new column: <see cref="P:Microsoft.ML.InputOutputColumnPair.OutputColumnName" /> and replaces missing values in it according to <paramref name="replacementMode" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>This transform can operate over several columns.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[MissingValuesReplace](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/ReplaceMissingValuesMultiColumn.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ReplaceMissingValues">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.MissingValueReplacingEstimator ReplaceMissingValues (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName = null, Microsoft.ML.Transforms.MissingValueReplacingEstimator.ReplacementMode replacementMode = Microsoft.ML.Transforms.MissingValueReplacingEstimator+ReplacementMode.DefaultValue, bool imputeBySlot = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.MissingValueReplacingEstimator ReplaceMissingValues(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName, valuetype Microsoft.ML.Transforms.MissingValueReplacingEstimator/ReplacementMode replacementMode, bool imputeBySlot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.ExtensionsCatalog.ReplaceMissingValues(Microsoft.ML.TransformsCatalog,System.String,System.String,Microsoft.ML.Transforms.MissingValueReplacingEstimator.ReplacementMode,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member ReplaceMissingValues : Microsoft.ML.TransformsCatalog * string * string * Microsoft.ML.Transforms.MissingValueReplacingEstimator.ReplacementMode * bool -&gt; Microsoft.ML.Transforms.MissingValueReplacingEstimator" Usage="Microsoft.ML.ExtensionsCatalog.ReplaceMissingValues (catalog, outputColumnName, inputColumnName, replacementMode, imputeBySlot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.MissingValueReplacingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="replacementMode" Type="Microsoft.ML.Transforms.MissingValueReplacingEstimator+ReplacementMode" />
        <Parameter Name="imputeBySlot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.
            This column's data type will be the same as that of the input column.</param>
        <param name="inputColumnName">Name of the column to copy the data from.
            This estimator operates over scalar or vector of <see cref="T:System.Single" /> or <see cref="T:System.Double" />.</param>
        <param name="replacementMode">The type of replacement to use as specified in <see cref="T:Microsoft.ML.Transforms.MissingValueReplacingEstimator.ReplacementMode" /></param>
        <param name="imputeBySlot">If true, per-slot imputation of replacement is performed.
            Otherwise, replacement value is imputed for the entire vector column. This setting is ignored for scalars and variable vectors,
            where imputation is always for the entire column.</param>
        <summary>
            Create a <see cref="T:Microsoft.ML.Transforms.MissingValueReplacingEstimator" />, which copies the data from the column specified in <paramref name="inputColumnName" />
            to a new column: <paramref name="outputColumnName" /> and replaces missing values in it according to <paramref name="replacementMode" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[MissingValuesReplace](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/ReplaceMissingValues.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>