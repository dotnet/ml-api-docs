<Type Name="MulticlassClassificationContext" FullName="Microsoft.ML.MulticlassClassificationContext">
  <TypeSignature Language="C#" Value="public sealed class MulticlassClassificationContext : Microsoft.ML.TrainContextBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MulticlassClassificationContext extends Microsoft.ML.TrainContextBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.MulticlassClassificationContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MulticlassClassificationContext&#xA;Inherits TrainContextBase" />
  <TypeSignature Language="F#" Value="type MulticlassClassificationContext = class&#xA;    inherit TrainContextBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.TrainContextBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The central context for multiclass classification trainers.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MulticlassClassificationContext (Microsoft.ML.IHostEnvironment env);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.MulticlassClassificationContext.#ctor(Microsoft.ML.IHostEnvironment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.MulticlassClassificationContext : Microsoft.ML.IHostEnvironment -&gt; Microsoft.ML.MulticlassClassificationContext" Usage="new Microsoft.ML.MulticlassClassificationContext env" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CrossValidate">
      <MemberSignature Language="C#" Value="public ValueTuple&lt;Microsoft.ML.Data.MultiClassClassifierMetrics,Microsoft.ML.Core.Data.ITransformer,Microsoft.ML.Data.IDataView&gt;[] CrossValidate (Microsoft.ML.Data.IDataView data, Microsoft.ML.Core.Data.IEstimator&lt;Microsoft.ML.Core.Data.ITransformer&gt; estimator, int numFolds = 5, string labelColumn = &quot;Label&quot;, string stratificationColumn = null, Nullable&lt;uint&gt; seed = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ValueTuple`3&lt;class Microsoft.ML.Data.MultiClassClassifierMetrics, class Microsoft.ML.Core.Data.ITransformer, class Microsoft.ML.Data.IDataView&gt;[] CrossValidate(class Microsoft.ML.Data.IDataView data, class Microsoft.ML.Core.Data.IEstimator`1&lt;class Microsoft.ML.Core.Data.ITransformer&gt; estimator, int32 numFolds, string labelColumn, string stratificationColumn, valuetype System.Nullable`1&lt;unsigned int32&gt; seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.MulticlassClassificationContext.CrossValidate(Microsoft.ML.Data.IDataView,Microsoft.ML.Core.Data.IEstimator{Microsoft.ML.Core.Data.ITransformer},System.Int32,System.String,System.String,System.Nullable{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Function CrossValidate (data As IDataView, estimator As IEstimator(Of ITransformer), Optional numFolds As Integer = 5, Optional labelColumn As String = &quot;Label&quot;, Optional stratificationColumn As String = null, Optional seed As Nullable(Of UInteger) = null) As ValueTuple(Of MultiClassClassifierMetrics, ITransformer, IDataView)()" />
      <MemberSignature Language="F#" Value="member this.CrossValidate : Microsoft.ML.Data.IDataView * Microsoft.ML.Core.Data.IEstimator&lt;Microsoft.ML.Core.Data.ITransformer&gt; * int * string * string * Nullable&lt;uint32&gt; -&gt; ValueTuple&lt;Microsoft.ML.Data.MultiClassClassifierMetrics, Microsoft.ML.Core.Data.ITransformer, Microsoft.ML.Data.IDataView&gt;[]" Usage="multiclassClassificationContext.CrossValidate (data, estimator, numFolds, labelColumn, stratificationColumn, seed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.Data.MultiClassClassifierMetrics,Microsoft.ML.Core.Data.ITransformer,Microsoft.ML.Data.IDataView&gt;[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "metrics", "model", "scoredTestData" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Microsoft.ML.Data.IDataView" />
        <Parameter Name="estimator" Type="Microsoft.ML.Core.Data.IEstimator&lt;Microsoft.ML.Core.Data.ITransformer&gt;" />
        <Parameter Name="numFolds" Type="System.Int32" />
        <Parameter Name="labelColumn" Type="System.String" />
        <Parameter Name="stratificationColumn" Type="System.String" />
        <Parameter Name="seed" Type="System.Nullable&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="data">The data to run cross-validation on.</param>
        <param name="estimator">The estimator to fit.</param>
        <param name="numFolds">Number of cross-validation folds.</param>
        <param name="labelColumn">The label column (for evaluation).</param>
        <param name="stratificationColumn">Optional name of the column to use as a stratification column. If two examples share the same value of the <paramref name="stratificationColumn" />
            (if provided), they are guaranteed to appear in the same subset (train or test). Use this to make sure there is no label leakage from train to the test set.
            If this optional parameter is not provided, a stratification columns will be generated, and its values will be random numbers .</param>
        <param name="seed">Optional parameter used in combination with the <paramref name="stratificationColumn" />.
            If the <paramref name="stratificationColumn" /> is not provided, the random numbers generated to create it, will use this seed as value.
            And if it is not provided, the default value will be used.</param>
        <summary>
            Run cross-validation over <paramref name="numFolds" /> folds of <paramref name="data" />, by fitting <paramref name="estimator" />,
            and respecting <paramref name="stratificationColumn" /> if provided.
            Then evaluate each sub-model against <paramref name="labelColumn" /> and return metrics.
            </summary>
        <returns>Per-fold results: metrics, models, scored datasets.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Data.MultiClassClassifierMetrics Evaluate (Microsoft.ML.Data.IDataView data, string label = &quot;Label&quot;, string score = &quot;Score&quot;, string predictedLabel = &quot;PredictedLabel&quot;, int topK = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Data.MultiClassClassifierMetrics Evaluate(class Microsoft.ML.Data.IDataView data, string label, string score, string predictedLabel, int32 topK) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.MulticlassClassificationContext.Evaluate(Microsoft.ML.Data.IDataView,System.String,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (data As IDataView, Optional label As String = &quot;Label&quot;, Optional score As String = &quot;Score&quot;, Optional predictedLabel As String = &quot;PredictedLabel&quot;, Optional topK As Integer = 0) As MultiClassClassifierMetrics" />
      <MemberSignature Language="F#" Value="member this.Evaluate : Microsoft.ML.Data.IDataView * string * string * string * int -&gt; Microsoft.ML.Data.MultiClassClassifierMetrics" Usage="multiclassClassificationContext.Evaluate (data, label, score, predictedLabel, topK)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.MultiClassClassifierMetrics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Microsoft.ML.Data.IDataView" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="score" Type="System.String" />
        <Parameter Name="predictedLabel" Type="System.String" />
        <Parameter Name="topK" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">The scored data.</param>
        <param name="label">The name of the label column in <paramref name="data" />.</param>
        <param name="score">The name of the score column in <paramref name="data" />.</param>
        <param name="predictedLabel">The name of the predicted label column in <paramref name="data" />.</param>
        <param name="topK">If given a positive value, the <see cref="P:Microsoft.ML.Data.MultiClassClassifierMetrics.TopKAccuracy" /> will be filled with
            the top-K accuracy, that is, the accuracy assuming we consider an example with the correct class within
            the top-K values as being stored "correctly."</param>
        <summary>
            Evaluates scored multiclass classification data.
            </summary>
        <returns>The evaluation results for these calibrated outputs.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trainers">
      <MemberSignature Language="C#" Value="public Microsoft.ML.MulticlassClassificationContext.MulticlassClassificationTrainers Trainers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.MulticlassClassificationContext/MulticlassClassificationTrainers Trainers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.MulticlassClassificationContext.Trainers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Trainers As MulticlassClassificationContext.MulticlassClassificationTrainers" />
      <MemberSignature Language="F#" Value="member this.Trainers : Microsoft.ML.MulticlassClassificationContext.MulticlassClassificationTrainers" Usage="Microsoft.ML.MulticlassClassificationContext.Trainers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.MulticlassClassificationContext+MulticlassClassificationTrainers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            For trainers for performing multiclass classification.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
