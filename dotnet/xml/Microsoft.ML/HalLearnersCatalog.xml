<Type Name="HalLearnersCatalog" FullName="Microsoft.ML.HalLearnersCatalog">
  <TypeSignature Language="C#" Value="public static class HalLearnersCatalog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HalLearnersCatalog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.HalLearnersCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Module HalLearnersCatalog" />
  <TypeSignature Language="F#" Value="type HalLearnersCatalog = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.HalLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The trainer catalog extensions for the <see cref="T:Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionTrainer" /> and <see cref="T:Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="OrdinaryLeastSquares">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionTrainer OrdinaryLeastSquares (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionTrainer OrdinaryLeastSquares(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, class Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.HalLearnersCatalog.OrdinaryLeastSquares(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member OrdinaryLeastSquares : Microsoft.ML.RegressionCatalog.RegressionTrainers * Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionTrainer.Options -&gt; Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionTrainer" Usage="Microsoft.ML.HalLearnersCatalog.OrdinaryLeastSquares (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.HalLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.RegressionCatalog" />.</param>
        <param name="options">Algorithm advanced options. See <see cref="T:Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionTrainer.Options" />.</param>
        <summary>
            Predict a target using a linear regression model trained with the <see cref="T:Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionTrainer" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[OrdinaryLeastSquares](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/Regression/OrdinaryLeastSquaresWithOptions.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="OrdinaryLeastSquares">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionTrainer OrdinaryLeastSquares (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string exampleWeightColumnName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionTrainer OrdinaryLeastSquares(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, string labelColumnName, string featureColumnName, string exampleWeightColumnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.HalLearnersCatalog.OrdinaryLeastSquares(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrdinaryLeastSquares (catalog As RegressionCatalog.RegressionTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional exampleWeightColumnName As String = null) As OlsLinearRegressionTrainer" />
      <MemberSignature Language="F#" Value="static member OrdinaryLeastSquares : Microsoft.ML.RegressionCatalog.RegressionTrainers * string * string * string -&gt; Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionTrainer" Usage="Microsoft.ML.HalLearnersCatalog.OrdinaryLeastSquares (catalog, labelColumnName, featureColumnName, exampleWeightColumnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.HalLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" Index="0" />
        <Parameter Name="labelColumnName" Type="System.String" Index="1" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="featureColumnName" Type="System.String" Index="2" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" Index="3" FrameworkAlternate="ml-dotnet" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.RegressionCatalog" />.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <summary>
            Predict a target using a linear regression model trained with the <see cref="T:Microsoft.ML.Trainers.HalLearners.OlsLinearRegressionTrainer" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[OrdinaryLeastSquares](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/Regression/OrdinaryLeastSquares.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SymbolicStochasticGradientDescent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer SymbolicStochasticGradientDescent (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer SymbolicStochasticGradientDescent(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.HalLearnersCatalog.SymbolicStochasticGradientDescent(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member SymbolicStochasticGradientDescent : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer.Options -&gt; Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer" Usage="Microsoft.ML.HalLearnersCatalog.SymbolicStochasticGradientDescent (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.HalLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.BinaryClassificationCatalog" />.</param>
        <param name="options">Algorithm advanced options. See <see cref="T:Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer.Options" />.</param>
        <summary>
             Predict a target using a linear binary classification model trained with the <see cref="T:Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[SymbolicStochasticGradientDescent](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/SymbolicStochasticGradientDescentWithOptions.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SymbolicStochasticGradientDescent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer SymbolicStochasticGradientDescent (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, int numberOfIterations = 50);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer SymbolicStochasticGradientDescent(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, string labelColumnName, string featureColumnName, int32 numberOfIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.HalLearnersCatalog.SymbolicStochasticGradientDescent(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SymbolicStochasticGradientDescent (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional numberOfIterations As Integer = 50) As SymSgdClassificationTrainer" />
      <MemberSignature Language="F#" Value="static member SymbolicStochasticGradientDescent : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * string * string * int -&gt; Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer" Usage="Microsoft.ML.HalLearnersCatalog.SymbolicStochasticGradientDescent (catalog, labelColumnName, featureColumnName, numberOfIterations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.HalLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="numberOfIterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.BinaryClassificationCatalog" />.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="numberOfIterations">Number of training iterations.</param>
        <summary>
             Predict a target using a linear binary classification model trained with the <see cref="T:Microsoft.ML.Trainers.HalLearners.SymSgdClassificationTrainer" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[SymbolicStochasticGradientDescent](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/SymbolicStochasticGradientDescent.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="VectorWhiten">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.VectorWhiteningEstimator VectorWhiten (this Microsoft.ML.TransformsCatalog.ProjectionTransforms catalog, params Microsoft.ML.Transforms.VectorWhiteningEstimator.ColumnOptions[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.VectorWhiteningEstimator VectorWhiten(class Microsoft.ML.TransformsCatalog/ProjectionTransforms catalog, class Microsoft.ML.Transforms.VectorWhiteningEstimator/ColumnOptions[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.HalLearnersCatalog.VectorWhiten(Microsoft.ML.TransformsCatalog.ProjectionTransforms,Microsoft.ML.Transforms.VectorWhiteningEstimator.ColumnOptions[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function VectorWhiten (catalog As TransformsCatalog.ProjectionTransforms, ParamArray columns As VectorWhiteningEstimator.ColumnOptions()) As VectorWhiteningEstimator" />
      <MemberSignature Language="F#" Value="static member VectorWhiten : Microsoft.ML.TransformsCatalog.ProjectionTransforms * Microsoft.ML.Transforms.VectorWhiteningEstimator.ColumnOptions[] -&gt; Microsoft.ML.Transforms.VectorWhiteningEstimator" Usage="Microsoft.ML.HalLearnersCatalog.VectorWhiten (catalog, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.HalLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.VectorWhiteningEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog+ProjectionTransforms" RefType="this" />
        <Parameter Name="columns" Type="Microsoft.ML.Transforms.VectorWhiteningEstimator+ColumnOptions[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="columns">Describes the parameters of the whitening process for each column pair.</param>
        <summary>
            Takes columns filled with a vector of random variables with a known covariance matrix into a set of new variables whose
            covariance is the identity matrix, meaning that they are uncorrelated and each have variance 1.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[VectorWhiten](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/Projection/VectorWhitenWithColumnOptions.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="VectorWhiten">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.VectorWhiteningEstimator VectorWhiten (this Microsoft.ML.TransformsCatalog.ProjectionTransforms catalog, string outputColumnName, string inputColumnName = null, Microsoft.ML.Transforms.WhiteningKind kind = Microsoft.ML.Transforms.WhiteningKind.Zca, float eps = 1E-05, int maxRows = 100000, int pcaNum = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.VectorWhiteningEstimator VectorWhiten(class Microsoft.ML.TransformsCatalog/ProjectionTransforms catalog, string outputColumnName, string inputColumnName, valuetype Microsoft.ML.Transforms.WhiteningKind kind, float32 eps, int32 maxRows, int32 pcaNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.HalLearnersCatalog.VectorWhiten(Microsoft.ML.TransformsCatalog.ProjectionTransforms,System.String,System.String,Microsoft.ML.Transforms.WhiteningKind,System.Single,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function VectorWhiten (catalog As TransformsCatalog.ProjectionTransforms, outputColumnName As String, Optional inputColumnName As String = null, Optional kind As WhiteningKind = Microsoft.ML.Transforms.WhiteningKind.Zca, Optional eps As Single = 1E-05, Optional maxRows As Integer = 100000, Optional pcaNum As Integer = 0) As VectorWhiteningEstimator" />
      <MemberSignature Language="F#" Value="static member VectorWhiten : Microsoft.ML.TransformsCatalog.ProjectionTransforms * string * string * Microsoft.ML.Transforms.WhiteningKind * single * int * int -&gt; Microsoft.ML.Transforms.VectorWhiteningEstimator" Usage="Microsoft.ML.HalLearnersCatalog.VectorWhiten (catalog, outputColumnName, inputColumnName, kind, eps, maxRows, pcaNum)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.HalLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.VectorWhiteningEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog+ProjectionTransforms" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="kind" Type="Microsoft.ML.Transforms.WhiteningKind" />
        <Parameter Name="eps" Type="System.Single" />
        <Parameter Name="maxRows" Type="System.Int32" />
        <Parameter Name="pcaNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="inputColumnName">Name of the column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="kind">Whitening kind (PCA/ZCA).</param>
        <param name="eps">Whitening constant, prevents division by zero.</param>
        <param name="maxRows">Maximum number of rows used to train the transform.</param>
        <param name="pcaNum">In case of PCA whitening, indicates the number of components to retain.</param>
        <summary>
            Takes column filled with a vector of random variables with a known covariance matrix into a set of new variables whose covariance is the identity matrix,
            meaning that they are uncorrelated and each have variance 1.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[VectorWhiten](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/Projection/VectorWhiten.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>