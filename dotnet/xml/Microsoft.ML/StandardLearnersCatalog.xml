<Type Name="StandardLearnersCatalog" FullName="Microsoft.ML.StandardLearnersCatalog">
  <TypeSignature Language="C#" Value="public static class StandardLearnersCatalog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit StandardLearnersCatalog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.StandardLearnersCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Module StandardLearnersCatalog" />
  <TypeSignature Language="F#" Value="type StandardLearnersCatalog = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            TrainerEstimator extension methods.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AveragedPerceptron">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer AveragedPerceptron (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer AveragedPerceptron(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.AveragedPerceptron(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member AveragedPerceptron : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer.Options -&gt; Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.AveragedPerceptron (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <summary>
            Predict a target using a linear binary classification model trained with the AveragedPerceptron trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AveragedPerceptron">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer AveragedPerceptron (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, string labelColumn = &quot;Label&quot;, string featureColumn = &quot;Features&quot;, string weights = null, Microsoft.ML.IClassificationLoss lossFunction = null, float learningRate = 1, bool decreaseLearningRate = false, float l2RegularizerWeight = 0, int numIterations = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer AveragedPerceptron(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, string labelColumn, string featureColumn, string weights, class Microsoft.ML.IClassificationLoss lossFunction, float32 learningRate, bool decreaseLearningRate, float32 l2RegularizerWeight, int32 numIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.AveragedPerceptron(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,Microsoft.ML.IClassificationLoss,System.Single,System.Boolean,System.Single,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AveragedPerceptron (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, Optional labelColumn As String = &quot;Label&quot;, Optional featureColumn As String = &quot;Features&quot;, Optional weights As String = null, Optional lossFunction As IClassificationLoss = null, Optional learningRate As Single = 1, Optional decreaseLearningRate As Boolean = false, Optional l2RegularizerWeight As Single = 0, Optional numIterations As Integer = 1) As AveragedPerceptronTrainer" />
      <MemberSignature Language="F#" Value="static member AveragedPerceptron : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * string * string * string * Microsoft.ML.IClassificationLoss * single * bool * single * int -&gt; Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.AveragedPerceptron (catalog, labelColumn, featureColumn, weights, lossFunction, learningRate, decreaseLearningRate, l2RegularizerWeight, numIterations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.Online.AveragedPerceptronTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumn" Type="System.String" />
        <Parameter Name="featureColumn" Type="System.String" />
        <Parameter Name="weights" Type="System.String" />
        <Parameter Name="lossFunction" Type="Microsoft.ML.IClassificationLoss" />
        <Parameter Name="learningRate" Type="System.Single" />
        <Parameter Name="decreaseLearningRate" Type="System.Boolean" />
        <Parameter Name="l2RegularizerWeight" Type="System.Single" />
        <Parameter Name="numIterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="labelColumn">The name of the label column, or dependent variable.</param>
        <param name="featureColumn">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="lossFunction">The custom loss.</param>
        <param name="learningRate">The learning Rate.</param>
        <param name="decreaseLearningRate">Decrease learning rate as iterations progress.</param>
        <param name="l2RegularizerWeight">L2 regularization weight.</param>
        <param name="numIterations">Number of training iterations through the data.</param>
        <summary>
            Predict a target using a linear binary classification model trained with the AveragedPerceptron trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinearSupportVectorMachines">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.Online.LinearSvmTrainer LinearSupportVectorMachines (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.Trainers.Online.LinearSvmTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.Online.LinearSvmTrainer LinearSupportVectorMachines(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.Trainers.Online.LinearSvmTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.LinearSupportVectorMachines(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.Online.LinearSvmTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member LinearSupportVectorMachines : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.Trainers.Online.LinearSvmTrainer.Options -&gt; Microsoft.ML.Trainers.Online.LinearSvmTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.LinearSupportVectorMachines (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.Online.LinearSvmTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.Online.LinearSvmTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.BinaryClassificationCatalog" />.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <summary>
            Predict a target using a linear binary classification model trained with the <see cref="T:Microsoft.ML.Trainers.Online.LinearSvmTrainer" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            The idea behind support vector machines, is to map instances into a high dimensional space
            in which the two classes are linearly separable, i.e., there exists a hyperplane such that all the positive examples are on one side of it,
            and all the negative examples are on the other.
            </para>
          <para>
            After this mapping, quadratic programming is used to find the separating hyperplane that maximizes the
            margin, i.e., the minimal distance between it and the instances.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinearSupportVectorMachines">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.Online.LinearSvmTrainer LinearSupportVectorMachines (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, string labelColumn = &quot;Label&quot;, string featureColumn = &quot;Features&quot;, string weightsColumn = null, int numIterations = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.Online.LinearSvmTrainer LinearSupportVectorMachines(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, string labelColumn, string featureColumn, string weightsColumn, int32 numIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.LinearSupportVectorMachines(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LinearSupportVectorMachines (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, Optional labelColumn As String = &quot;Label&quot;, Optional featureColumn As String = &quot;Features&quot;, Optional weightsColumn As String = null, Optional numIterations As Integer = 1) As LinearSvmTrainer" />
      <MemberSignature Language="F#" Value="static member LinearSupportVectorMachines : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * string * string * string * int -&gt; Microsoft.ML.Trainers.Online.LinearSvmTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.LinearSupportVectorMachines (catalog, labelColumn, featureColumn, weightsColumn, numIterations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.Online.LinearSvmTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumn" Type="System.String" />
        <Parameter Name="featureColumn" Type="System.String" />
        <Parameter Name="weightsColumn" Type="System.String" />
        <Parameter Name="numIterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.BinaryClassificationCatalog" />.</param>
        <param name="labelColumn">The name of the label column. </param>
        <param name="featureColumn">The name of the feature column.</param>
        <param name="weightsColumn">The optional name of the weights column.</param>
        <param name="numIterations">The number of training iteraitons.</param>
        <summary>
            Predict a target using a linear binary classification model trained with the <see cref="T:Microsoft.ML.Trainers.Online.LinearSvmTrainer" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            The idea behind support vector machines, is to map instances into a high dimensional space
            in which the two classes are linearly separable, i.e., there exists a hyperplane such that all the positive examples are on one side of it,
            and all the negative examples are on the other.
            </para>
          <para>
            After this mapping, quadratic programming is used to find the separating hyperplane that maximizes the
            margin, i.e., the minimal distance between it and the instances.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogisticRegression">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Learners.LogisticRegression LogisticRegression (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.Learners.LogisticRegression.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Learners.LogisticRegression LogisticRegression(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.Learners.LogisticRegression/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.LogisticRegression(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Learners.LogisticRegression.Options)" />
      <MemberSignature Language="F#" Value="static member LogisticRegression : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.Learners.LogisticRegression.Options -&gt; Microsoft.ML.Learners.LogisticRegression" Usage="Microsoft.ML.StandardLearnersCatalog.LogisticRegression (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Learners.LogisticRegression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Learners.LogisticRegression+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classificaiton catalog trainer object.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <summary>
             Predict a target using a linear binary classification model trained with the <see cref="T:Microsoft.ML.Learners.LogisticRegression" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogisticRegression">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Learners.MulticlassLogisticRegression LogisticRegression (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, Microsoft.ML.Learners.MulticlassLogisticRegression.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Learners.MulticlassLogisticRegression LogisticRegression(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, class Microsoft.ML.Learners.MulticlassLogisticRegression/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.LogisticRegression(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.Learners.MulticlassLogisticRegression.Options)" />
      <MemberSignature Language="F#" Value="static member LogisticRegression : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * Microsoft.ML.Learners.MulticlassLogisticRegression.Options -&gt; Microsoft.ML.Learners.MulticlassLogisticRegression" Usage="Microsoft.ML.StandardLearnersCatalog.LogisticRegression (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Learners.MulticlassLogisticRegression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Learners.MulticlassLogisticRegression+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers" />.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <summary>
            Predict a target using a linear multiclass classification model trained with the <see cref="T:Microsoft.ML.Learners.MulticlassLogisticRegression" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogisticRegression">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Learners.LogisticRegression LogisticRegression (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, string labelColumn = &quot;Label&quot;, string featureColumn = &quot;Features&quot;, string weights = null, float l1Weight = 1, float l2Weight = 1, float optimizationTolerance = 1E-07, int memorySize = 20, bool enforceNoNegativity = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Learners.LogisticRegression LogisticRegression(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, string labelColumn, string featureColumn, string weights, float32 l1Weight, float32 l2Weight, float32 optimizationTolerance, int32 memorySize, bool enforceNoNegativity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.LogisticRegression(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Single,System.Single,System.Single,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LogisticRegression (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, Optional labelColumn As String = &quot;Label&quot;, Optional featureColumn As String = &quot;Features&quot;, Optional weights As String = null, Optional l1Weight As Single = 1, Optional l2Weight As Single = 1, Optional optimizationTolerance As Single = 1E-07, Optional memorySize As Integer = 20, Optional enforceNoNegativity As Boolean = false) As LogisticRegression" />
      <MemberSignature Language="F#" Value="static member LogisticRegression : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * string * string * string * single * single * single * int * bool -&gt; Microsoft.ML.Learners.LogisticRegression" Usage="Microsoft.ML.StandardLearnersCatalog.LogisticRegression (catalog, labelColumn, featureColumn, weights, l1Weight, l2Weight, optimizationTolerance, memorySize, enforceNoNegativity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Learners.LogisticRegression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumn" Type="System.String" />
        <Parameter Name="featureColumn" Type="System.String" />
        <Parameter Name="weights" Type="System.String" />
        <Parameter Name="l1Weight" Type="System.Single" />
        <Parameter Name="l2Weight" Type="System.Single" />
        <Parameter Name="optimizationTolerance" Type="System.Single" />
        <Parameter Name="memorySize" Type="System.Int32" />
        <Parameter Name="enforceNoNegativity" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classificaiton catalog trainer object.</param>
        <param name="labelColumn">The label column name, or dependent variable.</param>
        <param name="featureColumn">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="l1Weight">Weight of L1 regularization term.</param>
        <param name="l2Weight">Weight of L2 regularization term.</param>
        <param name="optimizationTolerance">Threshold for optimizer convergence.</param>
        <param name="memorySize">Memory size for <see cref="T:Microsoft.ML.Learners.LogisticRegression" />. Low=faster, less accurate.</param>
        <param name="enforceNoNegativity">Enforce non-negative weights.</param>
        <summary>
             Predict a target using a linear binary classification model trained with the <see cref="T:Microsoft.ML.Learners.LogisticRegression" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogisticRegression">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Learners.MulticlassLogisticRegression LogisticRegression (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, string labelColumn = &quot;Label&quot;, string featureColumn = &quot;Features&quot;, string weights = null, float l1Weight = 1, float l2Weight = 1, float optimizationTolerance = 1E-07, int memorySize = 20, bool enforceNoNegativity = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Learners.MulticlassLogisticRegression LogisticRegression(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, string labelColumn, string featureColumn, string weights, float32 l1Weight, float32 l2Weight, float32 optimizationTolerance, int32 memorySize, bool enforceNoNegativity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.LogisticRegression(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,System.String,System.String,System.String,System.Single,System.Single,System.Single,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LogisticRegression (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, Optional labelColumn As String = &quot;Label&quot;, Optional featureColumn As String = &quot;Features&quot;, Optional weights As String = null, Optional l1Weight As Single = 1, Optional l2Weight As Single = 1, Optional optimizationTolerance As Single = 1E-07, Optional memorySize As Integer = 20, Optional enforceNoNegativity As Boolean = false) As MulticlassLogisticRegression" />
      <MemberSignature Language="F#" Value="static member LogisticRegression : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * string * string * string * single * single * single * int * bool -&gt; Microsoft.ML.Learners.MulticlassLogisticRegression" Usage="Microsoft.ML.StandardLearnersCatalog.LogisticRegression (catalog, labelColumn, featureColumn, weights, l1Weight, l2Weight, optimizationTolerance, memorySize, enforceNoNegativity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Learners.MulticlassLogisticRegression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumn" Type="System.String" />
        <Parameter Name="featureColumn" Type="System.String" />
        <Parameter Name="weights" Type="System.String" />
        <Parameter Name="l1Weight" Type="System.Single" />
        <Parameter Name="l2Weight" Type="System.Single" />
        <Parameter Name="optimizationTolerance" Type="System.Single" />
        <Parameter Name="memorySize" Type="System.Int32" />
        <Parameter Name="enforceNoNegativity" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers" />.</param>
        <param name="labelColumn">The labelColumn, or dependent variable.</param>
        <param name="featureColumn">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="l1Weight">Weight of L1 regularization term.</param>
        <param name="l2Weight">Weight of L2 regularization term.</param>
        <param name="optimizationTolerance">Threshold for optimizer convergence.</param>
        <param name="memorySize">Memory size for <see cref="T:Microsoft.ML.Learners.LogisticRegression" />. Low=faster, less accurate.</param>
        <param name="enforceNoNegativity">Enforce non-negative weights.</param>
        <summary>
            Predict a target using a linear multiclass classification model trained with the <see cref="T:Microsoft.ML.Learners.MulticlassLogisticRegression" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NaiveBayes">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.MultiClassNaiveBayesTrainer NaiveBayes (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, string labelColumn = &quot;Label&quot;, string featureColumn = &quot;Features&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.MultiClassNaiveBayesTrainer NaiveBayes(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, string labelColumn, string featureColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.NaiveBayes(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NaiveBayes (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, Optional labelColumn As String = &quot;Label&quot;, Optional featureColumn As String = &quot;Features&quot;) As MultiClassNaiveBayesTrainer" />
      <MemberSignature Language="F#" Value="static member NaiveBayes : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * string * string -&gt; Microsoft.ML.Trainers.MultiClassNaiveBayesTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.NaiveBayes (catalog, labelColumn, featureColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.MultiClassNaiveBayesTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumn" Type="System.String" />
        <Parameter Name="featureColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers" />.</param>
        <param name="labelColumn">The name of the label column.</param>
        <param name="featureColumn">The name of the feature column.</param>
        <summary>
            Predicts a target using a linear multiclass classification model trained with the <see cref="T:Microsoft.ML.Trainers.MultiClassNaiveBayesTrainer" />.
            The <see cref="T:Microsoft.ML.Trainers.MultiClassNaiveBayesTrainer" /> trains a multiclass Naive Bayes predictor that supports binary feature values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OneVersusAll">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.Ova OneVersusAll (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, Microsoft.ML.Training.ITrainerEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.IPredictorProducing&lt;float&gt;&gt;,Microsoft.ML.IPredictorProducing&lt;float&gt;&gt; binaryEstimator, string labelColumn = &quot;Label&quot;, bool imputeMissingLabelsAsNegative = false, Microsoft.ML.Internal.Calibration.ICalibratorTrainer calibrator = null, int maxCalibrationExamples = 1000000000, bool useProbabilities = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.Ova OneVersusAll(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, class Microsoft.ML.Training.ITrainerEstimator`2&lt;class Microsoft.ML.ISingleFeaturePredictionTransformer`1&lt;class Microsoft.ML.IPredictorProducing`1&lt;float32&gt;&gt;, class Microsoft.ML.IPredictorProducing`1&lt;float32&gt;&gt; binaryEstimator, string labelColumn, bool imputeMissingLabelsAsNegative, class Microsoft.ML.Internal.Calibration.ICalibratorTrainer calibrator, int32 maxCalibrationExamples, bool useProbabilities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.OneVersusAll(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.Training.ITrainerEstimator{Microsoft.ML.ISingleFeaturePredictionTransformer{Microsoft.ML.IPredictorProducing{System.Single}},Microsoft.ML.IPredictorProducing{System.Single}},System.String,System.Boolean,Microsoft.ML.Internal.Calibration.ICalibratorTrainer,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OneVersusAll (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, binaryEstimator As ITrainerEstimator(Of ISingleFeaturePredictionTransformer(Of IPredictorProducing(Of Single)), IPredictorProducing(Of Single)), Optional labelColumn As String = &quot;Label&quot;, Optional imputeMissingLabelsAsNegative As Boolean = false, Optional calibrator As ICalibratorTrainer = null, Optional maxCalibrationExamples As Integer = 1000000000, Optional useProbabilities As Boolean = true) As Ova" />
      <MemberSignature Language="F#" Value="static member OneVersusAll : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * Microsoft.ML.Training.ITrainerEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.IPredictorProducing&lt;single&gt;&gt;, Microsoft.ML.IPredictorProducing&lt;single&gt;&gt; * string * bool * Microsoft.ML.Internal.Calibration.ICalibratorTrainer * int * bool -&gt; Microsoft.ML.Trainers.Ova" Usage="Microsoft.ML.StandardLearnersCatalog.OneVersusAll (catalog, binaryEstimator, labelColumn, imputeMissingLabelsAsNegative, calibrator, maxCalibrationExamples, useProbabilities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.Ova</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="binaryEstimator" Type="Microsoft.ML.Training.ITrainerEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.IPredictorProducing&lt;System.Single&gt;&gt;,Microsoft.ML.IPredictorProducing&lt;System.Single&gt;&gt;" />
        <Parameter Name="labelColumn" Type="System.String" />
        <Parameter Name="imputeMissingLabelsAsNegative" Type="System.Boolean" />
        <Parameter Name="calibrator" Type="Microsoft.ML.Internal.Calibration.ICalibratorTrainer" />
        <Parameter Name="maxCalibrationExamples" Type="System.Int32" />
        <Parameter Name="useProbabilities" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers" />.</param>
        <param name="binaryEstimator">An instance of a binary <see cref="T:Microsoft.ML.Training.ITrainerEstimator`2" /> used as the base trainer.</param>
        <param name="labelColumn">The name of the label colum.</param>
        <param name="imputeMissingLabelsAsNegative">Whether to treat missing labels as having negative labels, instead of keeping them missing.</param>
        <param name="calibrator">The calibrator. If a calibrator is not explicitely provided, it will default to <see cref="T:Microsoft.ML.Internal.Calibration.PlattCalibratorTrainer" /></param>
        <param name="maxCalibrationExamples">Number of instances to train the calibrator.</param>
        <param name="useProbabilities">Use probabilities (vs. raw outputs) to identify top-score category.</param>
        <summary>
            Predicts a target using a linear multiclass classification model trained with the <see cref="T:Microsoft.ML.Trainers.Ova" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            In <see cref="T:Microsoft.ML.Trainers.Ova" /> In this strategy, a binary classification algorithm is used to train one classifier for each class,
            which distinguishes that class from all other classes. Prediction is then performed by running these binary classifiers,
            and choosing the prediction with the highest confidence score.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnlineGradientDescent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.Online.OnlineGradientDescentTrainer OnlineGradientDescent (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, Microsoft.ML.Trainers.Online.OnlineGradientDescentTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.Online.OnlineGradientDescentTrainer OnlineGradientDescent(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, class Microsoft.ML.Trainers.Online.OnlineGradientDescentTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.OnlineGradientDescent(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.Online.OnlineGradientDescentTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member OnlineGradientDescent : Microsoft.ML.RegressionCatalog.RegressionTrainers * Microsoft.ML.Trainers.Online.OnlineGradientDescentTrainer.Options -&gt; Microsoft.ML.Trainers.Online.OnlineGradientDescentTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.OnlineGradientDescent (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.Online.OnlineGradientDescentTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.Online.OnlineGradientDescentTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The regression catalog trainer object.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <summary>
            Predict a target using a linear regression model trained with the <see cref="T:Microsoft.ML.Trainers.Online.OnlineGradientDescentTrainer" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnlineGradientDescent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.Online.OnlineGradientDescentTrainer OnlineGradientDescent (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, string labelColumn = &quot;Label&quot;, string featureColumn = &quot;Features&quot;, string weights = null, Microsoft.ML.IRegressionLoss lossFunction = null, float learningRate = 0.1, bool decreaseLearningRate = true, float l2RegularizerWeight = 0, int numIterations = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.Online.OnlineGradientDescentTrainer OnlineGradientDescent(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, string labelColumn, string featureColumn, string weights, class Microsoft.ML.IRegressionLoss lossFunction, float32 learningRate, bool decreaseLearningRate, float32 l2RegularizerWeight, int32 numIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.OnlineGradientDescent(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,Microsoft.ML.IRegressionLoss,System.Single,System.Boolean,System.Single,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OnlineGradientDescent (catalog As RegressionCatalog.RegressionTrainers, Optional labelColumn As String = &quot;Label&quot;, Optional featureColumn As String = &quot;Features&quot;, Optional weights As String = null, Optional lossFunction As IRegressionLoss = null, Optional learningRate As Single = 0.1, Optional decreaseLearningRate As Boolean = true, Optional l2RegularizerWeight As Single = 0, Optional numIterations As Integer = 1) As OnlineGradientDescentTrainer" />
      <MemberSignature Language="F#" Value="static member OnlineGradientDescent : Microsoft.ML.RegressionCatalog.RegressionTrainers * string * string * string * Microsoft.ML.IRegressionLoss * single * bool * single * int -&gt; Microsoft.ML.Trainers.Online.OnlineGradientDescentTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.OnlineGradientDescent (catalog, labelColumn, featureColumn, weights, lossFunction, learningRate, decreaseLearningRate, l2RegularizerWeight, numIterations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.Online.OnlineGradientDescentTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" />
        <Parameter Name="labelColumn" Type="System.String" />
        <Parameter Name="featureColumn" Type="System.String" />
        <Parameter Name="weights" Type="System.String" />
        <Parameter Name="lossFunction" Type="Microsoft.ML.IRegressionLoss" />
        <Parameter Name="learningRate" Type="System.Single" />
        <Parameter Name="decreaseLearningRate" Type="System.Boolean" />
        <Parameter Name="l2RegularizerWeight" Type="System.Single" />
        <Parameter Name="numIterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="catalog">The regression catalog trainer object.</param>
        <param name="labelColumn">The name of the label, or dependent variable.</param>
        <param name="featureColumn">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="lossFunction">The custom loss. Defaults to <see cref="T:Microsoft.ML.SquaredLoss" /> if not provided.</param>
        <param name="learningRate">The learning Rate.</param>
        <param name="decreaseLearningRate">Decrease learning rate as iterations progress.</param>
        <param name="l2RegularizerWeight">L2 regularization weight.</param>
        <param name="numIterations">Number of training iterations through the data.</param>
        <summary>
            Predict a target using a linear regression model trained with the <see cref="T:Microsoft.ML.Trainers.Online.OnlineGradientDescentTrainer" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PairwiseCoupling">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.Pkpd PairwiseCoupling (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, Microsoft.ML.Training.ITrainerEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.IPredictorProducing&lt;float&gt;&gt;,Microsoft.ML.IPredictorProducing&lt;float&gt;&gt; binaryEstimator, string labelColumn = &quot;Label&quot;, bool imputeMissingLabelsAsNegative = false, Microsoft.ML.Internal.Calibration.ICalibratorTrainer calibrator = null, int maxCalibrationExamples = 1000000000);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.Pkpd PairwiseCoupling(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, class Microsoft.ML.Training.ITrainerEstimator`2&lt;class Microsoft.ML.ISingleFeaturePredictionTransformer`1&lt;class Microsoft.ML.IPredictorProducing`1&lt;float32&gt;&gt;, class Microsoft.ML.IPredictorProducing`1&lt;float32&gt;&gt; binaryEstimator, string labelColumn, bool imputeMissingLabelsAsNegative, class Microsoft.ML.Internal.Calibration.ICalibratorTrainer calibrator, int32 maxCalibrationExamples) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.PairwiseCoupling(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.Training.ITrainerEstimator{Microsoft.ML.ISingleFeaturePredictionTransformer{Microsoft.ML.IPredictorProducing{System.Single}},Microsoft.ML.IPredictorProducing{System.Single}},System.String,System.Boolean,Microsoft.ML.Internal.Calibration.ICalibratorTrainer,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PairwiseCoupling (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, binaryEstimator As ITrainerEstimator(Of ISingleFeaturePredictionTransformer(Of IPredictorProducing(Of Single)), IPredictorProducing(Of Single)), Optional labelColumn As String = &quot;Label&quot;, Optional imputeMissingLabelsAsNegative As Boolean = false, Optional calibrator As ICalibratorTrainer = null, Optional maxCalibrationExamples As Integer = 1000000000) As Pkpd" />
      <MemberSignature Language="F#" Value="static member PairwiseCoupling : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * Microsoft.ML.Training.ITrainerEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.IPredictorProducing&lt;single&gt;&gt;, Microsoft.ML.IPredictorProducing&lt;single&gt;&gt; * string * bool * Microsoft.ML.Internal.Calibration.ICalibratorTrainer * int -&gt; Microsoft.ML.Trainers.Pkpd" Usage="Microsoft.ML.StandardLearnersCatalog.PairwiseCoupling (catalog, binaryEstimator, labelColumn, imputeMissingLabelsAsNegative, calibrator, maxCalibrationExamples)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.Pkpd</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="binaryEstimator" Type="Microsoft.ML.Training.ITrainerEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.IPredictorProducing&lt;System.Single&gt;&gt;,Microsoft.ML.IPredictorProducing&lt;System.Single&gt;&gt;" />
        <Parameter Name="labelColumn" Type="System.String" />
        <Parameter Name="imputeMissingLabelsAsNegative" Type="System.Boolean" />
        <Parameter Name="calibrator" Type="Microsoft.ML.Internal.Calibration.ICalibratorTrainer" />
        <Parameter Name="maxCalibrationExamples" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers" />.</param>
        <param name="binaryEstimator">An instance of a binary <see cref="T:Microsoft.ML.Training.ITrainerEstimator`2" /> used as the base trainer.</param>
        <param name="labelColumn">The name of the label colum.</param>
        <param name="imputeMissingLabelsAsNegative">Whether to treat missing labels as having negative labels, instead of keeping them missing.</param>
        <param name="calibrator">The calibrator. If a calibrator is not explicitely provided, it will default to <see cref="T:Microsoft.ML.Internal.Calibration.PlattCalibratorTrainer" /></param>
        <param name="maxCalibrationExamples">Number of instances to train the calibrator.</param>
        <summary>
            Predicts a target using a linear multiclass classification model trained with the <see cref="T:Microsoft.ML.Trainers.Pkpd" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            In the Pairwise coupling (PKPD) strategy, a binary classification algorithm is used to train one classifier for each pair of classes.
            Prediction is then performed by running these binary classifiers, and computing a score for each class by counting how many of the binary
            classifiers predicted it. The prediction is the class with the highest score.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PoissonRegression">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.PoissonRegression PoissonRegression (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, Microsoft.ML.Trainers.PoissonRegression.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.PoissonRegression PoissonRegression(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, class Microsoft.ML.Trainers.PoissonRegression/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.PoissonRegression(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.PoissonRegression.Options)" />
      <MemberSignature Language="F#" Value="static member PoissonRegression : Microsoft.ML.RegressionCatalog.RegressionTrainers * Microsoft.ML.Trainers.PoissonRegression.Options -&gt; Microsoft.ML.Trainers.PoissonRegression" Usage="Microsoft.ML.StandardLearnersCatalog.PoissonRegression (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.PoissonRegression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.PoissonRegression+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The regression catalog trainer object.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <summary>
            Predict a target using a linear regression model trained with the <see cref="T:Microsoft.ML.Learners.LogisticRegression" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PoissonRegression">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.PoissonRegression PoissonRegression (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, string labelColumn = &quot;Label&quot;, string featureColumn = &quot;Features&quot;, string weights = null, float l1Weight = 1, float l2Weight = 1, float optimizationTolerance = 1E-07, int memorySize = 20, bool enforceNoNegativity = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.PoissonRegression PoissonRegression(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, string labelColumn, string featureColumn, string weights, float32 l1Weight, float32 l2Weight, float32 optimizationTolerance, int32 memorySize, bool enforceNoNegativity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.PoissonRegression(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,System.Single,System.Single,System.Single,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PoissonRegression (catalog As RegressionCatalog.RegressionTrainers, Optional labelColumn As String = &quot;Label&quot;, Optional featureColumn As String = &quot;Features&quot;, Optional weights As String = null, Optional l1Weight As Single = 1, Optional l2Weight As Single = 1, Optional optimizationTolerance As Single = 1E-07, Optional memorySize As Integer = 20, Optional enforceNoNegativity As Boolean = false) As PoissonRegression" />
      <MemberSignature Language="F#" Value="static member PoissonRegression : Microsoft.ML.RegressionCatalog.RegressionTrainers * string * string * string * single * single * single * int * bool -&gt; Microsoft.ML.Trainers.PoissonRegression" Usage="Microsoft.ML.StandardLearnersCatalog.PoissonRegression (catalog, labelColumn, featureColumn, weights, l1Weight, l2Weight, optimizationTolerance, memorySize, enforceNoNegativity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.PoissonRegression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" />
        <Parameter Name="labelColumn" Type="System.String" />
        <Parameter Name="featureColumn" Type="System.String" />
        <Parameter Name="weights" Type="System.String" />
        <Parameter Name="l1Weight" Type="System.Single" />
        <Parameter Name="l2Weight" Type="System.Single" />
        <Parameter Name="optimizationTolerance" Type="System.Single" />
        <Parameter Name="memorySize" Type="System.Int32" />
        <Parameter Name="enforceNoNegativity" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog">The regression catalog trainer object.</param>
        <param name="labelColumn">The labelColumn, or dependent variable.</param>
        <param name="featureColumn">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="l1Weight">Weight of L1 regularization term.</param>
        <param name="l2Weight">Weight of L2 regularization term.</param>
        <param name="optimizationTolerance">Threshold for optimizer convergence.</param>
        <param name="memorySize">Memory size for <see cref="T:Microsoft.ML.Learners.LogisticRegression" />. Low=faster, less accurate.</param>
        <param name="enforceNoNegativity">Enforce non-negative weights.</param>
        <summary>
            Predict a target using a linear regression model trained with the <see cref="T:Microsoft.ML.Learners.LogisticRegression" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StochasticDualCoordinateAscent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaBinaryTrainer StochasticDualCoordinateAscent (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.Trainers.SdcaBinaryTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaBinaryTrainer StochasticDualCoordinateAscent(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.Trainers.SdcaBinaryTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.SdcaBinaryTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member StochasticDualCoordinateAscent : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.Trainers.SdcaBinaryTrainer.Options -&gt; Microsoft.ML.Trainers.SdcaBinaryTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaBinaryTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.SdcaBinaryTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <summary>
            Predict a target using a linear binary classification model trained with the SDCA trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StochasticDualCoordinateAscent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaMultiClassTrainer StochasticDualCoordinateAscent (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, Microsoft.ML.Trainers.SdcaMultiClassTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaMultiClassTrainer StochasticDualCoordinateAscent(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, class Microsoft.ML.Trainers.SdcaMultiClassTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.Trainers.SdcaMultiClassTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member StochasticDualCoordinateAscent : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * Microsoft.ML.Trainers.SdcaMultiClassTrainer.Options -&gt; Microsoft.ML.Trainers.SdcaMultiClassTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaMultiClassTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.SdcaMultiClassTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The multiclass classification catalog trainer object.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <summary>
            Predict a target using a linear multiclass classification model trained with the SDCA trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StochasticDualCoordinateAscent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaRegressionTrainer StochasticDualCoordinateAscent (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, Microsoft.ML.Trainers.SdcaRegressionTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaRegressionTrainer StochasticDualCoordinateAscent(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, class Microsoft.ML.Trainers.SdcaRegressionTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.SdcaRegressionTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member StochasticDualCoordinateAscent : Microsoft.ML.RegressionCatalog.RegressionTrainers * Microsoft.ML.Trainers.SdcaRegressionTrainer.Options -&gt; Microsoft.ML.Trainers.SdcaRegressionTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaRegressionTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.SdcaRegressionTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The regression catalog trainer object.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <summary>
            Predict a target using a linear regression model trained with the SDCA trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StochasticDualCoordinateAscent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaBinaryTrainer StochasticDualCoordinateAscent (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, string labelColumn = &quot;Label&quot;, string featureColumn = &quot;Features&quot;, string weights = null, Microsoft.ML.ISupportSdcaClassificationLoss loss = null, Nullable&lt;float&gt; l2Const = null, Nullable&lt;float&gt; l1Threshold = null, Nullable&lt;int&gt; maxIterations = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaBinaryTrainer StochasticDualCoordinateAscent(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, string labelColumn, string featureColumn, string weights, class Microsoft.ML.ISupportSdcaClassificationLoss loss, valuetype System.Nullable`1&lt;float32&gt; l2Const, valuetype System.Nullable`1&lt;float32&gt; l1Threshold, valuetype System.Nullable`1&lt;int32&gt; maxIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,Microsoft.ML.ISupportSdcaClassificationLoss,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StochasticDualCoordinateAscent (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, Optional labelColumn As String = &quot;Label&quot;, Optional featureColumn As String = &quot;Features&quot;, Optional weights As String = null, Optional loss As ISupportSdcaClassificationLoss = null, Optional l2Const As Nullable(Of Single) = null, Optional l1Threshold As Nullable(Of Single) = null, Optional maxIterations As Nullable(Of Integer) = null) As SdcaBinaryTrainer" />
      <MemberSignature Language="F#" Value="static member StochasticDualCoordinateAscent : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * string * string * string * Microsoft.ML.ISupportSdcaClassificationLoss * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;int&gt; -&gt; Microsoft.ML.Trainers.SdcaBinaryTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent (catalog, labelColumn, featureColumn, weights, loss, l2Const, l1Threshold, maxIterations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaBinaryTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumn" Type="System.String" />
        <Parameter Name="featureColumn" Type="System.String" />
        <Parameter Name="weights" Type="System.String" />
        <Parameter Name="loss" Type="Microsoft.ML.ISupportSdcaClassificationLoss" />
        <Parameter Name="l2Const" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="l1Threshold" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="maxIterations" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="labelColumn">The labelColumn, or dependent variable.</param>
        <param name="featureColumn">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="loss">The custom loss. Defaults to log-loss if not specified.</param>
        <param name="l2Const">The L2 regularization hyperparameter.</param>
        <param name="l1Threshold">The L1 regularization hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="maxIterations">The maximum number of passes to perform over the data.</param>
        <summary>
            Predict a target using a linear binary classification model trained with the SDCA trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[SDCA](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/SDCA.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="StochasticDualCoordinateAscent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaMultiClassTrainer StochasticDualCoordinateAscent (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, string labelColumn = &quot;Label&quot;, string featureColumn = &quot;Features&quot;, string weights = null, Microsoft.ML.ISupportSdcaClassificationLoss loss = null, Nullable&lt;float&gt; l2Const = null, Nullable&lt;float&gt; l1Threshold = null, Nullable&lt;int&gt; maxIterations = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaMultiClassTrainer StochasticDualCoordinateAscent(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, string labelColumn, string featureColumn, string weights, class Microsoft.ML.ISupportSdcaClassificationLoss loss, valuetype System.Nullable`1&lt;float32&gt; l2Const, valuetype System.Nullable`1&lt;float32&gt; l1Threshold, valuetype System.Nullable`1&lt;int32&gt; maxIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,System.String,System.String,System.String,Microsoft.ML.ISupportSdcaClassificationLoss,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StochasticDualCoordinateAscent (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, Optional labelColumn As String = &quot;Label&quot;, Optional featureColumn As String = &quot;Features&quot;, Optional weights As String = null, Optional loss As ISupportSdcaClassificationLoss = null, Optional l2Const As Nullable(Of Single) = null, Optional l1Threshold As Nullable(Of Single) = null, Optional maxIterations As Nullable(Of Integer) = null) As SdcaMultiClassTrainer" />
      <MemberSignature Language="F#" Value="static member StochasticDualCoordinateAscent : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * string * string * string * Microsoft.ML.ISupportSdcaClassificationLoss * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;int&gt; -&gt; Microsoft.ML.Trainers.SdcaMultiClassTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent (catalog, labelColumn, featureColumn, weights, loss, l2Const, l1Threshold, maxIterations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaMultiClassTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumn" Type="System.String" />
        <Parameter Name="featureColumn" Type="System.String" />
        <Parameter Name="weights" Type="System.String" />
        <Parameter Name="loss" Type="Microsoft.ML.ISupportSdcaClassificationLoss" />
        <Parameter Name="l2Const" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="l1Threshold" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="maxIterations" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">The multiclass classification catalog trainer object.</param>
        <param name="labelColumn">The labelColumn, or dependent variable.</param>
        <param name="featureColumn">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="loss">The optional custom loss.</param>
        <param name="l2Const">The L2 regularization hyperparameter.</param>
        <param name="l1Threshold">The L1 regularization hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="maxIterations">The maximum number of passes to perform over the data.</param>
        <summary>
            Predict a target using a linear multiclass classification model trained with the SDCA trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StochasticDualCoordinateAscent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaRegressionTrainer StochasticDualCoordinateAscent (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, string labelColumn = &quot;Label&quot;, string featureColumn = &quot;Features&quot;, string weights = null, Microsoft.ML.ISupportSdcaRegressionLoss loss = null, Nullable&lt;float&gt; l2Const = null, Nullable&lt;float&gt; l1Threshold = null, Nullable&lt;int&gt; maxIterations = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaRegressionTrainer StochasticDualCoordinateAscent(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, string labelColumn, string featureColumn, string weights, class Microsoft.ML.ISupportSdcaRegressionLoss loss, valuetype System.Nullable`1&lt;float32&gt; l2Const, valuetype System.Nullable`1&lt;float32&gt; l1Threshold, valuetype System.Nullable`1&lt;int32&gt; maxIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,Microsoft.ML.ISupportSdcaRegressionLoss,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StochasticDualCoordinateAscent (catalog As RegressionCatalog.RegressionTrainers, Optional labelColumn As String = &quot;Label&quot;, Optional featureColumn As String = &quot;Features&quot;, Optional weights As String = null, Optional loss As ISupportSdcaRegressionLoss = null, Optional l2Const As Nullable(Of Single) = null, Optional l1Threshold As Nullable(Of Single) = null, Optional maxIterations As Nullable(Of Integer) = null) As SdcaRegressionTrainer" />
      <MemberSignature Language="F#" Value="static member StochasticDualCoordinateAscent : Microsoft.ML.RegressionCatalog.RegressionTrainers * string * string * string * Microsoft.ML.ISupportSdcaRegressionLoss * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;int&gt; -&gt; Microsoft.ML.Trainers.SdcaRegressionTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent (catalog, labelColumn, featureColumn, weights, loss, l2Const, l1Threshold, maxIterations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaRegressionTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" />
        <Parameter Name="labelColumn" Type="System.String" />
        <Parameter Name="featureColumn" Type="System.String" />
        <Parameter Name="weights" Type="System.String" />
        <Parameter Name="loss" Type="Microsoft.ML.ISupportSdcaRegressionLoss" />
        <Parameter Name="l2Const" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="l1Threshold" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="maxIterations" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">The regression catalog trainer object.</param>
        <param name="labelColumn">The label column, or dependent variable.</param>
        <param name="featureColumn">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="loss">The custom loss, if unspecified will be <see cref="T:Microsoft.ML.SquaredLoss" />.</param>
        <param name="l2Const">The L2 regularization hyperparameter.</param>
        <param name="l1Threshold">The L1 regularization hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="maxIterations">The maximum number of passes to perform over the data.</param>
        <summary>
            Predict a target using a linear regression model trained with the SDCA trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StochasticGradientDescent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.StochasticGradientDescentClassificationTrainer StochasticGradientDescent (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.Trainers.StochasticGradientDescentClassificationTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.StochasticGradientDescentClassificationTrainer StochasticGradientDescent(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.Trainers.StochasticGradientDescentClassificationTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.StochasticGradientDescent(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.StochasticGradientDescentClassificationTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member StochasticGradientDescent : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.Trainers.StochasticGradientDescentClassificationTrainer.Options -&gt; Microsoft.ML.Trainers.StochasticGradientDescentClassificationTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.StochasticGradientDescent (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.StochasticGradientDescentClassificationTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.StochasticGradientDescentClassificationTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classificaiton catalog trainer object.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <summary>
             Predict a target using a linear binary classification model trained with the <see cref="T:Microsoft.ML.Trainers.StochasticGradientDescentClassificationTrainer" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StochasticGradientDescent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.StochasticGradientDescentClassificationTrainer StochasticGradientDescent (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, string labelColumn = &quot;Label&quot;, string featureColumn = &quot;Features&quot;, string weights = null, int maxIterations = 20, double initLearningRate = 0.01, float l2Weight = 1E-06, Microsoft.ML.ISupportClassificationLossFactory loss = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.StochasticGradientDescentClassificationTrainer StochasticGradientDescent(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, string labelColumn, string featureColumn, string weights, int32 maxIterations, float64 initLearningRate, float32 l2Weight, class Microsoft.ML.ISupportClassificationLossFactory loss) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.StochasticGradientDescent(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Int32,System.Double,System.Single,Microsoft.ML.ISupportClassificationLossFactory)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StochasticGradientDescent (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, Optional labelColumn As String = &quot;Label&quot;, Optional featureColumn As String = &quot;Features&quot;, Optional weights As String = null, Optional maxIterations As Integer = 20, Optional initLearningRate As Double = 0.01, Optional l2Weight As Single = 1E-06, Optional loss As ISupportClassificationLossFactory = null) As StochasticGradientDescentClassificationTrainer" />
      <MemberSignature Language="F#" Value="static member StochasticGradientDescent : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * string * string * string * int * double * single * Microsoft.ML.ISupportClassificationLossFactory -&gt; Microsoft.ML.Trainers.StochasticGradientDescentClassificationTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.StochasticGradientDescent (catalog, labelColumn, featureColumn, weights, maxIterations, initLearningRate, l2Weight, loss)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.StochasticGradientDescentClassificationTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumn" Type="System.String" />
        <Parameter Name="featureColumn" Type="System.String" />
        <Parameter Name="weights" Type="System.String" />
        <Parameter Name="maxIterations" Type="System.Int32" />
        <Parameter Name="initLearningRate" Type="System.Double" />
        <Parameter Name="l2Weight" Type="System.Single" />
        <Parameter Name="loss" Type="Microsoft.ML.ISupportClassificationLossFactory" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classificaiton catalog trainer object.</param>
        <param name="labelColumn">The name of the label column.</param>
        <param name="featureColumn">The name of the feature column.</param>
        <param name="weights">The name for the example weight column.</param>
        <param name="maxIterations">The maximum number of iterations; set to 1 to simulate online learning.</param>
        <param name="initLearningRate">The initial learning rate used by SGD.</param>
        <param name="l2Weight">The L2 regularization constant.</param>
        <param name="loss">The loss function to use.</param>
        <summary>
             Predict a target using a linear binary classification model trained with the <see cref="T:Microsoft.ML.Trainers.StochasticGradientDescentClassificationTrainer" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>