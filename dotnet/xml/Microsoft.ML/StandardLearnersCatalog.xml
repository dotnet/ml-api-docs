<Type Name="StandardLearnersCatalog" FullName="Microsoft.ML.StandardLearnersCatalog">
  <TypeSignature Language="C#" Value="public static class StandardLearnersCatalog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit StandardLearnersCatalog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.StandardLearnersCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Module StandardLearnersCatalog" />
  <TypeSignature Language="F#" Value="type StandardLearnersCatalog = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            TrainerEstimator extension methods.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AveragedPerceptron">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.AveragedPerceptronTrainer AveragedPerceptron (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.Trainers.AveragedPerceptronTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.AveragedPerceptronTrainer AveragedPerceptron(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.Trainers.AveragedPerceptronTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.AveragedPerceptron(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.AveragedPerceptronTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member AveragedPerceptron : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.Trainers.AveragedPerceptronTrainer.Options -&gt; Microsoft.ML.Trainers.AveragedPerceptronTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.AveragedPerceptron (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.AveragedPerceptronTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.AveragedPerceptronTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="options">Trainer options.</param>
        <summary>
            Predict a target using a linear binary classification model trained with <see cref="T:Microsoft.ML.Trainers.AveragedPerceptronTrainer" /> and advanced options.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[AveragedPerceptron](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/AveragedPerceptronWithOptions.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="AveragedPerceptron">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.AveragedPerceptronTrainer AveragedPerceptron (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, Microsoft.ML.IClassificationLoss lossFunction = null, float learningRate = 1, bool decreaseLearningRate = false, float l2RegularizerWeight = 0, int numIterations = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.AveragedPerceptronTrainer AveragedPerceptron(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, string labelColumnName, string featureColumnName, class Microsoft.ML.IClassificationLoss lossFunction, float32 learningRate, bool decreaseLearningRate, float32 l2RegularizerWeight, int32 numIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.AveragedPerceptron(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,Microsoft.ML.IClassificationLoss,System.Single,System.Boolean,System.Single,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AveragedPerceptron (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional lossFunction As IClassificationLoss = null, Optional learningRate As Single = 1, Optional decreaseLearningRate As Boolean = false, Optional l2RegularizerWeight As Single = 0, Optional numIterations As Integer = 1) As AveragedPerceptronTrainer" />
      <MemberSignature Language="F#" Value="static member AveragedPerceptron : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * string * string * Microsoft.ML.IClassificationLoss * single * bool * single * int -&gt; Microsoft.ML.Trainers.AveragedPerceptronTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.AveragedPerceptron (catalog, labelColumnName, featureColumnName, lossFunction, learningRate, decreaseLearningRate, l2RegularizerWeight, numIterations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.AveragedPerceptronTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="lossFunction" Type="Microsoft.ML.IClassificationLoss" />
        <Parameter Name="learningRate" Type="System.Single" />
        <Parameter Name="decreaseLearningRate" Type="System.Boolean" />
        <Parameter Name="l2RegularizerWeight" Type="System.Single" />
        <Parameter Name="numIterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="lossFunction">A custom <a href="tmpurl_loss">loss</a>. If <see langword="null" />, hinge loss will be used resulting in max-margin averaged perceptron.</param>
        <param name="learningRate">
          <a href="tmpurl_lr">Learning rate</a>.</param>
        <param name="decreaseLearningRate">
          <see langword="true" /> to decrease the <paramref name="learningRate" /> as iterations progress; otherwise, <see langword="false" />.
            Default is <see langword="false" />.
            </param>
        <param name="l2RegularizerWeight">The L2 weight for <a href="tmpurl_regularization">regularization</a>.</param>
        <param name="numIterations">Number of passes through the training dataset.</param>
        <summary>
            Predict a target using a linear binary classification model trained with <see cref="T:Microsoft.ML.Trainers.AveragedPerceptronTrainer" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[AveragedPerceptron](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/AveragedPerceptron.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="LinearSupportVectorMachines">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.LinearSvmTrainer LinearSupportVectorMachines (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.Trainers.LinearSvmTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.LinearSvmTrainer LinearSupportVectorMachines(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.Trainers.LinearSvmTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.LinearSupportVectorMachines(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.LinearSvmTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member LinearSupportVectorMachines : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.Trainers.LinearSvmTrainer.Options -&gt; Microsoft.ML.Trainers.LinearSvmTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.LinearSupportVectorMachines (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.LinearSvmTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.LinearSvmTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.BinaryClassificationCatalog" />.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <summary>
            Predict a target using a linear binary classification model trained with the <see cref="T:Microsoft.ML.Trainers.LinearSvmTrainer" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            The idea behind support vector machines, is to map instances into a high dimensional space
            in which the two classes are linearly separable, i.e., there exists a hyperplane such that all the positive examples are on one side of it,
            and all the negative examples are on the other.
            </para>
          <para>
            After this mapping, quadratic programming is used to find the separating hyperplane that maximizes the
            margin, i.e., the minimal distance between it and the instances.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinearSupportVectorMachines">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.LinearSvmTrainer LinearSupportVectorMachines (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string exampleWeightColumnName = null, int numIterations = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.LinearSvmTrainer LinearSupportVectorMachines(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, string labelColumnName, string featureColumnName, string exampleWeightColumnName, int32 numIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.LinearSupportVectorMachines(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LinearSupportVectorMachines (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional exampleWeightColumnName As String = null, Optional numIterations As Integer = 1) As LinearSvmTrainer" />
      <MemberSignature Language="F#" Value="static member LinearSupportVectorMachines : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * string * string * string * int -&gt; Microsoft.ML.Trainers.LinearSvmTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.LinearSupportVectorMachines (catalog, labelColumnName, featureColumnName, exampleWeightColumnName, numIterations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.LinearSvmTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" />
        <Parameter Name="numIterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.BinaryClassificationCatalog" />.</param>
        <param name="labelColumnName">The name of the label column. </param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <param name="numIterations">The number of training iteraitons.</param>
        <summary>
            Predict a target using a linear binary classification model trained with the <see cref="T:Microsoft.ML.Trainers.LinearSvmTrainer" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            The idea behind support vector machines, is to map instances into a high dimensional space
            in which the two classes are linearly separable, i.e., there exists a hyperplane such that all the positive examples are on one side of it,
            and all the negative examples are on the other.
            </para>
          <para>
            After this mapping, quadratic programming is used to find the separating hyperplane that maximizes the
            margin, i.e., the minimal distance between it and the instances.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogisticRegression">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.LogisticRegression LogisticRegression (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.Trainers.LogisticRegression.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.LogisticRegression LogisticRegression(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.Trainers.LogisticRegression/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.LogisticRegression(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.LogisticRegression.Options)" />
      <MemberSignature Language="F#" Value="static member LogisticRegression : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.Trainers.LogisticRegression.Options -&gt; Microsoft.ML.Trainers.LogisticRegression" Usage="Microsoft.ML.StandardLearnersCatalog.LogisticRegression (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.LogisticRegression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.LogisticRegression+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <summary>
             Predict a target using a linear binary classification model trained with the <see cref="T:Microsoft.ML.Trainers.LogisticRegression" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogisticRegression">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.MulticlassLogisticRegression LogisticRegression (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, Microsoft.ML.Trainers.MulticlassLogisticRegression.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.MulticlassLogisticRegression LogisticRegression(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, class Microsoft.ML.Trainers.MulticlassLogisticRegression/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.LogisticRegression(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.Trainers.MulticlassLogisticRegression.Options)" />
      <MemberSignature Language="F#" Value="static member LogisticRegression : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * Microsoft.ML.Trainers.MulticlassLogisticRegression.Options -&gt; Microsoft.ML.Trainers.MulticlassLogisticRegression" Usage="Microsoft.ML.StandardLearnersCatalog.LogisticRegression (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.MulticlassLogisticRegression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.MulticlassLogisticRegression+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers" />.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <summary>
            Predict a target using a linear multiclass classification model trained with the <see cref="T:Microsoft.ML.Trainers.MulticlassLogisticRegression" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogisticRegression">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.LogisticRegression LogisticRegression (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string exampleWeightColumnName = null, float l1Weight = 1, float l2Weight = 1, float optimizationTolerance = 1E-07, int memorySize = 20, bool enforceNoNegativity = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.LogisticRegression LogisticRegression(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, string labelColumnName, string featureColumnName, string exampleWeightColumnName, float32 l1Weight, float32 l2Weight, float32 optimizationTolerance, int32 memorySize, bool enforceNoNegativity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.LogisticRegression(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Single,System.Single,System.Single,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LogisticRegression (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional exampleWeightColumnName As String = null, Optional l1Weight As Single = 1, Optional l2Weight As Single = 1, Optional optimizationTolerance As Single = 1E-07, Optional memorySize As Integer = 20, Optional enforceNoNegativity As Boolean = false) As LogisticRegression" />
      <MemberSignature Language="F#" Value="static member LogisticRegression : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * string * string * string * single * single * single * int * bool -&gt; Microsoft.ML.Trainers.LogisticRegression" Usage="Microsoft.ML.StandardLearnersCatalog.LogisticRegression (catalog, labelColumnName, featureColumnName, exampleWeightColumnName, l1Weight, l2Weight, optimizationTolerance, memorySize, enforceNoNegativity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.LogisticRegression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" />
        <Parameter Name="l1Weight" Type="System.Single" />
        <Parameter Name="l2Weight" Type="System.Single" />
        <Parameter Name="optimizationTolerance" Type="System.Single" />
        <Parameter Name="memorySize" Type="System.Int32" />
        <Parameter Name="enforceNoNegativity" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <param name="l1Weight">Weight of L1 regularization term.</param>
        <param name="l2Weight">Weight of L2 regularization term.</param>
        <param name="optimizationTolerance">Threshold for optimizer convergence.</param>
        <param name="memorySize">Memory size for <see cref="T:Microsoft.ML.Trainers.LogisticRegression" />. Low=faster, less accurate.</param>
        <param name="enforceNoNegativity">Enforce non-negative weights.</param>
        <summary>
             Predict a target using a linear binary classification model trained with the <see cref="T:Microsoft.ML.Trainers.LogisticRegression" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[Logistic Regression](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/LogisticRegression.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="LogisticRegression">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.MulticlassLogisticRegression LogisticRegression (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string exampleWeightColumnName = null, float l1Weight = 1, float l2Weight = 1, float optimizationTolerance = 1E-07, int memorySize = 20, bool enforceNoNegativity = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.MulticlassLogisticRegression LogisticRegression(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, string labelColumnName, string featureColumnName, string exampleWeightColumnName, float32 l1Weight, float32 l2Weight, float32 optimizationTolerance, int32 memorySize, bool enforceNoNegativity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.LogisticRegression(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,System.String,System.String,System.String,System.Single,System.Single,System.Single,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LogisticRegression (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional exampleWeightColumnName As String = null, Optional l1Weight As Single = 1, Optional l2Weight As Single = 1, Optional optimizationTolerance As Single = 1E-07, Optional memorySize As Integer = 20, Optional enforceNoNegativity As Boolean = false) As MulticlassLogisticRegression" />
      <MemberSignature Language="F#" Value="static member LogisticRegression : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * string * string * string * single * single * single * int * bool -&gt; Microsoft.ML.Trainers.MulticlassLogisticRegression" Usage="Microsoft.ML.StandardLearnersCatalog.LogisticRegression (catalog, labelColumnName, featureColumnName, exampleWeightColumnName, l1Weight, l2Weight, optimizationTolerance, memorySize, enforceNoNegativity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.MulticlassLogisticRegression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" />
        <Parameter Name="l1Weight" Type="System.Single" />
        <Parameter Name="l2Weight" Type="System.Single" />
        <Parameter Name="optimizationTolerance" Type="System.Single" />
        <Parameter Name="memorySize" Type="System.Int32" />
        <Parameter Name="enforceNoNegativity" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers" />.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <param name="l1Weight">Weight of L1 regularization term.</param>
        <param name="l2Weight">Weight of L2 regularization term.</param>
        <param name="optimizationTolerance">Threshold for optimizer convergence.</param>
        <param name="memorySize">Memory size for <see cref="T:Microsoft.ML.Trainers.MulticlassLogisticRegression" />. Low=faster, less accurate.</param>
        <param name="enforceNoNegativity">Enforce non-negative weights.</param>
        <summary>
            Predict a target using a linear multiclass classification model trained with the <see cref="T:Microsoft.ML.Trainers.MulticlassLogisticRegression" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NaiveBayes">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.MultiClassNaiveBayesTrainer NaiveBayes (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.MultiClassNaiveBayesTrainer NaiveBayes(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, string labelColumnName, string featureColumnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.NaiveBayes(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NaiveBayes (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;) As MultiClassNaiveBayesTrainer" />
      <MemberSignature Language="F#" Value="static member NaiveBayes : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * string * string -&gt; Microsoft.ML.Trainers.MultiClassNaiveBayesTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.NaiveBayes (catalog, labelColumnName, featureColumnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.MultiClassNaiveBayesTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" Index="0" />
        <Parameter Name="labelColumnName" Type="System.String" Index="1" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="featureColumnName" Type="System.String" Index="2" FrameworkAlternate="ml-dotnet" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers" />.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <summary>
            Predicts a target using a linear multiclass classification model trained with the <see cref="T:Microsoft.ML.Trainers.MultiClassNaiveBayesTrainer" />.
            The <see cref="T:Microsoft.ML.Trainers.MultiClassNaiveBayesTrainer" /> trains a multiclass Naive Bayes predictor that supports binary feature values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OneVersusAll&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.Ova OneVersusAll&lt;TModel&gt; (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, Microsoft.ML.Trainers.ITrainerEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;TModel&gt;,TModel&gt; binaryEstimator, string labelColumnName = &quot;Label&quot;, bool imputeMissingLabelsAsNegative = false, Microsoft.ML.IEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.Calibrators.ICalibrator&gt;&gt; calibrator = null, int maxCalibrationExamples = 1000000000, bool useProbabilities = true) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.Ova OneVersusAll&lt;class TModel&gt;(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, class Microsoft.ML.Trainers.ITrainerEstimator`2&lt;class Microsoft.ML.ISingleFeaturePredictionTransformer`1&lt;!!TModel&gt;, !!TModel&gt; binaryEstimator, string labelColumnName, bool imputeMissingLabelsAsNegative, class Microsoft.ML.IEstimator`1&lt;class Microsoft.ML.ISingleFeaturePredictionTransformer`1&lt;class Microsoft.ML.Calibrators.ICalibrator&gt;&gt; calibrator, int32 maxCalibrationExamples, bool useProbabilities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.OneVersusAll``1(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.Trainers.ITrainerEstimator{Microsoft.ML.ISingleFeaturePredictionTransformer{``0},``0},System.String,System.Boolean,Microsoft.ML.IEstimator{Microsoft.ML.ISingleFeaturePredictionTransformer{Microsoft.ML.Calibrators.ICalibrator}},System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OneVersusAll(Of TModel As Class) (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, binaryEstimator As ITrainerEstimator(Of ISingleFeaturePredictionTransformer(Of TModel), TModel), Optional labelColumnName As String = &quot;Label&quot;, Optional imputeMissingLabelsAsNegative As Boolean = false, Optional calibrator As IEstimator(Of ISingleFeaturePredictionTransformer(Of ICalibrator)) = null, Optional maxCalibrationExamples As Integer = 1000000000, Optional useProbabilities As Boolean = true) As Ova" />
      <MemberSignature Language="F#" Value="static member OneVersusAll : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * Microsoft.ML.Trainers.ITrainerEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;'Model&gt;, 'Model (requires 'Model : null)&gt; * string * bool * Microsoft.ML.IEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.Calibrators.ICalibrator&gt;&gt; * int * bool -&gt; Microsoft.ML.Trainers.Ova (requires 'Model : null)" Usage="Microsoft.ML.StandardLearnersCatalog.OneVersusAll (catalog, binaryEstimator, labelColumnName, imputeMissingLabelsAsNegative, calibrator, maxCalibrationExamples, useProbabilities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.Ova</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="binaryEstimator" Type="Microsoft.ML.Trainers.ITrainerEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;TModel&gt;,TModel&gt;" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="imputeMissingLabelsAsNegative" Type="System.Boolean" />
        <Parameter Name="calibrator" Type="Microsoft.ML.IEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.Calibrators.ICalibrator&gt;&gt;" />
        <Parameter Name="maxCalibrationExamples" Type="System.Int32" />
        <Parameter Name="useProbabilities" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model. This type parameter will usually be inferred automatically from <paramref name="binaryEstimator" />.</typeparam>
        <param name="catalog">The <see cref="T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers" />.</param>
        <param name="binaryEstimator">An instance of a binary <see cref="T:Microsoft.ML.Trainers.ITrainerEstimator`2" /> used as the base trainer.</param>
        <param name="labelColumnName">The name of the label colum.</param>
        <param name="imputeMissingLabelsAsNegative">Whether to treat missing labels as having negative labels, instead of keeping them missing.</param>
        <param name="calibrator">The calibrator. If a calibrator is not explicitely provided, it will default to <see cref="T:Microsoft.ML.Calibrators.PlattCalibratorTrainer" /></param>
        <param name="maxCalibrationExamples">Number of instances to train the calibrator.</param>
        <param name="useProbabilities">Use probabilities (vs. raw outputs) to identify top-score category.</param>
        <summary>
            Predicts a target using a linear multiclass classification model trained with the <see cref="T:Microsoft.ML.Trainers.Ova" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            In <see cref="T:Microsoft.ML.Trainers.Ova" /> In this strategy, a binary classification algorithm is used to train one classifier for each class,
            which distinguishes that class from all other classes. Prediction is then performed by running these binary classifiers,
            and choosing the prediction with the highest confidence score.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnlineGradientDescent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.OnlineGradientDescentTrainer OnlineGradientDescent (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, Microsoft.ML.Trainers.OnlineGradientDescentTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.OnlineGradientDescentTrainer OnlineGradientDescent(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, class Microsoft.ML.Trainers.OnlineGradientDescentTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.OnlineGradientDescent(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.OnlineGradientDescentTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member OnlineGradientDescent : Microsoft.ML.RegressionCatalog.RegressionTrainers * Microsoft.ML.Trainers.OnlineGradientDescentTrainer.Options -&gt; Microsoft.ML.Trainers.OnlineGradientDescentTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.OnlineGradientDescent (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.OnlineGradientDescentTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.OnlineGradientDescentTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The regression catalog trainer object.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <summary>
            Predict a target using a linear regression model trained with the <see cref="T:Microsoft.ML.Trainers.OnlineGradientDescentTrainer" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnlineGradientDescent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.OnlineGradientDescentTrainer OnlineGradientDescent (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, Microsoft.ML.IRegressionLoss lossFunction = null, float learningRate = 0.1, bool decreaseLearningRate = true, float l2RegularizerWeight = 0, int numIterations = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.OnlineGradientDescentTrainer OnlineGradientDescent(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, string labelColumnName, string featureColumnName, class Microsoft.ML.IRegressionLoss lossFunction, float32 learningRate, bool decreaseLearningRate, float32 l2RegularizerWeight, int32 numIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.OnlineGradientDescent(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,Microsoft.ML.IRegressionLoss,System.Single,System.Boolean,System.Single,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OnlineGradientDescent (catalog As RegressionCatalog.RegressionTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional lossFunction As IRegressionLoss = null, Optional learningRate As Single = 0.1, Optional decreaseLearningRate As Boolean = true, Optional l2RegularizerWeight As Single = 0, Optional numIterations As Integer = 1) As OnlineGradientDescentTrainer" />
      <MemberSignature Language="F#" Value="static member OnlineGradientDescent : Microsoft.ML.RegressionCatalog.RegressionTrainers * string * string * Microsoft.ML.IRegressionLoss * single * bool * single * int -&gt; Microsoft.ML.Trainers.OnlineGradientDescentTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.OnlineGradientDescent (catalog, labelColumnName, featureColumnName, lossFunction, learningRate, decreaseLearningRate, l2RegularizerWeight, numIterations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.OnlineGradientDescentTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="lossFunction" Type="Microsoft.ML.IRegressionLoss" />
        <Parameter Name="learningRate" Type="System.Single" />
        <Parameter Name="decreaseLearningRate" Type="System.Boolean" />
        <Parameter Name="l2RegularizerWeight" Type="System.Single" />
        <Parameter Name="numIterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="catalog">The regression catalog trainer object.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="lossFunction">The custom loss. Defaults to <see cref="T:Microsoft.ML.SquaredLoss" /> if not provided.</param>
        <param name="learningRate">The learning Rate.</param>
        <param name="decreaseLearningRate">Decrease learning rate as iterations progress.</param>
        <param name="l2RegularizerWeight">L2 regularization weight.</param>
        <param name="numIterations">Number of training iterations through the data.</param>
        <summary>
            Predict a target using a linear regression model trained with the <see cref="T:Microsoft.ML.Trainers.OnlineGradientDescentTrainer" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PairwiseCoupling&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.Pkpd PairwiseCoupling&lt;TModel&gt; (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, Microsoft.ML.Trainers.ITrainerEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;TModel&gt;,TModel&gt; binaryEstimator, string labelColumnName = &quot;Label&quot;, bool imputeMissingLabelsAsNegative = false, Microsoft.ML.IEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.Calibrators.ICalibrator&gt;&gt; calibrator = null, int maxCalibrationExamples = 1000000000) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.Pkpd PairwiseCoupling&lt;class TModel&gt;(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, class Microsoft.ML.Trainers.ITrainerEstimator`2&lt;class Microsoft.ML.ISingleFeaturePredictionTransformer`1&lt;!!TModel&gt;, !!TModel&gt; binaryEstimator, string labelColumnName, bool imputeMissingLabelsAsNegative, class Microsoft.ML.IEstimator`1&lt;class Microsoft.ML.ISingleFeaturePredictionTransformer`1&lt;class Microsoft.ML.Calibrators.ICalibrator&gt;&gt; calibrator, int32 maxCalibrationExamples) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.PairwiseCoupling``1(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.Trainers.ITrainerEstimator{Microsoft.ML.ISingleFeaturePredictionTransformer{``0},``0},System.String,System.Boolean,Microsoft.ML.IEstimator{Microsoft.ML.ISingleFeaturePredictionTransformer{Microsoft.ML.Calibrators.ICalibrator}},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PairwiseCoupling(Of TModel As Class) (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, binaryEstimator As ITrainerEstimator(Of ISingleFeaturePredictionTransformer(Of TModel), TModel), Optional labelColumnName As String = &quot;Label&quot;, Optional imputeMissingLabelsAsNegative As Boolean = false, Optional calibrator As IEstimator(Of ISingleFeaturePredictionTransformer(Of ICalibrator)) = null, Optional maxCalibrationExamples As Integer = 1000000000) As Pkpd" />
      <MemberSignature Language="F#" Value="static member PairwiseCoupling : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * Microsoft.ML.Trainers.ITrainerEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;'Model&gt;, 'Model (requires 'Model : null)&gt; * string * bool * Microsoft.ML.IEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.Calibrators.ICalibrator&gt;&gt; * int -&gt; Microsoft.ML.Trainers.Pkpd (requires 'Model : null)" Usage="Microsoft.ML.StandardLearnersCatalog.PairwiseCoupling (catalog, binaryEstimator, labelColumnName, imputeMissingLabelsAsNegative, calibrator, maxCalibrationExamples)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.Pkpd</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="binaryEstimator" Type="Microsoft.ML.Trainers.ITrainerEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;TModel&gt;,TModel&gt;" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="imputeMissingLabelsAsNegative" Type="System.Boolean" />
        <Parameter Name="calibrator" Type="Microsoft.ML.IEstimator&lt;Microsoft.ML.ISingleFeaturePredictionTransformer&lt;Microsoft.ML.Calibrators.ICalibrator&gt;&gt;" />
        <Parameter Name="maxCalibrationExamples" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model. This type parameter will usually be inferred automatically from <paramref name="binaryEstimator" />.</typeparam>
        <param name="catalog">The <see cref="T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers" />.</param>
        <param name="binaryEstimator">An instance of a binary <see cref="T:Microsoft.ML.Trainers.ITrainerEstimator`2" /> used as the base trainer.</param>
        <param name="labelColumnName">The name of the label colum.</param>
        <param name="imputeMissingLabelsAsNegative">Whether to treat missing labels as having negative labels, instead of keeping them missing.</param>
        <param name="calibrator">The calibrator. If a calibrator is not explicitely provided, it will default to <see cref="T:Microsoft.ML.Calibrators.PlattCalibratorTrainer" /></param>
        <param name="maxCalibrationExamples">Number of instances to train the calibrator.</param>
        <summary>
            Predicts a target using a linear multiclass classification model trained with the <see cref="T:Microsoft.ML.Trainers.Pkpd" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            In the Pairwise coupling (PKPD) strategy, a binary classification algorithm is used to train one classifier for each pair of classes.
            Prediction is then performed by running these binary classifiers, and computing a score for each class by counting how many of the binary
            classifiers predicted it. The prediction is the class with the highest score.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PoissonRegression">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.PoissonRegression PoissonRegression (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, Microsoft.ML.Trainers.PoissonRegression.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.PoissonRegression PoissonRegression(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, class Microsoft.ML.Trainers.PoissonRegression/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.PoissonRegression(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.PoissonRegression.Options)" />
      <MemberSignature Language="F#" Value="static member PoissonRegression : Microsoft.ML.RegressionCatalog.RegressionTrainers * Microsoft.ML.Trainers.PoissonRegression.Options -&gt; Microsoft.ML.Trainers.PoissonRegression" Usage="Microsoft.ML.StandardLearnersCatalog.PoissonRegression (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.PoissonRegression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.PoissonRegression+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The regression catalog trainer object.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <summary>
            Predict a target using a linear regression model trained with the <see cref="T:Microsoft.ML.Trainers.PoissonRegression" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PoissonRegression">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.PoissonRegression PoissonRegression (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string exampleWeightColumnName = null, float l1Weight = 1, float l2Weight = 1, float optimizationTolerance = 1E-07, int memorySize = 20, bool enforceNoNegativity = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.PoissonRegression PoissonRegression(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, string labelColumnName, string featureColumnName, string exampleWeightColumnName, float32 l1Weight, float32 l2Weight, float32 optimizationTolerance, int32 memorySize, bool enforceNoNegativity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.PoissonRegression(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,System.Single,System.Single,System.Single,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PoissonRegression (catalog As RegressionCatalog.RegressionTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional exampleWeightColumnName As String = null, Optional l1Weight As Single = 1, Optional l2Weight As Single = 1, Optional optimizationTolerance As Single = 1E-07, Optional memorySize As Integer = 20, Optional enforceNoNegativity As Boolean = false) As PoissonRegression" />
      <MemberSignature Language="F#" Value="static member PoissonRegression : Microsoft.ML.RegressionCatalog.RegressionTrainers * string * string * string * single * single * single * int * bool -&gt; Microsoft.ML.Trainers.PoissonRegression" Usage="Microsoft.ML.StandardLearnersCatalog.PoissonRegression (catalog, labelColumnName, featureColumnName, exampleWeightColumnName, l1Weight, l2Weight, optimizationTolerance, memorySize, enforceNoNegativity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.PoissonRegression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" Index="0" />
        <Parameter Name="labelColumnName" Type="System.String" Index="1" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="featureColumnName" Type="System.String" Index="2" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" Index="3" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="l1Weight" Type="System.Single" Index="4" />
        <Parameter Name="l2Weight" Type="System.Single" Index="5" />
        <Parameter Name="optimizationTolerance" Type="System.Single" Index="6" />
        <Parameter Name="memorySize" Type="System.Int32" Index="7" />
        <Parameter Name="enforceNoNegativity" Type="System.Boolean" Index="8" />
      </Parameters>
      <Docs>
        <param name="catalog">The regression catalog trainer object.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <param name="l1Weight">Weight of L1 regularization term.</param>
        <param name="l2Weight">Weight of L2 regularization term.</param>
        <param name="optimizationTolerance">Threshold for optimizer convergence.</param>
        <param name="memorySize">Memory size for <see cref="T:Microsoft.ML.Trainers.PoissonRegression" />. Low=faster, less accurate.</param>
        <param name="enforceNoNegativity">Enforce non-negative weights.</param>
        <summary>
            Predict a target using a linear regression model trained with the <see cref="T:Microsoft.ML.Trainers.PoissonRegression" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prior">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.PriorTrainer Prior (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string exampleWeightColumnName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.PriorTrainer Prior(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, string labelColumnName, string exampleWeightColumnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.Prior(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Prior (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional exampleWeightColumnName As String = null) As PriorTrainer" />
      <MemberSignature Language="F#" Value="static member Prior : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * string * string -&gt; Microsoft.ML.Trainers.PriorTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.Prior (catalog, labelColumnName, exampleWeightColumnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.PriorTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.BinaryClassificationCatalog" />.</param>
        <param name="labelColumnName">The name of the label column. </param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <summary>
            Predict a target using a binary classification model trained with <see cref="T:Microsoft.ML.Trainers.PriorTrainer" /> trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This trainer uses the proportion of a label in the training set as the probability of that label.
            This trainer is often used as a baseline for other more sophisticated mdels.
            </remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[FastTree](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/PriorTrainerSample.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Random">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.RandomTrainer Random (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.RandomTrainer Random(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.Random(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Random (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers) As RandomTrainer" />
      <MemberSignature Language="F#" Value="static member Random : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers -&gt; Microsoft.ML.Trainers.RandomTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.Random catalog" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.RandomTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
      </Parameters>
      <Docs>
        <param name="catalog">The <see cref="T:Microsoft.ML.BinaryClassificationCatalog" />.</param>
        <summary>
            Predict a target using the random binary classification model <see cref="T:Microsoft.ML.Trainers.RandomTrainer" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This trainer can be used as a baseline for other more sophisticated mdels.
            </remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[FastTree](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/RandomTrainerSample.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="StochasticDualCoordinateAscent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaBinaryTrainer StochasticDualCoordinateAscent (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.Trainers.SdcaBinaryTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaBinaryTrainer StochasticDualCoordinateAscent(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.Trainers.SdcaBinaryTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.SdcaBinaryTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member StochasticDualCoordinateAscent : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.Trainers.SdcaBinaryTrainer.Options -&gt; Microsoft.ML.Trainers.SdcaBinaryTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaBinaryTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.SdcaBinaryTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <summary>
            Predict a target using a logistic regression model trained with the SDCA trainer.
            The trained model can produce probability via feeding output value of the linear
            function to a <see cref="T:Microsoft.ML.Calibrators.PlattCalibrator" />. Compared with <see cref="M:Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})" />,
            this function allows more advanced settings by accepting <see cref="T:Microsoft.ML.Trainers.SdcaBinaryTrainer.Options" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StochasticDualCoordinateAscent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaMultiClassTrainer StochasticDualCoordinateAscent (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, Microsoft.ML.Trainers.SdcaMultiClassTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaMultiClassTrainer StochasticDualCoordinateAscent(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, class Microsoft.ML.Trainers.SdcaMultiClassTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.Trainers.SdcaMultiClassTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member StochasticDualCoordinateAscent : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * Microsoft.ML.Trainers.SdcaMultiClassTrainer.Options -&gt; Microsoft.ML.Trainers.SdcaMultiClassTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaMultiClassTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.SdcaMultiClassTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The multiclass classification catalog trainer object.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <summary>
            Predict a target using a linear multiclass classification model trained with the SDCA trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StochasticDualCoordinateAscent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaRegressionTrainer StochasticDualCoordinateAscent (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, Microsoft.ML.Trainers.SdcaRegressionTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaRegressionTrainer StochasticDualCoordinateAscent(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, class Microsoft.ML.Trainers.SdcaRegressionTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.SdcaRegressionTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member StochasticDualCoordinateAscent : Microsoft.ML.RegressionCatalog.RegressionTrainers * Microsoft.ML.Trainers.SdcaRegressionTrainer.Options -&gt; Microsoft.ML.Trainers.SdcaRegressionTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaRegressionTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.SdcaRegressionTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The regression catalog trainer object.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <summary>
            Predict a target using a linear regression model trained with the SDCA trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StochasticDualCoordinateAscent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaBinaryTrainer StochasticDualCoordinateAscent (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string exampleWeightColumnName = null, Nullable&lt;float&gt; l2Const = null, Nullable&lt;float&gt; l1Threshold = null, Nullable&lt;int&gt; maxIterations = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaBinaryTrainer StochasticDualCoordinateAscent(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, string labelColumnName, string featureColumnName, string exampleWeightColumnName, valuetype System.Nullable`1&lt;float32&gt; l2Const, valuetype System.Nullable`1&lt;float32&gt; l1Threshold, valuetype System.Nullable`1&lt;int32&gt; maxIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StochasticDualCoordinateAscent (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional exampleWeightColumnName As String = null, Optional l2Const As Nullable(Of Single) = null, Optional l1Threshold As Nullable(Of Single) = null, Optional maxIterations As Nullable(Of Integer) = null) As SdcaBinaryTrainer" />
      <MemberSignature Language="F#" Value="static member StochasticDualCoordinateAscent : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * string * string * string * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;int&gt; -&gt; Microsoft.ML.Trainers.SdcaBinaryTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent (catalog, labelColumnName, featureColumnName, exampleWeightColumnName, l2Const, l1Threshold, maxIterations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaBinaryTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" />
        <Parameter Name="l2Const" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="l1Threshold" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="maxIterations" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <param name="l2Const">The L2 regularization hyperparameter.</param>
        <param name="l1Threshold">The L1 regularization hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="maxIterations">The maximum number of passes to perform over the data.</param>
        <summary>
            Predict a target using a logistic regression model trained with the SDCA trainer.
            The trained model can produce probability by feeding the output value of the linear
            function to a <see cref="T:Microsoft.ML.Calibrators.PlattCalibrator" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[SDCA](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/SDCALogisticRegression.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="StochasticDualCoordinateAscent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaMultiClassTrainer StochasticDualCoordinateAscent (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string exampleWeightColumnName = null, Microsoft.ML.ISupportSdcaClassificationLoss loss = null, Nullable&lt;float&gt; l2Const = null, Nullable&lt;float&gt; l1Threshold = null, Nullable&lt;int&gt; maxIterations = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaMultiClassTrainer StochasticDualCoordinateAscent(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, string labelColumnName, string featureColumnName, string exampleWeightColumnName, class Microsoft.ML.ISupportSdcaClassificationLoss loss, valuetype System.Nullable`1&lt;float32&gt; l2Const, valuetype System.Nullable`1&lt;float32&gt; l1Threshold, valuetype System.Nullable`1&lt;int32&gt; maxIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,System.String,System.String,System.String,Microsoft.ML.ISupportSdcaClassificationLoss,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StochasticDualCoordinateAscent (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional exampleWeightColumnName As String = null, Optional loss As ISupportSdcaClassificationLoss = null, Optional l2Const As Nullable(Of Single) = null, Optional l1Threshold As Nullable(Of Single) = null, Optional maxIterations As Nullable(Of Integer) = null) As SdcaMultiClassTrainer" />
      <MemberSignature Language="F#" Value="static member StochasticDualCoordinateAscent : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * string * string * string * Microsoft.ML.ISupportSdcaClassificationLoss * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;int&gt; -&gt; Microsoft.ML.Trainers.SdcaMultiClassTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent (catalog, labelColumnName, featureColumnName, exampleWeightColumnName, loss, l2Const, l1Threshold, maxIterations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaMultiClassTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" Index="0" />
        <Parameter Name="labelColumnName" Type="System.String" Index="1" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="featureColumnName" Type="System.String" Index="2" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" Index="3" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="loss" Type="Microsoft.ML.ISupportSdcaClassificationLoss" Index="4" />
        <Parameter Name="l2Const" Type="System.Nullable&lt;System.Single&gt;" Index="5" />
        <Parameter Name="l1Threshold" Type="System.Nullable&lt;System.Single&gt;" Index="6" />
        <Parameter Name="maxIterations" Type="System.Nullable&lt;System.Int32&gt;" Index="7" />
      </Parameters>
      <Docs>
        <param name="catalog">The multiclass classification catalog trainer object.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <param name="loss">The optional custom loss.</param>
        <param name="l2Const">The L2 regularization hyperparameter.</param>
        <param name="l1Threshold">The L1 regularization hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="maxIterations">The maximum number of passes to perform over the data.</param>
        <summary>
            Predict a target using a linear multiclass classification model trained with the SDCA trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StochasticDualCoordinateAscent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaRegressionTrainer StochasticDualCoordinateAscent (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string exampleWeightColumnName = null, Microsoft.ML.ISupportSdcaRegressionLoss loss = null, Nullable&lt;float&gt; l2Const = null, Nullable&lt;float&gt; l1Threshold = null, Nullable&lt;int&gt; maxIterations = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaRegressionTrainer StochasticDualCoordinateAscent(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, string labelColumnName, string featureColumnName, string exampleWeightColumnName, class Microsoft.ML.ISupportSdcaRegressionLoss loss, valuetype System.Nullable`1&lt;float32&gt; l2Const, valuetype System.Nullable`1&lt;float32&gt; l1Threshold, valuetype System.Nullable`1&lt;int32&gt; maxIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,Microsoft.ML.ISupportSdcaRegressionLoss,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StochasticDualCoordinateAscent (catalog As RegressionCatalog.RegressionTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional exampleWeightColumnName As String = null, Optional loss As ISupportSdcaRegressionLoss = null, Optional l2Const As Nullable(Of Single) = null, Optional l1Threshold As Nullable(Of Single) = null, Optional maxIterations As Nullable(Of Integer) = null) As SdcaRegressionTrainer" />
      <MemberSignature Language="F#" Value="static member StochasticDualCoordinateAscent : Microsoft.ML.RegressionCatalog.RegressionTrainers * string * string * string * Microsoft.ML.ISupportSdcaRegressionLoss * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;int&gt; -&gt; Microsoft.ML.Trainers.SdcaRegressionTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscent (catalog, labelColumnName, featureColumnName, exampleWeightColumnName, loss, l2Const, l1Threshold, maxIterations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaRegressionTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" Index="0" />
        <Parameter Name="labelColumnName" Type="System.String" Index="1" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="featureColumnName" Type="System.String" Index="2" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" Index="3" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="loss" Type="Microsoft.ML.ISupportSdcaRegressionLoss" Index="4" />
        <Parameter Name="l2Const" Type="System.Nullable&lt;System.Single&gt;" Index="5" />
        <Parameter Name="l1Threshold" Type="System.Nullable&lt;System.Single&gt;" Index="6" />
        <Parameter Name="maxIterations" Type="System.Nullable&lt;System.Int32&gt;" Index="7" />
      </Parameters>
      <Docs>
        <param name="catalog">The regression catalog trainer object.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <param name="loss">The custom loss, if unspecified will be <see cref="T:Microsoft.ML.SquaredLoss" />.</param>
        <param name="l2Const">The L2 regularization hyperparameter.</param>
        <param name="l1Threshold">The L1 regularization hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="maxIterations">The maximum number of passes to perform over the data.</param>
        <summary>
            Predict a target using a linear regression model trained with the SDCA trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StochasticDualCoordinateAscentNonCalibrated">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer StochasticDualCoordinateAscentNonCalibrated (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer StochasticDualCoordinateAscentNonCalibrated(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscentNonCalibrated(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member StochasticDualCoordinateAscentNonCalibrated : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer.Options -&gt; Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscentNonCalibrated (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="options">Advanced arguments to the algorithm.</param>
        <summary>
            Predict a target using a linear binary classification model trained with the SDCA trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StochasticDualCoordinateAscentNonCalibrated">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer StochasticDualCoordinateAscentNonCalibrated (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string exampleWeightColumnName = null, Microsoft.ML.ISupportSdcaClassificationLoss loss = null, Nullable&lt;float&gt; l2Const = null, Nullable&lt;float&gt; l1Threshold = null, Nullable&lt;int&gt; maxIterations = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer StochasticDualCoordinateAscentNonCalibrated(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, string labelColumnName, string featureColumnName, string exampleWeightColumnName, class Microsoft.ML.ISupportSdcaClassificationLoss loss, valuetype System.Nullable`1&lt;float32&gt; l2Const, valuetype System.Nullable`1&lt;float32&gt; l1Threshold, valuetype System.Nullable`1&lt;int32&gt; maxIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscentNonCalibrated(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,Microsoft.ML.ISupportSdcaClassificationLoss,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StochasticDualCoordinateAscentNonCalibrated (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional exampleWeightColumnName As String = null, Optional loss As ISupportSdcaClassificationLoss = null, Optional l2Const As Nullable(Of Single) = null, Optional l1Threshold As Nullable(Of Single) = null, Optional maxIterations As Nullable(Of Integer) = null) As SdcaNonCalibratedBinaryTrainer" />
      <MemberSignature Language="F#" Value="static member StochasticDualCoordinateAscentNonCalibrated : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * string * string * string * Microsoft.ML.ISupportSdcaClassificationLoss * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;int&gt; -&gt; Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.StochasticDualCoordinateAscentNonCalibrated (catalog, labelColumnName, featureColumnName, exampleWeightColumnName, loss, l2Const, l1Threshold, maxIterations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" />
        <Parameter Name="loss" Type="Microsoft.ML.ISupportSdcaClassificationLoss" />
        <Parameter Name="l2Const" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="l1Threshold" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="maxIterations" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="labelColumnName">The name of the label column.</param>
        <param name="featureColumnName">The name of the feature column.</param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <param name="loss">The custom loss. Defaults to log-loss if not specified.</param>
        <param name="l2Const">The L2 regularization hyperparameter.</param>
        <param name="l1Threshold">The L1 regularization hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="maxIterations">The maximum number of passes to perform over the data.</param>
        <summary>
            Predict a target using a linear binary classification model trained with the SDCA trainer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[SDCA](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/SDCASupportVectorMachine.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="StochasticGradientDescent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SgdBinaryTrainer StochasticGradientDescent (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.Trainers.SgdBinaryTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SgdBinaryTrainer StochasticGradientDescent(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.Trainers.SgdBinaryTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.StochasticGradientDescent(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.SgdBinaryTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member StochasticGradientDescent : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.Trainers.SgdBinaryTrainer.Options -&gt; Microsoft.ML.Trainers.SgdBinaryTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.StochasticGradientDescent (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SgdBinaryTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.SgdBinaryTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="options">Trainer options.</param>
        <summary>
            Predict a target using a linear classification model trained with <see cref="T:Microsoft.ML.Trainers.SgdBinaryTrainer" /> and advanced options.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[StochasticGradientDescentWithOptions](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/StochasticGradientDescentWithOptions.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="StochasticGradientDescent">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SgdBinaryTrainer StochasticGradientDescent (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string exampleWeightColumnName = null, int maxIterations = 20, double initLearningRate = 0.01, float l2Weight = 1E-06);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SgdBinaryTrainer StochasticGradientDescent(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, string labelColumnName, string featureColumnName, string exampleWeightColumnName, int32 maxIterations, float64 initLearningRate, float32 l2Weight) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.StochasticGradientDescent(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Int32,System.Double,System.Single)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StochasticGradientDescent (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional exampleWeightColumnName As String = null, Optional maxIterations As Integer = 20, Optional initLearningRate As Double = 0.01, Optional l2Weight As Single = 1E-06) As SgdBinaryTrainer" />
      <MemberSignature Language="F#" Value="static member StochasticGradientDescent : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * string * string * string * int * double * single -&gt; Microsoft.ML.Trainers.SgdBinaryTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.StochasticGradientDescent (catalog, labelColumnName, featureColumnName, exampleWeightColumnName, maxIterations, initLearningRate, l2Weight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SgdBinaryTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" />
        <Parameter Name="maxIterations" Type="System.Int32" />
        <Parameter Name="initLearningRate" Type="System.Double" />
        <Parameter Name="l2Weight" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="labelColumnName">The name of the label column, or dependent variable.</param>
        <param name="featureColumnName">The features, or independent variables.</param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <param name="maxIterations">The maximum number of passes through the training dataset; set to 1 to simulate online learning.</param>
        <param name="initLearningRate">The initial <a href="tmpurl_lr">learning rate</a> used by SGD.</param>
        <param name="l2Weight">The L2 weight for <a href="tmpurl_regularization">regularization</a>.</param>
        <summary>
            Predict a target using a linear classification model trained with <see cref="T:Microsoft.ML.Trainers.SgdBinaryTrainer" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[StochasticGradientDescent](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/StochasticGradientDescent.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="StochasticGradientDescentNonCalibrated">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SgdNonCalibratedBinaryTrainer StochasticGradientDescentNonCalibrated (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, Microsoft.ML.Trainers.SgdNonCalibratedBinaryTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SgdNonCalibratedBinaryTrainer StochasticGradientDescentNonCalibrated(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, class Microsoft.ML.Trainers.SgdNonCalibratedBinaryTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.StochasticGradientDescentNonCalibrated(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.SgdNonCalibratedBinaryTrainer.Options)" />
      <MemberSignature Language="F#" Value="static member StochasticGradientDescentNonCalibrated : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * Microsoft.ML.Trainers.SgdNonCalibratedBinaryTrainer.Options -&gt; Microsoft.ML.Trainers.SgdNonCalibratedBinaryTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.StochasticGradientDescentNonCalibrated (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SgdNonCalibratedBinaryTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.SgdNonCalibratedBinaryTrainer+Options" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="options">Trainer options.</param>
        <summary>
            Predict a target using a linear classification model trained with <see cref="T:Microsoft.ML.Trainers.SgdNonCalibratedBinaryTrainer" /> and advanced options.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StochasticGradientDescentNonCalibrated">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Trainers.SgdNonCalibratedBinaryTrainer StochasticGradientDescentNonCalibrated (this Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string exampleWeightColumnName = null, Microsoft.ML.IClassificationLoss loss = null, int maxIterations = 20, double initLearningRate = 0.01, float l2Weight = 1E-06);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Trainers.SgdNonCalibratedBinaryTrainer StochasticGradientDescentNonCalibrated(class Microsoft.ML.BinaryClassificationCatalog/BinaryClassificationTrainers catalog, string labelColumnName, string featureColumnName, string exampleWeightColumnName, class Microsoft.ML.IClassificationLoss loss, int32 maxIterations, float64 initLearningRate, float32 l2Weight) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.StandardLearnersCatalog.StochasticGradientDescentNonCalibrated(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,Microsoft.ML.IClassificationLoss,System.Int32,System.Double,System.Single)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StochasticGradientDescentNonCalibrated (catalog As BinaryClassificationCatalog.BinaryClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional exampleWeightColumnName As String = null, Optional loss As IClassificationLoss = null, Optional maxIterations As Integer = 20, Optional initLearningRate As Double = 0.01, Optional l2Weight As Single = 1E-06) As SgdNonCalibratedBinaryTrainer" />
      <MemberSignature Language="F#" Value="static member StochasticGradientDescentNonCalibrated : Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers * string * string * string * Microsoft.ML.IClassificationLoss * int * double * single -&gt; Microsoft.ML.Trainers.SgdNonCalibratedBinaryTrainer" Usage="Microsoft.ML.StandardLearnersCatalog.StochasticGradientDescentNonCalibrated (catalog, labelColumnName, featureColumnName, exampleWeightColumnName, loss, maxIterations, initLearningRate, l2Weight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.SgdNonCalibratedBinaryTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.BinaryClassificationCatalog+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="exampleWeightColumnName" Type="System.String" />
        <Parameter Name="loss" Type="Microsoft.ML.IClassificationLoss" />
        <Parameter Name="maxIterations" Type="System.Int32" />
        <Parameter Name="initLearningRate" Type="System.Double" />
        <Parameter Name="l2Weight" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="catalog">The binary classification catalog trainer object.</param>
        <param name="labelColumnName">The name of the label column, or dependent variable.</param>
        <param name="featureColumnName">The features, or independent variables.</param>
        <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
        <param name="loss">The loss function minimized in the training process. Using, for example, <see cref="T:Microsoft.ML.HingeLoss" /> leads to a support vector machine trainer.</param>
        <param name="maxIterations">The maximum number of passes through the training dataset; set to 1 to simulate online learning.</param>
        <param name="initLearningRate">The initial <a href="tmpurl_lr">learning rate</a> used by SGD.</param>
        <param name="l2Weight">The L2 weight for <a href="tmpurl_regularization">regularization</a>.</param>
        <summary>
             Predict a target using a linear classification model trained with <see cref="T:Microsoft.ML.Trainers.SgdNonCalibratedBinaryTrainer" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>