<Type Name="GraphRunner" FullName="Microsoft.ML.Runtime.EntryPoints.JsonUtils.GraphRunner">
  <TypeSignature Language="C#" Value="public sealed class GraphRunner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GraphRunner extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.EntryPoints.JsonUtils.GraphRunner" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GraphRunner" />
  <TypeSignature Language="F#" Value="type GraphRunner = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             This class runs a graph of entry points with the specified inputs, and produces the specified outputs.
             The entry point graph is provided as a <see cref="T:Newtonsoft.Json.Linq.JArray" /> of graph nodes. The inputs need to be provided separately:
             the graph runner will only compile a list of required inputs, and the calling code is expected to set them prior
             to running the graph.
            
             REVIEW: currently, the graph is executed synchronously, one node at a time. This is an implementation choice, we
             probably need to consider parallel asynchronous execution, once we agree on an acceptable syntax for it.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphRunner (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.EntryPoints.EntryPointGraph graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.EntryPoints.EntryPointGraph graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.EntryPoints.JsonUtils.GraphRunner.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.EntryPoints.EntryPointGraph)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, graph As EntryPointGraph)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.EntryPoints.JsonUtils.GraphRunner : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.EntryPoints.EntryPointGraph -&gt; Microsoft.ML.Runtime.EntryPoints.JsonUtils.GraphRunner" Usage="new Microsoft.ML.Runtime.EntryPoints.JsonUtils.GraphRunner (env, graph)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="graph" Type="Microsoft.ML.Runtime.EntryPoints.EntryPointGraph" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="graph">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphRunner (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.EntryPoints.ModuleCatalog moduleCatalog, Newtonsoft.Json.Linq.JArray nodes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.EntryPoints.ModuleCatalog moduleCatalog, class Newtonsoft.Json.Linq.JArray nodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.EntryPoints.JsonUtils.GraphRunner.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.EntryPoints.ModuleCatalog,Newtonsoft.Json.Linq.JArray)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.EntryPoints.JsonUtils.GraphRunner : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.EntryPoints.ModuleCatalog * Newtonsoft.Json.Linq.JArray -&gt; Microsoft.ML.Runtime.EntryPoints.JsonUtils.GraphRunner" Usage="new Microsoft.ML.Runtime.EntryPoints.JsonUtils.GraphRunner (env, moduleCatalog, nodes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="moduleCatalog" Type="Microsoft.ML.Runtime.EntryPoints.ModuleCatalog" />
        <Parameter Name="nodes" Type="Newtonsoft.Json.Linq.JArray" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="moduleCatalog">To be added.</param>
        <param name="nodes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public TOutput GetOutput&lt;TOutput&gt; (string name) where TOutput : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TOutput GetOutput&lt;class TOutput&gt;(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.EntryPoints.JsonUtils.GraphRunner.GetOutput``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutput(Of TOutput As Class) (name As String) As TOutput" />
      <MemberSignature Language="F#" Value="member this.GetOutput : string -&gt; 'Output (requires 'Output : null)" Usage="graphRunner.GetOutput name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">To be added.</typeparam>
        <param name="name">To be added.</param>
        <summary>
            Retrieve an output of the experiment graph.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputOrDefault&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public TOutput GetOutputOrDefault&lt;TOutput&gt; (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TOutput GetOutputOrDefault&lt;TOutput&gt;(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.EntryPoints.JsonUtils.GraphRunner.GetOutputOrDefault``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutputOrDefault(Of TOutput) (name As String) As TOutput" />
      <MemberSignature Language="F#" Value="member this.GetOutputOrDefault : string -&gt; 'Output" Usage="graphRunner.GetOutputOrDefault name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">To be added.</typeparam>
        <param name="name">To be added.</param>
        <summary>
            Get the value of an EntryPointVariable present in the graph, or returns null.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPortDataKind">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.TlcModule.DataKind GetPortDataKind (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.ML.Runtime.EntryPoints.TlcModule/DataKind GetPortDataKind(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.EntryPoints.JsonUtils.GraphRunner.GetPortDataKind(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPortDataKind (name As String) As TlcModule.DataKind" />
      <MemberSignature Language="F#" Value="member this.GetPortDataKind : string -&gt; Microsoft.ML.Runtime.EntryPoints.TlcModule.DataKind" Usage="graphRunner.GetPortDataKind name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.TlcModule+DataKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>
            Get the data kind of a particular port.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAll">
      <MemberSignature Language="C#" Value="public void RunAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RunAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.EntryPoints.JsonUtils.GraphRunner.RunAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunAll ()" />
      <MemberSignature Language="F#" Value="member this.RunAll : unit -&gt; unit" Usage="graphRunner.RunAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Run all nodes in the graph.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInput&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public void SetInput&lt;TInput&gt; (string name, TInput input) where TInput : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetInput&lt;class TInput&gt;(string name, !!TInput input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.EntryPoints.JsonUtils.GraphRunner.SetInput``1(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetInput(Of TInput As Class) (name As String, input As TInput)" />
      <MemberSignature Language="F#" Value="member this.SetInput : string * 'Input -&gt; unit (requires 'Input : null)" Usage="graphRunner.SetInput (name, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="input" Type="TInput" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">To be added.</typeparam>
        <param name="name">To be added.</param>
        <param name="input">To be added.</param>
        <summary>
            Set the input of the experiment graph.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>