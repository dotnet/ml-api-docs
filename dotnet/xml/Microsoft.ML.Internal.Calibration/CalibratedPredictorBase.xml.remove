<Type Name="CalibratedPredictorBase" FullName="Microsoft.ML.Internal.Calibration.CalibratedPredictorBase">
  <TypeSignature Language="C#" Value="public abstract class CalibratedPredictorBase : Microsoft.ML.IDistPredictorProducing&lt;float,float&gt;, Microsoft.ML.IPredictorProducing&lt;float&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CalibratedPredictorBase extends System.Object implements class Microsoft.ML.IDistPredictorProducing`2&lt;float32, float32&gt;, class Microsoft.ML.IPredictor, class Microsoft.ML.IPredictorProducing`1&lt;float32&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Internal.Calibration.CalibratedPredictorBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CalibratedPredictorBase&#xA;Implements IDistPredictorProducing(Of Single, Single), IPredictorProducing(Of Single)" />
  <TypeSignature Language="F#" Value="type CalibratedPredictorBase = class&#xA;    interface IDistPredictorProducing&lt;single, single&gt;&#xA;    interface IPredictorProducing&lt;single&gt;&#xA;    interface IPredictor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.IDistPredictorProducing&lt;System.Single,System.Single&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.IPredictor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.IPredictorProducing&lt;System.Single&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.IPredictorProducing&lt;TResult&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.ML.BestFriend</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CalibratedPredictorBase (Microsoft.ML.IHostEnvironment env, string name, Microsoft.ML.IPredictorProducing&lt;float&gt; predictor, Microsoft.ML.Calibrator.ICalibrator calibrator);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, string name, class Microsoft.ML.IPredictorProducing`1&lt;float32&gt; predictor, class Microsoft.ML.Calibrator.ICalibrator calibrator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Internal.Calibration.CalibratedPredictorBase.#ctor(Microsoft.ML.IHostEnvironment,System.String,Microsoft.ML.IPredictorProducing{System.Single},Microsoft.ML.Calibrator.ICalibrator)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (env As IHostEnvironment, name As String, predictor As IPredictorProducing(Of Single), calibrator As ICalibrator)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Internal.Calibration.CalibratedPredictorBase : Microsoft.ML.IHostEnvironment * string * Microsoft.ML.IPredictorProducing&lt;single&gt; * Microsoft.ML.Calibrator.ICalibrator -&gt; Microsoft.ML.Internal.Calibration.CalibratedPredictorBase" Usage="new Microsoft.ML.Internal.Calibration.CalibratedPredictorBase (env, name, predictor, calibrator)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="predictor" Type="Microsoft.ML.IPredictorProducing&lt;System.Single&gt;" />
        <Parameter Name="calibrator" Type="Microsoft.ML.Calibrator.ICalibrator" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="name">To be added.</param>
        <param name="predictor">To be added.</param>
        <param name="calibrator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calibrator">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Calibrator.ICalibrator Calibrator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Calibrator.ICalibrator Calibrator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Internal.Calibration.CalibratedPredictorBase.Calibrator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Calibrator As ICalibrator" />
      <MemberSignature Language="F#" Value="member this.Calibrator : Microsoft.ML.Calibrator.ICalibrator" Usage="Microsoft.ML.Internal.Calibration.CalibratedPredictorBase.Calibrator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Calibrator.ICalibrator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCalibrator">
      <MemberSignature Language="C#" Value="protected static Microsoft.ML.Calibrator.ICalibrator GetCalibrator (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Model.ModelLoadContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class Microsoft.ML.Calibrator.ICalibrator GetCalibrator(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Model.ModelLoadContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Internal.Calibration.CalibratedPredictorBase.GetCalibrator(Microsoft.ML.IHostEnvironment,Microsoft.ML.Model.ModelLoadContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetCalibrator (env As IHostEnvironment, ctx As ModelLoadContext) As ICalibrator" />
      <MemberSignature Language="F#" Value="static member GetCalibrator : Microsoft.ML.IHostEnvironment * Microsoft.ML.Model.ModelLoadContext -&gt; Microsoft.ML.Calibrator.ICalibrator" Usage="Microsoft.ML.Internal.Calibration.CalibratedPredictorBase.GetCalibrator (env, ctx)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Calibrator.ICalibrator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="ctx" Type="Microsoft.ML.Model.ModelLoadContext" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPredictor">
      <MemberSignature Language="C#" Value="protected static Microsoft.ML.IPredictorProducing&lt;float&gt; GetPredictor (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Model.ModelLoadContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class Microsoft.ML.IPredictorProducing`1&lt;float32&gt; GetPredictor(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Model.ModelLoadContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Internal.Calibration.CalibratedPredictorBase.GetPredictor(Microsoft.ML.IHostEnvironment,Microsoft.ML.Model.ModelLoadContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetPredictor (env As IHostEnvironment, ctx As ModelLoadContext) As IPredictorProducing(Of Single)" />
      <MemberSignature Language="F#" Value="static member GetPredictor : Microsoft.ML.IHostEnvironment * Microsoft.ML.Model.ModelLoadContext -&gt; Microsoft.ML.IPredictorProducing&lt;single&gt;" Usage="Microsoft.ML.Internal.Calibration.CalibratedPredictorBase.GetPredictor (env, ctx)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.IPredictorProducing&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="ctx" Type="Microsoft.ML.Model.ModelLoadContext" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="protected readonly Microsoft.ML.IHost Host;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class Microsoft.ML.IHost Host" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Internal.Calibration.CalibratedPredictorBase.Host" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Host As IHost " />
      <MemberSignature Language="F#" Value="val mutable Host : Microsoft.ML.IHost" Usage="Microsoft.ML.Internal.Calibration.CalibratedPredictorBase.Host" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.IHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictionKind">
      <MemberSignature Language="C#" Value="public Microsoft.ML.PredictionKind PredictionKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.PredictionKind PredictionKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Internal.Calibration.CalibratedPredictorBase.PredictionKind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PredictionKind As PredictionKind" />
      <MemberSignature Language="F#" Value="member this.PredictionKind : Microsoft.ML.PredictionKind" Usage="Microsoft.ML.Internal.Calibration.CalibratedPredictorBase.PredictionKind" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.IPredictor.PredictionKind</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.PredictionKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCore">
      <MemberSignature Language="C#" Value="protected void SaveCore (Microsoft.ML.Model.ModelSaveContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SaveCore(class Microsoft.ML.Model.ModelSaveContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Internal.Calibration.CalibratedPredictorBase.SaveCore(Microsoft.ML.Model.ModelSaveContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SaveCore (ctx As ModelSaveContext)" />
      <MemberSignature Language="F#" Value="member this.SaveCore : Microsoft.ML.Model.ModelSaveContext -&gt; unit" Usage="calibratedPredictorBase.SaveCore ctx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Model.ModelSaveContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubPredictor">
      <MemberSignature Language="C#" Value="public Microsoft.ML.IPredictorProducing&lt;float&gt; SubPredictor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.IPredictorProducing`1&lt;float32&gt; SubPredictor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Internal.Calibration.CalibratedPredictorBase.SubPredictor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubPredictor As IPredictorProducing(Of Single)" />
      <MemberSignature Language="F#" Value="member this.SubPredictor : Microsoft.ML.IPredictorProducing&lt;single&gt;" Usage="Microsoft.ML.Internal.Calibration.CalibratedPredictorBase.SubPredictor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.IPredictorProducing&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
