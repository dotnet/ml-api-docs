<Type Name="LdaTransform" FullName="Microsoft.ML.Runtime.TextAnalytics.LdaTransform">
  <TypeSignature Language="C#" Value="public sealed class LdaTransform : Microsoft.ML.Runtime.Data.OneToOneTransformBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LdaTransform extends Microsoft.ML.Runtime.Data.OneToOneTransformBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.TextAnalytics.LdaTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LdaTransform&#xA;Inherits OneToOneTransformBase" />
  <TypeSignature Language="F#" Value="type LdaTransform = class&#xA;    inherit OneToOneTransformBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.Data.OneToOneTransformBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            LightLDA transform: Big Topic Models on Modest Compute Clusters.
            <see href="http://arxiv.org/abs/1412.1576">LightLDA</see> is an implementation of Latent Dirichlet Allocation (LDA).
            Previous implementations of LDA such as SparseLDA or AliasLDA allow to achieve massive data and model scales,
            for example models with tens of billions of parameters to be inferred from billions of documents.
            However this requires using a cluster of thousands of machines with all ensuing costs to setup and maintain.
            LightLDA solves this problem in a more cost-effective manner by providing an implementation 
            that is efﬁcient enough for modest clusters with at most tens of machines... 
            For more details please see original LightLDA paper: 
            http://arxiv.org/abs/1412.1576
            http://www.www2015.it/documents/proceedings/proceedings/p1351.pdf
            and open source implementation: 
            https://github.com/Microsoft/LightLDA
            
            See <a href="https://github.com/dotnet/machinelearning/blob/master/test/Microsoft.ML.TestFramework/DataPipe/TestDataPipe.cs" />
            for an example on how to use LdaTransform.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LdaTransform (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.TextAnalytics.LdaTransform.Arguments args, Microsoft.ML.Runtime.Data.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.TextAnalytics.LdaTransform/Arguments args, class Microsoft.ML.Runtime.Data.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TextAnalytics.LdaTransform.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.TextAnalytics.LdaTransform.Arguments,Microsoft.ML.Runtime.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, args As LdaTransform.Arguments, input As IDataView)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.TextAnalytics.LdaTransform : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.TextAnalytics.LdaTransform.Arguments * Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.TextAnalytics.LdaTransform" Usage="new Microsoft.ML.Runtime.TextAnalytics.LdaTransform (env, args, input)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="args" Type="Microsoft.ML.Runtime.TextAnalytics.LdaTransform+Arguments" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="args">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.TextAnalytics.LdaTransform Create (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Model.ModelLoadContext ctx, Microsoft.ML.Runtime.Data.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.TextAnalytics.LdaTransform Create(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Model.ModelLoadContext ctx, class Microsoft.ML.Runtime.Data.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TextAnalytics.LdaTransform.Create(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Model.ModelLoadContext,Microsoft.ML.Runtime.Data.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (env As IHostEnvironment, ctx As ModelLoadContext, input As IDataView) As LdaTransform" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Model.ModelLoadContext * Microsoft.ML.Runtime.Data.IDataView -&gt; Microsoft.ML.Runtime.TextAnalytics.LdaTransform" Usage="Microsoft.ML.Runtime.TextAnalytics.LdaTransform.Create (env, ctx, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.TextAnalytics.LdaTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.ModelLoadContext" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IDataView" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="ctx">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TextAnalytics.LdaTransform.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="member this.Dispose : unit -&gt; unit" Usage="ldaTransform.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~LdaTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TextAnalytics.LdaTransform.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="ldaTransform.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnTypeCore">
      <MemberSignature Language="C#" Value="protected override Microsoft.ML.Runtime.Data.ColumnType GetColumnTypeCore (int iinfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.ML.Runtime.Data.ColumnType GetColumnTypeCore(int32 iinfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TextAnalytics.LdaTransform.GetColumnTypeCore(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetColumnTypeCore (iinfo As Integer) As ColumnType" />
      <MemberSignature Language="F#" Value="override this.GetColumnTypeCore : int -&gt; Microsoft.ML.Runtime.Data.ColumnType" Usage="ldaTransform.GetColumnTypeCore iinfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.ColumnType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iinfo" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="iinfo">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGetterCore">
      <MemberSignature Language="C#" Value="protected override Delegate GetGetterCore (Microsoft.ML.Runtime.IChannel ch, Microsoft.ML.Runtime.Data.IRow input, int iinfo, out Action disposer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Delegate GetGetterCore(class Microsoft.ML.Runtime.IChannel ch, class Microsoft.ML.Runtime.Data.IRow input, int32 iinfo, [out] class System.Action&amp; disposer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TextAnalytics.LdaTransform.GetGetterCore(Microsoft.ML.Runtime.IChannel,Microsoft.ML.Runtime.Data.IRow,System.Int32,System.Action@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetGetterCore (ch As IChannel, input As IRow, iinfo As Integer, ByRef disposer As Action) As Delegate" />
      <MemberSignature Language="F#" Value="override this.GetGetterCore : Microsoft.ML.Runtime.IChannel * Microsoft.ML.Runtime.Data.IRow * int *  -&gt; Delegate" Usage="ldaTransform.GetGetterCore (ch, input, iinfo, disposer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Microsoft.ML.Runtime.IChannel" />
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IRow" />
        <Parameter Name="iinfo" Type="System.Int32" />
        <Parameter Name="disposer" Type="System.Action&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ch">To be added.</param>
        <param name="input">To be added.</param>
        <param name="iinfo">To be added.</param>
        <param name="disposer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTopicSummary">
      <MemberSignature Language="C#" Value="public string GetTopicSummary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTopicSummary() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TextAnalytics.LdaTransform.GetTopicSummary" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTopicSummary () As String" />
      <MemberSignature Language="F#" Value="member this.GetTopicSummary : unit -&gt; string" Usage="ldaTransform.GetTopicSummary " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoaderSignature">
      <MemberSignature Language="C#" Value="public const string LoaderSignature;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string LoaderSignature" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.TextAnalytics.LdaTransform.LoaderSignature" />
      <MemberSignature Language="VB.NET" Value="Public Const LoaderSignature As String " />
      <MemberSignature Language="F#" Value="val mutable LoaderSignature : string" Usage="Microsoft.ML.Runtime.TextAnalytics.LdaTransform.LoaderSignature" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save (Microsoft.ML.Runtime.Model.ModelSaveContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save(class Microsoft.ML.Runtime.Model.ModelSaveContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.TextAnalytics.LdaTransform.Save(Microsoft.ML.Runtime.Model.ModelSaveContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save (ctx As ModelSaveContext)" />
      <MemberSignature Language="F#" Value="override this.Save : Microsoft.ML.Runtime.Model.ModelSaveContext -&gt; unit" Usage="ldaTransform.Save ctx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.ModelSaveContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>