<Type Name="Repository" FullName="Microsoft.ML.Runtime.Model.Repository">
  <TypeSignature Language="C#" Value="public abstract class Repository : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Repository extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Model.Repository" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Repository&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type Repository = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Abstraction around a ZipArchive or other hierarchical storage.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddEntry">
      <MemberSignature Language="C#" Value="protected Microsoft.ML.Runtime.Model.Repository.Entry AddEntry (string pathEnt, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.ML.Runtime.Model.Repository/Entry AddEntry(string pathEnt, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Repository.AddEntry(System.String,System.IO.Stream)" />
      <MemberSignature Language="F#" Value="member this.AddEntry : string * System.IO.Stream -&gt; Microsoft.ML.Runtime.Model.Repository.Entry" Usage="repository.AddEntry (pathEnt, stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Model.Repository+Entry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathEnt" Type="System.String" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="pathEnt">To be added.</param>
        <param name="stream">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DirTemp">
      <MemberSignature Language="C#" Value="protected readonly string DirTemp;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly string DirTemp" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Model.Repository.DirTemp" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly DirTemp As String " />
      <MemberSignature Language="F#" Value="val mutable DirTemp : string" Usage="Microsoft.ML.Runtime.Model.Repository.DirTemp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Repository.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="repository.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Repository.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="repository.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeAllEntries">
      <MemberSignature Language="C#" Value="protected void DisposeAllEntries ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DisposeAllEntries() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Repository.DisposeAllEntries" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DisposeAllEntries ()" />
      <MemberSignature Language="F#" Value="member this.DisposeAllEntries : unit -&gt; unit" Usage="repository.DisposeAllEntries " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Force all open entries to be disposed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="protected bool Disposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Disposed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Model.Repository.Disposed" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Disposed As Boolean" />
      <MemberSignature Language="F#" Value="member this.Disposed : bool" Usage="Microsoft.ML.Runtime.Model.Repository.Disposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionContext">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.IExceptionContext ExceptionContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.IExceptionContext ExceptionContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Model.Repository.ExceptionContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExceptionContext As IExceptionContext" />
      <MemberSignature Language="F#" Value="member this.ExceptionContext : Microsoft.ML.Runtime.IExceptionContext" Usage="Microsoft.ML.Runtime.Model.Repository.ExceptionContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IExceptionContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Exception context.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Repository ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Repository.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="repository.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPath">
      <MemberSignature Language="C#" Value="protected void GetPath (out string pathEnt, out string pathTemp, string dir, string name, bool createDir);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void GetPath([out] string&amp; pathEnt, [out] string&amp; pathTemp, string dir, string name, bool createDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Repository.GetPath(System.String@,System.String@,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub GetPath (ByRef pathEnt As String, ByRef pathTemp As String, dir As String, name As String, createDir As Boolean)" />
      <MemberSignature Language="F#" Value="member this.GetPath :  *  * string * string * bool -&gt; unit" Usage="repository.GetPath (pathEnt, pathTemp, dir, name, createDir)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathEnt" Type="System.String" RefType="out" />
        <Parameter Name="pathTemp" Type="System.String" RefType="out" />
        <Parameter Name="dir" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="createDir" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pathEnt">To be added.</param>
        <param name="pathTemp">To be added.</param>
        <param name="dir">To be added.</param>
        <param name="name">To be added.</param>
        <param name="createDir">To be added.</param>
        <summary>
            Constructs both the relative path to the entry and the absolute path of a corresponding
            temporary file. If createDir is true, makes sure the directory exists within the temp directory.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeForArchiveEntry">
      <MemberSignature Language="C#" Value="protected static string NormalizeForArchiveEntry (string path);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string NormalizeForArchiveEntry(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Repository.NormalizeForArchiveEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function NormalizeForArchiveEntry (path As String) As String" />
      <MemberSignature Language="F#" Value="static member NormalizeForArchiveEntry : string -&gt; string" Usage="Microsoft.ML.Runtime.Model.Repository.NormalizeForArchiveEntry path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>
            When considering entries inside one of our model archives, we want to ensure that we
            use a consistent directory separator. Zip archives are stored as flat lists of entries.
            When we load those entries into our look-up dictionary, we normalize them to always use
            backward slashes.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDispose">
      <MemberSignature Language="C#" Value="protected abstract void OnDispose (Microsoft.ML.Runtime.Model.Repository.Entry ent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDispose(class Microsoft.ML.Runtime.Model.Repository/Entry ent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Repository.OnDispose(Microsoft.ML.Runtime.Model.Repository.Entry)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnDispose (ent As Repository.Entry)" />
      <MemberSignature Language="F#" Value="abstract member OnDispose : Microsoft.ML.Runtime.Model.Repository.Entry -&gt; unit" Usage="repository.OnDispose ent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ent" Type="Microsoft.ML.Runtime.Model.Repository+Entry" />
      </Parameters>
      <Docs>
        <param name="ent">To be added.</param>
        <summary>
            The entry is being disposed. Note that overrides should always call RemoveEntry, in addition to whatever
            they need to do with the corresponding stream.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathMap">
      <MemberSignature Language="C#" Value="protected readonly System.Collections.Generic.Dictionary&lt;string,string&gt; PathMap;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class System.Collections.Generic.Dictionary`2&lt;string, string&gt; PathMap" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Model.Repository.PathMap" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly PathMap As Dictionary(Of String, String) " />
      <MemberSignature Language="F#" Value="val mutable PathMap : System.Collections.Generic.Dictionary&lt;string, string&gt;" Usage="Microsoft.ML.Runtime.Model.Repository.PathMap" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEntry">
      <MemberSignature Language="C#" Value="protected void RemoveEntry (Microsoft.ML.Runtime.Model.Repository.Entry ent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveEntry(class Microsoft.ML.Runtime.Model.Repository/Entry ent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Repository.RemoveEntry(Microsoft.ML.Runtime.Model.Repository.Entry)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveEntry (ent As Repository.Entry)" />
      <MemberSignature Language="F#" Value="member this.RemoveEntry : Microsoft.ML.Runtime.Model.Repository.Entry -&gt; unit" Usage="repository.RemoveEntry ent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ent" Type="Microsoft.ML.Runtime.Model.Repository+Entry" />
      </Parameters>
      <Docs>
        <param name="ent">To be added.</param>
        <summary>
            Remove the entry from _open. Note that under normal access patterns, entries are LIFO,
            so we search from the end of _open.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>