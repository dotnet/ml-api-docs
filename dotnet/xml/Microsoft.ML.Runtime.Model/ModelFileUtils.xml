<Type Name="ModelFileUtils" FullName="Microsoft.ML.Runtime.Model.ModelFileUtils">
  <TypeSignature Language="C#" Value="public static class ModelFileUtils" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ModelFileUtils extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Model.ModelFileUtils" />
  <TypeSignature Language="VB.NET" Value="Public Class ModelFileUtils" />
  <TypeSignature Language="F#" Value="type ModelFileUtils = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This class provides utilities for loading components from the model file generated by MAML commands.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DirDataLoaderModel">
      <MemberSignature Language="C#" Value="public const string DirDataLoaderModel;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DirDataLoaderModel" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Model.ModelFileUtils.DirDataLoaderModel" />
      <MemberSignature Language="VB.NET" Value="Public Const DirDataLoaderModel As String " />
      <MemberSignature Language="F#" Value="val mutable DirDataLoaderModel : string" Usage="Microsoft.ML.Runtime.Model.ModelFileUtils.DirDataLoaderModel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DirPredictor">
      <MemberSignature Language="C#" Value="public const string DirPredictor;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DirPredictor" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Model.ModelFileUtils.DirPredictor" />
      <MemberSignature Language="VB.NET" Value="Public Const DirPredictor As String " />
      <MemberSignature Language="F#" Value="val mutable DirPredictor : string" Usage="Microsoft.ML.Runtime.Model.ModelFileUtils.DirPredictor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DirTrainingInfo">
      <MemberSignature Language="C#" Value="public const string DirTrainingInfo;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DirTrainingInfo" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Runtime.Model.ModelFileUtils.DirTrainingInfo" />
      <MemberSignature Language="VB.NET" Value="Public Const DirTrainingInfo As String " />
      <MemberSignature Language="F#" Value="val mutable DirTrainingInfo : string" Usage="Microsoft.ML.Runtime.Model.ModelFileUtils.DirTrainingInfo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataModelSavingContext">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Model.ModelSaveContext GetDataModelSavingContext (Microsoft.ML.Runtime.Model.RepositoryWriter rep);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Model.ModelSaveContext GetDataModelSavingContext(class Microsoft.ML.Runtime.Model.RepositoryWriter rep) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.ModelFileUtils.GetDataModelSavingContext(Microsoft.ML.Runtime.Model.RepositoryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataModelSavingContext (rep As RepositoryWriter) As ModelSaveContext" />
      <MemberSignature Language="F#" Value="static member GetDataModelSavingContext : Microsoft.ML.Runtime.Model.RepositoryWriter -&gt; Microsoft.ML.Runtime.Model.ModelSaveContext" Usage="Microsoft.ML.Runtime.Model.ModelFileUtils.GetDataModelSavingContext rep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Model.ModelSaveContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rep" Type="Microsoft.ML.Runtime.Model.RepositoryWriter" />
      </Parameters>
      <Docs>
        <param name="rep">To be added.</param>
        <summary>
            Given a repository, returns the save context for saving the data loader model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadLoader">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataLoader LoadLoader (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Model.RepositoryReader rep, Microsoft.ML.Runtime.Data.IMultiStreamSource files, bool loadTransforms);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataLoader LoadLoader(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Model.RepositoryReader rep, class Microsoft.ML.Runtime.Data.IMultiStreamSource files, bool loadTransforms) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.ModelFileUtils.LoadLoader(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Model.RepositoryReader,Microsoft.ML.Runtime.Data.IMultiStreamSource,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadLoader (env As IHostEnvironment, rep As RepositoryReader, files As IMultiStreamSource, loadTransforms As Boolean) As IDataLoader" />
      <MemberSignature Language="F#" Value="static member LoadLoader : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Model.RepositoryReader * Microsoft.ML.Runtime.Data.IMultiStreamSource * bool -&gt; Microsoft.ML.Runtime.Data.IDataLoader" Usage="Microsoft.ML.Runtime.Model.ModelFileUtils.LoadLoader (env, rep, files, loadTransforms)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataLoader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="rep" Type="Microsoft.ML.Runtime.Model.RepositoryReader" />
        <Parameter Name="files" Type="Microsoft.ML.Runtime.Data.IMultiStreamSource" />
        <Parameter Name="loadTransforms" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="rep">To be added.</param>
        <param name="files">To be added.</param>
        <param name="loadTransforms">To be added.</param>
        <summary>
            Loads data view (loader and transforms) from <paramref name="rep" /> if <paramref name="loadTransforms" /> is set to true,
            otherwise loads loader only.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPipeline">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataView LoadPipeline (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Model.RepositoryReader rep, Microsoft.ML.Runtime.Data.IMultiStreamSource files, bool extractInnerPipe = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataView LoadPipeline(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Model.RepositoryReader rep, class Microsoft.ML.Runtime.Data.IMultiStreamSource files, bool extractInnerPipe) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.ModelFileUtils.LoadPipeline(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Model.RepositoryReader,Microsoft.ML.Runtime.Data.IMultiStreamSource,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadPipeline (env As IHostEnvironment, rep As RepositoryReader, files As IMultiStreamSource, Optional extractInnerPipe As Boolean = false) As IDataView" />
      <MemberSignature Language="F#" Value="static member LoadPipeline : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Model.RepositoryReader * Microsoft.ML.Runtime.Data.IMultiStreamSource * bool -&gt; Microsoft.ML.Runtime.Data.IDataView" Usage="Microsoft.ML.Runtime.Model.ModelFileUtils.LoadPipeline (env, rep, files, extractInnerPipe)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="rep" Type="Microsoft.ML.Runtime.Model.RepositoryReader" />
        <Parameter Name="files" Type="Microsoft.ML.Runtime.Data.IMultiStreamSource" />
        <Parameter Name="extractInnerPipe" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="env">The host environment to use.</param>
        <param name="rep">The repository reader.</param>
        <param name="files">The data source to initialize the loader with.</param>
        <param name="extractInnerPipe">Whether to extract the transforms and loader from the wrapped CompositeDataLoader.</param>
        <summary>
            Loads and returns the loader and transforms from the specified repository reader.
            </summary>
        <returns>The created data view.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPipeline">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataView LoadPipeline (Microsoft.ML.Runtime.IHostEnvironment env, System.IO.Stream modelStream, Microsoft.ML.Runtime.Data.IMultiStreamSource files, bool extractInnerPipe = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataView LoadPipeline(class Microsoft.ML.Runtime.IHostEnvironment env, class System.IO.Stream modelStream, class Microsoft.ML.Runtime.Data.IMultiStreamSource files, bool extractInnerPipe) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.ModelFileUtils.LoadPipeline(Microsoft.ML.Runtime.IHostEnvironment,System.IO.Stream,Microsoft.ML.Runtime.Data.IMultiStreamSource,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadPipeline (env As IHostEnvironment, modelStream As Stream, files As IMultiStreamSource, Optional extractInnerPipe As Boolean = false) As IDataView" />
      <MemberSignature Language="F#" Value="static member LoadPipeline : Microsoft.ML.Runtime.IHostEnvironment * System.IO.Stream * Microsoft.ML.Runtime.Data.IMultiStreamSource * bool -&gt; Microsoft.ML.Runtime.Data.IDataView" Usage="Microsoft.ML.Runtime.Model.ModelFileUtils.LoadPipeline (env, modelStream, files, extractInnerPipe)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="modelStream" Type="System.IO.Stream" />
        <Parameter Name="files" Type="Microsoft.ML.Runtime.Data.IMultiStreamSource" />
        <Parameter Name="extractInnerPipe" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="env">The host environment to use.</param>
        <param name="modelStream">The model stream.</param>
        <param name="files">The data source to initialize the loader with.</param>
        <param name="extractInnerPipe">Whether to extract the transforms and loader from the wrapped CompositeDataLoader.</param>
        <summary>
            Loads and returns the loader and transforms from the specified model stream.
            </summary>
        <returns>The created data view.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPredictorOrNull">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.IPredictor LoadPredictorOrNull (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Model.RepositoryReader rep);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.IPredictor LoadPredictorOrNull(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Model.RepositoryReader rep) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.ModelFileUtils.LoadPredictorOrNull(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Model.RepositoryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadPredictorOrNull (env As IHostEnvironment, rep As RepositoryReader) As IPredictor" />
      <MemberSignature Language="F#" Value="static member LoadPredictorOrNull : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Model.RepositoryReader -&gt; Microsoft.ML.Runtime.IPredictor" Usage="Microsoft.ML.Runtime.Model.ModelFileUtils.LoadPredictorOrNull (env, rep)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IPredictor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="rep" Type="Microsoft.ML.Runtime.Model.RepositoryReader" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="rep">To be added.</param>
        <summary>
            Loads a predictor from the repository. Returns null iff there's no predictor.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPredictorOrNull">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.IPredictor LoadPredictorOrNull (Microsoft.ML.Runtime.IHostEnvironment env, System.IO.Stream modelStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.IPredictor LoadPredictorOrNull(class Microsoft.ML.Runtime.IHostEnvironment env, class System.IO.Stream modelStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.ModelFileUtils.LoadPredictorOrNull(Microsoft.ML.Runtime.IHostEnvironment,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadPredictorOrNull (env As IHostEnvironment, modelStream As Stream) As IPredictor" />
      <MemberSignature Language="F#" Value="static member LoadPredictorOrNull : Microsoft.ML.Runtime.IHostEnvironment * System.IO.Stream -&gt; Microsoft.ML.Runtime.IPredictor" Usage="Microsoft.ML.Runtime.Model.ModelFileUtils.LoadPredictorOrNull (env, modelStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.IPredictor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="modelStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="modelStream">To be added.</param>
        <summary>
            Loads a predictor from the model stream. Returns null iff there's no predictor.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRoleMappedSchemaOrNull">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.RoleMappedSchema LoadRoleMappedSchemaOrNull (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Model.RepositoryReader rep);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.RoleMappedSchema LoadRoleMappedSchemaOrNull(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Model.RepositoryReader rep) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.ModelFileUtils.LoadRoleMappedSchemaOrNull(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Model.RepositoryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadRoleMappedSchemaOrNull (env As IHostEnvironment, rep As RepositoryReader) As RoleMappedSchema" />
      <MemberSignature Language="F#" Value="static member LoadRoleMappedSchemaOrNull : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Model.RepositoryReader -&gt; Microsoft.ML.Runtime.Data.RoleMappedSchema" Usage="Microsoft.ML.Runtime.Model.ModelFileUtils.LoadRoleMappedSchemaOrNull (env, rep)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.RoleMappedSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="rep" Type="Microsoft.ML.Runtime.Model.RepositoryReader" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="rep">To be added.</param>
        <summary>
            Returns the <see cref="T:Microsoft.ML.Runtime.Data.RoleMappedSchema" /> from a repository, or <c>null</c> if there were no
            role mappings present.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRoleMappedSchemaOrNull">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.RoleMappedSchema LoadRoleMappedSchemaOrNull (Microsoft.ML.Runtime.IHostEnvironment env, System.IO.Stream modelStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.RoleMappedSchema LoadRoleMappedSchemaOrNull(class Microsoft.ML.Runtime.IHostEnvironment env, class System.IO.Stream modelStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.ModelFileUtils.LoadRoleMappedSchemaOrNull(Microsoft.ML.Runtime.IHostEnvironment,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadRoleMappedSchemaOrNull (env As IHostEnvironment, modelStream As Stream) As RoleMappedSchema" />
      <MemberSignature Language="F#" Value="static member LoadRoleMappedSchemaOrNull : Microsoft.ML.Runtime.IHostEnvironment * System.IO.Stream -&gt; Microsoft.ML.Runtime.Data.RoleMappedSchema" Usage="Microsoft.ML.Runtime.Model.ModelFileUtils.LoadRoleMappedSchemaOrNull (env, modelStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.RoleMappedSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="modelStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="modelStream">To be added.</param>
        <summary>
            Returns the <see cref="T:Microsoft.ML.Runtime.Data.RoleMappedSchema" /> from a model stream, or <c>null</c> if there were no
            role mappings present.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRoleMappingsOrNull">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,string&gt;&gt; LoadRoleMappingsOrNull (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Model.RepositoryReader rep);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;valuetype Microsoft.ML.Runtime.Data.RoleMappedSchema/ColumnRole, string&gt;&gt; LoadRoleMappingsOrNull(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Model.RepositoryReader rep) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.ModelFileUtils.LoadRoleMappingsOrNull(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Model.RepositoryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadRoleMappingsOrNull (env As IHostEnvironment, rep As RepositoryReader) As IEnumerable(Of KeyValuePair(Of RoleMappedSchema.ColumnRole, String))" />
      <MemberSignature Language="F#" Value="static member LoadRoleMappingsOrNull : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Model.RepositoryReader -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole, string&gt;&gt;" Usage="Microsoft.ML.Runtime.Model.ModelFileUtils.LoadRoleMappingsOrNull (env, rep)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema+ColumnRole,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="rep" Type="Microsoft.ML.Runtime.Model.RepositoryReader" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="rep">To be added.</param>
        <summary>
            Return role/column-name pairs loaded from a repository.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRoleMappingsOrNull">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole,string&gt;&gt; LoadRoleMappingsOrNull (Microsoft.ML.Runtime.IHostEnvironment env, System.IO.Stream modelStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;valuetype Microsoft.ML.Runtime.Data.RoleMappedSchema/ColumnRole, string&gt;&gt; LoadRoleMappingsOrNull(class Microsoft.ML.Runtime.IHostEnvironment env, class System.IO.Stream modelStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.ModelFileUtils.LoadRoleMappingsOrNull(Microsoft.ML.Runtime.IHostEnvironment,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadRoleMappingsOrNull (env As IHostEnvironment, modelStream As Stream) As IEnumerable(Of KeyValuePair(Of RoleMappedSchema.ColumnRole, String))" />
      <MemberSignature Language="F#" Value="static member LoadRoleMappingsOrNull : Microsoft.ML.Runtime.IHostEnvironment * System.IO.Stream -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole, string&gt;&gt;" Usage="Microsoft.ML.Runtime.Model.ModelFileUtils.LoadRoleMappingsOrNull (env, modelStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.ML.Runtime.Data.RoleMappedSchema+ColumnRole,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="modelStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="modelStream">To be added.</param>
        <summary>
            Return role/column-name pairs loaded from <paramref name="modelStream" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadTransforms">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataView LoadTransforms (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.IDataView data, Microsoft.ML.Runtime.Model.RepositoryReader rep);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataView LoadTransforms(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.IDataView data, class Microsoft.ML.Runtime.Model.RepositoryReader rep) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.ModelFileUtils.LoadTransforms(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.IDataView,Microsoft.ML.Runtime.Model.RepositoryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadTransforms (env As IHostEnvironment, data As IDataView, rep As RepositoryReader) As IDataView" />
      <MemberSignature Language="F#" Value="static member LoadTransforms : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.IDataView * Microsoft.ML.Runtime.Model.RepositoryReader -&gt; Microsoft.ML.Runtime.Data.IDataView" Usage="Microsoft.ML.Runtime.Model.ModelFileUtils.LoadTransforms (env, data, rep)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="rep" Type="Microsoft.ML.Runtime.Model.RepositoryReader" />
      </Parameters>
      <Docs>
        <param name="env">The host environment to use.</param>
        <param name="data">The starting data view.</param>
        <param name="rep">The repository reader.</param>
        <summary>
            Loads all transforms from the model stream, applies them sequentially to the provided data, and returns
            the resulting data. If there are no transforms in the stream, or if there's no DataLoader stream at all
            (this can happen if the model is produced by old TL), returns the source data.
            If the DataLoader stream is invalid, throws.
            </summary>
        <returns>The resulting data view.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadTransforms">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.Data.IDataView LoadTransforms (Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.IDataView data, System.IO.Stream modelStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.Data.IDataView LoadTransforms(class Microsoft.ML.Runtime.IHostEnvironment env, class Microsoft.ML.Runtime.Data.IDataView data, class System.IO.Stream modelStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.ModelFileUtils.LoadTransforms(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Runtime.Data.IDataView,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadTransforms (env As IHostEnvironment, data As IDataView, modelStream As Stream) As IDataView" />
      <MemberSignature Language="F#" Value="static member LoadTransforms : Microsoft.ML.Runtime.IHostEnvironment * Microsoft.ML.Runtime.Data.IDataView * System.IO.Stream -&gt; Microsoft.ML.Runtime.Data.IDataView" Usage="Microsoft.ML.Runtime.Model.ModelFileUtils.LoadTransforms (env, data, modelStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IDataView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.IDataView" />
        <Parameter Name="modelStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="env">The host environment to use.</param>
        <param name="data">The starting data view.</param>
        <param name="modelStream">The model stream.</param>
        <summary>
            Loads all transforms from the model stream, applies them sequentially to the provided data, and returns
            the resulting data. If there are no transforms in the stream, or if there's no DataLoader stream at all
            (this can happen if the model is produced by old TL), returns the source data.
            If the DataLoader stream is invalid, throws.
            </summary>
        <returns>The resulting data view.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryLoadFeatureNames">
      <MemberSignature Language="C#" Value="public static bool TryLoadFeatureNames (out Microsoft.ML.Runtime.Internal.Internallearn.FeatureNameCollection featureNames, Microsoft.ML.Runtime.Model.RepositoryReader rep);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryLoadFeatureNames([out] class Microsoft.ML.Runtime.Internal.Internallearn.FeatureNameCollection&amp; featureNames, class Microsoft.ML.Runtime.Model.RepositoryReader rep) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.ModelFileUtils.TryLoadFeatureNames(Microsoft.ML.Runtime.Internal.Internallearn.FeatureNameCollection@,Microsoft.ML.Runtime.Model.RepositoryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryLoadFeatureNames (ByRef featureNames As FeatureNameCollection, rep As RepositoryReader) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryLoadFeatureNames :  * Microsoft.ML.Runtime.Model.RepositoryReader -&gt; bool" Usage="Microsoft.ML.Runtime.Model.ModelFileUtils.TryLoadFeatureNames (featureNames, rep)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureNames" Type="Microsoft.ML.Runtime.Internal.Internallearn.FeatureNameCollection" RefType="out" />
        <Parameter Name="rep" Type="Microsoft.ML.Runtime.Model.RepositoryReader" />
      </Parameters>
      <Docs>
        <param name="featureNames">To be added.</param>
        <param name="rep">To be added.</param>
        <summary>
            REVIEW: consider adding an overload that returns <see cref="T:Microsoft.ML.Runtime.Data.VBuffer`1" />
            Loads optionally feature names from the repository directory.
            Returns false iff no stream was found for feature names, iff result is set to null.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>