<Type Name="TrainerBase&lt;TDataSet,TPredictor&gt;" FullName="Microsoft.ML.Runtime.Training.TrainerBase&lt;TDataSet,TPredictor&gt;">
  <TypeSignature Language="C#" Value="public abstract class TrainerBase&lt;TDataSet,TPredictor&gt; : Microsoft.ML.Runtime.Training.TrainerBase&lt;TPredictor&gt;, Microsoft.ML.Runtime.ITrainer&lt;TDataSet,TPredictor&gt;, Microsoft.ML.Runtime.ITrainer&lt;TDataSet&gt; where TPredictor : IPredictor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TrainerBase`2&lt;TDataSet, (class Microsoft.ML.Runtime.IPredictor) TPredictor&gt; extends Microsoft.ML.Runtime.Training.TrainerBase`1&lt;!TPredictor&gt; implements class Microsoft.ML.Runtime.ITrainer, class Microsoft.ML.Runtime.ITrainer`1&lt;!TDataSet&gt;, class Microsoft.ML.Runtime.ITrainer`2&lt;!TDataSet, !TPredictor&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Training.TrainerBase`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TrainerBase(Of TDataSet, TPredictor)&#xA;Inherits TrainerBase(Of TPredictor)&#xA;Implements ITrainer(Of TDataSet), ITrainer(Of TDataSet, TPredictor)" />
  <TypeSignature Language="F#" Value="type TrainerBase&lt;'DataSet, 'Predictor (requires 'Predictor :&gt; IPredictor)&gt; = class&#xA;    inherit TrainerBase&lt;'Predictor (requires 'Predictor :&gt; IPredictor)&gt;&#xA;    interface ITrainer&lt;'DataSet, 'Predictor (requires 'Predictor :&gt; IPredictor)&gt;&#xA;    interface ITrainer&lt;'DataSet&gt;&#xA;    interface ITrainer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TDataSet" />
    <TypeParameter Name="TPredictor">
      <Constraints>
        <InterfaceName>Microsoft.ML.Runtime.IPredictor</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.Training.TrainerBase&lt;TPredictor&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TPredictor">TPredictor</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.ITrainer&lt;TDataSet,TPredictor&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.ITrainer&lt;TDataSet&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TDataSet">To be added.</typeparam>
    <typeparam name="TPredictor">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TrainerBase (Microsoft.ML.Runtime.IHostEnvironment env, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainerBase`2.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (env As IHostEnvironment, name As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Training.TrainerBase&lt;'DataSet, 'Predictor (requires 'Predictor :&gt; Microsoft.ML.Runtime.IPredictor)&gt; : Microsoft.ML.Runtime.IHostEnvironment * string -&gt; Microsoft.ML.Runtime.Training.TrainerBase&lt;'DataSet, 'Predictor (requires 'Predictor :&gt; Microsoft.ML.Runtime.IPredictor)&gt;" Usage="new Microsoft.ML.Runtime.Training.TrainerBase&lt;'DataSet, 'Predictor (requires 'Predictor :&gt; Microsoft.ML.Runtime.IPredictor)&gt; (env, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Train">
      <MemberSignature Language="C#" Value="public abstract void Train (TDataSet data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Train(!TDataSet data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainerBase`2.Train(`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Train (data As TDataSet)" />
      <MemberSignature Language="F#" Value="abstract member Train : 'DataSet -&gt; unit" Usage="trainerBase.Train data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Runtime.ITrainer`1.Train(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="TDataSet" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
