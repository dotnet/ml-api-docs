<Type Name="TrainingCursorBase" FullName="Microsoft.ML.Runtime.Training.TrainingCursorBase">
  <TypeSignature Language="C#" Value="public abstract class TrainingCursorBase : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TrainingCursorBase extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Training.TrainingCursorBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TrainingCursorBase&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type TrainingCursorBase = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            This is the base class for a data cursor. Data cursors are specially typed
            "convenience" cursor-like objects, less general than a <see cref="T:Microsoft.ML.Runtime.Data.IRowCursor" /> but
            more convenient for common access patterns that occur in machine learning. For
            example, the common idiom of iterating over features/labels/weights while skipping
            "bad" features, labels, and weights. There will be two typical access patterns for
            users of the cursor. The first is just creation of the cursor using a constructor;
            this is best for one-off accesses of the data. The second access pattern, best for
            repeated accesses, is to use a cursor factory (usually a nested class of the cursor
            class). This keeps track of what filtering options were actually useful.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TrainingCursorBase (Microsoft.ML.Runtime.Data.IRowCursor input, Action&lt;Microsoft.ML.Runtime.Training.CursOpt&gt; signal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.Data.IRowCursor input, class System.Action`1&lt;valuetype Microsoft.ML.Runtime.Training.CursOpt&gt; signal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainingCursorBase.#ctor(Microsoft.ML.Runtime.Data.IRowCursor,System.Action{Microsoft.ML.Runtime.Training.CursOpt})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (input As IRowCursor, signal As Action(Of CursOpt))" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Training.TrainingCursorBase : Microsoft.ML.Runtime.Data.IRowCursor * Action&lt;Microsoft.ML.Runtime.Training.CursOpt&gt; -&gt; Microsoft.ML.Runtime.Training.TrainingCursorBase" Usage="new Microsoft.ML.Runtime.Training.TrainingCursorBase (input, signal)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.Runtime.Data.IRowCursor" />
        <Parameter Name="signal" Type="System.Action&lt;Microsoft.ML.Runtime.Training.CursOpt&gt;" />
      </Parameters>
      <Docs>
        <param name="input"></param>
        <param name="signal">This method is called </param>
        <summary>
            The base constructor class for the factory-based cursor creation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public virtual bool Accept ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Accept() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainingCursorBase.Accept" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Accept () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Accept : unit -&gt; bool&#xA;override this.Accept : unit -&gt; bool" Usage="trainingCursorBase.Accept " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            This fetches and validates values for the standard active columns.
            It is called automatically by MoveNext(). Client code should only need
            to deal with this if it calls MoveNext() or MoveMany() on the underlying
            IRowCursor directly. That is, this is only for very advanced scenarios.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCursor">
      <MemberSignature Language="C#" Value="protected static Microsoft.ML.Runtime.Data.IRowCursor CreateCursor (Microsoft.ML.Runtime.Data.RoleMappedData data, Microsoft.ML.Runtime.Training.CursOpt opt, Microsoft.ML.Runtime.IRandom rand, params int[] extraCols);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class Microsoft.ML.Runtime.Data.IRowCursor CreateCursor(class Microsoft.ML.Runtime.Data.RoleMappedData data, valuetype Microsoft.ML.Runtime.Training.CursOpt opt, class Microsoft.ML.Runtime.IRandom rand, int32[] extraCols) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainingCursorBase.CreateCursor(Microsoft.ML.Runtime.Data.RoleMappedData,Microsoft.ML.Runtime.Training.CursOpt,Microsoft.ML.Runtime.IRandom,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateCursor (data As RoleMappedData, opt As CursOpt, rand As IRandom, ParamArray extraCols As Integer()) As IRowCursor" />
      <MemberSignature Language="F#" Value="static member CreateCursor : Microsoft.ML.Runtime.Data.RoleMappedData * Microsoft.ML.Runtime.Training.CursOpt * Microsoft.ML.Runtime.IRandom * int[] -&gt; Microsoft.ML.Runtime.Data.IRowCursor" Usage="Microsoft.ML.Runtime.Training.TrainingCursorBase.CreateCursor (data, opt, rand, extraCols)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IRowCursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Microsoft.ML.Runtime.Data.RoleMappedData" />
        <Parameter Name="opt" Type="Microsoft.ML.Runtime.Training.CursOpt" />
        <Parameter Name="rand" Type="Microsoft.ML.Runtime.IRandom" />
        <Parameter Name="extraCols" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="opt">To be added.</param>
        <param name="rand">To be added.</param>
        <param name="extraCols">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CursoringCompleteFlags">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.ML.Runtime.Training.CursOpt CursoringCompleteFlags ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype Microsoft.ML.Runtime.Training.CursOpt CursoringCompleteFlags() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainingCursorBase.CursoringCompleteFlags" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CursoringCompleteFlags () As CursOpt" />
      <MemberSignature Language="F#" Value="abstract member CursoringCompleteFlags : unit -&gt; Microsoft.ML.Runtime.Training.CursOpt&#xA;override this.CursoringCompleteFlags : unit -&gt; Microsoft.ML.Runtime.Training.CursOpt" Usage="trainingCursorBase.CursoringCompleteFlags " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Training.CursOpt</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             This method is called by <see cref="M:Microsoft.ML.Runtime.Training.TrainingCursorBase.MoveNext" /> in the event we have reached the end
             of the cursoring. The intended usage is that it returns what flags will be passed to the signal
             delegate of the cursor, indicating what additional options should be specified on subsequent
             passes over the data. The base implementation checks if any rows were skipped, and if none were
             skipped, it signals the context that it needn't bother with any filtering checks.
            
             Because the result will be "or"-red, a perfectly acceptable implementation is that this
             return the default <see cref="T:Microsoft.ML.Runtime.Training.CursOpt" />, in which case the flags will not ever change.
            
             If the cursor was created with a signal delegate, the return value of this method will be sent
             to that delegate.
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainingCursorBase.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="trainingCursorBase.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeptRowCount">
      <MemberSignature Language="C#" Value="public long KeptRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 KeptRowCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Training.TrainingCursorBase.KeptRowCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeptRowCount As Long" />
      <MemberSignature Language="F#" Value="member this.KeptRowCount : int64" Usage="Microsoft.ML.Runtime.Training.TrainingCursorBase.KeptRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Training.TrainingCursorBase.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; bool" Usage="trainingCursorBase.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Calls Cursor.MoveNext() and this.Accept() repeatedly until this.Accept() returns true.
            Returns false if Cursor.MoveNext() returns false. If you call Cursor.MoveNext() directly,
            also call this.Accept() to fetch the values of the current row. Note that if this.Accept()
            returns false, it's possible that not all values were fetched.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Data.IRow Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.Data.IRow Row" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Training.TrainingCursorBase.Row" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Row As IRow" />
      <MemberSignature Language="F#" Value="member this.Row : Microsoft.ML.Runtime.Data.IRow" Usage="Microsoft.ML.Runtime.Training.TrainingCursorBase.Row" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Data.IRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkippedRowCount">
      <MemberSignature Language="C#" Value="public long SkippedRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 SkippedRowCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Training.TrainingCursorBase.SkippedRowCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SkippedRowCount As Long" />
      <MemberSignature Language="F#" Value="member this.SkippedRowCount : int64" Usage="Microsoft.ML.Runtime.Training.TrainingCursorBase.SkippedRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>