<Type Name="BinaryClassificationEvaluator" FullName="Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator">
  <TypeSignature Language="C#" Value="public sealed class BinaryClassificationEvaluator : Microsoft.ML.Runtime.EntryPoints.CommonInputs.IEvaluatorInput" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BinaryClassificationEvaluator extends System.Object implements class Microsoft.ML.Runtime.EntryPoints.CommonInputs/IEvaluatorInput" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BinaryClassificationEvaluator&#xA;Implements CommonInputs.IEvaluatorInput" />
  <TypeSignature Language="F#" Value="type BinaryClassificationEvaluator = class&#xA;    interface CommonInputs.IEvaluatorInput" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.EntryPoints.CommonInputs+IEvaluatorInput</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Evaluates a binary classification scored dataset.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryClassificationEvaluator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; Data" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Var(Of IDataView)" />
      <MemberSignature Language="F#" Value="member this.Data : Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; with get, set" Usage="Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The data to be used for evaluation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Legacy.Models.BinaryClassificationMetrics Evaluate (Microsoft.ML.Legacy.PredictionModel model, Microsoft.ML.Legacy.ILearningPipelineLoader testData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Legacy.Models.BinaryClassificationMetrics Evaluate(class Microsoft.ML.Legacy.PredictionModel model, class Microsoft.ML.Legacy.ILearningPipelineLoader testData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.Evaluate(Microsoft.ML.Legacy.PredictionModel,Microsoft.ML.Legacy.ILearningPipelineLoader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (model As PredictionModel, testData As ILearningPipelineLoader) As BinaryClassificationMetrics" />
      <MemberSignature Language="F#" Value="member this.Evaluate : Microsoft.ML.Legacy.PredictionModel * Microsoft.ML.Legacy.ILearningPipelineLoader -&gt; Microsoft.ML.Legacy.Models.BinaryClassificationMetrics" Usage="binaryClassificationEvaluator.Evaluate (model, testData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Legacy.Models.BinaryClassificationMetrics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.ML.Legacy.PredictionModel" />
        <Parameter Name="testData" Type="Microsoft.ML.Legacy.ILearningPipelineLoader" />
      </Parameters>
      <Docs>
        <param name="model">
            The trained PredictionModel to be evaluated.
            </param>
        <param name="testData">
            The test data that will be predicted and used to evaluate the model.
            </param>
        <summary>
            Computes the quality metrics for the PredictionModel using the specified data set.
            </summary>
        <returns>
            A BinaryClassificationMetrics instance that describes how well the model performed against the test data.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelColumn">
      <MemberSignature Language="C#" Value="public string LabelColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LabelColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.LabelColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelColumn As String" />
      <MemberSignature Language="F#" Value="member this.LabelColumn : string with get, set" Usage="Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.LabelColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for labels.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAucExamples">
      <MemberSignature Language="C#" Value="public int MaxAucExamples { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxAucExamples" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.MaxAucExamples" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxAucExamples As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxAucExamples : int with get, set" Usage="Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.MaxAucExamples" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The number of samples to use for AUC calculation. If 0, AUC is not computed. If -1, the whole dataset is used
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameColumn">
      <MemberSignature Language="C#" Value="public string NameColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.NameColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property NameColumn As String" />
      <MemberSignature Language="F#" Value="member this.NameColumn : string with get, set" Usage="Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.NameColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Name column name.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumAuPrcExamples">
      <MemberSignature Language="C#" Value="public int NumAuPrcExamples { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumAuPrcExamples" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.NumAuPrcExamples" />
      <MemberSignature Language="VB.NET" Value="Public Property NumAuPrcExamples As Integer" />
      <MemberSignature Language="F#" Value="member this.NumAuPrcExamples : int with get, set" Usage="Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.NumAuPrcExamples" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The number of samples to use for AUPRC calculation. Specify 0 for no AUPRC calculation
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumRocExamples">
      <MemberSignature Language="C#" Value="public int NumRocExamples { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumRocExamples" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.NumRocExamples" />
      <MemberSignature Language="VB.NET" Value="Public Property NumRocExamples As Integer" />
      <MemberSignature Language="F#" Value="member this.NumRocExamples : int with get, set" Usage="Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.NumRocExamples" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The number of samples to use for p/r curve generation. Specify 0 for no p/r curve generation
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProbabilityColumn">
      <MemberSignature Language="C#" Value="public string ProbabilityColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProbabilityColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.ProbabilityColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property ProbabilityColumn As String" />
      <MemberSignature Language="F#" Value="member this.ProbabilityColumn : string with get, set" Usage="Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.ProbabilityColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Probability column name
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScoreColumn">
      <MemberSignature Language="C#" Value="public string ScoreColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScoreColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.ScoreColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property ScoreColumn As String" />
      <MemberSignature Language="F#" Value="member this.ScoreColumn : string with get, set" Usage="Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.ScoreColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Score column name.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StratColumn">
      <MemberSignature Language="C#" Value="public string[] StratColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] StratColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.StratColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property StratColumn As String()" />
      <MemberSignature Language="F#" Value="member this.StratColumn : string[] with get, set" Usage="Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.StratColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Stratification column name.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Threshold">
      <MemberSignature Language="C#" Value="public float Threshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Threshold" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.Threshold" />
      <MemberSignature Language="VB.NET" Value="Public Property Threshold As Single" />
      <MemberSignature Language="F#" Value="member this.Threshold : single with get, set" Usage="Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.Threshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Probability value for classification thresholding
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseRawScoreThreshold">
      <MemberSignature Language="C#" Value="public bool UseRawScoreThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseRawScoreThreshold" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.UseRawScoreThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property UseRawScoreThreshold As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseRawScoreThreshold : bool with get, set" Usage="Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.UseRawScoreThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Use raw score value instead of probability for classification thresholding
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeightColumn">
      <MemberSignature Language="C#" Value="public string WeightColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WeightColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.WeightColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property WeightColumn As String" />
      <MemberSignature Language="F#" Value="member this.WeightColumn : string with get, set" Usage="Microsoft.ML.Legacy.Models.BinaryClassificationEvaluator.WeightColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Weight column name.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>