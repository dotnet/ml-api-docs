<Type Name="TrainTestEvaluator" FullName="Microsoft.ML.Legacy.Models.TrainTestEvaluator">
  <TypeSignature Language="C#" Value="public sealed class TrainTestEvaluator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TrainTestEvaluator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Legacy.Models.TrainTestEvaluator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TrainTestEvaluator" />
  <TypeSignature Language="F#" Value="type TrainTestEvaluator = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            General train test for any supported evaluator
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TrainTestEvaluator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Legacy.Models.TrainTestEvaluator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupColumn">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Optional&lt;string&gt; GroupColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Optional`1&lt;string&gt; GroupColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.TrainTestEvaluator.GroupColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupColumn As Optional(Of String)" />
      <MemberSignature Language="F#" Value="member this.GroupColumn : Microsoft.ML.Runtime.EntryPoints.Optional&lt;string&gt; with get, set" Usage="Microsoft.ML.Legacy.Models.TrainTestEvaluator.GroupColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Optional&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for grouping
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeTrainingMetrics">
      <MemberSignature Language="C#" Value="public bool IncludeTrainingMetrics { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeTrainingMetrics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.TrainTestEvaluator.IncludeTrainingMetrics" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeTrainingMetrics As Boolean" />
      <MemberSignature Language="F#" Value="member this.IncludeTrainingMetrics : bool with get, set" Usage="Microsoft.ML.Legacy.Models.TrainTestEvaluator.IncludeTrainingMetrics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicates whether to include and output training dataset metrics.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inputs">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Legacy.Models.TrainTestMacroSubGraphInput Inputs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Legacy.Models.TrainTestMacroSubGraphInput Inputs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.TrainTestEvaluator.Inputs" />
      <MemberSignature Language="VB.NET" Value="Public Property Inputs As TrainTestMacroSubGraphInput" />
      <MemberSignature Language="F#" Value="member this.Inputs : Microsoft.ML.Legacy.Models.TrainTestMacroSubGraphInput with get, set" Usage="Microsoft.ML.Legacy.Models.TrainTestEvaluator.Inputs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Legacy.Models.TrainTestMacroSubGraphInput</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The training subgraph inputs
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Kind">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Legacy.Models.MacroUtilsTrainerKinds Kind { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.Legacy.Models.MacroUtilsTrainerKinds Kind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.TrainTestEvaluator.Kind" />
      <MemberSignature Language="VB.NET" Value="Public Property Kind As MacroUtilsTrainerKinds" />
      <MemberSignature Language="F#" Value="member this.Kind : Microsoft.ML.Legacy.Models.MacroUtilsTrainerKinds with get, set" Usage="Microsoft.ML.Legacy.Models.TrainTestEvaluator.Kind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Legacy.Models.MacroUtilsTrainerKinds</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies the trainer kind, which determines the evaluator to be used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelColumn">
      <MemberSignature Language="C#" Value="public string LabelColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LabelColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.TrainTestEvaluator.LabelColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelColumn As String" />
      <MemberSignature Language="F#" Value="member this.LabelColumn : string with get, set" Usage="Microsoft.ML.Legacy.Models.TrainTestEvaluator.LabelColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for labels
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameColumn">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Optional&lt;string&gt; NameColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Optional`1&lt;string&gt; NameColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.TrainTestEvaluator.NameColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property NameColumn As Optional(Of String)" />
      <MemberSignature Language="F#" Value="member this.NameColumn : Microsoft.ML.Runtime.EntryPoints.Optional&lt;string&gt; with get, set" Usage="Microsoft.ML.Legacy.Models.TrainTestEvaluator.NameColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Optional&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Name column name
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.Experiment Nodes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.Experiment Nodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.TrainTestEvaluator.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public Property Nodes As Experiment" />
      <MemberSignature Language="F#" Value="member this.Nodes : Microsoft.ML.Runtime.Experiment with get, set" Usage="Microsoft.ML.Legacy.Models.TrainTestEvaluator.Nodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.Experiment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The training subgraph
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outputs">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Legacy.Models.TrainTestMacroSubGraphOutput Outputs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Legacy.Models.TrainTestMacroSubGraphOutput Outputs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.TrainTestEvaluator.Outputs" />
      <MemberSignature Language="VB.NET" Value="Public Property Outputs As TrainTestMacroSubGraphOutput" />
      <MemberSignature Language="F#" Value="member this.Outputs : Microsoft.ML.Legacy.Models.TrainTestMacroSubGraphOutput with get, set" Usage="Microsoft.ML.Legacy.Models.TrainTestEvaluator.Outputs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Legacy.Models.TrainTestMacroSubGraphOutput</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The training subgraph outputs
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PipelineId">
      <MemberSignature Language="C#" Value="public string PipelineId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PipelineId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.TrainTestEvaluator.PipelineId" />
      <MemberSignature Language="VB.NET" Value="Public Property PipelineId As String" />
      <MemberSignature Language="F#" Value="member this.PipelineId : string with get, set" Usage="Microsoft.ML.Legacy.Models.TrainTestEvaluator.PipelineId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Identifies which pipeline was run for this train test.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestingData">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; TestingData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; TestingData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.TrainTestEvaluator.TestingData" />
      <MemberSignature Language="VB.NET" Value="Public Property TestingData As Var(Of IDataView)" />
      <MemberSignature Language="F#" Value="member this.TestingData : Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; with get, set" Usage="Microsoft.ML.Legacy.Models.TrainTestEvaluator.TestingData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The data to be used for testing
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainingData">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; TrainingData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.Data.IDataView&gt; TrainingData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.TrainTestEvaluator.TrainingData" />
      <MemberSignature Language="VB.NET" Value="Public Property TrainingData As Var(Of IDataView)" />
      <MemberSignature Language="F#" Value="member this.TrainingData : Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt; with get, set" Usage="Microsoft.ML.Legacy.Models.TrainTestEvaluator.TrainingData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.Data.IDataView&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The data to be used for training
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainTestEvaluate&lt;TInput,TOutput&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Legacy.Models.TrainTestEvaluatorOutput&lt;TInput,TOutput&gt; TrainTestEvaluate&lt;TInput,TOutput&gt; (Microsoft.ML.Legacy.LearningPipeline pipeline, Microsoft.ML.Legacy.ILearningPipelineLoader testData) where TInput : class where TOutput : class, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ML.Legacy.Models.TrainTestEvaluatorOutput`2&lt;!!TInput, !!TOutput&gt; TrainTestEvaluate&lt;class TInput, class .ctor TOutput&gt;(class Microsoft.ML.Legacy.LearningPipeline pipeline, class Microsoft.ML.Legacy.ILearningPipelineLoader testData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Legacy.Models.TrainTestEvaluator.TrainTestEvaluate``2(Microsoft.ML.Legacy.LearningPipeline,Microsoft.ML.Legacy.ILearningPipelineLoader)" />
      <MemberSignature Language="VB.NET" Value="Public Function TrainTestEvaluate(Of TInput As Class, TOutput As Class) (pipeline As LearningPipeline, testData As ILearningPipelineLoader) As TrainTestEvaluatorOutput(Of TInput, TOutput)" />
      <MemberSignature Language="F#" Value="member this.TrainTestEvaluate : Microsoft.ML.Legacy.LearningPipeline * Microsoft.ML.Legacy.ILearningPipelineLoader -&gt; Microsoft.ML.Legacy.Models.TrainTestEvaluatorOutput&lt;'Input, 'Output (requires 'Input : null and 'Output : null and 'Output : (new : unit -&gt; 'Output))&gt; (requires 'Input : null and 'Output : null and 'Output : (new : unit -&gt; 'Output))" Usage="trainTestEvaluator.TrainTestEvaluate (pipeline, testData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Legacy.Models.TrainTestEvaluatorOutput&lt;TInput,TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TOutput">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="pipeline" Type="Microsoft.ML.Legacy.LearningPipeline" />
        <Parameter Name="testData" Type="Microsoft.ML.Legacy.ILearningPipelineLoader" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">Class type that represents input schema.</typeparam>
        <typeparam name="TOutput">Class type that represents prediction schema.</typeparam>
        <param name="pipeline">Machine learning pipeline that contains <see cref="T:Microsoft.ML.Legacy.ILearningPipelineLoader" />,
            transforms and at least one trainer.</param>
        <param name="testData">
          <see cref="T:Microsoft.ML.Legacy.ILearningPipelineLoader" /> that represents the test dataset.</param>
        <summary>
            Performs train-test on a pipeline.
            </summary>
        <returns>Metrics and predictor model.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformModel">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.EntryPoints.ITransformModel&gt; TransformModel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Var`1&lt;class Microsoft.ML.Runtime.EntryPoints.ITransformModel&gt; TransformModel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.TrainTestEvaluator.TransformModel" />
      <MemberSignature Language="VB.NET" Value="Public Property TransformModel As Var(Of ITransformModel)" />
      <MemberSignature Language="F#" Value="member this.TransformModel : Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.EntryPoints.ITransformModel&gt; with get, set" Usage="Microsoft.ML.Legacy.Models.TrainTestEvaluator.TransformModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Var&lt;Microsoft.ML.Runtime.EntryPoints.ITransformModel&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The aggregated transform model from the pipeline before this command, to apply to the test data, and also include in the final model, together with the predictor model.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeightColumn">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Runtime.EntryPoints.Optional&lt;string&gt; WeightColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Runtime.EntryPoints.Optional`1&lt;string&gt; WeightColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Legacy.Models.TrainTestEvaluator.WeightColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property WeightColumn As Optional(Of String)" />
      <MemberSignature Language="F#" Value="member this.WeightColumn : Microsoft.ML.Runtime.EntryPoints.Optional&lt;string&gt; with get, set" Usage="Microsoft.ML.Legacy.Models.TrainTestEvaluator.WeightColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Legacy</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.EntryPoints.Optional&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Column to use for example weight
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>