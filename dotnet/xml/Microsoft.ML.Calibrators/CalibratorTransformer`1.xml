<Type Name="CalibratorTransformer&lt;TICalibrator&gt;" FullName="Microsoft.ML.Calibrators.CalibratorTransformer&lt;TICalibrator&gt;">
  <TypeSignature Language="C#" Value="public abstract class CalibratorTransformer&lt;TICalibrator&gt; : Microsoft.ML.Data.RowToRowTransformerBase, Microsoft.ML.IPredictionTransformer&lt;TICalibrator&gt;, Microsoft.ML.ISingleFeaturePredictionTransformer&lt;TICalibrator&gt;, Microsoft.ML.ITransformer where TICalibrator : class, ICalibrator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CalibratorTransformer`1&lt;class (class Microsoft.ML.Calibrators.ICalibrator) TICalibrator&gt; extends Microsoft.ML.Data.RowToRowTransformerBase implements class Microsoft.ML.ICanSaveModel, class Microsoft.ML.IPredictionTransformer`1&lt;!TICalibrator&gt;, class Microsoft.ML.ISingleFeaturePredictionTransformer`1&lt;!TICalibrator&gt;, class Microsoft.ML.ITransformer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Calibrators.CalibratorTransformer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CalibratorTransformer(Of TICalibrator)&#xA;Inherits RowToRowTransformerBase&#xA;Implements IPredictionTransformer(Of TICalibrator), ISingleFeaturePredictionTransformer(Of TICalibrator), ITransformer" />
  <TypeSignature Language="F#" Value="type CalibratorTransformer&lt;'ICalibrator (requires 'ICalibrator : null and 'ICalibrator :&gt; ICalibrator)&gt; = class&#xA;    inherit RowToRowTransformerBase&#xA;    interface ISingleFeaturePredictionTransformer&lt;'ICalibrator (requires 'ICalibrator : null and 'ICalibrator :&gt; ICalibrator)&gt;&#xA;    interface IPredictionTransformer&lt;'ICalibrator (requires 'ICalibrator : null and 'ICalibrator :&gt; ICalibrator)&gt;&#xA;    interface ITransformer&#xA;    interface ICanSaveModel" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TICalibrator">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
        <InterfaceName>Microsoft.ML.Calibrators.ICalibrator</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.Data.RowToRowTransformerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.ICanSaveModel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.IPredictionTransformer&lt;TICalibrator&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.IPredictionTransformer&lt;TModel&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.ISingleFeaturePredictionTransformer&lt;TICalibrator&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.ITransformer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TICalibrator">The <see cref="T:Microsoft.ML.Calibrators.ICalibrator" /> used to transform the data.</typeparam>
    <summary>
            An instance of this class is the result of calling <see cref="M:Microsoft.ML.Calibrators.CalibratorEstimatorBase`1.Fit(Microsoft.ML.IDataView)" />.
            If you pass a scored data, to the <see cref="T:Microsoft.ML.Calibrators.CalibratorTransformer`1" /> Transform method, it will add the Probability column
            to the dataset. The Probability column is the value of the Score normalized to be a valid probability.
            The <see cref="T:Microsoft.ML.Calibrators.CalibratorTransformer`1" /> is an instance of <see cref="T:Microsoft.ML.ISingleFeaturePredictionTransformer`1" />
            where score can be viewed as a feature while probability is treated as the label.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Microsoft.ML.IPredictionTransformer&lt;TICalibrator&gt;.Model">
      <MemberSignature Language="C#" Value="TICalibrator Microsoft.ML.IPredictionTransformer&lt;TICalibrator&gt;.Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TICalibrator Microsoft.ML.IPredictionTransformer&lt;TICalibrator&gt;.Model" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Calibrators.CalibratorTransformer`1.Microsoft#ML#IPredictionTransformer&lt;TICalibrator&gt;#Model" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Model As TICalibrator Implements IPredictionTransformer(Of TICalibrator).Model" />
      <MemberSignature Language="F#" Usage="Microsoft.ML.IPredictionTransformer&lt;TICalibrator&gt;.Model" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.IPredictionTransformer`1.Model</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TICalibrator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.ML.ISingleFeaturePredictionTransformer&lt;TICalibrator&gt;.FeatureColumnName">
      <MemberSignature Language="C#" Value="string Microsoft.ML.ISingleFeaturePredictionTransformer&lt;TICalibrator&gt;.FeatureColumnName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Microsoft.ML.ISingleFeaturePredictionTransformer&lt;TICalibrator&gt;.FeatureColumnName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Calibrators.CalibratorTransformer`1.Microsoft#ML#ISingleFeaturePredictionTransformer&lt;TICalibrator&gt;#FeatureColumnName" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property FeatureColumnName As String Implements ISingleFeaturePredictionTransformer(Of TICalibrator).FeatureColumnName" />
      <MemberSignature Language="F#" Usage="Microsoft.ML.ISingleFeaturePredictionTransformer&lt;TICalibrator&gt;.FeatureColumnName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.ISingleFeaturePredictionTransformer`1.FeatureColumnName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.ML.ISingleFeaturePredictionTransformer&lt;TICalibrator&gt;.FeatureColumnType">
      <MemberSignature Language="C#" Value="Microsoft.ML.Data.DataViewType Microsoft.ML.ISingleFeaturePredictionTransformer&lt;TICalibrator&gt;.FeatureColumnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Data.DataViewType Microsoft.ML.ISingleFeaturePredictionTransformer&lt;TICalibrator&gt;.FeatureColumnType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Calibrators.CalibratorTransformer`1.Microsoft#ML#ISingleFeaturePredictionTransformer&lt;TICalibrator&gt;#FeatureColumnType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property FeatureColumnType As DataViewType Implements ISingleFeaturePredictionTransformer(Of TICalibrator).FeatureColumnType" />
      <MemberSignature Language="F#" Usage="Microsoft.ML.ISingleFeaturePredictionTransformer&lt;TICalibrator&gt;.FeatureColumnType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.ISingleFeaturePredictionTransformer`1.FeatureColumnType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.DataViewType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.ML.ITransformer.IsRowToRowMapper">
      <MemberSignature Language="C#" Value="bool Microsoft.ML.ITransformer.IsRowToRowMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Microsoft.ML.ITransformer.IsRowToRowMapper" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Calibrators.CalibratorTransformer`1.Microsoft#ML#ITransformer#IsRowToRowMapper" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsRowToRowMapper As Boolean Implements ITransformer.IsRowToRowMapper" />
      <MemberSignature Language="F#" Usage="Microsoft.ML.ITransformer.IsRowToRowMapper" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.ML.ITransformer.IsRowToRowMapper</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>