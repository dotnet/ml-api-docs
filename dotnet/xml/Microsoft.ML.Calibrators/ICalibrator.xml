<Type Name="ICalibrator" FullName="Microsoft.ML.Calibrators.ICalibrator">
  <TypeSignature Language="C#" Value="public interface ICalibrator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ICalibrator" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Calibrators.ICalibrator" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICalibrator" />
  <TypeSignature Language="F#" Value="type ICalibrator = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICalibrator" FrameworkAlternate="ml-dotnet-1.0.0;ml-dotnet-1.1.0;ml-dotnet-1.2.0;ml-dotnet-1.3.1;ml-dotnet-1.4.0;ml-dotnet-1.5.0;ml-dotnet-1.6.0;ml-dotnet-1.7.0;ml-dotnet-2.0.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            An interface for probability calibrators.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="PredictProbability">
      <MemberSignature Language="C#" Value="public float PredictProbability (float output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 PredictProbability(float32 output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Calibrators.ICalibrator.PredictProbability(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function PredictProbability (output As Single) As Single" />
      <MemberSignature Language="F#" Value="abstract member PredictProbability : single -&gt; single" Usage="iCalibrator.PredictProbability output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="output">To be added.</param>
        <summary> Given a classifier output, produce the probability.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
