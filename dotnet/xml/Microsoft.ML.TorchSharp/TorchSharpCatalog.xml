<Type Name="TorchSharpCatalog" FullName="Microsoft.ML.TorchSharp.TorchSharpCatalog">
  <TypeSignature Language="C#" Value="public static class TorchSharpCatalog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TorchSharpCatalog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.TorchSharp.TorchSharpCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Module TorchSharpCatalog" />
  <TypeSignature Language="F#" Value="type TorchSharpCatalog = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Collection of extension methods for <see cref="T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers" /> to create instances of TorchSharp trainer components.
            </summary>
    <remarks>
            This requires additional nuget dependencies to link against TorchSharp native dlls. See <see cref="T:Microsoft.ML.Vision.ImageClassificationTrainer" /> for more information.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="EvaluateObjectDetection">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.TorchSharp.AutoFormerV2.ObjectDetectionMetrics EvaluateObjectDetection (this Microsoft.ML.MulticlassClassificationCatalog catalog, Microsoft.ML.IDataView data, Microsoft.ML.DataViewSchema.Column labelCol, Microsoft.ML.DataViewSchema.Column actualBoundingBoxColumn, Microsoft.ML.DataViewSchema.Column predictedLabelCol, Microsoft.ML.DataViewSchema.Column predictedBoundingBoxColumn, Microsoft.ML.DataViewSchema.Column scoreCol);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.TorchSharp.AutoFormerV2.ObjectDetectionMetrics EvaluateObjectDetection(class Microsoft.ML.MulticlassClassificationCatalog catalog, class Microsoft.ML.IDataView data, valuetype Microsoft.ML.DataViewSchema/Column labelCol, valuetype Microsoft.ML.DataViewSchema/Column actualBoundingBoxColumn, valuetype Microsoft.ML.DataViewSchema/Column predictedLabelCol, valuetype Microsoft.ML.DataViewSchema/Column predictedBoundingBoxColumn, valuetype Microsoft.ML.DataViewSchema/Column scoreCol) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.TorchSharpCatalog.EvaluateObjectDetection(Microsoft.ML.MulticlassClassificationCatalog,Microsoft.ML.IDataView,Microsoft.ML.DataViewSchema.Column,Microsoft.ML.DataViewSchema.Column,Microsoft.ML.DataViewSchema.Column,Microsoft.ML.DataViewSchema.Column,Microsoft.ML.DataViewSchema.Column)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EvaluateObjectDetection (catalog As MulticlassClassificationCatalog, data As IDataView, labelCol As DataViewSchema.Column, actualBoundingBoxColumn As DataViewSchema.Column, predictedLabelCol As DataViewSchema.Column, predictedBoundingBoxColumn As DataViewSchema.Column, scoreCol As DataViewSchema.Column) As ObjectDetectionMetrics" />
      <MemberSignature Language="F#" Value="static member EvaluateObjectDetection : Microsoft.ML.MulticlassClassificationCatalog * Microsoft.ML.IDataView * Microsoft.ML.DataViewSchema.Column * Microsoft.ML.DataViewSchema.Column * Microsoft.ML.DataViewSchema.Column * Microsoft.ML.DataViewSchema.Column * Microsoft.ML.DataViewSchema.Column -&gt; Microsoft.ML.TorchSharp.AutoFormerV2.ObjectDetectionMetrics" Usage="Microsoft.ML.TorchSharp.TorchSharpCatalog.EvaluateObjectDetection (catalog, data, labelCol, actualBoundingBoxColumn, predictedLabelCol, predictedBoundingBoxColumn, scoreCol)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TorchSharp.AutoFormerV2.ObjectDetectionMetrics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog" RefType="this" Index="0" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="data" Type="Microsoft.ML.IDataView" Index="1" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="labelCol" Type="Microsoft.ML.DataViewSchema+Column" Index="2" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="actualBoundingBoxColumn" Type="Microsoft.ML.DataViewSchema+Column" Index="3" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="predictedLabelCol" Type="Microsoft.ML.DataViewSchema+Column" Index="4" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="predictedBoundingBoxColumn" Type="Microsoft.ML.DataViewSchema+Column" Index="5" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="scoreCol" Type="Microsoft.ML.DataViewSchema+Column" Index="6" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="data">IDataView with the data</param>
        <param name="labelCol">Column that has the actual labels.</param>
        <param name="actualBoundingBoxColumn">Column that has the actual bounding boxes.</param>
        <param name="predictedLabelCol">Column that has the predicted labels.</param>
        <param name="predictedBoundingBoxColumn">Column that has the predicted bounding boxes.</param>
        <param name="scoreCol">Column that has the predicted score (confidence level).</param>
        <summary>
            Evaluates scored object detection data.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamedEntityRecognition">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.TorchSharp.NasBert.NerTrainer NamedEntityRecognition (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, Microsoft.ML.TorchSharp.NasBert.NerTrainer.NerOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.TorchSharp.NasBert.NerTrainer NamedEntityRecognition(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, class Microsoft.ML.TorchSharp.NasBert.NerTrainer/NerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.TorchSharpCatalog.NamedEntityRecognition(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.TorchSharp.NasBert.NerTrainer.NerOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NamedEntityRecognition (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, options As NerTrainer.NerOptions) As NerTrainer" />
      <MemberSignature Language="F#" Value="static member NamedEntityRecognition : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * Microsoft.ML.TorchSharp.NasBert.NerTrainer.NerOptions -&gt; Microsoft.ML.TorchSharp.NasBert.NerTrainer" Usage="Microsoft.ML.TorchSharp.TorchSharpCatalog.NamedEntityRecognition (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TorchSharp.NasBert.NerTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" Index="0" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="options" Type="Microsoft.ML.TorchSharp.NasBert.NerTrainer+NerOptions" Index="1" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="options">The full set of advanced options.</param>
        <summary>
            Fine tune a Named Entity Recognition model.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamedEntityRecognition">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.TorchSharp.NasBert.NerTrainer NamedEntityRecognition (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string outputColumnName = &quot;PredictedLabel&quot;, string sentence1ColumnName = &quot;Sentence&quot;, int batchSize = 32, int maxEpochs = 10, Microsoft.ML.TorchSharp.NasBert.BertArchitecture architecture = Microsoft.ML.TorchSharp.NasBert.BertArchitecture.Roberta, Microsoft.ML.IDataView validationSet = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.TorchSharp.NasBert.NerTrainer NamedEntityRecognition(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, string labelColumnName, string outputColumnName, string sentence1ColumnName, int32 batchSize, int32 maxEpochs, valuetype Microsoft.ML.TorchSharp.NasBert.BertArchitecture architecture, class Microsoft.ML.IDataView validationSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.TorchSharpCatalog.NamedEntityRecognition(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.ML.TorchSharp.NasBert.BertArchitecture,Microsoft.ML.IDataView)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NamedEntityRecognition (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional outputColumnName As String = &quot;PredictedLabel&quot;, Optional sentence1ColumnName As String = &quot;Sentence&quot;, Optional batchSize As Integer = 32, Optional maxEpochs As Integer = 10, Optional architecture As BertArchitecture = Microsoft.ML.TorchSharp.NasBert.BertArchitecture.Roberta, Optional validationSet As IDataView = Nothing) As NerTrainer" />
      <MemberSignature Language="F#" Value="static member NamedEntityRecognition : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * string * string * string * int * int * Microsoft.ML.TorchSharp.NasBert.BertArchitecture * Microsoft.ML.IDataView -&gt; Microsoft.ML.TorchSharp.NasBert.NerTrainer" Usage="Microsoft.ML.TorchSharp.TorchSharpCatalog.NamedEntityRecognition (catalog, labelColumnName, outputColumnName, sentence1ColumnName, batchSize, maxEpochs, architecture, validationSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TorchSharp.NasBert.NerTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" Index="0" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="labelColumnName" Type="System.String" Index="1" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="outputColumnName" Type="System.String" Index="2" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="sentence1ColumnName" Type="System.String" Index="3" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="batchSize" Type="System.Int32" Index="4" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="maxEpochs" Type="System.Int32" Index="5" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="architecture" Type="Microsoft.ML.TorchSharp.NasBert.BertArchitecture" Index="6" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="validationSet" Type="Microsoft.ML.IDataView" Index="7" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="labelColumnName">Name of the label column. Column should be a key type.</param>
        <param name="outputColumnName">Name of the output column. It will be a key type. It is the predicted label.</param>
        <param name="sentence1ColumnName">Name of the column for the first sentence.</param>
        <param name="batchSize">Number of rows in the batch.</param>
        <param name="maxEpochs">Maximum number of times to loop through your training set.</param>
        <param name="architecture">Architecture for the model. Defaults to Roberta.</param>
        <param name="validationSet">The validation set used while training to improve model quality.</param>
        <summary>
            Fine tune a NAS-BERT model for Named Entity Recognition. The limit for any sentence is 512 tokens. Each word typically
            will map to a single token, and we automatically add 2 specical tokens (a start token and a separator token)
            so in general this limit will be 510 words for all sentences.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameEntityRecognition">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.TorchSharp.NasBert.NerTrainer NameEntityRecognition (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, Microsoft.ML.TorchSharp.NasBert.NerTrainer.NerOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.TorchSharp.NasBert.NerTrainer NameEntityRecognition(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, class Microsoft.ML.TorchSharp.NasBert.NerTrainer/NerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.TorchSharpCatalog.NameEntityRecognition(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.TorchSharp.NasBert.NerTrainer.NerOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NameEntityRecognition (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, options As NerTrainer.NerOptions) As NerTrainer" />
      <MemberSignature Language="F#" Value="static member NameEntityRecognition : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * Microsoft.ML.TorchSharp.NasBert.NerTrainer.NerOptions -&gt; Microsoft.ML.TorchSharp.NasBert.NerTrainer" Usage="Microsoft.ML.TorchSharp.TorchSharpCatalog.NameEntityRecognition (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet;ml-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet;ml-dotnet-preview">
          <AttributeName Language="C#">[System.Obsolete("Please use NamedEntityRecognition method instead", false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Please use NamedEntityRecognition method instead", false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TorchSharp.NasBert.NerTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" Index="0" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="options" Type="Microsoft.ML.TorchSharp.NasBert.NerTrainer+NerOptions" Index="1" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="options">The full set of advanced options.</param>
        <summary>
            Obsolete: please use the <see cref="M:Microsoft.ML.TorchSharp.TorchSharpCatalog.NamedEntityRecognition(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.TorchSharp.NasBert.NerTrainer.NerOptions)" /> method instead
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameEntityRecognition">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.TorchSharp.NasBert.NerTrainer NameEntityRecognition (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string outputColumnName = &quot;PredictedLabel&quot;, string sentence1ColumnName = &quot;Sentence&quot;, int batchSize = 32, int maxEpochs = 10, Microsoft.ML.TorchSharp.NasBert.BertArchitecture architecture = Microsoft.ML.TorchSharp.NasBert.BertArchitecture.Roberta, Microsoft.ML.IDataView validationSet = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.TorchSharp.NasBert.NerTrainer NameEntityRecognition(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, string labelColumnName, string outputColumnName, string sentence1ColumnName, int32 batchSize, int32 maxEpochs, valuetype Microsoft.ML.TorchSharp.NasBert.BertArchitecture architecture, class Microsoft.ML.IDataView validationSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.TorchSharpCatalog.NameEntityRecognition(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.ML.TorchSharp.NasBert.BertArchitecture,Microsoft.ML.IDataView)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NameEntityRecognition (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional outputColumnName As String = &quot;PredictedLabel&quot;, Optional sentence1ColumnName As String = &quot;Sentence&quot;, Optional batchSize As Integer = 32, Optional maxEpochs As Integer = 10, Optional architecture As BertArchitecture = Microsoft.ML.TorchSharp.NasBert.BertArchitecture.Roberta, Optional validationSet As IDataView = Nothing) As NerTrainer" />
      <MemberSignature Language="F#" Value="static member NameEntityRecognition : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * string * string * string * int * int * Microsoft.ML.TorchSharp.NasBert.BertArchitecture * Microsoft.ML.IDataView -&gt; Microsoft.ML.TorchSharp.NasBert.NerTrainer" Usage="Microsoft.ML.TorchSharp.TorchSharpCatalog.NameEntityRecognition (catalog, labelColumnName, outputColumnName, sentence1ColumnName, batchSize, maxEpochs, architecture, validationSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="ml-dotnet;ml-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="ml-dotnet;ml-dotnet-preview">
          <AttributeName Language="C#">[System.Obsolete("Please use NamedEntityRecognition method instead", false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Please use NamedEntityRecognition method instead", false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TorchSharp.NasBert.NerTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" Index="0" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="labelColumnName" Type="System.String" Index="1" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="outputColumnName" Type="System.String" Index="2" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="sentence1ColumnName" Type="System.String" Index="3" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="batchSize" Type="System.Int32" Index="4" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="maxEpochs" Type="System.Int32" Index="5" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="architecture" Type="Microsoft.ML.TorchSharp.NasBert.BertArchitecture" Index="6" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="validationSet" Type="Microsoft.ML.IDataView" Index="7" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="labelColumnName">Name of the label column. Column should be a key type.</param>
        <param name="outputColumnName">Name of the output column. It will be a key type. It is the predicted label.</param>
        <param name="sentence1ColumnName">Name of the column for the first sentence.</param>
        <param name="batchSize">Number of rows in the batch.</param>
        <param name="maxEpochs">Maximum number of times to loop through your training set.</param>
        <param name="architecture">Architecture for the model. Defaults to Roberta.</param>
        <param name="validationSet">The validation set used while training to improve model quality.</param>
        <summary>
            Obsolete: please use the <see cref="M:Microsoft.ML.TorchSharp.TorchSharpCatalog.NamedEntityRecognition(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.ML.TorchSharp.NasBert.BertArchitecture,Microsoft.ML.IDataView)" /> method instead
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectDetection">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.TorchSharp.AutoFormerV2.ObjectDetectionTrainer ObjectDetection (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, Microsoft.ML.TorchSharp.AutoFormerV2.ObjectDetectionTrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.TorchSharp.AutoFormerV2.ObjectDetectionTrainer ObjectDetection(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, class Microsoft.ML.TorchSharp.AutoFormerV2.ObjectDetectionTrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.TorchSharpCatalog.ObjectDetection(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.TorchSharp.AutoFormerV2.ObjectDetectionTrainer.Options)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ObjectDetection (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, options As ObjectDetectionTrainer.Options) As ObjectDetectionTrainer" />
      <MemberSignature Language="F#" Value="static member ObjectDetection : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * Microsoft.ML.TorchSharp.AutoFormerV2.ObjectDetectionTrainer.Options -&gt; Microsoft.ML.TorchSharp.AutoFormerV2.ObjectDetectionTrainer" Usage="Microsoft.ML.TorchSharp.TorchSharpCatalog.ObjectDetection (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TorchSharp.AutoFormerV2.ObjectDetectionTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" Index="0" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="options" Type="Microsoft.ML.TorchSharp.AutoFormerV2.ObjectDetectionTrainer+Options" Index="1" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="options">The full set of advanced options.</param>
        <summary>
            Fine tune an object detection model.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectDetection">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.TorchSharp.AutoFormerV2.ObjectDetectionTrainer ObjectDetection (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string predictedLabelColumnName = &quot;PredictedLabel&quot;, string scoreColumnName = &quot;Score&quot;, string boundingBoxColumnName = &quot;BoundingBoxes&quot;, string predictedBoundingBoxColumnName = &quot;PredictedBoundingBoxes&quot;, string imageColumnName = &quot;Image&quot;, int maxEpoch = 10);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.TorchSharp.AutoFormerV2.ObjectDetectionTrainer ObjectDetection(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, string labelColumnName, string predictedLabelColumnName, string scoreColumnName, string boundingBoxColumnName, string predictedBoundingBoxColumnName, string imageColumnName, int32 maxEpoch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.TorchSharpCatalog.ObjectDetection(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ObjectDetection (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional predictedLabelColumnName As String = &quot;PredictedLabel&quot;, Optional scoreColumnName As String = &quot;Score&quot;, Optional boundingBoxColumnName As String = &quot;BoundingBoxes&quot;, Optional predictedBoundingBoxColumnName As String = &quot;PredictedBoundingBoxes&quot;, Optional imageColumnName As String = &quot;Image&quot;, Optional maxEpoch As Integer = 10) As ObjectDetectionTrainer" />
      <MemberSignature Language="F#" Value="static member ObjectDetection : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * string * string * string * string * string * string * int -&gt; Microsoft.ML.TorchSharp.AutoFormerV2.ObjectDetectionTrainer" Usage="Microsoft.ML.TorchSharp.TorchSharpCatalog.ObjectDetection (catalog, labelColumnName, predictedLabelColumnName, scoreColumnName, boundingBoxColumnName, predictedBoundingBoxColumnName, imageColumnName, maxEpoch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TorchSharp.AutoFormerV2.ObjectDetectionTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" Index="0" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="labelColumnName" Type="System.String" Index="1" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="predictedLabelColumnName" Type="System.String" Index="2" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="scoreColumnName" Type="System.String" Index="3" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="boundingBoxColumnName" Type="System.String" Index="4" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="predictedBoundingBoxColumnName" Type="System.String" Index="5" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="imageColumnName" Type="System.String" Index="6" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="maxEpoch" Type="System.Int32" Index="7" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="labelColumnName">The label column name. Should be a vector of keytype</param>
        <param name="predictedLabelColumnName">The output predicted label column name. Is a vector of keytype</param>
        <param name="scoreColumnName">The output score column name. Is a vector of float.</param>
        <param name="boundingBoxColumnName">The bounding box column name. Is a vector of float. Values should be in the order x0 y0 x1 y1.</param>
        <param name="predictedBoundingBoxColumnName">The output bounding box column name. Is a vector of float. Values should be in the order x0 y0 x1 y1.</param>
        <param name="imageColumnName">The column name holding the image Data. Is an MLImage</param>
        <param name="maxEpoch">How many epochs to run.</param>
        <summary>
            Fine tune an object detection model.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuestionAnswer">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.TorchSharp.Roberta.QATrainer QuestionAnswer (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, Microsoft.ML.TorchSharp.Roberta.QATrainer.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.TorchSharp.Roberta.QATrainer QuestionAnswer(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, class Microsoft.ML.TorchSharp.Roberta.QATrainer/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.TorchSharpCatalog.QuestionAnswer(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.TorchSharp.Roberta.QATrainer.Options)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function QuestionAnswer (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, options As QATrainer.Options) As QATrainer" />
      <MemberSignature Language="F#" Value="static member QuestionAnswer : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * Microsoft.ML.TorchSharp.Roberta.QATrainer.Options -&gt; Microsoft.ML.TorchSharp.Roberta.QATrainer" Usage="Microsoft.ML.TorchSharp.TorchSharpCatalog.QuestionAnswer (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TorchSharp.Roberta.QATrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" Index="0" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="options" Type="Microsoft.ML.TorchSharp.Roberta.QATrainer+Options" Index="1" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="options">The options for QA.</param>
        <summary>
            Fine tune a ROBERTA model for Question and Answer. The limit for any sentence is 512 tokens. Each word typically
            will map to a single token, and we automatically add 2 specical tokens (a start token and a separator token)
            so in general this limit will be 510 words for all sentences.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuestionAnswer">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.TorchSharp.Roberta.QATrainer QuestionAnswer (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, string contextColumnName = &quot;Context&quot;, string questionColumnName = &quot;Question&quot;, string trainingAnswerColumnName = &quot;TrainingAnswer&quot;, string answerIndexColumnName = &quot;AnswerIndex&quot;, string predictedAnswerColumnName = &quot;Answer&quot;, string scoreColumnName = &quot;Score&quot;, int topK = 3, int batchSize = 4, int maxEpochs = 10, Microsoft.ML.TorchSharp.NasBert.BertArchitecture architecture = Microsoft.ML.TorchSharp.NasBert.BertArchitecture.Roberta, Microsoft.ML.IDataView validationSet = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.TorchSharp.Roberta.QATrainer QuestionAnswer(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, string contextColumnName, string questionColumnName, string trainingAnswerColumnName, string answerIndexColumnName, string predictedAnswerColumnName, string scoreColumnName, int32 topK, int32 batchSize, int32 maxEpochs, valuetype Microsoft.ML.TorchSharp.NasBert.BertArchitecture architecture, class Microsoft.ML.IDataView validationSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.TorchSharpCatalog.QuestionAnswer(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,Microsoft.ML.TorchSharp.NasBert.BertArchitecture,Microsoft.ML.IDataView)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function QuestionAnswer (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, Optional contextColumnName As String = &quot;Context&quot;, Optional questionColumnName As String = &quot;Question&quot;, Optional trainingAnswerColumnName As String = &quot;TrainingAnswer&quot;, Optional answerIndexColumnName As String = &quot;AnswerIndex&quot;, Optional predictedAnswerColumnName As String = &quot;Answer&quot;, Optional scoreColumnName As String = &quot;Score&quot;, Optional topK As Integer = 3, Optional batchSize As Integer = 4, Optional maxEpochs As Integer = 10, Optional architecture As BertArchitecture = Microsoft.ML.TorchSharp.NasBert.BertArchitecture.Roberta, Optional validationSet As IDataView = Nothing) As QATrainer" />
      <MemberSignature Language="F#" Value="static member QuestionAnswer : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * string * string * string * string * string * string * int * int * int * Microsoft.ML.TorchSharp.NasBert.BertArchitecture * Microsoft.ML.IDataView -&gt; Microsoft.ML.TorchSharp.Roberta.QATrainer" Usage="Microsoft.ML.TorchSharp.TorchSharpCatalog.QuestionAnswer (catalog, contextColumnName, questionColumnName, trainingAnswerColumnName, answerIndexColumnName, predictedAnswerColumnName, scoreColumnName, topK, batchSize, maxEpochs, architecture, validationSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TorchSharp.Roberta.QATrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" Index="0" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="contextColumnName" Type="System.String" Index="1" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="questionColumnName" Type="System.String" Index="2" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="trainingAnswerColumnName" Type="System.String" Index="3" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="answerIndexColumnName" Type="System.String" Index="4" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="predictedAnswerColumnName" Type="System.String" Index="5" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="scoreColumnName" Type="System.String" Index="6" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="topK" Type="System.Int32" Index="7" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="batchSize" Type="System.Int32" Index="8" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="maxEpochs" Type="System.Int32" Index="9" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="architecture" Type="Microsoft.ML.TorchSharp.NasBert.BertArchitecture" Index="10" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="validationSet" Type="Microsoft.ML.IDataView" Index="11" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="contextColumnName">The context for the question.</param>
        <param name="questionColumnName">The question being asked.</param>
        <param name="trainingAnswerColumnName">The answer used to train the model.</param>
        <param name="answerIndexColumnName">The starting character index of that answer in the context.</param>
        <param name="predictedAnswerColumnName">The answer predicted by the model during inferencing.</param>
        <param name="scoreColumnName">The score of the predicted answers.</param>
        <param name="topK">How many top results you want back for a given question.</param>
        <param name="batchSize">Number of rows in the batch.</param>
        <param name="maxEpochs">Maximum number of times to loop through your training set.</param>
        <param name="architecture">Architecture for the model. Defaults to Roberta.</param>
        <param name="validationSet">The validation set used while training to improve model quality.</param>
        <summary>
            Fine tune a ROBERTA model for Question and Answer. The limit for any sentence is 512 tokens. Each word typically
            will map to a single token, and we automatically add 2 specical tokens (a start token and a separator token)
            so in general this limit will be 510 words for all sentences.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SentenceSimilarity">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.TorchSharp.NasBert.SentenceSimilarityTrainer SentenceSimilarity (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, Microsoft.ML.TorchSharp.NasBert.SentenceSimilarityTrainer.SentenceSimilarityOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.TorchSharp.NasBert.SentenceSimilarityTrainer SentenceSimilarity(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, class Microsoft.ML.TorchSharp.NasBert.SentenceSimilarityTrainer/SentenceSimilarityOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.TorchSharpCatalog.SentenceSimilarity(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.TorchSharp.NasBert.SentenceSimilarityTrainer.SentenceSimilarityOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SentenceSimilarity (catalog As RegressionCatalog.RegressionTrainers, options As SentenceSimilarityTrainer.SentenceSimilarityOptions) As SentenceSimilarityTrainer" />
      <MemberSignature Language="F#" Value="static member SentenceSimilarity : Microsoft.ML.RegressionCatalog.RegressionTrainers * Microsoft.ML.TorchSharp.NasBert.SentenceSimilarityTrainer.SentenceSimilarityOptions -&gt; Microsoft.ML.TorchSharp.NasBert.SentenceSimilarityTrainer" Usage="Microsoft.ML.TorchSharp.TorchSharpCatalog.SentenceSimilarity (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TorchSharp.NasBert.SentenceSimilarityTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" Index="0" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="options" Type="Microsoft.ML.TorchSharp.NasBert.SentenceSimilarityTrainer+SentenceSimilarityOptions" Index="1" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="options">Advanced Options</param>
        <summary>
            Fine tune a NAS-BERT model for NLP sentence Similarity. The limit for any sentence is 512 tokens. Each word typically
            will map to a single token, and we automatically add 2 specical tokens (a start token and a separator token)
            so in general this limit will be 510 words for all sentences.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SentenceSimilarity">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.TorchSharp.NasBert.SentenceSimilarityTrainer SentenceSimilarity (this Microsoft.ML.RegressionCatalog.RegressionTrainers catalog, string labelColumnName = &quot;Label&quot;, string scoreColumnName = &quot;Score&quot;, string sentence1ColumnName = &quot;Sentence1&quot;, string sentence2ColumnName = &quot;Sentence2&quot;, int batchSize = 32, int maxEpochs = 10, Microsoft.ML.TorchSharp.NasBert.BertArchitecture architecture = Microsoft.ML.TorchSharp.NasBert.BertArchitecture.Roberta, Microsoft.ML.IDataView validationSet = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.TorchSharp.NasBert.SentenceSimilarityTrainer SentenceSimilarity(class Microsoft.ML.RegressionCatalog/RegressionTrainers catalog, string labelColumnName, string scoreColumnName, string sentence1ColumnName, string sentence2ColumnName, int32 batchSize, int32 maxEpochs, valuetype Microsoft.ML.TorchSharp.NasBert.BertArchitecture architecture, class Microsoft.ML.IDataView validationSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.TorchSharpCatalog.SentenceSimilarity(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.ML.TorchSharp.NasBert.BertArchitecture,Microsoft.ML.IDataView)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SentenceSimilarity (catalog As RegressionCatalog.RegressionTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional scoreColumnName As String = &quot;Score&quot;, Optional sentence1ColumnName As String = &quot;Sentence1&quot;, Optional sentence2ColumnName As String = &quot;Sentence2&quot;, Optional batchSize As Integer = 32, Optional maxEpochs As Integer = 10, Optional architecture As BertArchitecture = Microsoft.ML.TorchSharp.NasBert.BertArchitecture.Roberta, Optional validationSet As IDataView = Nothing) As SentenceSimilarityTrainer" />
      <MemberSignature Language="F#" Value="static member SentenceSimilarity : Microsoft.ML.RegressionCatalog.RegressionTrainers * string * string * string * string * int * int * Microsoft.ML.TorchSharp.NasBert.BertArchitecture * Microsoft.ML.IDataView -&gt; Microsoft.ML.TorchSharp.NasBert.SentenceSimilarityTrainer" Usage="Microsoft.ML.TorchSharp.TorchSharpCatalog.SentenceSimilarity (catalog, labelColumnName, scoreColumnName, sentence1ColumnName, sentence2ColumnName, batchSize, maxEpochs, architecture, validationSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TorchSharp.NasBert.SentenceSimilarityTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.RegressionCatalog+RegressionTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="scoreColumnName" Type="System.String" />
        <Parameter Name="sentence1ColumnName" Type="System.String" />
        <Parameter Name="sentence2ColumnName" Type="System.String" />
        <Parameter Name="batchSize" Type="System.Int32" />
        <Parameter Name="maxEpochs" Type="System.Int32" />
        <Parameter Name="architecture" Type="Microsoft.ML.TorchSharp.NasBert.BertArchitecture" />
        <Parameter Name="validationSet" Type="Microsoft.ML.IDataView" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="labelColumnName">Name of the label column. Column should be a float type.</param>
        <param name="scoreColumnName">Name of the score column.</param>
        <param name="sentence1ColumnName">Name of the column for the first sentence.</param>
        <param name="sentence2ColumnName">Name of the column for the second sentence. Only required if your NLP classification requires sentence pairs.</param>
        <param name="batchSize">Number of rows in the batch.</param>
        <param name="maxEpochs">Maximum number of times to loop through your training set.</param>
        <param name="architecture">Architecture for the model. Defaults to Roberta.</param>
        <param name="validationSet">The validation set used while training to improve model quality.</param>
        <summary>
            Fine tune a NAS-BERT model for NLP sentence Similarity. The limit for any sentence is 512 tokens. Each word typically
            will map to a single token, and we automatically add 2 specical tokens (a start token and a separator token)
            so in general this limit will be 510 words for all sentences.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextClassification">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer TextClassification (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer.TextClassificationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer TextClassification(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, class Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer/TextClassificationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.TorchSharpCatalog.TextClassification(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer.TextClassificationOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextClassification (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, options As TextClassificationTrainer.TextClassificationOptions) As TextClassificationTrainer" />
      <MemberSignature Language="F#" Value="static member TextClassification : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer.TextClassificationOptions -&gt; Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer" Usage="Microsoft.ML.TorchSharp.TorchSharpCatalog.TextClassification (catalog, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" Index="0" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
        <Parameter Name="options" Type="Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer+TextClassificationOptions" Index="1" FrameworkAlternate="ml-dotnet;ml-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="options">Advanced Options.</param>
        <summary>
            Fine tune a NAS-BERT model for NLP classification. The limit for any sentence is 512 tokens. Each word typically
            will map to a single token, and we automatically add 2 specical tokens (a start token and a separator token)
            so in general this limit will be 510 words for all sentences.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextClassification">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer TextClassification (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string scoreColumnName = &quot;Score&quot;, string outputColumnName = &quot;PredictedLabel&quot;, string sentence1ColumnName = &quot;Sentence1&quot;, string sentence2ColumnName = default, int batchSize = 32, int maxEpochs = 10, Microsoft.ML.TorchSharp.NasBert.BertArchitecture architecture = Microsoft.ML.TorchSharp.NasBert.BertArchitecture.Roberta, Microsoft.ML.IDataView validationSet = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer TextClassification(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, string labelColumnName, string scoreColumnName, string outputColumnName, string sentence1ColumnName, string sentence2ColumnName, int32 batchSize, int32 maxEpochs, valuetype Microsoft.ML.TorchSharp.NasBert.BertArchitecture architecture, class Microsoft.ML.IDataView validationSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.TorchSharpCatalog.TextClassification(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.ML.TorchSharp.NasBert.BertArchitecture,Microsoft.ML.IDataView)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextClassification (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional scoreColumnName As String = &quot;Score&quot;, Optional outputColumnName As String = &quot;PredictedLabel&quot;, Optional sentence1ColumnName As String = &quot;Sentence1&quot;, Optional sentence2ColumnName As String = Nothing, Optional batchSize As Integer = 32, Optional maxEpochs As Integer = 10, Optional architecture As BertArchitecture = Microsoft.ML.TorchSharp.NasBert.BertArchitecture.Roberta, Optional validationSet As IDataView = Nothing) As TextClassificationTrainer" />
      <MemberSignature Language="F#" Value="static member TextClassification : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * string * string * string * string * string * int * int * Microsoft.ML.TorchSharp.NasBert.BertArchitecture * Microsoft.ML.IDataView -&gt; Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer" Usage="Microsoft.ML.TorchSharp.TorchSharpCatalog.TextClassification (catalog, labelColumnName, scoreColumnName, outputColumnName, sentence1ColumnName, sentence2ColumnName, batchSize, maxEpochs, architecture, validationSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="scoreColumnName" Type="System.String" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="sentence1ColumnName" Type="System.String" />
        <Parameter Name="sentence2ColumnName" Type="System.String" />
        <Parameter Name="batchSize" Type="System.Int32" />
        <Parameter Name="maxEpochs" Type="System.Int32" />
        <Parameter Name="architecture" Type="Microsoft.ML.TorchSharp.NasBert.BertArchitecture" />
        <Parameter Name="validationSet" Type="Microsoft.ML.IDataView" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="labelColumnName">Name of the label column. Column should be a key type.</param>
        <param name="scoreColumnName">Name of the score column.</param>
        <param name="outputColumnName">Name of the output column. It will be a key type. It is the predicted label.</param>
        <param name="sentence1ColumnName">Name of the column for the first sentence.</param>
        <param name="sentence2ColumnName">Name of the column for the second sentence. Only required if your NLP classification requires sentence pairs.</param>
        <param name="batchSize">Number of rows in the batch.</param>
        <param name="maxEpochs">Maximum number of times to loop through your training set.</param>
        <param name="architecture">Architecture for the model. Defaults to Roberta.</param>
        <param name="validationSet">The validation set used while training to improve model quality.</param>
        <summary>
            Fine tune a NAS-BERT model for NLP classification. The limit for any sentence is 512 tokens. Each word typically
            will map to a single token, and we automatically add 2 specical tokens (a start token and a separator token)
            so in general this limit will be 510 words for all sentences.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
