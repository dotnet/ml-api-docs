<Type Name="NormalizingEstimator" FullName="Microsoft.ML.Transforms.Normalizers.NormalizingEstimator">
  <TypeSignature Language="C#" Value="public sealed class NormalizingEstimator : Microsoft.ML.Core.Data.IEstimator&lt;Microsoft.ML.Transforms.Normalizers.NormalizingTransformer&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NormalizingEstimator extends System.Object implements class Microsoft.ML.Core.Data.IEstimator`1&lt;class Microsoft.ML.Transforms.Normalizers.NormalizingTransformer&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.Normalizers.NormalizingEstimator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NormalizingEstimator&#xA;Implements IEstimator(Of NormalizingTransformer)" />
  <TypeSignature Language="F#" Value="type NormalizingEstimator = class&#xA;    interface IEstimator&lt;NormalizingTransformer&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Core.Data.IEstimator&lt;Microsoft.ML.Transforms.Normalizers.NormalizingTransformer&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NormalizingEstimator (Microsoft.ML.IHostEnvironment env, params Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.ColumnBase[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Transforms.Normalizers.NormalizingEstimator/ColumnBase[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.#ctor(Microsoft.ML.IHostEnvironment,Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.ColumnBase[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, ParamArray columns As NormalizingEstimator.ColumnBase())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.Normalizers.NormalizingEstimator : Microsoft.ML.IHostEnvironment * Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.ColumnBase[] -&gt; Microsoft.ML.Transforms.Normalizers.NormalizingEstimator" Usage="new Microsoft.ML.Transforms.Normalizers.NormalizingEstimator (env, columns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="columns" Type="Microsoft.ML.Transforms.Normalizers.NormalizingEstimator+ColumnBase[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="env">The private instance of the <see cref="T:Microsoft.ML.IHostEnvironment" />.</param>
        <param name="columns">An array of <see cref="T:Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.ColumnBase" /> defining the inputs to the Normalizer, and their settings.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Transforms.Normalizers.NormalizingEstimator" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NormalizingEstimator (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.NormalizerMode mode, params ValueTuple&lt;string,string&gt;[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, valuetype Microsoft.ML.Transforms.Normalizers.NormalizingEstimator/NormalizerMode mode, valuetype System.ValueTuple`2&lt;string, string&gt;[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.#ctor(Microsoft.ML.IHostEnvironment,Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.NormalizerMode,System.ValueTuple{System.String,System.String}[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, mode As NormalizingEstimator.NormalizerMode, ParamArray columns As ValueTuple(Of String, String)())" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.Normalizers.NormalizingEstimator : Microsoft.ML.IHostEnvironment * Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.NormalizerMode * ValueTuple&lt;string, string&gt;[] -&gt; Microsoft.ML.Transforms.Normalizers.NormalizingEstimator" Usage="new Microsoft.ML.Transforms.Normalizers.NormalizingEstimator (env, mode, columns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="mode" Type="Microsoft.ML.Transforms.Normalizers.NormalizingEstimator+NormalizerMode" />
        <Parameter Name="columns" Type="System.ValueTuple&lt;System.String,System.String&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "inputColumn", "outputColumn" })</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="env">The private instance of <see cref="T:Microsoft.ML.IHostEnvironment" />.</param>
        <param name="mode">The <see cref="T:Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.NormalizerMode" /> indicating how to the old values are mapped to the new values.</param>
        <param name="columns">An array of (outputColumnName, inputColumnName) tuples.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Transforms.Normalizers.NormalizingEstimator" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NormalizingEstimator (Microsoft.ML.IHostEnvironment env, string outputColumnName, string inputColumnName = null, Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.NormalizerMode mode = Microsoft.ML.Transforms.Normalizers.NormalizingEstimator+NormalizerMode.MinMax);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, string outputColumnName, string inputColumnName, valuetype Microsoft.ML.Transforms.Normalizers.NormalizingEstimator/NormalizerMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.#ctor(Microsoft.ML.IHostEnvironment,System.String,System.String,Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.NormalizerMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, outputColumnName As String, Optional inputColumnName As String = null, Optional mode As NormalizingEstimator.NormalizerMode = Microsoft.ML.Transforms.Normalizers.NormalizingEstimator+NormalizerMode.MinMax)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.Normalizers.NormalizingEstimator : Microsoft.ML.IHostEnvironment * string * string * Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.NormalizerMode -&gt; Microsoft.ML.Transforms.Normalizers.NormalizingEstimator" Usage="new Microsoft.ML.Transforms.Normalizers.NormalizingEstimator (env, outputColumnName, inputColumnName, mode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" Index="0" />
        <Parameter Name="outputColumnName" Type="System.String" Index="1" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="inputColumnName" Type="System.String" Index="2" FrameworkAlternate="ml-dotnet" />
        <Parameter Name="mode" Type="Microsoft.ML.Transforms.Normalizers.NormalizingEstimator+NormalizerMode" Index="3" />
      </Parameters>
      <Docs>
        <param name="env">Host Environment.</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="inputColumnName">Name of the column to transform.
            If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="mode">The <see cref="T:Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.NormalizerMode" /> indicating how to the old values are mapped to the new values.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Transforms.Normalizers.NormalizingEstimator" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fit">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Transforms.Normalizers.NormalizingTransformer Fit (Microsoft.Data.DataView.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Transforms.Normalizers.NormalizingTransformer Fit(class Microsoft.Data.DataView.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.Fit(Microsoft.Data.DataView.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fit (input As IDataView) As NormalizingTransformer" />
      <MemberSignature Language="F#" Value="abstract member Fit : Microsoft.Data.DataView.IDataView -&gt; Microsoft.ML.Transforms.Normalizers.NormalizingTransformer&#xA;override this.Fit : Microsoft.Data.DataView.IDataView -&gt; Microsoft.ML.Transforms.Normalizers.NormalizingTransformer" Usage="normalizingEstimator.Fit input" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IEstimator`1.Fit(Microsoft.Data.DataView.IDataView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.Normalizers.NormalizingTransformer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.Data.DataView.IDataView" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Core.Data.SchemaShape GetOutputSchema (Microsoft.ML.Core.Data.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Core.Data.SchemaShape GetOutputSchema(class Microsoft.ML.Core.Data.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutputSchema (inputSchema As SchemaShape) As SchemaShape" />
      <MemberSignature Language="F#" Value="abstract member GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape&#xA;override this.GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape" Usage="normalizingEstimator.GetOutputSchema inputSchema" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Core.Data.IEstimator`1.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Core.Data.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>