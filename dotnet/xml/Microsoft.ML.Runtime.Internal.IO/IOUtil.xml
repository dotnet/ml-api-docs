<Type Name="IOUtil" FullName="Microsoft.ML.Runtime.Internal.IO.IOUtil">
  <TypeSignature Language="C#" Value="public static class IOUtil" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IOUtil extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Internal.IO.IOUtil" />
  <TypeSignature Language="VB.NET" Value="Public Class IOUtil" />
  <TypeSignature Language="F#" Value="type IOUtil = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class IOUtil abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class IOUtil abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class IOUtil abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Utility functionality for handling paths and other I/O issues.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ExpandWildcards">
      <MemberSignature Language="C#" Value="public static string[] ExpandWildcards (string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] ExpandWildcards(string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.IOUtil.ExpandWildcards(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExpandWildcards (pattern As String) As String()" />
      <MemberSignature Language="F#" Value="static member ExpandWildcards : string -&gt; string[]" Usage="Microsoft.ML.Runtime.Internal.IO.IOUtil.ExpandWildcards pattern" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ ExpandWildcards(System::String ^ pattern);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::Array &lt;Platform::String ^&gt; ^ ExpandWildcards(Platform::String ^ pattern);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::Array &lt;std::wstring const &amp;&gt; ExpandWildcards(std::wstring const &amp; pattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pattern">the pattern to expand</param>
        <summary>
            Expand an extended wildcard pattern into a set of file paths.
            </summary>
        <returns>the set of file paths matching the pattern</returns>
        <remarks>
            The wildcard pattern accepts the standard "*" and "?" placeholders.
            "..." also refers to a recursive search over subdirectories.
            "+" can also be used to make a union of several filenames or patterns.
            In addition to filenames, HTTP URLs, <c>nul</c>, <c>null</c>, <c>$</c>,
            <c>-</c>, and Cosmos stream names are all recognized as elements.
            Names of files that do not exist will be excluded.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public static bool FileExists (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool FileExists(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.IOUtil.FileExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FileExists (fileName As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member FileExists : string -&gt; bool" Usage="Microsoft.ML.Runtime.Internal.IO.IOUtil.FileExists fileName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool FileExists(System::String ^ fileName);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool FileExists(Platform::String ^ fileName);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool FileExists(std::wstring const &amp; fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">the original filename</param>
        <summary>
            Determine if a file exists.
            </summary>
        <returns>true if a file with a name of fileName exists, false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadLines">
      <MemberSignature Language="C#" Value="public static string[] ReadLines (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] ReadLines(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.IOUtil.ReadLines(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadLines (fileName As String) As String()" />
      <MemberSignature Language="F#" Value="static member ReadLines : string -&gt; string[]" Usage="Microsoft.ML.Runtime.Internal.IO.IOUtil.ReadLines fileName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ ReadLines(System::String ^ fileName);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::Array &lt;Platform::String ^&gt; ^ ReadLines(Platform::String ^ fileName);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::Array &lt;std::wstring const &amp;&gt; ReadLines(std::wstring const &amp; fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">the file to read (or URL, or Cosmos stream...)</param>
        <summary>
            Read the lines of the file or stream specified by fileName.
            </summary>
        <returns>the lines of fileName, or null if it cannot be read</returns>
        <remarks>
            The reading is performed through <see cref="M:Microsoft.ML.Runtime.Internal.IO.ZStreamReader.Open(System.String)" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">fileName is null.</exception>
        <exception cref="T:System.ArgumentException">fileName is invalid.</exception>
        <exception cref="T:System.IO.FileNotFoundException">fileName cannot be found.</exception>
        <exception cref="T:System.InvalidOperationException">The utilities needed to open a stream are not available.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResizeFile">
      <MemberSignature Language="C#" Value="public static void ResizeFile (string fileName, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResizeFile(string fileName, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Internal.IO.IOUtil.ResizeFile(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ResizeFile (fileName As String, length As Long)" />
      <MemberSignature Language="F#" Value="static member ResizeFile : string * int64 -&gt; unit" Usage="Microsoft.ML.Runtime.Internal.IO.IOUtil.ResizeFile (fileName, length)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ResizeFile(System::String ^ fileName, long length);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static void ResizeFile(Platform::String ^ fileName, long long length);" />
      <MemberSignature Language="C++ WINRT" Value=" static void ResizeFile(std::wstring const &amp; fileName, long length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.InternalStreams</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileName">the file to alter</param>
        <param name="length">the desired length, in bytes</param>
        <summary>
            Set the length of a file, truncating or padding as needed.
            </summary>
        <remarks>
            Note that this only operates on normal files, and cannot be successfully used on compressed
            files or special streams.
            </remarks>
        <exception cref="T:System.ArgumentNullException">fileName is null.</exception>
        <exception cref="T:System.ArgumentException">fileName is invalid.</exception>
        <exception cref="T:System.IO.FileNotFoundException">fileName cannot be found.</exception>
        <exception cref="T:System.IO.IOException"> An I/O error has occurred.</exception>
        <exception cref="T:System.NotSupportedException">The stream does not support both writing and seeking.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Attempted to set the value parameter to less than 0.</exception>
      </Docs>
    </Member>
  </Members>
</Type>