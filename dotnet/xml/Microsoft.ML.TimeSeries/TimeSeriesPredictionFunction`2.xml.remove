<Type Name="TimeSeriesPredictionFunction&lt;TSrc,TDst&gt;" FullName="Microsoft.ML.TimeSeries.TimeSeriesPredictionFunction&lt;TSrc,TDst&gt;">
  <TypeSignature Language="C#" Value="public sealed class TimeSeriesPredictionFunction&lt;TSrc,TDst&gt; : Microsoft.ML.PredictionEngineBase&lt;TSrc,TDst&gt; where TSrc : class where TDst : class, new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TimeSeriesPredictionFunction`2&lt;class TSrc, class .ctor TDst&gt; extends Microsoft.ML.PredictionEngineBase`2&lt;!TSrc, !TDst&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.TimeSeries.TimeSeriesPredictionFunction`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TimeSeriesPredictionFunction(Of TSrc, TDst)&#xA;Inherits PredictionEngineBase(Of TSrc, TDst)" />
  <TypeSignature Language="F#" Value="type TimeSeriesPredictionFunction&lt;'Src, 'Dst (requires 'Src : null and 'Dst : null and 'Dst : (new : unit -&gt; 'Dst))&gt; = class&#xA;    inherit PredictionEngineBase&lt;'Src, 'Dst (requires 'Src : null and 'Dst : null and 'Dst : (new : unit -&gt; 'Dst))&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSrc">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TDst">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.Runtime.Api.PredictionEngineBase&lt;TSrc,TDst&gt;</BaseTypeName>
    <BaseTypeName FrameworkAlternate="ml-dotnet">Microsoft.ML.PredictionEngineBase&lt;TSrc,TDst&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">TSrc</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!1">TDst</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TSrc">The user-defined type that holds the example.</typeparam>
    <typeparam name="TDst">The user-defined type that holds the prediction.</typeparam>
    <summary>
            A class that runs the previously trained model (and the preceding transform pipeline) on the
            in-memory data, one example at a time.
            This can also be used with trained pipelines that do not end with a predictor: in this case, the
            'prediction' will be just the outcome of all the transformations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeSeriesPredictionFunction (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Core.Data.ITransformer transformer, bool ignoreMissingColumns, Microsoft.ML.Data.SchemaDefinition inputSchemaDefinition = null, Microsoft.ML.Data.SchemaDefinition outputSchemaDefinition = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Core.Data.ITransformer transformer, bool ignoreMissingColumns, class Microsoft.ML.Data.SchemaDefinition inputSchemaDefinition, class Microsoft.ML.Data.SchemaDefinition outputSchemaDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TimeSeries.TimeSeriesPredictionFunction`2.#ctor(Microsoft.ML.IHostEnvironment,Microsoft.ML.Core.Data.ITransformer,System.Boolean,Microsoft.ML.Data.SchemaDefinition,Microsoft.ML.Data.SchemaDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, transformer As ITransformer, ignoreMissingColumns As Boolean, Optional inputSchemaDefinition As SchemaDefinition = null, Optional outputSchemaDefinition As SchemaDefinition = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.TimeSeries.TimeSeriesPredictionFunction&lt;'Src, 'Dst (requires 'Src : null and 'Dst : null and 'Dst : (new : unit -&gt; 'Dst))&gt; : Microsoft.ML.IHostEnvironment * Microsoft.ML.Core.Data.ITransformer * bool * Microsoft.ML.Data.SchemaDefinition * Microsoft.ML.Data.SchemaDefinition -&gt; Microsoft.ML.TimeSeries.TimeSeriesPredictionFunction&lt;'Src, 'Dst (requires 'Src : null and 'Dst : null and 'Dst : (new : unit -&gt; 'Dst))&gt;" Usage="new Microsoft.ML.TimeSeries.TimeSeriesPredictionFunction&lt;'Src, 'Dst (requires 'Src : null and 'Dst : null and 'Dst : (new : unit -&gt; 'Dst))&gt; (env, transformer, ignoreMissingColumns, inputSchemaDefinition, outputSchemaDefinition)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="transformer" Type="Microsoft.ML.Core.Data.ITransformer" />
        <Parameter Name="ignoreMissingColumns" Type="System.Boolean" />
        <Parameter Name="inputSchemaDefinition" Type="Microsoft.ML.Data.SchemaDefinition" />
        <Parameter Name="outputSchemaDefinition" Type="Microsoft.ML.Data.SchemaDefinition" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="transformer">To be added.</param>
        <param name="ignoreMissingColumns">To be added.</param>
        <param name="inputSchemaDefinition">To be added.</param>
        <param name="outputSchemaDefinition">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckPoint">
      <MemberSignature Language="C#" Value="public void CheckPoint (Microsoft.ML.IHostEnvironment env, string modelPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckPoint(class Microsoft.ML.IHostEnvironment env, string modelPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TimeSeries.TimeSeriesPredictionFunction`2.CheckPoint(Microsoft.ML.IHostEnvironment,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckPoint (env As IHostEnvironment, modelPath As String)" />
      <MemberSignature Language="F#" Value="member this.CheckPoint : Microsoft.ML.IHostEnvironment * string -&gt; unit" Usage="timeSeriesPredictionFunction.CheckPoint (env, modelPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="modelPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="env">Usually <see cref="T:Microsoft.ML.MLContext" />.</param>
        <param name="modelPath">Path to file on disk where the updated model needs to be saved.</param>
        <summary>
            Checkpoints <see cref="T:Microsoft.ML.TimeSeries.TimeSeriesPredictionFunction`2" /> to disk with the updated
            state.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Predict">
      <MemberSignature Language="C#" Value="public override void Predict (TSrc example, ref TDst prediction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Predict(!TSrc example, !TDst&amp; prediction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TimeSeries.TimeSeriesPredictionFunction`2.Predict(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Predict (example As TSrc, ByRef prediction As TDst)" />
      <MemberSignature Language="F#" Value="override this.Predict : 'Src *  -&gt; unit" Usage="timeSeriesPredictionFunction.Predict (example, prediction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="example" Type="TSrc" />
        <Parameter Name="prediction" Type="TDst" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="example">The example to run on.</param>
        <param name="prediction">The object to store the prediction in. If it's <c>null</c>, a new one will be created, otherwise the old one
            is reused.</param>
        <summary>
            Run prediction pipeline on one example.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformerChecker">
      <MemberSignature Language="C#" Value="protected override Func&lt;Microsoft.Data.DataView.Schema,Microsoft.ML.Data.IRowToRowMapper&gt; TransformerChecker (Microsoft.ML.IExceptionContext ectx, Microsoft.ML.Core.Data.ITransformer transformer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Func`2&lt;class Microsoft.Data.DataView.Schema, class Microsoft.ML.Data.IRowToRowMapper&gt; TransformerChecker(class Microsoft.ML.IExceptionContext ectx, class Microsoft.ML.Core.Data.ITransformer transformer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TimeSeries.TimeSeriesPredictionFunction`2.TransformerChecker(Microsoft.ML.IExceptionContext,Microsoft.ML.Core.Data.ITransformer)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TransformerChecker (ectx As IExceptionContext, transformer As ITransformer) As Func(Of Schema, IRowToRowMapper)" />
      <MemberSignature Language="F#" Value="override this.TransformerChecker : Microsoft.ML.IExceptionContext * Microsoft.ML.Core.Data.ITransformer -&gt; Func&lt;Microsoft.Data.DataView.Schema, Microsoft.ML.Data.IRowToRowMapper&gt;" Usage="timeSeriesPredictionFunction.TransformerChecker (ectx, transformer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TimeSeries</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.Data.DataView.Schema,Microsoft.ML.Data.IRowToRowMapper&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ectx" Type="Microsoft.ML.IExceptionContext" />
        <Parameter Name="transformer" Type="Microsoft.ML.Core.Data.ITransformer" />
      </Parameters>
      <Docs>
        <param name="ectx">To be added.</param>
        <param name="transformer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
