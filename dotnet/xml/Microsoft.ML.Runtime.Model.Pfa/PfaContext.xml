<Type Name="PfaContext" FullName="Microsoft.ML.Runtime.Model.Pfa.PfaContext">
  <TypeSignature Language="C#" Value="public sealed class PfaContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PfaContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Model.Pfa.PfaContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PfaContext" />
  <TypeSignature Language="F#" Value="type PfaContext = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A context for defining a restricted sort of PFA output.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PfaContext (Microsoft.ML.Runtime.IHostEnvironment env);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.Runtime.IHostEnvironment env) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaContext.#ctor(Microsoft.ML.Runtime.IHostEnvironment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Runtime.Model.Pfa.PfaContext : Microsoft.ML.Runtime.IHostEnvironment -&gt; Microsoft.ML.Runtime.Model.Pfa.PfaContext" Usage="new Microsoft.ML.Runtime.Model.Pfa.PfaContext env" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCell">
      <MemberSignature Language="C#" Value="public void AddCell (string name, Newtonsoft.Json.Linq.JToken type, Newtonsoft.Json.Linq.JToken init);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCell(string name, class Newtonsoft.Json.Linq.JToken type, class Newtonsoft.Json.Linq.JToken init) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaContext.AddCell(System.String,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCell (name As String, type As JToken, init As JToken)" />
      <MemberSignature Language="F#" Value="member this.AddCell : string * Newtonsoft.Json.Linq.JToken * Newtonsoft.Json.Linq.JToken -&gt; unit" Usage="pfaContext.AddCell (name, type, init)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="Newtonsoft.Json.Linq.JToken" />
        <Parameter Name="init" Type="Newtonsoft.Json.Linq.JToken" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="type">To be added.</param>
        <param name="init">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFunc">
      <MemberSignature Language="C#" Value="public void AddFunc (string name, Newtonsoft.Json.Linq.JArray prms, Newtonsoft.Json.Linq.JToken returnType, Newtonsoft.Json.Linq.JToken doBlock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFunc(string name, class Newtonsoft.Json.Linq.JArray prms, class Newtonsoft.Json.Linq.JToken returnType, class Newtonsoft.Json.Linq.JToken doBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaContext.AddFunc(System.String,Newtonsoft.Json.Linq.JArray,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFunc (name As String, prms As JArray, returnType As JToken, doBlock As JToken)" />
      <MemberSignature Language="F#" Value="member this.AddFunc : string * Newtonsoft.Json.Linq.JArray * Newtonsoft.Json.Linq.JToken * Newtonsoft.Json.Linq.JToken -&gt; unit" Usage="pfaContext.AddFunc (name, prms, returnType, doBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="prms" Type="Newtonsoft.Json.Linq.JArray" />
        <Parameter Name="returnType" Type="Newtonsoft.Json.Linq.JToken" />
        <Parameter Name="doBlock" Type="Newtonsoft.Json.Linq.JToken" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="prms">To be added.</param>
        <param name="returnType">To be added.</param>
        <param name="doBlock">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddVariables">
      <MemberSignature Language="C#" Value="public void AddVariables (params System.Collections.Generic.KeyValuePair&lt;string,Newtonsoft.Json.Linq.JToken&gt;[] locals);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddVariables(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class Newtonsoft.Json.Linq.JToken&gt;[] locals) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaContext.AddVariables(System.Collections.Generic.KeyValuePair{System.String,Newtonsoft.Json.Linq.JToken}[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddVariables (ParamArray locals As KeyValuePair(Of String, JToken)())" />
      <MemberSignature Language="F#" Value="member this.AddVariables : System.Collections.Generic.KeyValuePair&lt;string, Newtonsoft.Json.Linq.JToken&gt;[] -&gt; unit" Usage="pfaContext.AddVariables locals" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locals" Type="System.Collections.Generic.KeyValuePair&lt;System.String,Newtonsoft.Json.Linq.JToken&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="locals">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsCell">
      <MemberSignature Language="C#" Value="public bool ContainsCell (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsCell(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaContext.ContainsCell(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsCell (name As String) As Boolean" />
      <MemberSignature Language="F#" Value="member this.ContainsCell : string -&gt; bool" Usage="pfaContext.ContainsCell name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsFunc">
      <MemberSignature Language="C#" Value="public bool ContainsFunc (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsFunc(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaContext.ContainsFunc(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsFunc (name As String) As Boolean" />
      <MemberSignature Language="F#" Value="member this.ContainsFunc : string -&gt; bool" Usage="pfaContext.ContainsFunc name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsType">
      <MemberSignature Language="C#" Value="public bool ContainsType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaContext.ContainsType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsType (name As String) As Boolean" />
      <MemberSignature Language="F#" Value="member this.ContainsType : string -&gt; bool" Usage="pfaContext.ContainsType name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsVar">
      <MemberSignature Language="C#" Value="public bool ContainsVar (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsVar(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaContext.ContainsVar(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsVar (name As String) As Boolean" />
      <MemberSignature Language="F#" Value="member this.ContainsVar : string -&gt; bool" Usage="pfaContext.ContainsVar name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFuncBlock">
      <MemberSignature Language="C#" Value="public static Newtonsoft.Json.Linq.JObject CreateFuncBlock (Newtonsoft.Json.Linq.JArray prms, Newtonsoft.Json.Linq.JToken returnType, Newtonsoft.Json.Linq.JToken doBlock);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Newtonsoft.Json.Linq.JObject CreateFuncBlock(class Newtonsoft.Json.Linq.JArray prms, class Newtonsoft.Json.Linq.JToken returnType, class Newtonsoft.Json.Linq.JToken doBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaContext.CreateFuncBlock(Newtonsoft.Json.Linq.JArray,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFuncBlock (prms As JArray, returnType As JToken, doBlock As JToken) As JObject" />
      <MemberSignature Language="F#" Value="static member CreateFuncBlock : Newtonsoft.Json.Linq.JArray * Newtonsoft.Json.Linq.JToken * Newtonsoft.Json.Linq.JToken -&gt; Newtonsoft.Json.Linq.JObject" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaContext.CreateFuncBlock (prms, returnType, doBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prms" Type="Newtonsoft.Json.Linq.JArray" />
        <Parameter Name="returnType" Type="Newtonsoft.Json.Linq.JToken" />
        <Parameter Name="doBlock" Type="Newtonsoft.Json.Linq.JToken" />
      </Parameters>
      <Docs>
        <param name="prms">To be added.</param>
        <param name="returnType">To be added.</param>
        <param name="doBlock">To be added.</param>
        <summary>
            For creating an anonymous function block. This in itself will not modify the context.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePair">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyValuePair&lt;string,Newtonsoft.Json.Linq.JToken&gt; CreatePair (string varName, string token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class Newtonsoft.Json.Linq.JToken&gt; CreatePair(string varName, string token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaContext.CreatePair(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePair (varName As String, token As String) As KeyValuePair(Of String, JToken)" />
      <MemberSignature Language="F#" Value="member this.CreatePair : string * string -&gt; System.Collections.Generic.KeyValuePair&lt;string, Newtonsoft.Json.Linq.JToken&gt;" Usage="pfaContext.CreatePair (varName, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,Newtonsoft.Json.Linq.JToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="varName" Type="System.String" />
        <Parameter Name="token" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="varName">To be added.</param>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Final">
      <MemberSignature Language="C#" Value="public Newtonsoft.Json.Linq.JToken Final { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Newtonsoft.Json.Linq.JToken Final" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Model.Pfa.PfaContext.Final" />
      <MemberSignature Language="VB.NET" Value="Public Property Final As JToken" />
      <MemberSignature Language="F#" Value="member this.Final : Newtonsoft.Json.Linq.JToken with get, set" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaContext.Final" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~PfaContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Newtonsoft.Json.Linq.JObject Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; Newtonsoft.Json.Linq.JObject" Usage="pfaContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputType">
      <MemberSignature Language="C#" Value="public Newtonsoft.Json.Linq.JToken InputType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Newtonsoft.Json.Linq.JToken InputType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Model.Pfa.PfaContext.InputType" />
      <MemberSignature Language="VB.NET" Value="Public Property InputType As JToken" />
      <MemberSignature Language="F#" Value="member this.InputType : Newtonsoft.Json.Linq.JToken with get, set" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaContext.InputType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputType">
      <MemberSignature Language="C#" Value="public Newtonsoft.Json.Linq.JToken OutputType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Newtonsoft.Json.Linq.JToken OutputType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Runtime.Model.Pfa.PfaContext.OutputType" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputType As JToken" />
      <MemberSignature Language="F#" Value="member this.OutputType : Newtonsoft.Json.Linq.JToken with get, set" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaContext.OutputType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterType">
      <MemberSignature Language="C#" Value="public bool RegisterType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RegisterType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaContext.RegisterType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterType (name As String) As Boolean" />
      <MemberSignature Language="F#" Value="member this.RegisterType : string -&gt; bool" Usage="pfaContext.RegisterType name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The type to register</param>
        <summary>
             PFA is weird in that you do not declare types separately, you declare them as part of a variable
             declaration. So, if you use a record type three times, that means one of the three usages must be
             accompanied by a full type declaration, whereas the other two can just then identify it by name.
             This is extremely silly, but there you go.
            
             Anyway: this will attempt to add a type to the list of registered types. If it returns <c>true</c>
             then the caller is responsible, then, for ensuring that their PFA code they are generating contains
             not only a reference of the type, but a declaration of the type. If however this returns <c>false</c>
             then it can just refer to the type by name, since it has already been declared.
             </summary>
        <returns>If this name was not already registered</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.ML.Runtime.Model.Pfa.PfaContext.ContainsType(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>