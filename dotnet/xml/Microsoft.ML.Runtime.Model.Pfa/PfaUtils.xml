<Type Name="PfaUtils" FullName="Microsoft.ML.Runtime.Model.Pfa.PfaUtils">
  <TypeSignature Language="C#" Value="public static class PfaUtils" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PfaUtils extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Model.Pfa.PfaUtils" />
  <TypeSignature Language="VB.NET" Value="Public Module PfaUtils" />
  <TypeSignature Language="F#" Value="type PfaUtils = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class PfaUtils abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class PfaUtils abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class PfaUtils abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddReturn">
      <MemberSignature Language="C#" Value="public static Newtonsoft.Json.Linq.JObject AddReturn (this Newtonsoft.Json.Linq.JObject toEdit, string name, Newtonsoft.Json.Linq.JToken value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Newtonsoft.Json.Linq.JObject AddReturn(class Newtonsoft.Json.Linq.JObject toEdit, string name, class Newtonsoft.Json.Linq.JToken value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.AddReturn(Newtonsoft.Json.Linq.JObject,System.String,Newtonsoft.Json.Linq.JToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddReturn (toEdit As JObject, name As String, value As JToken) As JObject" />
      <MemberSignature Language="F#" Value="static member AddReturn : Newtonsoft.Json.Linq.JObject * string * Newtonsoft.Json.Linq.JToken -&gt; Newtonsoft.Json.Linq.JObject" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.AddReturn (toEdit, name, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Newtonsoft::Json::Linq::JObject ^ AddReturn(Newtonsoft::Json::Linq::JObject ^ toEdit, System::String ^ name, Newtonsoft::Json::Linq::JToken ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toEdit" Type="Newtonsoft.Json.Linq.JObject" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Newtonsoft.Json.Linq.JToken" />
      </Parameters>
      <Docs>
        <param name="toEdit">To be added.</param>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static Newtonsoft.Json.Linq.JObject Call (string func, params Newtonsoft.Json.Linq.JToken[] prms);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Newtonsoft.Json.Linq.JObject Call(string func, class Newtonsoft.Json.Linq.JToken[] prms) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.Call(System.String,Newtonsoft.Json.Linq.JToken[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Call (func As String, ParamArray prms As JToken()) As JObject" />
      <MemberSignature Language="F#" Value="static member Call : string * Newtonsoft.Json.Linq.JToken[] -&gt; Newtonsoft.Json.Linq.JObject" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.Call (func, prms)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Newtonsoft::Json::Linq::JObject ^ Call(System::String ^ func, ... cli::array &lt;Newtonsoft::Json::Linq::JToken ^&gt; ^ prms);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="func" Type="System.String" />
        <Parameter Name="prms" Type="Newtonsoft.Json.Linq.JToken[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="func">The function to call</param>
        <param name="prms">The parameters for the function</param>
        <summary>
            Generic facilities for calling a function.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cell">
      <MemberSignature Language="C#" Value="public static Newtonsoft.Json.Linq.JObject Cell (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Newtonsoft.Json.Linq.JObject Cell(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.Cell(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Cell (name As String) As JObject" />
      <MemberSignature Language="F#" Value="static member Cell : string -&gt; Newtonsoft.Json.Linq.JObject" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.Cell name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Newtonsoft::Json::Linq::JObject ^ Cell(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureAdd">
      <MemberSignature Language="C#" Value="public static string EnsureAdd (this Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx, Newtonsoft.Json.Linq.JToken itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EnsureAdd(class Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx, class Newtonsoft.Json.Linq.JToken itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureAdd(Microsoft.ML.Runtime.Model.Pfa.PfaContext,Newtonsoft.Json.Linq.JToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnsureAdd (ctx As PfaContext, itemType As JToken) As String" />
      <MemberSignature Language="F#" Value="static member EnsureAdd : Microsoft.ML.Runtime.Model.Pfa.PfaContext * Newtonsoft.Json.Linq.JToken -&gt; string" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureAdd (ctx, itemType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ EnsureAdd(Microsoft::ML::Runtime::Model::Pfa::PfaContext ^ ctx, Newtonsoft::Json::Linq::JToken ^ itemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.Pfa.PfaContext" RefType="this" />
        <Parameter Name="itemType" Type="Newtonsoft.Json.Linq.JToken" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="itemType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureCount">
      <MemberSignature Language="C#" Value="public static string EnsureCount (this Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx, Newtonsoft.Json.Linq.JToken itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EnsureCount(class Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx, class Newtonsoft.Json.Linq.JToken itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureCount(Microsoft.ML.Runtime.Model.Pfa.PfaContext,Newtonsoft.Json.Linq.JToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnsureCount (ctx As PfaContext, itemType As JToken) As String" />
      <MemberSignature Language="F#" Value="static member EnsureCount : Microsoft.ML.Runtime.Model.Pfa.PfaContext * Newtonsoft.Json.Linq.JToken -&gt; string" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureCount (ctx, itemType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ EnsureCount(Microsoft::ML::Runtime::Model::Pfa::PfaContext ^ ctx, Newtonsoft::Json::Linq::JToken ^ itemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.Pfa.PfaContext" RefType="this" />
        <Parameter Name="itemType" Type="Newtonsoft.Json.Linq.JToken" />
      </Parameters>
      <Docs>
        <param name="ctx">The context to check for the existence of this</param>
        <param name="itemType">The item type this will operate on</param>
        <summary>
            This ensures that there is a function formatted as "count_type" (e.g., "count_double"),
            that takes either a map or array and returns the number of items in that map or array.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureDiv">
      <MemberSignature Language="C#" Value="public static string EnsureDiv (this Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx, Newtonsoft.Json.Linq.JToken itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EnsureDiv(class Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx, class Newtonsoft.Json.Linq.JToken itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureDiv(Microsoft.ML.Runtime.Model.Pfa.PfaContext,Newtonsoft.Json.Linq.JToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnsureDiv (ctx As PfaContext, itemType As JToken) As String" />
      <MemberSignature Language="F#" Value="static member EnsureDiv : Microsoft.ML.Runtime.Model.Pfa.PfaContext * Newtonsoft.Json.Linq.JToken -&gt; string" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureDiv (ctx, itemType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ EnsureDiv(Microsoft::ML::Runtime::Model::Pfa::PfaContext ^ ctx, Newtonsoft::Json::Linq::JToken ^ itemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.Pfa.PfaContext" RefType="this" />
        <Parameter Name="itemType" Type="Newtonsoft.Json.Linq.JToken" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="itemType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureHasChars">
      <MemberSignature Language="C#" Value="public static string EnsureHasChars (this Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EnsureHasChars(class Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureHasChars(Microsoft.ML.Runtime.Model.Pfa.PfaContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnsureHasChars (ctx As PfaContext) As String" />
      <MemberSignature Language="F#" Value="static member EnsureHasChars : Microsoft.ML.Runtime.Model.Pfa.PfaContext -&gt; string" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureHasChars ctx" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ EnsureHasChars(Microsoft::ML::Runtime::Model::Pfa::PfaContext ^ ctx);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Platform::String ^ EnsureHasChars(Microsoft::ML::Runtime::Model::Pfa::PfaContext ^ ctx);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.Pfa.PfaContext" RefType="this" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>
            A string -&gt; bool function for determining whether a string has content.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureMul">
      <MemberSignature Language="C#" Value="public static string EnsureMul (this Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx, Newtonsoft.Json.Linq.JToken itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EnsureMul(class Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx, class Newtonsoft.Json.Linq.JToken itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureMul(Microsoft.ML.Runtime.Model.Pfa.PfaContext,Newtonsoft.Json.Linq.JToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnsureMul (ctx As PfaContext, itemType As JToken) As String" />
      <MemberSignature Language="F#" Value="static member EnsureMul : Microsoft.ML.Runtime.Model.Pfa.PfaContext * Newtonsoft.Json.Linq.JToken -&gt; string" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureMul (ctx, itemType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ EnsureMul(Microsoft::ML::Runtime::Model::Pfa::PfaContext ^ ctx, Newtonsoft::Json::Linq::JToken ^ itemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.Pfa.PfaContext" RefType="this" />
        <Parameter Name="itemType" Type="Newtonsoft.Json.Linq.JToken" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="itemType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureNewArray">
      <MemberSignature Language="C#" Value="public static string EnsureNewArray (this Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EnsureNewArray(class Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureNewArray(Microsoft.ML.Runtime.Model.Pfa.PfaContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnsureNewArray (ctx As PfaContext) As String" />
      <MemberSignature Language="F#" Value="static member EnsureNewArray : Microsoft.ML.Runtime.Model.Pfa.PfaContext -&gt; string" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureNewArray ctx" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ EnsureNewArray(Microsoft::ML::Runtime::Model::Pfa::PfaContext ^ ctx);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Platform::String ^ EnsureNewArray(Microsoft::ML::Runtime::Model::Pfa::PfaContext ^ ctx);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.Pfa.PfaContext" RefType="this" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureSub">
      <MemberSignature Language="C#" Value="public static string EnsureSub (this Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx, Newtonsoft.Json.Linq.JToken itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EnsureSub(class Microsoft.ML.Runtime.Model.Pfa.PfaContext ctx, class Newtonsoft.Json.Linq.JToken itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureSub(Microsoft.ML.Runtime.Model.Pfa.PfaContext,Newtonsoft.Json.Linq.JToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnsureSub (ctx As PfaContext, itemType As JToken) As String" />
      <MemberSignature Language="F#" Value="static member EnsureSub : Microsoft.ML.Runtime.Model.Pfa.PfaContext * Newtonsoft.Json.Linq.JToken -&gt; string" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.EnsureSub (ctx, itemType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ EnsureSub(Microsoft::ML::Runtime::Model::Pfa::PfaContext ^ ctx, Newtonsoft::Json::Linq::JToken ^ itemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.Pfa.PfaContext" RefType="this" />
        <Parameter Name="itemType" Type="Newtonsoft.Json.Linq.JToken" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="itemType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static Newtonsoft.Json.Linq.JObject For (Newtonsoft.Json.Linq.JObject initBlock, Newtonsoft.Json.Linq.JObject whileBlock, Newtonsoft.Json.Linq.JObject stepBlock, Newtonsoft.Json.Linq.JObject doBlock);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Newtonsoft.Json.Linq.JObject For(class Newtonsoft.Json.Linq.JObject initBlock, class Newtonsoft.Json.Linq.JObject whileBlock, class Newtonsoft.Json.Linq.JObject stepBlock, class Newtonsoft.Json.Linq.JObject doBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.For(Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.Linq.JObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function For (initBlock As JObject, whileBlock As JObject, stepBlock As JObject, doBlock As JObject) As JObject" />
      <MemberSignature Language="F#" Value="static member For : Newtonsoft.Json.Linq.JObject * Newtonsoft.Json.Linq.JObject * Newtonsoft.Json.Linq.JObject * Newtonsoft.Json.Linq.JObject -&gt; Newtonsoft.Json.Linq.JObject" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.For (initBlock, whileBlock, stepBlock, doBlock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Newtonsoft::Json::Linq::JObject ^ For(Newtonsoft::Json::Linq::JObject ^ initBlock, Newtonsoft::Json::Linq::JObject ^ whileBlock, Newtonsoft::Json::Linq::JObject ^ stepBlock, Newtonsoft::Json::Linq::JObject ^ doBlock);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initBlock" Type="Newtonsoft.Json.Linq.JObject" />
        <Parameter Name="whileBlock" Type="Newtonsoft.Json.Linq.JObject" />
        <Parameter Name="stepBlock" Type="Newtonsoft.Json.Linq.JObject" />
        <Parameter Name="doBlock" Type="Newtonsoft.Json.Linq.JObject" />
      </Parameters>
      <Docs>
        <param name="initBlock">To be added.</param>
        <param name="whileBlock">To be added.</param>
        <param name="stepBlock">To be added.</param>
        <param name="doBlock">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FuncRef">
      <MemberSignature Language="C#" Value="public static Newtonsoft.Json.Linq.JObject FuncRef (string func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Newtonsoft.Json.Linq.JObject FuncRef(string func) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.FuncRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FuncRef (func As String) As JObject" />
      <MemberSignature Language="F#" Value="static member FuncRef : string -&gt; Newtonsoft.Json.Linq.JObject" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.FuncRef func" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Newtonsoft::Json::Linq::JObject ^ FuncRef(System::String ^ func);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="func" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="func">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="If">
      <MemberSignature Language="C#" Value="public static Newtonsoft.Json.Linq.JObject If (Newtonsoft.Json.Linq.JToken condition, Newtonsoft.Json.Linq.JToken thenBlock, Newtonsoft.Json.Linq.JToken elseBlock);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Newtonsoft.Json.Linq.JObject If(class Newtonsoft.Json.Linq.JToken condition, class Newtonsoft.Json.Linq.JToken thenBlock, class Newtonsoft.Json.Linq.JToken elseBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.If(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function If (condition As JToken, thenBlock As JToken, elseBlock As JToken) As JObject" />
      <MemberSignature Language="F#" Value="static member If : Newtonsoft.Json.Linq.JToken * Newtonsoft.Json.Linq.JToken * Newtonsoft.Json.Linq.JToken -&gt; Newtonsoft.Json.Linq.JObject" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.If (condition, thenBlock, elseBlock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Newtonsoft::Json::Linq::JObject ^ If(Newtonsoft::Json::Linq::JToken ^ condition, Newtonsoft::Json::Linq::JToken ^ thenBlock, Newtonsoft::Json::Linq::JToken ^ elseBlock);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="Newtonsoft.Json.Linq.JToken" />
        <Parameter Name="thenBlock" Type="Newtonsoft.Json.Linq.JToken" />
        <Parameter Name="elseBlock" Type="Newtonsoft.Json.Linq.JToken" />
      </Parameters>
      <Docs>
        <param name="condition">To be added.</param>
        <param name="thenBlock">To be added.</param>
        <param name="elseBlock">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public static Newtonsoft.Json.Linq.JObject Index (Newtonsoft.Json.Linq.JToken arrayOrMap, Newtonsoft.Json.Linq.JToken key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Newtonsoft.Json.Linq.JObject Index(class Newtonsoft.Json.Linq.JToken arrayOrMap, class Newtonsoft.Json.Linq.JToken key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.Index(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function Index (arrayOrMap As JToken, key As JToken) As JObject" />
      <MemberSignature Language="F#" Value="static member Index : Newtonsoft.Json.Linq.JToken * Newtonsoft.Json.Linq.JToken -&gt; Newtonsoft.Json.Linq.JObject" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.Index (arrayOrMap, key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Newtonsoft::Json::Linq::JObject ^ Index(Newtonsoft::Json::Linq::JToken ^ arrayOrMap, Newtonsoft::Json::Linq::JToken ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayOrMap" Type="Newtonsoft.Json.Linq.JToken" />
        <Parameter Name="key" Type="Newtonsoft.Json.Linq.JToken" />
      </Parameters>
      <Docs>
        <param name="arrayOrMap">To be added.</param>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Param">
      <MemberSignature Language="C#" Value="public static Newtonsoft.Json.Linq.JObject Param (string name, Newtonsoft.Json.Linq.JToken type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Newtonsoft.Json.Linq.JObject Param(string name, class Newtonsoft.Json.Linq.JToken type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.Param(System.String,Newtonsoft.Json.Linq.JToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function Param (name As String, type As JToken) As JObject" />
      <MemberSignature Language="F#" Value="static member Param : string * Newtonsoft.Json.Linq.JToken -&gt; Newtonsoft.Json.Linq.JObject" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.Param (name, type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Newtonsoft::Json::Linq::JObject ^ Param(System::String ^ name, Newtonsoft::Json::Linq::JToken ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="Newtonsoft.Json.Linq.JToken" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="public static Newtonsoft.Json.Linq.JObject String (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Newtonsoft.Json.Linq.JObject String(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.String(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function String (str As String) As JObject" />
      <MemberSignature Language="F#" Value="static member String : string -&gt; Newtonsoft.Json.Linq.JObject" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.String str" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Newtonsoft::Json::Linq::JObject ^ String(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorCase">
      <MemberSignature Language="C#" Value="public static Newtonsoft.Json.Linq.JObject VectorCase (Newtonsoft.Json.Linq.JToken itemType, Newtonsoft.Json.Linq.JToken src, string asMapName, Newtonsoft.Json.Linq.JToken mapDo, string asArrName, Newtonsoft.Json.Linq.JToken arrDo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Newtonsoft.Json.Linq.JObject VectorCase(class Newtonsoft.Json.Linq.JToken itemType, class Newtonsoft.Json.Linq.JToken src, string asMapName, class Newtonsoft.Json.Linq.JToken mapDo, string asArrName, class Newtonsoft.Json.Linq.JToken arrDo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.PfaUtils.VectorCase(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,System.String,Newtonsoft.Json.Linq.JToken,System.String,Newtonsoft.Json.Linq.JToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function VectorCase (itemType As JToken, src As JToken, asMapName As String, mapDo As JToken, asArrName As String, arrDo As JToken) As JObject" />
      <MemberSignature Language="F#" Value="static member VectorCase : Newtonsoft.Json.Linq.JToken * Newtonsoft.Json.Linq.JToken * string * Newtonsoft.Json.Linq.JToken * string * Newtonsoft.Json.Linq.JToken -&gt; Newtonsoft.Json.Linq.JObject" Usage="Microsoft.ML.Runtime.Model.Pfa.PfaUtils.VectorCase (itemType, src, asMapName, mapDo, asArrName, arrDo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Newtonsoft::Json::Linq::JObject ^ VectorCase(Newtonsoft::Json::Linq::JToken ^ itemType, Newtonsoft::Json::Linq::JToken ^ src, System::String ^ asMapName, Newtonsoft::Json::Linq::JToken ^ mapDo, System::String ^ asArrName, Newtonsoft::Json::Linq::JToken ^ arrDo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="Newtonsoft.Json.Linq.JToken" />
        <Parameter Name="src" Type="Newtonsoft.Json.Linq.JToken" />
        <Parameter Name="asMapName" Type="System.String" />
        <Parameter Name="mapDo" Type="Newtonsoft.Json.Linq.JToken" />
        <Parameter Name="asArrName" Type="System.String" />
        <Parameter Name="arrDo" Type="Newtonsoft.Json.Linq.JToken" />
      </Parameters>
      <Docs>
        <param name="itemType">The type of the item in the vector</param>
        <param name="src">The token we are casting</param>
        <param name="asMapName">The name for the token as it will appear in the <paramref name="mapDo" /></param>
        <param name="mapDo">The map case expression</param>
        <param name="asArrName">The name for the token as it will appear in the <paramref name="arrDo" /></param>
        <param name="arrDo">The array case expression</param>
        <summary>
            Builds a "cast" statement to the two vector types.
            </summary>
        <returns>The cast/case expression</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>