<Type Name="IDistCanSavePfa" FullName="Microsoft.ML.Runtime.Model.Pfa.IDistCanSavePfa">
  <TypeSignature Language="C#" Value="public interface IDistCanSavePfa : Microsoft.ML.Runtime.Data.IValueMapperDist, Microsoft.ML.Runtime.Model.Pfa.ISingleCanSavePfa" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDistCanSavePfa implements class Microsoft.ML.Runtime.Data.IValueMapper, class Microsoft.ML.Runtime.Data.IValueMapperDist, class Microsoft.ML.Runtime.Model.Pfa.ICanSavePfa, class Microsoft.ML.Runtime.Model.Pfa.ISingleCanSavePfa" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.Model.Pfa.IDistCanSavePfa" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDistCanSavePfa&#xA;Implements ISingleCanSavePfa, IValueMapperDist" />
  <TypeSignature Language="F#" Value="type IDistCanSavePfa = interface&#xA;    interface ISingleCanSavePfa&#xA;    interface ICanSavePfa&#xA;    interface IValueMapperDist&#xA;    interface IValueMapper" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Data.IValueMapperDist</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.Runtime.Model.Pfa.ISingleCanSavePfa</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            For simple mappers. Intended to be used for <see cref="T:Microsoft.ML.Runtime.Data.IValueMapperDist" />
            instances.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="SaveAsPfa">
      <MemberSignature Language="C#" Value="public void SaveAsPfa (Microsoft.ML.Runtime.Model.Pfa.BoundPfaContext ctx, Newtonsoft.Json.Linq.JToken input, string score, out Newtonsoft.Json.Linq.JToken scoreToken, string prob, out Newtonsoft.Json.Linq.JToken probToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAsPfa(class Microsoft.ML.Runtime.Model.Pfa.BoundPfaContext ctx, class Newtonsoft.Json.Linq.JToken input, string score, [out] class Newtonsoft.Json.Linq.JToken&amp; scoreToken, string prob, [out] class Newtonsoft.Json.Linq.JToken&amp; probToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.Model.Pfa.IDistCanSavePfa.SaveAsPfa(Microsoft.ML.Runtime.Model.Pfa.BoundPfaContext,Newtonsoft.Json.Linq.JToken,System.String,Newtonsoft.Json.Linq.JToken@,System.String,Newtonsoft.Json.Linq.JToken@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAsPfa (ctx As BoundPfaContext, input As JToken, score As String, ByRef scoreToken As JToken, prob As String, ByRef probToken As JToken)" />
      <MemberSignature Language="F#" Value="abstract member SaveAsPfa : Microsoft.ML.Runtime.Model.Pfa.BoundPfaContext * Newtonsoft.Json.Linq.JToken * string *  * string *  -&gt; unit" Usage="iDistCanSavePfa.SaveAsPfa (ctx, input, score, scoreToken, prob, probToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Runtime.Model.Pfa.BoundPfaContext" />
        <Parameter Name="input" Type="Newtonsoft.Json.Linq.JToken" />
        <Parameter Name="score" Type="System.String" />
        <Parameter Name="scoreToken" Type="Newtonsoft.Json.Linq.JToken&amp;" RefType="out" />
        <Parameter Name="prob" Type="System.String" />
        <Parameter Name="probToken" Type="Newtonsoft.Json.Linq.JToken&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ctx">The PFA context</param>
        <param name="input">The PFA token representing the input. In nearly all cases this will
            be the name of the variable holding the features array.</param>
        <param name="score">The name of the column where the implementing method should
            save the expression, through <see cref="M:Microsoft.ML.Runtime.Model.Pfa.BoundPfaContext.DeclareVar(System.String,Newtonsoft.Json.Linq.JToken)" />,
            or if <c>null</c></param>
        <param name="scoreToken"></param>
        <param name="prob">Similar to <paramref name="score" />, except the probability expression.</param>
        <param name="probToken"></param>
        <summary>
            The call for distribution predictors. Unlike <see cref="M:Microsoft.ML.Runtime.Model.Pfa.ISingleCanSavePfa.SaveAsPfa(Microsoft.ML.Runtime.Model.Pfa.BoundPfaContext,Newtonsoft.Json.Linq.JToken)" />,
            this method requires this method to handle the declaration of the variables for their
            outputs, into the names <paramref name="score" /> and <paramref name="prob" /> provided.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>