<Type Name="EnsembleModelParametersBase&lt;TPredictor,TOutput&gt;" FullName="Microsoft.ML.Ensemble.EnsembleModelParametersBase&lt;TPredictor,TOutput&gt;">
  <TypeSignature Language="C#" Value="public abstract class EnsembleModelParametersBase&lt;TPredictor,TOutput&gt; : Microsoft.ML.Internal.Internallearn.ModelParametersBase&lt;TOutput&gt;, Microsoft.ML.IPredictorProducing&lt;TOutput&gt; where TPredictor : class, IPredictorProducing&lt;TOutput&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EnsembleModelParametersBase`2&lt;class (class Microsoft.ML.IPredictorProducing`1&lt;!TOutput&gt;) TPredictor, TOutput&gt; extends Microsoft.ML.Internal.Internallearn.ModelParametersBase`1&lt;!TOutput&gt; implements class Microsoft.ML.IPredictor, class Microsoft.ML.IPredictorProducing`1&lt;!TOutput&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Ensemble.EnsembleModelParametersBase`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EnsembleModelParametersBase(Of TPredictor, TOutput)&#xA;Inherits ModelParametersBase(Of TOutput)&#xA;Implements IPredictorProducing(Of TOutput)" />
  <TypeSignature Language="F#" Value="type EnsembleModelParametersBase&lt;'Predictor, 'Output (requires 'Predictor : null and 'Predictor :&gt; IPredictorProducing&lt;'Output&gt;)&gt; = class&#xA;    inherit ModelParametersBase&lt;'Output&gt;&#xA;    interface IPredictorProducing&lt;'Output&gt;&#xA;    interface IPredictor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Ensemble</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TPredictor">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
        <InterfaceName>Microsoft.ML.IPredictorProducing&lt;TOutput&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TOutput" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.Internal.Internallearn.ModelParametersBase&lt;TOutput&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">TOutput</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.IPredictor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.IPredictorProducing&lt;TOutput&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TPredictor">To be added.</typeparam>
    <typeparam name="TOutput">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EnsembleModelParametersBase (Microsoft.ML.IHostEnvironment env, string name, Microsoft.ML.Model.ModelLoadContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, string name, class Microsoft.ML.Model.ModelLoadContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Ensemble.EnsembleModelParametersBase`2.#ctor(Microsoft.ML.IHostEnvironment,System.String,Microsoft.ML.Model.ModelLoadContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (env As IHostEnvironment, name As String, ctx As ModelLoadContext)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Ensemble.EnsembleModelParametersBase&lt;'Predictor, 'Output (requires 'Predictor : null and 'Predictor :&gt; Microsoft.ML.IPredictorProducing&lt;'Output&gt;)&gt; : Microsoft.ML.IHostEnvironment * string * Microsoft.ML.Model.ModelLoadContext -&gt; Microsoft.ML.Ensemble.EnsembleModelParametersBase&lt;'Predictor, 'Output (requires 'Predictor : null and 'Predictor :&gt; Microsoft.ML.IPredictorProducing&lt;'Output&gt;)&gt;" Usage="new Microsoft.ML.Ensemble.EnsembleModelParametersBase&lt;'Predictor, 'Output (requires 'Predictor : null and 'Predictor :&gt; Microsoft.ML.IPredictorProducing&lt;'Output&gt;)&gt; (env, name, ctx)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Ensemble</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ctx" Type="Microsoft.ML.Model.ModelLoadContext" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="name">To be added.</param>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combiner">
      <MemberSignature Language="C#" Value="protected readonly Microsoft.ML.Ensemble.OutputCombiners.IOutputCombiner&lt;TOutput&gt; Combiner;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class Microsoft.ML.Ensemble.OutputCombiners.IOutputCombiner`1&lt;!TOutput&gt; Combiner" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Ensemble.EnsembleModelParametersBase`2.Combiner" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Combiner As IOutputCombiner(Of TOutput) " />
      <MemberSignature Language="F#" Value="val mutable Combiner : Microsoft.ML.Ensemble.OutputCombiners.IOutputCombiner&lt;'Output&gt;" Usage="Microsoft.ML.Ensemble.EnsembleModelParametersBase&lt;'Predictor, 'Output (requires 'Predictor : null and 'Predictor :&gt; Microsoft.ML.IPredictorProducing&lt;'Output&gt;)&gt;.Combiner" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Ensemble</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Ensemble.OutputCombiners.IOutputCombiner&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Models">
      <MemberSignature Language="C#" Value="protected readonly Microsoft.ML.Ensemble.FeatureSubsetModel&lt;TPredictor&gt;[] Models;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class Microsoft.ML.Ensemble.FeatureSubsetModel`1&lt;!TPredictor&gt;[] Models" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Ensemble.EnsembleModelParametersBase`2.Models" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Models As FeatureSubsetModel(Of TPredictor)() " />
      <MemberSignature Language="F#" Value="val mutable Models : Microsoft.ML.Ensemble.FeatureSubsetModel&lt;'Predictor (requires 'Predictor : null and 'Predictor :&gt; Microsoft.ML.IPredictorProducing&lt;'Output&gt;)&gt;[]" Usage="Microsoft.ML.Ensemble.EnsembleModelParametersBase&lt;'Predictor, 'Output (requires 'Predictor : null and 'Predictor :&gt; Microsoft.ML.IPredictorProducing&lt;'Output&gt;)&gt;.Models" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Ensemble</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Ensemble.FeatureSubsetModel&lt;TPredictor&gt;[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Weights">
      <MemberSignature Language="C#" Value="protected readonly float[] Weights;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly float32[] Weights" />
      <MemberSignature Language="DocId" Value="F:Microsoft.ML.Ensemble.EnsembleModelParametersBase`2.Weights" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Weights As Single() " />
      <MemberSignature Language="F#" Value="val mutable Weights : single[]" Usage="Microsoft.ML.Ensemble.EnsembleModelParametersBase&lt;'Predictor, 'Output (requires 'Predictor : null and 'Predictor :&gt; Microsoft.ML.IPredictorProducing&lt;'Output&gt;)&gt;.Weights" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Ensemble</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>