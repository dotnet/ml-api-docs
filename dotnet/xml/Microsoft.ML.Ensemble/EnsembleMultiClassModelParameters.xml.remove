<Type Name="EnsembleMultiClassModelParameters" FullName="Microsoft.ML.Ensemble.EnsembleMultiClassModelParameters">
  <TypeSignature Language="C#" Value="public sealed class EnsembleMultiClassModelParameters : Microsoft.ML.Ensemble.EnsembleModelParametersBase&lt;Microsoft.ML.IPredictorProducing&lt;Microsoft.ML.Data.VBuffer&lt;float&gt;&gt;,Microsoft.ML.Data.VBuffer&lt;float&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EnsembleMultiClassModelParameters extends Microsoft.ML.Ensemble.EnsembleModelParametersBase`2&lt;class Microsoft.ML.IPredictorProducing`1&lt;valuetype Microsoft.ML.Data.VBuffer`1&lt;float32&gt;&gt;, valuetype Microsoft.ML.Data.VBuffer`1&lt;float32&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Ensemble.EnsembleMultiClassModelParameters" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EnsembleMultiClassModelParameters&#xA;Inherits EnsembleModelParametersBase(Of IPredictorProducing(Of VBuffer(Of Single)), VBuffer(Of Single))" />
  <TypeSignature Language="F#" Value="type EnsembleMultiClassModelParameters = class&#xA;    inherit EnsembleModelParametersBase&lt;IPredictorProducing&lt;VBuffer&lt;single&gt;&gt;, VBuffer&lt;single&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Ensemble</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Ensemble.EnsembleModelParametersBase&lt;Microsoft.ML.IPredictorProducing&lt;Microsoft.ML.Data.VBuffer&lt;System.Single&gt;&gt;,Microsoft.ML.Data.VBuffer&lt;System.Single&gt;&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TPredictor">Microsoft.ML.IPredictorProducing&lt;Microsoft.ML.Data.VBuffer&lt;System.Single&gt;&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TOutput">Microsoft.ML.Data.VBuffer&lt;System.Single&gt;</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnsembleMultiClassModelParameters (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Ensemble.FeatureSubsetModel&lt;Microsoft.ML.IPredictorProducing&lt;Microsoft.ML.Data.VBuffer&lt;float&gt;&gt;&gt;[] models, Microsoft.ML.Ensemble.OutputCombiners.IMultiClassOutputCombiner combiner, float[] weights = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Ensemble.FeatureSubsetModel`1&lt;class Microsoft.ML.IPredictorProducing`1&lt;valuetype Microsoft.ML.Data.VBuffer`1&lt;float32&gt;&gt;&gt;[] models, class Microsoft.ML.Ensemble.OutputCombiners.IMultiClassOutputCombiner combiner, float32[] weights) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Ensemble.EnsembleMultiClassModelParameters.#ctor(Microsoft.ML.IHostEnvironment,Microsoft.ML.Ensemble.FeatureSubsetModel{Microsoft.ML.IPredictorProducing{Microsoft.ML.Data.VBuffer{System.Single}}}[],Microsoft.ML.Ensemble.OutputCombiners.IMultiClassOutputCombiner,System.Single[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, models As FeatureSubsetModel(Of IPredictorProducing(Of VBuffer(Of Single)))(), combiner As IMultiClassOutputCombiner, Optional weights As Single() = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Ensemble.EnsembleMultiClassModelParameters : Microsoft.ML.IHostEnvironment * Microsoft.ML.Ensemble.FeatureSubsetModel&lt;Microsoft.ML.IPredictorProducing&lt;Microsoft.ML.Data.VBuffer&lt;single&gt;&gt;&gt;[] * Microsoft.ML.Ensemble.OutputCombiners.IMultiClassOutputCombiner * single[] -&gt; Microsoft.ML.Ensemble.EnsembleMultiClassModelParameters" Usage="new Microsoft.ML.Ensemble.EnsembleMultiClassModelParameters (env, models, combiner, weights)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Ensemble</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="models" Type="Microsoft.ML.Ensemble.FeatureSubsetModel&lt;Microsoft.ML.IPredictorProducing&lt;Microsoft.ML.Data.VBuffer&lt;System.Single&gt;&gt;&gt;[]" />
        <Parameter Name="combiner" Type="Microsoft.ML.Ensemble.OutputCombiners.IMultiClassOutputCombiner" />
        <Parameter Name="weights" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="env">The host environment.</param>
        <param name="models">Array of sub-models that you want to ensemble together.</param>
        <param name="combiner">The combiner class to use to ensemble the models.</param>
        <param name="weights">The weights assigned to each model to be ensembled.</param>
        <summary>
            Instantiate new ensemble model from existing sub-models.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictionKind">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.PredictionKind PredictionKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.PredictionKind PredictionKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Ensemble.EnsembleMultiClassModelParameters.PredictionKind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PredictionKind As PredictionKind" />
      <MemberSignature Language="F#" Value="member this.PredictionKind : Microsoft.ML.PredictionKind" Usage="Microsoft.ML.Ensemble.EnsembleMultiClassModelParameters.PredictionKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Ensemble</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.PredictionKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
