<Type Name="CmdParser" FullName="Microsoft.ML.Runtime.CommandLine.CmdParser">
  <TypeSignature Language="C#" Value="public sealed class CmdParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CmdParser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Runtime.CommandLine.CmdParser" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CmdParser" />
  <TypeSignature Language="F#" Value="type CmdParser = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Parser for command line arguments.
            
             The parser specification is infered from the instance fields of the object
             specified as the destination of the parse.
             Valid argument types are: int, uint, string, bool, enums
             Also argument types of Array of the above types are also valid.
            
             Error checking options can be controlled by adding a ArgumentAttribute
             to the instance fields of the destination object.
            
             At most one field may be marked with the DefaultArgumentAttribute
             indicating that arguments without a '-' or '/' prefix will be parsed as that argument.
            
             If not specified then the parser will infer default options for parsing each
             instance field. The default long name of the argument is the field name. The
             default short name is the first character of the long name. Long names and explicitly
             specified short names must be unique. Default short names will be used provided that
             the default short name does not conflict with a long name or an explicitly
             specified short name.
            
             Arguments which are array types are collection arguments. Collection
             arguments can be specified multiple times.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ArgumentsUsage">
      <MemberSignature Language="C#" Value="public static string ArgumentsUsage (Microsoft.ML.Runtime.IHostEnvironment env, Type type, object defaults, bool showRsp = false, Nullable&lt;int&gt; columns = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ArgumentsUsage(class Microsoft.ML.Runtime.IHostEnvironment env, class System.Type type, object defaults, bool showRsp, valuetype System.Nullable`1&lt;int32&gt; columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.CommandLine.CmdParser.ArgumentsUsage(Microsoft.ML.Runtime.IHostEnvironment,System.Type,System.Object,System.Boolean,System.Nullable{System.Int32})" />
      <MemberSignature Language="F#" Value="static member ArgumentsUsage : Microsoft.ML.Runtime.IHostEnvironment * Type * obj * bool * Nullable&lt;int&gt; -&gt; string" Usage="Microsoft.ML.Runtime.CommandLine.CmdParser.ArgumentsUsage (env, type, defaults, showRsp, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaults" Type="System.Object" />
        <Parameter Name="showRsp" Type="System.Boolean" />
        <Parameter Name="columns" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="env"> The host environment. </param>
        <param name="type"> The type of the arguments to display usage for. </param>
        <param name="defaults"> The default values. </param>
        <param name="showRsp"> Whether to show the @file item. </param>
        <param name="columns"> The number of columns to format the output to. </param>
        <summary>
            Returns a Usage string for command line argument parsing.
            Use ArgumentAttributes to control parsing behaviour.
            </summary>
        <returns> Printable string containing a user friendly description of command line arguments. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CombineSettings">
      <MemberSignature Language="C#" Value="public static string CombineSettings (string[] settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CombineSettings(string[] settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.CommandLine.CmdParser.CombineSettings(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CombineSettings (settings As String()) As String" />
      <MemberSignature Language="F#" Value="static member CombineSettings : string[] -&gt; string" Usage="Microsoft.ML.Runtime.CommandLine.CmdParser.CombineSettings settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="settings">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateComponentFactory">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.CommandLine.ICommandLineComponentFactory CreateComponentFactory (Type factoryType, Type signatureType, string settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.CommandLine.ICommandLineComponentFactory CreateComponentFactory(class System.Type factoryType, class System.Type signatureType, string settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.CommandLine.CmdParser.CreateComponentFactory(System.Type,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComponentFactory (factoryType As Type, signatureType As Type, settings As String) As ICommandLineComponentFactory" />
      <MemberSignature Language="F#" Value="static member CreateComponentFactory : Type * Type * string -&gt; Microsoft.ML.Runtime.CommandLine.ICommandLineComponentFactory" Usage="Microsoft.ML.Runtime.CommandLine.CmdParser.CreateComponentFactory (factoryType, signatureType, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.CommandLine.ICommandLineComponentFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factoryType" Type="System.Type" />
        <Parameter Name="signatureType" Type="System.Type" />
        <Parameter Name="settings" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="factoryType">To be added.</param>
        <param name="signatureType">To be added.</param>
        <param name="settings">To be added.</param>
        <summary>
            Creates an ICommandLineComponentFactory given the factory type, signature type,
            and a command line string.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArgInfo">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Runtime.CommandLine.CmdParser.ArgInfo GetArgInfo (Type type, object defaults);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Runtime.CommandLine.CmdParser/ArgInfo GetArgInfo(class System.Type type, object defaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.CommandLine.CmdParser.GetArgInfo(System.Type,System.Object)" />
      <MemberSignature Language="F#" Value="static member GetArgInfo : Type * obj -&gt; Microsoft.ML.Runtime.CommandLine.CmdParser.ArgInfo" Usage="Microsoft.ML.Runtime.CommandLine.CmdParser.GetArgInfo (type, defaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Runtime.CommandLine.CmdParser+ArgInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaults" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="defaults">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConsoleWindowWidth">
      <MemberSignature Language="C#" Value="public static int GetConsoleWindowWidth ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetConsoleWindowWidth() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.CommandLine.CmdParser.GetConsoleWindowWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConsoleWindowWidth () As Integer" />
      <MemberSignature Language="F#" Value="static member GetConsoleWindowWidth : unit -&gt; int" Usage="Microsoft.ML.Runtime.CommandLine.CmdParser.GetConsoleWindowWidth " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Fix the window width for the Core build to remove the kernel32.dll dependency.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSettingPairs">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; GetSettingPairs (Microsoft.ML.Runtime.IHostEnvironment env, object values, Microsoft.ML.Runtime.CommandLine.SettingsFlags flags = Microsoft.ML.Runtime.CommandLine.SettingsFlags.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; GetSettingPairs(class Microsoft.ML.Runtime.IHostEnvironment env, object values, valuetype Microsoft.ML.Runtime.CommandLine.SettingsFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.CommandLine.CmdParser.GetSettingPairs(Microsoft.ML.Runtime.IHostEnvironment,System.Object,Microsoft.ML.Runtime.CommandLine.SettingsFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSettingPairs (env As IHostEnvironment, values As Object, Optional flags As SettingsFlags = Microsoft.ML.Runtime.CommandLine.SettingsFlags.None) As IEnumerable(Of KeyValuePair(Of String, String))" />
      <MemberSignature Language="F#" Value="static member GetSettingPairs : Microsoft.ML.Runtime.IHostEnvironment * obj * Microsoft.ML.Runtime.CommandLine.SettingsFlags -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt;" Usage="Microsoft.ML.Runtime.CommandLine.CmdParser.GetSettingPairs (env, values, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="values" Type="System.Object" />
        <Parameter Name="flags" Type="Microsoft.ML.Runtime.CommandLine.SettingsFlags" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="values">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSettingPairs">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; GetSettingPairs (Microsoft.ML.Runtime.IHostEnvironment env, object values, object defaults, Microsoft.ML.Runtime.CommandLine.SettingsFlags flags = Microsoft.ML.Runtime.CommandLine.SettingsFlags.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; GetSettingPairs(class Microsoft.ML.Runtime.IHostEnvironment env, object values, object defaults, valuetype Microsoft.ML.Runtime.CommandLine.SettingsFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.CommandLine.CmdParser.GetSettingPairs(Microsoft.ML.Runtime.IHostEnvironment,System.Object,System.Object,Microsoft.ML.Runtime.CommandLine.SettingsFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSettingPairs (env As IHostEnvironment, values As Object, defaults As Object, Optional flags As SettingsFlags = Microsoft.ML.Runtime.CommandLine.SettingsFlags.None) As IEnumerable(Of KeyValuePair(Of String, String))" />
      <MemberSignature Language="F#" Value="static member GetSettingPairs : Microsoft.ML.Runtime.IHostEnvironment * obj * obj * Microsoft.ML.Runtime.CommandLine.SettingsFlags -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt;" Usage="Microsoft.ML.Runtime.CommandLine.CmdParser.GetSettingPairs (env, values, defaults, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="values" Type="System.Object" />
        <Parameter Name="defaults" Type="System.Object" />
        <Parameter Name="flags" Type="Microsoft.ML.Runtime.CommandLine.SettingsFlags" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="values">To be added.</param>
        <param name="defaults">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSettings">
      <MemberSignature Language="C#" Value="public static string GetSettings (Microsoft.ML.Runtime.IExceptionContext ectx, object values, object defaults, Microsoft.ML.Runtime.CommandLine.SettingsFlags flags = Microsoft.ML.Runtime.CommandLine.SettingsFlags.Default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetSettings(class Microsoft.ML.Runtime.IExceptionContext ectx, object values, object defaults, valuetype Microsoft.ML.Runtime.CommandLine.SettingsFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.CommandLine.CmdParser.GetSettings(Microsoft.ML.Runtime.IExceptionContext,System.Object,System.Object,Microsoft.ML.Runtime.CommandLine.SettingsFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSettings (ectx As IExceptionContext, values As Object, defaults As Object, Optional flags As SettingsFlags = Microsoft.ML.Runtime.CommandLine.SettingsFlags.Default) As String" />
      <MemberSignature Language="F#" Value="static member GetSettings : Microsoft.ML.Runtime.IExceptionContext * obj * obj * Microsoft.ML.Runtime.CommandLine.SettingsFlags -&gt; string" Usage="Microsoft.ML.Runtime.CommandLine.CmdParser.GetSettings (ectx, values, defaults, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ectx" Type="Microsoft.ML.Runtime.IExceptionContext" />
        <Parameter Name="values" Type="System.Object" />
        <Parameter Name="defaults" Type="System.Object" />
        <Parameter Name="flags" Type="Microsoft.ML.Runtime.CommandLine.SettingsFlags" />
      </Parameters>
      <Docs>
        <param name="ectx">To be added.</param>
        <param name="values">To be added.</param>
        <param name="defaults">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNumericType">
      <MemberSignature Language="C#" Value="public static bool IsNumericType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumericType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.CommandLine.CmdParser.IsNumericType(System.Type)" />
      <MemberSignature Language="F#" Value="static member IsNumericType : Type -&gt; bool" Usage="Microsoft.ML.Runtime.CommandLine.CmdParser.IsNumericType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
            Check whether a certain type is numeric.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LexString">
      <MemberSignature Language="C#" Value="public static bool LexString (string text, out string[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool LexString(string text, [out] string[]&amp; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.CommandLine.CmdParser.LexString(System.String,System.String[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LexString (text As String, ByRef arguments As String()) As Boolean" />
      <MemberSignature Language="F#" Value="static member LexString : string *  -&gt; bool" Usage="Microsoft.ML.Runtime.CommandLine.CmdParser.LexString (text, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="arguments" Type="System.String[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="arguments">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseArguments">
      <MemberSignature Language="C#" Value="public static bool ParseArguments (Microsoft.ML.Runtime.IHostEnvironment env, string settings, object destination);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ParseArguments(class Microsoft.ML.Runtime.IHostEnvironment env, string settings, object destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.CommandLine.CmdParser.ParseArguments(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseArguments (env As IHostEnvironment, settings As String, destination As Object) As Boolean" />
      <MemberSignature Language="F#" Value="static member ParseArguments : Microsoft.ML.Runtime.IHostEnvironment * string * obj -&gt; bool" Usage="Microsoft.ML.Runtime.CommandLine.CmdParser.ParseArguments (env, settings, destination)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="settings" Type="System.String" />
        <Parameter Name="destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="env"> The host environment</param>
        <param name="settings">The command line</param>
        <param name="destination">The object to receive the options</param>
        <summary>
            Parses a command line. This assumes that the exe name has been stripped off.
            Errors are output on Console.Error.
            Use ArgumentAttributes to control parsing behaviour.
            </summary>
        <returns>true if no errors were detected</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseArguments">
      <MemberSignature Language="C#" Value="public static bool ParseArguments (Microsoft.ML.Runtime.IHostEnvironment env, string settings, object destination, Microsoft.ML.Runtime.CommandLine.ErrorReporter reporter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ParseArguments(class Microsoft.ML.Runtime.IHostEnvironment env, string settings, object destination, class Microsoft.ML.Runtime.CommandLine.ErrorReporter reporter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.CommandLine.CmdParser.ParseArguments(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.Object,Microsoft.ML.Runtime.CommandLine.ErrorReporter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseArguments (env As IHostEnvironment, settings As String, destination As Object, reporter As ErrorReporter) As Boolean" />
      <MemberSignature Language="F#" Value="static member ParseArguments : Microsoft.ML.Runtime.IHostEnvironment * string * obj * Microsoft.ML.Runtime.CommandLine.ErrorReporter -&gt; bool" Usage="Microsoft.ML.Runtime.CommandLine.CmdParser.ParseArguments (env, settings, destination, reporter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="settings" Type="System.String" />
        <Parameter Name="destination" Type="System.Object" />
        <Parameter Name="reporter" Type="Microsoft.ML.Runtime.CommandLine.ErrorReporter" />
      </Parameters>
      <Docs>
        <param name="env"> The host environment</param>
        <param name="settings">The command line</param>
        <param name="destination">The object to receive the options</param>
        <param name="reporter"> The destination for parse errors. </param>
        <summary>
            Parses a command line. This assumes that the exe name has been stripped off.
            Use ArgumentAttributes to control parsing behaviour.
            </summary>
        <returns>true if no errors were detected</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseArguments">
      <MemberSignature Language="C#" Value="public static bool ParseArguments (Microsoft.ML.Runtime.IHostEnvironment env, string settings, object destination, out string helpText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ParseArguments(class Microsoft.ML.Runtime.IHostEnvironment env, string settings, object destination, [out] string&amp; helpText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.CommandLine.CmdParser.ParseArguments(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseArguments (env As IHostEnvironment, settings As String, destination As Object, ByRef helpText As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member ParseArguments : Microsoft.ML.Runtime.IHostEnvironment * string * obj *  -&gt; bool" Usage="Microsoft.ML.Runtime.CommandLine.CmdParser.ParseArguments (env, settings, destination, helpText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="settings" Type="System.String" />
        <Parameter Name="destination" Type="System.Object" />
        <Parameter Name="helpText" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="settings">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="helpText">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseArguments">
      <MemberSignature Language="C#" Value="public static bool ParseArguments (Microsoft.ML.Runtime.IHostEnvironment env, string settings, object destination, Microsoft.ML.Runtime.CommandLine.ErrorReporter reporter, out string helpText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ParseArguments(class Microsoft.ML.Runtime.IHostEnvironment env, string settings, object destination, class Microsoft.ML.Runtime.CommandLine.ErrorReporter reporter, [out] string&amp; helpText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.CommandLine.CmdParser.ParseArguments(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.Object,Microsoft.ML.Runtime.CommandLine.ErrorReporter,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseArguments (env As IHostEnvironment, settings As String, destination As Object, reporter As ErrorReporter, ByRef helpText As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member ParseArguments : Microsoft.ML.Runtime.IHostEnvironment * string * obj * Microsoft.ML.Runtime.CommandLine.ErrorReporter *  -&gt; bool" Usage="Microsoft.ML.Runtime.CommandLine.CmdParser.ParseArguments (env, settings, destination, reporter, helpText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="settings" Type="System.String" />
        <Parameter Name="destination" Type="System.Object" />
        <Parameter Name="reporter" Type="Microsoft.ML.Runtime.CommandLine.ErrorReporter" />
        <Parameter Name="helpText" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="settings">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="reporter">To be added.</param>
        <param name="helpText">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseArguments">
      <MemberSignature Language="C#" Value="public static bool ParseArguments (Microsoft.ML.Runtime.IHostEnvironment env, string settings, object destination, Type destinationType, Microsoft.ML.Runtime.CommandLine.ErrorReporter reporter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ParseArguments(class Microsoft.ML.Runtime.IHostEnvironment env, string settings, object destination, class System.Type destinationType, class Microsoft.ML.Runtime.CommandLine.ErrorReporter reporter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.CommandLine.CmdParser.ParseArguments(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.Object,System.Type,Microsoft.ML.Runtime.CommandLine.ErrorReporter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseArguments (env As IHostEnvironment, settings As String, destination As Object, destinationType As Type, reporter As ErrorReporter) As Boolean" />
      <MemberSignature Language="F#" Value="static member ParseArguments : Microsoft.ML.Runtime.IHostEnvironment * string * obj * Type * Microsoft.ML.Runtime.CommandLine.ErrorReporter -&gt; bool" Usage="Microsoft.ML.Runtime.CommandLine.CmdParser.ParseArguments (env, settings, destination, destinationType, reporter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.Runtime.IHostEnvironment" />
        <Parameter Name="settings" Type="System.String" />
        <Parameter Name="destination" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
        <Parameter Name="reporter" Type="Microsoft.ML.Runtime.CommandLine.ErrorReporter" />
      </Parameters>
      <Docs>
        <param name="env"> The host environment</param>
        <param name="settings">The command line</param>
        <param name="destination">The object to receive the options</param>
        <param name="destinationType">The type of 'destination'</param>
        <param name="reporter"> The destination for parse errors. </param>
        <summary>
            Parses a command line. This assumes that the exe name has been stripped off.
            Use ArgumentAttributes to control parsing behaviour.
            </summary>
        <returns>true if no errors were detected</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimExePath">
      <MemberSignature Language="C#" Value="public static string TrimExePath (string args, out string exe);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TrimExePath(string args, [out] string&amp; exe) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.CommandLine.CmdParser.TrimExePath(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrimExePath (args As String, ByRef exe As String) As String" />
      <MemberSignature Language="F#" Value="static member TrimExePath : string *  -&gt; string" Usage="Microsoft.ML.Runtime.CommandLine.CmdParser.TrimExePath (args, exe)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String" />
        <Parameter Name="exe" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <param name="exe">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetFirstToken">
      <MemberSignature Language="C#" Value="public static bool TryGetFirstToken (string text, out string token, out string rest);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetFirstToken(string text, [out] string&amp; token, [out] string&amp; rest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Runtime.CommandLine.CmdParser.TryGetFirstToken(System.String,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetFirstToken (text As String, ByRef token As String, ByRef rest As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryGetFirstToken : string *  *  -&gt; bool" Usage="Microsoft.ML.Runtime.CommandLine.CmdParser.TryGetFirstToken (text, token, rest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="token" Type="System.String" RefType="out" />
        <Parameter Name="rest" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="token">To be added.</param>
        <param name="rest">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>